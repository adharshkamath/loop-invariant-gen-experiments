{
    "logs": {
        "file": "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/count_up_down_true.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main()\n{\n  unsigned int n = unknown_uint();\n  unsigned int x=n, y=0;\n  while(x>0)\n  {\n    x--;\n    y++;\n  }\n  {;\n//@ assert(y==n);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant x == y - 1 ==> (x >= 0 && y > 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x + y == n;\nloop invariant x + 1 >= y;\nloop invariant x + 2 >= y;\nloop invariant x + 3 >= y;\nloop invariant x + 4 >= y;\nloop invariant x + 5 >= y;\nloop invariant x + 6 >= y;\nloop invariant x + 7 >= y;\nloop invariant x + 8 >= y;\nloop invariant x + 9 >= y;\nloop invariant x + 10 >= y;\nloop invariant x + 11 >= y;\nloop invariant x + 12 >= y;\nloop invariant x + 13 >= y;\nloop invariant x + 14 >= y;\nloop invariant x + 15 >= y;\nloop invariant x + 16 >= y;\nloop invariant x + 17 >= y;\nloop invariant x + 18 >= y;\nloop invariant x + 19 >= y;\nloop invariant x + 20 >= y;\nloop invariant x + 21 >= y;\nloop invariant x + 22 >= y;\nloop invariant x + 23 >= y;\nloop invariant x + 24 >= y;\nloop invariant x + 25 >= y;\nloop invariant x + 26 >= y;\nloop invariant x + 27 >= y;\nloop invariant x + 28 >= y;\nloop invariant x + 29 >= y;\nloop invariant x + 30 >= y;\nloop invariant x + 31 >= y;\nloop invariant x + 32 >= y;\nloop invariant x + 33 >= y;\nloop invariant x + 34 >= y;\nloop invariant x + 35 >= y;\nloop invariant x + 36 >= y;\nloop invariant x + 37 >= y;\nloop invariant x + 38 >= y;\nloop invariant x + 39 >= y;\nloop invariant x + 40 >= y;\nloop invariant x + 41 >= y;\nloop invariant x + 42 >= y;\nloop invariant x + 43 >= y;\nloop invariant x + 44 >= y;\nloop invariant x + 45 >= y;\nloop invariant x + 46 >= y;\nloop invariant x + 47 >= y;\nloop invariant x + 48 >= y;\nloop invariant x + 49 >= y;\nloop invariant x + 50 >= y;\nloop invariant x + 51 >= y;\nloop invariant x + 52 >= y;\nloop invariant x + 53 >= y;\nloop invariant x + 54 >= y;\nloop invariant x + 55 >= y;\nloop invariant x + 56 >= y;\nloop invariant x + 57 >= y;\nloop invariant x + 58 >= y;\nloop invariant x + 59 >= y;\nloop invariant x + 60 >= y;\nloop invariant x + 61 >= y;\nloop invariant x + 62 >= y;\nloop invariant x + 63 >= y;\nloop invariant x + 64 >= y;\nloop invariant x + 65 >= y;\nloop invariant x + 66 >= y;\nloop invariant x + 67 >= y;\nloop invariant x + 68 >= y;\nloop invariant x + 69 >= y;\nloop invariant x + 70 >= y;\nloop invariant x + 71 >= y;\nloop invariant x + 72 >= y;\nloop invariant x + 73 >= y;\nloop invariant x + 74 >= y;\nloop invariant x + 75 >= y;\nloop invariant x + 76 >= y;\nloop invariant x + 77 >= y;\nloop invariant x + 78 >= y;\nloop invariant x + 79 >= y;\nloop invariant x + 80 >= y;\nloop invariant x + 81 >= y;\nloop invariant x + 82 >= y;\nloop invariant x + 83 >= y;\nloop invariant x + 84 >= y;\nloop invariant x + 85 >= y;\nloop invariant x + 86 >= y;\nloop invariant x + 87 >= y;\nloop invariant x + 88 >= y;\nloop invariant x + 89 >= y;\nloop invariant x + 90 >= y;\nloop invariant x + 91 >= y;\nloop invariant x + 92 >= y;\nloop invariant x + 93 >= y;\nloop invariant x + 94 >= y;\nloop invariant x + 95 >= y;\nloop invariant x + 96 >= y;\nloop invariant x + 97 >= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant (x > 0 ==> y < n);\nloop invariant (x == 0 ==> y == n);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n;\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x + y == n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x + y == n;\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x == n - y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant y == n - x;\nloop invariant (x > 0) ==> (y < n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y < 2*n);\nloop invariant (x > 0) ==> (x + y > 0);\nloop invariant (x > 0) ==> (x + y <= 2*n);\nloop invariant (x > 0) ==> (x + y >= 0);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x + y == n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= n;\nloop invariant n == x;\nloop invariant n == y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n <= y <= x;\nloop invariant y <= n + 1;\nloop invariant x <= n;\nloop invariant x + y == n + 1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= y <= n;\nloop invariant 0 <= x <= n;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x + y == n;\nloop invariant x >= 0;\nloop invariant y >= 0;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant x == y - 1 ==> (x >= 0 && y > 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main()\n{\n  unsigned int n = unknown_uint();\n  unsigned int x=n, y=0;\n  /*@\nloop invariant i1: 0 <= x <= n;\nloop invariant i2: 0 <= y <= n;\nloop invariant i3: x + y == n;\nloop invariant i4: x == n - y;\nloop invariant i5: x == y - 1 ==> (x >= 0 && y > 0);\n*/\nwhile(x>0)\n  {\n    x--;\n    y++;\n  }\n  {;\n//@ assert(y==n);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 97,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x + y == n;\nloop invariant x + 1 >= y;\nloop invariant x + 2 >= y;\nloop invariant x + 3 >= y;\nloop invariant x + 4 >= y;\nloop invariant x + 5 >= y;\nloop invariant x + 6 >= y;\nloop invariant x + 7 >= y;\nloop invariant x + 8 >= y;\nloop invariant x + 9 >= y;\nloop invariant x + 10 >= y;\nloop invariant x + 11 >= y;\nloop invariant x + 12 >= y;\nloop invariant x + 13 >= y;\nloop invariant x + 14 >= y;\nloop invariant x + 15 >= y;\nloop invariant x + 16 >= y;\nloop invariant x + 17 >= y;\nloop invariant x + 18 >= y;\nloop invariant x + 19 >= y;\nloop invariant x + 20 >= y;\nloop invariant x + 21 >= y;\nloop invariant x + 22 >= y;\nloop invariant x + 23 >= y;\nloop invariant x + 24 >= y;\nloop invariant x + 25 >= y;\nloop invariant x + 26 >= y;\nloop invariant x + 27 >= y;\nloop invariant x + 28 >= y;\nloop invariant x + 29 >= y;\nloop invariant x + 30 >= y;\nloop invariant x + 31 >= y;\nloop invariant x + 32 >= y;\nloop invariant x + 33 >= y;\nloop invariant x + 34 >= y;\nloop invariant x + 35 >= y;\nloop invariant x + 36 >= y;\nloop invariant x + 37 >= y;\nloop invariant x + 38 >= y;\nloop invariant x + 39 >= y;\nloop invariant x + 40 >= y;\nloop invariant x + 41 >= y;\nloop invariant x + 42 >= y;\nloop invariant x + 43 >= y;\nloop invariant x + 44 >= y;\nloop invariant x + 45 >= y;\nloop invariant x + 46 >= y;\nloop invariant x + 47 >= y;\nloop invariant x + 48 >= y;\nloop invariant x + 49 >= y;\nloop invariant x + 50 >= y;\nloop invariant x + 51 >= y;\nloop invariant x + 52 >= y;\nloop invariant x + 53 >= y;\nloop invariant x + 54 >= y;\nloop invariant x + 55 >= y;\nloop invariant x + 56 >= y;\nloop invariant x + 57 >= y;\nloop invariant x + 58 >= y;\nloop invariant x + 59 >= y;\nloop invariant x + 60 >= y;\nloop invariant x + 61 >= y;\nloop invariant x + 62 >= y;\nloop invariant x + 63 >= y;\nloop invariant x + 64 >= y;\nloop invariant x + 65 >= y;\nloop invariant x + 66 >= y;\nloop invariant x + 67 >= y;\nloop invariant x + 68 >= y;\nloop invariant x + 69 >= y;\nloop invariant x + 70 >= y;\nloop invariant x + 71 >= y;\nloop invariant x + 72 >= y;\nloop invariant x + 73 >= y;\nloop invariant x + 74 >= y;\nloop invariant x + 75 >= y;\nloop invariant x + 76 >= y;\nloop invariant x + 77 >= y;\nloop invariant x + 78 >= y;\nloop invariant x + 79 >= y;\nloop invariant x + 80 >= y;\nloop invariant x + 81 >= y;\nloop invariant x + 82 >= y;\nloop invariant x + 83 >= y;\nloop invariant x + 84 >= y;\nloop invariant x + 85 >= y;\nloop invariant x + 86 >= y;\nloop invariant x + 87 >= y;\nloop invariant x + 88 >= y;\nloop invariant x + 89 >= y;\nloop invariant x + 90 >= y;\nloop invariant x + 91 >= y;\nloop invariant x + 92 >= y;\nloop invariant x + 93 >= y;\nloop invariant x + 94 >= y;\nloop invariant x + 95 >= y;\nloop invariant x + 96 >= y;\nloop invariant x + 97 >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main()\n{\n  unsigned int n = unknown_uint();\n  unsigned int x=n, y=0;\n  /*@\nloop invariant i1: 0 <= x <= n;\nloop invariant i2: x >= 0;\nloop invariant i3: y >= 0;\nloop invariant i4: y <= n;\nloop invariant i5: x + y == n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x>0)\n  {\n    x--;\n    y++;\n  }\n  {;\n//@ assert(y==n);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant (x > 0 ==> y < n);\nloop invariant (x == 0 ==> y == n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main()\n{\n  unsigned int n = unknown_uint();\n  unsigned int x=n, y=0;\n  /*@\nloop invariant i1: 0 <= x <= n;\n\n\n\n*/\nwhile(x>0)\n  {\n    x--;\n    y++;\n  }\n  {;\n//@ assert(y==n);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= n;\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x + y == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main()\n{\n  unsigned int n = unknown_uint();\n  unsigned int x=n, y=0;\n  /*@\nloop invariant i1: 0 <= n;\nloop invariant i2: 0 <= x <= n;\nloop invariant i3: 0 <= y <= n;\nloop invariant i4: x + y == n;\n*/\nwhile(x>0)\n  {\n    x--;\n    y++;\n  }\n  {;\n//@ assert(y==n);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x + y == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main()\n{\n  unsigned int n = unknown_uint();\n  unsigned int x=n, y=0;\n  /*@\nloop invariant i1: 0 <= x <= n;\nloop invariant i2: 0 <= y <= n;\nloop invariant i3: x + y == n;\n*/\nwhile(x>0)\n  {\n    x--;\n    y++;\n  }\n  {;\n//@ assert(y==n);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 158,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main()\n{\n  unsigned int n = unknown_uint();\n  unsigned int x=n, y=0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x>0)\n  {\n    x--;\n    y++;\n  }\n  {;\n//@ assert(y==n);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x == n - y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main()\n{\n  unsigned int n = unknown_uint();\n  unsigned int x=n, y=0;\n  /*@\nloop invariant i1: 0 <= x <= n;\nloop invariant i2: 0 <= y <= n;\nloop invariant i3: x == n - y;\n*/\nwhile(x>0)\n  {\n    x--;\n    y++;\n  }\n  {;\n//@ assert(y==n);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant y == n - x;\nloop invariant (x > 0) ==> (y < n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y < 2*n);\nloop invariant (x > 0) ==> (x + y > 0);\nloop invariant (x > 0) ==> (x + y <= 2*n);\nloop invariant (x > 0) ==> (x + y >= 0);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\nloop invariant (x > 0) ==> (x == n - y);\nloop invariant (x > 0) ==> (y == n - x);\nloop invariant (x > 0) ==> (x + y == n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main()\n{\n  unsigned int n = unknown_uint();\n  unsigned int x=n, y=0;\n  /*@\nloop invariant i1: 0 <= x <= n;\nloop invariant i2: 0 <= y <= n;\nloop invariant i3: x + y == n;\nloop invariant i4: x == n - y;\nloop invariant i5: y == n - x;\nloop invariant i6: (x > 0) ==> (y < n);\nloop invariant i7: (x > 0) ==> (x == n - y);\nloop invariant i8: (x > 0) ==> (y == n - x);\nloop invariant i9: (x > 0) ==> (x + y < 2*n);\nloop invariant i10: (x > 0) ==> (x + y > 0);\nloop invariant i11: (x > 0) ==> (x + y <= 2*n);\nloop invariant i12: (x > 0) ==> (x + y >= 0);\nloop invariant i13: (x > 0) ==> (x + y == n);\n*/\nwhile(x>0)\n  {\n    x--;\n    y++;\n  }\n  {;\n//@ assert(y==n);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x + y == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main()\n{\n  unsigned int n = unknown_uint();\n  unsigned int x=n, y=0;\n  /*@\n\nloop invariant i2: 0 <= y <= n;\nloop invariant i3: x + y == n;\n*/\nwhile(x>0)\n  {\n    x--;\n    y++;\n  }\n  {;\n//@ assert(y==n);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= n;\nloop invariant n == x;\nloop invariant n == y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main()\n{\n  unsigned int n = unknown_uint();\n  unsigned int x=n, y=0;\n  /*@\n\n\n\n*/\nwhile(x>0)\n  {\n    x--;\n    y++;\n  }\n  {;\n//@ assert(y==n);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= n <= y <= x;\nloop invariant y <= n + 1;\nloop invariant x <= n;\nloop invariant x + y == n + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main()\n{\n  unsigned int n = unknown_uint();\n  unsigned int x=n, y=0;\n  /*@\n\n\nloop invariant i3: x <= n;\n\n*/\nwhile(x>0)\n  {\n    x--;\n    y++;\n  }\n  {;\n//@ assert(y==n);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= y <= n;\nloop invariant 0 <= x <= n;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x >= y;\nloop invariant x <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main()\n{\n  unsigned int n = unknown_uint();\n  unsigned int x=n, y=0;\n  /*@\n\nloop invariant i2: 0 <= x <= n;\nloop invariant i3: x + y == n;\n\nloop invariant i5: x <= n;\nloop invariant i6: y <= n;\nloop invariant i7: x >= 0;\nloop invariant i8: y >= 0;\n*/\nwhile(x>0)\n  {\n    x--;\n    y++;\n  }\n  {;\n//@ assert(y==n);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main()\n{\n  unsigned int n = unknown_uint();\n  unsigned int x=n, y=0;\n  /*@\n\n*/\nwhile(x>0)\n  {\n    x--;\n    y++;\n  }\n  {;\n//@ assert(y==n);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant n - y >= 0;\nloop invariant n - y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main()\n{\n  unsigned int n = unknown_uint();\n  unsigned int x=n, y=0;\n  /*@\nloop invariant i1: 0 <= x <= n;\nloop invariant i2: 0 <= y <= n;\nloop invariant i3: x >= 0;\nloop invariant i4: y >= 0;\nloop invariant i5: x + y == n;\nloop invariant i6: x == n - y;\nloop invariant i7: n - y >= 0;\nloop invariant i8: n - y <= n;\nloop invariant i9: y <= n;\nloop invariant i10: x <= n;\n*/\nwhile(x>0)\n  {\n    x--;\n    y++;\n  }\n  {;\n//@ assert(y==n);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x + y == n;\nloop invariant x >= 0;\nloop invariant y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main()\n{\n  unsigned int n = unknown_uint();\n  unsigned int x=n, y=0;\n  /*@\nloop invariant i1: 0 <= x <= n;\nloop invariant i2: 0 <= y <= n;\nloop invariant i3: x + y == n;\nloop invariant i4: x >= 0;\nloop invariant i5: y >= 0;\n*/\nwhile(x>0)\n  {\n    x--;\n    y++;\n  }\n  {;\n//@ assert(y==n);\n}\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 122: unbound logic variable i1. Ignoring loop annotation",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main()\n{\n  unsigned int n = unknown_uint();\n  unsigned int x=n, y=0;\n  /*@\nloop invariant i1: 0 <= x <= n;\nloop invariant i2: 0 <= y <= n;\nloop invariant i3: x + y == n;\nloop invariant i4: x == n - y;\nloop invariant i5: x == y - 1 ==> (x >= 0 && y > 0);\nloop invariant i6: x >= 0;\nloop invariant i7: y >= 0;\nloop invariant i8: y <= n;\nloop invariant i9: x + 1 >= y;\nloop invariant i10: x + 2 >= y;\nloop invariant i11: x + 3 >= y;\nloop invariant i12: x + 4 >= y;\nloop invariant i13: x + 5 >= y;\nloop invariant i14: x + 6 >= y;\nloop invariant i15: x + 7 >= y;\nloop invariant i16: x + 8 >= y;\nloop invariant i17: x + 9 >= y;\nloop invariant i18: x + 10 >= y;\nloop invariant i19: x + 11 >= y;\nloop invariant i20: x + 12 >= y;\nloop invariant i21: x + 13 >= y;\nloop invariant i22: x + 14 >= y;\nloop invariant i23: x + 15 >= y;\nloop invariant i24: x + 16 >= y;\nloop invariant i25: x + 17 >= y;\nloop invariant i26: x + 18 >= y;\nloop invariant i27: x + 19 >= y;\nloop invariant i28: x + 20 >= y;\nloop invariant i29: x + 21 >= y;\nloop invariant i30: x + 22 >= y;\nloop invariant i31: x + 23 >= y;\nloop invariant i32: x + 24 >= y;\nloop invariant i33: x + 25 >= y;\nloop invariant i34: x + 26 >= y;\nloop invariant i35: x + 27 >= y;\nloop invariant i36: x + 28 >= y;\nloop invariant i37: x + 29 >= y;\nloop invariant i38: x + 30 >= y;\nloop invariant i39: x + 31 >= y;\nloop invariant i40: x + 32 >= y;\nloop invariant i41: x + 33 >= y;\nloop invariant i42: x + 34 >= y;\nloop invariant i43: x + 35 >= y;\nloop invariant i44: x + 36 >= y;\nloop invariant i45: x + 37 >= y;\nloop invariant i46: x + 38 >= y;\nloop invariant i47: x + 39 >= y;\nloop invariant i48: x + 40 >= y;\nloop invariant i49: x + 41 >= y;\nloop invariant i50: x + 42 >= y;\nloop invariant i51: x + 43 >= y;\nloop invariant i52: x + 44 >= y;\nloop invariant i53: x + 45 >= y;\nloop invariant i54: x + 46 >= y;\nloop invariant i55: x + 47 >= y;\nloop invariant i56: x + 48 >= y;\nloop invariant i57: x + 49 >= y;\nloop invariant i58: x + 50 >= y;\nloop invariant i59: x + 51 >= y;\nloop invariant i60: x + 52 >= y;\nloop invariant i61: x + 53 >= y;\nloop invariant i62: x + 54 >= y;\nloop invariant i63: x + 55 >= y;\nloop invariant i64: x + 56 >= y;\nloop invariant i65: x + 57 >= y;\nloop invariant i66: x + 58 >= y;\nloop invariant i67: x + 59 >= y;\nloop invariant i68: x + 60 >= y;\nloop invariant i69: x + 61 >= y;\nloop invariant i70: x + 62 >= y;\nloop invariant i71: x + 63 >= y;\nloop invariant i72: x + 64 >= y;\nloop invariant i73: x + 65 >= y;\nloop invariant i74: x + 66 >= y;\nloop invariant i75: x + 67 >= y;\nloop invariant i76: x + 68 >= y;\nloop invariant i77: x + 69 >= y;\nloop invariant i78: x + 70 >= y;\nloop invariant i79: x + 71 >= y;\nloop invariant i80: x + 72 >= y;\nloop invariant i81: x + 73 >= y;\nloop invariant i82: x + 74 >= y;\nloop invariant i83: x + 75 >= y;\nloop invariant i84: x + 76 >= y;\nloop invariant i85: x + 77 >= y;\nloop invariant i86: x + 78 >= y;\nloop invariant i87: x + 79 >= y;\nloop invariant i88: x + 80 >= y;\nloop invariant i89: x + 81 >= y;\nloop invariant i90: x + 82 >= y;\nloop invariant i91: x + 83 >= y;\nloop invariant i92: x + 84 >= y;\nloop invariant i93: x + 85 >= y;\nloop invariant i94: x + 86 >= y;\nloop invariant i95: x + 87 >= y;\nloop invariant i96: x + 88 >= y;\nloop invariant i97: x + 89 >= y;\nloop invariant i98: x + 90 >= y;\nloop invariant i99: x + 91 >= y;\nloop invariant i100: x + 92 >= y;\nloop invariant i101: x + 93 >= y;\nloop invariant i102: x + 94 >= y;\nloop invariant i103: x + 95 >= y;\nloop invariant i104: x + 96 >= y;\nloop invariant i105: x + 97 >= y;\nloop invariant i106: (x > 0 ==> y < n);\nloop invariant i107: (x == 0 ==> y == n);\nloop invariant i108: 0 <= n;\nloop invariant i109: i1;\nloop invariant i110: i2;\nloop invariant i111: i3;\nloop invariant i112: i4;\nloop invariant i113: i5;\nloop invariant i114: i6;\nloop invariant i115: i7;\nloop invariant i116: i8;\nloop invariant i117: i9;\nloop invariant i118: i10;\nloop invariant i119: i11;\nloop invariant i120: i12;\nloop invariant i121: i13;\nloop invariant i122: i14;\nloop invariant i123: i15;\nloop invariant i124: i16;\nloop invariant i125: i17;\nloop invariant i126: i18;\nloop invariant i127: i19;\nloop invariant i128: i20;\nloop invariant i129: i21;\nloop invariant i130: i22;\nloop invariant i131: i23;\nloop invariant i132: i24;\nloop invariant i133: i25;\nloop invariant i134: i26;\nloop invariant i135: i27;\nloop invariant i136: i28;\nloop invariant i137: i29;\nloop invariant i138: i30;\nloop invariant i139: i31;\nloop invariant i140: i32;\nloop invariant i141: i33;\nloop invariant i142: i34;\nloop invariant i143: i35;\nloop invariant i144: i36;\nloop invariant i145: i37;\nloop invariant i146: i38;\nloop invariant i147: i39;\nloop invariant i148: i40;\nloop invariant i149: i41;\nloop invariant i150: i42;\nloop invariant i151: i43;\nloop invariant i152: i44;\nloop invariant i153: i45;\nloop invariant i154: i46;\nloop invariant i155: i47;\nloop invariant i156: i48;\nloop invariant i157: i49;\nloop invariant i158: i50;\nloop invariant i159: i51;\nloop invariant i160: i52;\nloop invariant i161: i53;\nloop invariant i162: i54;\nloop invariant i163: i55;\nloop invariant i164: i56;\nloop invariant i165: i57;\nloop invariant i166: i58;\nloop invariant i167: i59;\nloop invariant i168: i60;\nloop invariant i169: i61;\nloop invariant i170: i62;\nloop invariant i171: i63;\nloop invariant i172: i64;\nloop invariant i173: i65;\nloop invariant i174: i66;\nloop invariant i175: i67;\nloop invariant i176: i68;\nloop invariant i177: i69;\nloop invariant i178: i70;\nloop invariant i179: i71;\nloop invariant i180: i72;\nloop invariant i181: i73;\nloop invariant i182: i74;\nloop invariant i183: i75;\nloop invariant i184: i76;\nloop invariant i185: i77;\nloop invariant i186: i78;\nloop invariant i187: i79;\nloop invariant i188: i80;\nloop invariant i189: i81;\nloop invariant i190: i82;\nloop invariant i191: i83;\nloop invariant i192: i84;\nloop invariant i193: i85;\nloop invariant i194: i86;\nloop invariant i195: i87;\nloop invariant i196: i88;\nloop invariant i197: i89;\nloop invariant i198: i90;\nloop invariant i199: i91;\nloop invariant i200: i92;\nloop invariant i201: i93;\nloop invariant i202: i94;\nloop invariant i203: i95;\nloop invariant i204: i96;\nloop invariant i205: i97;\nloop invariant i206: i98;\nloop invariant i207: i99;\nloop invariant i208: i100;\nloop invariant i209: i101;\nloop invariant i210: i102;\nloop invariant i211: i103;\nloop invariant i212: i104;\nloop invariant i213: i105;\nloop invariant i214: i106;\nloop invariant i215: i107;\nloop invariant i216: i108;\nloop invariant i217: i109;\nloop invariant i218: i110;\nloop invariant i219: i111;\nloop invariant i220: i112;\nloop invariant i221: i113;\nloop invariant i222: i114;\nloop invariant i223: i115;\nloop invariant i224: i116;\nloop invariant i225: i117;\nloop invariant i226: i118;\nloop invariant i227: i119;\nloop invariant i228: i120;\nloop invariant i229: i121;\nloop invariant i230: i122;\nloop invariant i231: i123;\nloop invariant i232: i124;\nloop invariant i233: i125;\nloop invariant i234: i126;\nloop invariant i235: i127;\nloop invariant i236: i128;\nloop invariant i237: i129;\nloop invariant i238: i130;\nloop invariant i239: i131;\nloop invariant i240: i132;\nloop invariant i241: i133;\nloop invariant i242: i134;\nloop invariant i243: i135;\nloop invariant i244: i136;\nloop invariant i245: i137;\nloop invariant i246: i138;\nloop invariant i247: i139;\nloop invariant i248: i140;\nloop invariant i249: i141;\nloop invariant i250: i142;\nloop invariant i251: i143;\nloop invariant i252: i144;\nloop invariant i253: i145;\nloop invariant i254: i146;\nloop invariant i255: i147;\nloop invariant i256: i148;\nloop invariant i257: i149;\nloop invariant i258: i150;\nloop invariant i259: i151;\nloop invariant i260: i152;\nloop invariant i261: i153;\nloop invariant i262: i154;\nloop invariant i263: i155;\nloop invariant i264: i156;\nloop invariant i265: i157;\nloop invariant i266: i158;\nloop invariant i267: y == n - x;\nloop invariant i268: (x > 0) ==> (y < n);\nloop invariant i269: (x > 0) ==> (x == n - y);\nloop invariant i270: (x > 0) ==> (y == n - x);\nloop invariant i271: (x > 0) ==> (x + y < 2*n);\nloop invariant i272: (x > 0) ==> (x + y > 0);\nloop invariant i273: (x > 0) ==> (x + y <= 2*n);\nloop invariant i274: (x > 0) ==> (x + y >= 0);\nloop invariant i275: (x > 0) ==> (x + y == n);\nloop invariant i276: 1 <= x <= n;\nloop invariant i277: n == x;\nloop invariant i278: n == y;\nloop invariant i279: 0 <= n <= y <= x;\nloop invariant i280: y <= n + 1;\nloop invariant i281: x <= n;\nloop invariant i282: x + y == n + 1;\nloop invariant i283: 1 <= y <= n;\nloop invariant i284: x >= y;\nloop invariant i285: n - y >= 0;\nloop invariant i286: n - y <= n;\n*/\nwhile(x>0)\n  {\n    x--;\n    y++;\n  }\n  {;\n//@ assert(y==n);\n}\n\n}",
        "combined_annotation_num_solver_calls": 260,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main()\n{\n  unsigned int n = unknown_uint();\n  unsigned int x=n, y=0;\n  /*@\nloop invariant i1: 0 <= x <= n;\nloop invariant i2: 0 <= y <= n;\nloop invariant i3: x + y == n;\nloop invariant i4: x == n - y;\nloop invariant i5: x == y - 1 ==> (x >= 0 && y > 0);\nloop invariant i6: x >= 0;\nloop invariant i7: y >= 0;\nloop invariant i8: y <= n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i106: (x > 0 ==> y < n);\nloop invariant i107: (x == 0 ==> y == n);\nloop invariant i108: 0 <= n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i267: y == n - x;\nloop invariant i268: (x > 0) ==> (y < n);\nloop invariant i269: (x > 0) ==> (x == n - y);\nloop invariant i270: (x > 0) ==> (y == n - x);\nloop invariant i271: (x > 0) ==> (x + y < 2*n);\nloop invariant i272: (x > 0) ==> (x + y > 0);\nloop invariant i273: (x > 0) ==> (x + y <= 2*n);\nloop invariant i274: (x > 0) ==> (x + y >= 0);\nloop invariant i275: (x > 0) ==> (x + y == n);\n\n\n\n\nloop invariant i280: y <= n + 1;\nloop invariant i281: x <= n;\n\n\n\nloop invariant i285: n - y >= 0;\nloop invariant i286: n - y <= n;\n*/\nwhile(x>0)\n  {\n    x--;\n    y++;\n  }\n  {;\n//@ assert(y==n);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/popl.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/07.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/39.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv_simp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/xy10.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/const_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe3.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe4.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_unsafe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbr.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbrprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bk-nat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bkley.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/efm.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/ex1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnatprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifo.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/seesaw.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/ken-imp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/rajamani_1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/simple.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/simple_if.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/up-nested.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/count_up_down_true.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/05.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/37.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/pldi082_unbounded.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-close-angle.c"
        ],
        "skipped": [],
        "total": 173,
        "success_count": 143,
        "failure_count": 30,
        "success_rate": 0.8265895953757225
    }
}