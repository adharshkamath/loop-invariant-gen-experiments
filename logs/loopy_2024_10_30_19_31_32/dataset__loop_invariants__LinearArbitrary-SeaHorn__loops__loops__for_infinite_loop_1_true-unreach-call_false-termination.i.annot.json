{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  for(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= 0 ==> x == 0;\nloop invariant i <= 0 ==> y == 0;\nloop invariant i <= 0 ==> x == y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\n*/\n```",
            "```\n/*@\nloop invariant - assume(n>0);\nloop invariant - i >= 0;\nloop invariant - i <= n;\nloop invariant - x == 0;\nloop invariant - y == 0;\nloop invariant - i == n;\nloop invariant i >= 0 && i <= n && x == 0 && y == 0 && i == n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 0;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= y <= 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i <= n ==> i >= 0;\nloop invariant i <= n ==> x == 0 ==> i == 0;\nloop invariant i <= n ==> y == 0 ==> i == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0;\nloop invariant i <= n ==> i >= 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> y == 0;\nloop invariant i <= n ==> x == 0 ==> i == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> x == 0 ==> y == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= i;\nloop invariant x + y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 0;\nloop invariant 0 <= y <= 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\n*/\n```",
            "```\n/*@\nloop invariant i < n;\nloop invariant x == 0;\nloop invariant 0 <= i <= n;\nloop invariant y == i;\nloop invariant i < n ==> x == 0;\nloop invariant i == n ==> x == 0;\nloop invariant 0 <= i <= n ==> x == 0;\nloop invariant 0 <= i <= n ==> y == i;\nloop invariant 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> y == i;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> y == i;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> y == i;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> y == i;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> y == i;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == (i * (i - 1)) / 2;\nloop invariant y == i;\nloop invariant n > 0;\nloop invariant unknown_int() > 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant i >= 0 ==> x == (i * (i - 1)) / 2;\nloop invariant i >= 0 ==> y == i;\nloop invariant i >= 0 ==> n > 0;\nloop invariant i >= 0 ==> unknown_int() > 0;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant i >= 0 ==> i >= 0 ==> x == (i * (i - 1)) / 2;\nloop invariant i >= 0 ==> i >= 0 ==> y == i;\nloop invariant i >= 0 ==> i >= 0 ==> n > 0;\nloop invariant i >= 0 ==> i >= 0 ==> unknown_int() > 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i >= 0 ==> i >= 0 ==> i <= n;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> x == (i * (i - 1)) / 2;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> y == i;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> n > 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> unknown_int() > 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i <= n;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> x == (i * (i - 1)) / 2;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> y == i;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> n > 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> unknown_int() > 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i <= n;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> x == (i * (i - 1)) / 2;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> y == i;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> n > 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> unknown_int() > 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i <= n;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> x == (i * (i - 1)) / 2;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> y == i;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> n > 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> unknown_int() > 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 < i;\nloop invariant i < 2;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\n*/\n```",
            "```\n/*@\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i >= 0;\nloop invariant unknown_int() > 0 ==> unknown_int() > 1;\nloop invariant unknown_int() > 0 ==> unknown_int() > 2;\nloop invariant unknown_int() > 0 ==> unknown_int() > n;\nloop invariant unknown_int() > 0 ==> unknown_int() > n + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= n * (n + 1) / 2;\nloop invariant y <= n;\nloop invariant i * y <= x;\nloop invariant i * (i - 1) * n / 2 <= x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\n*/\n```",
            "```\n/*@\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i < n ==> x == 0;\nloop invariant i == n ==> x == 0 && y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x == i * 0;\nloop invariant y == i * 0;\nloop invariant x == 0 ==> x == 0;\nloop invariant y == 0 ==> y == 0;\nloop invariant i < n ==> x == 0;\nloop invariant i < n ==> y == 0;\nloop invariant i == n ==> x == 0;\nloop invariant i == n ==> y == 0;\nloop invariant i >= 0 ==> x == 0;\nloop invariant i >= 0 ==> y == 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant i <= n ==> i >= 0;\nloop invariant i >= 0 ==> x >= 0;\nloop invariant i >= 0 ==> y >= 0;\nloop invariant i <= n ==> x >= 0;\nloop invariant i <= n ==> y >= 0;\nloop invariant i >= 0 ==> x == i * 0;\nloop invariant i >= 0 ==> y == i * 0;\nloop invariant i <= n ==> x == i * 0;\nloop invariant i <= n ==> y == i * 0;\nloop invariant i >= 0 ==> x == 0;\nloop invariant i >= 0 ==> y == 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant i <= n ==> i >= 0;\nloop invariant i >= 0 ==> x >= 0;\nloop invariant i >= 0 ==> y >= 0;\nloop invariant i <= n ==> x >= 0;\nloop invariant i <= n ==> y >= 0;\nloop invariant i >= 0 ==> x == i * 0;\nloop invariant i >= 0 ==> y == i * 0;\nloop invariant i <= n ==> x == i * 0;\nloop invariant i <= n ==> y == i * 0;\nloop invariant i >= 0 ==> x == 0;\nloop invariant i >= 0 ==> y == 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant i <= n ==> i >= 0;\nloop invariant i >= 0 ==> x >= 0;\nloop invariant i >= 0 ==> y >= 0;\nloop invariant i <= n ==> x >= 0;\nloop invariant i <= n ==> y >= 0;\nloop invariant i >= 0 ==> x == i * 0;\nloop invariant i >= 0 ==> y == i * 0;\nloop invariant i <= n ==> x == i * 0;\nloop invariant i <= n ==> y == i * 0;\nloop invariant i >= 0 ==> x == 0;\nloop invariant i >= 0 ==> y == 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant i <= n ==> i >= 0;\nloop invariant i >= 0 ==> x >= 0;\nloop invariant i >= 0 ==> y >= 0;\nloop invariant i <= n ==> x >= 0;\nloop invariant i <= n ==> y >= 0;\nloop invariant i >= 0 ==> x == i * 0;\nloop invariant i >= 0 ==> y == i * 0;\nloop invariant i <= n ==> x == i * 0;\nloop invariant i <= n ==> y == i * 0;\nloop invariant i >= 0 ==> x == 0;\nloop invariant i >= 0 ==> y == 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant i <= n ==> i >= 0;\nloop invariant i >= 0 ==> x >= 0;\nloop invariant i >= 0 ==> y >= 0;\nloop invariant i <= n ==> x >= 0;\nloop invariant i <= n ==> y >= 0;\nloop invariant i >= 0 ==> x == i * 0;\nloop invariant i >= 0 ==> y == i * 0;\nloop invariant i <= n ==> x == i * 0;\nloop invariant i <= n ==> y == i * 0;\nloop invariant i >= 0 ==> x == 0;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= 0 ==> x == 0;\nloop invariant i <= 0 ==> y == 0;\nloop invariant i <= 0 ==> x == y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\nloop invariant i <= 0 ==> y >= y;\nloop invariant i <= 0 ==> x >= y;\nloop invariant i <= 0 ==> x >= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x <= i;\n\nloop invariant i4: x >= 0;\nloop invariant i5: y >= 0;\nloop invariant i6: i >= 0;\nloop invariant i7: i <= 0 ==> x == 0;\n\n\n\nloop invariant i11: i <= 0 ==> x >= x;\nloop invariant i12: i <= 0 ==> y >= y;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant - assume(n>0);\nloop invariant - i >= 0;\nloop invariant - i <= n;\nloop invariant - x == 0;\nloop invariant - y == 0;\nloop invariant - i == n;\nloop invariant i >= 0 && i <= n && x == 0 && y == 0 && i == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\n\n\nloop invariant i4: - x == 0;\nloop invariant i5: - y == 0;\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 0;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= y <= 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i <= n ==> i >= 0;\nloop invariant i <= n ==> x == 0 ==> i == 0;\nloop invariant i <= n ==> y == 0 ==> i == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0;\nloop invariant i <= n ==> i >= 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> y == 0;\nloop invariant i <= n ==> x == 0 ==> i == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> x == 0 ==> y == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\nloop invariant i1: 0 <= x <= 0;\n\nloop invariant i3: 0 <= y <= 0;\nloop invariant i4: i <= n ==> x == 0;\nloop invariant i5: i <= n ==> y == 0;\nloop invariant i6: i <= n ==> i >= 0;\n\n\nloop invariant i9: i <= n ==> x == 0 ==> y == 0;\nloop invariant i10: i <= n ==> i >= 0 ==> x == 0;\nloop invariant i11: i <= n ==> i >= 0 ==> y == 0;\nloop invariant i12: i <= n ==> x == 0 ==> i == 0 ==> x == 0;\nloop invariant i13: i <= n ==> i >= 0 ==> i == 0 ==> x == 0;\nloop invariant i14: i <= n ==> i >= 0 ==> x == 0 ==> y == 0;\nloop invariant i15: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0;\nloop invariant i16: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0;\nloop invariant i17: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i18: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0;\nloop invariant i19: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i20: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0;\nloop invariant i21: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i22: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i23: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i24: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i25: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i26: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i27: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i28: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i29: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i30: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i31: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= i;\nloop invariant x + y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: 0 <= x <= i;\nloop invariant i5: 0 <= y <= i;\nloop invariant i6: x + y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 0;\nloop invariant 0 <= y <= 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\nloop invariant i1: 0 <= x <= 0;\nloop invariant i2: 0 <= y <= 0;\n\nloop invariant i4: x == 0;\nloop invariant i5: y == 0;\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant i < n;\nloop invariant x == 0;\nloop invariant 0 <= i <= n;\nloop invariant y == i;\nloop invariant i < n ==> x == 0;\nloop invariant i == n ==> x == 0;\nloop invariant 0 <= i <= n ==> x == 0;\nloop invariant 0 <= i <= n ==> y == i;\nloop invariant 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> y == i;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> y == i;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> y == i;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> y == i;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> y == i;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\n\n\nloop invariant i5: i < n ==> x == 0;\nloop invariant i6: i == n ==> x == 0;\nloop invariant i7: 0 <= i <= n ==> x == 0;\n\nloop invariant i9: 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant i10: 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant i11: 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\n\nloop invariant i13: 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant i14: 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant i15: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\n\nloop invariant i17: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant i18: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant i19: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\n\nloop invariant i21: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant i22: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant i23: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\n\nloop invariant i25: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant i26: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant i27: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\n\nloop invariant i29: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant i30: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant i31: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\nloop invariant i1: 0 <= x <= n;\nloop invariant i2: y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 15,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == (i * (i - 1)) / 2;\nloop invariant y == i;\nloop invariant n > 0;\nloop invariant unknown_int() > 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant i >= 0 ==> x == (i * (i - 1)) / 2;\nloop invariant i >= 0 ==> y == i;\nloop invariant i >= 0 ==> n > 0;\nloop invariant i >= 0 ==> unknown_int() > 0;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant i >= 0 ==> i >= 0 ==> x == (i * (i - 1)) / 2;\nloop invariant i >= 0 ==> i >= 0 ==> y == i;\nloop invariant i >= 0 ==> i >= 0 ==> n > 0;\nloop invariant i >= 0 ==> i >= 0 ==> unknown_int() > 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i >= 0 ==> i >= 0 ==> i <= n;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> x == (i * (i - 1)) / 2;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> y == i;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> n > 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> unknown_int() > 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i <= n;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> x == (i * (i - 1)) / 2;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> y == i;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> n > 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> unknown_int() > 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i <= n;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> x == (i * (i - 1)) / 2;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> y == i;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> n > 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> unknown_int() > 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i <= n;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> x == (i * (i - 1)) / 2;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> y == i;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> n > 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> unknown_int() > 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\n\n\nloop invariant i4: n > 0;\n\nloop invariant i6: i >= 0;\n\n\n\nloop invariant i10: i >= 0 ==> n > 0;\n\nloop invariant i12: i >= 0 ==> i >= 0;\n\n\n\nloop invariant i16: i >= 0 ==> i >= 0 ==> n > 0;\n\nloop invariant i18: i >= 0 ==> i >= 0 ==> i >= 0;\n\n\n\nloop invariant i22: i >= 0 ==> i >= 0 ==> i >= 0 ==> n > 0;\n\nloop invariant i24: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\n\n\n\nloop invariant i28: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> n > 0;\n\nloop invariant i30: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\n\n\n\nloop invariant i34: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> n > 0;\n\nloop invariant i36: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\n\n\n\nloop invariant i40: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> n > 0;\n\nloop invariant i42: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: n > 0;\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 < i;\nloop invariant i < 2;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\n\nloop invariant i3: x == 0;\nloop invariant i4: y == 0;\nloop invariant i5: n > 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i >= 0;\nloop invariant unknown_int() > 0 ==> unknown_int() > 1;\nloop invariant unknown_int() > 0 ==> unknown_int() > 2;\nloop invariant unknown_int() > 0 ==> unknown_int() > n;\nloop invariant unknown_int() > 0 ==> unknown_int() > n + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\nloop invariant i1: x == 0;\nloop invariant i2: y == 0;\nloop invariant i3: i >= 0;\n\n\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= n * (n + 1) / 2;\nloop invariant y <= n;\nloop invariant i * y <= x;\nloop invariant i * (i - 1) * n / 2 <= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x >= 0;\nloop invariant i3: y >= 0;\nloop invariant i4: x <= n * (n + 1) / 2;\nloop invariant i5: y <= n;\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: n > 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i < n ==> x == 0;\nloop invariant i == n ==> x == 0 && y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\nloop invariant i1: i >= 0;\n\nloop invariant i3: x == 0;\nloop invariant i4: y == 0;\nloop invariant i5: i < n ==> x == 0;\nloop invariant i6: i == n ==> x == 0 && y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x == i * 0;\nloop invariant y == i * 0;\nloop invariant x == 0 ==> x == 0;\nloop invariant y == 0 ==> y == 0;\nloop invariant i < n ==> x == 0;\nloop invariant i < n ==> y == 0;\nloop invariant i == n ==> x == 0;\nloop invariant i == n ==> y == 0;\nloop invariant i >= 0 ==> x == 0;\nloop invariant i >= 0 ==> y == 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant i <= n ==> i >= 0;\nloop invariant i >= 0 ==> x >= 0;\nloop invariant i >= 0 ==> y >= 0;\nloop invariant i <= n ==> x >= 0;\nloop invariant i <= n ==> y >= 0;\nloop invariant i >= 0 ==> x == i * 0;\nloop invariant i >= 0 ==> y == i * 0;\nloop invariant i <= n ==> x == i * 0;\nloop invariant i <= n ==> y == i * 0;\nloop invariant i >= 0 ==> x == 0;\nloop invariant i >= 0 ==> y == 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant i <= n ==> i >= 0;\nloop invariant i >= 0 ==> x >= 0;\nloop invariant i >= 0 ==> y >= 0;\nloop invariant i <= n ==> x >= 0;\nloop invariant i <= n ==> y >= 0;\nloop invariant i >= 0 ==> x == i * 0;\nloop invariant i >= 0 ==> y == i * 0;\nloop invariant i <= n ==> x == i * 0;\nloop invariant i <= n ==> y == i * 0;\nloop invariant i >= 0 ==> x == 0;\nloop invariant i >= 0 ==> y == 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant i <= n ==> i >= 0;\nloop invariant i >= 0 ==> x >= 0;\nloop invariant i >= 0 ==> y >= 0;\nloop invariant i <= n ==> x >= 0;\nloop invariant i <= n ==> y >= 0;\nloop invariant i >= 0 ==> x == i * 0;\nloop invariant i >= 0 ==> y == i * 0;\nloop invariant i <= n ==> x == i * 0;\nloop invariant i <= n ==> y == i * 0;\nloop invariant i >= 0 ==> x == 0;\nloop invariant i >= 0 ==> y == 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant i <= n ==> i >= 0;\nloop invariant i >= 0 ==> x >= 0;\nloop invariant i >= 0 ==> y >= 0;\nloop invariant i <= n ==> x >= 0;\nloop invariant i <= n ==> y >= 0;\nloop invariant i >= 0 ==> x == i * 0;\nloop invariant i >= 0 ==> y == i * 0;\nloop invariant i <= n ==> x == i * 0;\nloop invariant i <= n ==> y == i * 0;\nloop invariant i >= 0 ==> x == 0;\nloop invariant i >= 0 ==> y == 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant i <= n ==> i >= 0;\nloop invariant i >= 0 ==> x >= 0;\nloop invariant i >= 0 ==> y >= 0;\nloop invariant i <= n ==> x >= 0;\nloop invariant i <= n ==> y >= 0;\nloop invariant i >= 0 ==> x == i * 0;\nloop invariant i >= 0 ==> y == i * 0;\nloop invariant i <= n ==> x == i * 0;\nloop invariant i <= n ==> y == i * 0;\nloop invariant i >= 0 ==> x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: n > 0;\nloop invariant i5: i >= 0;\n\nloop invariant i7: x >= 0;\nloop invariant i8: y >= 0;\nloop invariant i9: x == i * 0;\nloop invariant i10: y == i * 0;\nloop invariant i11: x == 0 ==> x == 0;\nloop invariant i12: y == 0 ==> y == 0;\nloop invariant i13: i < n ==> x == 0;\nloop invariant i14: i < n ==> y == 0;\nloop invariant i15: i == n ==> x == 0;\nloop invariant i16: i == n ==> y == 0;\nloop invariant i17: i >= 0 ==> x == 0;\nloop invariant i18: i >= 0 ==> y == 0;\nloop invariant i19: i <= n ==> x == 0;\nloop invariant i20: i <= n ==> y == 0;\n\nloop invariant i22: i <= n ==> i >= 0;\nloop invariant i23: i >= 0 ==> x >= 0;\nloop invariant i24: i >= 0 ==> y >= 0;\nloop invariant i25: i <= n ==> x >= 0;\nloop invariant i26: i <= n ==> y >= 0;\nloop invariant i27: i >= 0 ==> x == i * 0;\nloop invariant i28: i >= 0 ==> y == i * 0;\nloop invariant i29: i <= n ==> x == i * 0;\nloop invariant i30: i <= n ==> y == i * 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 27: unexpected token 'if'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: x <= i;\nloop invariant i3: y <= i;\nloop invariant i4: x >= 0;\nloop invariant i5: y >= 0;\nloop invariant i6: i >= 0;\nloop invariant i7: i <= 0 ==> x == 0;\nloop invariant i8: i <= 0 ==> y == 0;\nloop invariant i9: i <= 0 ==> x == y;\nloop invariant i10: i <= 0 ==> x >= y;\nloop invariant i11: i <= 0 ==> x >= x;\nloop invariant i12: i <= 0 ==> y >= y;\nloop invariant i13: - assume(n>0);\nloop invariant i14: - i >= 0;\nloop invariant i15: - i <= n;\nloop invariant i16: - x == 0;\nloop invariant i17: - y == 0;\nloop invariant i18: - i == n;\nloop invariant i19: i >= 0 && i <= n && x == 0 && y == 0 && i == n;\nloop invariant i20: 0 <= x <= 0;\nloop invariant i21: 0 <= y <= 0;\nloop invariant i22: i <= n ==> x == 0;\nloop invariant i23: i <= n ==> y == 0;\nloop invariant i24: i <= n ==> i >= 0;\nloop invariant i25: i <= n ==> x == 0 ==> i == 0;\nloop invariant i26: i <= n ==> y == 0 ==> i == 0;\nloop invariant i27: i <= n ==> x == 0 ==> y == 0;\nloop invariant i28: i <= n ==> i >= 0 ==> x == 0;\nloop invariant i29: i <= n ==> i >= 0 ==> y == 0;\nloop invariant i30: i <= n ==> x == 0 ==> i == 0 ==> x == 0;\nloop invariant i31: i <= n ==> i >= 0 ==> i == 0 ==> x == 0;\nloop invariant i32: i <= n ==> i >= 0 ==> x == 0 ==> y == 0;\nloop invariant i33: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0;\nloop invariant i34: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0;\nloop invariant i35: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i36: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0;\nloop invariant i37: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i38: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0;\nloop invariant i39: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i40: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i41: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i42: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i43: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i44: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i45: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i46: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i47: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i48: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i49: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i50: x == 0;\nloop invariant i51: y == 0;\nloop invariant i52: 0 <= x <= i;\nloop invariant i53: 0 <= y <= i;\nloop invariant i54: x + y == 0;\nloop invariant i55: 1 <= i <= n;\nloop invariant i56: i == n;\nloop invariant i57: i < n;\nloop invariant i58: y == i;\nloop invariant i59: i < n ==> x == 0;\nloop invariant i60: i == n ==> x == 0;\nloop invariant i61: 0 <= i <= n ==> x == 0;\nloop invariant i62: 0 <= i <= n ==> y == i;\nloop invariant i63: 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant i64: 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant i65: 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\nloop invariant i66: 0 <= i <= n ==> 0 <= i <= n ==> y == i;\nloop invariant i67: 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant i68: 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant i69: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\nloop invariant i70: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> y == i;\nloop invariant i71: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant i72: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant i73: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\nloop invariant i74: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> y == i;\nloop invariant i75: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant i76: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant i77: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\nloop invariant i78: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> y == i;\nloop invariant i79: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant i80: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant i81: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\nloop invariant i82: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> y == i;\nloop invariant i83: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant i84: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant i85: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\nloop invariant i86: 0 <= x <= n;\nloop invariant i87: x == (i * (i - 1)) / 2;\nloop invariant i88: n > 0;\nloop invariant i89: unknown_int() > 0;\nloop invariant i90: i <= n;\nloop invariant i91: i >= 0 ==> x == (i * (i - 1)) / 2;\nloop invariant i92: i >= 0 ==> y == i;\nloop invariant i93: i >= 0 ==> n > 0;\nloop invariant i94: i >= 0 ==> unknown_int() > 0;\nloop invariant i95: i >= 0 ==> i >= 0;\nloop invariant i96: i >= 0 ==> i <= n;\nloop invariant i97: i >= 0 ==> i >= 0 ==> x == (i * (i - 1)) / 2;\nloop invariant i98: i >= 0 ==> i >= 0 ==> y == i;\nloop invariant i99: i >= 0 ==> i >= 0 ==> n > 0;\nloop invariant i100: i >= 0 ==> i >= 0 ==> unknown_int() > 0;\nloop invariant i101: i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i102: i >= 0 ==> i >= 0 ==> i <= n;\nloop invariant i103: i >= 0 ==> i >= 0 ==> i >= 0 ==> x == (i * (i - 1)) / 2;\nloop invariant i104: i >= 0 ==> i >= 0 ==> i >= 0 ==> y == i;\nloop invariant i105: i >= 0 ==> i >= 0 ==> i >= 0 ==> n > 0;\nloop invariant i106: i >= 0 ==> i >= 0 ==> i >= 0 ==> unknown_int() > 0;\nloop invariant i107: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i108: i >= 0 ==> i >= 0 ==> i >= 0 ==> i <= n;\nloop invariant i109: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> x == (i * (i - 1)) / 2;\nloop invariant i110: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> y == i;\nloop invariant i111: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> n > 0;\nloop invariant i112: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> unknown_int() > 0;\nloop invariant i113: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i114: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i <= n;\nloop invariant i115: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> x == (i * (i - 1)) / 2;\nloop invariant i116: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> y == i;\nloop invariant i117: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> n > 0;\nloop invariant i118: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> unknown_int() > 0;\nloop invariant i119: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i120: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i <= n;\nloop invariant i121: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> x == (i * (i - 1)) / 2;\nloop invariant i122: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> y == i;\nloop invariant i123: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> n > 0;\nloop invariant i124: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> unknown_int() > 0;\nloop invariant i125: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i126: 0 < i;\nloop invariant i127: i < 2;\nloop invariant i128: unknown_int() > 0 ==> unknown_int() > 1;\nloop invariant i129: unknown_int() > 0 ==> unknown_int() > 2;\nloop invariant i130: unknown_int() > 0 ==> unknown_int() > n;\nloop invariant i131: unknown_int() > 0 ==> unknown_int() > n + 1;\nloop invariant i132: x <= n * (n + 1) / 2;\nloop invariant i133: y <= n;\nloop invariant i134: i * y <= x;\nloop invariant i135: i * (i - 1) * n / 2 <= x;\nloop invariant i136: i == n ==> x == 0 && y == 0;\nloop invariant i137: x == i * 0;\nloop invariant i138: y == i * 0;\nloop invariant i139: x == 0 ==> x == 0;\nloop invariant i140: y == 0 ==> y == 0;\nloop invariant i141: i < n ==> y == 0;\nloop invariant i142: i == n ==> y == 0;\nloop invariant i143: i >= 0 ==> x == 0;\nloop invariant i144: i >= 0 ==> y == 0;\nloop invariant i145: i >= 0 ==> x >= 0;\nloop invariant i146: i >= 0 ==> y >= 0;\nloop invariant i147: i <= n ==> x >= 0;\nloop invariant i148: i <= n ==> y >= 0;\nloop invariant i149: i >= 0 ==> x == i * 0;\nloop invariant i150: i >= 0 ==> y == i * 0;\nloop invariant i151: i <= n ==> x == i * 0;\nloop invariant i152: i <= n ==> y == i * 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
        "combined_annotation_num_solver_calls": 43,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x <= i;\nloop invariant i3: y <= i;\nloop invariant i4: x >= 0;\nloop invariant i5: y >= 0;\nloop invariant i6: i >= 0;\nloop invariant i7: i <= 0 ==> x == 0;\nloop invariant i8: i <= 0 ==> y == 0;\nloop invariant i9: i <= 0 ==> x == y;\nloop invariant i10: i <= 0 ==> x >= y;\nloop invariant i11: i <= 0 ==> x >= x;\nloop invariant i12: i <= 0 ==> y >= y;\n\n\nloop invariant i15: - i <= n;\nloop invariant i16: - x == 0;\nloop invariant i17: - y == 0;\n\n\nloop invariant i20: 0 <= x <= 0;\nloop invariant i21: 0 <= y <= 0;\nloop invariant i22: i <= n ==> x == 0;\nloop invariant i23: i <= n ==> y == 0;\nloop invariant i24: i <= n ==> i >= 0;\n\n\nloop invariant i27: i <= n ==> x == 0 ==> y == 0;\nloop invariant i28: i <= n ==> i >= 0 ==> x == 0;\nloop invariant i29: i <= n ==> i >= 0 ==> y == 0;\nloop invariant i30: i <= n ==> x == 0 ==> i == 0 ==> x == 0;\nloop invariant i31: i <= n ==> i >= 0 ==> i == 0 ==> x == 0;\nloop invariant i32: i <= n ==> i >= 0 ==> x == 0 ==> y == 0;\nloop invariant i33: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0;\nloop invariant i34: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0;\nloop invariant i35: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i36: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0;\nloop invariant i37: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i38: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0;\nloop invariant i39: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i40: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i41: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i42: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i43: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i44: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i45: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i46: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i47: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i48: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> y == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i49: i <= n ==> i >= 0 ==> i == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0 ==> x == 0;\nloop invariant i50: x == 0;\nloop invariant i51: y == 0;\nloop invariant i52: 0 <= x <= i;\nloop invariant i53: 0 <= y <= i;\nloop invariant i54: x + y == 0;\n\n\n\n\nloop invariant i59: i < n ==> x == 0;\nloop invariant i60: i == n ==> x == 0;\nloop invariant i61: 0 <= i <= n ==> x == 0;\n\nloop invariant i63: 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant i64: 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant i65: 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\n\nloop invariant i67: 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant i68: 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant i69: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\n\nloop invariant i71: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant i72: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant i73: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\n\nloop invariant i75: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant i76: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant i77: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\n\nloop invariant i79: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant i80: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant i81: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\n\nloop invariant i83: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i < n ==> x == 0;\nloop invariant i84: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> i == n ==> x == 0;\nloop invariant i85: 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> 0 <= i <= n ==> x == 0;\nloop invariant i86: 0 <= x <= n;\n\nloop invariant i88: n > 0;\n\n\n\n\nloop invariant i93: i >= 0 ==> n > 0;\n\nloop invariant i95: i >= 0 ==> i >= 0;\n\n\n\nloop invariant i99: i >= 0 ==> i >= 0 ==> n > 0;\n\nloop invariant i101: i >= 0 ==> i >= 0 ==> i >= 0;\n\n\n\nloop invariant i105: i >= 0 ==> i >= 0 ==> i >= 0 ==> n > 0;\n\nloop invariant i107: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\n\n\n\nloop invariant i111: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> n > 0;\n\nloop invariant i113: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\n\n\n\nloop invariant i117: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> n > 0;\n\nloop invariant i119: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\n\n\n\nloop invariant i123: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> n > 0;\n\nloop invariant i125: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\n\n\n\n\n\n\nloop invariant i132: x <= n * (n + 1) / 2;\nloop invariant i133: y <= n;\nloop invariant i134: i * y <= x;\n\nloop invariant i136: i == n ==> x == 0 && y == 0;\nloop invariant i137: x == i * 0;\nloop invariant i138: y == i * 0;\nloop invariant i139: x == 0 ==> x == 0;\nloop invariant i140: y == 0 ==> y == 0;\nloop invariant i141: i < n ==> y == 0;\nloop invariant i142: i == n ==> y == 0;\nloop invariant i143: i >= 0 ==> x == 0;\nloop invariant i144: i >= 0 ==> y == 0;\nloop invariant i145: i >= 0 ==> x >= 0;\nloop invariant i146: i >= 0 ==> y >= 0;\nloop invariant i147: i <= n ==> x >= 0;\nloop invariant i148: i <= n ==> y >= 0;\nloop invariant i149: i >= 0 ==> x == i * 0;\nloop invariant i150: i >= 0 ==> y == i * 0;\nloop invariant i151: i <= n ==> x == i * 0;\nloop invariant i152: i <= n ==> y == i * 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c"
        ],
        "skipped": [],
        "total": 61,
        "success_count": 51,
        "failure_count": 10,
        "success_rate": 0.8360655737704918
    }
}