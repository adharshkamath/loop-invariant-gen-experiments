{
    "logs": {
        "file": "../dataset/loop_invariants/accelerating_invariant_generation/dagger/seesaw.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint x;\n\tint y;\n\n\tif (! (x==0)) \nreturn 0;\n\n\tif (! (y==0)) \nreturn 0;\n\n\twhile (unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (x >= 9)) \nreturn 0;\n\n\t\t\tx = x + 2;\n\t\t\ty = y + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (!(x >= 7)) \nreturn 0;\n\n\t\t\t\tif (!(x <= 9)) \nreturn 0;\n\n\t\t\t\tx = x + 1;\n\t\t\t\ty = y + 3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (x - 5 >=0)) \nreturn 0;\n\n\t\t\t\t\tif (! (x - 7 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 2;\n\t\t\t\t\ty = y + 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!(x - 4 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 1;\n\t\t\t\t\ty = y + 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t{;\n//@ assert(-x + 2*y  >= 0);\n}\n\n\t{;\n//@ assert(3*x - y  >= 0);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= 9;\nloop invariant 0 <= y;\nloop invariant x + y <= 2*y;\nloop invariant x - y >= -y;\nloop invariant x - y <= 9;\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x <= 9);\nloop invariant x - y <= 0 ==> (x - 5 >= 0);\nloop invariant x - y <= 0 ==> (x - 7 <= 0);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= unknown_int() * 2;\nloop invariant 0 <= y <= unknown_int() * 2;\nloop invariant -x + 2*y >= 0 ==> (x <= unknown_int() and y <= 2*unknown_int());\nloop invariant 3*x - y >= 0 ==> (x >= unknown_int() / 2 and y >= 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 9;\nloop invariant 0 <= y <= 10;\nloop invariant 0 <= x - 5 <= 5;\nloop invariant 0 <= x - 7 <= 2;\nloop invariant x - 4 <= 0 ==> x >= -4;\nloop invariant x - 4 <= 0 ==> y >= -8;\nloop invariant x - 7 <= 0 ==> x >= -7;\nloop invariant x - 7 <= 0 ==> y >= -10;\nloop invariant x - 5 >= 0 ==> x >= 5;\nloop invariant x - 5 >= 0 ==> y >= -3;\nloop invariant x - 4 >= 0 ==> x >= 4;\nloop invariant x - 4 >= 0 ==> y >= -6;\nloop invariant x >= 9 ==> x >= 9;\nloop invariant x >= 9 ==> y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 9;\nloop invariant x >= 7;\nloop invariant x <= 9;\nloop invariant x - 5 >= 0;\nloop invariant x - 7 <= 0;\nloop invariant x - 4 <= 0;\nloop invariant -x + 2*y >= 0;\nloop invariant 3*x - y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 9;\nloop invariant 0 <= y <= 10;\nloop invariant x >= y;\nloop invariant x >= 7;\nloop invariant x <= 9;\nloop invariant x >= 5;\nloop invariant x <= 7;\nloop invariant x >= 4;\nloop invariant x <= 6;\nloop invariant x >= 3;\nloop invariant x <= 5;\nloop invariant x >= 2;\nloop invariant x <= 4;\nloop invariant x >= 1;\nloop invariant x <= 3;\nloop invariant x >= 0;\nloop invariant x <= 2;\nloop invariant y >= 0;\nloop invariant x >= y ==> x >= 9 ==> x >= 9 ==> x >= 9;\nloop invariant x < 9 ==> x >= y ==> x >= 9 ==> x < 9;\nloop invariant x >= 9 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant x < 9 ==> y >= 1 ==> y >= 1 ==> y < 10;\nloop invariant x >= y ==> x >= 7 ==> x >= 7 ==> x >= 7;\nloop invariant x < 7 ==> x >= y ==> x >= 7 ==> x < 7;\nloop invariant x >= 7 ==> x < 9 ==> x < 9 ==> x < 9;\nloop invariant x >= 7 ==> x >= y ==> x < 9 ==> x >= 9;\nloop invariant x < 7 ==> x >= y ==> x < 9 ==> x < 9;\nloop invariant x >= y ==> x >= 5 ==> x >= 5 ==> x >= 5;\nloop invariant x < 5 ==> x >= y ==> x >= 5 ==> x < 5;\nloop invariant x >= 5 ==> x >= y ==> x < 7 ==> x >= 7;\nloop invariant x >= 5 ==> x < 7 ==> x < 7 ==> x < 7;\nloop invariant x >= y ==> x >= 4 ==> x >= 4 ==> x >= 4;\nloop invariant x < 4 ==> x >= y ==> x >= 4 ==> x < 4;\nloop invariant x >= 4 ==> x >= y ==> x < 5 ==> x >= 5;\nloop invariant x >= 4 ==> x < 5 ==> x < 5 ==> x < 5;\nloop invariant x >= y ==> x >= 3 ==> x >= 3 ==> x >= 3;\nloop invariant x < 3 ==> x >= y ==> x >= 3 ==> x < 3;\nloop invariant x >= 3 ==> x >= y ==> x < 4 ==> x >= 4;\nloop invariant x >= 3 ==> x < 4 ==> x < 4 ==> x < 4;\nloop invariant x >= y ==> x >= 2 ==> x >= 2 ==> x >= 2;\nloop invariant x < 2 ==> x >= y ==> x >= 2 ==> x < 2;\nloop invariant x >= 2 ==> x >= y ==> x < 3 ==> x >= 3;\nloop invariant x >= 2 ==> x < 3 ==> x < 3 ==> x < 3;\nloop invariant x >= y ==> x >= 1 ==> x >= 1 ==> x >= 1;\nloop invariant x < 1 ==> x >= y ==> x >= 1 ==> x < 1;\nloop invariant x >= 1 ==> x >= y ==> x < 2 ==> x >= 2;\nloop invariant x >= 1 ==> x < 2 ==> x < 2 ==> x < 2;\nloop invariant x >= y ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant x < 0 ==> x >= y ==> x >= 0 ==> x < 0;\nloop invariant x >= 0 ==> x >= y ==> x < 1 ==> x >= 1;\nloop invariant x >= 0 ==> x < 1 ==> x < 1 ==> x < 1;\nloop invariant x >= y ==> x < 9 ==> x < 9 ==> x < 9;\nloop invariant x >= y ==> x >= 9 ==> x < 9 ==> x >= 9;\nloop invariant x < 9 ==> x >= y ==> x < 9 ==> x < 9;\nloop invariant x >= y ==> x < 7 ==> x < 7 ==> x < 7;\nloop invariant x >= y ==> x >= 7 ==> x < 7 ==> x >= 7;\nloop invariant x < 7 ==> x >= y ==> x < 7 ==> x < 7;\nloop invariant x >= y ==> x < 5 ==> x < 5 ==> x < 5;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 9;\nloop invariant -4 <= y <= 3;\nloop invariant y >= -y;\nloop invariant x >= 0;\nloop invariant x <= 9;\nloop invariant -4 <= x + 2*y <= 9;\nloop invariant 3*x - y >= 0;\nloop invariant -4 <= x + 1*y <= 9;\nloop invariant 3*x - y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant x >= 0 && x <= 9;\nloop invariant y >= 0 && y <= 3;\nloop invariant if (x >= 7) then x <= 9;\nloop invariant if (x - 5 >= 0) then x - 7 <= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x - 4 <= 0;\nloop invariant y >= 0;\nloop invariant y <= 3;\nloop invariant x - 5 >= 0;\nloop invariant x - 7 <= 0;\nloop invariant x >= 0;\nloop invariant x >= 7;\nloop invariant x >= 9;\nloop invariant x >= 3*y;\nloop invariant x >= 3*y - 2;\nloop invariant x >= 3*y - 1;\nloop invariant x >= 3*y - 3;\nloop invariant x >= 3*y - 4;\nloop invariant x >= 3*y - 5;\nloop invariant x >= 3*y - 6;\nloop invariant x >= 3*y - 7;\nloop invariant x >= 3*y - 8;\nloop invariant x >= 3*y - 9;\nloop invariant x >= 3*y - 10;\nloop invariant x >= 3*y - 11;\nloop invariant x >= 3*y - 12;\nloop invariant x >= 3*y - 13;\nloop invariant x >= 3*y - 14;\nloop invariant x >= 3*y - 15;\nloop invariant x >= 3*y - 16;\nloop invariant x >= 3*y - 17;\nloop invariant x >= 3*y - 18;\nloop invariant x >= 3*y - 19;\nloop invariant x >= 3*y - 20;\nloop invariant x >= 3*y - 21;\nloop invariant x >= 3*y - 22;\nloop invariant x >= 3*y - 23;\nloop invariant x >= 3*y - 24;\nloop invariant x >= 3*y - 25;\nloop invariant x >= 3*y - 26;\nloop invariant x >= 3*y - 27;\nloop invariant x >= 3*y - 28;\nloop invariant x >= 3*y - 29;\nloop invariant x >= 3*y - 30;\nloop invariant x >= 3*y - 31;\nloop invariant x >= 3*y - 32;\nloop invariant x >= 3*y - 33;\nloop invariant x >= 3*y - 34;\nloop invariant x >= 3*y - 35;\nloop invariant x >= 3*y - 36;\nloop invariant x >= 3*y - 37;\nloop invariant x >= 3*y - 38;\nloop invariant x >= 3*y - 39;\nloop invariant x >= 3*y - 40;\nloop invariant x >= 3*y - 41;\nloop invariant x >= 3*y - 42;\nloop invariant x >= 3*y - 43;\nloop invariant x >= 3*y - 44;\nloop invariant x >= 3*y - 45;\nloop invariant x >= 3*y - 46;\nloop invariant x >= 3*y - 47;\nloop invariant x >= 3*y - 48;\nloop invariant x >= 3*y - 49;\nloop invariant x >= 3*y - 50;\nloop invariant x >= 3*y - 51;\nloop invariant x >= 3*y - 52;\nloop invariant x >= 3*y - 53;\nloop invariant x >= 3*y - 54;\nloop invariant x >= 3*y - 55;\nloop invariant x >= 3*y - 56;\nloop invariant x >= 3*y - 57;\nloop invariant x >= 3*y - 58;\nloop invariant x >= 3*y - 59;\nloop invariant x >= 3*y - 60;\nloop invariant x >= 3*y - 61;\nloop invariant x >= 3*y - 62;\nloop invariant x >= 3*y - 63;\nloop invariant x >= 3*y - 64;\nloop invariant x >= 3*y - 65;\nloop invariant x >= 3*y - 66;\nloop invariant x >= 3*y - 67;\nloop invariant x >= 3*y - 68;\nloop invariant x >= 3*y - 69;\nloop invariant x >= 3*y - 70;\nloop invariant x >= 3*y - 71;\nloop invariant x >= 3*y - 72;\nloop invariant x >= 3*y - 73;\nloop invariant x >= 3*y - 74;\nloop invariant x >= 3*y - 75;\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 10;\nloop invariant y <= 5;\nloop invariant x - 5 >= 0 ==> y <= 5;\nloop invariant x - 7 <= 0 ==> y <= 5;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 9;\nloop invariant 0 <= y <= 9;\nloop invariant x >= 9 ==> x == 9;\nloop invariant x >= 7 ==> x == 7;\nloop invariant x - 5 >= 0 ==> x == 5;\nloop invariant x - 7 <= 0 ==> x == 7;\nloop invariant x - 4 <= 0 ==> x == 4;\nloop invariant -x + 2*y >= 0 ==> x == 4;\nloop invariant 3*x - y >= 0 ==> x == 3;\nloop invariant x == 9 ==> y == 0;\nloop invariant x == 7 ==> y == 3;\nloop invariant x == 5 ==> y == 7;\nloop invariant x == 7 ==> y == 7;\nloop invariant x == 4 ==> y == 9;\nloop invariant x == 3 ==> y == 9;\nloop invariant x == 2 ==> y == 10;\nloop invariant x == 1 ==> y == 11;\nloop invariant x == 0 ==> y == 12;\nloop invariant x == 9 ==> y == 0;\nloop invariant x == 7 ==> y == 3;\nloop invariant x == 5 ==> y == 7;\nloop invariant x == 7 ==> y == 7;\nloop invariant x == 4 ==> y == 9;\nloop invariant x == 3 ==> y == 9;\nloop invariant x == 2 ==> y == 10;\nloop invariant x == 1 ==> y == 11;\nloop invariant x == 0 ==> y == 12;\nloop invariant x == 9 ==> y == 0;\nloop invariant x == 7 ==> y == 3;\nloop invariant x == 5 ==> y == 7;\nloop invariant x == 7 ==> y == 7;\nloop invariant x == 4 ==> y == 9;\nloop invariant x == 3 ==> y == 9;\nloop invariant x == 2 ==> y == 10;\nloop invariant x == 1 ==> y == 11;\nloop invariant x == 0 ==> y == 12;\nloop invariant x == 9 ==> y == 0;\nloop invariant x == 7 ==> y == 3;\nloop invariant x == 5 ==> y == 7;\nloop invariant x == 7 ==> y == 7;\nloop invariant x == 4 ==> y == 9;\nloop invariant x == 3 ==> y == 9;\nloop invariant x == 2 ==> y == 10;\nloop invariant x == 1 ==> y == 11;\nloop invariant x == 0 ==> y == 12;\nloop invariant x == 9 ==> y == 0;\nloop invariant x == 7 ==> y == 3;\nloop invariant x == 5 ==> y == 7;\nloop invariant x == 7 ==> y == 7;\nloop invariant x == 4 ==> y == 9;\nloop invariant x == 3 ==> y == 9;\nloop invariant x == 2 ==> y == 10;\nloop invariant x == 1 ==> y == 11;\nloop invariant x == 0 ==> y == 12;\nloop invariant x == 9 ==> y == 0;\nloop invariant x == 7 ==> y == 3;\nloop invariant x == 5 ==> y == 7;\nloop invariant x == 7 ==> y == 7;\nloop invariant x == 4 ==> y == 9;\nloop invariant x == 3 ==> y == 9;\nloop invariant x == 2 ==> y == 10;\nloop invariant x == 1 ==> y == 11;\nloop invariant x == 0 ==> y == 12;\nloop invariant x == 9 ==> y == 0;\nloop invariant x == 7 ==> y == 3;\nloop invariant x == 5 ==> y == 7;\nloop invariant x == 7 ==> y == 7;\nloop invariant x == 4 ==> y == 9;\nloop invariant x == 3 ==> y == 9;\nloop invariant x == 2 ==> y == 10;\nloop invariant x == 1 ==> y == 11;\nloop invariant x == 0 ==> y == 12;\nloop invariant x == 9 ==> y == 0;\nloop invariant x == 7 ==> y == 3;\nloop invariant x == 5 ==> y == 7;\nloop invariant x == 7 ==> y == 7;\nloop invariant x == 4 ==> y == 9;\nloop invariant x == 3 ==> y == 9;\nloop invariant x == 2 ==> y == 10;\nloop invariant x == 1 ==> y == 11;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 9;\nloop invariant 0 <= y <= 10;\nloop invariant x <= 9 ==> -x + 2*y >= 0;\nloop invariant x <= 9 ==> 3*x - y >= 0;\nloop invariant x <= 9 ==> x - 5 >= 0 ==> x - 7 <= 0 ==> x - 4 <= 0 ==> -x + 2*y >= 0 ==> 3*x - y >= 0;\nloop invariant x <= 9 ==> x - 5 >= 0 ==> x - 7 <= 0 ==> x - 4 <= 0 ==> -x + 2*y >= 0 ==> 3*x - y >= 0 ==> x - 4 <= 0 ==> y <= 10;\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant -x + 2*y >= 0;\nloop invariant 3*x - y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant x >= 5;\nloop invariant y <= 3;\nloop invariant -x + 2*y >= 0;\nloop invariant 3*x - y >= 0;\nloop invariant (x >= 9 ==> y <= 2);\nloop invariant (x >= 7 ==> y <= 1);\nloop invariant (x >= 7 ==> y >= 1);\nloop invariant (x >= 5 ==> y <= 1);\nloop invariant (x >= 5 ==> y >= 1);\nloop invariant (x <= 9 ==> y >= 1);\nloop invariant (x <= 9 ==> y <= 1);\nloop invariant (x - 5 >= 0 ==> y >= 1);\nloop invariant (x - 5 >= 0 ==> y <= 2);\nloop invariant (x - 4 <= 0 ==> y >= 1);\nloop invariant (x - 4 <= 0 ==> y <= 1);\nloop invariant (x - 7 <= 0 ==> y >= 1);\nloop invariant (x - 7 <= 0 ==> y <= 1);\nloop invariant (unknown_int() ==> x >= 0);\nloop invariant (unknown_int() ==> y >= 0);\nloop invariant (unknown_int() ==> x >= y);\nloop invariant (unknown_int() ==> x >= 5);\nloop invariant (unknown_int() ==> y <= 3);\nloop invariant (unknown_int() ==> -x + 2*y >= 0);\nloop invariant (unknown_int() ==> 3*x - y >= 0);\nloop invariant (unknown_int() ==> (x >= 9 ==> y <= 2));\nloop invariant (unknown_int() ==> (x >= 7 ==> y <= 1));\nloop invariant (unknown_int() ==> (x >= 7 ==> y >= 1));\nloop invariant (unknown_int() ==> (x >= 5 ==> y <= 1));\nloop invariant (unknown_int() ==> (x >= 5 ==> y >= 1));\nloop invariant (unknown_int() ==> (x <= 9 ==> y >= 1));\nloop invariant (unknown_int() ==> (x <= 9 ==> y <= 1));\nloop invariant (unknown_int() ==> (x - 5 >= 0 ==> y >= 1));\nloop invariant (unknown_int() ==> (x - 5 >= 0 ==> y <= 2));\nloop invariant (unknown_int() ==> (x - 4 <= 0 ==> y >= 1));\nloop invariant (unknown_int() ==> (x - 4 <= 0 ==> y <= 1));\nloop invariant (unknown_int() ==> (x - 7 <= 0 ==> y >= 1));\nloop invariant (unknown_int() ==> (x - 7 <= 0 ==> y <= 1));\nloop invariant (unknown_int() ==> (x >= 9 ==> y <= 2));\nloop invariant (unknown_int() ==> (x >= 7 ==> y <= 1));\nloop invariant (unknown_int() ==> (x >= 7 ==> y >= 1));\nloop invariant (unknown_int() ==> (x >= 5 ==> y <= 1));\nloop invariant (unknown_int() ==> (x >= 5 ==> y >= 1));\nloop invariant (unknown_int() ==> (x <= 9 ==> y >= 1));\nloop invariant (unknown_int() ==> (x <= 9 ==> y <= 1));\nloop invariant (unknown_int() ==> (x - 5 >= 0 ==> y >= 1));\nloop invariant (unknown_int() ==> (x - 5 >= 0 ==> y <= 2));\nloop invariant (unknown_int() ==> (x - 4 <= 0 ==> y >= 1));\nloop invariant (unknown_int() ==> (x - 4 <= 0 ==> y <= 1));\nloop invariant (unknown_int() ==> (x - 7 <= 0 ==> y >= 1));\nloop invariant (unknown_int() ==> (x - 7 <= 0 ==> y <= 1));\nloop invariant (unknown_int() ==> (x >= 9 ==> y <= 2));\nloop invariant (unknown_int() ==> (x >= 7 ==> y <= 1));\nloop invariant (unknown_int() ==> (x >= 7 ==> y >= 1));\nloop invariant (unknown_int() ==> (x >= 5 ==> y <= 1));\nloop invariant (unknown_int() ==> (x >= 5 ==> y >= 1));\nloop invariant (unknown_int() ==> (x <= 9 ==> y >= 1));\nloop invariant (unknown_int() ==> (x <= 9 ==> y <= 1));\nloop invariant (unknown_int() ==> (x - 5 >= 0 ==> y >= 1));\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 9;\nloop invariant 0 <= y <= 3*x - 2;\nloop invariant (x - 7 <= 0 ==> x >= 7);\nloop invariant (x - 5 >= 0 ==> x <= 9);\nloop invariant (x >= 7 ==> x - 5 >= 0);\nloop invariant (x <= 9 ==> x - 7 <= 0);\nloop invariant (x < 9 ==> x + 2 >= 9);\nloop invariant (x >= 9 ==> x + 2 <= 11);\nloop invariant (x < 7 ==> x + 1 >= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 1 <= 10);\nloop invariant (x >= 9 ==> x + 1 <= 10);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 2 <= 11);\nloop invariant (x >= 9 ==> x + 2 <= 11);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 1 <= 10);\nloop invariant (x >= 9 ==> x + 1 <= 10);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 2 <= 11);\nloop invariant (x >= 9 ==> x + 2 <= 11);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 1 <= 10);\nloop invariant (x >= 9 ==> x + 1 <= 10);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 2 <= 11);\nloop invariant (x >= 9 ==> x + 2 <= 11);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 1 <= 10);\nloop invariant (x >= 9 ==> x + 1 <= 10);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 2 <= 11);\nloop invariant (x >= 9 ==> x + 2 <= 11);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 1 <= 10);\nloop invariant (x >= 9 ==> x + 1 <= 10);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 2 <= 11);\nloop invariant (x >= 9 ==> x + 2 <= 11);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 1 <= 10);\nloop invariant (x >= 9 ==> x + 1 <= 10);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 2 <= 11);\nloop invariant (x >= 9 ==> x + 2 <= 11);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 1 <= 10);\nloop invariant (x >= 9 ==> x + 1 <= 10);\nloop invariant (x < 7 ==> x + 1 <= 8);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 9;\nloop invariant 0 <= y;\nloop invariant x + y <= 2*y;\nloop invariant x - y >= -y;\nloop invariant x - y <= 9;\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x <= 9);\nloop invariant x - y <= 0 ==> (x - 5 >= 0);\nloop invariant x - y <= 0 ==> (x - 7 <= 0);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\nloop invariant x - y >= 0 ==> (x >= 5);\nloop invariant x - y <= 0 ==> (x <= 4);\nloop invariant x - y >= 0 ==> (x >= 9);\nloop invariant x - y <= 0 ==> (x <= 7);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint x;\n\tint y;\n\n\tif (! (x==0)) \nreturn 0;\n\n\tif (! (y==0)) \nreturn 0;\n\n\t/*@\n\nloop invariant i2: 0 <= y;\n\nloop invariant i4: x - y >= -y;\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (x >= 9)) \nreturn 0;\n\n\t\t\tx = x + 2;\n\t\t\ty = y + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (!(x >= 7)) \nreturn 0;\n\n\t\t\t\tif (!(x <= 9)) \nreturn 0;\n\n\t\t\t\tx = x + 1;\n\t\t\t\ty = y + 3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (x - 5 >=0)) \nreturn 0;\n\n\t\t\t\t\tif (! (x - 7 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 2;\n\t\t\t\t\ty = y + 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!(x - 4 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 1;\n\t\t\t\t\ty = y + 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t{;\n//@ assert(-x + 2*y  >= 0);\n}\n\n\t{;\n//@ assert(3*x - y  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint x;\n\tint y;\n\n\tif (! (x==0)) \nreturn 0;\n\n\tif (! (y==0)) \nreturn 0;\n\n\t/*@\n\n\n\n\n*/\nwhile (unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (x >= 9)) \nreturn 0;\n\n\t\t\tx = x + 2;\n\t\t\ty = y + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (!(x >= 7)) \nreturn 0;\n\n\t\t\t\tif (!(x <= 9)) \nreturn 0;\n\n\t\t\t\tx = x + 1;\n\t\t\t\ty = y + 3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (x - 5 >=0)) \nreturn 0;\n\n\t\t\t\t\tif (! (x - 7 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 2;\n\t\t\t\t\ty = y + 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!(x - 4 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 1;\n\t\t\t\t\ty = y + 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t{;\n//@ assert(-x + 2*y  >= 0);\n}\n\n\t{;\n//@ assert(3*x - y  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= unknown_int() * 2;\nloop invariant 0 <= y <= unknown_int() * 2;\nloop invariant -x + 2*y >= 0 ==> (x <= unknown_int() and y <= 2*unknown_int());\nloop invariant 3*x - y >= 0 ==> (x >= unknown_int() / 2 and y >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint x;\n\tint y;\n\n\tif (! (x==0)) \nreturn 0;\n\n\tif (! (y==0)) \nreturn 0;\n\n\t/*@\n\n\n\n\n*/\nwhile (unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (x >= 9)) \nreturn 0;\n\n\t\t\tx = x + 2;\n\t\t\ty = y + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (!(x >= 7)) \nreturn 0;\n\n\t\t\t\tif (!(x <= 9)) \nreturn 0;\n\n\t\t\t\tx = x + 1;\n\t\t\t\ty = y + 3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (x - 5 >=0)) \nreturn 0;\n\n\t\t\t\t\tif (! (x - 7 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 2;\n\t\t\t\t\ty = y + 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!(x - 4 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 1;\n\t\t\t\t\ty = y + 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t{;\n//@ assert(-x + 2*y  >= 0);\n}\n\n\t{;\n//@ assert(3*x - y  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 9;\nloop invariant 0 <= y <= 10;\nloop invariant 0 <= x - 5 <= 5;\nloop invariant 0 <= x - 7 <= 2;\nloop invariant x - 4 <= 0 ==> x >= -4;\nloop invariant x - 4 <= 0 ==> y >= -8;\nloop invariant x - 7 <= 0 ==> x >= -7;\nloop invariant x - 7 <= 0 ==> y >= -10;\nloop invariant x - 5 >= 0 ==> x >= 5;\nloop invariant x - 5 >= 0 ==> y >= -3;\nloop invariant x - 4 >= 0 ==> x >= 4;\nloop invariant x - 4 >= 0 ==> y >= -6;\nloop invariant x >= 9 ==> x >= 9;\nloop invariant x >= 9 ==> y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint x;\n\tint y;\n\n\tif (! (x==0)) \nreturn 0;\n\n\tif (! (y==0)) \nreturn 0;\n\n\t/*@\n\n\n\n\nloop invariant i5: x - 4 <= 0 ==> x >= -4;\nloop invariant i6: x - 4 <= 0 ==> y >= -8;\nloop invariant i7: x - 7 <= 0 ==> x >= -7;\nloop invariant i8: x - 7 <= 0 ==> y >= -10;\nloop invariant i9: x - 5 >= 0 ==> x >= 5;\n\nloop invariant i11: x - 4 >= 0 ==> x >= 4;\nloop invariant i12: x - 4 >= 0 ==> y >= -6;\nloop invariant i13: x >= 9 ==> x >= 9;\n\n*/\nwhile (unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (x >= 9)) \nreturn 0;\n\n\t\t\tx = x + 2;\n\t\t\ty = y + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (!(x >= 7)) \nreturn 0;\n\n\t\t\t\tif (!(x <= 9)) \nreturn 0;\n\n\t\t\t\tx = x + 1;\n\t\t\t\ty = y + 3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (x - 5 >=0)) \nreturn 0;\n\n\t\t\t\t\tif (! (x - 7 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 2;\n\t\t\t\t\ty = y + 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!(x - 4 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 1;\n\t\t\t\t\ty = y + 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t{;\n//@ assert(-x + 2*y  >= 0);\n}\n\n\t{;\n//@ assert(3*x - y  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 9;\nloop invariant x >= 7;\nloop invariant x <= 9;\nloop invariant x - 5 >= 0;\nloop invariant x - 7 <= 0;\nloop invariant x - 4 <= 0;\nloop invariant -x + 2*y >= 0;\nloop invariant 3*x - y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint x;\n\tint y;\n\n\tif (! (x==0)) \nreturn 0;\n\n\tif (! (y==0)) \nreturn 0;\n\n\t/*@\n\n\n\n\n\n\n\n\nloop invariant i9: -x + 2*y >= 0;\nloop invariant i10: 3*x - y >= 0;\n*/\nwhile (unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (x >= 9)) \nreturn 0;\n\n\t\t\tx = x + 2;\n\t\t\ty = y + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (!(x >= 7)) \nreturn 0;\n\n\t\t\t\tif (!(x <= 9)) \nreturn 0;\n\n\t\t\t\tx = x + 1;\n\t\t\t\ty = y + 3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (x - 5 >=0)) \nreturn 0;\n\n\t\t\t\t\tif (! (x - 7 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 2;\n\t\t\t\t\ty = y + 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!(x - 4 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 1;\n\t\t\t\t\ty = y + 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t{;\n//@ assert(-x + 2*y  >= 0);\n}\n\n\t{;\n//@ assert(3*x - y  >= 0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 17,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 9;\nloop invariant 0 <= y <= 10;\nloop invariant x >= y;\nloop invariant x >= 7;\nloop invariant x <= 9;\nloop invariant x >= 5;\nloop invariant x <= 7;\nloop invariant x >= 4;\nloop invariant x <= 6;\nloop invariant x >= 3;\nloop invariant x <= 5;\nloop invariant x >= 2;\nloop invariant x <= 4;\nloop invariant x >= 1;\nloop invariant x <= 3;\nloop invariant x >= 0;\nloop invariant x <= 2;\nloop invariant y >= 0;\nloop invariant x >= y ==> x >= 9 ==> x >= 9 ==> x >= 9;\nloop invariant x < 9 ==> x >= y ==> x >= 9 ==> x < 9;\nloop invariant x >= 9 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant x < 9 ==> y >= 1 ==> y >= 1 ==> y < 10;\nloop invariant x >= y ==> x >= 7 ==> x >= 7 ==> x >= 7;\nloop invariant x < 7 ==> x >= y ==> x >= 7 ==> x < 7;\nloop invariant x >= 7 ==> x < 9 ==> x < 9 ==> x < 9;\nloop invariant x >= 7 ==> x >= y ==> x < 9 ==> x >= 9;\nloop invariant x < 7 ==> x >= y ==> x < 9 ==> x < 9;\nloop invariant x >= y ==> x >= 5 ==> x >= 5 ==> x >= 5;\nloop invariant x < 5 ==> x >= y ==> x >= 5 ==> x < 5;\nloop invariant x >= 5 ==> x >= y ==> x < 7 ==> x >= 7;\nloop invariant x >= 5 ==> x < 7 ==> x < 7 ==> x < 7;\nloop invariant x >= y ==> x >= 4 ==> x >= 4 ==> x >= 4;\nloop invariant x < 4 ==> x >= y ==> x >= 4 ==> x < 4;\nloop invariant x >= 4 ==> x >= y ==> x < 5 ==> x >= 5;\nloop invariant x >= 4 ==> x < 5 ==> x < 5 ==> x < 5;\nloop invariant x >= y ==> x >= 3 ==> x >= 3 ==> x >= 3;\nloop invariant x < 3 ==> x >= y ==> x >= 3 ==> x < 3;\nloop invariant x >= 3 ==> x >= y ==> x < 4 ==> x >= 4;\nloop invariant x >= 3 ==> x < 4 ==> x < 4 ==> x < 4;\nloop invariant x >= y ==> x >= 2 ==> x >= 2 ==> x >= 2;\nloop invariant x < 2 ==> x >= y ==> x >= 2 ==> x < 2;\nloop invariant x >= 2 ==> x >= y ==> x < 3 ==> x >= 3;\nloop invariant x >= 2 ==> x < 3 ==> x < 3 ==> x < 3;\nloop invariant x >= y ==> x >= 1 ==> x >= 1 ==> x >= 1;\nloop invariant x < 1 ==> x >= y ==> x >= 1 ==> x < 1;\nloop invariant x >= 1 ==> x >= y ==> x < 2 ==> x >= 2;\nloop invariant x >= 1 ==> x < 2 ==> x < 2 ==> x < 2;\nloop invariant x >= y ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant x < 0 ==> x >= y ==> x >= 0 ==> x < 0;\nloop invariant x >= 0 ==> x >= y ==> x < 1 ==> x >= 1;\nloop invariant x >= 0 ==> x < 1 ==> x < 1 ==> x < 1;\nloop invariant x >= y ==> x < 9 ==> x < 9 ==> x < 9;\nloop invariant x >= y ==> x >= 9 ==> x < 9 ==> x >= 9;\nloop invariant x < 9 ==> x >= y ==> x < 9 ==> x < 9;\nloop invariant x >= y ==> x < 7 ==> x < 7 ==> x < 7;\nloop invariant x >= y ==> x >= 7 ==> x < 7 ==> x >= 7;\nloop invariant x < 7 ==> x >= y ==> x < 7 ==> x < 7;\nloop invariant x >= y ==> x < 5 ==> x < 5 ==> x < 5;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint x;\n\tint y;\n\n\tif (! (x==0)) \nreturn 0;\n\n\tif (! (y==0)) \nreturn 0;\n\n\t/*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i16: x >= 0;\n\nloop invariant i18: y >= 0;\nloop invariant i19: x >= y ==> x >= 9 ==> x >= 9 ==> x >= 9;\nloop invariant i20: x < 9 ==> x >= y ==> x >= 9 ==> x < 9;\nloop invariant i21: x >= 9 ==> y >= 1 ==> y >= 1 ==> y >= 1;\n\nloop invariant i23: x >= y ==> x >= 7 ==> x >= 7 ==> x >= 7;\nloop invariant i24: x < 7 ==> x >= y ==> x >= 7 ==> x < 7;\nloop invariant i25: x >= 7 ==> x < 9 ==> x < 9 ==> x < 9;\n\nloop invariant i27: x < 7 ==> x >= y ==> x < 9 ==> x < 9;\nloop invariant i28: x >= y ==> x >= 5 ==> x >= 5 ==> x >= 5;\nloop invariant i29: x < 5 ==> x >= y ==> x >= 5 ==> x < 5;\nloop invariant i30: x >= 5 ==> x >= y ==> x < 7 ==> x >= 7;\nloop invariant i31: x >= 5 ==> x < 7 ==> x < 7 ==> x < 7;\nloop invariant i32: x >= y ==> x >= 4 ==> x >= 4 ==> x >= 4;\nloop invariant i33: x < 4 ==> x >= y ==> x >= 4 ==> x < 4;\nloop invariant i34: x >= 4 ==> x >= y ==> x < 5 ==> x >= 5;\nloop invariant i35: x >= 4 ==> x < 5 ==> x < 5 ==> x < 5;\nloop invariant i36: x >= y ==> x >= 3 ==> x >= 3 ==> x >= 3;\nloop invariant i37: x < 3 ==> x >= y ==> x >= 3 ==> x < 3;\nloop invariant i38: x >= 3 ==> x >= y ==> x < 4 ==> x >= 4;\nloop invariant i39: x >= 3 ==> x < 4 ==> x < 4 ==> x < 4;\nloop invariant i40: x >= y ==> x >= 2 ==> x >= 2 ==> x >= 2;\nloop invariant i41: x < 2 ==> x >= y ==> x >= 2 ==> x < 2;\nloop invariant i42: x >= 2 ==> x >= y ==> x < 3 ==> x >= 3;\nloop invariant i43: x >= 2 ==> x < 3 ==> x < 3 ==> x < 3;\nloop invariant i44: x >= y ==> x >= 1 ==> x >= 1 ==> x >= 1;\nloop invariant i45: x < 1 ==> x >= y ==> x >= 1 ==> x < 1;\nloop invariant i46: x >= 1 ==> x >= y ==> x < 2 ==> x >= 2;\nloop invariant i47: x >= 1 ==> x < 2 ==> x < 2 ==> x < 2;\nloop invariant i48: x >= y ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i49: x < 0 ==> x >= y ==> x >= 0 ==> x < 0;\n\nloop invariant i51: x >= 0 ==> x < 1 ==> x < 1 ==> x < 1;\nloop invariant i52: x >= y ==> x < 9 ==> x < 9 ==> x < 9;\nloop invariant i53: x >= y ==> x >= 9 ==> x < 9 ==> x >= 9;\nloop invariant i54: x < 9 ==> x >= y ==> x < 9 ==> x < 9;\nloop invariant i55: x >= y ==> x < 7 ==> x < 7 ==> x < 7;\nloop invariant i56: x >= y ==> x >= 7 ==> x < 7 ==> x >= 7;\nloop invariant i57: x < 7 ==> x >= y ==> x < 7 ==> x < 7;\nloop invariant i58: x >= y ==> x < 5 ==> x < 5 ==> x < 5;\n*/\nwhile (unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (x >= 9)) \nreturn 0;\n\n\t\t\tx = x + 2;\n\t\t\ty = y + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (!(x >= 7)) \nreturn 0;\n\n\t\t\t\tif (!(x <= 9)) \nreturn 0;\n\n\t\t\t\tx = x + 1;\n\t\t\t\ty = y + 3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (x - 5 >=0)) \nreturn 0;\n\n\t\t\t\t\tif (! (x - 7 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 2;\n\t\t\t\t\ty = y + 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!(x - 4 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 1;\n\t\t\t\t\ty = y + 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t{;\n//@ assert(-x + 2*y  >= 0);\n}\n\n\t{;\n//@ assert(3*x - y  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 9;\nloop invariant -4 <= y <= 3;\nloop invariant y >= -y;\nloop invariant x >= 0;\nloop invariant x <= 9;\nloop invariant -4 <= x + 2*y <= 9;\nloop invariant 3*x - y >= 0;\nloop invariant -4 <= x + 1*y <= 9;\nloop invariant 3*x - y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint x;\n\tint y;\n\n\tif (! (x==0)) \nreturn 0;\n\n\tif (! (y==0)) \nreturn 0;\n\n\t/*@\n\n\nloop invariant i3: y >= -y;\nloop invariant i4: x >= 0;\n\n\nloop invariant i7: 3*x - y >= 0;\n\n*/\nwhile (unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (x >= 9)) \nreturn 0;\n\n\t\t\tx = x + 2;\n\t\t\ty = y + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (!(x >= 7)) \nreturn 0;\n\n\t\t\t\tif (!(x <= 9)) \nreturn 0;\n\n\t\t\t\tx = x + 1;\n\t\t\t\ty = y + 3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (x - 5 >=0)) \nreturn 0;\n\n\t\t\t\t\tif (! (x - 7 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 2;\n\t\t\t\t\ty = y + 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!(x - 4 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 1;\n\t\t\t\t\ty = y + 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t{;\n//@ assert(-x + 2*y  >= 0);\n}\n\n\t{;\n//@ assert(3*x - y  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant x >= 0 && x <= 9;\nloop invariant y >= 0 && y <= 3;\nloop invariant if (x >= 7) then x <= 9;\nloop invariant if (x - 5 >= 0) then x - 7 <= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint x;\n\tint y;\n\n\tif (! (x==0)) \nreturn 0;\n\n\tif (! (y==0)) \nreturn 0;\n\n\t/*@\n\n\n\n\n*/\nwhile (unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (x >= 9)) \nreturn 0;\n\n\t\t\tx = x + 2;\n\t\t\ty = y + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (!(x >= 7)) \nreturn 0;\n\n\t\t\t\tif (!(x <= 9)) \nreturn 0;\n\n\t\t\t\tx = x + 1;\n\t\t\t\ty = y + 3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (x - 5 >=0)) \nreturn 0;\n\n\t\t\t\t\tif (! (x - 7 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 2;\n\t\t\t\t\ty = y + 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!(x - 4 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 1;\n\t\t\t\t\ty = y + 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t{;\n//@ assert(-x + 2*y  >= 0);\n}\n\n\t{;\n//@ assert(3*x - y  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 80,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x - 4 <= 0;\nloop invariant y >= 0;\nloop invariant y <= 3;\nloop invariant x - 5 >= 0;\nloop invariant x - 7 <= 0;\nloop invariant x >= 0;\nloop invariant x >= 7;\nloop invariant x >= 9;\nloop invariant x >= 3*y;\nloop invariant x >= 3*y - 2;\nloop invariant x >= 3*y - 1;\nloop invariant x >= 3*y - 3;\nloop invariant x >= 3*y - 4;\nloop invariant x >= 3*y - 5;\nloop invariant x >= 3*y - 6;\nloop invariant x >= 3*y - 7;\nloop invariant x >= 3*y - 8;\nloop invariant x >= 3*y - 9;\nloop invariant x >= 3*y - 10;\nloop invariant x >= 3*y - 11;\nloop invariant x >= 3*y - 12;\nloop invariant x >= 3*y - 13;\nloop invariant x >= 3*y - 14;\nloop invariant x >= 3*y - 15;\nloop invariant x >= 3*y - 16;\nloop invariant x >= 3*y - 17;\nloop invariant x >= 3*y - 18;\nloop invariant x >= 3*y - 19;\nloop invariant x >= 3*y - 20;\nloop invariant x >= 3*y - 21;\nloop invariant x >= 3*y - 22;\nloop invariant x >= 3*y - 23;\nloop invariant x >= 3*y - 24;\nloop invariant x >= 3*y - 25;\nloop invariant x >= 3*y - 26;\nloop invariant x >= 3*y - 27;\nloop invariant x >= 3*y - 28;\nloop invariant x >= 3*y - 29;\nloop invariant x >= 3*y - 30;\nloop invariant x >= 3*y - 31;\nloop invariant x >= 3*y - 32;\nloop invariant x >= 3*y - 33;\nloop invariant x >= 3*y - 34;\nloop invariant x >= 3*y - 35;\nloop invariant x >= 3*y - 36;\nloop invariant x >= 3*y - 37;\nloop invariant x >= 3*y - 38;\nloop invariant x >= 3*y - 39;\nloop invariant x >= 3*y - 40;\nloop invariant x >= 3*y - 41;\nloop invariant x >= 3*y - 42;\nloop invariant x >= 3*y - 43;\nloop invariant x >= 3*y - 44;\nloop invariant x >= 3*y - 45;\nloop invariant x >= 3*y - 46;\nloop invariant x >= 3*y - 47;\nloop invariant x >= 3*y - 48;\nloop invariant x >= 3*y - 49;\nloop invariant x >= 3*y - 50;\nloop invariant x >= 3*y - 51;\nloop invariant x >= 3*y - 52;\nloop invariant x >= 3*y - 53;\nloop invariant x >= 3*y - 54;\nloop invariant x >= 3*y - 55;\nloop invariant x >= 3*y - 56;\nloop invariant x >= 3*y - 57;\nloop invariant x >= 3*y - 58;\nloop invariant x >= 3*y - 59;\nloop invariant x >= 3*y - 60;\nloop invariant x >= 3*y - 61;\nloop invariant x >= 3*y - 62;\nloop invariant x >= 3*y - 63;\nloop invariant x >= 3*y - 64;\nloop invariant x >= 3*y - 65;\nloop invariant x >= 3*y - 66;\nloop invariant x >= 3*y - 67;\nloop invariant x >= 3*y - 68;\nloop invariant x >= 3*y - 69;\nloop invariant x >= 3*y - 70;\nloop invariant x >= 3*y - 71;\nloop invariant x >= 3*y - 72;\nloop invariant x >= 3*y - 73;\nloop invariant x >= 3*y - 74;\nloop invariant x >= 3*y - 75;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint x;\n\tint y;\n\n\tif (! (x==0)) \nreturn 0;\n\n\tif (! (y==0)) \nreturn 0;\n\n\t/*@\n\n\n\nloop invariant i4: y >= 0;\n\n\n\nloop invariant i8: x >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (x >= 9)) \nreturn 0;\n\n\t\t\tx = x + 2;\n\t\t\ty = y + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (!(x >= 7)) \nreturn 0;\n\n\t\t\t\tif (!(x <= 9)) \nreturn 0;\n\n\t\t\t\tx = x + 1;\n\t\t\t\ty = y + 3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (x - 5 >=0)) \nreturn 0;\n\n\t\t\t\t\tif (! (x - 7 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 2;\n\t\t\t\t\ty = y + 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!(x - 4 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 1;\n\t\t\t\t\ty = y + 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t{;\n//@ assert(-x + 2*y  >= 0);\n}\n\n\t{;\n//@ assert(3*x - y  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 10;\nloop invariant y <= 5;\nloop invariant x - 5 >= 0 ==> y <= 5;\nloop invariant x - 7 <= 0 ==> y <= 5;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint x;\n\tint y;\n\n\tif (! (x==0)) \nreturn 0;\n\n\tif (! (y==0)) \nreturn 0;\n\n\t/*@\nloop invariant i1: x >= 0;\nloop invariant i2: y >= 0;\n\n\n\n\n*/\nwhile (unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (x >= 9)) \nreturn 0;\n\n\t\t\tx = x + 2;\n\t\t\ty = y + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (!(x >= 7)) \nreturn 0;\n\n\t\t\t\tif (!(x <= 9)) \nreturn 0;\n\n\t\t\t\tx = x + 1;\n\t\t\t\ty = y + 3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (x - 5 >=0)) \nreturn 0;\n\n\t\t\t\t\tif (! (x - 7 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 2;\n\t\t\t\t\ty = y + 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!(x - 4 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 1;\n\t\t\t\t\ty = y + 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t{;\n//@ assert(-x + 2*y  >= 0);\n}\n\n\t{;\n//@ assert(3*x - y  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 9;\nloop invariant 0 <= y <= 9;\nloop invariant x >= 9 ==> x == 9;\nloop invariant x >= 7 ==> x == 7;\nloop invariant x - 5 >= 0 ==> x == 5;\nloop invariant x - 7 <= 0 ==> x == 7;\nloop invariant x - 4 <= 0 ==> x == 4;\nloop invariant -x + 2*y >= 0 ==> x == 4;\nloop invariant 3*x - y >= 0 ==> x == 3;\nloop invariant x == 9 ==> y == 0;\nloop invariant x == 7 ==> y == 3;\nloop invariant x == 5 ==> y == 7;\nloop invariant x == 7 ==> y == 7;\nloop invariant x == 4 ==> y == 9;\nloop invariant x == 3 ==> y == 9;\nloop invariant x == 2 ==> y == 10;\nloop invariant x == 1 ==> y == 11;\nloop invariant x == 0 ==> y == 12;\nloop invariant x == 9 ==> y == 0;\nloop invariant x == 7 ==> y == 3;\nloop invariant x == 5 ==> y == 7;\nloop invariant x == 7 ==> y == 7;\nloop invariant x == 4 ==> y == 9;\nloop invariant x == 3 ==> y == 9;\nloop invariant x == 2 ==> y == 10;\nloop invariant x == 1 ==> y == 11;\nloop invariant x == 0 ==> y == 12;\nloop invariant x == 9 ==> y == 0;\nloop invariant x == 7 ==> y == 3;\nloop invariant x == 5 ==> y == 7;\nloop invariant x == 7 ==> y == 7;\nloop invariant x == 4 ==> y == 9;\nloop invariant x == 3 ==> y == 9;\nloop invariant x == 2 ==> y == 10;\nloop invariant x == 1 ==> y == 11;\nloop invariant x == 0 ==> y == 12;\nloop invariant x == 9 ==> y == 0;\nloop invariant x == 7 ==> y == 3;\nloop invariant x == 5 ==> y == 7;\nloop invariant x == 7 ==> y == 7;\nloop invariant x == 4 ==> y == 9;\nloop invariant x == 3 ==> y == 9;\nloop invariant x == 2 ==> y == 10;\nloop invariant x == 1 ==> y == 11;\nloop invariant x == 0 ==> y == 12;\nloop invariant x == 9 ==> y == 0;\nloop invariant x == 7 ==> y == 3;\nloop invariant x == 5 ==> y == 7;\nloop invariant x == 7 ==> y == 7;\nloop invariant x == 4 ==> y == 9;\nloop invariant x == 3 ==> y == 9;\nloop invariant x == 2 ==> y == 10;\nloop invariant x == 1 ==> y == 11;\nloop invariant x == 0 ==> y == 12;\nloop invariant x == 9 ==> y == 0;\nloop invariant x == 7 ==> y == 3;\nloop invariant x == 5 ==> y == 7;\nloop invariant x == 7 ==> y == 7;\nloop invariant x == 4 ==> y == 9;\nloop invariant x == 3 ==> y == 9;\nloop invariant x == 2 ==> y == 10;\nloop invariant x == 1 ==> y == 11;\nloop invariant x == 0 ==> y == 12;\nloop invariant x == 9 ==> y == 0;\nloop invariant x == 7 ==> y == 3;\nloop invariant x == 5 ==> y == 7;\nloop invariant x == 7 ==> y == 7;\nloop invariant x == 4 ==> y == 9;\nloop invariant x == 3 ==> y == 9;\nloop invariant x == 2 ==> y == 10;\nloop invariant x == 1 ==> y == 11;\nloop invariant x == 0 ==> y == 12;\nloop invariant x == 9 ==> y == 0;\nloop invariant x == 7 ==> y == 3;\nloop invariant x == 5 ==> y == 7;\nloop invariant x == 7 ==> y == 7;\nloop invariant x == 4 ==> y == 9;\nloop invariant x == 3 ==> y == 9;\nloop invariant x == 2 ==> y == 10;\nloop invariant x == 1 ==> y == 11;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint x;\n\tint y;\n\n\tif (! (x==0)) \nreturn 0;\n\n\tif (! (y==0)) \nreturn 0;\n\n\t/*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (x >= 9)) \nreturn 0;\n\n\t\t\tx = x + 2;\n\t\t\ty = y + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (!(x >= 7)) \nreturn 0;\n\n\t\t\t\tif (!(x <= 9)) \nreturn 0;\n\n\t\t\t\tx = x + 1;\n\t\t\t\ty = y + 3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (x - 5 >=0)) \nreturn 0;\n\n\t\t\t\t\tif (! (x - 7 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 2;\n\t\t\t\t\ty = y + 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!(x - 4 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 1;\n\t\t\t\t\ty = y + 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t{;\n//@ assert(-x + 2*y  >= 0);\n}\n\n\t{;\n//@ assert(3*x - y  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 9;\nloop invariant 0 <= y <= 10;\nloop invariant x <= 9 ==> -x + 2*y >= 0;\nloop invariant x <= 9 ==> 3*x - y >= 0;\nloop invariant x <= 9 ==> x - 5 >= 0 ==> x - 7 <= 0 ==> x - 4 <= 0 ==> -x + 2*y >= 0 ==> 3*x - y >= 0;\nloop invariant x <= 9 ==> x - 5 >= 0 ==> x - 7 <= 0 ==> x - 4 <= 0 ==> -x + 2*y >= 0 ==> 3*x - y >= 0 ==> x - 4 <= 0 ==> y <= 10;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint x;\n\tint y;\n\n\tif (! (x==0)) \nreturn 0;\n\n\tif (! (y==0)) \nreturn 0;\n\n\t/*@\n\n\nloop invariant i3: x <= 9 ==> -x + 2*y >= 0;\nloop invariant i4: x <= 9 ==> 3*x - y >= 0;\nloop invariant i5: x <= 9 ==> x - 5 >= 0 ==> x - 7 <= 0 ==> x - 4 <= 0 ==> -x + 2*y >= 0 ==> 3*x - y >= 0;\nloop invariant i6: x <= 9 ==> x - 5 >= 0 ==> x - 7 <= 0 ==> x - 4 <= 0 ==> -x + 2*y >= 0 ==> 3*x - y >= 0 ==> x - 4 <= 0 ==> y <= 10;\n*/\nwhile (unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (x >= 9)) \nreturn 0;\n\n\t\t\tx = x + 2;\n\t\t\ty = y + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (!(x >= 7)) \nreturn 0;\n\n\t\t\t\tif (!(x <= 9)) \nreturn 0;\n\n\t\t\t\tx = x + 1;\n\t\t\t\ty = y + 3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (x - 5 >=0)) \nreturn 0;\n\n\t\t\t\t\tif (! (x - 7 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 2;\n\t\t\t\t\ty = y + 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!(x - 4 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 1;\n\t\t\t\t\ty = y + 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t{;\n//@ assert(-x + 2*y  >= 0);\n}\n\n\t{;\n//@ assert(3*x - y  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant -x + 2*y >= 0;\nloop invariant 3*x - y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint x;\n\tint y;\n\n\tif (! (x==0)) \nreturn 0;\n\n\tif (! (y==0)) \nreturn 0;\n\n\t/*@\nloop invariant i1: x >= 0;\nloop invariant i2: y >= 0;\nloop invariant i3: -x + 2*y >= 0;\nloop invariant i4: 3*x - y >= 0;\n*/\nwhile (unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (x >= 9)) \nreturn 0;\n\n\t\t\tx = x + 2;\n\t\t\ty = y + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (!(x >= 7)) \nreturn 0;\n\n\t\t\t\tif (!(x <= 9)) \nreturn 0;\n\n\t\t\t\tx = x + 1;\n\t\t\t\ty = y + 3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (x - 5 >=0)) \nreturn 0;\n\n\t\t\t\t\tif (! (x - 7 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 2;\n\t\t\t\t\ty = y + 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!(x - 4 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 1;\n\t\t\t\t\ty = y + 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t{;\n//@ assert(-x + 2*y  >= 0);\n}\n\n\t{;\n//@ assert(3*x - y  >= 0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 32,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant x >= 5;\nloop invariant y <= 3;\nloop invariant -x + 2*y >= 0;\nloop invariant 3*x - y >= 0;\nloop invariant (x >= 9 ==> y <= 2);\nloop invariant (x >= 7 ==> y <= 1);\nloop invariant (x >= 7 ==> y >= 1);\nloop invariant (x >= 5 ==> y <= 1);\nloop invariant (x >= 5 ==> y >= 1);\nloop invariant (x <= 9 ==> y >= 1);\nloop invariant (x <= 9 ==> y <= 1);\nloop invariant (x - 5 >= 0 ==> y >= 1);\nloop invariant (x - 5 >= 0 ==> y <= 2);\nloop invariant (x - 4 <= 0 ==> y >= 1);\nloop invariant (x - 4 <= 0 ==> y <= 1);\nloop invariant (x - 7 <= 0 ==> y >= 1);\nloop invariant (x - 7 <= 0 ==> y <= 1);\nloop invariant (unknown_int() ==> x >= 0);\nloop invariant (unknown_int() ==> y >= 0);\nloop invariant (unknown_int() ==> x >= y);\nloop invariant (unknown_int() ==> x >= 5);\nloop invariant (unknown_int() ==> y <= 3);\nloop invariant (unknown_int() ==> -x + 2*y >= 0);\nloop invariant (unknown_int() ==> 3*x - y >= 0);\nloop invariant (unknown_int() ==> (x >= 9 ==> y <= 2));\nloop invariant (unknown_int() ==> (x >= 7 ==> y <= 1));\nloop invariant (unknown_int() ==> (x >= 7 ==> y >= 1));\nloop invariant (unknown_int() ==> (x >= 5 ==> y <= 1));\nloop invariant (unknown_int() ==> (x >= 5 ==> y >= 1));\nloop invariant (unknown_int() ==> (x <= 9 ==> y >= 1));\nloop invariant (unknown_int() ==> (x <= 9 ==> y <= 1));\nloop invariant (unknown_int() ==> (x - 5 >= 0 ==> y >= 1));\nloop invariant (unknown_int() ==> (x - 5 >= 0 ==> y <= 2));\nloop invariant (unknown_int() ==> (x - 4 <= 0 ==> y >= 1));\nloop invariant (unknown_int() ==> (x - 4 <= 0 ==> y <= 1));\nloop invariant (unknown_int() ==> (x - 7 <= 0 ==> y >= 1));\nloop invariant (unknown_int() ==> (x - 7 <= 0 ==> y <= 1));\nloop invariant (unknown_int() ==> (x >= 9 ==> y <= 2));\nloop invariant (unknown_int() ==> (x >= 7 ==> y <= 1));\nloop invariant (unknown_int() ==> (x >= 7 ==> y >= 1));\nloop invariant (unknown_int() ==> (x >= 5 ==> y <= 1));\nloop invariant (unknown_int() ==> (x >= 5 ==> y >= 1));\nloop invariant (unknown_int() ==> (x <= 9 ==> y >= 1));\nloop invariant (unknown_int() ==> (x <= 9 ==> y <= 1));\nloop invariant (unknown_int() ==> (x - 5 >= 0 ==> y >= 1));\nloop invariant (unknown_int() ==> (x - 5 >= 0 ==> y <= 2));\nloop invariant (unknown_int() ==> (x - 4 <= 0 ==> y >= 1));\nloop invariant (unknown_int() ==> (x - 4 <= 0 ==> y <= 1));\nloop invariant (unknown_int() ==> (x - 7 <= 0 ==> y >= 1));\nloop invariant (unknown_int() ==> (x - 7 <= 0 ==> y <= 1));\nloop invariant (unknown_int() ==> (x >= 9 ==> y <= 2));\nloop invariant (unknown_int() ==> (x >= 7 ==> y <= 1));\nloop invariant (unknown_int() ==> (x >= 7 ==> y >= 1));\nloop invariant (unknown_int() ==> (x >= 5 ==> y <= 1));\nloop invariant (unknown_int() ==> (x >= 5 ==> y >= 1));\nloop invariant (unknown_int() ==> (x <= 9 ==> y >= 1));\nloop invariant (unknown_int() ==> (x <= 9 ==> y <= 1));\nloop invariant (unknown_int() ==> (x - 5 >= 0 ==> y >= 1));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint x;\n\tint y;\n\n\tif (! (x==0)) \nreturn 0;\n\n\tif (! (y==0)) \nreturn 0;\n\n\t/*@\nloop invariant i1: x >= 0;\nloop invariant i2: y >= 0;\n\n\n\nloop invariant i6: -x + 2*y >= 0;\nloop invariant i7: 3*x - y >= 0;\n\n\nloop invariant i10: (x >= 7 ==> y >= 1);\n\nloop invariant i12: (x >= 5 ==> y >= 1);\n\n\nloop invariant i15: (x - 5 >= 0 ==> y >= 1);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (x >= 9)) \nreturn 0;\n\n\t\t\tx = x + 2;\n\t\t\ty = y + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (!(x >= 7)) \nreturn 0;\n\n\t\t\t\tif (!(x <= 9)) \nreturn 0;\n\n\t\t\t\tx = x + 1;\n\t\t\t\ty = y + 3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (x - 5 >=0)) \nreturn 0;\n\n\t\t\t\t\tif (! (x - 7 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 2;\n\t\t\t\t\ty = y + 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!(x - 4 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 1;\n\t\t\t\t\ty = y + 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t{;\n//@ assert(-x + 2*y  >= 0);\n}\n\n\t{;\n//@ assert(3*x - y  >= 0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 11,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 9;\nloop invariant 0 <= y <= 3*x - 2;\nloop invariant (x - 7 <= 0 ==> x >= 7);\nloop invariant (x - 5 >= 0 ==> x <= 9);\nloop invariant (x >= 7 ==> x - 5 >= 0);\nloop invariant (x <= 9 ==> x - 7 <= 0);\nloop invariant (x < 9 ==> x + 2 >= 9);\nloop invariant (x >= 9 ==> x + 2 <= 11);\nloop invariant (x < 7 ==> x + 1 >= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 1 <= 10);\nloop invariant (x >= 9 ==> x + 1 <= 10);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 2 <= 11);\nloop invariant (x >= 9 ==> x + 2 <= 11);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 1 <= 10);\nloop invariant (x >= 9 ==> x + 1 <= 10);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 2 <= 11);\nloop invariant (x >= 9 ==> x + 2 <= 11);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 1 <= 10);\nloop invariant (x >= 9 ==> x + 1 <= 10);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 2 <= 11);\nloop invariant (x >= 9 ==> x + 2 <= 11);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 1 <= 10);\nloop invariant (x >= 9 ==> x + 1 <= 10);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 2 <= 11);\nloop invariant (x >= 9 ==> x + 2 <= 11);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 1 <= 10);\nloop invariant (x >= 9 ==> x + 1 <= 10);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 2 <= 11);\nloop invariant (x >= 9 ==> x + 2 <= 11);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 1 <= 10);\nloop invariant (x >= 9 ==> x + 1 <= 10);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 2 <= 11);\nloop invariant (x >= 9 ==> x + 2 <= 11);\nloop invariant (x < 7 ==> x + 1 <= 8);\nloop invariant (x >= 7 ==> x + 1 <= 8);\nloop invariant (x < 9 ==> x + 1 <= 10);\nloop invariant (x >= 9 ==> x + 1 <= 10);\nloop invariant (x < 7 ==> x + 1 <= 8);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint x;\n\tint y;\n\n\tif (! (x==0)) \nreturn 0;\n\n\tif (! (y==0)) \nreturn 0;\n\n\t/*@\n\n\n\n\nloop invariant i5: (x >= 7 ==> x - 5 >= 0);\n\n\n\n\n\nloop invariant i11: (x < 9 ==> x + 1 <= 10);\n\nloop invariant i13: (x < 7 ==> x + 1 <= 8);\nloop invariant i14: (x < 9 ==> x + 2 <= 11);\n*/\nwhile (unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (x >= 9)) \nreturn 0;\n\n\t\t\tx = x + 2;\n\t\t\ty = y + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (!(x >= 7)) \nreturn 0;\n\n\t\t\t\tif (!(x <= 9)) \nreturn 0;\n\n\t\t\t\tx = x + 1;\n\t\t\t\ty = y + 3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (x - 5 >=0)) \nreturn 0;\n\n\t\t\t\t\tif (! (x - 7 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 2;\n\t\t\t\t\ty = y + 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!(x - 4 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 1;\n\t\t\t\t\ty = y + 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t{;\n//@ assert(-x + 2*y  >= 0);\n}\n\n\t{;\n//@ assert(3*x - y  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 39: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint x;\n\tint y;\n\n\tif (! (x==0)) \nreturn 0;\n\n\tif (! (y==0)) \nreturn 0;\n\n\t/*@\nloop invariant i1: 0 <= x <= 9;\nloop invariant i2: 0 <= y;\nloop invariant i3: x + y <= 2*y;\nloop invariant i4: x - y >= -y;\nloop invariant i5: x - y <= 9;\nloop invariant i6: x - y >= 0 ==> (x >= 9);\nloop invariant i7: x - y <= 0 ==> (x <= 7);\nloop invariant i8: x - y >= 0 ==> (x <= 9);\nloop invariant i9: x - y <= 0 ==> (x - 5 >= 0);\nloop invariant i10: x - y <= 0 ==> (x - 7 <= 0);\nloop invariant i11: x - y >= 0 ==> (x >= 5);\nloop invariant i12: x - y <= 0 ==> (x <= 4);\nloop invariant i13: i1;\nloop invariant i14: i2;\nloop invariant i15: 0 <= y <= 100000;\nloop invariant i16: x >= (1 + (y - 1) * y / 2);\nloop invariant i17: 0 <= x <= unknown_int() * 2;\nloop invariant i18: 0 <= y <= unknown_int() * 2;\nloop invariant i19: -x + 2*y >= 0 ==> (x <= unknown_int() and y <= 2*unknown_int());\nloop invariant i20: 3*x - y >= 0 ==> (x >= unknown_int() / 2 and y >= 0);\nloop invariant i21: 0 <= y <= 10;\nloop invariant i22: 0 <= x - 5 <= 5;\nloop invariant i23: 0 <= x - 7 <= 2;\nloop invariant i24: x - 4 <= 0 ==> x >= -4;\nloop invariant i25: x - 4 <= 0 ==> y >= -8;\nloop invariant i26: x - 7 <= 0 ==> x >= -7;\nloop invariant i27: x - 7 <= 0 ==> y >= -10;\nloop invariant i28: x - 5 >= 0 ==> x >= 5;\nloop invariant i29: x - 5 >= 0 ==> y >= -3;\nloop invariant i30: x - 4 >= 0 ==> x >= 4;\nloop invariant i31: x - 4 >= 0 ==> y >= -6;\nloop invariant i32: x >= 9 ==> x >= 9;\nloop invariant i33: x >= 9 ==> y >= 0;\nloop invariant i34: x >= 9;\nloop invariant i35: x >= 7;\nloop invariant i36: x <= 9;\nloop invariant i37: x - 5 >= 0;\nloop invariant i38: x - 7 <= 0;\nloop invariant i39: x - 4 <= 0;\nloop invariant i40: -x + 2*y >= 0;\nloop invariant i41: 3*x - y >= 0;\nloop invariant i42: x >= y;\nloop invariant i43: x >= 5;\nloop invariant i44: x <= 7;\nloop invariant i45: x >= 4;\nloop invariant i46: x <= 6;\nloop invariant i47: x >= 3;\nloop invariant i48: x <= 5;\nloop invariant i49: x >= 2;\nloop invariant i50: x <= 4;\nloop invariant i51: x >= 1;\nloop invariant i52: x <= 3;\nloop invariant i53: x >= 0;\nloop invariant i54: x <= 2;\nloop invariant i55: y >= 0;\nloop invariant i56: x >= y ==> x >= 9 ==> x >= 9 ==> x >= 9;\nloop invariant i57: x < 9 ==> x >= y ==> x >= 9 ==> x < 9;\nloop invariant i58: x >= 9 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i59: x < 9 ==> y >= 1 ==> y >= 1 ==> y < 10;\nloop invariant i60: x >= y ==> x >= 7 ==> x >= 7 ==> x >= 7;\nloop invariant i61: x < 7 ==> x >= y ==> x >= 7 ==> x < 7;\nloop invariant i62: x >= 7 ==> x < 9 ==> x < 9 ==> x < 9;\nloop invariant i63: x >= 7 ==> x >= y ==> x < 9 ==> x >= 9;\nloop invariant i64: x < 7 ==> x >= y ==> x < 9 ==> x < 9;\nloop invariant i65: x >= y ==> x >= 5 ==> x >= 5 ==> x >= 5;\nloop invariant i66: x < 5 ==> x >= y ==> x >= 5 ==> x < 5;\nloop invariant i67: x >= 5 ==> x >= y ==> x < 7 ==> x >= 7;\nloop invariant i68: x >= 5 ==> x < 7 ==> x < 7 ==> x < 7;\nloop invariant i69: x >= y ==> x >= 4 ==> x >= 4 ==> x >= 4;\nloop invariant i70: x < 4 ==> x >= y ==> x >= 4 ==> x < 4;\nloop invariant i71: x >= 4 ==> x >= y ==> x < 5 ==> x >= 5;\nloop invariant i72: x >= 4 ==> x < 5 ==> x < 5 ==> x < 5;\nloop invariant i73: x >= y ==> x >= 3 ==> x >= 3 ==> x >= 3;\nloop invariant i74: x < 3 ==> x >= y ==> x >= 3 ==> x < 3;\nloop invariant i75: x >= 3 ==> x >= y ==> x < 4 ==> x >= 4;\nloop invariant i76: x >= 3 ==> x < 4 ==> x < 4 ==> x < 4;\nloop invariant i77: x >= y ==> x >= 2 ==> x >= 2 ==> x >= 2;\nloop invariant i78: x < 2 ==> x >= y ==> x >= 2 ==> x < 2;\nloop invariant i79: x >= 2 ==> x >= y ==> x < 3 ==> x >= 3;\nloop invariant i80: x >= 2 ==> x < 3 ==> x < 3 ==> x < 3;\nloop invariant i81: x >= y ==> x >= 1 ==> x >= 1 ==> x >= 1;\nloop invariant i82: x < 1 ==> x >= y ==> x >= 1 ==> x < 1;\nloop invariant i83: x >= 1 ==> x >= y ==> x < 2 ==> x >= 2;\nloop invariant i84: x >= 1 ==> x < 2 ==> x < 2 ==> x < 2;\nloop invariant i85: x >= y ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i86: x < 0 ==> x >= y ==> x >= 0 ==> x < 0;\nloop invariant i87: x >= 0 ==> x >= y ==> x < 1 ==> x >= 1;\nloop invariant i88: x >= 0 ==> x < 1 ==> x < 1 ==> x < 1;\nloop invariant i89: x >= y ==> x < 9 ==> x < 9 ==> x < 9;\nloop invariant i90: x >= y ==> x >= 9 ==> x < 9 ==> x >= 9;\nloop invariant i91: x < 9 ==> x >= y ==> x < 9 ==> x < 9;\nloop invariant i92: x >= y ==> x < 7 ==> x < 7 ==> x < 7;\nloop invariant i93: x >= y ==> x >= 7 ==> x < 7 ==> x >= 7;\nloop invariant i94: x < 7 ==> x >= y ==> x < 7 ==> x < 7;\nloop invariant i95: x >= y ==> x < 5 ==> x < 5 ==> x < 5;\nloop invariant i96: -4 <= y <= 3;\nloop invariant i97: y >= -y;\nloop invariant i98: -4 <= x + 2*y <= 9;\nloop invariant i99: -4 <= x + 1*y <= 9;\nloop invariant i100: x >= 0 && x <= 9;\nloop invariant i101: y >= 0 && y <= 3;\nloop invariant i102: if (x >= 7) then x <= 9;\nloop invariant i103: if (x - 5 >= 0) then x - 7 <= 0;\nloop invariant i104: y <= 3;\nloop invariant i105: x >= 3*y;\nloop invariant i106: x >= 3*y - 2;\nloop invariant i107: x >= 3*y - 1;\nloop invariant i108: x >= 3*y - 3;\nloop invariant i109: x >= 3*y - 4;\nloop invariant i110: x >= 3*y - 5;\nloop invariant i111: x >= 3*y - 6;\nloop invariant i112: x >= 3*y - 7;\nloop invariant i113: x >= 3*y - 8;\nloop invariant i114: x >= 3*y - 9;\nloop invariant i115: x >= 3*y - 10;\nloop invariant i116: x >= 3*y - 11;\nloop invariant i117: x >= 3*y - 12;\nloop invariant i118: x >= 3*y - 13;\nloop invariant i119: x >= 3*y - 14;\nloop invariant i120: x >= 3*y - 15;\nloop invariant i121: x >= 3*y - 16;\nloop invariant i122: x >= 3*y - 17;\nloop invariant i123: x >= 3*y - 18;\nloop invariant i124: x >= 3*y - 19;\nloop invariant i125: x >= 3*y - 20;\nloop invariant i126: x >= 3*y - 21;\nloop invariant i127: x >= 3*y - 22;\nloop invariant i128: x >= 3*y - 23;\nloop invariant i129: x >= 3*y - 24;\nloop invariant i130: x >= 3*y - 25;\nloop invariant i131: x >= 3*y - 26;\nloop invariant i132: x >= 3*y - 27;\nloop invariant i133: x >= 3*y - 28;\nloop invariant i134: x >= 3*y - 29;\nloop invariant i135: x >= 3*y - 30;\nloop invariant i136: x >= 3*y - 31;\nloop invariant i137: x >= 3*y - 32;\nloop invariant i138: x >= 3*y - 33;\nloop invariant i139: x >= 3*y - 34;\nloop invariant i140: x >= 3*y - 35;\nloop invariant i141: x >= 3*y - 36;\nloop invariant i142: x >= 3*y - 37;\nloop invariant i143: x >= 3*y - 38;\nloop invariant i144: x >= 3*y - 39;\nloop invariant i145: x >= 3*y - 40;\nloop invariant i146: x >= 3*y - 41;\nloop invariant i147: x >= 3*y - 42;\nloop invariant i148: x >= 3*y - 43;\nloop invariant i149: x >= 3*y - 44;\nloop invariant i150: x >= 3*y - 45;\nloop invariant i151: x >= 3*y - 46;\nloop invariant i152: x >= 3*y - 47;\nloop invariant i153: x >= 3*y - 48;\nloop invariant i154: x >= 3*y - 49;\nloop invariant i155: x >= 3*y - 50;\nloop invariant i156: x >= 3*y - 51;\nloop invariant i157: x >= 3*y - 52;\nloop invariant i158: x >= 3*y - 53;\nloop invariant i159: x >= 3*y - 54;\nloop invariant i160: x >= 3*y - 55;\nloop invariant i161: x >= 3*y - 56;\nloop invariant i162: x >= 3*y - 57;\nloop invariant i163: x >= 3*y - 58;\nloop invariant i164: x >= 3*y - 59;\nloop invariant i165: x >= 3*y - 60;\nloop invariant i166: x >= 3*y - 61;\nloop invariant i167: x >= 3*y - 62;\nloop invariant i168: x >= 3*y - 63;\nloop invariant i169: x >= 3*y - 64;\nloop invariant i170: x >= 3*y - 65;\nloop invariant i171: x >= 3*y - 66;\nloop invariant i172: x >= 3*y - 67;\nloop invariant i173: x >= 3*y - 68;\nloop invariant i174: x >= 3*y - 69;\nloop invariant i175: x >= 3*y - 70;\nloop invariant i176: x >= 3*y - 71;\nloop invariant i177: x >= 3*y - 72;\nloop invariant i178: x >= 3*y - 73;\nloop invariant i179: x >= 3*y - 74;\nloop invariant i180: x >= 3*y - 75;\nloop invariant i181: x <= 10;\nloop invariant i182: y <= 5;\nloop invariant i183: x - 5 >= 0 ==> y <= 5;\nloop invariant i184: x - 7 <= 0 ==> y <= 5;\nloop invariant i185: 0 <= y <= 9;\nloop invariant i186: x >= 9 ==> x == 9;\nloop invariant i187: x >= 7 ==> x == 7;\nloop invariant i188: x - 5 >= 0 ==> x == 5;\nloop invariant i189: x - 7 <= 0 ==> x == 7;\nloop invariant i190: x - 4 <= 0 ==> x == 4;\nloop invariant i191: -x + 2*y >= 0 ==> x == 4;\nloop invariant i192: 3*x - y >= 0 ==> x == 3;\nloop invariant i193: x == 9 ==> y == 0;\nloop invariant i194: x == 7 ==> y == 3;\nloop invariant i195: x == 5 ==> y == 7;\nloop invariant i196: x == 7 ==> y == 7;\nloop invariant i197: x == 4 ==> y == 9;\nloop invariant i198: x == 3 ==> y == 9;\nloop invariant i199: x == 2 ==> y == 10;\nloop invariant i200: x == 1 ==> y == 11;\nloop invariant i201: x == 0 ==> y == 12;\nloop invariant i202: x <= 9 ==> -x + 2*y >= 0;\nloop invariant i203: x <= 9 ==> 3*x - y >= 0;\nloop invariant i204: x <= 9 ==> x - 5 >= 0 ==> x - 7 <= 0 ==> x - 4 <= 0 ==> -x + 2*y >= 0 ==> 3*x - y >= 0;\nloop invariant i205: x <= 9 ==> x - 5 >= 0 ==> x - 7 <= 0 ==> x - 4 <= 0 ==> -x + 2*y >= 0 ==> 3*x - y >= 0 ==> x - 4 <= 0 ==> y <= 10;\nloop invariant i206: (x >= 9 ==> y <= 2);\nloop invariant i207: (x >= 7 ==> y <= 1);\nloop invariant i208: (x >= 7 ==> y >= 1);\nloop invariant i209: (x >= 5 ==> y <= 1);\nloop invariant i210: (x >= 5 ==> y >= 1);\nloop invariant i211: (x <= 9 ==> y >= 1);\nloop invariant i212: (x <= 9 ==> y <= 1);\nloop invariant i213: (x - 5 >= 0 ==> y >= 1);\nloop invariant i214: (x - 5 >= 0 ==> y <= 2);\nloop invariant i215: (x - 4 <= 0 ==> y >= 1);\nloop invariant i216: (x - 4 <= 0 ==> y <= 1);\nloop invariant i217: (x - 7 <= 0 ==> y >= 1);\nloop invariant i218: (x - 7 <= 0 ==> y <= 1);\nloop invariant i219: (unknown_int() ==> x >= 0);\nloop invariant i220: (unknown_int() ==> y >= 0);\nloop invariant i221: (unknown_int() ==> x >= y);\nloop invariant i222: (unknown_int() ==> x >= 5);\nloop invariant i223: (unknown_int() ==> y <= 3);\nloop invariant i224: (unknown_int() ==> -x + 2*y >= 0);\nloop invariant i225: (unknown_int() ==> 3*x - y >= 0);\nloop invariant i226: (unknown_int() ==> (x >= 9 ==> y <= 2));\nloop invariant i227: (unknown_int() ==> (x >= 7 ==> y <= 1));\nloop invariant i228: (unknown_int() ==> (x >= 7 ==> y >= 1));\nloop invariant i229: (unknown_int() ==> (x >= 5 ==> y <= 1));\nloop invariant i230: (unknown_int() ==> (x >= 5 ==> y >= 1));\nloop invariant i231: (unknown_int() ==> (x <= 9 ==> y >= 1));\nloop invariant i232: (unknown_int() ==> (x <= 9 ==> y <= 1));\nloop invariant i233: (unknown_int() ==> (x - 5 >= 0 ==> y >= 1));\nloop invariant i234: (unknown_int() ==> (x - 5 >= 0 ==> y <= 2));\nloop invariant i235: (unknown_int() ==> (x - 4 <= 0 ==> y >= 1));\nloop invariant i236: (unknown_int() ==> (x - 4 <= 0 ==> y <= 1));\nloop invariant i237: (unknown_int() ==> (x - 7 <= 0 ==> y >= 1));\nloop invariant i238: (unknown_int() ==> (x - 7 <= 0 ==> y <= 1));\nloop invariant i239: 1 <= x <= 9;\nloop invariant i240: 0 <= y <= 3*x - 2;\nloop invariant i241: (x - 7 <= 0 ==> x >= 7);\nloop invariant i242: (x - 5 >= 0 ==> x <= 9);\nloop invariant i243: (x >= 7 ==> x - 5 >= 0);\nloop invariant i244: (x <= 9 ==> x - 7 <= 0);\nloop invariant i245: (x < 9 ==> x + 2 >= 9);\nloop invariant i246: (x >= 9 ==> x + 2 <= 11);\nloop invariant i247: (x < 7 ==> x + 1 >= 8);\nloop invariant i248: (x >= 7 ==> x + 1 <= 8);\nloop invariant i249: (x < 9 ==> x + 1 <= 10);\nloop invariant i250: (x >= 9 ==> x + 1 <= 10);\nloop invariant i251: (x < 7 ==> x + 1 <= 8);\nloop invariant i252: (x < 9 ==> x + 2 <= 11);\n*/\nwhile (unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (x >= 9)) \nreturn 0;\n\n\t\t\tx = x + 2;\n\t\t\ty = y + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (!(x >= 7)) \nreturn 0;\n\n\t\t\t\tif (!(x <= 9)) \nreturn 0;\n\n\t\t\t\tx = x + 1;\n\t\t\t\ty = y + 3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (x - 5 >=0)) \nreturn 0;\n\n\t\t\t\t\tif (! (x - 7 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 2;\n\t\t\t\t\ty = y + 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!(x - 4 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 1;\n\t\t\t\t\ty = y + 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t{;\n//@ assert(-x + 2*y  >= 0);\n}\n\n\t{;\n//@ assert(3*x - y  >= 0);\n}\n\n}",
        "combined_annotation_num_solver_calls": 143,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint x;\n\tint y;\n\n\tif (! (x==0)) \nreturn 0;\n\n\tif (! (y==0)) \nreturn 0;\n\n\t/*@\n\nloop invariant i2: 0 <= y;\n\nloop invariant i4: x - y >= -y;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i24: x - 4 <= 0 ==> x >= -4;\nloop invariant i25: x - 4 <= 0 ==> y >= -8;\nloop invariant i26: x - 7 <= 0 ==> x >= -7;\nloop invariant i27: x - 7 <= 0 ==> y >= -10;\nloop invariant i28: x - 5 >= 0 ==> x >= 5;\nloop invariant i29: x - 5 >= 0 ==> y >= -3;\nloop invariant i30: x - 4 >= 0 ==> x >= 4;\nloop invariant i31: x - 4 >= 0 ==> y >= -6;\nloop invariant i32: x >= 9 ==> x >= 9;\nloop invariant i33: x >= 9 ==> y >= 0;\n\n\n\n\n\n\nloop invariant i40: -x + 2*y >= 0;\nloop invariant i41: 3*x - y >= 0;\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i53: x >= 0;\n\nloop invariant i55: y >= 0;\nloop invariant i56: x >= y ==> x >= 9 ==> x >= 9 ==> x >= 9;\nloop invariant i57: x < 9 ==> x >= y ==> x >= 9 ==> x < 9;\nloop invariant i58: x >= 9 ==> y >= 1 ==> y >= 1 ==> y >= 1;\n\nloop invariant i60: x >= y ==> x >= 7 ==> x >= 7 ==> x >= 7;\nloop invariant i61: x < 7 ==> x >= y ==> x >= 7 ==> x < 7;\nloop invariant i62: x >= 7 ==> x < 9 ==> x < 9 ==> x < 9;\n\nloop invariant i64: x < 7 ==> x >= y ==> x < 9 ==> x < 9;\nloop invariant i65: x >= y ==> x >= 5 ==> x >= 5 ==> x >= 5;\nloop invariant i66: x < 5 ==> x >= y ==> x >= 5 ==> x < 5;\nloop invariant i67: x >= 5 ==> x >= y ==> x < 7 ==> x >= 7;\nloop invariant i68: x >= 5 ==> x < 7 ==> x < 7 ==> x < 7;\nloop invariant i69: x >= y ==> x >= 4 ==> x >= 4 ==> x >= 4;\nloop invariant i70: x < 4 ==> x >= y ==> x >= 4 ==> x < 4;\nloop invariant i71: x >= 4 ==> x >= y ==> x < 5 ==> x >= 5;\nloop invariant i72: x >= 4 ==> x < 5 ==> x < 5 ==> x < 5;\nloop invariant i73: x >= y ==> x >= 3 ==> x >= 3 ==> x >= 3;\nloop invariant i74: x < 3 ==> x >= y ==> x >= 3 ==> x < 3;\nloop invariant i75: x >= 3 ==> x >= y ==> x < 4 ==> x >= 4;\nloop invariant i76: x >= 3 ==> x < 4 ==> x < 4 ==> x < 4;\nloop invariant i77: x >= y ==> x >= 2 ==> x >= 2 ==> x >= 2;\nloop invariant i78: x < 2 ==> x >= y ==> x >= 2 ==> x < 2;\nloop invariant i79: x >= 2 ==> x >= y ==> x < 3 ==> x >= 3;\nloop invariant i80: x >= 2 ==> x < 3 ==> x < 3 ==> x < 3;\nloop invariant i81: x >= y ==> x >= 1 ==> x >= 1 ==> x >= 1;\nloop invariant i82: x < 1 ==> x >= y ==> x >= 1 ==> x < 1;\nloop invariant i83: x >= 1 ==> x >= y ==> x < 2 ==> x >= 2;\nloop invariant i84: x >= 1 ==> x < 2 ==> x < 2 ==> x < 2;\nloop invariant i85: x >= y ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i86: x < 0 ==> x >= y ==> x >= 0 ==> x < 0;\n\nloop invariant i88: x >= 0 ==> x < 1 ==> x < 1 ==> x < 1;\nloop invariant i89: x >= y ==> x < 9 ==> x < 9 ==> x < 9;\nloop invariant i90: x >= y ==> x >= 9 ==> x < 9 ==> x >= 9;\nloop invariant i91: x < 9 ==> x >= y ==> x < 9 ==> x < 9;\nloop invariant i92: x >= y ==> x < 7 ==> x < 7 ==> x < 7;\nloop invariant i93: x >= y ==> x >= 7 ==> x < 7 ==> x >= 7;\nloop invariant i94: x < 7 ==> x >= y ==> x < 7 ==> x < 7;\nloop invariant i95: x >= y ==> x < 5 ==> x < 5 ==> x < 5;\n\nloop invariant i97: y >= -y;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i202: x <= 9 ==> -x + 2*y >= 0;\nloop invariant i203: x <= 9 ==> 3*x - y >= 0;\nloop invariant i204: x <= 9 ==> x - 5 >= 0 ==> x - 7 <= 0 ==> x - 4 <= 0 ==> -x + 2*y >= 0 ==> 3*x - y >= 0;\nloop invariant i205: x <= 9 ==> x - 5 >= 0 ==> x - 7 <= 0 ==> x - 4 <= 0 ==> -x + 2*y >= 0 ==> 3*x - y >= 0 ==> x - 4 <= 0 ==> y <= 10;\n\n\nloop invariant i208: (x >= 7 ==> y >= 1);\n\nloop invariant i210: (x >= 5 ==> y >= 1);\n\n\nloop invariant i213: (x - 5 >= 0 ==> y >= 1);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i243: (x >= 7 ==> x - 5 >= 0);\n\n\n\n\n\nloop invariant i249: (x < 9 ==> x + 1 <= 10);\n\nloop invariant i251: (x < 7 ==> x + 1 <= 8);\nloop invariant i252: (x < 9 ==> x + 2 <= 11);\n*/\nwhile (unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (x >= 9)) \nreturn 0;\n\n\t\t\tx = x + 2;\n\t\t\ty = y + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (!(x >= 7)) \nreturn 0;\n\n\t\t\t\tif (!(x <= 9)) \nreturn 0;\n\n\t\t\t\tx = x + 1;\n\t\t\t\ty = y + 3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (x - 5 >=0)) \nreturn 0;\n\n\t\t\t\t\tif (! (x - 7 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 2;\n\t\t\t\t\ty = y + 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (!(x - 4 <=0)) \nreturn 0;\n\n\t\t\t\t\tx = x + 1;\n\t\t\t\t\ty = y + 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t{;\n//@ assert(-x + 2*y  >= 0);\n}\n\n\t{;\n//@ assert(3*x - y  >= 0);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/popl.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/07.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/39.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv_simp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/xy10.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/const_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe3.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe4.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_unsafe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbr.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbrprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bk-nat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bkley.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/efm.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/ex1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnatprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifo.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/seesaw.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/05.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/37.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/pldi082_unbounded.c"
        ],
        "skipped": [],
        "total": 155,
        "success_count": 127,
        "failure_count": 28,
        "success_rate": 0.8193548387096774
    }
}