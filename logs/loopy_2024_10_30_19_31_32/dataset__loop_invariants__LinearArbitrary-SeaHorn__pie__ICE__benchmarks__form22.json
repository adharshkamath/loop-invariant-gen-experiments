{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main()\n{\n  int x1,x2,x3;\n  int x1p,x2p,x3p, input;\n\n  x1 = x2 = x3 = 0;\n  input = unknown_int();\n  while(input)\n  {\n    x1p = unknown_int();\n    x2p = unknown_int();\n    x3p = unknown_int();\n\n    if (x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2))\n    {\n\tx1 = x1p;\n\tx2 = x2p;\n\tx3 = x3p;\n    }\n    input = unknown_int();\n  }\n  {;\n//@ assert(x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2));\n}\n    \n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 1 <= x1 <= x2 + x3;\nloop invariant x1p <= x2p <= 3;\nloop invariant 0 <= x3p <= 2;\nloop invariant input <= x1;\nloop invariant input <= x2;\nloop invariant input <= x3;\nloop invariant input <= x1p;\nloop invariant input <= x2p;\nloop invariant input <= x3p;\nloop invariant x1p <= x2p;\nloop invariant x2p >= 0;\nloop invariant x2p - x3p <= 2;\nloop invariant x2p - x3p >= 0;\nloop invariant x2p - x3p >= -2;\nloop invariant x2p - x3p >= -1;\nloop invariant x2p - x3p >= -3;\nloop invariant x2p - x3p >= -4;\nloop invariant x2p - x3p >= -5;\nloop invariant x2p - x3p >= -6;\nloop invariant x2p - x3p >= -7;\nloop invariant x2p - x3p >= -8;\nloop invariant x2p - x3p >= -9;\nloop invariant x2p - x3p >= -10;\nloop invariant x2p - x3p >= -11;\nloop invariant x2p - x3p >= -12;\nloop invariant x2p - x3p >= -13;\nloop invariant x2p - x3p >= -14;\nloop invariant x2p - x3p >= -15;\nloop invariant x2p - x3p >= -16;\nloop invariant x2p - x3p >= -17;\nloop invariant x2p - x3p >= -18;\nloop invariant x2p - x3p >= -19;\nloop invariant x2p - x3p >= -20;\nloop invariant x2p - x3p >= -21;\nloop invariant x2p - x3p >= -22;\nloop invariant x2p - x3p >= -23;\nloop invariant x2p - x3p >= -24;\nloop invariant x2p - x3p >= -25;\nloop invariant x2p - x3p >= -26;\nloop invariant x2p - x3p >= -27;\nloop invariant x2p - x3p >= -28;\nloop invariant x2p - x3p >= -29;\nloop invariant x2p - x3p >= -30;\nloop invariant x2p - x3p >= -31;\nloop invariant x2p - x3p >= -32;\nloop invariant x2p - x3p >= -33;\nloop invariant x2p - x3p >= -34;\nloop invariant x2p - x3p >= -35;\nloop invariant x2p - x3p >= -36;\nloop invariant x2p - x3p >= -37;\nloop invariant x2p - x3p >= -38;\nloop invariant x2p - x3p >= -39;\nloop invariant x2p - x3p >= -40;\nloop invariant x2p - x3p >= -41;\nloop invariant x2p - x3p >= -42;\nloop invariant x2p - x3p >= -43;\nloop invariant x2p - x3p >= -44;\nloop invariant x2p - x3p >= -45;\nloop invariant x2p - x3p >= -46;\nloop invariant x2p - x3p >= -47;\nloop invariant x2p - x3p >= -48;\nloop invariant x2p - x3p >= -49;\nloop invariant x2p - x3p >= -50;\nloop invariant x2p - x3p >= -51;\nloop invariant x2p - x3p >= -52;\nloop invariant x2p - x3p >= -53;\nloop invariant x2p - x3p >= -54;\nloop invariant x2p - x3p >= -55;\nloop invariant x2p - x3p >= -56;\nloop invariant x2p - x3p >= -57;\nloop invariant x2p - x3p >= -58;\nloop invariant x2p - x3p >= -59;\nloop invariant x2p - x3p >= -60;\nloop invariant x2p - x3p >= -61;\nloop invariant x2p - x3p >= -62;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= x2 <= x3; loop invariant 0 <= x1p <= x2p <= x3p; loop invariant x1p <= x2p; loop invariant x2p >= 0 || x2p - x3p <= 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= x1p;\nloop invariant 0 <= x2 <= x2p;\nloop invariant 0 <= x3 <= x3p;\nloop invariant input >= 1;\nloop invariant x1p <= x2p;\nloop invariant x2p >= 0 || x2p - x3p <= 2;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant input >= 1;\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2);\nloop invariant x1 <= x1p && x2 <= x2p && x3 <= x3p;\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\n*/\n```",
            "```\n/*@\nloop invariant x1 <= x2p and (x2p >= 0 or x2p - x3p <= 2) ==> x1 <= x2 and (x2 >= 0 or x2 - x3 <= 2);\nloop invariant x1 <= x2p and (x2p >= 0 or x2p - x3p <= 2) ==> x1 <= x2p and (x2p >= 0 or x2p - x3p <= 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= x2 <= x3;\nloop invariant x1p <= x2p <= x3p;\nloop invariant x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2);\nloop invariant x1 <= x1p && x2 <= x2p && x3 <= x3p;\nloop invariant x1 <= x2p && (x2p >= 0 || x2p - x3p <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= x2 <= x3;\nloop invariant x1 <= x1p <= x2p <= x3p;\nloop invariant x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2);\nloop invariant x1p <= x2p <= x3p;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x1p <= x2p <= x3p;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2);\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\n*/\n```",
            "```\n/*@\nloop invariant x1 < x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x2 >= x3;\nloop invariant input <= 0;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= x1p;\nloop invariant 0 <= x2 <= x2p;\nloop invariant 0 <= x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x3 <= x1p;\nloop invariant x3 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1p <= x2p;\nloop invariant x2p <= x3p;\nloop invariant x3p <= x1p;\nloop invariant x2p <= x3p;\nloop invariant x1p <= x3p;\nloop invariant x1 <= x2p;\nloop invariant x1 <= x3p;\nloop invariant x2 <= x3p;\nloop invariant x1 <= x3;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\n*/\n```",
            "```\n/*@\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 >= x1p;\nloop invariant x2 >= x2p;\nloop invariant x3 >= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1p <= INT_MAX;\nloop invariant 0 <= x2p <= INT_MAX;\nloop invariant 0 <= x3p <= INT_MAX;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1p <= x2p;\nloop invariant x2p >= 0 || x2p - x3p <= 2;\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= 100000;\nloop invariant 0 <= x2 <= 100000;\nloop invariant 0 <= x3 <= 100000;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2;\nloop invariant x2 >= x3;\nloop invariant x2 >= x1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= x2 <= x3;\nloop invariant x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2);\nloop invariant x1 == max{x1, x1p};\nloop invariant x2 == max{x2, x2p};\nloop invariant x3 == max{x3, x3p};\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 63,
                "annotations": "```\n/*@\nloop invariant 1 <= x1 <= x2 + x3;\nloop invariant x1p <= x2p <= 3;\nloop invariant 0 <= x3p <= 2;\nloop invariant input <= x1;\nloop invariant input <= x2;\nloop invariant input <= x3;\nloop invariant input <= x1p;\nloop invariant input <= x2p;\nloop invariant input <= x3p;\nloop invariant x1p <= x2p;\nloop invariant x2p >= 0;\nloop invariant x2p - x3p <= 2;\nloop invariant x2p - x3p >= 0;\nloop invariant x2p - x3p >= -2;\nloop invariant x2p - x3p >= -1;\nloop invariant x2p - x3p >= -3;\nloop invariant x2p - x3p >= -4;\nloop invariant x2p - x3p >= -5;\nloop invariant x2p - x3p >= -6;\nloop invariant x2p - x3p >= -7;\nloop invariant x2p - x3p >= -8;\nloop invariant x2p - x3p >= -9;\nloop invariant x2p - x3p >= -10;\nloop invariant x2p - x3p >= -11;\nloop invariant x2p - x3p >= -12;\nloop invariant x2p - x3p >= -13;\nloop invariant x2p - x3p >= -14;\nloop invariant x2p - x3p >= -15;\nloop invariant x2p - x3p >= -16;\nloop invariant x2p - x3p >= -17;\nloop invariant x2p - x3p >= -18;\nloop invariant x2p - x3p >= -19;\nloop invariant x2p - x3p >= -20;\nloop invariant x2p - x3p >= -21;\nloop invariant x2p - x3p >= -22;\nloop invariant x2p - x3p >= -23;\nloop invariant x2p - x3p >= -24;\nloop invariant x2p - x3p >= -25;\nloop invariant x2p - x3p >= -26;\nloop invariant x2p - x3p >= -27;\nloop invariant x2p - x3p >= -28;\nloop invariant x2p - x3p >= -29;\nloop invariant x2p - x3p >= -30;\nloop invariant x2p - x3p >= -31;\nloop invariant x2p - x3p >= -32;\nloop invariant x2p - x3p >= -33;\nloop invariant x2p - x3p >= -34;\nloop invariant x2p - x3p >= -35;\nloop invariant x2p - x3p >= -36;\nloop invariant x2p - x3p >= -37;\nloop invariant x2p - x3p >= -38;\nloop invariant x2p - x3p >= -39;\nloop invariant x2p - x3p >= -40;\nloop invariant x2p - x3p >= -41;\nloop invariant x2p - x3p >= -42;\nloop invariant x2p - x3p >= -43;\nloop invariant x2p - x3p >= -44;\nloop invariant x2p - x3p >= -45;\nloop invariant x2p - x3p >= -46;\nloop invariant x2p - x3p >= -47;\nloop invariant x2p - x3p >= -48;\nloop invariant x2p - x3p >= -49;\nloop invariant x2p - x3p >= -50;\nloop invariant x2p - x3p >= -51;\nloop invariant x2p - x3p >= -52;\nloop invariant x2p - x3p >= -53;\nloop invariant x2p - x3p >= -54;\nloop invariant x2p - x3p >= -55;\nloop invariant x2p - x3p >= -56;\nloop invariant x2p - x3p >= -57;\nloop invariant x2p - x3p >= -58;\nloop invariant x2p - x3p >= -59;\nloop invariant x2p - x3p >= -60;\nloop invariant x2p - x3p >= -61;\nloop invariant x2p - x3p >= -62;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main()\n{\n  int x1,x2,x3;\n  int x1p,x2p,x3p, input;\n\n  x1 = x2 = x3 = 0;\n  input = unknown_int();\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(input)\n  {\n    x1p = unknown_int();\n    x2p = unknown_int();\n    x3p = unknown_int();\n\n    if (x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2))\n    {\n\tx1 = x1p;\n\tx2 = x2p;\n\tx3 = x3p;\n    }\n    input = unknown_int();\n  }\n  {;\n//@ assert(x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2));\n}\n    \n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= x2 <= x3; loop invariant 0 <= x1p <= x2p <= x3p; loop invariant x1p <= x2p; loop invariant x2p >= 0 || x2p - x3p <= 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main()\n{\n  int x1,x2,x3;\n  int x1p,x2p,x3p, input;\n\n  x1 = x2 = x3 = 0;\n  input = unknown_int();\n  /*@\n\n*/\nwhile(input)\n  {\n    x1p = unknown_int();\n    x2p = unknown_int();\n    x3p = unknown_int();\n\n    if (x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2))\n    {\n\tx1 = x1p;\n\tx2 = x2p;\n\tx3 = x3p;\n    }\n    input = unknown_int();\n  }\n  {;\n//@ assert(x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2));\n}\n    \n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= x1p;\nloop invariant 0 <= x2 <= x2p;\nloop invariant 0 <= x3 <= x3p;\nloop invariant input >= 1;\nloop invariant x1p <= x2p;\nloop invariant x2p >= 0 || x2p - x3p <= 2;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant input >= 1;\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main()\n{\n  int x1,x2,x3;\n  int x1p,x2p,x3p, input;\n\n  x1 = x2 = x3 = 0;\n  input = unknown_int();\n  /*@\n\n\n\n\n\n\n\n\n\nloop invariant i10: x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\n*/\nwhile(input)\n  {\n    x1p = unknown_int();\n    x2p = unknown_int();\n    x3p = unknown_int();\n\n    if (x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2))\n    {\n\tx1 = x1p;\n\tx2 = x2p;\n\tx3 = x3p;\n    }\n    input = unknown_int();\n  }\n  {;\n//@ assert(x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2));\n}\n    \n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main()\n{\n  int x1,x2,x3;\n  int x1p,x2p,x3p, input;\n\n  x1 = x2 = x3 = 0;\n  input = unknown_int();\n  /*@\n\n*/\nwhile(input)\n  {\n    x1p = unknown_int();\n    x2p = unknown_int();\n    x3p = unknown_int();\n\n    if (x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2))\n    {\n\tx1 = x1p;\n\tx2 = x2p;\n\tx3 = x3p;\n    }\n    input = unknown_int();\n  }\n  {;\n//@ assert(x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2));\n}\n    \n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2);\nloop invariant x1 <= x1p && x2 <= x2p && x3 <= x3p;\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main()\n{\n  int x1,x2,x3;\n  int x1p,x2p,x3p, input;\n\n  x1 = x2 = x3 = 0;\n  input = unknown_int();\n  /*@\nloop invariant i1: x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\n\n\n*/\nwhile(input)\n  {\n    x1p = unknown_int();\n    x2p = unknown_int();\n    x3p = unknown_int();\n\n    if (x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2))\n    {\n\tx1 = x1p;\n\tx2 = x2p;\n\tx3 = x3p;\n    }\n    input = unknown_int();\n  }\n  {;\n//@ assert(x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2));\n}\n    \n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x1 <= x2p and (x2p >= 0 or x2p - x3p <= 2) ==> x1 <= x2 and (x2 >= 0 or x2 - x3 <= 2);\nloop invariant x1 <= x2p and (x2p >= 0 or x2p - x3p <= 2) ==> x1 <= x2p and (x2p >= 0 or x2p - x3p <= 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main()\n{\n  int x1,x2,x3;\n  int x1p,x2p,x3p, input;\n\n  x1 = x2 = x3 = 0;\n  input = unknown_int();\n  /*@\n\n\n*/\nwhile(input)\n  {\n    x1p = unknown_int();\n    x2p = unknown_int();\n    x3p = unknown_int();\n\n    if (x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2))\n    {\n\tx1 = x1p;\n\tx2 = x2p;\n\tx3 = x3p;\n    }\n    input = unknown_int();\n  }\n  {;\n//@ assert(x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2));\n}\n    \n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= x2 <= x3;\nloop invariant x1p <= x2p <= x3p;\nloop invariant x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2);\nloop invariant x1 <= x1p && x2 <= x2p && x3 <= x3p;\nloop invariant x1 <= x2p && (x2p >= 0 || x2p - x3p <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main()\n{\n  int x1,x2,x3;\n  int x1p,x2p,x3p, input;\n\n  x1 = x2 = x3 = 0;\n  input = unknown_int();\n  /*@\n\n\n\n\n\nloop invariant i6: x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\n*/\nwhile(input)\n  {\n    x1p = unknown_int();\n    x2p = unknown_int();\n    x3p = unknown_int();\n\n    if (x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2))\n    {\n\tx1 = x1p;\n\tx2 = x2p;\n\tx3 = x3p;\n    }\n    input = unknown_int();\n  }\n  {;\n//@ assert(x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2));\n}\n    \n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= x2 <= x3;\nloop invariant x1 <= x1p <= x2p <= x3p;\nloop invariant x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2);\nloop invariant x1p <= x2p <= x3p;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x1p <= x2p <= x3p;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2);\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\nloop invariant x1 <= x2 <= x3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main()\n{\n  int x1,x2,x3;\n  int x1p,x2p,x3p, input;\n\n  x1 = x2 = x3 = 0;\n  input = unknown_int();\n  /*@\n\n\n\n\n\n*/\nwhile(input)\n  {\n    x1p = unknown_int();\n    x2p = unknown_int();\n    x3p = unknown_int();\n\n    if (x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2))\n    {\n\tx1 = x1p;\n\tx2 = x2p;\n\tx3 = x3p;\n    }\n    input = unknown_int();\n  }\n  {;\n//@ assert(x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2));\n}\n    \n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x1 < x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x2 >= x3;\nloop invariant input <= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main()\n{\n  int x1,x2,x3;\n  int x1p,x2p,x3p, input;\n\n  x1 = x2 = x3 = 0;\n  input = unknown_int();\n  /*@\n\n\n\n\n\n*/\nwhile(input)\n  {\n    x1p = unknown_int();\n    x2p = unknown_int();\n    x3p = unknown_int();\n\n    if (x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2))\n    {\n\tx1 = x1p;\n\tx2 = x2p;\n\tx3 = x3p;\n    }\n    input = unknown_int();\n  }\n  {;\n//@ assert(x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2));\n}\n    \n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main()\n{\n  int x1,x2,x3;\n  int x1p,x2p,x3p, input;\n\n  x1 = x2 = x3 = 0;\n  input = unknown_int();\n  /*@\n\n*/\nwhile(input)\n  {\n    x1p = unknown_int();\n    x2p = unknown_int();\n    x3p = unknown_int();\n\n    if (x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2))\n    {\n\tx1 = x1p;\n\tx2 = x2p;\n\tx3 = x3p;\n    }\n    input = unknown_int();\n  }\n  {;\n//@ assert(x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2));\n}\n    \n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= x1p;\nloop invariant 0 <= x2 <= x2p;\nloop invariant 0 <= x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x3 <= x1p;\nloop invariant x3 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1p <= x2p;\nloop invariant x2p <= x3p;\nloop invariant x3p <= x1p;\nloop invariant x2p <= x3p;\nloop invariant x1p <= x3p;\nloop invariant x1 <= x2p;\nloop invariant x1 <= x3p;\nloop invariant x2 <= x3p;\nloop invariant x1 <= x3;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= x1p;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main()\n{\n  int x1,x2,x3;\n  int x1p,x2p,x3p, input;\n\n  x1 = x2 = x3 = 0;\n  input = unknown_int();\n  /*@\n\n\n\nloop invariant i4: x1 <= x2;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(input)\n  {\n    x1p = unknown_int();\n    x2p = unknown_int();\n    x3p = unknown_int();\n\n    if (x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2))\n    {\n\tx1 = x1p;\n\tx2 = x2p;\n\tx3 = x3p;\n    }\n    input = unknown_int();\n  }\n  {;\n//@ assert(x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2));\n}\n    \n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1 >= x1p;\nloop invariant x2 >= x2p;\nloop invariant x3 >= x3p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\nloop invariant x1 <= x2;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2p;\nloop invariant x2 <= x3p;\nloop invariant x3 <= x1p;\nloop invariant x1 >= x2p;\nloop invariant x2 >= x3p;\nloop invariant x3 >= x1p;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main()\n{\n  int x1,x2,x3;\n  int x1p,x2p,x3p, input;\n\n  x1 = x2 = x3 = 0;\n  input = unknown_int();\n  /*@\n\n\n\n\n\n\nloop invariant i7: x1 <= x2;\n\n\n\n\n\n\n\n\n*/\nwhile(input)\n  {\n    x1p = unknown_int();\n    x2p = unknown_int();\n    x3p = unknown_int();\n\n    if (x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2))\n    {\n\tx1 = x1p;\n\tx2 = x2p;\n\tx3 = x3p;\n    }\n    input = unknown_int();\n  }\n  {;\n//@ assert(x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2));\n}\n    \n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x1p <= INT_MAX;\nloop invariant 0 <= x2p <= INT_MAX;\nloop invariant 0 <= x3p <= INT_MAX;\nloop invariant x1 <= x1p;\nloop invariant x2 <= x2p;\nloop invariant x3 <= x3p;\nloop invariant x1p <= x2p;\nloop invariant x2p >= 0 || x2p - x3p <= 2;\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main()\n{\n  int x1,x2,x3;\n  int x1p,x2p,x3p, input;\n\n  x1 = x2 = x3 = 0;\n  input = unknown_int();\n  /*@\n\n\n\n\n\n\n\n\nloop invariant i9: x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\n*/\nwhile(input)\n  {\n    x1p = unknown_int();\n    x2p = unknown_int();\n    x3p = unknown_int();\n\n    if (x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2))\n    {\n\tx1 = x1p;\n\tx2 = x2p;\n\tx3 = x3p;\n    }\n    input = unknown_int();\n  }\n  {;\n//@ assert(x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2));\n}\n    \n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= 100000;\nloop invariant 0 <= x2 <= 100000;\nloop invariant 0 <= x3 <= 100000;\nloop invariant x2 >= 0;\nloop invariant x2 - x3 <= 2;\nloop invariant x1 <= x2;\nloop invariant x2 >= x3;\nloop invariant x2 >= x1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main()\n{\n  int x1,x2,x3;\n  int x1p,x2p,x3p, input;\n\n  x1 = x2 = x3 = 0;\n  input = unknown_int();\n  /*@\n\n\n\n\n\nloop invariant i6: x1 <= x2;\n\nloop invariant i8: x2 >= x1;\n*/\nwhile(input)\n  {\n    x1p = unknown_int();\n    x2p = unknown_int();\n    x3p = unknown_int();\n\n    if (x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2))\n    {\n\tx1 = x1p;\n\tx2 = x2p;\n\tx3 = x3p;\n    }\n    input = unknown_int();\n  }\n  {;\n//@ assert(x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2));\n}\n    \n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= x2 <= x3;\nloop invariant x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2);\nloop invariant x1 == max{x1, x1p};\nloop invariant x2 == max{x2, x2p};\nloop invariant x3 == max{x3, x3p};\nloop invariant x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main()\n{\n  int x1,x2,x3;\n  int x1p,x2p,x3p, input;\n\n  x1 = x2 = x3 = 0;\n  input = unknown_int();\n  /*@\n\n\n\n\n\nloop invariant i6: x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\n*/\nwhile(input)\n  {\n    x1p = unknown_int();\n    x2p = unknown_int();\n    x3p = unknown_int();\n\n    if (x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2))\n    {\n\tx1 = x1p;\n\tx2 = x2p;\n\tx3 = x3p;\n    }\n    input = unknown_int();\n  }\n  {;\n//@ assert(x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2));\n}\n    \n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 104: unexpected token 'and'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main()\n{\n  int x1,x2,x3;\n  int x1p,x2p,x3p, input;\n\n  x1 = x2 = x3 = 0;\n  input = unknown_int();\n  /*@\nloop invariant i1: 1 <= x1 <= x2 + x3;\nloop invariant i2: x1p <= x2p <= 3;\nloop invariant i3: 0 <= x3p <= 2;\nloop invariant i4: input <= x1;\nloop invariant i5: input <= x2;\nloop invariant i6: input <= x3;\nloop invariant i7: input <= x1p;\nloop invariant i8: input <= x2p;\nloop invariant i9: input <= x3p;\nloop invariant i10: x1p <= x2p;\nloop invariant i11: x2p >= 0;\nloop invariant i12: x2p - x3p <= 2;\nloop invariant i13: x2p - x3p >= 0;\nloop invariant i14: x2p - x3p >= -2;\nloop invariant i15: x2p - x3p >= -1;\nloop invariant i16: x2p - x3p >= -3;\nloop invariant i17: x2p - x3p >= -4;\nloop invariant i18: x2p - x3p >= -5;\nloop invariant i19: x2p - x3p >= -6;\nloop invariant i20: x2p - x3p >= -7;\nloop invariant i21: x2p - x3p >= -8;\nloop invariant i22: x2p - x3p >= -9;\nloop invariant i23: x2p - x3p >= -10;\nloop invariant i24: x2p - x3p >= -11;\nloop invariant i25: x2p - x3p >= -12;\nloop invariant i26: x2p - x3p >= -13;\nloop invariant i27: x2p - x3p >= -14;\nloop invariant i28: x2p - x3p >= -15;\nloop invariant i29: x2p - x3p >= -16;\nloop invariant i30: x2p - x3p >= -17;\nloop invariant i31: x2p - x3p >= -18;\nloop invariant i32: x2p - x3p >= -19;\nloop invariant i33: x2p - x3p >= -20;\nloop invariant i34: x2p - x3p >= -21;\nloop invariant i35: x2p - x3p >= -22;\nloop invariant i36: x2p - x3p >= -23;\nloop invariant i37: x2p - x3p >= -24;\nloop invariant i38: x2p - x3p >= -25;\nloop invariant i39: x2p - x3p >= -26;\nloop invariant i40: x2p - x3p >= -27;\nloop invariant i41: x2p - x3p >= -28;\nloop invariant i42: x2p - x3p >= -29;\nloop invariant i43: x2p - x3p >= -30;\nloop invariant i44: x2p - x3p >= -31;\nloop invariant i45: x2p - x3p >= -32;\nloop invariant i46: x2p - x3p >= -33;\nloop invariant i47: x2p - x3p >= -34;\nloop invariant i48: x2p - x3p >= -35;\nloop invariant i49: x2p - x3p >= -36;\nloop invariant i50: x2p - x3p >= -37;\nloop invariant i51: x2p - x3p >= -38;\nloop invariant i52: x2p - x3p >= -39;\nloop invariant i53: x2p - x3p >= -40;\nloop invariant i54: x2p - x3p >= -41;\nloop invariant i55: x2p - x3p >= -42;\nloop invariant i56: x2p - x3p >= -43;\nloop invariant i57: x2p - x3p >= -44;\nloop invariant i58: x2p - x3p >= -45;\nloop invariant i59: x2p - x3p >= -46;\nloop invariant i60: x2p - x3p >= -47;\nloop invariant i61: x2p - x3p >= -48;\nloop invariant i62: x2p - x3p >= -49;\nloop invariant i63: x2p - x3p >= -50;\nloop invariant i64: x2p - x3p >= -51;\nloop invariant i65: x2p - x3p >= -52;\nloop invariant i66: x2p - x3p >= -53;\nloop invariant i67: x2p - x3p >= -54;\nloop invariant i68: x2p - x3p >= -55;\nloop invariant i69: x2p - x3p >= -56;\nloop invariant i70: x2p - x3p >= -57;\nloop invariant i71: x2p - x3p >= -58;\nloop invariant i72: x2p - x3p >= -59;\nloop invariant i73: x2p - x3p >= -60;\nloop invariant i74: x2p - x3p >= -61;\nloop invariant i75: x2p - x3p >= -62;\nloop invariant i76: 0 <= x1 <= x2 <= x3; loop invariant 0 <= x1p <= x2p <= x3p; loop invariant x1p <= x2p; loop invariant x2p >= 0 || x2p - x3p <= 2;\nloop invariant i77: 0 <= x1 <= x1p;\nloop invariant i78: 0 <= x2 <= x2p;\nloop invariant i79: 0 <= x3 <= x3p;\nloop invariant i80: input >= 1;\nloop invariant i81: x2p >= 0 || x2p - x3p <= 2;\nloop invariant i82: x1 <= x1p;\nloop invariant i83: x2 <= x2p;\nloop invariant i84: x3 <= x3p;\nloop invariant i85: x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\nloop invariant i86: x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2);\nloop invariant i87: x1 <= x1p && x2 <= x2p && x3 <= x3p;\nloop invariant i88: x1 <= x2p and (x2p >= 0 or x2p - x3p <= 2) ==> x1 <= x2 and (x2 >= 0 or x2 - x3 <= 2);\nloop invariant i89: x1 <= x2p and (x2p >= 0 or x2p - x3p <= 2) ==> x1 <= x2p and (x2p >= 0 or x2p - x3p <= 2);\nloop invariant i90: 0 <= x1 <= x2 <= x3;\nloop invariant i91: x1p <= x2p <= x3p;\nloop invariant i92: x1 <= x2p && (x2p >= 0 || x2p - x3p <= 2);\nloop invariant i93: x1 <= x1p <= x2p <= x3p;\nloop invariant i94: x1 <= x2 <= x3;\nloop invariant i95: x1 < x2;\nloop invariant i96: x2 >= 0;\nloop invariant i97: x2 - x3 <= 2;\nloop invariant i98: x2 >= x3;\nloop invariant i99: input <= 0;\nloop invariant i100: x1 <= x2;\nloop invariant i101: x2 <= x3;\nloop invariant i102: x3 <= x1p;\nloop invariant i103: x3 <= x2p;\nloop invariant i104: x2p <= x3p;\nloop invariant i105: x3p <= x1p;\nloop invariant i106: x1p <= x3p;\nloop invariant i107: x1 <= x2p;\nloop invariant i108: x1 <= x3p;\nloop invariant i109: x2 <= x3p;\nloop invariant i110: x1 <= x3;\nloop invariant i111: x1 >= x1p;\nloop invariant i112: x2 >= x2p;\nloop invariant i113: x3 >= x3p;\nloop invariant i114: x1 >= x2p;\nloop invariant i115: x2 >= x3p;\nloop invariant i116: x3 >= x1p;\nloop invariant i117: 0 <= x1p <= INT_MAX;\nloop invariant i118: 0 <= x2p <= INT_MAX;\nloop invariant i119: 0 <= x3p <= INT_MAX;\nloop invariant i120: 0 <= x1 <= 100000;\nloop invariant i121: 0 <= x2 <= 100000;\nloop invariant i122: 0 <= x3 <= 100000;\nloop invariant i123: x2 >= x1;\nloop invariant i124: x1 == max{x1, x1p};\nloop invariant i125: x2 == max{x2, x2p};\nloop invariant i126: x3 == max{x3, x3p};\n*/\nwhile(input)\n  {\n    x1p = unknown_int();\n    x2p = unknown_int();\n    x3p = unknown_int();\n\n    if (x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2))\n    {\n\tx1 = x1p;\n\tx2 = x2p;\n\tx3 = x3p;\n    }\n    input = unknown_int();\n  }\n  {;\n//@ assert(x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2));\n}\n    \n}",
        "combined_annotation_num_solver_calls": 69,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main()\n{\n  int x1,x2,x3;\n  int x1p,x2p,x3p, input;\n\n  x1 = x2 = x3 = 0;\n  input = unknown_int();\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i85: x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i100: x1 <= x2;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i123: x2 >= x1;\n\n\n\n*/\nwhile(input)\n  {\n    x1p = unknown_int();\n    x2p = unknown_int();\n    x3p = unknown_int();\n\n    if (x1p <= x2p && (x2p >= 0 || x2p - x3p <= 2))\n    {\n\tx1 = x1p;\n\tx2 = x2p;\n\tx3 = x3p;\n    }\n    input = unknown_int();\n  }\n  {;\n//@ assert(x1 <= x2 && (x2 >= 0 || x2 - x3 <= 2));\n}\n    \n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c"
        ],
        "skipped": [],
        "total": 81,
        "success_count": 69,
        "failure_count": 12,
        "success_rate": 0.8518518518518519
    }
}