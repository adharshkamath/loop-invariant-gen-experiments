{
    "logs": {
        "file": "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main ()\n{\n  \n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  for (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= glob2_p_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant 0 <= glob2_p_off <= MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 1 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off >= pathbuf_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off; glob2_p_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant 0 <= glob2_p_off <= MAXPATHLEN + 1;\nloop invariant glob2_p_off <= glob2_p_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off - pathbuf_off <= MAXPATHLEN;\nloop invariant glob2_p_off - pathbuf_off <= MAXPATHLEN + 1;\nloop invariant glob2_p_off - pathbuf_off <= MAXPATHLEN + 2 - 1;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off + 2 - 1;\nloop invariant glob2_p_off <= glob2_pathlim_off + 3 - 2;\nloop invariant glob2_p_off <= glob2_pathlim_off + 4 - 3;\nloop invariant glob2_p_off <= glob2_pathlim_off + 5 - 4;\nloop invariant glob2_p_off <= glob2_pathlim_off + 6 - 5;\nloop invariant glob2_p_off <= glob2_pathlim_off + 7 - 6;\nloop invariant glob2_p_off <= glob2_pathlim_off + 8 - 7;\nloop invariant glob2_p_off <= glob2_pathlim_off + 9 - 8;\nloop invariant glob2_p_off <= glob2_pathlim_off + 10 - 9;\nloop invariant glob2_p_off <= glob2_pathlim_off + 11 - 10;\nloop invariant glob2_p_off <= glob2_pathlim_off + 12 - 11;\nloop invariant glob2_p_off <= glob2_pathlim_off + 13 - 12;\nloop invariant glob2_p_off <= glob2_pathlim_off + 14 - 13;\nloop invariant glob2_p_off <= glob2_pathlim_off + 15 - 14;\nloop invariant glob2_p_off <= glob2_pathlim_off + 16 - 15;\nloop invariant glob2_p_off <= glob2_pathlim_off + 17 - 16;\nloop invariant glob2_p_off <= glob2_pathlim_off + 18 - 17;\nloop invariant glob2_p_off <= glob2_pathlim_off + 19 - 18;\nloop invariant glob2_p_off <= glob2_pathlim_off + 20 - 19;\nloop invariant glob2_p_off <= glob2_pathlim_off + 21 - 20;\nloop invariant glob2_p_off <= glob2_pathlim_off + 22 - 21;\nloop invariant glob2_p_off <= glob2_pathlim_off + 23 - 22;\nloop invariant glob2_p_off <= glob2_pathlim_off + 24 - 23;\nloop invariant glob2_p_off <= glob2_pathlim_off + 25 - 24;\nloop invariant glob2_p_off <= glob2_pathlim_off + 26 - 25;\nloop invariant glob2_p_off <= glob2_pathlim_off + 27 - 26;\nloop invariant glob2_p_off <= glob2_pathlim_off + 28 - 27;\nloop invariant glob2_p_off <= glob2_pathlim_off + 29 - 28;\nloop invariant glob2_p_off <= glob2_pathlim_off + 30 - 29;\nloop invariant glob2_p_off <= glob2_pathlim_off + 31 - 30;\nloop invariant glob2_p_off <= glob2_pathlim_off + 32 - 31;\nloop invariant glob2_p_off <= glob2_pathlim_off + 33 - 32;\nloop invariant glob2_p_off <= glob2_pathlim_off + 34 - 33;\nloop invariant glob2_p_off <= glob2_pathlim_off + 35 - 34;\nloop invariant glob2_p_off <= glob2_pathlim_off + 36 - 35;\nloop invariant glob2_p_off <= glob2_pathlim_off + 37 - 36;\nloop invariant glob2_p_off <= glob2_pathlim_off + 38 - 37;\nloop invariant glob2_p_off <= glob2_pathlim_off + 39 - 38;\nloop invariant glob2_p_off <= glob2_pathlim_off + 40 - 39;\nloop invariant glob2_p_off <= glob2_pathlim_off + 41 - 40;\nloop invariant glob2_p_off <= glob2_pathlim_off + 42 - 41;\nloop invariant glob2_p_off <= glob2_pathlim_off + 43 - 42;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_pathbuf_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= pathbuf_off <= MAXPATHLEN;\nloop invariant 0 <= bound_off <= MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= pathbuf_off;\nloop invariant pathbuf_off <= bound_off;\nloop invariant glob2_pathlim_off == bound_off;\n*/\n```",
            "```\n/*@\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_pathbuf_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_p_off == glob2_pathbuf_off ==> glob2_p_off >= 0;\nloop invariant glob2_p_off == glob2_pathbuf_off ==> glob2_p_off < MAXPATHLEN + 1;\nloop invariant glob2_p_off == glob2_pathlim_off ==> glob2_p_off >= 0;\nloop invariant glob2_p_off == glob2_pathlim_off ==> glob2_p_off < MAXPATHLEN + 1;\nloop invariant glob2_p_off > glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off > glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= pathbuf_off <= MAXPATHLEN;\nloop invariant 1 <= pathbuf_off <= bound_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 >= glob2_p_off;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main ()\n{\n  \n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\nloop invariant i1: 0 <= glob2_p_off;\n\n\nloop invariant i4: glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant i5: glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant 0 <= glob2_p_off <= MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main ()\n{\n  \n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n\n\n\n\n\n\n\n\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main ()\n{\n  \n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main ()\n{\n  \n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\nloop invariant i2: glob2_p_off <= glob2_pathlim_off + 1;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off >= pathbuf_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main ()\n{\n  \n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\nloop invariant i2: glob2_p_off >= glob2_pathbuf_off;\nloop invariant i3: glob2_pathbuf_off >= pathbuf_off;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off; glob2_p_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main ()\n{\n  \n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main ()\n{\n  \n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant 0 <= glob2_p_off <= MAXPATHLEN + 1;\nloop invariant glob2_p_off <= glob2_p_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off - pathbuf_off <= MAXPATHLEN;\nloop invariant glob2_p_off - pathbuf_off <= MAXPATHLEN + 1;\nloop invariant glob2_p_off - pathbuf_off <= MAXPATHLEN + 2 - 1;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off + 2 - 1;\nloop invariant glob2_p_off <= glob2_pathlim_off + 3 - 2;\nloop invariant glob2_p_off <= glob2_pathlim_off + 4 - 3;\nloop invariant glob2_p_off <= glob2_pathlim_off + 5 - 4;\nloop invariant glob2_p_off <= glob2_pathlim_off + 6 - 5;\nloop invariant glob2_p_off <= glob2_pathlim_off + 7 - 6;\nloop invariant glob2_p_off <= glob2_pathlim_off + 8 - 7;\nloop invariant glob2_p_off <= glob2_pathlim_off + 9 - 8;\nloop invariant glob2_p_off <= glob2_pathlim_off + 10 - 9;\nloop invariant glob2_p_off <= glob2_pathlim_off + 11 - 10;\nloop invariant glob2_p_off <= glob2_pathlim_off + 12 - 11;\nloop invariant glob2_p_off <= glob2_pathlim_off + 13 - 12;\nloop invariant glob2_p_off <= glob2_pathlim_off + 14 - 13;\nloop invariant glob2_p_off <= glob2_pathlim_off + 15 - 14;\nloop invariant glob2_p_off <= glob2_pathlim_off + 16 - 15;\nloop invariant glob2_p_off <= glob2_pathlim_off + 17 - 16;\nloop invariant glob2_p_off <= glob2_pathlim_off + 18 - 17;\nloop invariant glob2_p_off <= glob2_pathlim_off + 19 - 18;\nloop invariant glob2_p_off <= glob2_pathlim_off + 20 - 19;\nloop invariant glob2_p_off <= glob2_pathlim_off + 21 - 20;\nloop invariant glob2_p_off <= glob2_pathlim_off + 22 - 21;\nloop invariant glob2_p_off <= glob2_pathlim_off + 23 - 22;\nloop invariant glob2_p_off <= glob2_pathlim_off + 24 - 23;\nloop invariant glob2_p_off <= glob2_pathlim_off + 25 - 24;\nloop invariant glob2_p_off <= glob2_pathlim_off + 26 - 25;\nloop invariant glob2_p_off <= glob2_pathlim_off + 27 - 26;\nloop invariant glob2_p_off <= glob2_pathlim_off + 28 - 27;\nloop invariant glob2_p_off <= glob2_pathlim_off + 29 - 28;\nloop invariant glob2_p_off <= glob2_pathlim_off + 30 - 29;\nloop invariant glob2_p_off <= glob2_pathlim_off + 31 - 30;\nloop invariant glob2_p_off <= glob2_pathlim_off + 32 - 31;\nloop invariant glob2_p_off <= glob2_pathlim_off + 33 - 32;\nloop invariant glob2_p_off <= glob2_pathlim_off + 34 - 33;\nloop invariant glob2_p_off <= glob2_pathlim_off + 35 - 34;\nloop invariant glob2_p_off <= glob2_pathlim_off + 36 - 35;\nloop invariant glob2_p_off <= glob2_pathlim_off + 37 - 36;\nloop invariant glob2_p_off <= glob2_pathlim_off + 38 - 37;\nloop invariant glob2_p_off <= glob2_pathlim_off + 39 - 38;\nloop invariant glob2_p_off <= glob2_pathlim_off + 40 - 39;\nloop invariant glob2_p_off <= glob2_pathlim_off + 41 - 40;\nloop invariant glob2_p_off <= glob2_pathlim_off + 42 - 41;\nloop invariant glob2_p_off <= glob2_pathlim_off + 43 - 42;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main ()\n{\n  \n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\nloop invariant i2: 0 <= glob2_p_off <= MAXPATHLEN + 1;\nloop invariant i3: glob2_p_off <= glob2_p_off + (MAXPATHLEN + 1) - 1;\n\n\n\nloop invariant i7: glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant i8: glob2_p_off <= glob2_pathlim_off + 2 - 1;\nloop invariant i9: glob2_p_off <= glob2_pathlim_off + 3 - 2;\nloop invariant i10: glob2_p_off <= glob2_pathlim_off + 4 - 3;\nloop invariant i11: glob2_p_off <= glob2_pathlim_off + 5 - 4;\nloop invariant i12: glob2_p_off <= glob2_pathlim_off + 6 - 5;\nloop invariant i13: glob2_p_off <= glob2_pathlim_off + 7 - 6;\nloop invariant i14: glob2_p_off <= glob2_pathlim_off + 8 - 7;\nloop invariant i15: glob2_p_off <= glob2_pathlim_off + 9 - 8;\nloop invariant i16: glob2_p_off <= glob2_pathlim_off + 10 - 9;\nloop invariant i17: glob2_p_off <= glob2_pathlim_off + 11 - 10;\nloop invariant i18: glob2_p_off <= glob2_pathlim_off + 12 - 11;\nloop invariant i19: glob2_p_off <= glob2_pathlim_off + 13 - 12;\nloop invariant i20: glob2_p_off <= glob2_pathlim_off + 14 - 13;\nloop invariant i21: glob2_p_off <= glob2_pathlim_off + 15 - 14;\nloop invariant i22: glob2_p_off <= glob2_pathlim_off + 16 - 15;\nloop invariant i23: glob2_p_off <= glob2_pathlim_off + 17 - 16;\nloop invariant i24: glob2_p_off <= glob2_pathlim_off + 18 - 17;\nloop invariant i25: glob2_p_off <= glob2_pathlim_off + 19 - 18;\nloop invariant i26: glob2_p_off <= glob2_pathlim_off + 20 - 19;\nloop invariant i27: glob2_p_off <= glob2_pathlim_off + 21 - 20;\nloop invariant i28: glob2_p_off <= glob2_pathlim_off + 22 - 21;\nloop invariant i29: glob2_p_off <= glob2_pathlim_off + 23 - 22;\nloop invariant i30: glob2_p_off <= glob2_pathlim_off + 24 - 23;\nloop invariant i31: glob2_p_off <= glob2_pathlim_off + 25 - 24;\nloop invariant i32: glob2_p_off <= glob2_pathlim_off + 26 - 25;\nloop invariant i33: glob2_p_off <= glob2_pathlim_off + 27 - 26;\nloop invariant i34: glob2_p_off <= glob2_pathlim_off + 28 - 27;\nloop invariant i35: glob2_p_off <= glob2_pathlim_off + 29 - 28;\nloop invariant i36: glob2_p_off <= glob2_pathlim_off + 30 - 29;\nloop invariant i37: glob2_p_off <= glob2_pathlim_off + 31 - 30;\nloop invariant i38: glob2_p_off <= glob2_pathlim_off + 32 - 31;\nloop invariant i39: glob2_p_off <= glob2_pathlim_off + 33 - 32;\nloop invariant i40: glob2_p_off <= glob2_pathlim_off + 34 - 33;\nloop invariant i41: glob2_p_off <= glob2_pathlim_off + 35 - 34;\nloop invariant i42: glob2_p_off <= glob2_pathlim_off + 36 - 35;\nloop invariant i43: glob2_p_off <= glob2_pathlim_off + 37 - 36;\nloop invariant i44: glob2_p_off <= glob2_pathlim_off + 38 - 37;\nloop invariant i45: glob2_p_off <= glob2_pathlim_off + 39 - 38;\nloop invariant i46: glob2_p_off <= glob2_pathlim_off + 40 - 39;\nloop invariant i47: glob2_p_off <= glob2_pathlim_off + 41 - 40;\nloop invariant i48: glob2_p_off <= glob2_pathlim_off + 42 - 41;\nloop invariant i49: glob2_p_off <= glob2_pathlim_off + 43 - 42;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main ()\n{\n  \n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_pathbuf_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main ()\n{\n  \n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n\nloop invariant i3: glob2_p_off >= glob2_pathbuf_off;\nloop invariant i4: glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant i5: glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant i6: glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant i7: glob2_pathbuf_off >= 0;\nloop invariant i8: glob2_pathbuf_off <= MAXPATHLEN + 1;\nloop invariant i9: glob2_pathlim_off >= 0;\nloop invariant i10: glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant i11: glob2_p_off <= glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= pathbuf_off <= MAXPATHLEN;\nloop invariant 0 <= bound_off <= MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= pathbuf_off;\nloop invariant pathbuf_off <= bound_off;\nloop invariant glob2_pathlim_off == bound_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main ()\n{\n  \n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\nloop invariant i1: 0 <= pathbuf_off <= MAXPATHLEN;\nloop invariant i2: 0 <= bound_off <= MAXPATHLEN;\nloop invariant i3: glob2_pathbuf_off <= pathbuf_off;\nloop invariant i4: pathbuf_off <= bound_off;\nloop invariant i5: glob2_pathlim_off == bound_off;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_pathbuf_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_p_off == glob2_pathbuf_off ==> glob2_p_off >= 0;\nloop invariant glob2_p_off == glob2_pathbuf_off ==> glob2_p_off < MAXPATHLEN + 1;\nloop invariant glob2_p_off == glob2_pathlim_off ==> glob2_p_off >= 0;\nloop invariant glob2_p_off == glob2_pathlim_off ==> glob2_p_off < MAXPATHLEN + 1;\nloop invariant glob2_p_off > glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off > glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main ()\n{\n  \n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\nloop invariant i1: glob2_p_off >= glob2_pathbuf_off;\n\nloop invariant i3: glob2_pathbuf_off >= 0;\nloop invariant i4: glob2_pathbuf_off < MAXPATHLEN + 1;\nloop invariant i5: glob2_pathlim_off >= 0;\nloop invariant i6: glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant i7: glob2_p_off == glob2_pathbuf_off ==> glob2_p_off >= 0;\nloop invariant i8: glob2_p_off == glob2_pathbuf_off ==> glob2_p_off < MAXPATHLEN + 1;\nloop invariant i9: glob2_p_off == glob2_pathlim_off ==> glob2_p_off >= 0;\nloop invariant i10: glob2_p_off == glob2_pathlim_off ==> glob2_p_off < MAXPATHLEN + 1;\n\n\n\nloop invariant i14: glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main ()\n{\n  \n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n\n\nloop invariant i4: glob2_pathbuf_off <= glob2_pathlim_off;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= pathbuf_off <= MAXPATHLEN;\nloop invariant 1 <= pathbuf_off <= bound_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main ()\n{\n  \n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n\nloop invariant i3: glob2_pathbuf_off <= glob2_pathlim_off;\n\n\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 >= glob2_p_off;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main ()\n{\n  \n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n\n\nloop invariant i4: glob2_p_off >= 0;\nloop invariant i5: glob2_pathbuf_off >= 0;\nloop invariant i6: glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant i7: glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant i8: glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant i9: glob2_pathlim_off >= 0;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 46: unexpected token 'glob2_pathbuf_off'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main ()\n{\n  \n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\nloop invariant i1: 0 <= glob2_p_off;\nloop invariant i2: glob2_p_off <= glob2_pathlim_off;\nloop invariant i3: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant i4: glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant i5: glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant i6: 1 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant i7: 0 <= glob2_p_off <= MAXPATHLEN;\nloop invariant i8: glob2_p_off <= glob2_pathbuf_off;\nloop invariant i9: glob2_p_off <= glob2_pathlim_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant i10: glob2_pathbuf_off <= glob2_p_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant i11: glob2_pathbuf_off <= glob2_p_off ==> glob2_p_off <= glob2_pathbuf_off;\nloop invariant i12: glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant i13: glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant i14: 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant i15: glob2_p_off >= glob2_pathbuf_off;\nloop invariant i16: glob2_pathbuf_off >= pathbuf_off;\nloop invariant i17: 0 <= glob2_p_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off; glob2_p_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off; glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant i18: pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant i19: 0 <= glob2_p_off <= MAXPATHLEN + 1;\nloop invariant i20: glob2_p_off <= glob2_p_off + (MAXPATHLEN + 1) - 1;\nloop invariant i21: glob2_p_off - pathbuf_off <= MAXPATHLEN;\nloop invariant i22: glob2_p_off - pathbuf_off <= MAXPATHLEN + 1;\nloop invariant i23: glob2_p_off - pathbuf_off <= MAXPATHLEN + 2 - 1;\nloop invariant i24: glob2_p_off <= glob2_pathlim_off + 2 - 1;\nloop invariant i25: glob2_p_off <= glob2_pathlim_off + 3 - 2;\nloop invariant i26: glob2_p_off <= glob2_pathlim_off + 4 - 3;\nloop invariant i27: glob2_p_off <= glob2_pathlim_off + 5 - 4;\nloop invariant i28: glob2_p_off <= glob2_pathlim_off + 6 - 5;\nloop invariant i29: glob2_p_off <= glob2_pathlim_off + 7 - 6;\nloop invariant i30: glob2_p_off <= glob2_pathlim_off + 8 - 7;\nloop invariant i31: glob2_p_off <= glob2_pathlim_off + 9 - 8;\nloop invariant i32: glob2_p_off <= glob2_pathlim_off + 10 - 9;\nloop invariant i33: glob2_p_off <= glob2_pathlim_off + 11 - 10;\nloop invariant i34: glob2_p_off <= glob2_pathlim_off + 12 - 11;\nloop invariant i35: glob2_p_off <= glob2_pathlim_off + 13 - 12;\nloop invariant i36: glob2_p_off <= glob2_pathlim_off + 14 - 13;\nloop invariant i37: glob2_p_off <= glob2_pathlim_off + 15 - 14;\nloop invariant i38: glob2_p_off <= glob2_pathlim_off + 16 - 15;\nloop invariant i39: glob2_p_off <= glob2_pathlim_off + 17 - 16;\nloop invariant i40: glob2_p_off <= glob2_pathlim_off + 18 - 17;\nloop invariant i41: glob2_p_off <= glob2_pathlim_off + 19 - 18;\nloop invariant i42: glob2_p_off <= glob2_pathlim_off + 20 - 19;\nloop invariant i43: glob2_p_off <= glob2_pathlim_off + 21 - 20;\nloop invariant i44: glob2_p_off <= glob2_pathlim_off + 22 - 21;\nloop invariant i45: glob2_p_off <= glob2_pathlim_off + 23 - 22;\nloop invariant i46: glob2_p_off <= glob2_pathlim_off + 24 - 23;\nloop invariant i47: glob2_p_off <= glob2_pathlim_off + 25 - 24;\nloop invariant i48: glob2_p_off <= glob2_pathlim_off + 26 - 25;\nloop invariant i49: glob2_p_off <= glob2_pathlim_off + 27 - 26;\nloop invariant i50: glob2_p_off <= glob2_pathlim_off + 28 - 27;\nloop invariant i51: glob2_p_off <= glob2_pathlim_off + 29 - 28;\nloop invariant i52: glob2_p_off <= glob2_pathlim_off + 30 - 29;\nloop invariant i53: glob2_p_off <= glob2_pathlim_off + 31 - 30;\nloop invariant i54: glob2_p_off <= glob2_pathlim_off + 32 - 31;\nloop invariant i55: glob2_p_off <= glob2_pathlim_off + 33 - 32;\nloop invariant i56: glob2_p_off <= glob2_pathlim_off + 34 - 33;\nloop invariant i57: glob2_p_off <= glob2_pathlim_off + 35 - 34;\nloop invariant i58: glob2_p_off <= glob2_pathlim_off + 36 - 35;\nloop invariant i59: glob2_p_off <= glob2_pathlim_off + 37 - 36;\nloop invariant i60: glob2_p_off <= glob2_pathlim_off + 38 - 37;\nloop invariant i61: glob2_p_off <= glob2_pathlim_off + 39 - 38;\nloop invariant i62: glob2_p_off <= glob2_pathlim_off + 40 - 39;\nloop invariant i63: glob2_p_off <= glob2_pathlim_off + 41 - 40;\nloop invariant i64: glob2_p_off <= glob2_pathlim_off + 42 - 41;\nloop invariant i65: glob2_p_off <= glob2_pathlim_off + 43 - 42;\nloop invariant i66: glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant i67: glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant i68: glob2_pathbuf_off >= 0;\nloop invariant i69: glob2_pathbuf_off <= MAXPATHLEN + 1;\nloop invariant i70: glob2_pathlim_off >= 0;\nloop invariant i71: glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant i72: glob2_p_off <= glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant i73: 0 <= pathbuf_off <= MAXPATHLEN;\nloop invariant i74: 0 <= bound_off <= MAXPATHLEN;\nloop invariant i75: glob2_pathbuf_off <= pathbuf_off;\nloop invariant i76: pathbuf_off <= bound_off;\nloop invariant i77: glob2_pathlim_off == bound_off;\nloop invariant i78: glob2_pathbuf_off < MAXPATHLEN + 1;\nloop invariant i79: glob2_p_off == glob2_pathbuf_off ==> glob2_p_off >= 0;\nloop invariant i80: glob2_p_off == glob2_pathbuf_off ==> glob2_p_off < MAXPATHLEN + 1;\nloop invariant i81: glob2_p_off == glob2_pathlim_off ==> glob2_p_off >= 0;\nloop invariant i82: glob2_p_off == glob2_pathlim_off ==> glob2_p_off < MAXPATHLEN + 1;\nloop invariant i83: glob2_p_off > glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant i84: glob2_p_off < glob2_pathlim_off ==> glob2_p_off > glob2_pathbuf_off;\nloop invariant i85: glob2_p_off >= glob2_pathbuf_off ==> glob2_p_off < glob2_pathlim_off;\nloop invariant i86: glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant i87: 1 <= pathbuf_off <= MAXPATHLEN;\nloop invariant i88: 1 <= pathbuf_off <= bound_off;\nloop invariant i89: glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 >= glob2_p_off;\nloop invariant i90: glob2_p_off >= 0;\nloop invariant i91: glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
        "combined_annotation_num_solver_calls": 18,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main ()\n{\n  \n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\nloop invariant i1: 0 <= glob2_p_off;\n\n\nloop invariant i4: glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant i5: glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n\n\n\n\n\nloop invariant i12: glob2_p_off <= glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant i13: glob2_p_off <= glob2_pathlim_off + 1;\n\nloop invariant i15: glob2_p_off >= glob2_pathbuf_off;\nloop invariant i16: glob2_pathbuf_off >= pathbuf_off;\n\n\nloop invariant i19: 0 <= glob2_p_off <= MAXPATHLEN + 1;\nloop invariant i20: glob2_p_off <= glob2_p_off + (MAXPATHLEN + 1) - 1;\n\nloop invariant i22: glob2_p_off - pathbuf_off <= MAXPATHLEN + 1;\nloop invariant i23: glob2_p_off - pathbuf_off <= MAXPATHLEN + 2 - 1;\nloop invariant i24: glob2_p_off <= glob2_pathlim_off + 2 - 1;\nloop invariant i25: glob2_p_off <= glob2_pathlim_off + 3 - 2;\nloop invariant i26: glob2_p_off <= glob2_pathlim_off + 4 - 3;\nloop invariant i27: glob2_p_off <= glob2_pathlim_off + 5 - 4;\nloop invariant i28: glob2_p_off <= glob2_pathlim_off + 6 - 5;\nloop invariant i29: glob2_p_off <= glob2_pathlim_off + 7 - 6;\nloop invariant i30: glob2_p_off <= glob2_pathlim_off + 8 - 7;\nloop invariant i31: glob2_p_off <= glob2_pathlim_off + 9 - 8;\nloop invariant i32: glob2_p_off <= glob2_pathlim_off + 10 - 9;\nloop invariant i33: glob2_p_off <= glob2_pathlim_off + 11 - 10;\nloop invariant i34: glob2_p_off <= glob2_pathlim_off + 12 - 11;\nloop invariant i35: glob2_p_off <= glob2_pathlim_off + 13 - 12;\nloop invariant i36: glob2_p_off <= glob2_pathlim_off + 14 - 13;\nloop invariant i37: glob2_p_off <= glob2_pathlim_off + 15 - 14;\nloop invariant i38: glob2_p_off <= glob2_pathlim_off + 16 - 15;\nloop invariant i39: glob2_p_off <= glob2_pathlim_off + 17 - 16;\nloop invariant i40: glob2_p_off <= glob2_pathlim_off + 18 - 17;\nloop invariant i41: glob2_p_off <= glob2_pathlim_off + 19 - 18;\nloop invariant i42: glob2_p_off <= glob2_pathlim_off + 20 - 19;\nloop invariant i43: glob2_p_off <= glob2_pathlim_off + 21 - 20;\nloop invariant i44: glob2_p_off <= glob2_pathlim_off + 22 - 21;\nloop invariant i45: glob2_p_off <= glob2_pathlim_off + 23 - 22;\nloop invariant i46: glob2_p_off <= glob2_pathlim_off + 24 - 23;\nloop invariant i47: glob2_p_off <= glob2_pathlim_off + 25 - 24;\nloop invariant i48: glob2_p_off <= glob2_pathlim_off + 26 - 25;\nloop invariant i49: glob2_p_off <= glob2_pathlim_off + 27 - 26;\nloop invariant i50: glob2_p_off <= glob2_pathlim_off + 28 - 27;\nloop invariant i51: glob2_p_off <= glob2_pathlim_off + 29 - 28;\nloop invariant i52: glob2_p_off <= glob2_pathlim_off + 30 - 29;\nloop invariant i53: glob2_p_off <= glob2_pathlim_off + 31 - 30;\nloop invariant i54: glob2_p_off <= glob2_pathlim_off + 32 - 31;\nloop invariant i55: glob2_p_off <= glob2_pathlim_off + 33 - 32;\nloop invariant i56: glob2_p_off <= glob2_pathlim_off + 34 - 33;\nloop invariant i57: glob2_p_off <= glob2_pathlim_off + 35 - 34;\nloop invariant i58: glob2_p_off <= glob2_pathlim_off + 36 - 35;\nloop invariant i59: glob2_p_off <= glob2_pathlim_off + 37 - 36;\nloop invariant i60: glob2_p_off <= glob2_pathlim_off + 38 - 37;\nloop invariant i61: glob2_p_off <= glob2_pathlim_off + 39 - 38;\nloop invariant i62: glob2_p_off <= glob2_pathlim_off + 40 - 39;\nloop invariant i63: glob2_p_off <= glob2_pathlim_off + 41 - 40;\nloop invariant i64: glob2_p_off <= glob2_pathlim_off + 42 - 41;\nloop invariant i65: glob2_p_off <= glob2_pathlim_off + 43 - 42;\nloop invariant i66: glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant i67: glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant i68: glob2_pathbuf_off >= 0;\nloop invariant i69: glob2_pathbuf_off <= MAXPATHLEN + 1;\nloop invariant i70: glob2_pathlim_off >= 0;\nloop invariant i71: glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant i72: glob2_p_off <= glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\nloop invariant i73: 0 <= pathbuf_off <= MAXPATHLEN;\nloop invariant i74: 0 <= bound_off <= MAXPATHLEN;\nloop invariant i75: glob2_pathbuf_off <= pathbuf_off;\nloop invariant i76: pathbuf_off <= bound_off;\nloop invariant i77: glob2_pathlim_off == bound_off;\nloop invariant i78: glob2_pathbuf_off < MAXPATHLEN + 1;\nloop invariant i79: glob2_p_off == glob2_pathbuf_off ==> glob2_p_off >= 0;\nloop invariant i80: glob2_p_off == glob2_pathbuf_off ==> glob2_p_off < MAXPATHLEN + 1;\nloop invariant i81: glob2_p_off == glob2_pathlim_off ==> glob2_p_off >= 0;\nloop invariant i82: glob2_p_off == glob2_pathlim_off ==> glob2_p_off < MAXPATHLEN + 1;\n\n\n\nloop invariant i86: glob2_p_off < glob2_pathlim_off ==> glob2_p_off >= glob2_pathbuf_off;\n\n\n\nloop invariant i90: glob2_p_off >= 0;\nloop invariant i91: glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/popl.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/07.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/39.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv_simp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/xy10.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/const_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe3.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe4.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_unsafe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbr.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbrprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bk-nat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bkley.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/efm.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/ex1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnatprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifo.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/seesaw.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/05.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/37.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/pldi082_unbounded.c"
        ],
        "skipped": [],
        "total": 160,
        "success_count": 132,
        "failure_count": 28,
        "success_rate": 0.825
    }
}