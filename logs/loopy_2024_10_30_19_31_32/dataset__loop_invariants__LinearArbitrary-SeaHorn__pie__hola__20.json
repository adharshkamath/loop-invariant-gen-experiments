{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    while(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant 0 <= y <= k;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= m <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= m <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant 0 <= i;\nloop invariant 0 <= n;\nloop invariant unknown1() ==> m == j;\nloop invariant unknown1() ==> 0 <= m;\nloop invariant unknown1() ==> m < n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant n >= 0;\nloop invariant j == i ==> x + 1 == y - 1;\nloop invariant j != i ==> y + 1 == x - 1;\nloop invariant j == i ==> unknown1() ==> m == j;\nloop invariant j != i ==> unknown1() ==> m == j;\n*/\n```",
            "```\n/*@\nloop invariant x + y == k;\nloop invariant 0 <= m <= n;\nloop invariant j < n;\nloop invariant 0 <= j < n;\nloop invariant x + y == k;\nloop invariant 0 <= m <= n;\nloop invariant j < n;\nloop invariant 0 <= j < n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x + y <= k;\nloop invariant 0 <= m <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= n;\nloop invariant j == i ==> x == y + 1;\nloop invariant j != i ==> x == y - 1;\nloop invariant j <= n ==> x + y == k;\nloop invariant j == n ==> x == y;\nloop invariant j > n ==> x == y - 1;\nloop invariant j == m ==> 0 <= m <= n;\nloop invariant j < m ==> 0 <= m <= n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant i <= j <= n;\nloop invariant x >= k - y;\nloop invariant y <= k - x;\nloop invariant unknown1() ==> j == m;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant 0 <= k;\nloop invariant 0 <= i;\nloop invariant 0 <= n;\nloop invariant m <= j;\nloop invariant x + y == k;\nloop invariant !(x + y != k) ==> (m == j);\nloop invariant !(x + y != k) ==> (m < j) ==> (x + y >= m);\nloop invariant !(x + y != k) ==> (m < j) ==> (y >= m - x);\nloop invariant !(x + y != k) ==> (m < j) ==> (x >= m - y);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= k + y;\nloop invariant 1 <= y <= k + x;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= m <= n;\nloop invariant m <= j;\nloop invariant x + y == k;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x >= i;\nloop invariant y <= i;\nloop invariant m >= i;\nloop invariant m <= j;\nloop invariant (x + y) == k;\nloop invariant ((x + y) - k) == 0;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant x + y == k;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant m >= j;\nloop invariant x >= y;\nloop invariant x <= y + n;\nloop invariant y >= x;\nloop invariant y <= x + n;\nloop invariant x + y == k + (j - i);\nloop invariant x + y == k + (j - i) + (i - j);\nloop invariant x + y == k;\nloop invariant x + y == k + (j - i) + (i - j) + (j - i);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 2147483647;\nloop invariant 0 <= y <= 2147483647;\nloop invariant 0 <= k <= 2147483647;\nloop invariant 0 <= i <= 2147483647;\nloop invariant 0 <= j <= 2147483647;\nloop invariant 0 <= n <= 2147483647;\nloop invariant x + y == k;\nloop invariant i == j;\nloop invariant m == j;\nloop invariant 0 <= m <= n;\nloop invariant n > 0;\nloop invariant 0 <= m < n;\nloop invariant j < n;\nloop invariant j == i;\nloop invariant x == i + 1;\nloop invariant y == i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= m <= n;\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x + y == k;\nloop invariant j == m ==> n > 0;\nloop invariant 0 < n ==> m < n;\nloop invariant j == i ==> x < y;\nloop invariant j < i ==> x > y;\nloop invariant j > i ==> x == y;\nloop invariant j < i ==> x <= y;\nloop invariant j > i ==> x >= y;\nloop invariant j < i ==> x + y == k - 1;\nloop invariant j > i ==> x + y == k + 1;\nloop invariant j == i ==> x + y == k;\nloop invariant j < i ==> x + y <= k;\nloop invariant j > i ==> x + y >= k;\nloop invariant j < i ==> x + y == k - 1 ==> x < y;\nloop invariant j > i ==> x + y == k + 1 ==> x > y;\nloop invariant j == i ==> x + y == k ==> x == y;\nloop invariant j < i ==> x + y <= k ==> x <= y;\nloop invariant j > i ==> x + y >= k ==> x >= y;\nloop invariant j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k;\nloop invariant j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k;\nloop invariant j == i ==> x + y == k ==> x == y ==> x + y == k;\nloop invariant j < i ==> x + y <= k ==> x <= y ==> x + y <= k;\nloop invariant j > i ==> x + y >= k ==> x >= y ==> x + y >= k;\nloop invariant j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k ==> x < y;\nloop invariant j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k ==> x > y;\nloop invariant j == i ==> x + y == k ==> x == y ==> x + y == k ==> x == y;\nloop invariant j < i ==> x + y <= k ==> x <= y ==> x + y <= k ==> x <= y;\nloop invariant j > i ==> x + y >= k ==> x >= y ==> x + y >= k ==> x >= y;\nloop invariant j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k ==> x < y ==> x < y;\nloop invariant j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k ==> x > y ==> x > y;\nloop invariant j == i ==> x + y == k ==> x == y ==> x + y == k ==> x == y ==> x == y;\nloop invariant j < i ==> x + y <= k ==> x <= y ==> x + y <= k ==> x <= y ==> x <= y;\nloop invariant j > i ==> x + y >= k ==> x >= y ==> x + y >= k ==> x >= y ==> x >= y;\nloop invariant j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k ==> x < y ==> x < y ==> x < y;\nloop invariant j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k ==> x > y ==> x > y ==> x > y;\nloop invariant j == i ==> x + y == k ==> x == y ==> x + y == k ==> x == y ==> x == y ==> x == y;\nloop invariant j < i ==> x + y <= k ==> x <= y ==> x + y <= k ==> x <= y ==> x <= y ==> x <= y;\nloop invariant j > i ==> x + y >= k ==> x >= y ==> x + y >= k ==> x >= y ==> x >= y ==> x >= y;\nloop invariant j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k ==> x < y ==> x < y ==> x < y ==> x < y;\nloop invariant j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k ==> x > y ==> x > y ==> x > y ==> x > y;\nloop invariant j == i ==> x + y == k ==> x == y ==> x + y == k ==> x == y ==> x == y ==> x == y ==> x == y;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant 0 <= y <= k;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= m <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\n\n\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 10,
                "annotations": "```\n/*@\nloop invariant 0 <= m <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant 0 <= i;\nloop invariant 0 <= n;\nloop invariant unknown1() ==> m == j;\nloop invariant unknown1() ==> 0 <= m;\nloop invariant unknown1() ==> m < n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant n >= 0;\nloop invariant j == i ==> x + 1 == y - 1;\nloop invariant j != i ==> y + 1 == x - 1;\nloop invariant j == i ==> unknown1() ==> m == j;\nloop invariant j != i ==> unknown1() ==> m == j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\n\n\n\n\n\n\n\nloop invariant i10: x + y == k;\n\n\n\n\nloop invariant i15: j >= 0;\n\n\n\n\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant x + y == k;\nloop invariant 0 <= m <= n;\nloop invariant j < n;\nloop invariant 0 <= j < n;\nloop invariant x + y == k;\nloop invariant 0 <= m <= n;\nloop invariant j < n;\nloop invariant 0 <= j < n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\nloop invariant i1: x + y == k;\n\n\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= x + y <= k;\nloop invariant 0 <= m <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= n;\nloop invariant j == i ==> x == y + 1;\nloop invariant j != i ==> x == y - 1;\nloop invariant j <= n ==> x + y == k;\nloop invariant j == n ==> x == y;\nloop invariant j > n ==> x == y - 1;\nloop invariant j == m ==> 0 <= m <= n;\nloop invariant j < m ==> 0 <= m <= n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\nloop invariant j > 0 ==> m > 0;\nloop invariant j == n ==> m == n;\nloop invariant j < n ==> m < n;\nloop invariant j == n ==> m == n;\nloop invariant j > n ==> m == n;\nloop invariant j == 0 ==> m == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\n\n\n\n\n\nloop invariant i8: j <= n ==> x + y == k;\n\n\n\nloop invariant i12: j < m ==> 0 <= m <= n;\n\n\n\n\nloop invariant i17: j < n ==> m < n;\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 158,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant i <= j <= n;\nloop invariant x >= k - y;\nloop invariant y <= k - x;\nloop invariant unknown1() ==> j == m;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\n\nloop invariant i4: x >= k - y;\nloop invariant i5: y <= k - x;\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant 0 <= k;\nloop invariant 0 <= i;\nloop invariant 0 <= n;\nloop invariant m <= j;\nloop invariant x + y == k;\nloop invariant !(x + y != k) ==> (m == j);\nloop invariant !(x + y != k) ==> (m < j) ==> (x + y >= m);\nloop invariant !(x + y != k) ==> (m < j) ==> (y >= m - x);\nloop invariant !(x + y != k) ==> (m < j) ==> (x >= m - y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\n\n\n\n\n\nloop invariant i8: m <= j;\nloop invariant i9: x + y == k;\n\n\n\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= k + y;\nloop invariant 1 <= y <= k + x;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= m <= n;\nloop invariant m <= j;\nloop invariant x + y == k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\n\n\n\nloop invariant i6: m <= j;\nloop invariant i7: x + y == k;\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x >= i;\nloop invariant y <= i;\nloop invariant m >= i;\nloop invariant m <= j;\nloop invariant (x + y) == k;\nloop invariant ((x + y) - k) == 0;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\nloop invariant (x + y) == k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\n\n\n\nloop invariant i6: m <= j;\nloop invariant i7: (x + y) == k;\nloop invariant i8: ((x + y) - k) == 0;\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\nloop invariant x + y == k;\nloop invariant m <= j;\nloop invariant j <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant n > 0;\nloop invariant x + y == k;\nloop invariant x + y == k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= x <= k;\nloop invariant y <= k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\n\nloop invariant i4: x + y == k;\nloop invariant i5: m <= j;\n\n\n\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant x + y == k;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant m >= j;\nloop invariant x >= y;\nloop invariant x <= y + n;\nloop invariant y >= x;\nloop invariant y <= x + n;\nloop invariant x + y == k + (j - i);\nloop invariant x + y == k + (j - i) + (i - j);\nloop invariant x + y == k;\nloop invariant x + y == k + (j - i) + (i - j) + (j - i);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i);\nloop invariant x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\nloop invariant i2: x + y == k;\n\n\n\n\n\n\n\n\nloop invariant i11: x + y == k + (j - i) + (i - j);\n\nloop invariant i13: x + y == k + (j - i) + (i - j) + (j - i) + (i - j);\n\nloop invariant i15: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\n\nloop invariant i17: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\n\nloop invariant i19: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\n\nloop invariant i21: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\n\nloop invariant i23: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\n\nloop invariant i25: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2147483647;\nloop invariant 0 <= y <= 2147483647;\nloop invariant 0 <= k <= 2147483647;\nloop invariant 0 <= i <= 2147483647;\nloop invariant 0 <= j <= 2147483647;\nloop invariant 0 <= n <= 2147483647;\nloop invariant x + y == k;\nloop invariant i == j;\nloop invariant m == j;\nloop invariant 0 <= m <= n;\nloop invariant n > 0;\nloop invariant 0 <= m < n;\nloop invariant j < n;\nloop invariant j == i;\nloop invariant x == i + 1;\nloop invariant y == i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\n\n\nloop invariant i5: 0 <= j <= 2147483647;\n\nloop invariant i7: x + y == k;\n\n\n\n\n\n\n\n\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= m <= n;\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x + y == k;\nloop invariant j == m ==> n > 0;\nloop invariant 0 < n ==> m < n;\nloop invariant j == i ==> x < y;\nloop invariant j < i ==> x > y;\nloop invariant j > i ==> x == y;\nloop invariant j < i ==> x <= y;\nloop invariant j > i ==> x >= y;\nloop invariant j < i ==> x + y == k - 1;\nloop invariant j > i ==> x + y == k + 1;\nloop invariant j == i ==> x + y == k;\nloop invariant j < i ==> x + y <= k;\nloop invariant j > i ==> x + y >= k;\nloop invariant j < i ==> x + y == k - 1 ==> x < y;\nloop invariant j > i ==> x + y == k + 1 ==> x > y;\nloop invariant j == i ==> x + y == k ==> x == y;\nloop invariant j < i ==> x + y <= k ==> x <= y;\nloop invariant j > i ==> x + y >= k ==> x >= y;\nloop invariant j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k;\nloop invariant j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k;\nloop invariant j == i ==> x + y == k ==> x == y ==> x + y == k;\nloop invariant j < i ==> x + y <= k ==> x <= y ==> x + y <= k;\nloop invariant j > i ==> x + y >= k ==> x >= y ==> x + y >= k;\nloop invariant j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k ==> x < y;\nloop invariant j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k ==> x > y;\nloop invariant j == i ==> x + y == k ==> x == y ==> x + y == k ==> x == y;\nloop invariant j < i ==> x + y <= k ==> x <= y ==> x + y <= k ==> x <= y;\nloop invariant j > i ==> x + y >= k ==> x >= y ==> x + y >= k ==> x >= y;\nloop invariant j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k ==> x < y ==> x < y;\nloop invariant j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k ==> x > y ==> x > y;\nloop invariant j == i ==> x + y == k ==> x == y ==> x + y == k ==> x == y ==> x == y;\nloop invariant j < i ==> x + y <= k ==> x <= y ==> x + y <= k ==> x <= y ==> x <= y;\nloop invariant j > i ==> x + y >= k ==> x >= y ==> x + y >= k ==> x >= y ==> x >= y;\nloop invariant j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k ==> x < y ==> x < y ==> x < y;\nloop invariant j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k ==> x > y ==> x > y ==> x > y;\nloop invariant j == i ==> x + y == k ==> x == y ==> x + y == k ==> x == y ==> x == y ==> x == y;\nloop invariant j < i ==> x + y <= k ==> x <= y ==> x + y <= k ==> x <= y ==> x <= y ==> x <= y;\nloop invariant j > i ==> x + y >= k ==> x >= y ==> x + y >= k ==> x >= y ==> x >= y ==> x >= y;\nloop invariant j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k ==> x < y ==> x < y ==> x < y ==> x < y;\nloop invariant j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k ==> x > y ==> x > y ==> x > y ==> x > y;\nloop invariant j == i ==> x + y == k ==> x == y ==> x + y == k ==> x == y ==> x == y ==> x == y ==> x == y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\n\n\n\n\nloop invariant i7: x + y == k;\n\nloop invariant i9: 0 < n ==> m < n;\n\n\n\n\n\n\n\nloop invariant i17: j == i ==> x + y == k;\nloop invariant i18: j < i ==> x + y <= k;\nloop invariant i19: j > i ==> x + y >= k;\nloop invariant i20: j < i ==> x + y == k - 1 ==> x < y;\nloop invariant i21: j > i ==> x + y == k + 1 ==> x > y;\n\n\n\nloop invariant i25: j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k;\nloop invariant i26: j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k;\nloop invariant i27: j == i ==> x + y == k ==> x == y ==> x + y == k;\nloop invariant i28: j < i ==> x + y <= k ==> x <= y ==> x + y <= k;\nloop invariant i29: j > i ==> x + y >= k ==> x >= y ==> x + y >= k;\nloop invariant i30: j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k ==> x < y;\nloop invariant i31: j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k ==> x > y;\nloop invariant i32: j == i ==> x + y == k ==> x == y ==> x + y == k ==> x == y;\nloop invariant i33: j < i ==> x + y <= k ==> x <= y ==> x + y <= k ==> x <= y;\nloop invariant i34: j > i ==> x + y >= k ==> x >= y ==> x + y >= k ==> x >= y;\nloop invariant i35: j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k ==> x < y ==> x < y;\nloop invariant i36: j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k ==> x > y ==> x > y;\nloop invariant i37: j == i ==> x + y == k ==> x == y ==> x + y == k ==> x == y ==> x == y;\nloop invariant i38: j < i ==> x + y <= k ==> x <= y ==> x + y <= k ==> x <= y ==> x <= y;\nloop invariant i39: j > i ==> x + y >= k ==> x >= y ==> x + y >= k ==> x >= y ==> x >= y;\nloop invariant i40: j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k ==> x < y ==> x < y ==> x < y;\nloop invariant i41: j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k ==> x > y ==> x > y ==> x > y;\nloop invariant i42: j == i ==> x + y == k ==> x == y ==> x + y == k ==> x == y ==> x == y ==> x == y;\nloop invariant i43: j < i ==> x + y <= k ==> x <= y ==> x + y <= k ==> x <= y ==> x <= y ==> x <= y;\nloop invariant i44: j > i ==> x + y >= k ==> x >= y ==> x + y >= k ==> x >= y ==> x >= y ==> x >= y;\nloop invariant i45: j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k ==> x < y ==> x < y ==> x < y ==> x < y;\nloop invariant i46: j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k ==> x > y ==> x > y ==> x > y ==> x > y;\nloop invariant i47: j == i ==> x + y == k ==> x == y ==> x + y == k ==> x == y ==> x == y ==> x == y ==> x == y;\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 31: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\nloop invariant i1: 0 <= j <= n;\nloop invariant i2: 0 <= x <= k;\nloop invariant i3: 0 <= y <= k;\nloop invariant i4: 0 <= i <= n;\nloop invariant i5: 0 <= m <= n;\nloop invariant i6: 0 <= x;\nloop invariant i7: 0 <= y;\nloop invariant i8: 0 <= i;\nloop invariant i9: 0 <= n;\nloop invariant i10: unknown1() ==> m == j;\nloop invariant i11: unknown1() ==> 0 <= m;\nloop invariant i12: unknown1() ==> m < n;\nloop invariant i13: x + y == k;\nloop invariant i14: x >= y;\nloop invariant i15: x >= 0;\nloop invariant i16: y >= 0;\nloop invariant i17: i >= 0;\nloop invariant i18: j >= 0;\nloop invariant i19: n >= 0;\nloop invariant i20: j == i ==> x + 1 == y - 1;\nloop invariant i21: j != i ==> y + 1 == x - 1;\nloop invariant i22: j == i ==> unknown1() ==> m == j;\nloop invariant i23: j != i ==> unknown1() ==> m == j;\nloop invariant i24: j < n;\nloop invariant i25: 0 <= j < n;\nloop invariant i26: 0 <= x + y <= k;\nloop invariant i27: j == i ==> x == y + 1;\nloop invariant i28: j != i ==> x == y - 1;\nloop invariant i29: j <= n ==> x + y == k;\nloop invariant i30: j == n ==> x == y;\nloop invariant i31: j > n ==> x == y - 1;\nloop invariant i32: j == m ==> 0 <= m <= n;\nloop invariant i33: j < m ==> 0 <= m <= n;\nloop invariant i34: j == n ==> m == n;\nloop invariant i35: j > n ==> m == n;\nloop invariant i36: j == 0 ==> m == 0;\nloop invariant i37: j > 0 ==> m > 0;\nloop invariant i38: j < n ==> m < n;\nloop invariant i39: i1;\nloop invariant i40: i2;\nloop invariant i41: i3;\nloop invariant i42: i4;\nloop invariant i43: i5;\nloop invariant i44: i6;\nloop invariant i45: i7;\nloop invariant i46: i8;\nloop invariant i47: i9;\nloop invariant i48: i10;\nloop invariant i49: i11;\nloop invariant i50: i12;\nloop invariant i51: i13;\nloop invariant i52: i14;\nloop invariant i53: i15;\nloop invariant i54: i16;\nloop invariant i55: i17;\nloop invariant i56: i18;\nloop invariant i57: i19;\nloop invariant i58: i20;\nloop invariant i59: i21;\nloop invariant i60: i22;\nloop invariant i61: i23;\nloop invariant i62: i24;\nloop invariant i63: i25;\nloop invariant i64: i26;\nloop invariant i65: i27;\nloop invariant i66: i28;\nloop invariant i67: i29;\nloop invariant i68: i30;\nloop invariant i69: i31;\nloop invariant i70: i32;\nloop invariant i71: i33;\nloop invariant i72: i34;\nloop invariant i73: i35;\nloop invariant i74: i36;\nloop invariant i75: i37;\nloop invariant i76: i38;\nloop invariant i77: i39;\nloop invariant i78: i40;\nloop invariant i79: i41;\nloop invariant i80: i42;\nloop invariant i81: i43;\nloop invariant i82: i44;\nloop invariant i83: i45;\nloop invariant i84: i46;\nloop invariant i85: i47;\nloop invariant i86: i48;\nloop invariant i87: i49;\nloop invariant i88: i50;\nloop invariant i89: i51;\nloop invariant i90: i52;\nloop invariant i91: i53;\nloop invariant i92: i54;\nloop invariant i93: i55;\nloop invariant i94: i56;\nloop invariant i95: i57;\nloop invariant i96: i58;\nloop invariant i97: i59;\nloop invariant i98: i60;\nloop invariant i99: i61;\nloop invariant i100: i62;\nloop invariant i101: i63;\nloop invariant i102: i64;\nloop invariant i103: i65;\nloop invariant i104: i66;\nloop invariant i105: i67;\nloop invariant i106: i68;\nloop invariant i107: i69;\nloop invariant i108: i70;\nloop invariant i109: i71;\nloop invariant i110: i72;\nloop invariant i111: i73;\nloop invariant i112: i74;\nloop invariant i113: i75;\nloop invariant i114: i76;\nloop invariant i115: i77;\nloop invariant i116: i78;\nloop invariant i117: i79;\nloop invariant i118: i80;\nloop invariant i119: i81;\nloop invariant i120: i82;\nloop invariant i121: i83;\nloop invariant i122: i84;\nloop invariant i123: i85;\nloop invariant i124: i86;\nloop invariant i125: i87;\nloop invariant i126: i88;\nloop invariant i127: i89;\nloop invariant i128: i90;\nloop invariant i129: i91;\nloop invariant i130: i92;\nloop invariant i131: i93;\nloop invariant i132: i94;\nloop invariant i133: i95;\nloop invariant i134: i96;\nloop invariant i135: i97;\nloop invariant i136: i98;\nloop invariant i137: i99;\nloop invariant i138: i100;\nloop invariant i139: i101;\nloop invariant i140: i102;\nloop invariant i141: i103;\nloop invariant i142: i104;\nloop invariant i143: i105;\nloop invariant i144: i106;\nloop invariant i145: i107;\nloop invariant i146: i108;\nloop invariant i147: i109;\nloop invariant i148: i110;\nloop invariant i149: i111;\nloop invariant i150: i112;\nloop invariant i151: i113;\nloop invariant i152: i114;\nloop invariant i153: i115;\nloop invariant i154: i116;\nloop invariant i155: i117;\nloop invariant i156: i118;\nloop invariant i157: i119;\nloop invariant i158: i120;\nloop invariant i159: i121;\nloop invariant i160: i122;\nloop invariant i161: i123;\nloop invariant i162: i124;\nloop invariant i163: i125;\nloop invariant i164: i126;\nloop invariant i165: i127;\nloop invariant i166: i128;\nloop invariant i167: i129;\nloop invariant i168: i130;\nloop invariant i169: i131;\nloop invariant i170: i132;\nloop invariant i171: i133;\nloop invariant i172: i134;\nloop invariant i173: i135;\nloop invariant i174: i136;\nloop invariant i175: i137;\nloop invariant i176: i138;\nloop invariant i177: i139;\nloop invariant i178: i140;\nloop invariant i179: i141;\nloop invariant i180: i142;\nloop invariant i181: i143;\nloop invariant i182: i144;\nloop invariant i183: i145;\nloop invariant i184: i146;\nloop invariant i185: i147;\nloop invariant i186: i148;\nloop invariant i187: i149;\nloop invariant i188: i150;\nloop invariant i189: i151;\nloop invariant i190: i152;\nloop invariant i191: i153;\nloop invariant i192: i154;\nloop invariant i193: i155;\nloop invariant i194: i156;\nloop invariant i195: i157;\nloop invariant i196: i158;\nloop invariant i197: i <= j <= n;\nloop invariant i198: x >= k - y;\nloop invariant i199: y <= k - x;\nloop invariant i200: unknown1() ==> j == m;\nloop invariant i201: 0 <= k;\nloop invariant i202: m <= j;\nloop invariant i203: !(x + y != k) ==> (m == j);\nloop invariant i204: !(x + y != k) ==> (m < j) ==> (x + y >= m);\nloop invariant i205: !(x + y != k) ==> (m < j) ==> (y >= m - x);\nloop invariant i206: !(x + y != k) ==> (m < j) ==> (x >= m - y);\nloop invariant i207: 1 <= x <= k + y;\nloop invariant i208: 1 <= y <= k + x;\nloop invariant i209: x >= i;\nloop invariant i210: y <= i;\nloop invariant i211: m >= i;\nloop invariant i212: (x + y) == k;\nloop invariant i213: ((x + y) - k) == 0;\nloop invariant i214: y <= k;\nloop invariant i215: j <= n;\nloop invariant i216: n > 0;\nloop invariant i217: 0 <= y <= 100000;\nloop invariant i218: x >= (1 + (y - 1) * y / 2);\nloop invariant i219: m >= 0;\nloop invariant i220: m < n;\nloop invariant i221: m >= j;\nloop invariant i222: x <= y + n;\nloop invariant i223: y >= x;\nloop invariant i224: y <= x + n;\nloop invariant i225: x + y == k + (j - i);\nloop invariant i226: x + y == k + (j - i) + (i - j);\nloop invariant i227: x + y == k + (j - i) + (i - j) + (j - i);\nloop invariant i228: x + y == k + (j - i) + (i - j) + (j - i) + (i - j);\nloop invariant i229: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i);\nloop invariant i230: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\nloop invariant i231: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i);\nloop invariant i232: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\nloop invariant i233: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i);\nloop invariant i234: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\nloop invariant i235: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i);\nloop invariant i236: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\nloop invariant i237: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i);\nloop invariant i238: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\nloop invariant i239: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i);\nloop invariant i240: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\nloop invariant i241: 0 <= x <= 2147483647;\nloop invariant i242: 0 <= y <= 2147483647;\nloop invariant i243: 0 <= k <= 2147483647;\nloop invariant i244: 0 <= i <= 2147483647;\nloop invariant i245: 0 <= j <= 2147483647;\nloop invariant i246: 0 <= n <= 2147483647;\nloop invariant i247: i == j;\nloop invariant i248: m == j;\nloop invariant i249: 0 <= m < n;\nloop invariant i250: j == i;\nloop invariant i251: x == i + 1;\nloop invariant i252: y == i;\nloop invariant i253: j == m ==> n > 0;\nloop invariant i254: 0 < n ==> m < n;\nloop invariant i255: j == i ==> x < y;\nloop invariant i256: j < i ==> x > y;\nloop invariant i257: j > i ==> x == y;\nloop invariant i258: j < i ==> x <= y;\nloop invariant i259: j > i ==> x >= y;\nloop invariant i260: j < i ==> x + y == k - 1;\nloop invariant i261: j > i ==> x + y == k + 1;\nloop invariant i262: j == i ==> x + y == k;\nloop invariant i263: j < i ==> x + y <= k;\nloop invariant i264: j > i ==> x + y >= k;\nloop invariant i265: j < i ==> x + y == k - 1 ==> x < y;\nloop invariant i266: j > i ==> x + y == k + 1 ==> x > y;\nloop invariant i267: j == i ==> x + y == k ==> x == y;\nloop invariant i268: j < i ==> x + y <= k ==> x <= y;\nloop invariant i269: j > i ==> x + y >= k ==> x >= y;\nloop invariant i270: j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k;\nloop invariant i271: j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k;\nloop invariant i272: j == i ==> x + y == k ==> x == y ==> x + y == k;\nloop invariant i273: j < i ==> x + y <= k ==> x <= y ==> x + y <= k;\nloop invariant i274: j > i ==> x + y >= k ==> x >= y ==> x + y >= k;\nloop invariant i275: j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k ==> x < y;\nloop invariant i276: j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k ==> x > y;\nloop invariant i277: j == i ==> x + y == k ==> x == y ==> x + y == k ==> x == y;\nloop invariant i278: j < i ==> x + y <= k ==> x <= y ==> x + y <= k ==> x <= y;\nloop invariant i279: j > i ==> x + y >= k ==> x >= y ==> x + y >= k ==> x >= y;\nloop invariant i280: j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k ==> x < y ==> x < y;\nloop invariant i281: j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k ==> x > y ==> x > y;\nloop invariant i282: j == i ==> x + y == k ==> x == y ==> x + y == k ==> x == y ==> x == y;\nloop invariant i283: j < i ==> x + y <= k ==> x <= y ==> x + y <= k ==> x <= y ==> x <= y;\nloop invariant i284: j > i ==> x + y >= k ==> x >= y ==> x + y >= k ==> x >= y ==> x >= y;\nloop invariant i285: j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k ==> x < y ==> x < y ==> x < y;\nloop invariant i286: j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k ==> x > y ==> x > y ==> x > y;\nloop invariant i287: j == i ==> x + y == k ==> x == y ==> x + y == k ==> x == y ==> x == y ==> x == y;\nloop invariant i288: j < i ==> x + y <= k ==> x <= y ==> x + y <= k ==> x <= y ==> x <= y ==> x <= y;\nloop invariant i289: j > i ==> x + y >= k ==> x >= y ==> x + y >= k ==> x >= y ==> x >= y ==> x >= y;\nloop invariant i290: j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k ==> x < y ==> x < y ==> x < y ==> x < y;\nloop invariant i291: j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k ==> x > y ==> x > y ==> x > y ==> x > y;\nloop invariant i292: j == i ==> x + y == k ==> x == y ==> x + y == k ==> x == y ==> x == y ==> x == y ==> x == y;\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
        "combined_annotation_num_solver_calls": 181,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i13: x + y == k;\n\n\n\n\nloop invariant i18: j >= 0;\n\n\n\n\n\n\n\n\n\n\nloop invariant i29: j <= n ==> x + y == k;\n\n\n\nloop invariant i33: j < m ==> 0 <= m <= n;\n\n\nloop invariant i36: j == 0 ==> m == 0;\n\nloop invariant i38: j < n ==> m < n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i198: x >= k - y;\nloop invariant i199: y <= k - x;\n\n\nloop invariant i202: m <= j;\n\n\n\n\n\n\n\n\n\nloop invariant i212: (x + y) == k;\nloop invariant i213: ((x + y) - k) == 0;\n\n\n\n\n\nloop invariant i219: m >= 0;\n\n\n\n\n\n\nloop invariant i226: x + y == k + (j - i) + (i - j);\n\nloop invariant i228: x + y == k + (j - i) + (i - j) + (j - i) + (i - j);\n\nloop invariant i230: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\n\nloop invariant i232: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\n\nloop invariant i234: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\n\nloop invariant i236: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\n\nloop invariant i238: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\n\nloop invariant i240: x + y == k + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j) + (j - i) + (i - j);\n\n\n\n\nloop invariant i245: 0 <= j <= 2147483647;\n\n\n\n\n\n\n\n\nloop invariant i254: 0 < n ==> m < n;\n\n\n\n\n\n\n\nloop invariant i262: j == i ==> x + y == k;\nloop invariant i263: j < i ==> x + y <= k;\nloop invariant i264: j > i ==> x + y >= k;\nloop invariant i265: j < i ==> x + y == k - 1 ==> x < y;\nloop invariant i266: j > i ==> x + y == k + 1 ==> x > y;\n\n\n\nloop invariant i270: j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k;\nloop invariant i271: j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k;\nloop invariant i272: j == i ==> x + y == k ==> x == y ==> x + y == k;\nloop invariant i273: j < i ==> x + y <= k ==> x <= y ==> x + y <= k;\nloop invariant i274: j > i ==> x + y >= k ==> x >= y ==> x + y >= k;\nloop invariant i275: j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k ==> x < y;\nloop invariant i276: j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k ==> x > y;\nloop invariant i277: j == i ==> x + y == k ==> x == y ==> x + y == k ==> x == y;\nloop invariant i278: j < i ==> x + y <= k ==> x <= y ==> x + y <= k ==> x <= y;\nloop invariant i279: j > i ==> x + y >= k ==> x >= y ==> x + y >= k ==> x >= y;\nloop invariant i280: j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k ==> x < y ==> x < y;\nloop invariant i281: j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k ==> x > y ==> x > y;\nloop invariant i282: j == i ==> x + y == k ==> x == y ==> x + y == k ==> x == y ==> x == y;\nloop invariant i283: j < i ==> x + y <= k ==> x <= y ==> x + y <= k ==> x <= y ==> x <= y;\nloop invariant i284: j > i ==> x + y >= k ==> x >= y ==> x + y >= k ==> x >= y ==> x >= y;\nloop invariant i285: j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k ==> x < y ==> x < y ==> x < y;\nloop invariant i286: j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k ==> x > y ==> x > y ==> x > y;\nloop invariant i287: j == i ==> x + y == k ==> x == y ==> x + y == k ==> x == y ==> x == y ==> x == y;\nloop invariant i288: j < i ==> x + y <= k ==> x <= y ==> x + y <= k ==> x <= y ==> x <= y ==> x <= y;\nloop invariant i289: j > i ==> x + y >= k ==> x >= y ==> x + y >= k ==> x >= y ==> x >= y ==> x >= y;\nloop invariant i290: j < i ==> x + y == k - 1 ==> x < y ==> x + y <= k ==> x < y ==> x < y ==> x < y ==> x < y;\nloop invariant i291: j > i ==> x + y == k + 1 ==> x > y ==> x + y >= k ==> x > y ==> x > y ==> x > y ==> x > y;\nloop invariant i292: j == i ==> x + y == k ==> x == y ==> x + y == k ==> x == y ==> x == y ==> x == y ==> x == y;\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c"
        ],
        "skipped": [],
        "total": 114,
        "success_count": 96,
        "failure_count": 18,
        "success_rate": 0.8421052631578947
    }
}