{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    while (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= j <= 10;loop invariant 1 <= i <= 11;loop invariant j >= i;if(i < 5){loop invariant i <= 2;}else{loop invariant i >= 2;\n*/\n```",
            "```\n/*@\nloop invariant i <= j;\nloop invariant (i - j) % 2 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant 6 <= j <= 10;\nloop invariant i >= 1;\nloop invariant i <= 11;\nloop invariant j >= 6;\nloop invariant j <= 10;\nloop invariant i >= j + 1;\nloop invariant i <= j + 9;\nloop invariant i == j + 1;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j + 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant j >= i - 2;\nloop invariant j <= 10;\nloop invariant i <= 11;\nloop invariant j == 10 - i + 1;\nloop invariant i == j + 1;\nloop invariant i == j + 2;\nloop invariant j == 10 - i + 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant 0 <= j <= 10;\nloop invariant j >= i;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= 10;\nloop invariant i >= 1;\nloop invariant j >= i;\nloop invariant -1 + j >= i;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\n*/\n```",
            "```\n/*@\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant j >= i;\nloop invariant i >= 1;\nloop invariant j <= 10;\n*/\n```",
            "```\n/*@\nloop invariant i = 2 * k + 1;\nloop invariant j = 10 - k;\nloop invariant k >= 0;\nloop invariant k <= 4;\nloop invariant i >= j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant 10 <= j <= 20;\nloop invariant j >= i;\nloop invariant j - i <= 10;\nloop invariant j - i == 11;\nloop invariant i == j - 11;\nloop invariant i + 1 == j;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\n*/\n```",
            "```\n/*@\nloop invariant i >= 1;\nloop invariant j >= -1;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant j <= 10;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= 10;\nloop invariant i >= (1 + (j - 1) * j / 2);\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant j == 10 - i;\nloop invariant j >= i;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= j;\nloop invariant j <= 10;\nloop invariant i <= 10;\nloop invariant i == 1;\nloop invariant j == 10;\nloop invariant j == i + 2;\nloop invariant i == j - 2;\nloop invariant j == 10 - i;\nloop invariant i == 1 + (j - 1) * j / 2;\nloop invariant j == 10 - i;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= j;\nloop invariant j <= 10;\nloop invariant i <= 10;\nloop invariant i == 1;\nloop invariant j == 10;\nloop invariant j == i + 2;\nloop invariant i == j - 2;\nloop invariant j == 10 - i;\nloop invariant i == 1 + (j - 1) * j / 2;\nloop invariant j == 10 - i;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= j;\nloop invariant j <= 10;\nloop invariant i <= 10;\nloop invariant i == 1;\nloop invariant j == 10;\nloop invariant j == i + 2;\nloop invariant i == j - 2;\nloop invariant j == 10 - i;\nloop invariant i == 1 + (j - 1) * j / 2;\nloop invariant j == 10 - i;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= j;\nloop invariant j <= 10;\nloop invariant i <= 10;\nloop invariant i == 1;\nloop invariant j == 10;\nloop invariant j == i + 2;\nloop invariant i == j - 2;\nloop invariant j == 10 - i;\nloop invariant i == 1 + (j - 1) * j / 2;\nloop invariant j == 10 - i;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= j;\nloop invariant j <= 10;\nloop invariant i <= 10;\nloop invariant i == 1;\nloop invariant j == 10;\nloop invariant j == i + 2;\nloop invariant i == j - 2;\nloop invariant j == 10 - i;\nloop invariant i == 1 + (j - 1) * j / 2;\nloop invariant j == 10 - i;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= j;\nloop invariant j <= 10;\nloop invariant i <= 10;\nloop invariant i == 1;\nloop invariant j == 10;\nloop invariant j == i + 2;\nloop invariant i == j - 2;\nloop invariant j == 10 - i;\nloop invariant i == 1 + (j - 1) * j / 2;\nloop invariant j == 10 - i;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= j;\nloop invariant j <= 10;\nloop invariant i <= 10;\nloop invariant i == 1;\nloop invariant j == 10;\nloop invariant j == i + 2;\nloop invariant i == j - 2;\nloop invariant j == 10 - i;\nloop invariant i == 1 + (j - 1) * j / 2;\nloop invariant j == 10 - i;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= j;\nloop invariant j <= 10;\nloop invariant i <= 10;\nloop invariant i == 1;\nloop invariant j == 10;\nloop invariant j == i + 2;\nloop invariant i == j - 2;\nloop invariant j == 10 - i;\nloop invariant i == 1 + (j - 1) * j / 2;\nloop invariant j == 10 - i;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= j;\nloop invariant j <= 10;\nloop invariant i <= 10;\nloop invariant i == 1;\nloop invariant j == 10;\nloop invariant j == i + 2;\nloop invariant i == j - 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= 10;\nloop invariant i >= 1;\nloop invariant i <= 7;\nloop invariant j >= 6;\nloop invariant j <= 10;\nloop invariant i <= 2 * j - 1;\nloop invariant i >= j + 1;\nloop invariant i + j <= 11;\nloop invariant i + j >= 7;\nloop invariant i + j == 11 ==> i == 1 && j == 10;\nloop invariant i + j != 11 ==> i <= 7 && j >= 6;\n*/\n```",
            "```\n/*@\nloop invariant j <= 10;\nloop invariant 0 <= i <= 10;\nloop invariant j <= i - 1;\nloop invariant j >= 1 - i;\nloop invariant i >= 1;\nloop invariant i <= 10;\nloop invariant i % 2 = 1;\nloop invariant i >= j + 1;\nloop invariant i <= j + 10;\nloop invariant i >= 1 + (j % 2);\nloop invariant i <= 10 - (j % 2);\nloop invariant i >= j + 1 - (j % 2);\nloop invariant i <= j + 10 - (j % 2);\nloop invariant i % 2 = 1 - (j % 2);\nloop invariant i % 2 = 1 + (j % 2);\nloop invariant i % 2 = 1 - (j % 2) + 2 * (j % 2);\nloop invariant i % 2 = 1 + (j % 2) - 2 * (j % 2);\nloop invariant i % 2 = 1 - (j % 2) + 2 * (j % 2) - 2 * (j % 2);\nloop invariant i % 2 = 1 + (j % 2) - 2 * (j % 2) + 2 * (j % 2);\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 11;\nloop invariant 9 <= j <= 10;\nloop invariant j + i <= 11;\nloop invariant j + i >= 1;\nloop invariant i == j + 2 * k for some integer k;\nloop invariant j == 10 - k for some integer k;\nloop invariant i >= j + 2 * k for some integer k;\n*/\n```",
            "```\n/*@\nloop invariant i >= 1;\nloop invariant j >= 10;\nloop invariant j >= i;\nloop invariant j >= 11;\nloop invariant j <= 10;\nloop invariant j <= 10 + 1;\nloop invariant j <= 10 - 1;\nloop invariant j <= 10 + 2;\nloop invariant j <= 10 - 2;\nloop invariant j <= 10 + 3;\nloop invariant j <= 10 - 3;\nloop invariant j <= 10 + 4;\nloop invariant j <= 10 - 4;\nloop invariant j <= 10 + 5;\nloop invariant j <= 10 - 5;\nloop invariant j <= 10 + 6;\nloop invariant j <= 10 - 6;\nloop invariant j <= 10 + 7;\nloop invariant j <= 10 - 7;\nloop invariant j <= 10 + 8;\nloop invariant j <= 10 - 8;\nloop invariant j <= 10 + 9;\nloop invariant j <= 10 - 9;\nloop invariant j <= 10 + 10;\nloop invariant j <= 10 - 10;\nloop invariant j <= 10 + 11;\nloop invariant j <= 10 - 11;\nloop invariant j <= 10 + 12;\nloop invariant j <= 10 - 12;\nloop invariant j <= 10 + 13;\nloop invariant j <= 10 - 13;\nloop invariant j <= 10 + 14;\nloop invariant j <= 10 - 14;\nloop invariant j <= 10 + 15;\nloop invariant j <= 10 - 15;\nloop invariant j <= 10 + 16;\nloop invariant j <= 10 - 16;\nloop invariant j <= 10 + 17;\nloop invariant j <= 10 - 17;\nloop invariant j <= 10 + 18;\nloop invariant j <= 10 - 18;\nloop invariant j <= 10 + 19;\nloop invariant j <= 10 - 19;\nloop invariant j <= 10 + 20;\nloop invariant j <= 10 - 20;\nloop invariant j <= 10 + 21;\nloop invariant j <= 10 - 21;\nloop invariant j <= 10 + 22;\nloop invariant j <= 10 - 22;\nloop invariant j <= 10 + 23;\nloop invariant j <= 10 - 23;\nloop invariant j <= 10 + 24;\nloop invariant j <= 10 - 24;\nloop invariant j <= 10 + 25;\nloop invariant j <= 10 - 25;\nloop invariant j <= 10 + 26;\nloop invariant j <= 10 - 26;\nloop invariant j <= 10 + 27;\nloop invariant j <= 10 - 27;\nloop invariant j <= 10 + 28;\nloop invariant j <= 10 - 28;\nloop invariant j <= 10 + 29;\nloop invariant j <= 10 - 29;\nloop invariant j <= 10 + 30;\nloop invariant j <= 10 - 30;\nloop invariant j <= 10 + 31;\nloop invariant j <= 10 - 31;\nloop invariant j <= 10 + 32;\nloop invariant j <= 10 - 32;\nloop invariant j <= 10 + 33;\nloop invariant j <= 10 - 33;\nloop invariant j <= 10 + 34;\nloop invariant j <= 10 - 34;\nloop invariant j <= 10 + 35;\nloop invariant j <= 10 - 35;\nloop invariant j <= 10 + 36;\nloop invariant j <= 10 - 36;\nloop invariant j <= 10 + 37;\nloop invariant j <= 10 - 37;\nloop invariant j <= 10 + 38;\nloop invariant j <= 10 - 38;\nloop invariant j <= 10 + 39;\nloop invariant j <= 10 - 39;\nloop invariant j <= 10 + 40;\nloop invariant j <= 10 - 40;\nloop invariant j <= 10 + 41;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= 10;loop invariant 1 <= i <= 11;loop invariant j >= i;if(i < 5){loop invariant i <= 2;}else{loop invariant i >= 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant i <= j;\nloop invariant (i - j) % 2 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant 6 <= j <= 10;\nloop invariant i >= 1;\nloop invariant i <= 11;\nloop invariant j >= 6;\nloop invariant j <= 10;\nloop invariant i >= j + 1;\nloop invariant i <= j + 9;\nloop invariant i == j + 1;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n\nloop invariant i3: i >= 1;\n\n\nloop invariant i6: j <= 10;\n\nloop invariant i8: i <= j + 9;\n\n\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j + 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant j >= i - 2;\nloop invariant j <= 10;\nloop invariant i <= 11;\nloop invariant j == 10 - i + 1;\nloop invariant i == j + 1;\nloop invariant i == j + 2;\nloop invariant j == 10 - i + 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\nloop invariant i2: i % 2 == 1;\n\n\nloop invariant i5: j <= 10;\nloop invariant i6: i <= 11;\n\n\n\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant 0 <= j <= 10;\nloop invariant j >= i;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\nloop invariant i2: 0 <= j <= 10;\n\nloop invariant i4: i % 2 == 1;\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= 10;\nloop invariant i >= 1;\nloop invariant j >= i;\nloop invariant -1 + j >= i;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\nloop invariant j - i <= 10;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\nloop invariant i1: 0 <= j <= 10;\nloop invariant i2: i >= 1;\n\n\nloop invariant i5: j - i <= 10;\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant j >= i;\nloop invariant i >= 1;\nloop invariant j <= 10;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\nloop invariant i1: i % 2 == 1;\n\n\nloop invariant i4: i >= 1;\nloop invariant i5: j <= 10;\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant i = 2 * k + 1;\nloop invariant j = 10 - k;\nloop invariant k >= 0;\nloop invariant k <= 4;\nloop invariant i >= j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n\n\n\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant 10 <= j <= 20;\nloop invariant j >= i;\nloop invariant j - i <= 10;\nloop invariant j - i == 11;\nloop invariant i == j - 11;\nloop invariant i + 1 == j;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\nloop invariant j - i == 11;\nloop invariant j == i + 1;\nloop invariant j == i + 1 && i == j - 11;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n\n\nloop invariant i4: j - i <= 10;\n\n\n\n\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant i >= 1;\nloop invariant j >= -1;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant j <= 10;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i <= j + 1;\nloop invariant i <= 11;\nloop invariant j >= -1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\nloop invariant i1: i >= 1;\nloop invariant i2: j >= -1;\n\n\nloop invariant i5: j <= 10;\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 12,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= 10;\nloop invariant i >= (1 + (j - 1) * j / 2);\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant j == 10 - i;\nloop invariant j >= i;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= j;\nloop invariant j <= 10;\nloop invariant i <= 10;\nloop invariant i == 1;\nloop invariant j == 10;\nloop invariant j == i + 2;\nloop invariant i == j - 2;\nloop invariant j == 10 - i;\nloop invariant i == 1 + (j - 1) * j / 2;\nloop invariant j == 10 - i;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= j;\nloop invariant j <= 10;\nloop invariant i <= 10;\nloop invariant i == 1;\nloop invariant j == 10;\nloop invariant j == i + 2;\nloop invariant i == j - 2;\nloop invariant j == 10 - i;\nloop invariant i == 1 + (j - 1) * j / 2;\nloop invariant j == 10 - i;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= j;\nloop invariant j <= 10;\nloop invariant i <= 10;\nloop invariant i == 1;\nloop invariant j == 10;\nloop invariant j == i + 2;\nloop invariant i == j - 2;\nloop invariant j == 10 - i;\nloop invariant i == 1 + (j - 1) * j / 2;\nloop invariant j == 10 - i;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= j;\nloop invariant j <= 10;\nloop invariant i <= 10;\nloop invariant i == 1;\nloop invariant j == 10;\nloop invariant j == i + 2;\nloop invariant i == j - 2;\nloop invariant j == 10 - i;\nloop invariant i == 1 + (j - 1) * j / 2;\nloop invariant j == 10 - i;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= j;\nloop invariant j <= 10;\nloop invariant i <= 10;\nloop invariant i == 1;\nloop invariant j == 10;\nloop invariant j == i + 2;\nloop invariant i == j - 2;\nloop invariant j == 10 - i;\nloop invariant i == 1 + (j - 1) * j / 2;\nloop invariant j == 10 - i;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= j;\nloop invariant j <= 10;\nloop invariant i <= 10;\nloop invariant i == 1;\nloop invariant j == 10;\nloop invariant j == i + 2;\nloop invariant i == j - 2;\nloop invariant j == 10 - i;\nloop invariant i == 1 + (j - 1) * j / 2;\nloop invariant j == 10 - i;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= j;\nloop invariant j <= 10;\nloop invariant i <= 10;\nloop invariant i == 1;\nloop invariant j == 10;\nloop invariant j == i + 2;\nloop invariant i == j - 2;\nloop invariant j == 10 - i;\nloop invariant i == 1 + (j - 1) * j / 2;\nloop invariant j == 10 - i;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= j;\nloop invariant j <= 10;\nloop invariant i <= 10;\nloop invariant i == 1;\nloop invariant j == 10;\nloop invariant j == i + 2;\nloop invariant i == j - 2;\nloop invariant j == 10 - i;\nloop invariant i == 1 + (j - 1) * j / 2;\nloop invariant j == 10 - i;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= j;\nloop invariant j <= 10;\nloop invariant i <= 10;\nloop invariant i == 1;\nloop invariant j == 10;\nloop invariant j == i + 2;\nloop invariant i == j - 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\nloop invariant i1: 0 <= j <= 10;\n\n\n\n\n\nloop invariant i7: i >= 1;\n\n\nloop invariant i10: j <= 10;\n\n\n\n\n\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= 10;\nloop invariant i >= 1;\nloop invariant i <= 7;\nloop invariant j >= 6;\nloop invariant j <= 10;\nloop invariant i <= 2 * j - 1;\nloop invariant i >= j + 1;\nloop invariant i + j <= 11;\nloop invariant i + j >= 7;\nloop invariant i + j == 11 ==> i == 1 && j == 10;\nloop invariant i + j != 11 ==> i <= 7 && j >= 6;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\nloop invariant i1: 0 <= j <= 10;\nloop invariant i2: i >= 1;\n\n\nloop invariant i5: j <= 10;\n\n\n\nloop invariant i9: i + j >= 7;\n\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 13,
                "annotations": "```\n/*@\nloop invariant j <= 10;\nloop invariant 0 <= i <= 10;\nloop invariant j <= i - 1;\nloop invariant j >= 1 - i;\nloop invariant i >= 1;\nloop invariant i <= 10;\nloop invariant i % 2 = 1;\nloop invariant i >= j + 1;\nloop invariant i <= j + 10;\nloop invariant i >= 1 + (j % 2);\nloop invariant i <= 10 - (j % 2);\nloop invariant i >= j + 1 - (j % 2);\nloop invariant i <= j + 10 - (j % 2);\nloop invariant i % 2 = 1 - (j % 2);\nloop invariant i % 2 = 1 + (j % 2);\nloop invariant i % 2 = 1 - (j % 2) + 2 * (j % 2);\nloop invariant i % 2 = 1 + (j % 2) - 2 * (j % 2);\nloop invariant i % 2 = 1 - (j % 2) + 2 * (j % 2) - 2 * (j % 2);\nloop invariant i % 2 = 1 + (j % 2) - 2 * (j % 2) + 2 * (j % 2);\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\nloop invariant i % 2 = 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\nloop invariant i1: j <= 10;\n\n\nloop invariant i4: j >= 1 - i;\nloop invariant i5: i >= 1;\n\n\n\nloop invariant i9: i <= j + 10;\nloop invariant i10: i >= 1 + (j % 2);\n\n\nloop invariant i13: i <= j + 10 - (j % 2);\n\n\n\n\n\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 11;\nloop invariant 9 <= j <= 10;\nloop invariant j + i <= 11;\nloop invariant j + i >= 1;\nloop invariant i == j + 2 * k for some integer k;\nloop invariant j == 10 - k for some integer k;\nloop invariant i >= j + 2 * k for some integer k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n\n\nloop invariant i4: j + i >= 1;\n\n\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 44,
                "annotations": "```\n/*@\nloop invariant i >= 1;\nloop invariant j >= 10;\nloop invariant j >= i;\nloop invariant j >= 11;\nloop invariant j <= 10;\nloop invariant j <= 10 + 1;\nloop invariant j <= 10 - 1;\nloop invariant j <= 10 + 2;\nloop invariant j <= 10 - 2;\nloop invariant j <= 10 + 3;\nloop invariant j <= 10 - 3;\nloop invariant j <= 10 + 4;\nloop invariant j <= 10 - 4;\nloop invariant j <= 10 + 5;\nloop invariant j <= 10 - 5;\nloop invariant j <= 10 + 6;\nloop invariant j <= 10 - 6;\nloop invariant j <= 10 + 7;\nloop invariant j <= 10 - 7;\nloop invariant j <= 10 + 8;\nloop invariant j <= 10 - 8;\nloop invariant j <= 10 + 9;\nloop invariant j <= 10 - 9;\nloop invariant j <= 10 + 10;\nloop invariant j <= 10 - 10;\nloop invariant j <= 10 + 11;\nloop invariant j <= 10 - 11;\nloop invariant j <= 10 + 12;\nloop invariant j <= 10 - 12;\nloop invariant j <= 10 + 13;\nloop invariant j <= 10 - 13;\nloop invariant j <= 10 + 14;\nloop invariant j <= 10 - 14;\nloop invariant j <= 10 + 15;\nloop invariant j <= 10 - 15;\nloop invariant j <= 10 + 16;\nloop invariant j <= 10 - 16;\nloop invariant j <= 10 + 17;\nloop invariant j <= 10 - 17;\nloop invariant j <= 10 + 18;\nloop invariant j <= 10 - 18;\nloop invariant j <= 10 + 19;\nloop invariant j <= 10 - 19;\nloop invariant j <= 10 + 20;\nloop invariant j <= 10 - 20;\nloop invariant j <= 10 + 21;\nloop invariant j <= 10 - 21;\nloop invariant j <= 10 + 22;\nloop invariant j <= 10 - 22;\nloop invariant j <= 10 + 23;\nloop invariant j <= 10 - 23;\nloop invariant j <= 10 + 24;\nloop invariant j <= 10 - 24;\nloop invariant j <= 10 + 25;\nloop invariant j <= 10 - 25;\nloop invariant j <= 10 + 26;\nloop invariant j <= 10 - 26;\nloop invariant j <= 10 + 27;\nloop invariant j <= 10 - 27;\nloop invariant j <= 10 + 28;\nloop invariant j <= 10 - 28;\nloop invariant j <= 10 + 29;\nloop invariant j <= 10 - 29;\nloop invariant j <= 10 + 30;\nloop invariant j <= 10 - 30;\nloop invariant j <= 10 + 31;\nloop invariant j <= 10 - 31;\nloop invariant j <= 10 + 32;\nloop invariant j <= 10 - 32;\nloop invariant j <= 10 + 33;\nloop invariant j <= 10 - 33;\nloop invariant j <= 10 + 34;\nloop invariant j <= 10 - 34;\nloop invariant j <= 10 + 35;\nloop invariant j <= 10 - 35;\nloop invariant j <= 10 + 36;\nloop invariant j <= 10 - 36;\nloop invariant j <= 10 + 37;\nloop invariant j <= 10 - 37;\nloop invariant j <= 10 + 38;\nloop invariant j <= 10 - 38;\nloop invariant j <= 10 + 39;\nloop invariant j <= 10 - 39;\nloop invariant j <= 10 + 40;\nloop invariant j <= 10 - 40;\nloop invariant j <= 10 + 41;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\nloop invariant i1: i >= 1;\n\n\n\nloop invariant i5: j <= 10;\nloop invariant i6: j <= 10 + 1;\n\nloop invariant i8: j <= 10 + 2;\n\nloop invariant i10: j <= 10 + 3;\n\nloop invariant i12: j <= 10 + 4;\n\nloop invariant i14: j <= 10 + 5;\n\nloop invariant i16: j <= 10 + 6;\n\nloop invariant i18: j <= 10 + 7;\n\nloop invariant i20: j <= 10 + 8;\n\nloop invariant i22: j <= 10 + 9;\n\nloop invariant i24: j <= 10 + 10;\n\nloop invariant i26: j <= 10 + 11;\n\nloop invariant i28: j <= 10 + 12;\n\nloop invariant i30: j <= 10 + 13;\n\nloop invariant i32: j <= 10 + 14;\n\nloop invariant i34: j <= 10 + 15;\n\nloop invariant i36: j <= 10 + 16;\n\nloop invariant i38: j <= 10 + 17;\n\nloop invariant i40: j <= 10 + 18;\n\nloop invariant i42: j <= 10 + 19;\n\nloop invariant i44: j <= 10 + 20;\n\nloop invariant i46: j <= 10 + 21;\n\nloop invariant i48: j <= 10 + 22;\n\nloop invariant i50: j <= 10 + 23;\n\nloop invariant i52: j <= 10 + 24;\n\nloop invariant i54: j <= 10 + 25;\n\nloop invariant i56: j <= 10 + 26;\n\nloop invariant i58: j <= 10 + 27;\n\nloop invariant i60: j <= 10 + 28;\n\nloop invariant i62: j <= 10 + 29;\n\nloop invariant i64: j <= 10 + 30;\n\nloop invariant i66: j <= 10 + 31;\n\nloop invariant i68: j <= 10 + 32;\n\nloop invariant i70: j <= 10 + 33;\n\nloop invariant i72: j <= 10 + 34;\n\nloop invariant i74: j <= 10 + 35;\n\nloop invariant i76: j <= 10 + 36;\n\nloop invariant i78: j <= 10 + 37;\n\nloop invariant i80: j <= 10 + 38;\n\nloop invariant i82: j <= 10 + 39;\n\nloop invariant i84: j <= 10 + 40;\n\nloop invariant i86: j <= 10 + 41;\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 12: unexpected token 'if'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\nloop invariant i1: 0 <= j <= 10;loop invariant 1 <= i <= 11;loop invariant j >= i;if(i < 5){loop invariant i <= 2;}else{loop invariant i >= 2;\nloop invariant i2: i <= j;\nloop invariant i3: (i - j) % 2 == 0;\nloop invariant i4: 0 <= i <= 10;\nloop invariant i5: 6 <= j <= 10;\nloop invariant i6: i >= 1;\nloop invariant i7: i <= 11;\nloop invariant i8: j >= 6;\nloop invariant i9: j <= 10;\nloop invariant i10: i >= j + 1;\nloop invariant i11: i <= j + 9;\nloop invariant i12: i == j + 1;\nloop invariant i13: j == 6;\nloop invariant i14: i == 7;\nloop invariant i15: 0 <= i <= j + 1;\nloop invariant i16: i % 2 == 1;\nloop invariant i17: j % 2 == 0;\nloop invariant i18: j >= i - 2;\nloop invariant i19: j == 10 - i + 1;\nloop invariant i20: i == j + 2;\nloop invariant i21: j == 10 - i + 2;\nloop invariant i22: 0 <= j <= 10;\nloop invariant i23: j >= i;\nloop invariant i24: -1 + j >= i;\nloop invariant i25: j - i <= 10;\nloop invariant i26: i = 2 * k + 1;\nloop invariant i27: j = 10 - k;\nloop invariant i28: k >= 0;\nloop invariant i29: k <= 4;\nloop invariant i30: i >= j;\nloop invariant i31: 10 <= j <= 20;\nloop invariant i32: j - i == 11;\nloop invariant i33: i == j - 11;\nloop invariant i34: i + 1 == j;\nloop invariant i35: j == i + 1;\nloop invariant i36: j == i + 1 && i == j - 11;\nloop invariant i37: j >= -1;\nloop invariant i38: i <= j + 1;\nloop invariant i39: i >= (1 + (j - 1) * j / 2);\nloop invariant i40: i % 2 == 0;\nloop invariant i41: j % 2 == 1;\nloop invariant i42: j == 10 - i;\nloop invariant i43: j >= 1;\nloop invariant i44: i <= 10;\nloop invariant i45: i == 1;\nloop invariant i46: j == 10;\nloop invariant i47: j == i + 2;\nloop invariant i48: i == j - 2;\nloop invariant i49: i == 1 + (j - 1) * j / 2;\nloop invariant i50: i <= 7;\nloop invariant i51: i <= 2 * j - 1;\nloop invariant i52: i + j <= 11;\nloop invariant i53: i + j >= 7;\nloop invariant i54: i + j == 11 ==> i == 1 && j == 10;\nloop invariant i55: i + j != 11 ==> i <= 7 && j >= 6;\nloop invariant i56: j <= i - 1;\nloop invariant i57: j >= 1 - i;\nloop invariant i58: i % 2 = 1;\nloop invariant i59: i <= j + 10;\nloop invariant i60: i >= 1 + (j % 2);\nloop invariant i61: i <= 10 - (j % 2);\nloop invariant i62: i >= j + 1 - (j % 2);\nloop invariant i63: i <= j + 10 - (j % 2);\nloop invariant i64: i % 2 = 1 - (j % 2);\nloop invariant i65: i % 2 = 1 + (j % 2);\nloop invariant i66: i % 2 = 1 - (j % 2) + 2 * (j % 2);\nloop invariant i67: i % 2 = 1 + (j % 2) - 2 * (j % 2);\nloop invariant i68: i % 2 = 1 - (j % 2) + 2 * (j % 2) - 2 * (j % 2);\nloop invariant i69: i % 2 = 1 + (j % 2) - 2 * (j % 2) + 2 * (j % 2);\nloop invariant i70: 0 <= i <= 11;\nloop invariant i71: 9 <= j <= 10;\nloop invariant i72: j + i <= 11;\nloop invariant i73: j + i >= 1;\nloop invariant i74: i == j + 2 * k for some integer k;\nloop invariant i75: j == 10 - k for some integer k;\nloop invariant i76: i >= j + 2 * k for some integer k;\nloop invariant i77: j >= 10;\nloop invariant i78: j >= 11;\nloop invariant i79: j <= 10 + 1;\nloop invariant i80: j <= 10 - 1;\nloop invariant i81: j <= 10 + 2;\nloop invariant i82: j <= 10 - 2;\nloop invariant i83: j <= 10 + 3;\nloop invariant i84: j <= 10 - 3;\nloop invariant i85: j <= 10 + 4;\nloop invariant i86: j <= 10 - 4;\nloop invariant i87: j <= 10 + 5;\nloop invariant i88: j <= 10 - 5;\nloop invariant i89: j <= 10 + 6;\nloop invariant i90: j <= 10 - 6;\nloop invariant i91: j <= 10 + 7;\nloop invariant i92: j <= 10 - 7;\nloop invariant i93: j <= 10 + 8;\nloop invariant i94: j <= 10 - 8;\nloop invariant i95: j <= 10 + 9;\nloop invariant i96: j <= 10 - 9;\nloop invariant i97: j <= 10 + 10;\nloop invariant i98: j <= 10 - 10;\nloop invariant i99: j <= 10 + 11;\nloop invariant i100: j <= 10 - 11;\nloop invariant i101: j <= 10 + 12;\nloop invariant i102: j <= 10 - 12;\nloop invariant i103: j <= 10 + 13;\nloop invariant i104: j <= 10 - 13;\nloop invariant i105: j <= 10 + 14;\nloop invariant i106: j <= 10 - 14;\nloop invariant i107: j <= 10 + 15;\nloop invariant i108: j <= 10 - 15;\nloop invariant i109: j <= 10 + 16;\nloop invariant i110: j <= 10 - 16;\nloop invariant i111: j <= 10 + 17;\nloop invariant i112: j <= 10 - 17;\nloop invariant i113: j <= 10 + 18;\nloop invariant i114: j <= 10 - 18;\nloop invariant i115: j <= 10 + 19;\nloop invariant i116: j <= 10 - 19;\nloop invariant i117: j <= 10 + 20;\nloop invariant i118: j <= 10 - 20;\nloop invariant i119: j <= 10 + 21;\nloop invariant i120: j <= 10 - 21;\nloop invariant i121: j <= 10 + 22;\nloop invariant i122: j <= 10 - 22;\nloop invariant i123: j <= 10 + 23;\nloop invariant i124: j <= 10 - 23;\nloop invariant i125: j <= 10 + 24;\nloop invariant i126: j <= 10 - 24;\nloop invariant i127: j <= 10 + 25;\nloop invariant i128: j <= 10 - 25;\nloop invariant i129: j <= 10 + 26;\nloop invariant i130: j <= 10 - 26;\nloop invariant i131: j <= 10 + 27;\nloop invariant i132: j <= 10 - 27;\nloop invariant i133: j <= 10 + 28;\nloop invariant i134: j <= 10 - 28;\nloop invariant i135: j <= 10 + 29;\nloop invariant i136: j <= 10 - 29;\nloop invariant i137: j <= 10 + 30;\nloop invariant i138: j <= 10 - 30;\nloop invariant i139: j <= 10 + 31;\nloop invariant i140: j <= 10 - 31;\nloop invariant i141: j <= 10 + 32;\nloop invariant i142: j <= 10 - 32;\nloop invariant i143: j <= 10 + 33;\nloop invariant i144: j <= 10 - 33;\nloop invariant i145: j <= 10 + 34;\nloop invariant i146: j <= 10 - 34;\nloop invariant i147: j <= 10 + 35;\nloop invariant i148: j <= 10 - 35;\nloop invariant i149: j <= 10 + 36;\nloop invariant i150: j <= 10 - 36;\nloop invariant i151: j <= 10 + 37;\nloop invariant i152: j <= 10 - 37;\nloop invariant i153: j <= 10 + 38;\nloop invariant i154: j <= 10 - 38;\nloop invariant i155: j <= 10 + 39;\nloop invariant i156: j <= 10 - 39;\nloop invariant i157: j <= 10 + 40;\nloop invariant i158: j <= 10 - 40;\nloop invariant i159: j <= 10 + 41;\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
        "combined_annotation_num_solver_calls": 93,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n\n\n\n\nloop invariant i6: i >= 1;\nloop invariant i7: i <= 11;\n\nloop invariant i9: j <= 10;\n\nloop invariant i11: i <= j + 9;\n\n\n\n\nloop invariant i16: i % 2 == 1;\n\n\n\n\n\nloop invariant i22: 0 <= j <= 10;\n\n\nloop invariant i25: j - i <= 10;\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i37: j >= -1;\n\n\n\n\n\nloop invariant i43: j >= 1;\n\n\n\n\n\n\n\nloop invariant i51: i <= 2 * j - 1;\n\nloop invariant i53: i + j >= 7;\n\n\n\nloop invariant i57: j >= 1 - i;\n\nloop invariant i59: i <= j + 10;\nloop invariant i60: i >= 1 + (j % 2);\n\n\nloop invariant i63: i <= j + 10 - (j % 2);\n\n\n\n\n\n\nloop invariant i70: 0 <= i <= 11;\n\n\nloop invariant i73: j + i >= 1;\n\n\n\n\n\nloop invariant i79: j <= 10 + 1;\n\nloop invariant i81: j <= 10 + 2;\n\nloop invariant i83: j <= 10 + 3;\n\nloop invariant i85: j <= 10 + 4;\n\nloop invariant i87: j <= 10 + 5;\n\nloop invariant i89: j <= 10 + 6;\n\nloop invariant i91: j <= 10 + 7;\n\nloop invariant i93: j <= 10 + 8;\n\nloop invariant i95: j <= 10 + 9;\n\nloop invariant i97: j <= 10 + 10;\n\nloop invariant i99: j <= 10 + 11;\n\nloop invariant i101: j <= 10 + 12;\n\nloop invariant i103: j <= 10 + 13;\n\nloop invariant i105: j <= 10 + 14;\n\nloop invariant i107: j <= 10 + 15;\n\nloop invariant i109: j <= 10 + 16;\n\nloop invariant i111: j <= 10 + 17;\n\nloop invariant i113: j <= 10 + 18;\n\nloop invariant i115: j <= 10 + 19;\n\nloop invariant i117: j <= 10 + 20;\n\nloop invariant i119: j <= 10 + 21;\n\nloop invariant i121: j <= 10 + 22;\n\nloop invariant i123: j <= 10 + 23;\n\nloop invariant i125: j <= 10 + 24;\n\nloop invariant i127: j <= 10 + 25;\n\nloop invariant i129: j <= 10 + 26;\n\nloop invariant i131: j <= 10 + 27;\n\nloop invariant i133: j <= 10 + 28;\n\nloop invariant i135: j <= 10 + 29;\n\nloop invariant i137: j <= 10 + 30;\n\nloop invariant i139: j <= 10 + 31;\n\nloop invariant i141: j <= 10 + 32;\n\nloop invariant i143: j <= 10 + 33;\n\nloop invariant i145: j <= 10 + 34;\n\nloop invariant i147: j <= 10 + 35;\n\nloop invariant i149: j <= 10 + 36;\n\nloop invariant i151: j <= 10 + 37;\n\nloop invariant i153: j <= 10 + 38;\n\nloop invariant i155: j <= 10 + 39;\n\nloop invariant i157: j <= 10 + 40;\n\nloop invariant i159: j <= 10 + 41;\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c"
        ],
        "skipped": [],
        "total": 47,
        "success_count": 39,
        "failure_count": 8,
        "success_rate": 0.8297872340425532
    }
}