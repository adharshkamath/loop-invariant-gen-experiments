{
    "logs": {
        "file": "../dataset/loop_invariants/accelerating_invariant_generation/dagger/substring1.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main () {\nint i, j;\nint from;\nint to;\nint k;\n\nif (!(k >= 0)) \n\nreturn;\n\nif (!(k <= 100)) \n\nreturn;\n\nif (!(from >= 0)) \n\nreturn;\n\nif (!(from <= k)) \n\nreturn;\n\ni = from;\nj = 0;\n\nwhile (i < k) {\ni++;\nj++;\n}\n\n{;\n//@ assert(j <= 100);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 1 <= i <= k;\nloop invariant 0 <= j <= (k - i);\nloop invariant (from + j) == i;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\n*/\n```",
            "```\n/*@\nloop invariant k >= i >= from;\nloop invariant j >= i - from;\nloop invariant j <= j + 1;\nloop invariant i <= k;\nloop invariant j <= k - from;\nloop invariant k <= 100;\nloop invariant k >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= k;\nloop invariant 0 <= j <= k - from;\nloop invariant i == from + j;\nloop invariant j <= k - from ==> i == from + j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= k;\nloop invariant 0 <= j <= k;\nloop invariant j <= i;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant i == from;\nloop invariant j == 0;\nloop invariant from <= i < k;\nloop invariant 0 <= j <= i - from;\nloop invariant i == k;\nloop invariant j <= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= k;\nloop invariant j = i - from;\nloop invariant i >= from;\nloop invariant i <= k;\nloop invariant j >= 0;\nloop invariant j <= k - from;\nloop invariant j <= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= k;\nloop invariant (k - i) <= 100;\nloop invariant 0 <= j <= i;\nloop invariant j <= k;\nloop invariant j <= 100;\nloop invariant k <= 100;\nloop invariant i <= k;\nloop invariant i <= 100;\nloop invariant (k - i) <= 100;\nloop invariant k <= 100;\n*/\n```",
            "```\n/*@\nloop invariant i >= from;\nloop invariant i <= k;\nloop invariant j == 0;\nloop invariant k >= 0;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant i + 1 == i + 1;\nloop invariant j + 1 == j + 1;\nloop invariant i < k;\nloop invariant i == k;\nloop invariant j == k - from;\nloop invariant k >= 0;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= k;\nloop invariant 0 <= j <= k;\nloop invariant 0 <= k <= 100;\nloop invariant from <= i <= k;\nloop invariant from <= j <= k;\nloop invariant from <= k <= 100;\nloop invariant k >= 0;\nloop invariant j <= k;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant k >= 1;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= k;\nloop invariant j >= 0;\nloop invariant (i >= from) ==> (j >= 0);\nloop invariant (i < k) ==> (j >= 0);\nloop invariant (i >= from) ==> (j <= k - from);\nloop invariant (i < k) ==> (j <= k - from);\nloop invariant (i >= from) ==> (j >= i - from);\nloop invariant (i < k) ==> (j >= i - from);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= k;\nloop invariant 0 <= j <= k;\nloop invariant i <= k;\nloop invariant j <= i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= k;\nloop invariant 0 <= j <= i;\nloop invariant i + j <= k;\n*/\n```",
            "```\n/*@\nloop invariant ( from <= i <= k );\nloop invariant ( j = i - from );\nloop invariant ( 0 <= j <= 100 );\nloop invariant ( k <= 100 );\nloop invariant ( 0 <= i <= 100 );\nloop invariant ( 0 <= from <= k );\nloop invariant ( i < k ==> j <= 100 );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= k;\nloop invariant j == i - from;\nloop invariant 0 <= j <= k - from;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= k;\nloop invariant 0 <= j <= (k - i);\nloop invariant (from + j) == i;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\nloop invariant (from + j) <= k;\nloop invariant (from + j) >= 0;\nloop invariant (from + j) <= 100;\nloop invariant (from + j) >= from;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main () {\nint i, j;\nint from;\nint to;\nint k;\n\nif (!(k >= 0)) \n\nreturn;\n\nif (!(k <= 100)) \n\nreturn;\n\nif (!(from >= 0)) \n\nreturn;\n\nif (!(from <= k)) \n\nreturn;\n\ni = from;\nj = 0;\n\n/*@\n\n\nloop invariant i3: (from + j) == i;\nloop invariant i4: (from + j) <= k;\nloop invariant i5: (from + j) >= 0;\n\nloop invariant i7: (from + j) >= from;\n*/\nwhile (i < k) {\ni++;\nj++;\n}\n\n{;\n//@ assert(j <= 100);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant k >= i >= from;\nloop invariant j >= i - from;\nloop invariant j <= j + 1;\nloop invariant i <= k;\nloop invariant j <= k - from;\nloop invariant k <= 100;\nloop invariant k >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant from >= 0;\nloop invariant from <= 100;\nloop invariant k <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main () {\nint i, j;\nint from;\nint to;\nint k;\n\nif (!(k >= 0)) \n\nreturn;\n\nif (!(k <= 100)) \n\nreturn;\n\nif (!(from >= 0)) \n\nreturn;\n\nif (!(from <= k)) \n\nreturn;\n\ni = from;\nj = 0;\n\n/*@\nloop invariant i1: k >= i >= from;\nloop invariant i2: j >= i - from;\nloop invariant i3: j <= j + 1;\nloop invariant i4: i <= k;\n\nloop invariant i6: k <= 100;\nloop invariant i7: k >= 0;\nloop invariant i8: from <= k;\nloop invariant i9: from >= 0;\nloop invariant i10: from <= 100;\n*/\nwhile (i < k) {\ni++;\nj++;\n}\n\n{;\n//@ assert(j <= 100);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= k;\nloop invariant 0 <= j <= k - from;\nloop invariant i == from + j;\nloop invariant j <= k - from ==> i == from + j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main () {\nint i, j;\nint from;\nint to;\nint k;\n\nif (!(k >= 0)) \n\nreturn;\n\nif (!(k <= 100)) \n\nreturn;\n\nif (!(from >= 0)) \n\nreturn;\n\nif (!(from <= k)) \n\nreturn;\n\ni = from;\nj = 0;\n\n/*@\nloop invariant i1: 0 <= i <= k;\nloop invariant i2: 0 <= j <= k - from;\nloop invariant i3: i == from + j;\nloop invariant i4: j <= k - from ==> i == from + j;\n*/\nwhile (i < k) {\ni++;\nj++;\n}\n\n{;\n//@ assert(j <= 100);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= k;\nloop invariant 0 <= j <= k;\nloop invariant j <= i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main () {\nint i, j;\nint from;\nint to;\nint k;\n\nif (!(k >= 0)) \n\nreturn;\n\nif (!(k <= 100)) \n\nreturn;\n\nif (!(from >= 0)) \n\nreturn;\n\nif (!(from <= k)) \n\nreturn;\n\ni = from;\nj = 0;\n\n/*@\nloop invariant i1: 0 <= i <= k;\nloop invariant i2: 0 <= j <= k;\nloop invariant i3: j <= i;\n*/\nwhile (i < k) {\ni++;\nj++;\n}\n\n{;\n//@ assert(j <= 100);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main () {\nint i, j;\nint from;\nint to;\nint k;\n\nif (!(k >= 0)) \n\nreturn;\n\nif (!(k <= 100)) \n\nreturn;\n\nif (!(from >= 0)) \n\nreturn;\n\nif (!(from <= k)) \n\nreturn;\n\ni = from;\nj = 0;\n\n/*@\n\n*/\nwhile (i < k) {\ni++;\nj++;\n}\n\n{;\n//@ assert(j <= 100);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant i == from;\nloop invariant j == 0;\nloop invariant from <= i < k;\nloop invariant 0 <= j <= i - from;\nloop invariant i == k;\nloop invariant j <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main () {\nint i, j;\nint from;\nint to;\nint k;\n\nif (!(k >= 0)) \n\nreturn;\n\nif (!(k <= 100)) \n\nreturn;\n\nif (!(from >= 0)) \n\nreturn;\n\nif (!(from <= k)) \n\nreturn;\n\ni = from;\nj = 0;\n\n/*@\n\n\n\nloop invariant i4: 0 <= j <= i - from;\n\n\n*/\nwhile (i < k) {\ni++;\nj++;\n}\n\n{;\n//@ assert(j <= 100);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= k;\nloop invariant j = i - from;\nloop invariant i >= from;\nloop invariant i <= k;\nloop invariant j >= 0;\nloop invariant j <= k - from;\nloop invariant j <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main () {\nint i, j;\nint from;\nint to;\nint k;\n\nif (!(k >= 0)) \n\nreturn;\n\nif (!(k <= 100)) \n\nreturn;\n\nif (!(from >= 0)) \n\nreturn;\n\nif (!(from <= k)) \n\nreturn;\n\ni = from;\nj = 0;\n\n/*@\nloop invariant i1: 0 <= i <= k;\n\nloop invariant i3: i >= from;\nloop invariant i4: i <= k;\nloop invariant i5: j >= 0;\n\n\n*/\nwhile (i < k) {\ni++;\nj++;\n}\n\n{;\n//@ assert(j <= 100);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= k;\nloop invariant (k - i) <= 100;\nloop invariant 0 <= j <= i;\nloop invariant j <= k;\nloop invariant j <= 100;\nloop invariant k <= 100;\nloop invariant i <= k;\nloop invariant i <= 100;\nloop invariant (k - i) <= 100;\nloop invariant k <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main () {\nint i, j;\nint from;\nint to;\nint k;\n\nif (!(k >= 0)) \n\nreturn;\n\nif (!(k <= 100)) \n\nreturn;\n\nif (!(from >= 0)) \n\nreturn;\n\nif (!(from <= k)) \n\nreturn;\n\ni = from;\nj = 0;\n\n/*@\nloop invariant i1: 0 <= i <= k;\nloop invariant i2: (k - i) <= 100;\nloop invariant i3: 0 <= j <= i;\nloop invariant i4: j <= k;\nloop invariant i5: j <= 100;\nloop invariant i6: k <= 100;\nloop invariant i7: i <= k;\nloop invariant i8: i <= 100;\n*/\nwhile (i < k) {\ni++;\nj++;\n}\n\n{;\n//@ assert(j <= 100);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant i >= from;\nloop invariant i <= k;\nloop invariant j == 0;\nloop invariant k >= 0;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\nloop invariant i + 1 == i + 1;\nloop invariant j + 1 == j + 1;\nloop invariant i < k;\nloop invariant i == k;\nloop invariant j == k - from;\nloop invariant k >= 0;\nloop invariant k <= 100;\nloop invariant from >= 0;\nloop invariant from <= k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main () {\nint i, j;\nint from;\nint to;\nint k;\n\nif (!(k >= 0)) \n\nreturn;\n\nif (!(k <= 100)) \n\nreturn;\n\nif (!(from >= 0)) \n\nreturn;\n\nif (!(from <= k)) \n\nreturn;\n\ni = from;\nj = 0;\n\n/*@\nloop invariant i1: i >= from;\nloop invariant i2: i <= k;\n\nloop invariant i4: k >= 0;\nloop invariant i5: k <= 100;\nloop invariant i6: from >= 0;\nloop invariant i7: from <= k;\nloop invariant i8: i + 1 == i + 1;\nloop invariant i9: j + 1 == j + 1;\n\n\n\n*/\nwhile (i < k) {\ni++;\nj++;\n}\n\n{;\n//@ assert(j <= 100);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= k;\nloop invariant 0 <= j <= k;\nloop invariant 0 <= k <= 100;\nloop invariant from <= i <= k;\nloop invariant from <= j <= k;\nloop invariant from <= k <= 100;\nloop invariant k >= 0;\nloop invariant j <= k;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant k >= 1;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main () {\nint i, j;\nint from;\nint to;\nint k;\n\nif (!(k >= 0)) \n\nreturn;\n\nif (!(k <= 100)) \n\nreturn;\n\nif (!(from >= 0)) \n\nreturn;\n\nif (!(from <= k)) \n\nreturn;\n\ni = from;\nj = 0;\n\n/*@\nloop invariant i1: 0 <= i <= k;\n\nloop invariant i3: 0 <= k <= 100;\nloop invariant i4: from <= i <= k;\n\nloop invariant i6: from <= k <= 100;\nloop invariant i7: k >= 0;\n\n\n\n\nloop invariant i12: i <= k;\n*/\nwhile (i < k) {\ni++;\nj++;\n}\n\n{;\n//@ assert(j <= 100);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= k;\nloop invariant j >= 0;\nloop invariant (i >= from) ==> (j >= 0);\nloop invariant (i < k) ==> (j >= 0);\nloop invariant (i >= from) ==> (j <= k - from);\nloop invariant (i < k) ==> (j <= k - from);\nloop invariant (i >= from) ==> (j >= i - from);\nloop invariant (i < k) ==> (j >= i - from);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main () {\nint i, j;\nint from;\nint to;\nint k;\n\nif (!(k >= 0)) \n\nreturn;\n\nif (!(k <= 100)) \n\nreturn;\n\nif (!(from >= 0)) \n\nreturn;\n\nif (!(from <= k)) \n\nreturn;\n\ni = from;\nj = 0;\n\n/*@\nloop invariant i1: 0 <= i <= k;\nloop invariant i2: j >= 0;\nloop invariant i3: (i >= from) ==> (j >= 0);\nloop invariant i4: (i < k) ==> (j >= 0);\n\n\nloop invariant i7: (i >= from) ==> (j >= i - from);\nloop invariant i8: (i < k) ==> (j >= i - from);\n*/\nwhile (i < k) {\ni++;\nj++;\n}\n\n{;\n//@ assert(j <= 100);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= k;\nloop invariant 0 <= j <= k;\nloop invariant i <= k;\nloop invariant j <= i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main () {\nint i, j;\nint from;\nint to;\nint k;\n\nif (!(k >= 0)) \n\nreturn;\n\nif (!(k <= 100)) \n\nreturn;\n\nif (!(from >= 0)) \n\nreturn;\n\nif (!(from <= k)) \n\nreturn;\n\ni = from;\nj = 0;\n\n/*@\nloop invariant i1: 0 <= i <= k;\nloop invariant i2: 0 <= j <= k;\nloop invariant i3: i <= k;\nloop invariant i4: j <= i;\n*/\nwhile (i < k) {\ni++;\nj++;\n}\n\n{;\n//@ assert(j <= 100);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= k;\nloop invariant 0 <= j <= i;\nloop invariant i + j <= k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main () {\nint i, j;\nint from;\nint to;\nint k;\n\nif (!(k >= 0)) \n\nreturn;\n\nif (!(k <= 100)) \n\nreturn;\n\nif (!(from >= 0)) \n\nreturn;\n\nif (!(from <= k)) \n\nreturn;\n\ni = from;\nj = 0;\n\n/*@\nloop invariant i1: 0 <= i <= k;\nloop invariant i2: 0 <= j <= i;\n\n*/\nwhile (i < k) {\ni++;\nj++;\n}\n\n{;\n//@ assert(j <= 100);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant ( from <= i <= k );\nloop invariant ( j = i - from );\nloop invariant ( 0 <= j <= 100 );\nloop invariant ( k <= 100 );\nloop invariant ( 0 <= i <= 100 );\nloop invariant ( 0 <= from <= k );\nloop invariant ( i < k ==> j <= 100 );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main () {\nint i, j;\nint from;\nint to;\nint k;\n\nif (!(k >= 0)) \n\nreturn;\n\nif (!(k <= 100)) \n\nreturn;\n\nif (!(from >= 0)) \n\nreturn;\n\nif (!(from <= k)) \n\nreturn;\n\ni = from;\nj = 0;\n\n/*@\nloop invariant i1: ( from <= i <= k );\n\n\nloop invariant i4: ( k <= 100 );\nloop invariant i5: ( 0 <= i <= 100 );\nloop invariant i6: ( 0 <= from <= k );\n\n*/\nwhile (i < k) {\ni++;\nj++;\n}\n\n{;\n//@ assert(j <= 100);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= k;\nloop invariant j == i - from;\nloop invariant 0 <= j <= k - from;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main () {\nint i, j;\nint from;\nint to;\nint k;\n\nif (!(k >= 0)) \n\nreturn;\n\nif (!(k <= 100)) \n\nreturn;\n\nif (!(from >= 0)) \n\nreturn;\n\nif (!(from <= k)) \n\nreturn;\n\ni = from;\nj = 0;\n\n/*@\nloop invariant i1: 0 <= i <= k;\nloop invariant i2: j == i - from;\nloop invariant i3: 0 <= j <= k - from;\n*/\nwhile (i < k) {\ni++;\nj++;\n}\n\n{;\n//@ assert(j <= 100);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 62: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main () {\nint i, j;\nint from;\nint to;\nint k;\n\nif (!(k >= 0)) \n\nreturn;\n\nif (!(k <= 100)) \n\nreturn;\n\nif (!(from >= 0)) \n\nreturn;\n\nif (!(from <= k)) \n\nreturn;\n\ni = from;\nj = 0;\n\n/*@\nloop invariant i1: 1 <= i <= k;\nloop invariant i2: 0 <= j <= (k - i);\nloop invariant i3: (from + j) == i;\nloop invariant i4: (from + j) <= k;\nloop invariant i5: (from + j) >= 0;\nloop invariant i6: (from + j) <= 100;\nloop invariant i7: (from + j) >= from;\nloop invariant i8: k >= i >= from;\nloop invariant i9: j >= i - from;\nloop invariant i10: j <= j + 1;\nloop invariant i11: i <= k;\nloop invariant i12: j <= k - from;\nloop invariant i13: k <= 100;\nloop invariant i14: k >= 0;\nloop invariant i15: from <= k;\nloop invariant i16: from >= 0;\nloop invariant i17: from <= 100;\nloop invariant i18: 0 <= i <= k;\nloop invariant i19: 0 <= j <= k - from;\nloop invariant i20: i == from + j;\nloop invariant i21: j <= k - from ==> i == from + j;\nloop invariant i22: 0 <= j <= k;\nloop invariant i23: j <= i;\nloop invariant i24: i == from;\nloop invariant i25: j == 0;\nloop invariant i26: from <= i < k;\nloop invariant i27: 0 <= j <= i - from;\nloop invariant i28: i == k;\nloop invariant i29: j <= 100;\nloop invariant i30: j = i - from;\nloop invariant i31: i >= from;\nloop invariant i32: j >= 0;\nloop invariant i33: (k - i) <= 100;\nloop invariant i34: 0 <= j <= i;\nloop invariant i35: j <= k;\nloop invariant i36: i <= 100;\nloop invariant i37: i + 1 == i + 1;\nloop invariant i38: j + 1 == j + 1;\nloop invariant i39: i < k;\nloop invariant i40: j == k - from;\nloop invariant i41: 0 <= k <= 100;\nloop invariant i42: from <= i <= k;\nloop invariant i43: from <= j <= k;\nloop invariant i44: from <= k <= 100;\nloop invariant i45: i >= 1;\nloop invariant i46: j >= 1;\nloop invariant i47: k >= 1;\nloop invariant i48: (i >= from) ==> (j >= 0);\nloop invariant i49: (i < k) ==> (j >= 0);\nloop invariant i50: (i >= from) ==> (j <= k - from);\nloop invariant i51: (i < k) ==> (j <= k - from);\nloop invariant i52: (i >= from) ==> (j >= i - from);\nloop invariant i53: (i < k) ==> (j >= i - from);\nloop invariant i54: i + j <= k;\nloop invariant i55: ( from <= i <= k );\nloop invariant i56: ( j = i - from );\nloop invariant i57: ( 0 <= j <= 100 );\nloop invariant i58: ( k <= 100 );\nloop invariant i59: ( 0 <= i <= 100 );\nloop invariant i60: ( 0 <= from <= k );\nloop invariant i61: ( i < k ==> j <= 100 );\nloop invariant i62: j == i - from;\n*/\nwhile (i < k) {\ni++;\nj++;\n}\n\n{;\n//@ assert(j <= 100);\n}\n\n}",
        "combined_annotation_num_solver_calls": 10,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main () {\nint i, j;\nint from;\nint to;\nint k;\n\nif (!(k >= 0)) \n\nreturn;\n\nif (!(k <= 100)) \n\nreturn;\n\nif (!(from >= 0)) \n\nreturn;\n\nif (!(from <= k)) \n\nreturn;\n\ni = from;\nj = 0;\n\n/*@\n\n\nloop invariant i3: (from + j) == i;\nloop invariant i4: (from + j) <= k;\nloop invariant i5: (from + j) >= 0;\nloop invariant i6: (from + j) <= 100;\nloop invariant i7: (from + j) >= from;\nloop invariant i8: k >= i >= from;\nloop invariant i9: j >= i - from;\nloop invariant i10: j <= j + 1;\nloop invariant i11: i <= k;\nloop invariant i12: j <= k - from;\nloop invariant i13: k <= 100;\nloop invariant i14: k >= 0;\nloop invariant i15: from <= k;\nloop invariant i16: from >= 0;\nloop invariant i17: from <= 100;\nloop invariant i18: 0 <= i <= k;\nloop invariant i19: 0 <= j <= k - from;\nloop invariant i20: i == from + j;\nloop invariant i21: j <= k - from ==> i == from + j;\nloop invariant i22: 0 <= j <= k;\nloop invariant i23: j <= i;\n\n\n\nloop invariant i27: 0 <= j <= i - from;\n\nloop invariant i29: j <= 100;\n\nloop invariant i31: i >= from;\nloop invariant i32: j >= 0;\nloop invariant i33: (k - i) <= 100;\nloop invariant i34: 0 <= j <= i;\nloop invariant i35: j <= k;\nloop invariant i36: i <= 100;\nloop invariant i37: i + 1 == i + 1;\nloop invariant i38: j + 1 == j + 1;\n\n\nloop invariant i41: 0 <= k <= 100;\nloop invariant i42: from <= i <= k;\n\nloop invariant i44: from <= k <= 100;\n\n\n\nloop invariant i48: (i >= from) ==> (j >= 0);\nloop invariant i49: (i < k) ==> (j >= 0);\nloop invariant i50: (i >= from) ==> (j <= k - from);\nloop invariant i51: (i < k) ==> (j <= k - from);\nloop invariant i52: (i >= from) ==> (j >= i - from);\nloop invariant i53: (i < k) ==> (j >= i - from);\n\nloop invariant i55: ( from <= i <= k );\n\nloop invariant i57: ( 0 <= j <= 100 );\nloop invariant i58: ( k <= 100 );\nloop invariant i59: ( 0 <= i <= 100 );\nloop invariant i60: ( 0 <= from <= k );\nloop invariant i61: ( i < k ==> j <= 100 );\nloop invariant i62: j == i - from;\n*/\nwhile (i < k) {\ni++;\nj++;\n}\n\n{;\n//@ assert(j <= 100);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/popl.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/07.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/39.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv_simp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/xy10.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/const_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe3.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe4.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_unsafe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbr.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbrprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bk-nat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bkley.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/efm.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/ex1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnatprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifo.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/seesaw.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/substring1.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/05.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/37.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/pldi082_unbounded.c"
        ],
        "skipped": [],
        "total": 156,
        "success_count": 128,
        "failure_count": 28,
        "success_rate": 0.8205128205128205
    }
}