{
    "logs": {
        "file": "../dataset/loop_invariants/accelerating_invariant_generation/invgen/up-nested.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint NONDET;\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n\n  assume ( j<=n );\n  while ( j <= n ) {\n    \n    assume( i >= 0);\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant j <= n;\nloop invariant i >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i = 0;\nloop invariant k = 0;\nloop invariant j <= n ==> i >= 0;\nloop invariant j <= n ==> k = 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant (k == 0);\nloop invariant (i == j);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant i == j;\nloop invariant k == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n; loop invariant i >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= j <= n;\nloop invariant 0 <= i <= j;\nloop invariant k = 0;\nloop invariant i <= n;\nloop invariant n >= 0;\nloop invariant j >= 0;\nloop invariant i >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i >= 0;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant i < j;\nloop invariant i >= 0;\nloop invariant i < j;\nloop invariant i >= 0;\nloop invariant i < j;\nloop invariant i >= 0;\nloop invariant i < j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant j <= i;\nloop invariant k == 0;\n*/\n```",
            "```\n/*@\nloop invariant k <= n;\nloop invariant i == j - n;\nloop invariant k == j;\nloop invariant j == k + 1;\nloop invariant i == (k + 1) - n;\nloop invariant i == (k + 1) - (k + 1);\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == (k + 1) - (k + 1);\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i == j - n;\nloop invariant k == 0;\nloop invariant i == j - n;\nloop invariant i == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= i <= n;\nloop invariant j >= i;\nloop invariant j == i + n;\nloop invariant j == n;\nloop invariant i == 0;\nloop invariant i == n;\nloop invariant i == j;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == 0;\nloop invariant i == j;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant (j > n) ==> (i == n);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant j <= n;\nloop invariant i >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint NONDET;\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n\n  assume ( j<=n );\n  /*@\n\n\nloop invariant i3: i >= 0;\n*/\nwhile ( j <= n ) {\n    \n    assume( i >= 0);\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant i == 0;\nloop invariant j >= 0;\nloop invariant j <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint NONDET;\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n\n  assume ( j<=n );\n  /*@\n\nloop invariant i2: i == 0;\nloop invariant i3: k == 0;\nloop invariant i4: i >= 0;\n\n\n\n*/\nwhile ( j <= n ) {\n    \n    assume( i >= 0);\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 22,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i = 0;\nloop invariant k = 0;\nloop invariant j <= n ==> i >= 0;\nloop invariant j <= n ==> k = 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0;\nloop invariant j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint NONDET;\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n\n  assume ( j<=n );\n  /*@\n\n\n\nloop invariant i4: j <= n ==> i >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ( j <= n ) {\n    \n    assume( i >= 0);\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i >= 0;\nloop invariant i <= j;\nloop invariant (k == 0);\nloop invariant (i == j);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint NONDET;\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n\n  assume ( j<=n );\n  /*@\n\nloop invariant i2: i >= 0;\n\nloop invariant i4: (k == 0);\n\n*/\nwhile ( j <= n ) {\n    \n    assume( i >= 0);\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant i == j;\nloop invariant k == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint NONDET;\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n\n  assume ( j<=n );\n  /*@\n\n\n\nloop invariant i4: k == 0;\n*/\nwhile ( j <= n ) {\n    \n    assume( i >= 0);\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n; loop invariant i >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint NONDET;\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n\n  assume ( j<=n );\n  /*@\n\n*/\nwhile ( j <= n ) {\n    \n    assume( i >= 0);\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 1 <= j <= n;\nloop invariant 0 <= i <= j;\nloop invariant k = 0;\nloop invariant i <= n;\nloop invariant n >= 0;\nloop invariant j >= 0;\nloop invariant i >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint NONDET;\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n\n  assume ( j<=n );\n  /*@\n\n\n\n\n\n\nloop invariant i7: i >= 0;\n*/\nwhile ( j <= n ) {\n    \n    assume( i >= 0);\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint NONDET;\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n\n  assume ( j<=n );\n  /*@\n\n*/\nwhile ( j <= n ) {\n    \n    assume( i >= 0);\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i >= 0;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant i < j;\nloop invariant i >= 0;\nloop invariant i < j;\nloop invariant i >= 0;\nloop invariant i < j;\nloop invariant i >= 0;\nloop invariant i < j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint NONDET;\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n\n  assume ( j<=n );\n  /*@\n\nloop invariant i2: i >= 0;\nloop invariant i3: k >= 0;\n\n\n*/\nwhile ( j <= n ) {\n    \n    assume( i >= 0);\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint NONDET;\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n\n  assume ( j<=n );\n  /*@\n\nloop invariant i2: i >= 0;\n*/\nwhile ( j <= n ) {\n    \n    assume( i >= 0);\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant j <= i;\nloop invariant k == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint NONDET;\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n\n  assume ( j<=n );\n  /*@\n\n\n\nloop invariant i4: k == 0;\n*/\nwhile ( j <= n ) {\n    \n    assume( i >= 0);\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant k <= n;\nloop invariant i == j - n;\nloop invariant k == j;\nloop invariant j == k + 1;\nloop invariant i == (k + 1) - n;\nloop invariant i == (k + 1) - (k + 1);\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == (k + 1) - (k + 1);\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i == 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\nloop invariant i >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint NONDET;\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n\n  assume ( j<=n );\n  /*@\n\n\n\n\n\nloop invariant i6: i == (k + 1) - (k + 1);\nloop invariant i7: i == 0;\nloop invariant i8: i >= 0;\n*/\nwhile ( j <= n ) {\n    \n    assume( i >= 0);\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i == j - n;\nloop invariant k == 0;\nloop invariant i == j - n;\nloop invariant i == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint NONDET;\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n\n  assume ( j<=n );\n  /*@\n\n\nloop invariant i3: k == 0;\nloop invariant i4: i == 0;\n*/\nwhile ( j <= n ) {\n    \n    assume( i >= 0);\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= i <= n;\nloop invariant j >= i;\nloop invariant j == i + n;\nloop invariant j == n;\nloop invariant i == 0;\nloop invariant i == n;\nloop invariant i == j;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == 0;\nloop invariant i == j;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\nloop invariant i == n - j;\nloop invariant i == n;\nloop invariant i == n;\nloop invariant i == n - j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint NONDET;\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n\n  assume ( j<=n );\n  /*@\n\n\n\n\n\nloop invariant i6: i == 0;\n\n\n\n*/\nwhile ( j <= n ) {\n    \n    assume( i >= 0);\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i <= j;\nloop invariant k == 0;\nloop invariant (j > n) ==> (i == n);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (k == 0);\nloop invariant (j <= n) ==> (i >= 0);\nloop invariant (j <= n) ==> (i <= j);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint NONDET;\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n\n  assume ( j<=n );\n  /*@\n\n\nloop invariant i3: k == 0;\n\nloop invariant i5: (j <= n) ==> (i >= 0);\n\nloop invariant i7: (j <= n) ==> (k == 0);\n*/\nwhile ( j <= n ) {\n    \n    assume( i >= 0);\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 25: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint NONDET;\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n\n  assume ( j<=n );\n  /*@\nloop invariant i1: 0 <= i <= j;\nloop invariant i2: j <= n;\nloop invariant i3: i >= 0;\nloop invariant i4: 0 <= j <= n;\nloop invariant i5: i == 0;\nloop invariant i6: k == 0;\nloop invariant i7: j >= 0;\nloop invariant i8: i <= j;\nloop invariant i9: i = 0;\nloop invariant i10: k = 0;\nloop invariant i11: j <= n ==> i >= 0;\nloop invariant i12: j <= n ==> k = 0;\nloop invariant i13: j <= n ==> i >= 0 ==> k = 0;\nloop invariant i14: j <= n ==> i >= 0 ==> k = 0 ==> j <= n;\nloop invariant i15: j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0;\nloop invariant i16: j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0;\nloop invariant i17: j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n;\nloop invariant i18: j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0;\nloop invariant i19: j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0;\nloop invariant i20: j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n;\nloop invariant i21: j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0;\nloop invariant i22: j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0;\nloop invariant i23: j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n;\nloop invariant i24: j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0;\nloop invariant i25: j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0;\nloop invariant i26: j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n;\nloop invariant i27: j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0;\nloop invariant i28: j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0;\nloop invariant i29: j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n ==> i >= 0 ==> k = 0 ==> j <= n;\nloop invariant i30: (k == 0);\nloop invariant i31: (i == j);\nloop invariant i32: 0 <= i <= n;\nloop invariant i33: i == j;\nloop invariant i34: 0 <= j <= n; loop invariant i >= 0;\nloop invariant i35: 1 <= j <= n;\nloop invariant i36: i <= n;\nloop invariant i37: n >= 0;\nloop invariant i38: 0 <= j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n; loop invariant i >= 0; loop invariant j > i; loop invariant j <= n;\nloop invariant i39: k >= 0;\nloop invariant i40: i < j;\nloop invariant i41: 1 <= i <= n;\nloop invariant i42: j <= i;\nloop invariant i43: k <= n;\nloop invariant i44: i == j - n;\nloop invariant i45: k == j;\nloop invariant i46: j == k + 1;\nloop invariant i47: i == (k + 1) - n;\nloop invariant i48: i == (k + 1) - (k + 1);\nloop invariant i49: j >= i;\nloop invariant i50: j == i + n;\nloop invariant i51: j == n;\nloop invariant i52: i == n;\nloop invariant i53: i == n - j;\nloop invariant i54: (j > n) ==> (i == n);\nloop invariant i55: (j <= n) ==> (i >= 0);\nloop invariant i56: (j <= n) ==> (i <= j);\nloop invariant i57: (j <= n) ==> (k == 0);\n*/\nwhile ( j <= n ) {\n    \n    assume( i >= 0);\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n}",
        "combined_annotation_num_solver_calls": 31,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint NONDET;\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n\n  assume ( j<=n );\n  /*@\n\n\nloop invariant i3: i >= 0;\n\nloop invariant i5: i == 0;\nloop invariant i6: k == 0;\n\n\n\n\nloop invariant i11: j <= n ==> i >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i30: (k == 0);\n\n\n\n\n\n\n\n\nloop invariant i39: k >= 0;\n\n\n\n\n\n\n\n\nloop invariant i48: i == (k + 1) - (k + 1);\n\n\n\n\n\n\nloop invariant i55: (j <= n) ==> (i >= 0);\n\nloop invariant i57: (j <= n) ==> (k == 0);\n*/\nwhile ( j <= n ) {\n    \n    assume( i >= 0);\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/popl.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/07.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/39.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv_simp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/xy10.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/const_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe3.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe4.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_unsafe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbr.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbrprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bk-nat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bkley.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/efm.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/ex1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnatprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifo.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/seesaw.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/ken-imp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/rajamani_1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/simple.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/simple_if.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/up-nested.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/05.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/37.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/pldi082_unbounded.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-close-angle.c"
        ],
        "skipped": [],
        "total": 172,
        "success_count": 142,
        "failure_count": 30,
        "success_rate": 0.8255813953488372
    }
}