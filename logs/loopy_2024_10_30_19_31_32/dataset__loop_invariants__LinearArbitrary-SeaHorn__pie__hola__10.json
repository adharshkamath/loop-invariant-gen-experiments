{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nvoid main() {\n\n\tint w = 1;\n\tint z = 0;\n\tint x= 0;\n\tint y=0;\n\n         while(unknown2()){\n\t    if(w) {\n\t\tx++; \n\t\tw=!w;\n\t    };\n\t    if(!z) {\n\t\ty++; \n\t\tz=!z;\n\t    };\n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x; loop invariant 0 <= y; loop invariant x <= y; loop invariant x+y <= 2 * (x+y); loop invariant x+y <= 2 * (x+y); loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y;\n*/\n```",
            "```\n/*@\nloop invariant z <= y <= x <= (x + (y - 1) * y / 2);\nloop invariant w ==> x >= y;\nloop invariant !w ==> x == y;\nloop invariant !z ==> y > 0;\nloop invariant z ==> y == 0;\nloop invariant !w ==> z ==> x == y + 1;\nloop invariant !w ==> !z ==> x == y;\nloop invariant w ==> z ==> x == y;\nloop invariant w ==> !z ==> x == y + 1;\n*/\n```",
            "```\n/*@\nloop invariant x == y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= z <= 1;\nloop invariant z == 1 ==> y < x;\nloop invariant z == 1 ==> x - y == 2 * y - 1;\nloop invariant z == 1 ==> x - y == 2 * y - 1;\nloop invariant x >= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= w <= 1;\nloop invariant 0 <= z <= 1;\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant y <= x;\nloop invariant x <= 2 * y;\nloop invariant w == (1 - z);\nloop invariant z == (1 - w);\n*/\n```",
            "```\n/*@\nloop invariant 0 < w <= 1; loop invariant 0 < x; loop invariant 0 < y; loop invariant x <= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant (if w then x > y else x <= y);\nloop invariant (if z then x > y else x <= y);\nloop invariant (if !w then x <= y else x > y);\nloop invariant (if !z then x <= y else x > y);\nloop invariant (if w then x >= y else x < y);\nloop invariant (if z then x >= y else x < y);\nloop invariant (if !w then x < y else x >= y);\nloop invariant (if !z then x < y else x >= y);\nloop invariant (if w then x > y else x <= y);\nloop invariant (if z then x > y else x <= y);\nloop invariant (if !w then x <= y else x > y);\nloop invariant (if !z then x <= y else x > y);\nloop invariant (if w then x >= y else x < y);\nloop invariant (if z then x >= y else x < y);\nloop invariant (if !w then x < y else x >= y);\nloop invariant (if !z then x < y else x >= y);\nloop invariant (if w then x > y else x <= y);\nloop invariant (if z then x > y else x <= y);\nloop invariant (if !w then x <= y else x > y);\nloop invariant (if !z then x <= y else x > y);\nloop invariant (if w then x >= y else x < y);\nloop invariant (if z then x >= y else x < y);\nloop invariant (if !w then x < y else x >= y);\nloop invariant (if !z then x < y else x >= y);\nloop invariant (if w then x > y else x <= y);\nloop invariant (if z then x > y else x <= y);\nloop invariant (if !w then x <= y else x > y);\nloop invariant (if !z then x <= y else x > y);\nloop invariant (if w then x >= y else x < y);\nloop invariant (if z then x >= y else x < y);\nloop invariant (if !w then x < y else x >= y);\nloop invariant (if !z then x < y else x >= y);\nloop invariant (if w then x > y else x <= y);\nloop invariant (if z then x > y else x <= y);\nloop invariant (if !w then x <= y else x > y);\nloop invariant (if !z then x <= y else x > y);\nloop invariant (if w then x >= y else x < y);\nloop invariant (if z then x >= y else x < y);\nloop invariant (if !w then x < y else x >= y);\nloop invariant (if !z then x < y else x >= y);\nloop invariant (if w then x > y else x <= y);\nloop invariant (if z then x > y else x <= y);\nloop invariant (if !w then x <= y else x > y);\nloop invariant (if !z then x <= y else x > y);\nloop invariant (if w then x >= y else x < y);\nloop invariant (if z then x >= y else x < y);\nloop invariant (if !w then x < y else x >= y);\nloop invariant (if !z then x < y else x >= y);\nloop invariant (if w then x > y else x <= y);\nloop invariant (if z then x > y else x <= y);\nloop invariant (if !w then x <= y else x > y);\nloop invariant (if !z then x <= y else x > y);\nloop invariant (if w then x >= y else x < y);\nloop invariant (if z then x >= y else x < y);\nloop invariant (if !w then x < y else x >= y);\nloop invariant (if !z then x < y else x >= y);\nloop invariant (if w then x > y else x <= y);\nloop invariant (if z then x > y else x <= y);\nloop invariant (if !w then x <= y else x > y);\nloop invariant (if !z then x <= y else x > y);\nloop invariant (if w then x >= y else x < y);\nloop invariant (if z then x >= y else x < y);\nloop invariant (if !w then x < y else x >= y);\nloop invariant (if !z then x < y else x >= y);\nloop invariant (if w then x > y else x <= y);\nloop invariant (if z then x > y else x <= y);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= w <= 1;\nloop invariant 0 <= z <= 1;\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x == y ==> w == 0;\nloop invariant x == y ==> z == 1;\nloop invariant x != y ==> w == 1;\nloop invariant x != y ==> z == 0;\nloop invariant (x == y || x != y) ==> x == y;\nloop invariant (x == y || x != y) ==> w == 0;\nloop invariant (x == y || x != y) ==> z == 1;\nloop invariant (x == y || x != y) ==> x >= 0;\nloop invariant (x == y || x != y) ==> y >= 0;\nloop invariant (x == y || x != y) ==> x <= y;\nloop invariant (x == y || x != y) ==> w <= 1;\nloop invariant (x == y || x != y) ==> z <= 1;\nloop invariant (x == y || x != y) ==> w >= 0;\nloop invariant (x == y || x != y) ==> z >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant 0 <= y;\nloop invariant 1 <= w <= 2;\nloop invariant 0 <= z <= 1;\nloop invariant x <= y;\nloop invariant x == y ==> w == 1;\nloop invariant x == y ==> z == 0;\nloop invariant x == y ==> unknown2() == 0;\nloop invariant x == y ==> (x == y) ==> w == 1;\nloop invariant x == y ==> (x == y) ==> z == 0;\nloop invariant x == y ==> (x == y) ==> unknown2() == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> z == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> unknown2() == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> unknown2() == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> unknown2() == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> unknown2() == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> unknown2() == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> unknown2() == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant 0 <= y;\nloop invariant (w && !z) || (!w && z) || (!w && !z) || (w && z);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant x == y;\nloop invariant w == !z;\nloop invariant 0 <= w <= 1;\nloop invariant z == !w;\nloop invariant 0 <= z <= 1;\nloop invariant !w ==> x == 0;\nloop invariant w ==> x == y+1;\nloop invariant !z ==> y == 0;\nloop invariant z ==> y == x+1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= w <= 1;\nloop invariant 0 <= x <= 100000;\nloop invariant 0 <= y <= 100000;\nloop invariant x == y ==> w = 0;\nloop invariant x == y ==> z = 1;\nloop invariant x != y ==> w = 1;\nloop invariant x != y ==> z = 0;\nloop invariant x >= y ==> w = 0;\nloop invariant x >= y ==> z = 1;\nloop invariant x < y ==> w = 1;\nloop invariant x < y ==> z = 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x >= (0 + (y - 1) * y / 2);\nloop invariant w = !z;\nloop invariant z = !w;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x <= y;\nloop invariant w = !z;\nloop invariant z = !w;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= w <= 1;\nloop invariant 0 <= z <= 1;\nloop invariant 0 <= x <= unknown2();\nloop invariant 0 <= y <= unknown2();\nloop invariant x >= y;\nloop invariant x >= y - unknown2();\nloop invariant x >= y + unknown2();\nloop invariant x >= y - unknown2() * unknown2();\nloop invariant x >= y + unknown2() * unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2() * unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2() + unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2() + unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2() + unknown2() - unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2();\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x; loop invariant 0 <= y; loop invariant x <= y; loop invariant x+y <= 2 * (x+y); loop invariant x+y <= 2 * (x+y); loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nvoid main() {\n\n\tint w = 1;\n\tint z = 0;\n\tint x= 0;\n\tint y=0;\n\n         /*@\nloop invariant i1: 0 <= x; loop invariant 0 <= y; loop invariant x <= y; loop invariant x+y <= 2 * (x+y); loop invariant x+y <= 2 * (x+y); loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y;\n*/\nwhile(unknown2()){\n\t    if(w) {\n\t\tx++; \n\t\tw=!w;\n\t    };\n\t    if(!z) {\n\t\ty++; \n\t\tz=!z;\n\t    };\n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant z <= y <= x <= (x + (y - 1) * y / 2);\nloop invariant w ==> x >= y;\nloop invariant !w ==> x == y;\nloop invariant !z ==> y > 0;\nloop invariant z ==> y == 0;\nloop invariant !w ==> z ==> x == y + 1;\nloop invariant !w ==> !z ==> x == y;\nloop invariant w ==> z ==> x == y;\nloop invariant w ==> !z ==> x == y + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nvoid main() {\n\n\tint w = 1;\n\tint z = 0;\n\tint x= 0;\n\tint y=0;\n\n         /*@\n\nloop invariant i2: w ==> x >= y;\n\n\n\n\nloop invariant i7: !w ==> !z ==> x == y;\nloop invariant i8: w ==> z ==> x == y;\n\n*/\nwhile(unknown2()){\n\t    if(w) {\n\t\tx++; \n\t\tw=!w;\n\t    };\n\t    if(!z) {\n\t\ty++; \n\t\tz=!z;\n\t    };\n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant x == y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nvoid main() {\n\n\tint w = 1;\n\tint z = 0;\n\tint x= 0;\n\tint y=0;\n\n         /*@\n\n*/\nwhile(unknown2()){\n\t    if(w) {\n\t\tx++; \n\t\tw=!w;\n\t    };\n\t    if(!z) {\n\t\ty++; \n\t\tz=!z;\n\t    };\n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= z <= 1;\nloop invariant z == 1 ==> y < x;\nloop invariant z == 1 ==> x - y == 2 * y - 1;\nloop invariant z == 1 ==> x - y == 2 * y - 1;\nloop invariant x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nvoid main() {\n\n\tint w = 1;\n\tint z = 0;\n\tint x= 0;\n\tint y=0;\n\n         /*@\nloop invariant i1: 0 <= z <= 1;\n\n\n\n*/\nwhile(unknown2()){\n\t    if(w) {\n\t\tx++; \n\t\tw=!w;\n\t    };\n\t    if(!z) {\n\t\ty++; \n\t\tz=!z;\n\t    };\n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= w <= 1;\nloop invariant 0 <= z <= 1;\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant y <= x;\nloop invariant x <= 2 * y;\nloop invariant w == (1 - z);\nloop invariant z == (1 - w);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nvoid main() {\n\n\tint w = 1;\n\tint z = 0;\n\tint x= 0;\n\tint y=0;\n\n         /*@\nloop invariant i1: 0 <= w <= 1;\nloop invariant i2: 0 <= z <= 1;\nloop invariant i3: 0 <= x;\nloop invariant i4: 0 <= y;\nloop invariant i5: y <= x;\nloop invariant i6: x <= 2 * y;\nloop invariant i7: w == (1 - z);\nloop invariant i8: z == (1 - w);\n*/\nwhile(unknown2()){\n\t    if(w) {\n\t\tx++; \n\t\tw=!w;\n\t    };\n\t    if(!z) {\n\t\ty++; \n\t\tz=!z;\n\t    };\n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 < w <= 1; loop invariant 0 < x; loop invariant 0 < y; loop invariant x <= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nvoid main() {\n\n\tint w = 1;\n\tint z = 0;\n\tint x= 0;\n\tint y=0;\n\n         /*@\nloop invariant i1: 0 < w <= 1; loop invariant 0 < x; loop invariant 0 < y; loop invariant x <= y;\n*/\nwhile(unknown2()){\n\t    if(w) {\n\t\tx++; \n\t\tw=!w;\n\t    };\n\t    if(!z) {\n\t\ty++; \n\t\tz=!z;\n\t    };\n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 10,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant (if w then x > y else x <= y);\nloop invariant (if z then x > y else x <= y);\nloop invariant (if !w then x <= y else x > y);\nloop invariant (if !z then x <= y else x > y);\nloop invariant (if w then x >= y else x < y);\nloop invariant (if z then x >= y else x < y);\nloop invariant (if !w then x < y else x >= y);\nloop invariant (if !z then x < y else x >= y);\nloop invariant (if w then x > y else x <= y);\nloop invariant (if z then x > y else x <= y);\nloop invariant (if !w then x <= y else x > y);\nloop invariant (if !z then x <= y else x > y);\nloop invariant (if w then x >= y else x < y);\nloop invariant (if z then x >= y else x < y);\nloop invariant (if !w then x < y else x >= y);\nloop invariant (if !z then x < y else x >= y);\nloop invariant (if w then x > y else x <= y);\nloop invariant (if z then x > y else x <= y);\nloop invariant (if !w then x <= y else x > y);\nloop invariant (if !z then x <= y else x > y);\nloop invariant (if w then x >= y else x < y);\nloop invariant (if z then x >= y else x < y);\nloop invariant (if !w then x < y else x >= y);\nloop invariant (if !z then x < y else x >= y);\nloop invariant (if w then x > y else x <= y);\nloop invariant (if z then x > y else x <= y);\nloop invariant (if !w then x <= y else x > y);\nloop invariant (if !z then x <= y else x > y);\nloop invariant (if w then x >= y else x < y);\nloop invariant (if z then x >= y else x < y);\nloop invariant (if !w then x < y else x >= y);\nloop invariant (if !z then x < y else x >= y);\nloop invariant (if w then x > y else x <= y);\nloop invariant (if z then x > y else x <= y);\nloop invariant (if !w then x <= y else x > y);\nloop invariant (if !z then x <= y else x > y);\nloop invariant (if w then x >= y else x < y);\nloop invariant (if z then x >= y else x < y);\nloop invariant (if !w then x < y else x >= y);\nloop invariant (if !z then x < y else x >= y);\nloop invariant (if w then x > y else x <= y);\nloop invariant (if z then x > y else x <= y);\nloop invariant (if !w then x <= y else x > y);\nloop invariant (if !z then x <= y else x > y);\nloop invariant (if w then x >= y else x < y);\nloop invariant (if z then x >= y else x < y);\nloop invariant (if !w then x < y else x >= y);\nloop invariant (if !z then x < y else x >= y);\nloop invariant (if w then x > y else x <= y);\nloop invariant (if z then x > y else x <= y);\nloop invariant (if !w then x <= y else x > y);\nloop invariant (if !z then x <= y else x > y);\nloop invariant (if w then x >= y else x < y);\nloop invariant (if z then x >= y else x < y);\nloop invariant (if !w then x < y else x >= y);\nloop invariant (if !z then x < y else x >= y);\nloop invariant (if w then x > y else x <= y);\nloop invariant (if z then x > y else x <= y);\nloop invariant (if !w then x <= y else x > y);\nloop invariant (if !z then x <= y else x > y);\nloop invariant (if w then x >= y else x < y);\nloop invariant (if z then x >= y else x < y);\nloop invariant (if !w then x < y else x >= y);\nloop invariant (if !z then x < y else x >= y);\nloop invariant (if w then x > y else x <= y);\nloop invariant (if z then x > y else x <= y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nvoid main() {\n\n\tint w = 1;\n\tint z = 0;\n\tint x= 0;\n\tint y=0;\n\n         /*@\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(unknown2()){\n\t    if(w) {\n\t\tx++; \n\t\tw=!w;\n\t    };\n\t    if(!z) {\n\t\ty++; \n\t\tz=!z;\n\t    };\n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= w <= 1;\nloop invariant 0 <= z <= 1;\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x == y ==> w == 0;\nloop invariant x == y ==> z == 1;\nloop invariant x != y ==> w == 1;\nloop invariant x != y ==> z == 0;\nloop invariant (x == y || x != y) ==> x == y;\nloop invariant (x == y || x != y) ==> w == 0;\nloop invariant (x == y || x != y) ==> z == 1;\nloop invariant (x == y || x != y) ==> x >= 0;\nloop invariant (x == y || x != y) ==> y >= 0;\nloop invariant (x == y || x != y) ==> x <= y;\nloop invariant (x == y || x != y) ==> w <= 1;\nloop invariant (x == y || x != y) ==> z <= 1;\nloop invariant (x == y || x != y) ==> w >= 0;\nloop invariant (x == y || x != y) ==> z >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nvoid main() {\n\n\tint w = 1;\n\tint z = 0;\n\tint x= 0;\n\tint y=0;\n\n         /*@\nloop invariant i1: 0 <= w <= 1;\nloop invariant i2: 0 <= z <= 1;\nloop invariant i3: 0 <= x;\nloop invariant i4: 0 <= y;\n\n\n\n\n\n\n\nloop invariant i12: (x == y || x != y) ==> x >= 0;\nloop invariant i13: (x == y || x != y) ==> y >= 0;\n\nloop invariant i15: (x == y || x != y) ==> w <= 1;\nloop invariant i16: (x == y || x != y) ==> z <= 1;\nloop invariant i17: (x == y || x != y) ==> w >= 0;\nloop invariant i18: (x == y || x != y) ==> z >= 0;\n*/\nwhile(unknown2()){\n\t    if(w) {\n\t\tx++; \n\t\tw=!w;\n\t    };\n\t    if(!z) {\n\t\ty++; \n\t\tz=!z;\n\t    };\n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 30,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant 0 <= y;\nloop invariant 1 <= w <= 2;\nloop invariant 0 <= z <= 1;\nloop invariant x <= y;\nloop invariant x == y ==> w == 1;\nloop invariant x == y ==> z == 0;\nloop invariant x == y ==> unknown2() == 0;\nloop invariant x == y ==> (x == y) ==> w == 1;\nloop invariant x == y ==> (x == y) ==> z == 0;\nloop invariant x == y ==> (x == y) ==> unknown2() == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> z == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> unknown2() == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> unknown2() == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> unknown2() == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> unknown2() == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> unknown2() == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> unknown2() == 0;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nvoid main() {\n\n\tint w = 1;\n\tint z = 0;\n\tint x= 0;\n\tint y=0;\n\n         /*@\n\nloop invariant i2: 0 <= y;\n\nloop invariant i4: 0 <= z <= 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(unknown2()){\n\t    if(w) {\n\t\tx++; \n\t\tw=!w;\n\t    };\n\t    if(!z) {\n\t\ty++; \n\t\tz=!z;\n\t    };\n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nvoid main() {\n\n\tint w = 1;\n\tint z = 0;\n\tint x= 0;\n\tint y=0;\n\n         /*@\n\n*/\nwhile(unknown2()){\n\t    if(w) {\n\t\tx++; \n\t\tw=!w;\n\t    };\n\t    if(!z) {\n\t\ty++; \n\t\tz=!z;\n\t    };\n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant 0 <= y;\nloop invariant (w && !z) || (!w && z) || (!w && !z) || (w && z);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nvoid main() {\n\n\tint w = 1;\n\tint z = 0;\n\tint x= 0;\n\tint y=0;\n\n         /*@\n\nloop invariant i2: 0 <= y;\nloop invariant i3: (w && !z) || (!w && z) || (!w && !z) || (w && z);\n*/\nwhile(unknown2()){\n\t    if(w) {\n\t\tx++; \n\t\tw=!w;\n\t    };\n\t    if(!z) {\n\t\ty++; \n\t\tz=!z;\n\t    };\n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant x == y;\nloop invariant w == !z;\nloop invariant 0 <= w <= 1;\nloop invariant z == !w;\nloop invariant 0 <= z <= 1;\nloop invariant !w ==> x == 0;\nloop invariant w ==> x == y+1;\nloop invariant !z ==> y == 0;\nloop invariant z ==> y == x+1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nvoid main() {\n\n\tint w = 1;\n\tint z = 0;\n\tint x= 0;\n\tint y=0;\n\n         /*@\nloop invariant i1: 0 <= x;\nloop invariant i2: x == y;\nloop invariant i3: w == !z;\nloop invariant i4: 0 <= w <= 1;\nloop invariant i5: z == !w;\nloop invariant i6: 0 <= z <= 1;\n\n\nloop invariant i9: !z ==> y == 0;\n\n*/\nwhile(unknown2()){\n\t    if(w) {\n\t\tx++; \n\t\tw=!w;\n\t    };\n\t    if(!z) {\n\t\ty++; \n\t\tz=!z;\n\t    };\n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 10,
                "annotations": "```\n/*@\nloop invariant 0 <= w <= 1;\nloop invariant 0 <= x <= 100000;\nloop invariant 0 <= y <= 100000;\nloop invariant x == y ==> w = 0;\nloop invariant x == y ==> z = 1;\nloop invariant x != y ==> w = 1;\nloop invariant x != y ==> z = 0;\nloop invariant x >= y ==> w = 0;\nloop invariant x >= y ==> z = 1;\nloop invariant x < y ==> w = 1;\nloop invariant x < y ==> z = 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nvoid main() {\n\n\tint w = 1;\n\tint z = 0;\n\tint x= 0;\n\tint y=0;\n\n         /*@\nloop invariant i1: 0 <= w <= 1;\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(unknown2()){\n\t    if(w) {\n\t\tx++; \n\t\tw=!w;\n\t    };\n\t    if(!z) {\n\t\ty++; \n\t\tz=!z;\n\t    };\n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x >= (0 + (y - 1) * y / 2);\nloop invariant w = !z;\nloop invariant z = !w;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x <= y;\nloop invariant w = !z;\nloop invariant z = !w;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nvoid main() {\n\n\tint w = 1;\n\tint z = 0;\n\tint x= 0;\n\tint y=0;\n\n         /*@\n\n\n\n\nloop invariant i5: x >= 0;\nloop invariant i6: y >= 0;\n\nloop invariant i8: w >= 0;\nloop invariant i9: z >= 0;\n*/\nwhile(unknown2()){\n\t    if(w) {\n\t\tx++; \n\t\tw=!w;\n\t    };\n\t    if(!z) {\n\t\ty++; \n\t\tz=!z;\n\t    };\n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 31,
                "annotations": "```\n/*@\nloop invariant 0 <= w <= 1;\nloop invariant 0 <= z <= 1;\nloop invariant 0 <= x <= unknown2();\nloop invariant 0 <= y <= unknown2();\nloop invariant x >= y;\nloop invariant x >= y - unknown2();\nloop invariant x >= y + unknown2();\nloop invariant x >= y - unknown2() * unknown2();\nloop invariant x >= y + unknown2() * unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2() * unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2() + unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2() + unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2() + unknown2() - unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2();\nloop invariant x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2();\nloop invariant x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nvoid main() {\n\n\tint w = 1;\n\tint z = 0;\n\tint x= 0;\n\tint y=0;\n\n         /*@\nloop invariant i1: 0 <= w <= 1;\nloop invariant i2: 0 <= z <= 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(unknown2()){\n\t    if(w) {\n\t\tx++; \n\t\tw=!w;\n\t    };\n\t    if(!z) {\n\t\ty++; \n\t\tz=!z;\n\t    };\n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 42: unexpected token 'w'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nvoid main() {\n\n\tint w = 1;\n\tint z = 0;\n\tint x= 0;\n\tint y=0;\n\n         /*@\nloop invariant i1: 0 <= x; loop invariant 0 <= y; loop invariant x <= y; loop invariant x+y <= 2 * (x+y); loop invariant x+y <= 2 * (x+y); loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y;\nloop invariant i2: z <= y <= x <= (x + (y - 1) * y / 2);\nloop invariant i3: w ==> x >= y;\nloop invariant i4: !w ==> x == y;\nloop invariant i5: !z ==> y > 0;\nloop invariant i6: z ==> y == 0;\nloop invariant i7: !w ==> z ==> x == y + 1;\nloop invariant i8: !w ==> !z ==> x == y;\nloop invariant i9: w ==> z ==> x == y;\nloop invariant i10: w ==> !z ==> x == y + 1;\nloop invariant i11: x == y;\nloop invariant i12: 0 <= z <= 1;\nloop invariant i13: z == 1 ==> y < x;\nloop invariant i14: z == 1 ==> x - y == 2 * y - 1;\nloop invariant i15: x >= y;\nloop invariant i16: 0 <= w <= 1;\nloop invariant i17: 0 <= x;\nloop invariant i18: 0 <= y;\nloop invariant i19: y <= x;\nloop invariant i20: x <= 2 * y;\nloop invariant i21: w == (1 - z);\nloop invariant i22: z == (1 - w);\nloop invariant i23: 0 < w <= 1; loop invariant 0 < x; loop invariant 0 < y; loop invariant x <= y;\nloop invariant i24: 0 <= y <= 100000;\nloop invariant i25: x >= (1 + (y - 1) * y / 2);\nloop invariant i26: (if w then x > y else x <= y);\nloop invariant i27: (if z then x > y else x <= y);\nloop invariant i28: (if !w then x <= y else x > y);\nloop invariant i29: (if !z then x <= y else x > y);\nloop invariant i30: (if w then x >= y else x < y);\nloop invariant i31: (if z then x >= y else x < y);\nloop invariant i32: (if !w then x < y else x >= y);\nloop invariant i33: (if !z then x < y else x >= y);\nloop invariant i34: x == y ==> w == 0;\nloop invariant i35: x == y ==> z == 1;\nloop invariant i36: x != y ==> w == 1;\nloop invariant i37: x != y ==> z == 0;\nloop invariant i38: (x == y || x != y) ==> x == y;\nloop invariant i39: (x == y || x != y) ==> w == 0;\nloop invariant i40: (x == y || x != y) ==> z == 1;\nloop invariant i41: (x == y || x != y) ==> x >= 0;\nloop invariant i42: (x == y || x != y) ==> y >= 0;\nloop invariant i43: (x == y || x != y) ==> x <= y;\nloop invariant i44: (x == y || x != y) ==> w <= 1;\nloop invariant i45: (x == y || x != y) ==> z <= 1;\nloop invariant i46: (x == y || x != y) ==> w >= 0;\nloop invariant i47: (x == y || x != y) ==> z >= 0;\nloop invariant i48: 0 <= x <= y;\nloop invariant i49: 1 <= w <= 2;\nloop invariant i50: x <= y;\nloop invariant i51: x == y ==> w == 1;\nloop invariant i52: x == y ==> z == 0;\nloop invariant i53: x == y ==> unknown2() == 0;\nloop invariant i54: x == y ==> (x == y) ==> w == 1;\nloop invariant i55: x == y ==> (x == y) ==> z == 0;\nloop invariant i56: x == y ==> (x == y) ==> unknown2() == 0;\nloop invariant i57: x == y ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant i58: x == y ==> (x == y) ==> (x == y) ==> z == 0;\nloop invariant i59: x == y ==> (x == y) ==> (x == y) ==> unknown2() == 0;\nloop invariant i60: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant i61: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\nloop invariant i62: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> unknown2() == 0;\nloop invariant i63: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant i64: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\nloop invariant i65: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> unknown2() == 0;\nloop invariant i66: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant i67: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\nloop invariant i68: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> unknown2() == 0;\nloop invariant i69: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant i70: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\nloop invariant i71: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> unknown2() == 0;\nloop invariant i72: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant i73: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\nloop invariant i74: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> unknown2() == 0;\nloop invariant i75: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant i76: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\nloop invariant i77: (w && !z) || (!w && z) || (!w && !z) || (w && z);\nloop invariant i78: w == !z;\nloop invariant i79: z == !w;\nloop invariant i80: !w ==> x == 0;\nloop invariant i81: w ==> x == y+1;\nloop invariant i82: !z ==> y == 0;\nloop invariant i83: z ==> y == x+1;\nloop invariant i84: 0 <= x <= 100000;\nloop invariant i85: x == y ==> w = 0;\nloop invariant i86: x == y ==> z = 1;\nloop invariant i87: x != y ==> w = 1;\nloop invariant i88: x != y ==> z = 0;\nloop invariant i89: x >= y ==> w = 0;\nloop invariant i90: x >= y ==> z = 1;\nloop invariant i91: x < y ==> w = 1;\nloop invariant i92: x < y ==> z = 0;\nloop invariant i93: x >= (0 + (y - 1) * y / 2);\nloop invariant i94: w = !z;\nloop invariant i95: z = !w;\nloop invariant i96: x >= 0;\nloop invariant i97: y >= 0;\nloop invariant i98: w >= 0;\nloop invariant i99: z >= 0;\nloop invariant i100: 0 <= x <= unknown2();\nloop invariant i101: 0 <= y <= unknown2();\nloop invariant i102: x >= y - unknown2();\nloop invariant i103: x >= y + unknown2();\nloop invariant i104: x >= y - unknown2() * unknown2();\nloop invariant i105: x >= y + unknown2() * unknown2();\nloop invariant i106: x >= y - unknown2() * unknown2() + unknown2();\nloop invariant i107: x >= y + unknown2() * unknown2() - unknown2();\nloop invariant i108: x >= y - unknown2() * unknown2() + unknown2() * unknown2();\nloop invariant i109: x >= y + unknown2() * unknown2() - unknown2() * unknown2();\nloop invariant i110: x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2();\nloop invariant i111: x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2();\nloop invariant i112: x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2();\nloop invariant i113: x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2();\nloop invariant i114: x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2();\nloop invariant i115: x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2() + unknown2();\nloop invariant i116: x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2() + unknown2();\nloop invariant i117: x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2() + unknown2() - unknown2();\nloop invariant i118: x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2();\nloop invariant i119: x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2();\nloop invariant i120: x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2();\nloop invariant i121: x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2();\nloop invariant i122: x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2();\nloop invariant i123: x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2();\nloop invariant i124: x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2();\nloop invariant i125: x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2();\nloop invariant i126: x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2();\nloop invariant i127: x >= y + unknown2() * unknown2() - unknown2() * unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2();\nloop invariant i128: x >= y - unknown2() * unknown2() + unknown2() * unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2() - unknown2() + unknown2();\n*/\nwhile(unknown2()){\n\t    if(w) {\n\t\tx++; \n\t\tw=!w;\n\t    };\n\t    if(!z) {\n\t\ty++; \n\t\tz=!z;\n\t    };\n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
        "combined_annotation_num_solver_calls": 59,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nvoid main() {\n\n\tint w = 1;\n\tint z = 0;\n\tint x= 0;\n\tint y=0;\n\n         /*@\nloop invariant i1: 0 <= x; loop invariant 0 <= y; loop invariant x <= y; loop invariant x+y <= 2 * (x+y); loop invariant x+y <= 2 * (x+y); loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y; loop invariant x+y <= x+y;\nloop invariant i2: z <= y <= x <= (x + (y - 1) * y / 2);\nloop invariant i3: w ==> x >= y;\nloop invariant i4: !w ==> x == y;\n\nloop invariant i6: z ==> y == 0;\nloop invariant i7: !w ==> z ==> x == y + 1;\nloop invariant i8: !w ==> !z ==> x == y;\nloop invariant i9: w ==> z ==> x == y;\n\nloop invariant i11: x == y;\nloop invariant i12: 0 <= z <= 1;\nloop invariant i13: z == 1 ==> y < x;\nloop invariant i14: z == 1 ==> x - y == 2 * y - 1;\nloop invariant i15: x >= y;\nloop invariant i16: 0 <= w <= 1;\nloop invariant i17: 0 <= x;\nloop invariant i18: 0 <= y;\nloop invariant i19: y <= x;\nloop invariant i20: x <= 2 * y;\nloop invariant i21: w == (1 - z);\nloop invariant i22: z == (1 - w);\nloop invariant i23: 0 < w <= 1; loop invariant 0 < x; loop invariant 0 < y; loop invariant x <= y;\nloop invariant i24: 0 <= y <= 100000;\nloop invariant i25: x >= (1 + (y - 1) * y / 2);\n\n\n\n\n\n\n\n\nloop invariant i34: x == y ==> w == 0;\nloop invariant i35: x == y ==> z == 1;\nloop invariant i36: x != y ==> w == 1;\nloop invariant i37: x != y ==> z == 0;\nloop invariant i38: (x == y || x != y) ==> x == y;\nloop invariant i39: (x == y || x != y) ==> w == 0;\nloop invariant i40: (x == y || x != y) ==> z == 1;\nloop invariant i41: (x == y || x != y) ==> x >= 0;\nloop invariant i42: (x == y || x != y) ==> y >= 0;\nloop invariant i43: (x == y || x != y) ==> x <= y;\nloop invariant i44: (x == y || x != y) ==> w <= 1;\nloop invariant i45: (x == y || x != y) ==> z <= 1;\nloop invariant i46: (x == y || x != y) ==> w >= 0;\nloop invariant i47: (x == y || x != y) ==> z >= 0;\nloop invariant i48: 0 <= x <= y;\nloop invariant i49: 1 <= w <= 2;\nloop invariant i50: x <= y;\nloop invariant i51: x == y ==> w == 1;\nloop invariant i52: x == y ==> z == 0;\n\nloop invariant i54: x == y ==> (x == y) ==> w == 1;\nloop invariant i55: x == y ==> (x == y) ==> z == 0;\n\nloop invariant i57: x == y ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant i58: x == y ==> (x == y) ==> (x == y) ==> z == 0;\n\nloop invariant i60: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant i61: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\n\nloop invariant i63: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant i64: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\n\nloop invariant i66: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant i67: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\n\nloop invariant i69: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant i70: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\n\nloop invariant i72: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant i73: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\n\nloop invariant i75: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> w == 1;\nloop invariant i76: x == y ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> (x == y) ==> z == 0;\nloop invariant i77: (w && !z) || (!w && z) || (!w && !z) || (w && z);\nloop invariant i78: w == !z;\nloop invariant i79: z == !w;\nloop invariant i80: !w ==> x == 0;\nloop invariant i81: w ==> x == y+1;\nloop invariant i82: !z ==> y == 0;\nloop invariant i83: z ==> y == x+1;\nloop invariant i84: 0 <= x <= 100000;\n\n\n\n\n\n\n\n\nloop invariant i93: x >= (0 + (y - 1) * y / 2);\n\n\nloop invariant i96: x >= 0;\nloop invariant i97: y >= 0;\nloop invariant i98: w >= 0;\nloop invariant i99: z >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(unknown2()){\n\t    if(w) {\n\t\tx++; \n\t\tw=!w;\n\t    };\n\t    if(!z) {\n\t\ty++; \n\t\tz=!z;\n\t    };\n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c"
        ],
        "skipped": [],
        "total": 106,
        "success_count": 91,
        "failure_count": 15,
        "success_rate": 0.8584905660377359
    }
}