{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  while(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant d1 <= 1;\nloop invariant d2 <= 1;\nloop invariant d3 <= 1;\nloop invariant 0 <= d1 <= unknown_uint();\nloop invariant 0 <= d2 <= unknown_uint();\nloop invariant 0 <= d3 <= unknown_uint();\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant (x1 == 0) ==> (x2 == 0 || x3 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0 || x3 == 0);\nloop invariant (x3 == 0) ==> (x1 == 0 || x2 == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= x2 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= (x1 + x2 + x3);\nloop invariant 0 <= x2 <= (x1 + x2 + x3);\nloop invariant 0 <= x3 <= (x1 + x2 + x3);\nloop invariant 1 <= d1 <= (x1 + x2 + x3);\nloop invariant 1 <= d2 <= (x1 + x2 + x3);\nloop invariant 1 <= d3 <= (x1 + x2 + x3);\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= 2147483647;\nloop invariant 0 <= x2 <= 2147483647;\nloop invariant 0 <= x3 <= 2147483647;\nloop invariant 0 <= d1 <= 2147483647;\n*/\n```",
            "```\n/*@\nloop invariant 0 < x1 <= 100000;\nloop invariant 0 < x2 <= 100000;\nloop invariant 0 < x3 <= 100000;\nloop invariant x1 >= x2 || x1 >= x3 || x2 >= x3;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant x1 == x1 - d1 || x2 == x2 - d2 || x3 == x3 - d3;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 > 0 ==> c1 == unknown_bool();\nloop invariant x2 > 0 ==> c2 == unknown_bool();\nloop invariant !x1 > 0 ==> c1 == unknown_bool();\nloop invariant !x2 > 0 ==> c2 == unknown_bool();\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= 4294967295;\nloop invariant 0 <= x2 <= 4294967295;\nloop invariant 0 <= x3 <= 4294967295;\nloop invariant 0 <= d1 <= 4294967295;\nloop invariant 0 <= d2 <= 4294967295;\nloop invariant 0 <= d3 <= 4294967295;\nloop invariant \\old(x1) >= x1;\nloop invariant \\old(x2) >= x2;\nloop invariant \\old(x3) >= x3;\nloop invariant \\old(d1) >= d1;\nloop invariant \\old(d2) >= d2;\nloop invariant \\old(d3) >= d3;\nloop invariant x1 == \\old(x1) || c1;\nloop invariant x2 == \\old(x2) || c2;\nloop invariant x3 == \\old(x3) || !c1 && !c2;\nloop invariant c1 == \\old(c1);\nloop invariant c2 == \\old(c2);\nloop invariant c1 == \\old(c1) || x1 > 0;\nloop invariant c2 == \\old(c2) || x2 > 0;\nloop invariant c1 == \\old(c1) || x3 > 0;\nloop invariant c1 == \\old(c1) || x1 == 0;\nloop invariant c2 == \\old(c2) || x2 == 0;\nloop invariant c1 == \\old(c1) || x3 == 0;\nloop invariant x1 == \\old(x1) || c1 ==> d1 <= x1;\nloop invariant x2 == \\old(x2) || c2 ==> d2 <= x2;\nloop invariant x3 == \\old(x3) || !c1 && !c2 ==> d3 <= x3;\nloop invariant x1 == \\old(x1) || c1 ==> x1 >= x1 - d1;\nloop invariant x2 == \\old(x2) || c2 ==> x2 >= x2 - d2;\nloop invariant x3 == \\old(x3) || !c1 && !c2 ==> x3 >= x3 - d3;\nloop invariant x1 == \\old(x1) || c1 ==> d1 <= 4294967295;\nloop invariant x2 == \\old(x2) || c2 ==> d2 <= 4294967295;\nloop invariant x3 == \\old(x3) || !c1 && !c2 ==> d3 <= 4294967295;\nloop invariant x1 == \\old(x1) || c1 ==> x1 >= 0;\nloop invariant x2 == \\old(x2) || c2 ==> x2 >= 0;\nloop invariant x3 == \\old(x3) || !c1 && !c2 ==> x3 >= 0;\nloop invariant x1 == \\old(x1) || c1 ==> x1 <= 4294967295;\nloop invariant x2 == \\old(x2) || c2 ==> x2 <= 4294967295;\nloop invariant x3 == \\old(x3) || !c1 && !c2 ==> x3 <= 4294967295;\nloop invariant x1 == \\old(x1) || c1 ==> x1 >= 0;\nloop invariant x2 == \\old(x2) || c2 ==> x2 >= 0;\nloop invariant x3 == \\old(x3) || !c1 && !c2 ==> x3 >= 0;\nloop invariant x1 == \\old(x1) || c1 ==> x1 <= 4294967295;\nloop invariant x2 == \\old(x2) || c2 ==> x2 <= 4294967295;\nloop invariant x3 == \\old(x3) || !c1 && !c2 ==> x3 <= 4294967295;\nloop invariant x1 == \\old(x1) || c1 ==> x1 >= 0;\nloop invariant x2 == \\old(x2) || c2 ==> x2 >= 0;\nloop invariant x3 == \\old(x3) || !c1 && !c2 ==> x3 >= 0;\nloop invariant x1 == \\old(x1) || c1 ==> x1 <= 4294967295;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 0 <= d1 <= unknown_uint();\nloop invariant 0 <= d2 <= unknown_uint();\nloop invariant 0 <= d3 <= unknown_uint();\nloop invariant unknown_bool() == true ==> c1 == true;\nloop invariant unknown_bool() == true ==> c2 == true;\nloop invariant unknown_bool() == false ==> c1 == false;\nloop invariant unknown_bool() == false ==> c2 == false;\nloop invariant unknown_bool() == true ==> c1 == true || c2 == true;\nloop invariant unknown_bool() == false ==> c1 == false && c2 == false;\nloop invariant c1 == true ==> x1 == x1 - d1;\nloop invariant c2 == true ==> x2 == x2 - d2;\nloop invariant c1 == false && c2 == false ==> x3 == x3 - d3;\nloop invariant c1 == true ==> x1 <= unknown_uint();\nloop invariant c2 == true ==> x2 <= unknown_uint();\nloop invariant c1 == false && c2 == false ==> x3 <= unknown_uint();\nloop invariant c1 == true ==> x1 >= 0;\nloop invariant c2 == true ==> x2 >= 0;\nloop invariant c1 == false && c2 == false ==> x3 >= 0;\nloop invariant c1 == true ==> d1 <= unknown_uint();\nloop invariant c2 == true ==> d2 <= unknown_uint();\nloop invariant c1 == false && c2 == false ==> d3 <= unknown_uint();\nloop invariant c1 == true ==> d1 >= 0;\nloop invariant c2 == true ==> d2 >= 0;\nloop invariant c1 == false && c2 == false ==> d3 >= 0;\nloop invariant c1 == true ==> unknown_bool() == true;\nloop invariant c2 == true ==> unknown_bool() == true;\nloop invariant c1 == false && c2 == false ==> unknown_bool() == false;\nloop invariant c1 == true ==> unknown_bool() == true || unknown_bool() == false;\nloop invariant c2 == true ==> unknown_bool() == true || unknown_bool() == false;\nloop invariant c1 == false && c2 == false ==> unknown_bool() == false && unknown_bool() == false;\nloop invariant c1 == true ==> unknown_bool() == true ==> c1 == true;\nloop invariant c2 == true ==> unknown_bool() == true ==> c2 == true;\nloop invariant c1 == false && c2 == false ==> unknown_bool() == false ==> c1 == false;\nloop invariant c1 == false && c2 == false ==> unknown_bool() == false ==> c2 == false;\nloop invariant c1 == true ==> unknown_bool() == true ==> c1 == true || c2 == true;\nloop invariant c2 == true ==> unknown_bool() == true ==> c1 == true || c2 == true;\nloop invariant c1 == false && c2 == false ==> unknown_bool() == false ==> c1 == false && c2 == false;\nloop invariant c1 == true ==> unknown_bool() == true ==> c1 == true ==> x1 == x1 - d1;\nloop invariant c2 == true ==> unknown_bool() == true ==> c2 == true ==> x2 == x2 - d2;\nloop invariant c1 == false && c2 == false ==> unknown_bool() == false ==> c1 == false && c2 == false ==> x3 == x3 - d3;\nloop invariant c1 == true ==> unknown_bool() == true ==> c1 == true ==> x1 <= unknown_uint();\nloop invariant c2 == true ==> unknown_bool() == true ==> c2 == true ==> x2 <= unknown_uint();\nloop invariant c1 == false && c2 == false ==> unknown_bool() == false ==> c1 == false && c2 == false ==> x3 <= unknown_uint();\nloop invariant c1 == true ==> unknown_bool() == true ==> c1 == true ==> x1 >= 0;\nloop invariant c2 == true ==> unknown_bool() == true ==> c2 == true ==> x2 >= 0;\nloop invariant c1 == false && c2 == false ==> unknown_bool() == false ==> c1 == false && c2 == false ==> x3 >= 0;\nloop invariant c1 == true ==> unknown_bool() == true ==> c1 == true ==> d1 <= unknown_uint();\nloop invariant c2 == true ==> unknown_bool() == true ==> c2 == true ==> d2 <= unknown_uint();\nloop invariant c1 == false && c2 == false ==> unknown_bool() == false ==> c1 == false && c2 == false ==> d3 <= unknown_uint();\n*/\n```",
            "```\n/*@\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= (x1 + d1);\nloop invariant 0 <= x2 <= (x2 + d2);\nloop invariant 0 <= x3 <= (x3 + d3);\nloop invariant (x1 + x2 + x3) >= (d1 + d2 + d3);\nloop invariant (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3));\nloop invariant (x1 + x2 + x3) == (x1 + x2 + x3);\nloop invariant x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3);\nloop invariant x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3);\nloop invariant x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3));\nloop invariant x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3);\nloop invariant x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3);\nloop invariant x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3));\nloop invariant x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3);\n*/\n```",
            "```\n/*@\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0;\nloop invariant if (x1 > 0 && x2 > 0 && x3 > 0) ==> c1 || c2;\nloop invariant if (x1 > 0 && x2 > 0 && x3 > 0) ==> c1 != c2;\nloop invariant if (x1 > 0 && x2 > 0 && x3 > 0) ==> d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant if (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 || d1 == 0) && (x2 >= d2 || d2 == 0) && (x3 >= d3 || d3 == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1;\nloop invariant 0 <= x2;\nloop invariant 0 <= x3;\nloop invariant x1 >= d1 * (x1 > 0 ? 1 : 0);\nloop invariant x2 >= d2 * (x2 > 0 ? 1 : 0);\nloop invariant x3 >= d3 * (x3 > 0 ? 1 : 0);\nloop invariant x1 >= (1 + (x1 > 0 ? (x1 - 1) * x1 / 2 : 0));\nloop invariant x2 >= (1 + (x2 > 0 ? (x2 - 1) * x2 / 2 : 0));\nloop invariant x3 >= (1 + (x3 > 0 ? (x3 - 1) * x3 / 2 : 0));\nloop invariant x1 <= (1 + (x1 > 0 ? (x1 - 1) * x1 / 2 : 0)) + (d1 * (x1 > 0 ? 1 : 0));\nloop invariant x2 <= (1 + (x2 > 0 ? (x2 - 1) * x2 / 2 : 0)) + (d2 * (x2 > 0 ? 1 : 0));\nloop invariant x3 <= (1 + (x3 > 0 ? (x3 - 1) * x3 / 2 : 0)) + (d3 * (x3 > 0 ? 1 : 0));\nloop invariant x1 <= (1 + (x1 > 0 ? (x1 - 1) * x1 / 2 : 0)) + (d1 * (x1 > 0 ? 1 : 0)) + (d2 * (x2 > 0 ? 1 : 0)) + (d3 * (x3 > 0 ? 1 : 0));\nloop invariant x2 <= (1 + (x2 > 0 ? (x2 - 1) * x2 / 2 : 0)) + (d1 * (x1 > 0 ? 1 : 0)) + (d2 * (x2 > 0 ? 1 : 0)) + (d3 * (x3 > 0 ? 1 : 0));\nloop invariant x3 <= (1 + (x3 > 0 ? (x3 - 1) * x3 / 2 : 0)) + (d1 * (x1 > 0 ? 1 : 0)) + (d2 * (x2 > 0 ? 1 : 0)) + (d3 * (x3 > 0 ? 1 : 0));\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 && c2 ==> d1 == d2;\nloop invariant c1 && c2 ==> d1 == d3;\nloop invariant c1 && c2 ==> d2 == d3;\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0);\nloop invariant (x1 == 0) ==> (x3 == 0) ==> (x2 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0) ==> (x3 == 0);\nloop invariant (x2 == 0) ==> (x3 == 0) ==> (x1 == 0);\nloop invariant (x3 == 0) ==> (x1 == 0) ==> (x2 == 0);\nloop invariant (x3 == 0) ==> (x2 == 0) ==> (x1 == 0);\nloop invariant x1 == 0 ==> x2 == 0 ==> x3 == 0;\nloop invariant x1 == 0 ==> x3 == 0 ==> x2 == 0;\nloop invariant x2 == 0 ==> x1 == 0 ==> x3 == 0;\nloop invariant x2 == 0 ==> x3 == 0 ==> x1 == 0;\nloop invariant x3 == 0 ==> x1 == 0 ==> x2 == 0;\nloop invariant x3 == 0 ==> x2 == 0 ==> x1 == 0;\nloop invariant x1 == 0 ==> x2 == 0 ==> x3 == 0 ==> (x1 == 0 && x2 == 0 && x3 == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= 2147483647; loop invariant 0 <= x2 <= 2147483647; loop invariant 0 <= x3 <= 2147483647; loop invariant 1 <= d1 <= 2147483647; loop invariant 1 <= d2 <= 2147483647; loop invariant 1 <= d3 <= 2147483647; loop invariant (c1 || c2) == (d1 == 1); loop invariant (c1 || c2) == (d2 == 1); loop invariant (c1 || c2) == (d3 == 1); loop invariant (x1 >= x2) ==> (x1 >= x3); loop invariant (x2 >= x1) ==> (x2 >= x3); loop invariant (x3 >= x1) ==> (x3 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 0 <= d1 <= unknown_uint();\nloop invariant 0 <= d2 <= unknown_uint();\nloop invariant 0 <= d3 <= unknown_uint();\nloop invariant c1=unknown_bool() ==> 0 <= c1 <= 1;\nloop invariant c2=unknown_bool() ==> 0 <= c2 <= 1;\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 <= unknown_uint() && x2 <= unknown_uint() && x3 <= unknown_uint());\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (d1 <= unknown_uint() && d2 <= unknown_uint() && d3 <= unknown_uint());\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (c1 <= 1 && c2 <= 1);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x2 >= x3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 1 && x2 >= 1 && x3 >= 1);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= x2 <= x3;\nloop invariant d1 > 0 && d2 > 0 && d3 > 0;\nloop invariant c1 || c2;\nloop invariant d1 <= x1 && d2 <= x2 && d3 <= x3;\nloop invariant c1 ==> x1 >= d1;\nloop invariant c2 ==> x2 >= d2;\nloop invariant !c1 && !c2 ==> x3 >= d3;\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 && x2==0 && x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint() ==> x1 >= 0;\nloop invariant 0 <= x2 <= unknown_uint() ==> x2 >= 0;\nloop invariant 0 <= x3 <= unknown_uint() ==> x3 >= 0;\nloop invariant 1 <= d1 <= unknown_uint() ==> d1 >= 1;\nloop invariant 1 <= d2 <= unknown_uint() ==> d2 >= 1;\nloop invariant 1 <= d3 <= unknown_uint() ==> d3 >= 1;\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> x1 > 0 && x2 > 0 && x3 > 0;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> x1 == unknown_uint() || x2 == unknown_uint() || x3 == unknown_uint();\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> x1 == unknown_uint() || x2 == unknown_uint() || x3 == unknown_uint() ==> x1 == 0 || x2 == 0 || x3 == 0;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant d1 <= 1;\nloop invariant d2 <= 1;\nloop invariant d3 <= 1;\nloop invariant 0 <= d1 <= unknown_uint();\nloop invariant 0 <= d2 <= unknown_uint();\nloop invariant 0 <= d3 <= unknown_uint();\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant (x1 == 0) ==> (x2 == 0 || x3 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0 || x3 == 0);\nloop invariant (x3 == 0) ==> (x1 == 0 || x2 == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\nloop invariant i4: d1 <= 1;\nloop invariant i5: d2 <= 1;\nloop invariant i6: d3 <= 1;\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= x2 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= (x1 + x2 + x3);\nloop invariant 0 <= x2 <= (x1 + x2 + x3);\nloop invariant 0 <= x3 <= (x1 + x2 + x3);\nloop invariant 1 <= d1 <= (x1 + x2 + x3);\nloop invariant 1 <= d2 <= (x1 + x2 + x3);\nloop invariant 1 <= d3 <= (x1 + x2 + x3);\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: 0 <= x1 <= (x1 + x2 + x3);\nloop invariant i2: 0 <= x2 <= (x1 + x2 + x3);\nloop invariant i3: 0 <= x3 <= (x1 + x2 + x3);\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= 2147483647;\nloop invariant 0 <= x2 <= 2147483647;\nloop invariant 0 <= x3 <= 2147483647;\nloop invariant 0 <= d1 <= 2147483647;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\nloop invariant i4: 0 <= d1 <= 2147483647;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 < x1 <= 100000;\nloop invariant 0 < x2 <= 100000;\nloop invariant 0 < x3 <= 100000;\nloop invariant x1 >= x2 || x1 >= x3 || x2 >= x3;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant x1 == x1 - d1 || x2 == x2 - d2 || x3 == x3 - d3;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 > 0 ==> c1 == unknown_bool();\nloop invariant x2 > 0 ==> c2 == unknown_bool();\nloop invariant !x1 > 0 ==> c1 == unknown_bool();\nloop invariant !x2 > 0 ==> c2 == unknown_bool();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\nloop invariant i5: d1 >= 1;\nloop invariant i6: d2 >= 1;\nloop invariant i7: d3 >= 1;\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 32,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= 4294967295;\nloop invariant 0 <= x2 <= 4294967295;\nloop invariant 0 <= x3 <= 4294967295;\nloop invariant 0 <= d1 <= 4294967295;\nloop invariant 0 <= d2 <= 4294967295;\nloop invariant 0 <= d3 <= 4294967295;\nloop invariant \\old(x1) >= x1;\nloop invariant \\old(x2) >= x2;\nloop invariant \\old(x3) >= x3;\nloop invariant \\old(d1) >= d1;\nloop invariant \\old(d2) >= d2;\nloop invariant \\old(d3) >= d3;\nloop invariant x1 == \\old(x1) || c1;\nloop invariant x2 == \\old(x2) || c2;\nloop invariant x3 == \\old(x3) || !c1 && !c2;\nloop invariant c1 == \\old(c1);\nloop invariant c2 == \\old(c2);\nloop invariant c1 == \\old(c1) || x1 > 0;\nloop invariant c2 == \\old(c2) || x2 > 0;\nloop invariant c1 == \\old(c1) || x3 > 0;\nloop invariant c1 == \\old(c1) || x1 == 0;\nloop invariant c2 == \\old(c2) || x2 == 0;\nloop invariant c1 == \\old(c1) || x3 == 0;\nloop invariant x1 == \\old(x1) || c1 ==> d1 <= x1;\nloop invariant x2 == \\old(x2) || c2 ==> d2 <= x2;\nloop invariant x3 == \\old(x3) || !c1 && !c2 ==> d3 <= x3;\nloop invariant x1 == \\old(x1) || c1 ==> x1 >= x1 - d1;\nloop invariant x2 == \\old(x2) || c2 ==> x2 >= x2 - d2;\nloop invariant x3 == \\old(x3) || !c1 && !c2 ==> x3 >= x3 - d3;\nloop invariant x1 == \\old(x1) || c1 ==> d1 <= 4294967295;\nloop invariant x2 == \\old(x2) || c2 ==> d2 <= 4294967295;\nloop invariant x3 == \\old(x3) || !c1 && !c2 ==> d3 <= 4294967295;\nloop invariant x1 == \\old(x1) || c1 ==> x1 >= 0;\nloop invariant x2 == \\old(x2) || c2 ==> x2 >= 0;\nloop invariant x3 == \\old(x3) || !c1 && !c2 ==> x3 >= 0;\nloop invariant x1 == \\old(x1) || c1 ==> x1 <= 4294967295;\nloop invariant x2 == \\old(x2) || c2 ==> x2 <= 4294967295;\nloop invariant x3 == \\old(x3) || !c1 && !c2 ==> x3 <= 4294967295;\nloop invariant x1 == \\old(x1) || c1 ==> x1 >= 0;\nloop invariant x2 == \\old(x2) || c2 ==> x2 >= 0;\nloop invariant x3 == \\old(x3) || !c1 && !c2 ==> x3 >= 0;\nloop invariant x1 == \\old(x1) || c1 ==> x1 <= 4294967295;\nloop invariant x2 == \\old(x2) || c2 ==> x2 <= 4294967295;\nloop invariant x3 == \\old(x3) || !c1 && !c2 ==> x3 <= 4294967295;\nloop invariant x1 == \\old(x1) || c1 ==> x1 >= 0;\nloop invariant x2 == \\old(x2) || c2 ==> x2 >= 0;\nloop invariant x3 == \\old(x3) || !c1 && !c2 ==> x3 >= 0;\nloop invariant x1 == \\old(x1) || c1 ==> x1 <= 4294967295;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: 0 <= x1 <= 4294967295;\nloop invariant i2: 0 <= x2 <= 4294967295;\nloop invariant i3: 0 <= x3 <= 4294967295;\nloop invariant i4: 0 <= d1 <= 4294967295;\nloop invariant i5: 0 <= d2 <= 4294967295;\nloop invariant i6: 0 <= d3 <= 4294967295;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 52,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 0 <= d1 <= unknown_uint();\nloop invariant 0 <= d2 <= unknown_uint();\nloop invariant 0 <= d3 <= unknown_uint();\nloop invariant unknown_bool() == true ==> c1 == true;\nloop invariant unknown_bool() == true ==> c2 == true;\nloop invariant unknown_bool() == false ==> c1 == false;\nloop invariant unknown_bool() == false ==> c2 == false;\nloop invariant unknown_bool() == true ==> c1 == true || c2 == true;\nloop invariant unknown_bool() == false ==> c1 == false && c2 == false;\nloop invariant c1 == true ==> x1 == x1 - d1;\nloop invariant c2 == true ==> x2 == x2 - d2;\nloop invariant c1 == false && c2 == false ==> x3 == x3 - d3;\nloop invariant c1 == true ==> x1 <= unknown_uint();\nloop invariant c2 == true ==> x2 <= unknown_uint();\nloop invariant c1 == false && c2 == false ==> x3 <= unknown_uint();\nloop invariant c1 == true ==> x1 >= 0;\nloop invariant c2 == true ==> x2 >= 0;\nloop invariant c1 == false && c2 == false ==> x3 >= 0;\nloop invariant c1 == true ==> d1 <= unknown_uint();\nloop invariant c2 == true ==> d2 <= unknown_uint();\nloop invariant c1 == false && c2 == false ==> d3 <= unknown_uint();\nloop invariant c1 == true ==> d1 >= 0;\nloop invariant c2 == true ==> d2 >= 0;\nloop invariant c1 == false && c2 == false ==> d3 >= 0;\nloop invariant c1 == true ==> unknown_bool() == true;\nloop invariant c2 == true ==> unknown_bool() == true;\nloop invariant c1 == false && c2 == false ==> unknown_bool() == false;\nloop invariant c1 == true ==> unknown_bool() == true || unknown_bool() == false;\nloop invariant c2 == true ==> unknown_bool() == true || unknown_bool() == false;\nloop invariant c1 == false && c2 == false ==> unknown_bool() == false && unknown_bool() == false;\nloop invariant c1 == true ==> unknown_bool() == true ==> c1 == true;\nloop invariant c2 == true ==> unknown_bool() == true ==> c2 == true;\nloop invariant c1 == false && c2 == false ==> unknown_bool() == false ==> c1 == false;\nloop invariant c1 == false && c2 == false ==> unknown_bool() == false ==> c2 == false;\nloop invariant c1 == true ==> unknown_bool() == true ==> c1 == true || c2 == true;\nloop invariant c2 == true ==> unknown_bool() == true ==> c1 == true || c2 == true;\nloop invariant c1 == false && c2 == false ==> unknown_bool() == false ==> c1 == false && c2 == false;\nloop invariant c1 == true ==> unknown_bool() == true ==> c1 == true ==> x1 == x1 - d1;\nloop invariant c2 == true ==> unknown_bool() == true ==> c2 == true ==> x2 == x2 - d2;\nloop invariant c1 == false && c2 == false ==> unknown_bool() == false ==> c1 == false && c2 == false ==> x3 == x3 - d3;\nloop invariant c1 == true ==> unknown_bool() == true ==> c1 == true ==> x1 <= unknown_uint();\nloop invariant c2 == true ==> unknown_bool() == true ==> c2 == true ==> x2 <= unknown_uint();\nloop invariant c1 == false && c2 == false ==> unknown_bool() == false ==> c1 == false && c2 == false ==> x3 <= unknown_uint();\nloop invariant c1 == true ==> unknown_bool() == true ==> c1 == true ==> x1 >= 0;\nloop invariant c2 == true ==> unknown_bool() == true ==> c2 == true ==> x2 >= 0;\nloop invariant c1 == false && c2 == false ==> unknown_bool() == false ==> c1 == false && c2 == false ==> x3 >= 0;\nloop invariant c1 == true ==> unknown_bool() == true ==> c1 == true ==> d1 <= unknown_uint();\nloop invariant c2 == true ==> unknown_bool() == true ==> c2 == true ==> d2 <= unknown_uint();\nloop invariant c1 == false && c2 == false ==> unknown_bool() == false ==> c1 == false && c2 == false ==> d3 <= unknown_uint();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= (x1 + d1);\nloop invariant 0 <= x2 <= (x2 + d2);\nloop invariant 0 <= x3 <= (x3 + d3);\nloop invariant (x1 + x2 + x3) >= (d1 + d2 + d3);\nloop invariant (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3));\nloop invariant (x1 + x2 + x3) == (x1 + x2 + x3);\nloop invariant x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3);\nloop invariant x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3);\nloop invariant x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3));\nloop invariant x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3);\nloop invariant x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3);\nloop invariant x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3));\nloop invariant x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\nloop invariant i4: 0 <= x1 <= (x1 + d1);\nloop invariant i5: 0 <= x2 <= (x2 + d2);\nloop invariant i6: 0 <= x3 <= (x3 + d3);\n\nloop invariant i8: (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3));\nloop invariant i9: (x1 + x2 + x3) == (x1 + x2 + x3);\n\nloop invariant i11: x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3);\nloop invariant i12: x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3));\nloop invariant i13: x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3);\nloop invariant i14: x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3);\nloop invariant i15: x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3));\nloop invariant i16: x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0;\nloop invariant if (x1 > 0 && x2 > 0 && x3 > 0) ==> c1 || c2;\nloop invariant if (x1 > 0 && x2 > 0 && x3 > 0) ==> c1 != c2;\nloop invariant if (x1 > 0 && x2 > 0 && x3 > 0) ==> d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant if (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 || d1 == 0) && (x2 >= d2 || d2 == 0) && (x3 >= d3 || d3 == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: x1 >= 0 && x2 >= 0 && x3 >= 0;\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x1;\nloop invariant 0 <= x2;\nloop invariant 0 <= x3;\nloop invariant x1 >= d1 * (x1 > 0 ? 1 : 0);\nloop invariant x2 >= d2 * (x2 > 0 ? 1 : 0);\nloop invariant x3 >= d3 * (x3 > 0 ? 1 : 0);\nloop invariant x1 >= (1 + (x1 > 0 ? (x1 - 1) * x1 / 2 : 0));\nloop invariant x2 >= (1 + (x2 > 0 ? (x2 - 1) * x2 / 2 : 0));\nloop invariant x3 >= (1 + (x3 > 0 ? (x3 - 1) * x3 / 2 : 0));\nloop invariant x1 <= (1 + (x1 > 0 ? (x1 - 1) * x1 / 2 : 0)) + (d1 * (x1 > 0 ? 1 : 0));\nloop invariant x2 <= (1 + (x2 > 0 ? (x2 - 1) * x2 / 2 : 0)) + (d2 * (x2 > 0 ? 1 : 0));\nloop invariant x3 <= (1 + (x3 > 0 ? (x3 - 1) * x3 / 2 : 0)) + (d3 * (x3 > 0 ? 1 : 0));\nloop invariant x1 <= (1 + (x1 > 0 ? (x1 - 1) * x1 / 2 : 0)) + (d1 * (x1 > 0 ? 1 : 0)) + (d2 * (x2 > 0 ? 1 : 0)) + (d3 * (x3 > 0 ? 1 : 0));\nloop invariant x2 <= (1 + (x2 > 0 ? (x2 - 1) * x2 / 2 : 0)) + (d1 * (x1 > 0 ? 1 : 0)) + (d2 * (x2 > 0 ? 1 : 0)) + (d3 * (x3 > 0 ? 1 : 0));\nloop invariant x3 <= (1 + (x3 > 0 ? (x3 - 1) * x3 / 2 : 0)) + (d1 * (x1 > 0 ? 1 : 0)) + (d2 * (x2 > 0 ? 1 : 0)) + (d3 * (x3 > 0 ? 1 : 0));\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 && c2 ==> d1 == d2;\nloop invariant c1 && c2 ==> d1 == d3;\nloop invariant c1 && c2 ==> d2 == d3;\nloop invariant (x1 == 0) ==> (x2 == 0) ==> (x3 == 0);\nloop invariant (x1 == 0) ==> (x3 == 0) ==> (x2 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0) ==> (x3 == 0);\nloop invariant (x2 == 0) ==> (x3 == 0) ==> (x1 == 0);\nloop invariant (x3 == 0) ==> (x1 == 0) ==> (x2 == 0);\nloop invariant (x3 == 0) ==> (x2 == 0) ==> (x1 == 0);\nloop invariant x1 == 0 ==> x2 == 0 ==> x3 == 0;\nloop invariant x1 == 0 ==> x3 == 0 ==> x2 == 0;\nloop invariant x2 == 0 ==> x1 == 0 ==> x3 == 0;\nloop invariant x2 == 0 ==> x3 == 0 ==> x1 == 0;\nloop invariant x3 == 0 ==> x1 == 0 ==> x2 == 0;\nloop invariant x3 == 0 ==> x2 == 0 ==> x1 == 0;\nloop invariant x1 == 0 ==> x2 == 0 ==> x3 == 0 ==> (x1 == 0 && x2 == 0 && x3 == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: 0 <= x1;\nloop invariant i2: 0 <= x2;\nloop invariant i3: 0 <= x3;\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i16: d1 >= 1;\nloop invariant i17: d2 >= 1;\nloop invariant i18: d3 >= 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i34: x1 == 0 ==> x2 == 0 ==> x3 == 0 ==> (x1 == 0 && x2 == 0 && x3 == 0);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= 2147483647; loop invariant 0 <= x2 <= 2147483647; loop invariant 0 <= x3 <= 2147483647; loop invariant 1 <= d1 <= 2147483647; loop invariant 1 <= d2 <= 2147483647; loop invariant 1 <= d3 <= 2147483647; loop invariant (c1 || c2) == (d1 == 1); loop invariant (c1 || c2) == (d2 == 1); loop invariant (c1 || c2) == (d3 == 1); loop invariant (x1 >= x2) ==> (x1 >= x3); loop invariant (x2 >= x1) ==> (x2 >= x3); loop invariant (x3 >= x1) ==> (x3 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 11,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 0 <= d1 <= unknown_uint();\nloop invariant 0 <= d2 <= unknown_uint();\nloop invariant 0 <= d3 <= unknown_uint();\nloop invariant c1=unknown_bool() ==> 0 <= c1 <= 1;\nloop invariant c2=unknown_bool() ==> 0 <= c2 <= 1;\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 <= unknown_uint() && x2 <= unknown_uint() && x3 <= unknown_uint());\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (d1 <= unknown_uint() && d2 <= unknown_uint() && d3 <= unknown_uint());\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (c1 <= 1 && c2 <= 1);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x2 >= x3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 1 && x2 >= 1 && x3 >= 1);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\n\n\n\n\n\nloop invariant i10: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\n\n\nloop invariant i13: (x1 > 0 && x2 > 0 && x3 > 0) ==> (c1 <= 1 && c2 <= 1);\n\n\nloop invariant i16: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 1 && x2 >= 1 && x3 >= 1);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= x2 <= x3;\nloop invariant d1 > 0 && d2 > 0 && d3 > 0;\nloop invariant c1 || c2;\nloop invariant d1 <= x1 && d2 <= x2 && d3 <= x3;\nloop invariant c1 ==> x1 >= d1;\nloop invariant c2 ==> x2 >= d2;\nloop invariant !c1 && !c2 ==> x3 >= d3;\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 && x2==0 && x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\nloop invariant i2: d1 > 0 && d2 > 0 && d3 > 0;\n\n\n\n\n\n\nloop invariant i9: (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint() ==> x1 >= 0;\nloop invariant 0 <= x2 <= unknown_uint() ==> x2 >= 0;\nloop invariant 0 <= x3 <= unknown_uint() ==> x3 >= 0;\nloop invariant 1 <= d1 <= unknown_uint() ==> d1 >= 1;\nloop invariant 1 <= d2 <= unknown_uint() ==> d2 >= 1;\nloop invariant 1 <= d3 <= unknown_uint() ==> d3 >= 1;\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> x1 > 0 && x2 > 0 && x3 > 0;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> x1 == unknown_uint() || x2 == unknown_uint() || x3 == unknown_uint();\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> x1 == unknown_uint() || x2 == unknown_uint() || x3 == unknown_uint() ==> x1 == 0 || x2 == 0 || x3 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 18: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: 0 <= x1 <= unknown_uint();\nloop invariant i2: 0 <= x2 <= unknown_uint();\nloop invariant i3: 0 <= x3 <= unknown_uint();\nloop invariant i4: d1 <= 1;\nloop invariant i5: d2 <= 1;\nloop invariant i6: d3 <= 1;\nloop invariant i7: 0 <= d1 <= unknown_uint();\nloop invariant i8: 0 <= d2 <= unknown_uint();\nloop invariant i9: 0 <= d3 <= unknown_uint();\nloop invariant i10: c1 == unknown_bool();\nloop invariant i11: c2 == unknown_bool();\nloop invariant i12: (x1 == 0) ==> (x2 == 0 || x3 == 0);\nloop invariant i13: (x2 == 0) ==> (x1 == 0 || x3 == 0);\nloop invariant i14: (x3 == 0) ==> (x1 == 0 || x2 == 0);\nloop invariant i15: 0 <= x1 <= x2 <= x3;\nloop invariant i16: d1 <= x1;\nloop invariant i17: d2 <= x2;\nloop invariant i18: d3 <= x3;\nloop invariant i19: 0 <= x1 <= (x1 + x2 + x3);\nloop invariant i20: 0 <= x2 <= (x1 + x2 + x3);\nloop invariant i21: 0 <= x3 <= (x1 + x2 + x3);\nloop invariant i22: 1 <= d1 <= (x1 + x2 + x3);\nloop invariant i23: 1 <= d2 <= (x1 + x2 + x3);\nloop invariant i24: 1 <= d3 <= (x1 + x2 + x3);\nloop invariant i25: 0 <= x1 <= 2147483647;\nloop invariant i26: 0 <= x2 <= 2147483647;\nloop invariant i27: 0 <= x3 <= 2147483647;\nloop invariant i28: 0 <= d1 <= 2147483647;\nloop invariant i29: 0 < x1 <= 100000;\nloop invariant i30: 0 < x2 <= 100000;\nloop invariant i31: 0 < x3 <= 100000;\nloop invariant i32: x1 >= x2 || x1 >= x3 || x2 >= x3;\nloop invariant i33: d1 >= 1;\nloop invariant i34: d2 >= 1;\nloop invariant i35: d3 >= 1;\nloop invariant i36: x1 == x1 - d1 || x2 == x2 - d2 || x3 == x3 - d3;\nloop invariant i37: x1 > 0 ==> c1 == unknown_bool();\nloop invariant i38: x2 > 0 ==> c2 == unknown_bool();\nloop invariant i39: !x1 > 0 ==> c1 == unknown_bool();\nloop invariant i40: !x2 > 0 ==> c2 == unknown_bool();\nloop invariant i41: 0 <= x1 <= 4294967295;\nloop invariant i42: 0 <= x2 <= 4294967295;\nloop invariant i43: 0 <= x3 <= 4294967295;\nloop invariant i44: 0 <= d1 <= 4294967295;\nloop invariant i45: 0 <= d2 <= 4294967295;\nloop invariant i46: 0 <= d3 <= 4294967295;\nloop invariant i47: \\old(x1) >= x1;\nloop invariant i48: \\old(x2) >= x2;\nloop invariant i49: \\old(x3) >= x3;\nloop invariant i50: \\old(d1) >= d1;\nloop invariant i51: \\old(d2) >= d2;\nloop invariant i52: \\old(d3) >= d3;\nloop invariant i53: x1 == \\old(x1) || c1;\nloop invariant i54: x2 == \\old(x2) || c2;\nloop invariant i55: x3 == \\old(x3) || !c1 && !c2;\nloop invariant i56: c1 == \\old(c1);\nloop invariant i57: c2 == \\old(c2);\nloop invariant i58: c1 == \\old(c1) || x1 > 0;\nloop invariant i59: c2 == \\old(c2) || x2 > 0;\nloop invariant i60: c1 == \\old(c1) || x3 > 0;\nloop invariant i61: c1 == \\old(c1) || x1 == 0;\nloop invariant i62: c2 == \\old(c2) || x2 == 0;\nloop invariant i63: c1 == \\old(c1) || x3 == 0;\nloop invariant i64: x1 == \\old(x1) || c1 ==> d1 <= x1;\nloop invariant i65: x2 == \\old(x2) || c2 ==> d2 <= x2;\nloop invariant i66: x3 == \\old(x3) || !c1 && !c2 ==> d3 <= x3;\nloop invariant i67: x1 == \\old(x1) || c1 ==> x1 >= x1 - d1;\nloop invariant i68: x2 == \\old(x2) || c2 ==> x2 >= x2 - d2;\nloop invariant i69: x3 == \\old(x3) || !c1 && !c2 ==> x3 >= x3 - d3;\nloop invariant i70: x1 == \\old(x1) || c1 ==> d1 <= 4294967295;\nloop invariant i71: x2 == \\old(x2) || c2 ==> d2 <= 4294967295;\nloop invariant i72: x3 == \\old(x3) || !c1 && !c2 ==> d3 <= 4294967295;\nloop invariant i73: x1 == \\old(x1) || c1 ==> x1 >= 0;\nloop invariant i74: x2 == \\old(x2) || c2 ==> x2 >= 0;\nloop invariant i75: x3 == \\old(x3) || !c1 && !c2 ==> x3 >= 0;\nloop invariant i76: x1 == \\old(x1) || c1 ==> x1 <= 4294967295;\nloop invariant i77: x2 == \\old(x2) || c2 ==> x2 <= 4294967295;\nloop invariant i78: x3 == \\old(x3) || !c1 && !c2 ==> x3 <= 4294967295;\nloop invariant i79: unknown_bool() == true ==> c1 == true;\nloop invariant i80: unknown_bool() == true ==> c2 == true;\nloop invariant i81: unknown_bool() == false ==> c1 == false;\nloop invariant i82: unknown_bool() == false ==> c2 == false;\nloop invariant i83: unknown_bool() == true ==> c1 == true || c2 == true;\nloop invariant i84: unknown_bool() == false ==> c1 == false && c2 == false;\nloop invariant i85: c1 == true ==> x1 == x1 - d1;\nloop invariant i86: c2 == true ==> x2 == x2 - d2;\nloop invariant i87: c1 == false && c2 == false ==> x3 == x3 - d3;\nloop invariant i88: c1 == true ==> x1 <= unknown_uint();\nloop invariant i89: c2 == true ==> x2 <= unknown_uint();\nloop invariant i90: c1 == false && c2 == false ==> x3 <= unknown_uint();\nloop invariant i91: c1 == true ==> x1 >= 0;\nloop invariant i92: c2 == true ==> x2 >= 0;\nloop invariant i93: c1 == false && c2 == false ==> x3 >= 0;\nloop invariant i94: c1 == true ==> d1 <= unknown_uint();\nloop invariant i95: c2 == true ==> d2 <= unknown_uint();\nloop invariant i96: c1 == false && c2 == false ==> d3 <= unknown_uint();\nloop invariant i97: c1 == true ==> d1 >= 0;\nloop invariant i98: c2 == true ==> d2 >= 0;\nloop invariant i99: c1 == false && c2 == false ==> d3 >= 0;\nloop invariant i100: c1 == true ==> unknown_bool() == true;\nloop invariant i101: c2 == true ==> unknown_bool() == true;\nloop invariant i102: c1 == false && c2 == false ==> unknown_bool() == false;\nloop invariant i103: c1 == true ==> unknown_bool() == true || unknown_bool() == false;\nloop invariant i104: c2 == true ==> unknown_bool() == true || unknown_bool() == false;\nloop invariant i105: c1 == false && c2 == false ==> unknown_bool() == false && unknown_bool() == false;\nloop invariant i106: c1 == true ==> unknown_bool() == true ==> c1 == true;\nloop invariant i107: c2 == true ==> unknown_bool() == true ==> c2 == true;\nloop invariant i108: c1 == false && c2 == false ==> unknown_bool() == false ==> c1 == false;\nloop invariant i109: c1 == false && c2 == false ==> unknown_bool() == false ==> c2 == false;\nloop invariant i110: c1 == true ==> unknown_bool() == true ==> c1 == true || c2 == true;\nloop invariant i111: c2 == true ==> unknown_bool() == true ==> c1 == true || c2 == true;\nloop invariant i112: c1 == false && c2 == false ==> unknown_bool() == false ==> c1 == false && c2 == false;\nloop invariant i113: c1 == true ==> unknown_bool() == true ==> c1 == true ==> x1 == x1 - d1;\nloop invariant i114: c2 == true ==> unknown_bool() == true ==> c2 == true ==> x2 == x2 - d2;\nloop invariant i115: c1 == false && c2 == false ==> unknown_bool() == false ==> c1 == false && c2 == false ==> x3 == x3 - d3;\nloop invariant i116: c1 == true ==> unknown_bool() == true ==> c1 == true ==> x1 <= unknown_uint();\nloop invariant i117: c2 == true ==> unknown_bool() == true ==> c2 == true ==> x2 <= unknown_uint();\nloop invariant i118: c1 == false && c2 == false ==> unknown_bool() == false ==> c1 == false && c2 == false ==> x3 <= unknown_uint();\nloop invariant i119: c1 == true ==> unknown_bool() == true ==> c1 == true ==> x1 >= 0;\nloop invariant i120: c2 == true ==> unknown_bool() == true ==> c2 == true ==> x2 >= 0;\nloop invariant i121: c1 == false && c2 == false ==> unknown_bool() == false ==> c1 == false && c2 == false ==> x3 >= 0;\nloop invariant i122: c1 == true ==> unknown_bool() == true ==> c1 == true ==> d1 <= unknown_uint();\nloop invariant i123: c2 == true ==> unknown_bool() == true ==> c2 == true ==> d2 <= unknown_uint();\nloop invariant i124: c1 == false && c2 == false ==> unknown_bool() == false ==> c1 == false && c2 == false ==> d3 <= unknown_uint();\nloop invariant i125: 1 <= d1 <= x1;\nloop invariant i126: 1 <= d2 <= x2;\nloop invariant i127: 1 <= d3 <= x3;\nloop invariant i128: 0 <= x1 <= (x1 + d1);\nloop invariant i129: 0 <= x2 <= (x2 + d2);\nloop invariant i130: 0 <= x3 <= (x3 + d3);\nloop invariant i131: (x1 + x2 + x3) >= (d1 + d2 + d3);\nloop invariant i132: (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3));\nloop invariant i133: (x1 + x2 + x3) == (x1 + x2 + x3);\nloop invariant i134: x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3);\nloop invariant i135: x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3);\nloop invariant i136: x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3));\nloop invariant i137: x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3);\nloop invariant i138: x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3);\nloop invariant i139: x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3));\nloop invariant i140: x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3);\nloop invariant i141: x1 >= 0 && x2 >= 0 && x3 >= 0;\nloop invariant i142: if (x1 > 0 && x2 > 0 && x3 > 0) ==> c1 || c2;\nloop invariant i143: if (x1 > 0 && x2 > 0 && x3 > 0) ==> c1 != c2;\nloop invariant i144: if (x1 > 0 && x2 > 0 && x3 > 0) ==> d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant i145: if (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 || d1 == 0) && (x2 >= d2 || d2 == 0) && (x3 >= d3 || d3 == 0);\nloop invariant i146: 0 <= x1;\nloop invariant i147: 0 <= x2;\nloop invariant i148: 0 <= x3;\nloop invariant i149: x1 >= d1 * (x1 > 0 ? 1 : 0);\nloop invariant i150: x2 >= d2 * (x2 > 0 ? 1 : 0);\nloop invariant i151: x3 >= d3 * (x3 > 0 ? 1 : 0);\nloop invariant i152: x1 >= (1 + (x1 > 0 ? (x1 - 1) * x1 / 2 : 0));\nloop invariant i153: x2 >= (1 + (x2 > 0 ? (x2 - 1) * x2 / 2 : 0));\nloop invariant i154: x3 >= (1 + (x3 > 0 ? (x3 - 1) * x3 / 2 : 0));\nloop invariant i155: x1 <= (1 + (x1 > 0 ? (x1 - 1) * x1 / 2 : 0)) + (d1 * (x1 > 0 ? 1 : 0));\nloop invariant i156: x2 <= (1 + (x2 > 0 ? (x2 - 1) * x2 / 2 : 0)) + (d2 * (x2 > 0 ? 1 : 0));\nloop invariant i157: x3 <= (1 + (x3 > 0 ? (x3 - 1) * x3 / 2 : 0)) + (d3 * (x3 > 0 ? 1 : 0));\nloop invariant i158: x1 <= (1 + (x1 > 0 ? (x1 - 1) * x1 / 2 : 0)) + (d1 * (x1 > 0 ? 1 : 0)) + (d2 * (x2 > 0 ? 1 : 0)) + (d3 * (x3 > 0 ? 1 : 0));\nloop invariant i159: x2 <= (1 + (x2 > 0 ? (x2 - 1) * x2 / 2 : 0)) + (d1 * (x1 > 0 ? 1 : 0)) + (d2 * (x2 > 0 ? 1 : 0)) + (d3 * (x3 > 0 ? 1 : 0));\nloop invariant i160: x3 <= (1 + (x3 > 0 ? (x3 - 1) * x3 / 2 : 0)) + (d1 * (x1 > 0 ? 1 : 0)) + (d2 * (x2 > 0 ? 1 : 0)) + (d3 * (x3 > 0 ? 1 : 0));\nloop invariant i161: c1 && c2 ==> d1 == d2;\nloop invariant i162: c1 && c2 ==> d1 == d3;\nloop invariant i163: c1 && c2 ==> d2 == d3;\nloop invariant i164: (x1 == 0) ==> (x2 == 0) ==> (x3 == 0);\nloop invariant i165: (x1 == 0) ==> (x3 == 0) ==> (x2 == 0);\nloop invariant i166: (x2 == 0) ==> (x1 == 0) ==> (x3 == 0);\nloop invariant i167: (x2 == 0) ==> (x3 == 0) ==> (x1 == 0);\nloop invariant i168: (x3 == 0) ==> (x1 == 0) ==> (x2 == 0);\nloop invariant i169: (x3 == 0) ==> (x2 == 0) ==> (x1 == 0);\nloop invariant i170: x1 == 0 ==> x2 == 0 ==> x3 == 0;\nloop invariant i171: x1 == 0 ==> x3 == 0 ==> x2 == 0;\nloop invariant i172: x2 == 0 ==> x1 == 0 ==> x3 == 0;\nloop invariant i173: x2 == 0 ==> x3 == 0 ==> x1 == 0;\nloop invariant i174: x3 == 0 ==> x1 == 0 ==> x2 == 0;\nloop invariant i175: x3 == 0 ==> x2 == 0 ==> x1 == 0;\nloop invariant i176: x1 == 0 ==> x2 == 0 ==> x3 == 0 ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant i177: 0 <= x1 <= 2147483647; loop invariant 0 <= x2 <= 2147483647; loop invariant 0 <= x3 <= 2147483647; loop invariant 1 <= d1 <= 2147483647; loop invariant 1 <= d2 <= 2147483647; loop invariant 1 <= d3 <= 2147483647; loop invariant (c1 || c2) == (d1 == 1); loop invariant (c1 || c2) == (d2 == 1); loop invariant (c1 || c2) == (d3 == 1); loop invariant (x1 >= x2) ==> (x1 >= x3); loop invariant (x2 >= x1) ==> (x2 >= x3); loop invariant (x3 >= x1) ==> (x3 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x2); loop invariant (c1 ==> (x1 >= 1)) ==> (x1 >= x3); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x1); loop invariant (c2 ==> (x2 >= 1)) ==> (x2 >= x3);\nloop invariant i178: c1=unknown_bool() ==> 0 <= c1 <= 1;\nloop invariant i179: c2=unknown_bool() ==> 0 <= c2 <= 1;\nloop invariant i180: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant i181: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant i182: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 <= unknown_uint() && x2 <= unknown_uint() && x3 <= unknown_uint());\nloop invariant i183: (x1 > 0 && x2 > 0 && x3 > 0) ==> (d1 <= unknown_uint() && d2 <= unknown_uint() && d3 <= unknown_uint());\nloop invariant i184: (x1 > 0 && x2 > 0 && x3 > 0) ==> (c1 <= 1 && c2 <= 1);\nloop invariant i185: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= x2 && x1 >= x3);\nloop invariant i186: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x2 >= x3);\nloop invariant i187: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 1 && x2 >= 1 && x3 >= 1);\nloop invariant i188: d1 > 0 && d2 > 0 && d3 > 0;\nloop invariant i189: c1 || c2;\nloop invariant i190: d1 <= x1 && d2 <= x2 && d3 <= x3;\nloop invariant i191: c1 ==> x1 >= d1;\nloop invariant i192: c2 ==> x2 >= d2;\nloop invariant i193: !c1 && !c2 ==> x3 >= d3;\nloop invariant i194: (x1==0 || x2==0 || x3==0) ==> (x1==0 && x2==0 && x3==0);\nloop invariant i195: (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant i196: 0 <= x1 <= unknown_uint() ==> x1 >= 0;\nloop invariant i197: 0 <= x2 <= unknown_uint() ==> x2 >= 0;\nloop invariant i198: 0 <= x3 <= unknown_uint() ==> x3 >= 0;\nloop invariant i199: 1 <= d1 <= unknown_uint() ==> d1 >= 1;\nloop invariant i200: 1 <= d2 <= unknown_uint() ==> d2 >= 1;\nloop invariant i201: 1 <= d3 <= unknown_uint() ==> d3 >= 1;\nloop invariant i202: (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> x1 > 0 && x2 > 0 && x3 > 0;\nloop invariant i203: x1 >= 0 && x2 >= 0 && x3 >= 0 ==> x1 == unknown_uint() || x2 == unknown_uint() || x3 == unknown_uint();\nloop invariant i204: x1 >= 0 && x2 >= 0 && x3 >= 0 ==> x1 == unknown_uint() || x2 == unknown_uint() || x3 == unknown_uint() ==> x1 == 0 || x2 == 0 || x3 == 0;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 114,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\nloop invariant i4: d1 <= 1;\nloop invariant i5: d2 <= 1;\nloop invariant i6: d3 <= 1;\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i19: 0 <= x1 <= (x1 + x2 + x3);\nloop invariant i20: 0 <= x2 <= (x1 + x2 + x3);\nloop invariant i21: 0 <= x3 <= (x1 + x2 + x3);\n\n\n\n\n\n\nloop invariant i28: 0 <= d1 <= 2147483647;\n\n\n\n\nloop invariant i33: d1 >= 1;\nloop invariant i34: d2 >= 1;\nloop invariant i35: d3 >= 1;\n\n\n\n\n\nloop invariant i41: 0 <= x1 <= 4294967295;\nloop invariant i42: 0 <= x2 <= 4294967295;\nloop invariant i43: 0 <= x3 <= 4294967295;\nloop invariant i44: 0 <= d1 <= 4294967295;\nloop invariant i45: 0 <= d2 <= 4294967295;\nloop invariant i46: 0 <= d3 <= 4294967295;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i128: 0 <= x1 <= (x1 + d1);\nloop invariant i129: 0 <= x2 <= (x2 + d2);\nloop invariant i130: 0 <= x3 <= (x3 + d3);\n\nloop invariant i132: (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3));\nloop invariant i133: (x1 + x2 + x3) == (x1 + x2 + x3);\n\nloop invariant i135: x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3);\nloop invariant i136: x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3));\nloop invariant i137: x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3);\nloop invariant i138: x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3);\nloop invariant i139: x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3));\nloop invariant i140: x1 == (x1 + d1) || x2 == (x2 + d2) || x3 == (x3 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3) || (x1 + x2 + x3) == (x1 + x2 + x3) || (x1 + x2 + x3) <= ((x1 + d1) + (x2 + d2) + (x3 + d3)) || (x1 + x2 + x3) >= (d1 + d2 + d3);\nloop invariant i141: x1 >= 0 && x2 >= 0 && x3 >= 0;\n\n\n\n\nloop invariant i146: 0 <= x1;\nloop invariant i147: 0 <= x2;\nloop invariant i148: 0 <= x3;\nloop invariant i149: x1 >= d1 * (x1 > 0 ? 1 : 0);\nloop invariant i150: x2 >= d2 * (x2 > 0 ? 1 : 0);\nloop invariant i151: x3 >= d3 * (x3 > 0 ? 1 : 0);\n\n\n\n\n\n\n\n\n\nloop invariant i161: c1 && c2 ==> d1 == d2;\nloop invariant i162: c1 && c2 ==> d1 == d3;\nloop invariant i163: c1 && c2 ==> d2 == d3;\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i176: x1 == 0 ==> x2 == 0 ==> x3 == 0 ==> (x1 == 0 && x2 == 0 && x3 == 0);\n\n\n\nloop invariant i180: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant i181: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\n\n\nloop invariant i184: (x1 > 0 && x2 > 0 && x3 > 0) ==> (c1 <= 1 && c2 <= 1);\n\n\nloop invariant i187: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 1 && x2 >= 1 && x3 >= 1);\nloop invariant i188: d1 > 0 && d2 > 0 && d3 > 0;\n\n\n\n\n\n\nloop invariant i195: (x1==0 || x2==0 || x3==0) ==> (x1==0 || x2==0 || x3==0);\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c"
        ],
        "skipped": [],
        "total": 97,
        "success_count": 83,
        "failure_count": 14,
        "success_rate": 0.8556701030927835
    }
}