{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  while (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant y >= t;\nloop invariant x <= 0 || y >= t;\nloop invariant x <= 0 || x <= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant y >= x;\nloop invariant unknown3() ==> t = y;\nloop invariant x > 0 ==> x <= y;\nloop invariant x <= 0 ==> y = t;\nloop invariant y >= t;\nloop invariant unknown3() ==> y >= x;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\n*/\n```",
            "```\n/*@\nloop invariant x = unknown1();\nloop invariant y = unknown2();\nloop invariant unknown3() ==> true;\nloop invariant (x > 0 ==> y = unknown2() + x);\nloop invariant (x <= 0 ==> y = unknown2());\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 2;\nloop invariant 0 <= y <= 2;\nloop invariant i = 0;\nloop invariant t = 0;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x >= t;\n*/\n```",
            "```\n/*@\nloop invariant y >= t;\nloop invariant (x > 0 ==> y = y + x);\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= x;\nloop invariant unknown3 ==> 0 <= y <= t;\nloop invariant unknown3 ==> x >= 0;\nloop invariant unknown3 ==> y >= t;\nloop invariant unknown3 ==> i >= 0;\nloop invariant unknown3 ==> i <= y;\n*/\n```",
            "```\n/*@\nloop invariant y >= t;\nloop invariant x > 0 ==> x <= y;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\n*/\n```",
            "```\n/*@\nloop invariant y >= t;\nloop invariant y >= x;\nloop invariant y <= y + x;\nloop invariant y >= y;\nloop invariant x >= y;\nloop invariant y >= t;\nloop invariant x >= y;\nloop invariant x <= x + y;\nloop invariant x >= x;\nloop invariant y >= t;\nloop invariant x >= y;\nloop invariant x <= x + y;\nloop invariant x >= x;\n*/\n```",
            "```\n/*@\nloop invariant ( x <= y );\nloop invariant ( y >= t );\nloop invariant ( y == t || y > t );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= max(y, x);\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 1;\nloop invariant y >= x;\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant y >= t;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 100000;\nloop invariant 0 <= y <= 100000;\nloop invariant x >= y;\nloop invariant x >= (y - 1) * y / 2;\nloop invariant y >= t;\nloop invariant x == y ==> x >= 0;\nloop invariant x != y ==> x > 0;\nloop invariant x == y ==> unknown3() ==> y >= t;\nloop invariant x != y ==> unknown3() ==> x >= y;\nloop invariant x == y ==> unknown3() ==> x >= (y - 1) * y / 2;\nloop invariant x != y ==> unknown3() ==> x >= (y - 1) * y / 2;\nloop invariant x == y ==> unknown3() ==> t >= 0;\nloop invariant x != y ==> unknown3() ==> t >= 0;\nloop invariant x == y ==> unknown3() ==> i >= 0;\nloop invariant x != y ==> unknown3() ==> i >= 0;\nloop invariant x == y ==> unknown3() ==> t == y;\nloop invariant x != y ==> unknown3() ==> t == y;\nloop invariant x == y ==> unknown3() ==> i == 0;\nloop invariant x != y ==> unknown3() ==> i == 0;\nloop invariant x == y ==> unknown3() ==> x == y;\nloop invariant x != y ==> unknown3() ==> x != y;\nloop invariant x == y ==> unknown3() ==> t == y;\nloop invariant x != y ==> unknown3() ==> t == y;\nloop invariant x == y ==> unknown3() ==> i == 0;\nloop invariant x != y ==> unknown3() ==> i == 0;\nloop invariant x == y ==> unknown3() ==> x == y;\nloop invariant x != y ==> unknown3() ==> x != y;\nloop invariant x == y ==> unknown3() ==> t == y;\nloop invariant x != y ==> unknown3() ==> t == y;\nloop invariant x == y ==> unknown3() ==> i == 0;\nloop invariant x != y ==> unknown3() ==> i == 0;\nloop invariant x == y ==> unknown3() ==> x == y;\nloop invariant x != y ==> unknown3() ==> x != y;\nloop invariant x == y ==> unknown3() ==> t == y;\nloop invariant x != y ==> unknown3() ==> t == y;\nloop invariant x == y ==> unknown3() ==> i == 0;\nloop invariant x != y ==> unknown3() ==> i == 0;\nloop invariant x == y ==> unknown3() ==> x == y;\nloop invariant x != y ==> unknown3() ==> x != y;\nloop invariant x == y ==> unknown3() ==> t == y;\nloop invariant x != y ==> unknown3() ==> t == y;\nloop invariant x == y ==> unknown3() ==> i == 0;\nloop invariant x != y ==> unknown3() ==> i == 0;\nloop invariant x == y ==> unknown3() ==> x == y;\nloop invariant x != y ==> unknown3() ==> x != y;\nloop invariant x == y ==> unknown3() ==> t == y;\nloop invariant x != y ==> unknown3() ==> t == y;\nloop invariant x == y ==> unknown3() ==> i == 0;\nloop invariant x != y ==> unknown3() ==> i == 0;\nloop invariant x == y ==> unknown3() ==> x == y;\nloop invariant x != y ==> unknown3() ==> x != y;\nloop invariant x == y ==> unknown3() ==> t == y;\nloop invariant x != y ==> unknown3() ==> t == y;\nloop invariant x == y ==> unknown3() ==> i == 0;\nloop invariant x != y ==> unknown3() ==> i == 0;\nloop invariant x == y ==> unknown3() ==> x == y;\nloop invariant x != y ==> unknown3() ==> x != y;\nloop invariant x == y ==> unknown3() ==> t == y;\nloop invariant x != y ==> unknown3() ==> t == y;\nloop invariant x == y ==> unknown3() ==> i == 0;\nloop invariant x != y ==> unknown3() ==> i == 0;\nloop invariant x == y ==> unknown3() ==> x == y;\nloop invariant x != y ==> unknown3() ==> x != y;\nloop invariant x == y ==> unknown3() ==> t == y;\nloop invariant x != y ==> unknown3() ==> t == y;\nloop invariant x == y ==> unknown3() ==> i == 0;\nloop invariant x != y ==> unknown3() ==> i == 0;\nloop invariant x == y ==> unknown3() ==> x == y;\nloop invariant x != y ==> unknown3() ==> x != y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y < 100000;\nloop invariant x >= 0;\nloop invariant y = t;\nloop invariant y < t ==> x >= t;\nloop invariant y >= t ==> x >= y;\nloop invariant unknown3() ==> x >= y;\nloop invariant !(unknown3()) ==> y < t;\n*/\n```",
            "```\n/*@\n\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant y >= t;\nloop invariant x <= 0 || y >= t;\nloop invariant x <= 0 || x <= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\nloop invariant i1: y >= t;\nloop invariant i2: x <= 0 || y >= t;\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\nloop invariant unknown3() ==> y <= y + x;\nloop invariant unknown3() ==> y >= y + x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n\n\n\n\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant y >= x;\nloop invariant unknown3() ==> t = y;\nloop invariant x > 0 ==> x <= y;\nloop invariant x <= 0 ==> y = t;\nloop invariant y >= t;\nloop invariant unknown3() ==> y >= x;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\nloop invariant unknown3() ==> x <= 0 ==> y = t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0 ==> x <= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n\n\n\n\nloop invariant i6: y >= t;\n\n\n\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant x = unknown1();\nloop invariant y = unknown2();\nloop invariant unknown3() ==> true;\nloop invariant (x > 0 ==> y = unknown2() + x);\nloop invariant (x <= 0 ==> y = unknown2());\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n\n\n\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2;\nloop invariant 0 <= y <= 2;\nloop invariant i = 0;\nloop invariant t = 0;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x >= t;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n\n\n\n\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant y >= t;\nloop invariant (x > 0 ==> y = y + x);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\nloop invariant i1: y >= t;\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= x;\nloop invariant unknown3 ==> 0 <= y <= t;\nloop invariant unknown3 ==> x >= 0;\nloop invariant unknown3 ==> y >= t;\nloop invariant unknown3 ==> i >= 0;\nloop invariant unknown3 ==> i <= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n\n\n\nloop invariant i5: unknown3 ==> y >= t;\nloop invariant i6: unknown3 ==> i >= 0;\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant y >= t;\nloop invariant x > 0 ==> x <= y;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\nloop invariant !unknown3() ==> y == t;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x > 0;\nloop invariant !unknown3() ==> x <= y;\nloop invariant !unknown3() ==> x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\nloop invariant i1: y >= t;\n\n\n\n\n\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant y >= t;\nloop invariant y >= x;\nloop invariant y <= y + x;\nloop invariant y >= y;\nloop invariant x >= y;\nloop invariant y >= t;\nloop invariant x >= y;\nloop invariant x <= x + y;\nloop invariant x >= x;\nloop invariant y >= t;\nloop invariant x >= y;\nloop invariant x <= x + y;\nloop invariant x >= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\nloop invariant i1: y >= t;\n\n\nloop invariant i4: y >= y;\n\n\nloop invariant i7: x >= x;\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant ( x <= y );\nloop invariant ( y >= t );\nloop invariant ( y == t || y > t );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\nloop invariant i2: ( y >= t );\nloop invariant i3: ( y == t || y > t );\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= max(y, x);\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 1;\nloop invariant y >= x;\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant y >= t;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n\n\n\nloop invariant i5: y >= t;\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 16,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 100000;\nloop invariant 0 <= y <= 100000;\nloop invariant x >= y;\nloop invariant x >= (y - 1) * y / 2;\nloop invariant y >= t;\nloop invariant x == y ==> x >= 0;\nloop invariant x != y ==> x > 0;\nloop invariant x == y ==> unknown3() ==> y >= t;\nloop invariant x != y ==> unknown3() ==> x >= y;\nloop invariant x == y ==> unknown3() ==> x >= (y - 1) * y / 2;\nloop invariant x != y ==> unknown3() ==> x >= (y - 1) * y / 2;\nloop invariant x == y ==> unknown3() ==> t >= 0;\nloop invariant x != y ==> unknown3() ==> t >= 0;\nloop invariant x == y ==> unknown3() ==> i >= 0;\nloop invariant x != y ==> unknown3() ==> i >= 0;\nloop invariant x == y ==> unknown3() ==> t == y;\nloop invariant x != y ==> unknown3() ==> t == y;\nloop invariant x == y ==> unknown3() ==> i == 0;\nloop invariant x != y ==> unknown3() ==> i == 0;\nloop invariant x == y ==> unknown3() ==> x == y;\nloop invariant x != y ==> unknown3() ==> x != y;\nloop invariant x == y ==> unknown3() ==> t == y;\nloop invariant x != y ==> unknown3() ==> t == y;\nloop invariant x == y ==> unknown3() ==> i == 0;\nloop invariant x != y ==> unknown3() ==> i == 0;\nloop invariant x == y ==> unknown3() ==> x == y;\nloop invariant x != y ==> unknown3() ==> x != y;\nloop invariant x == y ==> unknown3() ==> t == y;\nloop invariant x != y ==> unknown3() ==> t == y;\nloop invariant x == y ==> unknown3() ==> i == 0;\nloop invariant x != y ==> unknown3() ==> i == 0;\nloop invariant x == y ==> unknown3() ==> x == y;\nloop invariant x != y ==> unknown3() ==> x != y;\nloop invariant x == y ==> unknown3() ==> t == y;\nloop invariant x != y ==> unknown3() ==> t == y;\nloop invariant x == y ==> unknown3() ==> i == 0;\nloop invariant x != y ==> unknown3() ==> i == 0;\nloop invariant x == y ==> unknown3() ==> x == y;\nloop invariant x != y ==> unknown3() ==> x != y;\nloop invariant x == y ==> unknown3() ==> t == y;\nloop invariant x != y ==> unknown3() ==> t == y;\nloop invariant x == y ==> unknown3() ==> i == 0;\nloop invariant x != y ==> unknown3() ==> i == 0;\nloop invariant x == y ==> unknown3() ==> x == y;\nloop invariant x != y ==> unknown3() ==> x != y;\nloop invariant x == y ==> unknown3() ==> t == y;\nloop invariant x != y ==> unknown3() ==> t == y;\nloop invariant x == y ==> unknown3() ==> i == 0;\nloop invariant x != y ==> unknown3() ==> i == 0;\nloop invariant x == y ==> unknown3() ==> x == y;\nloop invariant x != y ==> unknown3() ==> x != y;\nloop invariant x == y ==> unknown3() ==> t == y;\nloop invariant x != y ==> unknown3() ==> t == y;\nloop invariant x == y ==> unknown3() ==> i == 0;\nloop invariant x != y ==> unknown3() ==> i == 0;\nloop invariant x == y ==> unknown3() ==> x == y;\nloop invariant x != y ==> unknown3() ==> x != y;\nloop invariant x == y ==> unknown3() ==> t == y;\nloop invariant x != y ==> unknown3() ==> t == y;\nloop invariant x == y ==> unknown3() ==> i == 0;\nloop invariant x != y ==> unknown3() ==> i == 0;\nloop invariant x == y ==> unknown3() ==> x == y;\nloop invariant x != y ==> unknown3() ==> x != y;\nloop invariant x == y ==> unknown3() ==> t == y;\nloop invariant x != y ==> unknown3() ==> t == y;\nloop invariant x == y ==> unknown3() ==> i == 0;\nloop invariant x != y ==> unknown3() ==> i == 0;\nloop invariant x == y ==> unknown3() ==> x == y;\nloop invariant x != y ==> unknown3() ==> x != y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n\n\n\nloop invariant i5: y >= t;\nloop invariant i6: x == y ==> x >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y < 100000;\nloop invariant x >= 0;\nloop invariant y = t;\nloop invariant y < t ==> x >= t;\nloop invariant y >= t ==> x >= y;\nloop invariant unknown3() ==> x >= y;\nloop invariant !(unknown3()) ==> y < t;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n\n\n\n\n\n\nloop invariant i8: y < t ==> x >= t;\n\n\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 26: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\nloop invariant i1: y >= t;\nloop invariant i2: x <= 0 || y >= t;\nloop invariant i3: x <= 0 || x <= y;\nloop invariant i4: 0 <= y <= 100000;\nloop invariant i5: x >= (1 + (y - 1) * y / 2);\nloop invariant i6: unknown3() ==> y == t;\nloop invariant i7: unknown3() ==> y >= t;\nloop invariant i8: unknown3() ==> y <= y + x;\nloop invariant i9: unknown3() ==> y >= y + x;\nloop invariant i10: 0 <= x <= y;\nloop invariant i11: y >= x;\nloop invariant i12: unknown3() ==> t = y;\nloop invariant i13: x > 0 ==> x <= y;\nloop invariant i14: x <= 0 ==> y = t;\nloop invariant i15: unknown3() ==> y >= x;\nloop invariant i16: unknown3() ==> x > 0 ==> x <= y;\nloop invariant i17: unknown3() ==> x <= 0 ==> y = t;\nloop invariant i18: x = unknown1();\nloop invariant i19: y = unknown2();\nloop invariant i20: unknown3() ==> true;\nloop invariant i21: (x > 0 ==> y = unknown2() + x);\nloop invariant i22: (x <= 0 ==> y = unknown2());\nloop invariant i23: 0 <= x <= 2;\nloop invariant i24: 0 <= y <= 2;\nloop invariant i25: i = 0;\nloop invariant i26: t = 0;\nloop invariant i27: unknown3() ==> x >= t;\nloop invariant i28: (x > 0 ==> y = y + x);\nloop invariant i29: x >= 0;\nloop invariant i30: unknown3 ==> 0 <= y <= t;\nloop invariant i31: unknown3 ==> x >= 0;\nloop invariant i32: unknown3 ==> y >= t;\nloop invariant i33: unknown3 ==> i >= 0;\nloop invariant i34: unknown3 ==> i <= y;\nloop invariant i35: unknown3() ==> x > 0;\nloop invariant i36: !unknown3() ==> x <= y;\nloop invariant i37: !unknown3() ==> x == 0;\nloop invariant i38: !unknown3() ==> y == t;\nloop invariant i39: y <= y + x;\nloop invariant i40: y >= y;\nloop invariant i41: x >= y;\nloop invariant i42: x <= x + y;\nloop invariant i43: x >= x;\nloop invariant i44: ( x <= y );\nloop invariant i45: ( y >= t );\nloop invariant i46: ( y == t || y > t );\nloop invariant i47: 0 <= y <= max(y, x);\nloop invariant i48: 0 <= x <= 1;\nloop invariant i49: 1 <= x <= 100000;\nloop invariant i50: x >= (y - 1) * y / 2;\nloop invariant i51: x == y ==> x >= 0;\nloop invariant i52: x != y ==> x > 0;\nloop invariant i53: x == y ==> unknown3() ==> y >= t;\nloop invariant i54: x != y ==> unknown3() ==> x >= y;\nloop invariant i55: x == y ==> unknown3() ==> x >= (y - 1) * y / 2;\nloop invariant i56: x != y ==> unknown3() ==> x >= (y - 1) * y / 2;\nloop invariant i57: x == y ==> unknown3() ==> t >= 0;\nloop invariant i58: x != y ==> unknown3() ==> t >= 0;\nloop invariant i59: x == y ==> unknown3() ==> i >= 0;\nloop invariant i60: x != y ==> unknown3() ==> i >= 0;\nloop invariant i61: x == y ==> unknown3() ==> t == y;\nloop invariant i62: x != y ==> unknown3() ==> t == y;\nloop invariant i63: x == y ==> unknown3() ==> i == 0;\nloop invariant i64: x != y ==> unknown3() ==> i == 0;\nloop invariant i65: x == y ==> unknown3() ==> x == y;\nloop invariant i66: x != y ==> unknown3() ==> x != y;\nloop invariant i67: y >= 0;\nloop invariant i68: y < 100000;\nloop invariant i69: y = t;\nloop invariant i70: y < t ==> x >= t;\nloop invariant i71: y >= t ==> x >= y;\nloop invariant i72: unknown3() ==> x >= y;\nloop invariant i73: !(unknown3()) ==> y < t;\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
        "combined_annotation_num_solver_calls": 48,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\nloop invariant i1: y >= t;\nloop invariant i2: x <= 0 || y >= t;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i32: unknown3 ==> y >= t;\nloop invariant i33: unknown3 ==> i >= 0;\n\n\n\n\n\n\nloop invariant i40: y >= y;\n\n\nloop invariant i43: x >= x;\n\nloop invariant i45: ( y >= t );\nloop invariant i46: ( y == t || y > t );\n\n\n\n\nloop invariant i51: x == y ==> x >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i70: y < t ==> x >= t;\n\n\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c"
        ],
        "skipped": [],
        "total": 122,
        "success_count": 101,
        "failure_count": 21,
        "success_rate": 0.8278688524590164
    }
}