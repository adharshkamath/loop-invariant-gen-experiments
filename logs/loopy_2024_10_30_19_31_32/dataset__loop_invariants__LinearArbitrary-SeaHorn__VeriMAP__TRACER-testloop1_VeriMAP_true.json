{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nvoid main(){\n\n  int NONDET;\n  int i,N;\n  int a;\n  int x;\n\n  x=0;\n  i=0;\n\n  if (NONDET > 0) a=1; else a=2;\n\n  while (i<N){\n    i=i+1;\n  }\n\n  {;\n//@ assert(!( x >0 ));\n}\n\nreturn;\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= N;\nloop invariant 0 <= i <= N;\nloop invariant x == i;\nloop invariant x <= N;\nloop invariant x <= i;\nloop invariant i <= N;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i == N;\nloop invariant i == N - 1;\nloop invariant i == N - 2;\nloop invariant i == N - 3;\nloop invariant i == N - 4;\nloop invariant i == N - 5;\nloop invariant i == N - 6;\nloop invariant i == N - 7;\nloop invariant i == N - 8;\nloop invariant i == N - 9;\nloop invariant i == N - 10;\nloop invariant i == N - 11;\nloop invariant i == N - 12;\nloop invariant i == N - 13;\nloop invariant i == N - 14;\nloop invariant i == N - 15;\nloop invariant i == N - 16;\nloop invariant i == N - 17;\nloop invariant i == N - 18;\nloop invariant i == N - 19;\nloop invariant i == N - 20;\nloop invariant i == N - 21;\nloop invariant i == N - 22;\nloop invariant i == N - 23;\nloop invariant i == N - 24;\nloop invariant i == N - 25;\nloop invariant i == N - 26;\nloop invariant i == N - 27;\nloop invariant i == N - 28;\nloop invariant i == N - 29;\nloop invariant i == N - 30;\nloop invariant i == N - 31;\nloop invariant i == N - 32;\nloop invariant i == N - 33;\nloop invariant i == N - 34;\nloop invariant i == N - 35;\nloop invariant i == N - 36;\nloop invariant i == N - 37;\nloop invariant i == N - 38;\nloop invariant i == N - 39;\nloop invariant i == N - 40;\nloop invariant i == N - 41;\nloop invariant i == N - 42;\nloop invariant i == N - 43;\nloop invariant i == N - 44;\nloop invariant i == N - 45;\nloop invariant i == N - 46;\nloop invariant i == N - 47;\nloop invariant i == N - 48;\nloop invariant i == N - 49;\nloop invariant i == N - 50;\nloop invariant i == N - 51;\nloop invariant i == N - 52;\nloop invariant i == N - 53;\nloop invariant i == N - 54;\nloop invariant i == N - 55;\nloop invariant i == N - 56;\nloop invariant i == N - 57;\nloop invariant i == N - 58;\nloop invariant i == N - 59;\nloop invariant i == N - 60;\nloop invariant i == N - 61;\nloop invariant i == N - 62;\nloop invariant i == N - 63;\nloop invariant i == N - 64;\nloop invariant i == N - 65;\nloop invariant i == N - 66;\nloop invariant i == N - 67;\nloop invariant i == N - 68;\nloop invariant i == N - 69;\nloop invariant i == N - 70;\nloop invariant i == N - 71;\nloop invariant i == N - 72;\nloop invariant i == N - 73;\nloop invariant i == N - 74;\nloop invariant i == N - 75;\nloop invariant i == N - 76;\nloop invariant i == N - 77;\nloop invariant i == N - 78;\nloop invariant i == N - 79;\nloop invariant i == N - 80;\nloop invariant i == N - 81;\nloop invariant i == N - 82;\nloop invariant i == N - 83;\nloop invariant i == N - 84;\nloop invariant i == N - 85;\nloop invariant i == N - 86;\nloop invariant i == N - 87;\nloop invariant i == N - 88;\nloop invariant i == N - 89;\nloop invariant i == N - 90;\nloop invariant i == N - 91;\nloop invariant i == N - 92;\nloop invariant i == N - 93;\nloop invariant i == N - 94;\nloop invariant i == N - 95;\nloop invariant i == N - 96;\nloop invariant i == N - 97;\nloop invariant i == N - 98;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= N;\nloop invariant x == i;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant NONDET in {1, 2};\nloop invariant a in {1, 2};\nloop invariant !(NONDET > 0 ==> a != 1);\nloop invariant !(NONDET <= 0 ==> a != 2);\nloop invariant !(a == 1 ==> !(NONDET > 0));\nloop invariant !(a == 2 ==> !(NONDET <= 0));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= N;\nloop invariant x == i * a;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= N;\nloop invariant !(NONDET > 0) ==> a == 2;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\n*/\n```",
            "```\n/*@\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i <= N + 1;\nloop invariant x = 0;\nloop invariant a = 1;\nloop invariant NONDET >= 0;\nloop invariant i == N ==> a == 1;\nloop invariant i != N ==> a == 2;\nloop invariant i == N ==> x == 0;\nloop invariant i != N ==> x == 0;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= N;\nloop invariant x == i;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= N;\nloop invariant x == i;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant x >= i;\nloop invariant x <= N;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x < N;\nloop invariant i >= 0 ==> x >= 0;\nloop invariant i <= N ==> x >= 0;\nloop invariant i < N ==> x <= N;\nloop invariant i >= 0 ==> x <= N;\nloop invariant i < N ==> x > 0;\nloop invariant i >= 0 ==> x > 0;\nloop invariant i <= N ==> x > 0;\nloop invariant i < N ==> x == 0;\nloop invariant i >= 0 ==> x == 0;\nloop invariant i <= N ==> x == 0;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= N;\nloop invariant a == 1 || a == 2;\nloop invariant x == i;\nloop invariant N >= 0;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant x == 0;\nloop invariant a == 1 || a == 2;\nloop invariant x == i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= N;\nloop invariant x == 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i == N;\nloop invariant x == 0;\nloop invariant a == 1 || a == 2;\nloop invariant i <= N ==> a == 1 || a == 2;\nloop invariant i <= N ==> x == 0;\nloop invariant i <= N ==> a == 1 || a == 2 ==> x == 0;\n*/\n```",
            "```\n/*@\nloop invariant i == 0;\nloop invariant N >= 0;\nloop invariant i < N;\nloop invariant i == N;\nloop invariant N >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= N;\nloop invariant x == (a * i);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= N;\nloop invariant x = 0;\n*/\n```",
            "```\n/*@\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant x <= 0;\nloop invariant a == 1 || a == 2;\nloop invariant i == 0 ==> x == 0;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= N;\nloop invariant 0 <= i <= N;\nloop invariant x == i;\nloop invariant x <= N;\nloop invariant x <= i;\nloop invariant i <= N;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nvoid main(){\n\n  int NONDET;\n  int i,N;\n  int a;\n  int x;\n\n  x=0;\n  i=0;\n\n  if (NONDET > 0) a=1; else a=2;\n\n  /*@\n\n\n\n\nloop invariant i5: x <= i;\n\n*/\nwhile (i<N){\n    i=i+1;\n  }\n\n  {;\n//@ assert(!( x >0 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 51,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i == N;\nloop invariant i == N - 1;\nloop invariant i == N - 2;\nloop invariant i == N - 3;\nloop invariant i == N - 4;\nloop invariant i == N - 5;\nloop invariant i == N - 6;\nloop invariant i == N - 7;\nloop invariant i == N - 8;\nloop invariant i == N - 9;\nloop invariant i == N - 10;\nloop invariant i == N - 11;\nloop invariant i == N - 12;\nloop invariant i == N - 13;\nloop invariant i == N - 14;\nloop invariant i == N - 15;\nloop invariant i == N - 16;\nloop invariant i == N - 17;\nloop invariant i == N - 18;\nloop invariant i == N - 19;\nloop invariant i == N - 20;\nloop invariant i == N - 21;\nloop invariant i == N - 22;\nloop invariant i == N - 23;\nloop invariant i == N - 24;\nloop invariant i == N - 25;\nloop invariant i == N - 26;\nloop invariant i == N - 27;\nloop invariant i == N - 28;\nloop invariant i == N - 29;\nloop invariant i == N - 30;\nloop invariant i == N - 31;\nloop invariant i == N - 32;\nloop invariant i == N - 33;\nloop invariant i == N - 34;\nloop invariant i == N - 35;\nloop invariant i == N - 36;\nloop invariant i == N - 37;\nloop invariant i == N - 38;\nloop invariant i == N - 39;\nloop invariant i == N - 40;\nloop invariant i == N - 41;\nloop invariant i == N - 42;\nloop invariant i == N - 43;\nloop invariant i == N - 44;\nloop invariant i == N - 45;\nloop invariant i == N - 46;\nloop invariant i == N - 47;\nloop invariant i == N - 48;\nloop invariant i == N - 49;\nloop invariant i == N - 50;\nloop invariant i == N - 51;\nloop invariant i == N - 52;\nloop invariant i == N - 53;\nloop invariant i == N - 54;\nloop invariant i == N - 55;\nloop invariant i == N - 56;\nloop invariant i == N - 57;\nloop invariant i == N - 58;\nloop invariant i == N - 59;\nloop invariant i == N - 60;\nloop invariant i == N - 61;\nloop invariant i == N - 62;\nloop invariant i == N - 63;\nloop invariant i == N - 64;\nloop invariant i == N - 65;\nloop invariant i == N - 66;\nloop invariant i == N - 67;\nloop invariant i == N - 68;\nloop invariant i == N - 69;\nloop invariant i == N - 70;\nloop invariant i == N - 71;\nloop invariant i == N - 72;\nloop invariant i == N - 73;\nloop invariant i == N - 74;\nloop invariant i == N - 75;\nloop invariant i == N - 76;\nloop invariant i == N - 77;\nloop invariant i == N - 78;\nloop invariant i == N - 79;\nloop invariant i == N - 80;\nloop invariant i == N - 81;\nloop invariant i == N - 82;\nloop invariant i == N - 83;\nloop invariant i == N - 84;\nloop invariant i == N - 85;\nloop invariant i == N - 86;\nloop invariant i == N - 87;\nloop invariant i == N - 88;\nloop invariant i == N - 89;\nloop invariant i == N - 90;\nloop invariant i == N - 91;\nloop invariant i == N - 92;\nloop invariant i == N - 93;\nloop invariant i == N - 94;\nloop invariant i == N - 95;\nloop invariant i == N - 96;\nloop invariant i == N - 97;\nloop invariant i == N - 98;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nvoid main(){\n\n  int NONDET;\n  int i,N;\n  int a;\n  int x;\n\n  x=0;\n  i=0;\n\n  if (NONDET > 0) a=1; else a=2;\n\n  /*@\n\nloop invariant i2: i >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (i<N){\n    i=i+1;\n  }\n\n  {;\n//@ assert(!( x >0 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= N;\nloop invariant x == i;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant NONDET in {1, 2};\nloop invariant a in {1, 2};\nloop invariant !(NONDET > 0 ==> a != 1);\nloop invariant !(NONDET <= 0 ==> a != 2);\nloop invariant !(a == 1 ==> !(NONDET > 0));\nloop invariant !(a == 2 ==> !(NONDET <= 0));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nvoid main(){\n\n  int NONDET;\n  int i,N;\n  int a;\n  int x;\n\n  x=0;\n  i=0;\n\n  if (NONDET > 0) a=1; else a=2;\n\n  /*@\n\n\nloop invariant i3: i >= 0;\n\nloop invariant i5: x >= 0;\n\n\n\n\n\n\n\n*/\nwhile (i<N){\n    i=i+1;\n  }\n\n  {;\n//@ assert(!( x >0 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= N;\nloop invariant x == i * a;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nvoid main(){\n\n  int NONDET;\n  int i,N;\n  int a;\n  int x;\n\n  x=0;\n  i=0;\n\n  if (NONDET > 0) a=1; else a=2;\n\n  /*@\n\n\n*/\nwhile (i<N){\n    i=i+1;\n  }\n\n  {;\n//@ assert(!( x >0 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= N;\nloop invariant !(NONDET > 0) ==> a == 2;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\nloop invariant !(NONDET > 0) ==> a == 1;\nloop invariant !(NONDET > 0) ==> x == 0;\nloop invariant !(NONDET > 0) ==> i == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nvoid main(){\n\n  int NONDET;\n  int i,N;\n  int a;\n  int x;\n\n  x=0;\n  i=0;\n\n  if (NONDET > 0) a=1; else a=2;\n\n  /*@\n\nloop invariant i2: !(NONDET > 0) ==> a == 2;\nloop invariant i3: !(NONDET > 0) ==> x == 0;\n\n\n*/\nwhile (i<N){\n    i=i+1;\n  }\n\n  {;\n//@ assert(!( x >0 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i <= N + 1;\nloop invariant x = 0;\nloop invariant a = 1;\nloop invariant NONDET >= 0;\nloop invariant i == N ==> a == 1;\nloop invariant i != N ==> a == 2;\nloop invariant i == N ==> x == 0;\nloop invariant i != N ==> x == 0;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\nloop invariant i != N ==> i == N - 1;\nloop invariant i == N ==> i == N;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nvoid main(){\n\n  int NONDET;\n  int i,N;\n  int a;\n  int x;\n\n  x=0;\n  i=0;\n\n  if (NONDET > 0) a=1; else a=2;\n\n  /*@\nloop invariant i1: i >= 0;\n\n\n\n\n\n\n\nloop invariant i9: i == N ==> x == 0;\nloop invariant i10: i != N ==> x == 0;\nloop invariant i11: i == N ==> i == N;\n\n*/\nwhile (i<N){\n    i=i+1;\n  }\n\n  {;\n//@ assert(!( x >0 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= N;\nloop invariant x == i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nvoid main(){\n\n  int NONDET;\n  int i,N;\n  int a;\n  int x;\n\n  x=0;\n  i=0;\n\n  if (NONDET > 0) a=1; else a=2;\n\n  /*@\n\n\n*/\nwhile (i<N){\n    i=i+1;\n  }\n\n  {;\n//@ assert(!( x >0 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= N;\nloop invariant x == i;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant x >= i;\nloop invariant x <= N;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x < N;\nloop invariant i >= 0 ==> x >= 0;\nloop invariant i <= N ==> x >= 0;\nloop invariant i < N ==> x <= N;\nloop invariant i >= 0 ==> x <= N;\nloop invariant i < N ==> x > 0;\nloop invariant i >= 0 ==> x > 0;\nloop invariant i <= N ==> x > 0;\nloop invariant i < N ==> x == 0;\nloop invariant i >= 0 ==> x == 0;\nloop invariant i <= N ==> x == 0;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\nloop invariant i < N ==> x == i;\nloop invariant i >= 0 ==> x == i;\nloop invariant i <= N ==> x == i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nvoid main(){\n\n  int NONDET;\n  int i,N;\n  int a;\n  int x;\n\n  x=0;\n  i=0;\n\n  if (NONDET > 0) a=1; else a=2;\n\n  /*@\n\n\nloop invariant i3: i >= 0;\n\n\n\n\n\n\nloop invariant i10: i < N ==> x < N;\nloop invariant i11: i >= 0 ==> x >= 0;\nloop invariant i12: i <= N ==> x >= 0;\nloop invariant i13: i < N ==> x <= N;\n\n\n\n\nloop invariant i18: i < N ==> x == 0;\nloop invariant i19: i >= 0 ==> x == 0;\nloop invariant i20: i <= N ==> x == 0;\n*/\nwhile (i<N){\n    i=i+1;\n  }\n\n  {;\n//@ assert(!( x >0 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= N;\nloop invariant a == 1 || a == 2;\nloop invariant x == i;\nloop invariant N >= 0;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant x == 0;\nloop invariant a == 1 || a == 2;\nloop invariant x == i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nvoid main(){\n\n  int NONDET;\n  int i,N;\n  int a;\n  int x;\n\n  x=0;\n  i=0;\n\n  if (NONDET > 0) a=1; else a=2;\n\n  /*@\n\nloop invariant i2: a == 1 || a == 2;\n\n\nloop invariant i5: i >= 0;\n\nloop invariant i7: x == 0;\n*/\nwhile (i<N){\n    i=i+1;\n  }\n\n  {;\n//@ assert(!( x >0 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= N;\nloop invariant x == 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nvoid main(){\n\n  int NONDET;\n  int i,N;\n  int a;\n  int x;\n\n  x=0;\n  i=0;\n\n  if (NONDET > 0) a=1; else a=2;\n\n  /*@\n\nloop invariant i2: x == 0;\n\nloop invariant i4: i >= 0;\n*/\nwhile (i<N){\n    i=i+1;\n  }\n\n  {;\n//@ assert(!( x >0 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= N;\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant i == N;\nloop invariant x == 0;\nloop invariant a == 1 || a == 2;\nloop invariant i <= N ==> a == 1 || a == 2;\nloop invariant i <= N ==> x == 0;\nloop invariant i <= N ==> a == 1 || a == 2 ==> x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nvoid main(){\n\n  int NONDET;\n  int i,N;\n  int a;\n  int x;\n\n  x=0;\n  i=0;\n\n  if (NONDET > 0) a=1; else a=2;\n\n  /*@\n\nloop invariant i2: i >= 0;\n\n\nloop invariant i5: x == 0;\nloop invariant i6: a == 1 || a == 2;\nloop invariant i7: i <= N ==> a == 1 || a == 2;\nloop invariant i8: i <= N ==> x == 0;\nloop invariant i9: i <= N ==> a == 1 || a == 2 ==> x == 0;\n*/\nwhile (i<N){\n    i=i+1;\n  }\n\n  {;\n//@ assert(!( x >0 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant i == 0;\nloop invariant N >= 0;\nloop invariant i < N;\nloop invariant i == N;\nloop invariant N >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nvoid main(){\n\n  int NONDET;\n  int i,N;\n  int a;\n  int x;\n\n  x=0;\n  i=0;\n\n  if (NONDET > 0) a=1; else a=2;\n\n  /*@\n\n\n\n\n*/\nwhile (i<N){\n    i=i+1;\n  }\n\n  {;\n//@ assert(!( x >0 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= N;\nloop invariant x == (a * i);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nvoid main(){\n\n  int NONDET;\n  int i,N;\n  int a;\n  int x;\n\n  x=0;\n  i=0;\n\n  if (NONDET > 0) a=1; else a=2;\n\n  /*@\n\n\n*/\nwhile (i<N){\n    i=i+1;\n  }\n\n  {;\n//@ assert(!( x >0 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= N;\nloop invariant x = 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nvoid main(){\n\n  int NONDET;\n  int i,N;\n  int a;\n  int x;\n\n  x=0;\n  i=0;\n\n  if (NONDET > 0) a=1; else a=2;\n\n  /*@\n\n\n*/\nwhile (i<N){\n    i=i+1;\n  }\n\n  {;\n//@ assert(!( x >0 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant i >= 0;\nloop invariant i <= N;\nloop invariant x <= 0;\nloop invariant a == 1 || a == 2;\nloop invariant i == 0 ==> x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nvoid main(){\n\n  int NONDET;\n  int i,N;\n  int a;\n  int x;\n\n  x=0;\n  i=0;\n\n  if (NONDET > 0) a=1; else a=2;\n\n  /*@\nloop invariant i1: i >= 0;\n\nloop invariant i3: x <= 0;\nloop invariant i4: a == 1 || a == 2;\nloop invariant i5: i == 0 ==> x == 0;\n*/\nwhile (i<N){\n    i=i+1;\n  }\n\n  {;\n//@ assert(!( x >0 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 128: unexpected token 'in'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nvoid main(){\n\n  int NONDET;\n  int i,N;\n  int a;\n  int x;\n\n  x=0;\n  i=0;\n\n  if (NONDET > 0) a=1; else a=2;\n\n  /*@\nloop invariant i1: 0 <= N;\nloop invariant i2: 0 <= i <= N;\nloop invariant i3: x == i;\nloop invariant i4: x <= N;\nloop invariant i5: x <= i;\nloop invariant i6: i <= N;\nloop invariant i7: i >= 0;\nloop invariant i8: i == N;\nloop invariant i9: i == N - 1;\nloop invariant i10: i == N - 2;\nloop invariant i11: i == N - 3;\nloop invariant i12: i == N - 4;\nloop invariant i13: i == N - 5;\nloop invariant i14: i == N - 6;\nloop invariant i15: i == N - 7;\nloop invariant i16: i == N - 8;\nloop invariant i17: i == N - 9;\nloop invariant i18: i == N - 10;\nloop invariant i19: i == N - 11;\nloop invariant i20: i == N - 12;\nloop invariant i21: i == N - 13;\nloop invariant i22: i == N - 14;\nloop invariant i23: i == N - 15;\nloop invariant i24: i == N - 16;\nloop invariant i25: i == N - 17;\nloop invariant i26: i == N - 18;\nloop invariant i27: i == N - 19;\nloop invariant i28: i == N - 20;\nloop invariant i29: i == N - 21;\nloop invariant i30: i == N - 22;\nloop invariant i31: i == N - 23;\nloop invariant i32: i == N - 24;\nloop invariant i33: i == N - 25;\nloop invariant i34: i == N - 26;\nloop invariant i35: i == N - 27;\nloop invariant i36: i == N - 28;\nloop invariant i37: i == N - 29;\nloop invariant i38: i == N - 30;\nloop invariant i39: i == N - 31;\nloop invariant i40: i == N - 32;\nloop invariant i41: i == N - 33;\nloop invariant i42: i == N - 34;\nloop invariant i43: i == N - 35;\nloop invariant i44: i == N - 36;\nloop invariant i45: i == N - 37;\nloop invariant i46: i == N - 38;\nloop invariant i47: i == N - 39;\nloop invariant i48: i == N - 40;\nloop invariant i49: i == N - 41;\nloop invariant i50: i == N - 42;\nloop invariant i51: i == N - 43;\nloop invariant i52: i == N - 44;\nloop invariant i53: i == N - 45;\nloop invariant i54: i == N - 46;\nloop invariant i55: i == N - 47;\nloop invariant i56: i == N - 48;\nloop invariant i57: i == N - 49;\nloop invariant i58: i == N - 50;\nloop invariant i59: i == N - 51;\nloop invariant i60: i == N - 52;\nloop invariant i61: i == N - 53;\nloop invariant i62: i == N - 54;\nloop invariant i63: i == N - 55;\nloop invariant i64: i == N - 56;\nloop invariant i65: i == N - 57;\nloop invariant i66: i == N - 58;\nloop invariant i67: i == N - 59;\nloop invariant i68: i == N - 60;\nloop invariant i69: i == N - 61;\nloop invariant i70: i == N - 62;\nloop invariant i71: i == N - 63;\nloop invariant i72: i == N - 64;\nloop invariant i73: i == N - 65;\nloop invariant i74: i == N - 66;\nloop invariant i75: i == N - 67;\nloop invariant i76: i == N - 68;\nloop invariant i77: i == N - 69;\nloop invariant i78: i == N - 70;\nloop invariant i79: i == N - 71;\nloop invariant i80: i == N - 72;\nloop invariant i81: i == N - 73;\nloop invariant i82: i == N - 74;\nloop invariant i83: i == N - 75;\nloop invariant i84: i == N - 76;\nloop invariant i85: i == N - 77;\nloop invariant i86: i == N - 78;\nloop invariant i87: i == N - 79;\nloop invariant i88: i == N - 80;\nloop invariant i89: i == N - 81;\nloop invariant i90: i == N - 82;\nloop invariant i91: i == N - 83;\nloop invariant i92: i == N - 84;\nloop invariant i93: i == N - 85;\nloop invariant i94: i == N - 86;\nloop invariant i95: i == N - 87;\nloop invariant i96: i == N - 88;\nloop invariant i97: i == N - 89;\nloop invariant i98: i == N - 90;\nloop invariant i99: i == N - 91;\nloop invariant i100: i == N - 92;\nloop invariant i101: i == N - 93;\nloop invariant i102: i == N - 94;\nloop invariant i103: i == N - 95;\nloop invariant i104: i == N - 96;\nloop invariant i105: i == N - 97;\nloop invariant i106: i == N - 98;\nloop invariant i107: x >= 0;\nloop invariant i108: NONDET in {1, 2};\nloop invariant i109: a in {1, 2};\nloop invariant i110: !(NONDET > 0 ==> a != 1);\nloop invariant i111: !(NONDET <= 0 ==> a != 2);\nloop invariant i112: !(a == 1 ==> !(NONDET > 0));\nloop invariant i113: !(a == 2 ==> !(NONDET <= 0));\nloop invariant i114: x == i * a;\nloop invariant i115: !(NONDET > 0) ==> a == 2;\nloop invariant i116: !(NONDET > 0) ==> x == 0;\nloop invariant i117: !(NONDET > 0) ==> i == 0;\nloop invariant i118: !(NONDET > 0) ==> a == 1;\nloop invariant i119: i <= N + 1;\nloop invariant i120: x = 0;\nloop invariant i121: a = 1;\nloop invariant i122: NONDET >= 0;\nloop invariant i123: i == N ==> a == 1;\nloop invariant i124: i != N ==> a == 2;\nloop invariant i125: i == N ==> x == 0;\nloop invariant i126: i != N ==> x == 0;\nloop invariant i127: i == N ==> i == N;\nloop invariant i128: i != N ==> i == N - 1;\nloop invariant i129: 1 <= i <= N;\nloop invariant i130: x >= i;\nloop invariant i131: i < N ==> x == i;\nloop invariant i132: i >= 0 ==> x == i;\nloop invariant i133: i <= N ==> x == i;\nloop invariant i134: i < N ==> x < N;\nloop invariant i135: i >= 0 ==> x >= 0;\nloop invariant i136: i <= N ==> x >= 0;\nloop invariant i137: i < N ==> x <= N;\nloop invariant i138: i >= 0 ==> x <= N;\nloop invariant i139: i < N ==> x > 0;\nloop invariant i140: i >= 0 ==> x > 0;\nloop invariant i141: i <= N ==> x > 0;\nloop invariant i142: i < N ==> x == 0;\nloop invariant i143: i >= 0 ==> x == 0;\nloop invariant i144: i <= N ==> x == 0;\nloop invariant i145: a == 1 || a == 2;\nloop invariant i146: N >= 0;\nloop invariant i147: x == 0;\nloop invariant i148: i <= N ==> a == 1 || a == 2;\nloop invariant i149: i <= N ==> a == 1 || a == 2 ==> x == 0;\nloop invariant i150: i == 0;\nloop invariant i151: i < N;\nloop invariant i152: x == (a * i);\nloop invariant i153: x <= 0;\nloop invariant i154: i == 0 ==> x == 0;\n*/\nwhile (i<N){\n    i=i+1;\n  }\n\n  {;\n//@ assert(!( x >0 ));\n}\n\nreturn;\n\n}",
        "combined_annotation_num_solver_calls": 66,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nvoid main(){\n\n  int NONDET;\n  int i,N;\n  int a;\n  int x;\n\n  x=0;\n  i=0;\n\n  if (NONDET > 0) a=1; else a=2;\n\n  /*@\n\n\n\n\nloop invariant i5: x <= i;\n\nloop invariant i7: i >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i107: x >= 0;\n\n\n\n\n\n\n\nloop invariant i115: !(NONDET > 0) ==> a == 2;\nloop invariant i116: !(NONDET > 0) ==> x == 0;\n\n\n\n\n\n\n\n\nloop invariant i125: i == N ==> x == 0;\nloop invariant i126: i != N ==> x == 0;\nloop invariant i127: i == N ==> i == N;\n\n\n\n\n\n\nloop invariant i134: i < N ==> x < N;\nloop invariant i135: i >= 0 ==> x >= 0;\nloop invariant i136: i <= N ==> x >= 0;\nloop invariant i137: i < N ==> x <= N;\n\n\n\n\nloop invariant i142: i < N ==> x == 0;\nloop invariant i143: i >= 0 ==> x == 0;\nloop invariant i144: i <= N ==> x == 0;\nloop invariant i145: a == 1 || a == 2;\n\nloop invariant i147: x == 0;\nloop invariant i148: i <= N ==> a == 1 || a == 2;\nloop invariant i149: i <= N ==> a == 1 || a == 2 ==> x == 0;\n\n\n\nloop invariant i153: x <= 0;\nloop invariant i154: i == 0 ==> x == 0;\n*/\nwhile (i<N){\n    i=i+1;\n  }\n\n  {;\n//@ assert(!( x >0 ));\n}\n\nreturn;\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c"
        ],
        "failure": [],
        "skipped": [],
        "total": 18,
        "success_count": 18,
        "failure_count": 0,
        "success_rate": 1.0
    }
}