{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n while(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= 2y;\nloop invariant 1 <= y <= 2x;\nloop invariant x >= y;\nloop invariant y >= 1;\nloop invariant x >= 1;\nloop invariant y >= 2;\nloop invariant x >= 3;\nloop invariant y >= 4;\nloop invariant x >= 5;\nloop invariant y >= 6;\nloop invariant x >= 7;\nloop invariant y >= 8;\nloop invariant x >= 9;\nloop invariant y >= 10;\nloop invariant x >= 11;\nloop invariant y >= 12;\nloop invariant x >= 13;\nloop invariant y >= 14;\nloop invariant x >= 15;\nloop invariant y >= 16;\nloop invariant x >= 17;\nloop invariant y >= 18;\nloop invariant x >= 19;\nloop invariant y >= 20;\nloop invariant x >= 21;\nloop invariant y >= 22;\nloop invariant x >= 23;\nloop invariant y >= 24;\nloop invariant x >= 25;\nloop invariant y >= 26;\nloop invariant x >= 27;\nloop invariant y >= 28;\nloop invariant x >= 29;\nloop invariant y >= 30;\nloop invariant x >= 31;\nloop invariant y >= 32;\nloop invariant x >= 33;\nloop invariant y >= 34;\nloop invariant x >= 35;\nloop invariant y >= 36;\nloop invariant x >= 37;\nloop invariant y >= 38;\nloop invariant x >= 39;\nloop invariant y >= 40;\nloop invariant x >= 41;\nloop invariant y >= 42;\nloop invariant x >= 43;\nloop invariant y >= 44;\nloop invariant x >= 45;\nloop invariant y >= 46;\nloop invariant x >= 47;\nloop invariant y >= 48;\nloop invariant x >= 49;\nloop invariant y >= 50;\nloop invariant x >= 51;\nloop invariant y >= 52;\nloop invariant x >= 53;\nloop invariant y >= 54;\nloop invariant x >= 55;\nloop invariant y >= 56;\nloop invariant x >= 57;\nloop invariant y >= 58;\nloop invariant x >= 59;\nloop invariant y >= 60;\nloop invariant x >= 61;\nloop invariant y >= 62;\nloop invariant x >= 63;\nloop invariant y >= 64;\nloop invariant x >= 65;\nloop invariant y >= 66;\nloop invariant x >= 67;\nloop invariant y >= 68;\nloop invariant x >= 69;\nloop invariant y >= 70;\nloop invariant x >= 71;\nloop invariant y >= 72;\nloop invariant x >= 73;\nloop invariant y >= 74;\nloop invariant x >= 75;\nloop invariant y >= 76;\nloop invariant x >= 77;\nloop invariant y >= 78;\nloop invariant x >= 79;\nloop invariant y >= 80;\nloop invariant x >= 81;\nloop invariant y >= 82;\nloop invariant x >= 83;\nloop invariant y >= 84;\nloop invariant x >= 85;\nloop invariant y >= 86;\nloop invariant x >= 87;\nloop invariant y >= 88;\nloop invariant x >= 89;\nloop invariant y >= 90;\nloop invariant x >= 91;\nloop invariant y >= 92;\nloop invariant x >= 93;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y; loop invariant y >= 1;\nloop invariant y <= x; loop invariant x >= y;\nloop invariant x >= y + t2; loop invariant y >= t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 2;\nloop invariant 0 <= y <= 2;\nloop invariant x >= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 1;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= y;\nloop invariant x >= y + (y - 1);\nloop invariant 1 <= x <= 2 * y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y;\nloop invariant x >= y;\nloop invariant x >= y - 1;\nloop invariant y >= x - y;\nloop invariant y >= x - y - 1;\nloop invariant y >= x - y - 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x == y;\nloop invariant y <= 100000;\nloop invariant x >= 1 + (y - 1) * y / 2;\nloop invariant y >= 1;\nloop invariant y == 1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 2;\nloop invariant 1 <= y <= 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 1;\nloop invariant 0 <= x <= 2 * y;\nloop invariant x <= 2 * y;\nloop invariant y >= 1;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= y;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\n*/\n```",
            "```\n/*@\nloop invariant x >= y;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant y <= 2;\nloop invariant x >= y + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant y >= 1;\nloop invariant x >= y;\nloop invariant x >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 < x <= y;\nloop invariant y <= 2*y;\nloop invariant x <= 2*y;\nloop invariant x + y <= 2*y;\nloop invariant y + y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= x;\nloop invariant x >= (1 + (y - 1) * y / 2) ==> y > 0 ==> x >= (y - 1) * y / 2;\nloop invariant x >= (1 + (y - 1) * y / 2) ==> y == 0 ==> x >= 1;\nloop invariant x >= (1 + (y - 1) * y / 2) ==> y > 1 ==> x >= (2 * y - 1) * y / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y;\nloop invariant x >= y;\nloop invariant y >= 1;\nloop invariant x >= 2*y - 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y; loop invariant x == y;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= y <= 2;\nloop invariant x == y;\nloop invariant y == x;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant y <= 2;\nloop invariant x <= 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant x == 1;\nloop invariant y == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 94,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2y;\nloop invariant 1 <= y <= 2x;\nloop invariant x >= y;\nloop invariant y >= 1;\nloop invariant x >= 1;\nloop invariant y >= 2;\nloop invariant x >= 3;\nloop invariant y >= 4;\nloop invariant x >= 5;\nloop invariant y >= 6;\nloop invariant x >= 7;\nloop invariant y >= 8;\nloop invariant x >= 9;\nloop invariant y >= 10;\nloop invariant x >= 11;\nloop invariant y >= 12;\nloop invariant x >= 13;\nloop invariant y >= 14;\nloop invariant x >= 15;\nloop invariant y >= 16;\nloop invariant x >= 17;\nloop invariant y >= 18;\nloop invariant x >= 19;\nloop invariant y >= 20;\nloop invariant x >= 21;\nloop invariant y >= 22;\nloop invariant x >= 23;\nloop invariant y >= 24;\nloop invariant x >= 25;\nloop invariant y >= 26;\nloop invariant x >= 27;\nloop invariant y >= 28;\nloop invariant x >= 29;\nloop invariant y >= 30;\nloop invariant x >= 31;\nloop invariant y >= 32;\nloop invariant x >= 33;\nloop invariant y >= 34;\nloop invariant x >= 35;\nloop invariant y >= 36;\nloop invariant x >= 37;\nloop invariant y >= 38;\nloop invariant x >= 39;\nloop invariant y >= 40;\nloop invariant x >= 41;\nloop invariant y >= 42;\nloop invariant x >= 43;\nloop invariant y >= 44;\nloop invariant x >= 45;\nloop invariant y >= 46;\nloop invariant x >= 47;\nloop invariant y >= 48;\nloop invariant x >= 49;\nloop invariant y >= 50;\nloop invariant x >= 51;\nloop invariant y >= 52;\nloop invariant x >= 53;\nloop invariant y >= 54;\nloop invariant x >= 55;\nloop invariant y >= 56;\nloop invariant x >= 57;\nloop invariant y >= 58;\nloop invariant x >= 59;\nloop invariant y >= 60;\nloop invariant x >= 61;\nloop invariant y >= 62;\nloop invariant x >= 63;\nloop invariant y >= 64;\nloop invariant x >= 65;\nloop invariant y >= 66;\nloop invariant x >= 67;\nloop invariant y >= 68;\nloop invariant x >= 69;\nloop invariant y >= 70;\nloop invariant x >= 71;\nloop invariant y >= 72;\nloop invariant x >= 73;\nloop invariant y >= 74;\nloop invariant x >= 75;\nloop invariant y >= 76;\nloop invariant x >= 77;\nloop invariant y >= 78;\nloop invariant x >= 79;\nloop invariant y >= 80;\nloop invariant x >= 81;\nloop invariant y >= 82;\nloop invariant x >= 83;\nloop invariant y >= 84;\nloop invariant x >= 85;\nloop invariant y >= 86;\nloop invariant x >= 87;\nloop invariant y >= 88;\nloop invariant x >= 89;\nloop invariant y >= 90;\nloop invariant x >= 91;\nloop invariant y >= 92;\nloop invariant x >= 93;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\n\n\nloop invariant i3: x >= y;\nloop invariant i4: y >= 1;\nloop invariant i5: x >= 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y; loop invariant y >= 1;\nloop invariant y <= x; loop invariant x >= y;\nloop invariant x >= y + t2; loop invariant y >= t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\nloop invariant i1: 0 <= y; loop invariant y >= 1;\nloop invariant i2: y <= x; loop invariant x >= y;\n\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2;\nloop invariant 0 <= y <= 2;\nloop invariant x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\n\n\nloop invariant i3: x >= y;\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 1;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= y;\nloop invariant x >= y + (y - 1);\nloop invariant 1 <= x <= 2 * y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\n\n\nloop invariant i3: x >= y;\n\nloop invariant i5: 1 <= x <= 2 * y;\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y;\nloop invariant x >= y;\nloop invariant x >= y - 1;\nloop invariant y >= x - y;\nloop invariant y >= x - y - 1;\nloop invariant y >= x - y - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\nloop invariant i1: 0 <= y;\nloop invariant i2: x >= y;\nloop invariant i3: x >= y - 1;\nloop invariant i4: y >= x - y;\nloop invariant i5: y >= x - y - 1;\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x == y;\nloop invariant y <= 100000;\nloop invariant x >= 1 + (y - 1) * y / 2;\nloop invariant y >= 1;\nloop invariant y == 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\nloop invariant i1: 0 <= x <= y;\nloop invariant i2: x == y;\n\n\nloop invariant i5: y >= 1;\n\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 2;\nloop invariant 1 <= y <= 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\n\n\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 1;\nloop invariant 0 <= x <= 2 * y;\nloop invariant x <= 2 * y;\nloop invariant y >= 1;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= y;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\nloop invariant x >= y - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\n\nloop invariant i2: 0 <= x <= 2 * y;\nloop invariant i3: x <= 2 * y;\nloop invariant i4: y >= 1;\nloop invariant i5: y >= 0;\nloop invariant i6: x >= 0;\nloop invariant i7: x >= y;\nloop invariant i8: x >= y - 1;\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x >= y;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant y <= 2;\nloop invariant x >= y + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\nloop invariant i1: x >= y;\nloop invariant i2: x >= 1;\nloop invariant i3: y >= 1;\n\n\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant y >= 1;\nloop invariant x >= y;\nloop invariant x >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\n\n\nloop invariant i3: y >= 1;\nloop invariant i4: x >= y;\nloop invariant i5: x >= 1;\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 < x <= y;\nloop invariant y <= 2*y;\nloop invariant x <= 2*y;\nloop invariant x + y <= 2*y;\nloop invariant y + y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\nloop invariant 2*y <= 2*y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\nloop invariant i1: 0 < x <= y;\nloop invariant i2: y <= 2*y;\nloop invariant i3: x <= 2*y;\nloop invariant i4: x + y <= 2*y;\nloop invariant i5: y + y <= 2*y;\nloop invariant i6: 2*y <= 2*y;\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= x;\nloop invariant x >= (1 + (y - 1) * y / 2) ==> y > 0 ==> x >= (y - 1) * y / 2;\nloop invariant x >= (1 + (y - 1) * y / 2) ==> y == 0 ==> x >= 1;\nloop invariant x >= (1 + (y - 1) * y / 2) ==> y > 1 ==> x >= (2 * y - 1) * y / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\nloop invariant i1: 0 <= y <= x;\nloop invariant i2: x >= (1 + (y - 1) * y / 2) ==> y > 0 ==> x >= (y - 1) * y / 2;\nloop invariant i3: x >= (1 + (y - 1) * y / 2) ==> y == 0 ==> x >= 1;\n\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y;\nloop invariant x >= y;\nloop invariant y >= 1;\nloop invariant x >= 2*y - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\nloop invariant i1: 0 <= y;\nloop invariant i2: x >= y;\nloop invariant i3: y >= 1;\n\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y; loop invariant x == y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\nloop invariant i1: 0 <= x <= y; loop invariant x == y;\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 1 <= y <= 2;\nloop invariant x == y;\nloop invariant y == x;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant y <= 2;\nloop invariant x <= 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant x == 1;\nloop invariant y == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\nloop invariant y == 1;\nloop invariant x == 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\n\nloop invariant i2: x == y;\nloop invariant i3: y == x;\nloop invariant i4: x >= y;\nloop invariant i5: y >= x;\nloop invariant i6: x >= 1;\nloop invariant i7: y >= 1;\n\n\n\n\n\n\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 13: unexpected token 'y'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\nloop invariant i1: 0 <= x <= 2y;\nloop invariant i2: 1 <= y <= 2x;\nloop invariant i3: x >= y;\nloop invariant i4: y >= 1;\nloop invariant i5: x >= 1;\nloop invariant i6: y >= 2;\nloop invariant i7: x >= 3;\nloop invariant i8: y >= 4;\nloop invariant i9: x >= 5;\nloop invariant i10: y >= 6;\nloop invariant i11: x >= 7;\nloop invariant i12: y >= 8;\nloop invariant i13: x >= 9;\nloop invariant i14: y >= 10;\nloop invariant i15: x >= 11;\nloop invariant i16: y >= 12;\nloop invariant i17: x >= 13;\nloop invariant i18: y >= 14;\nloop invariant i19: x >= 15;\nloop invariant i20: y >= 16;\nloop invariant i21: x >= 17;\nloop invariant i22: y >= 18;\nloop invariant i23: x >= 19;\nloop invariant i24: y >= 20;\nloop invariant i25: x >= 21;\nloop invariant i26: y >= 22;\nloop invariant i27: x >= 23;\nloop invariant i28: y >= 24;\nloop invariant i29: x >= 25;\nloop invariant i30: y >= 26;\nloop invariant i31: x >= 27;\nloop invariant i32: y >= 28;\nloop invariant i33: x >= 29;\nloop invariant i34: y >= 30;\nloop invariant i35: x >= 31;\nloop invariant i36: y >= 32;\nloop invariant i37: x >= 33;\nloop invariant i38: y >= 34;\nloop invariant i39: x >= 35;\nloop invariant i40: y >= 36;\nloop invariant i41: x >= 37;\nloop invariant i42: y >= 38;\nloop invariant i43: x >= 39;\nloop invariant i44: y >= 40;\nloop invariant i45: x >= 41;\nloop invariant i46: y >= 42;\nloop invariant i47: x >= 43;\nloop invariant i48: y >= 44;\nloop invariant i49: x >= 45;\nloop invariant i50: y >= 46;\nloop invariant i51: x >= 47;\nloop invariant i52: y >= 48;\nloop invariant i53: x >= 49;\nloop invariant i54: y >= 50;\nloop invariant i55: x >= 51;\nloop invariant i56: y >= 52;\nloop invariant i57: x >= 53;\nloop invariant i58: y >= 54;\nloop invariant i59: x >= 55;\nloop invariant i60: y >= 56;\nloop invariant i61: x >= 57;\nloop invariant i62: y >= 58;\nloop invariant i63: x >= 59;\nloop invariant i64: y >= 60;\nloop invariant i65: x >= 61;\nloop invariant i66: y >= 62;\nloop invariant i67: x >= 63;\nloop invariant i68: y >= 64;\nloop invariant i69: x >= 65;\nloop invariant i70: y >= 66;\nloop invariant i71: x >= 67;\nloop invariant i72: y >= 68;\nloop invariant i73: x >= 69;\nloop invariant i74: y >= 70;\nloop invariant i75: x >= 71;\nloop invariant i76: y >= 72;\nloop invariant i77: x >= 73;\nloop invariant i78: y >= 74;\nloop invariant i79: x >= 75;\nloop invariant i80: y >= 76;\nloop invariant i81: x >= 77;\nloop invariant i82: y >= 78;\nloop invariant i83: x >= 79;\nloop invariant i84: y >= 80;\nloop invariant i85: x >= 81;\nloop invariant i86: y >= 82;\nloop invariant i87: x >= 83;\nloop invariant i88: y >= 84;\nloop invariant i89: x >= 85;\nloop invariant i90: y >= 86;\nloop invariant i91: x >= 87;\nloop invariant i92: y >= 88;\nloop invariant i93: x >= 89;\nloop invariant i94: y >= 90;\nloop invariant i95: x >= 91;\nloop invariant i96: y >= 92;\nloop invariant i97: x >= 93;\nloop invariant i98: 0 <= y; loop invariant y >= 1;\nloop invariant i99: y <= x; loop invariant x >= y;\nloop invariant i100: x >= y + t2; loop invariant y >= t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2; loop invariant y >= t1 + t2; loop invariant x >= t1 + t2;\nloop invariant i101: 0 <= x <= 2;\nloop invariant i102: 0 <= y <= 2;\nloop invariant i103: 0 <= y <= 1;\nloop invariant i104: x >= (1 + (y - 1) * y / 2);\nloop invariant i105: x >= y + (y - 1);\nloop invariant i106: 1 <= x <= 2 * y;\nloop invariant i107: 0 <= y;\nloop invariant i108: x >= y - 1;\nloop invariant i109: y >= x - y;\nloop invariant i110: y >= x - y - 1;\nloop invariant i111: 0 <= x <= y;\nloop invariant i112: x == y;\nloop invariant i113: y <= 100000;\nloop invariant i114: x >= 1 + (y - 1) * y / 2;\nloop invariant i115: y == 1;\nloop invariant i116: 1 <= x <= 2;\nloop invariant i117: 1 <= y <= 2;\nloop invariant i118: 0 <= x <= 2 * y;\nloop invariant i119: x <= 2 * y;\nloop invariant i120: y >= 0;\nloop invariant i121: x >= 0;\nloop invariant i122: y <= 2;\nloop invariant i123: x >= y + 1;\nloop invariant i124: 0 <= y <= 100000;\nloop invariant i125: 0 < x <= y;\nloop invariant i126: y <= 2*y;\nloop invariant i127: x <= 2*y;\nloop invariant i128: x + y <= 2*y;\nloop invariant i129: y + y <= 2*y;\nloop invariant i130: 2*y <= 2*y;\nloop invariant i131: 0 <= y <= x;\nloop invariant i132: x >= (1 + (y - 1) * y / 2) ==> y > 0 ==> x >= (y - 1) * y / 2;\nloop invariant i133: x >= (1 + (y - 1) * y / 2) ==> y == 0 ==> x >= 1;\nloop invariant i134: x >= (1 + (y - 1) * y / 2) ==> y > 1 ==> x >= (2 * y - 1) * y / 2;\nloop invariant i135: x >= 2*y - 1;\nloop invariant i136: 0 <= x <= y; loop invariant x == y;\nloop invariant i137: y == x;\nloop invariant i138: y >= x;\nloop invariant i139: x <= 2;\nloop invariant i140: x == 2;\nloop invariant i141: x == 1;\nloop invariant i142: y == 2;\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
        "combined_annotation_num_solver_calls": 115,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\n\n\nloop invariant i3: x >= y;\nloop invariant i4: y >= 1;\nloop invariant i5: x >= 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i98: 0 <= y; loop invariant y >= 1;\nloop invariant i99: y <= x; loop invariant x >= y;\n\n\n\n\n\n\nloop invariant i106: 1 <= x <= 2 * y;\nloop invariant i107: 0 <= y;\nloop invariant i108: x >= y - 1;\nloop invariant i109: y >= x - y;\nloop invariant i110: y >= x - y - 1;\nloop invariant i111: 0 <= x <= y;\nloop invariant i112: x == y;\n\n\n\n\n\nloop invariant i118: 0 <= x <= 2 * y;\nloop invariant i119: x <= 2 * y;\nloop invariant i120: y >= 0;\nloop invariant i121: x >= 0;\n\n\n\nloop invariant i125: 0 < x <= y;\nloop invariant i126: y <= 2*y;\nloop invariant i127: x <= 2*y;\nloop invariant i128: x + y <= 2*y;\nloop invariant i129: y + y <= 2*y;\nloop invariant i130: 2*y <= 2*y;\nloop invariant i131: 0 <= y <= x;\nloop invariant i132: x >= (1 + (y - 1) * y / 2) ==> y > 0 ==> x >= (y - 1) * y / 2;\nloop invariant i133: x >= (1 + (y - 1) * y / 2) ==> y == 0 ==> x >= 1;\n\n\nloop invariant i136: 0 <= x <= y; loop invariant x == y;\nloop invariant i137: y == x;\nloop invariant i138: y >= x;\n\n\n\n\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c"
        ],
        "skipped": [],
        "total": 101,
        "success_count": 87,
        "failure_count": 14,
        "success_rate": 0.8613861386138614
    }
}