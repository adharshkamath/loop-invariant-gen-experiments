{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  while(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 1 <= sn;\nloop invariant sn == x * 1 || sn == 0;\nloop invariant loop1 == unknown_uint();\nloop invariant n1 == unknown_uint();\nloop invariant x >= 0;\nloop invariant sn >= 0;\nloop invariant loop1 >= 0;\nloop invariant n1 >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= 0;\nloop invariant x <= sn;\nloop invariant sn <= loop1;\nloop invariant sn <= n1;\nloop invariant x <= loop1;\nloop invariant x <= n1;\nloop invariant sn <= unknown_uint();\nloop invariant x <= unknown_uint();\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 1;\nloop invariant sn == x * 1 || sn == 0;\nloop invariant x == x;\nloop invariant sn == 1 || sn == 0;\nloop invariant sn == x * 1 || sn == 1;\nloop invariant x == x;\nloop invariant sn == 2 || sn == 1;\nloop invariant x == x;\nloop invariant sn == 3 || sn == 2;\nloop invariant x == x;\nloop invariant sn == 4 || sn == 3;\nloop invariant x == x;\nloop invariant sn == 5 || sn == 4;\nloop invariant x == x;\nloop invariant sn == 6 || sn == 5;\nloop invariant x == x;\nloop invariant sn == 7 || sn == 6;\nloop invariant x == x;\nloop invariant sn == 8 || sn == 7;\nloop invariant x == x;\nloop invariant sn == 9 || sn == 8;\nloop invariant x == x;\nloop invariant sn == 10 || sn == 9;\nloop invariant x == x;\nloop invariant sn == 11 || sn == 10;\nloop invariant x == x;\nloop invariant sn == 12 || sn == 11;\nloop invariant x == x;\nloop invariant sn == 13 || sn == 12;\nloop invariant x == x;\nloop invariant sn == 14 || sn == 13;\nloop invariant x == x;\nloop invariant sn == 15 || sn == 14;\nloop invariant x == x;\nloop invariant sn == 16 || sn == 15;\nloop invariant x == x;\nloop invariant sn == 17 || sn == 16;\nloop invariant x == x;\nloop invariant sn == 18 || sn == 17;\nloop invariant x == x;\nloop invariant sn == 19 || sn == 18;\nloop invariant x == x;\nloop invariant sn == 20 || sn == 19;\nloop invariant x == x;\nloop invariant sn == 21 || sn == 20;\nloop invariant x == x;\nloop invariant sn == 22 || sn == 21;\nloop invariant x == x;\nloop invariant sn == 23 || sn == 22;\nloop invariant x == x;\nloop invariant sn == 24 || sn == 23;\nloop invariant x == x;\nloop invariant sn == 25 || sn == 24;\nloop invariant x == x;\nloop invariant sn == 26 || sn == 25;\nloop invariant x == x;\nloop invariant sn == 27 || sn == 26;\nloop invariant x == x;\nloop invariant sn == 28 || sn == 27;\nloop invariant x == x;\nloop invariant sn == 29 || sn == 28;\nloop invariant x == x;\nloop invariant sn == 30 || sn == 29;\nloop invariant x == x;\nloop invariant sn == 31 || sn == 30;\nloop invariant x == x;\nloop invariant sn == 32 || sn == 31;\nloop invariant x == x;\nloop invariant sn == 33 || sn == 32;\nloop invariant x == x;\nloop invariant sn == 34 || sn == 33;\nloop invariant x == x;\nloop invariant sn == 35 || sn == 34;\nloop invariant x == x;\nloop invariant sn == 36 || sn == 35;\nloop invariant x == x;\nloop invariant sn == 37 || sn == 36;\nloop invariant x == x;\nloop invariant sn == 38 || sn == 37;\nloop invariant x == x;\nloop invariant sn == 39 || sn == 38;\nloop invariant x == x;\nloop invariant sn == 40 || sn == 39;\nloop invariant x == x;\nloop invariant sn == 41 || sn == 40;\nloop invariant x == x;\nloop invariant sn == 42 || sn == 41;\nloop invariant x == x;\nloop invariant sn == 43 || sn == 42;\nloop invariant x == x;\nloop invariant sn == 44 || sn == 43;\nloop invariant x == x;\nloop invariant sn == 45 || sn == 44;\nloop invariant x == x;\nloop invariant sn == 46 || sn == 45;\nloop invariant x == x;\nloop invariant sn == 47 || sn == 46;\nloop invariant x == x;\nloop invariant sn == 48 || sn == 47;\nloop invariant x == x;\nloop invariant sn == 49 || sn == 48;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= sn <= x * 1 || sn == 0;\nloop invariant x >= 0;\nloop invariant loop1 == 0;\nloop invariant n1 == 0;\nloop invariant unknown_uint() == loop1;\nloop invariant unknown_uint() == n1;\nloop invariant x <= sn;\n*/\n```",
            "```\n/*@\nloop invariant sn == 0 || sn == x;\nloop invariant 0 <= sn <= x;\nloop invariant x <= 2^31 - 1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= n1;\nloop invariant 0 <= sn <= n1;\nloop invariant sn <= x * 1;\nloop invariant sn == 0 || sn == x * 1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= sn <= n1;\nloop invariant 0 <= x <= loop1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= sn;\nloop invariant 0 <= x;\nloop invariant sn == x * 1;\nloop invariant sn == 0;\nloop invariant 1 <= loop1;\nloop invariant loop1 <= 4294967295;\nloop invariant 1 <= n1;\nloop invariant n1 <= 4294967295;\nloop invariant 0 <= x;\nloop invariant x <= 4294967295;\nloop invariant sn <= 4294967295;\nloop invariant sn >= 0;\nloop invariant x <= sn;\nloop invariant sn <= x * 1;\nloop invariant sn == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= sn <= x;\nloop invariant sn == x;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= loop1 <= n1;\nloop invariant 0 <= x <= loop1;\nloop invariant sn == x * 1 || sn == 0;\nloop invariant sn == 1 || sn == 0;\nloop invariant x == 0 || x > 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= sn <= n1;\nloop invariant x <= loop1;\nloop invariant sn == x + 1;\nloop invariant n1 >= x;\nloop invariant sn == x * 1 || sn == 0;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= sn;\nloop invariant sn <= sn + 1;\nloop invariant 0 <= x;\nloop invariant x <= x + 1;\nloop invariant sn == x * 1 || sn == 0;\n*/\n```",
            "```\n/*@\nloop invariant sn == x * 1 || sn == 0;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant x == sn;\nloop invariant 1 <= sn <= 2^32 - 1;\nloop invariant 0 <= x <= sn;\nloop invariant (x * 1) == sn;\nloop invariant sn >= 0;\nloop invariant sn <= 2^32 - 1;\nloop invariant x >= 0;\nloop invariant x <= 2^32 - 1;\nloop invariant sn == x * 1;\nloop invariant sn >= x * 1;\nloop invariant sn <= x * 1;\nloop invariant sn == 0 || sn >= x * 1;\nloop invariant sn == 0 || sn <= x * 1;\nloop invariant sn == 0 || (sn >= x * 1 && sn <= x * 1);\nloop invariant sn == 0 || sn == x * 1;\nloop invariant sn >= 0 || sn == x * 1;\nloop invariant sn <= 2^32 - 1 || sn == x * 1;\nloop invariant x >= 0 || x == sn;\nloop invariant x <= 2^32 - 1 || x == sn;\nloop invariant x == sn || x == 0;\nloop invariant x == sn || x == 1;\nloop invariant x == sn || x == 2^32 - 1;\nloop invariant x == sn || (x >= 0 && x <= 2^32 - 1);\nloop invariant x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn);\nloop invariant x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn && sn >= 0 && sn <= 2^32 - 1);\nloop invariant x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn && sn >= 0 && sn <= 2^32 - 1 && sn == x * 1);\nloop invariant x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn && sn >= 0 && sn <= 2^32 - 1 && sn == x * 1 && sn >= x * 1 && sn <= x * 1);\nloop invariant x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn && sn >= 0 && sn <= 2^32 - 1 && sn == x * 1 && sn >= x * 1 && sn <= x * 1 && sn == 0 || sn == x * 1);\nloop invariant x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn && sn >= 0 && sn <= 2^32 - 1 && sn == x * 1 && sn >= x * 1 && sn <= x * 1 && sn == 0 || sn == x * 1 && sn >= 0 && sn <= 2^32 - 1);\nloop invariant x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn && sn >= 0 && sn <= 2^32 - 1 && sn == x * 1 && sn >= x * 1 && sn <= x * 1 && sn == 0 || sn == x * 1 && sn >= 0 && sn <= 2^32 - 1 && sn >= 0 && sn <= 2^32 - 1);\nloop invariant x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn && sn >= 0 && sn <= 2^32 - 1 && sn == x * 1 && sn >= x * 1 && sn <= x * 1 && sn == 0 || sn == x * 1 && sn >= 0 && sn <= 2^32 - 1 && sn >= 0 && sn <= 2^32 - 1 && sn == x * 1);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= sn <= 2^32-1;\nloop invariant 0 <= x <= 2^32-1;\nloop invariant sn == x || sn == 0;\nloop invariant sn <= 2^32-1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= sn <= x * 1;\nloop invariant sn == x * 1 || sn == 0;\nloop invariant x >= 1;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 1 <= sn;\nloop invariant sn == x * 1 || sn == 0;\nloop invariant loop1 == unknown_uint();\nloop invariant n1 == unknown_uint();\nloop invariant x >= 0;\nloop invariant sn >= 0;\nloop invariant loop1 >= 0;\nloop invariant n1 >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= 0;\nloop invariant x <= sn;\nloop invariant sn <= loop1;\nloop invariant sn <= n1;\nloop invariant x <= loop1;\nloop invariant x <= n1;\nloop invariant sn <= unknown_uint();\nloop invariant x <= unknown_uint();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: 0 <= x;\n\nloop invariant i3: sn == x * 1 || sn == 0;\n\n\nloop invariant i6: x >= 0;\nloop invariant i7: sn >= 0;\nloop invariant i8: loop1 >= 0;\nloop invariant i9: n1 >= 0;\nloop invariant i10: sn <= x * 1;\n\nloop invariant i12: x <= sn;\n\n\n\n\n\n\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 50,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 1;\nloop invariant sn == x * 1 || sn == 0;\nloop invariant x == x;\nloop invariant sn == 1 || sn == 0;\nloop invariant sn == x * 1 || sn == 1;\nloop invariant x == x;\nloop invariant sn == 2 || sn == 1;\nloop invariant x == x;\nloop invariant sn == 3 || sn == 2;\nloop invariant x == x;\nloop invariant sn == 4 || sn == 3;\nloop invariant x == x;\nloop invariant sn == 5 || sn == 4;\nloop invariant x == x;\nloop invariant sn == 6 || sn == 5;\nloop invariant x == x;\nloop invariant sn == 7 || sn == 6;\nloop invariant x == x;\nloop invariant sn == 8 || sn == 7;\nloop invariant x == x;\nloop invariant sn == 9 || sn == 8;\nloop invariant x == x;\nloop invariant sn == 10 || sn == 9;\nloop invariant x == x;\nloop invariant sn == 11 || sn == 10;\nloop invariant x == x;\nloop invariant sn == 12 || sn == 11;\nloop invariant x == x;\nloop invariant sn == 13 || sn == 12;\nloop invariant x == x;\nloop invariant sn == 14 || sn == 13;\nloop invariant x == x;\nloop invariant sn == 15 || sn == 14;\nloop invariant x == x;\nloop invariant sn == 16 || sn == 15;\nloop invariant x == x;\nloop invariant sn == 17 || sn == 16;\nloop invariant x == x;\nloop invariant sn == 18 || sn == 17;\nloop invariant x == x;\nloop invariant sn == 19 || sn == 18;\nloop invariant x == x;\nloop invariant sn == 20 || sn == 19;\nloop invariant x == x;\nloop invariant sn == 21 || sn == 20;\nloop invariant x == x;\nloop invariant sn == 22 || sn == 21;\nloop invariant x == x;\nloop invariant sn == 23 || sn == 22;\nloop invariant x == x;\nloop invariant sn == 24 || sn == 23;\nloop invariant x == x;\nloop invariant sn == 25 || sn == 24;\nloop invariant x == x;\nloop invariant sn == 26 || sn == 25;\nloop invariant x == x;\nloop invariant sn == 27 || sn == 26;\nloop invariant x == x;\nloop invariant sn == 28 || sn == 27;\nloop invariant x == x;\nloop invariant sn == 29 || sn == 28;\nloop invariant x == x;\nloop invariant sn == 30 || sn == 29;\nloop invariant x == x;\nloop invariant sn == 31 || sn == 30;\nloop invariant x == x;\nloop invariant sn == 32 || sn == 31;\nloop invariant x == x;\nloop invariant sn == 33 || sn == 32;\nloop invariant x == x;\nloop invariant sn == 34 || sn == 33;\nloop invariant x == x;\nloop invariant sn == 35 || sn == 34;\nloop invariant x == x;\nloop invariant sn == 36 || sn == 35;\nloop invariant x == x;\nloop invariant sn == 37 || sn == 36;\nloop invariant x == x;\nloop invariant sn == 38 || sn == 37;\nloop invariant x == x;\nloop invariant sn == 39 || sn == 38;\nloop invariant x == x;\nloop invariant sn == 40 || sn == 39;\nloop invariant x == x;\nloop invariant sn == 41 || sn == 40;\nloop invariant x == x;\nloop invariant sn == 42 || sn == 41;\nloop invariant x == x;\nloop invariant sn == 43 || sn == 42;\nloop invariant x == x;\nloop invariant sn == 44 || sn == 43;\nloop invariant x == x;\nloop invariant sn == 45 || sn == 44;\nloop invariant x == x;\nloop invariant sn == 46 || sn == 45;\nloop invariant x == x;\nloop invariant sn == 47 || sn == 46;\nloop invariant x == x;\nloop invariant sn == 48 || sn == 47;\nloop invariant x == x;\nloop invariant sn == 49 || sn == 48;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\nloop invariant i2: sn == x * 1 || sn == 0;\nloop invariant i3: x == x;\n\nloop invariant i5: sn == x * 1 || sn == 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= sn <= x * 1 || sn == 0;\nloop invariant x >= 0;\nloop invariant loop1 == 0;\nloop invariant n1 == 0;\nloop invariant unknown_uint() == loop1;\nloop invariant unknown_uint() == n1;\nloop invariant x <= sn;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: 0 <= sn <= x * 1 || sn == 0;\nloop invariant i2: x >= 0;\n\n\n\n\nloop invariant i7: x <= sn;\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant sn == 0 || sn == x;\nloop invariant 0 <= sn <= x;\nloop invariant x <= 2^31 - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: sn == 0 || sn == x;\nloop invariant i2: 0 <= sn <= x;\n\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= n1;\nloop invariant 0 <= sn <= n1;\nloop invariant sn <= x * 1;\nloop invariant sn == 0 || sn == x * 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\n\nloop invariant i3: sn <= x * 1;\nloop invariant i4: sn == 0 || sn == x * 1;\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= sn <= n1;\nloop invariant 0 <= x <= loop1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\n\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= sn;\nloop invariant 0 <= x;\nloop invariant sn == x * 1;\nloop invariant sn == 0;\nloop invariant 1 <= loop1;\nloop invariant loop1 <= 4294967295;\nloop invariant 1 <= n1;\nloop invariant n1 <= 4294967295;\nloop invariant 0 <= x;\nloop invariant x <= 4294967295;\nloop invariant sn <= 4294967295;\nloop invariant sn >= 0;\nloop invariant x <= sn;\nloop invariant sn <= x * 1;\nloop invariant sn == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: 0 <= sn;\nloop invariant i2: 0 <= x;\nloop invariant i3: sn == x * 1;\n\n\nloop invariant i6: loop1 <= 4294967295;\n\nloop invariant i8: n1 <= 4294967295;\nloop invariant i9: x <= 4294967295;\nloop invariant i10: sn <= 4294967295;\nloop invariant i11: sn >= 0;\nloop invariant i12: x <= sn;\nloop invariant i13: sn <= x * 1;\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= sn <= x;\nloop invariant sn == x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: 0 <= sn <= x;\nloop invariant i2: sn == x;\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= loop1 <= n1;\nloop invariant 0 <= x <= loop1;\nloop invariant sn == x * 1 || sn == 0;\nloop invariant sn == 1 || sn == 0;\nloop invariant x == 0 || x > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\n\nloop invariant i3: sn == x * 1 || sn == 0;\n\nloop invariant i5: x == 0 || x > 0;\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= sn <= n1;\nloop invariant x <= loop1;\nloop invariant sn == x + 1;\nloop invariant n1 >= x;\nloop invariant sn == x * 1 || sn == 0;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\nloop invariant sn <= x * 1;\nloop invariant sn <= n1;\nloop invariant sn >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\n\n\n\nloop invariant i5: sn == x * 1 || sn == 0;\nloop invariant i6: sn >= 0;\nloop invariant i7: sn <= x * 1;\n\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= sn;\nloop invariant sn <= sn + 1;\nloop invariant 0 <= x;\nloop invariant x <= x + 1;\nloop invariant sn == x * 1 || sn == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\nloop invariant i2: sn <= sn + 1;\nloop invariant i3: 0 <= x;\nloop invariant i4: x <= x + 1;\nloop invariant i5: sn == x * 1 || sn == 0;\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant sn == x * 1 || sn == 0;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: sn == x * 1 || sn == 0;\nloop invariant i2: x >= 0;\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 15,
                "annotations": "```\n/*@\nloop invariant x == sn;\nloop invariant 1 <= sn <= 2^32 - 1;\nloop invariant 0 <= x <= sn;\nloop invariant (x * 1) == sn;\nloop invariant sn >= 0;\nloop invariant sn <= 2^32 - 1;\nloop invariant x >= 0;\nloop invariant x <= 2^32 - 1;\nloop invariant sn == x * 1;\nloop invariant sn >= x * 1;\nloop invariant sn <= x * 1;\nloop invariant sn == 0 || sn >= x * 1;\nloop invariant sn == 0 || sn <= x * 1;\nloop invariant sn == 0 || (sn >= x * 1 && sn <= x * 1);\nloop invariant sn == 0 || sn == x * 1;\nloop invariant sn >= 0 || sn == x * 1;\nloop invariant sn <= 2^32 - 1 || sn == x * 1;\nloop invariant x >= 0 || x == sn;\nloop invariant x <= 2^32 - 1 || x == sn;\nloop invariant x == sn || x == 0;\nloop invariant x == sn || x == 1;\nloop invariant x == sn || x == 2^32 - 1;\nloop invariant x == sn || (x >= 0 && x <= 2^32 - 1);\nloop invariant x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn);\nloop invariant x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn && sn >= 0 && sn <= 2^32 - 1);\nloop invariant x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn && sn >= 0 && sn <= 2^32 - 1 && sn == x * 1);\nloop invariant x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn && sn >= 0 && sn <= 2^32 - 1 && sn == x * 1 && sn >= x * 1 && sn <= x * 1);\nloop invariant x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn && sn >= 0 && sn <= 2^32 - 1 && sn == x * 1 && sn >= x * 1 && sn <= x * 1 && sn == 0 || sn == x * 1);\nloop invariant x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn && sn >= 0 && sn <= 2^32 - 1 && sn == x * 1 && sn >= x * 1 && sn <= x * 1 && sn == 0 || sn == x * 1 && sn >= 0 && sn <= 2^32 - 1);\nloop invariant x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn && sn >= 0 && sn <= 2^32 - 1 && sn == x * 1 && sn >= x * 1 && sn <= x * 1 && sn == 0 || sn == x * 1 && sn >= 0 && sn <= 2^32 - 1 && sn >= 0 && sn <= 2^32 - 1);\nloop invariant x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn && sn >= 0 && sn <= 2^32 - 1 && sn == x * 1 && sn >= x * 1 && sn <= x * 1 && sn == 0 || sn == x * 1 && sn >= 0 && sn <= 2^32 - 1 && sn >= 0 && sn <= 2^32 - 1 && sn == x * 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: x == sn;\n\nloop invariant i3: 0 <= x <= sn;\nloop invariant i4: (x * 1) == sn;\nloop invariant i5: sn >= 0;\n\nloop invariant i7: x >= 0;\n\nloop invariant i9: sn == x * 1;\nloop invariant i10: sn >= x * 1;\nloop invariant i11: sn <= x * 1;\nloop invariant i12: sn == 0 || sn >= x * 1;\nloop invariant i13: sn == 0 || sn <= x * 1;\nloop invariant i14: sn == 0 || (sn >= x * 1 && sn <= x * 1);\nloop invariant i15: sn == 0 || sn == x * 1;\nloop invariant i16: sn >= 0 || sn == x * 1;\n\nloop invariant i18: x >= 0 || x == sn;\n\nloop invariant i20: x == sn || x == 0;\nloop invariant i21: x == sn || x == 1;\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= sn <= 2^32-1;\nloop invariant 0 <= x <= 2^32-1;\nloop invariant sn == x || sn == 0;\nloop invariant sn <= 2^32-1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\n\nloop invariant i3: sn == x || sn == 0;\n\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= sn <= x * 1;\nloop invariant sn == x * 1 || sn == 0;\nloop invariant x >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\nloop invariant i2: sn == x * 1 || sn == 0;\n\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 18: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: 0 <= x;\nloop invariant i2: 1 <= sn;\nloop invariant i3: sn == x * 1 || sn == 0;\nloop invariant i4: loop1 == unknown_uint();\nloop invariant i5: n1 == unknown_uint();\nloop invariant i6: x >= 0;\nloop invariant i7: sn >= 0;\nloop invariant i8: loop1 >= 0;\nloop invariant i9: n1 >= 0;\nloop invariant i10: sn <= x * 1;\nloop invariant i11: sn <= 0;\nloop invariant i12: x <= sn;\nloop invariant i13: sn <= loop1;\nloop invariant i14: sn <= n1;\nloop invariant i15: x <= loop1;\nloop invariant i16: x <= n1;\nloop invariant i17: sn <= unknown_uint();\nloop invariant i18: x <= unknown_uint();\nloop invariant i19: 0 <= x <= 1;\nloop invariant i20: x == x;\nloop invariant i21: sn == 1 || sn == 0;\nloop invariant i22: sn == x * 1 || sn == 1;\nloop invariant i23: sn == 2 || sn == 1;\nloop invariant i24: sn == 3 || sn == 2;\nloop invariant i25: sn == 4 || sn == 3;\nloop invariant i26: sn == 5 || sn == 4;\nloop invariant i27: sn == 6 || sn == 5;\nloop invariant i28: sn == 7 || sn == 6;\nloop invariant i29: sn == 8 || sn == 7;\nloop invariant i30: sn == 9 || sn == 8;\nloop invariant i31: sn == 10 || sn == 9;\nloop invariant i32: sn == 11 || sn == 10;\nloop invariant i33: sn == 12 || sn == 11;\nloop invariant i34: sn == 13 || sn == 12;\nloop invariant i35: sn == 14 || sn == 13;\nloop invariant i36: sn == 15 || sn == 14;\nloop invariant i37: sn == 16 || sn == 15;\nloop invariant i38: sn == 17 || sn == 16;\nloop invariant i39: sn == 18 || sn == 17;\nloop invariant i40: sn == 19 || sn == 18;\nloop invariant i41: sn == 20 || sn == 19;\nloop invariant i42: sn == 21 || sn == 20;\nloop invariant i43: sn == 22 || sn == 21;\nloop invariant i44: sn == 23 || sn == 22;\nloop invariant i45: sn == 24 || sn == 23;\nloop invariant i46: sn == 25 || sn == 24;\nloop invariant i47: sn == 26 || sn == 25;\nloop invariant i48: sn == 27 || sn == 26;\nloop invariant i49: sn == 28 || sn == 27;\nloop invariant i50: sn == 29 || sn == 28;\nloop invariant i51: sn == 30 || sn == 29;\nloop invariant i52: sn == 31 || sn == 30;\nloop invariant i53: sn == 32 || sn == 31;\nloop invariant i54: sn == 33 || sn == 32;\nloop invariant i55: sn == 34 || sn == 33;\nloop invariant i56: sn == 35 || sn == 34;\nloop invariant i57: sn == 36 || sn == 35;\nloop invariant i58: sn == 37 || sn == 36;\nloop invariant i59: sn == 38 || sn == 37;\nloop invariant i60: sn == 39 || sn == 38;\nloop invariant i61: sn == 40 || sn == 39;\nloop invariant i62: sn == 41 || sn == 40;\nloop invariant i63: sn == 42 || sn == 41;\nloop invariant i64: sn == 43 || sn == 42;\nloop invariant i65: sn == 44 || sn == 43;\nloop invariant i66: sn == 45 || sn == 44;\nloop invariant i67: sn == 46 || sn == 45;\nloop invariant i68: sn == 47 || sn == 46;\nloop invariant i69: sn == 48 || sn == 47;\nloop invariant i70: sn == 49 || sn == 48;\nloop invariant i71: 0 <= sn <= x * 1 || sn == 0;\nloop invariant i72: loop1 == 0;\nloop invariant i73: n1 == 0;\nloop invariant i74: unknown_uint() == loop1;\nloop invariant i75: unknown_uint() == n1;\nloop invariant i76: sn == 0 || sn == x;\nloop invariant i77: 0 <= sn <= x;\nloop invariant i78: x <= 2^31 - 1;\nloop invariant i79: 1 <= x <= n1;\nloop invariant i80: 0 <= sn <= n1;\nloop invariant i81: sn == 0 || sn == x * 1;\nloop invariant i82: 1 <= sn <= n1;\nloop invariant i83: 0 <= x <= loop1;\nloop invariant i84: 0 <= sn;\nloop invariant i85: sn == x * 1;\nloop invariant i86: sn == 0;\nloop invariant i87: 1 <= loop1;\nloop invariant i88: loop1 <= 4294967295;\nloop invariant i89: 1 <= n1;\nloop invariant i90: n1 <= 4294967295;\nloop invariant i91: x <= 4294967295;\nloop invariant i92: sn <= 4294967295;\nloop invariant i93: sn == x;\nloop invariant i94: 1 <= loop1 <= n1;\nloop invariant i95: x == 0 || x > 0;\nloop invariant i96: sn == x + 1;\nloop invariant i97: n1 >= x;\nloop invariant i98: sn <= sn + 1;\nloop invariant i99: x <= x + 1;\nloop invariant i100: x == sn;\nloop invariant i101: 1 <= sn <= 2^32 - 1;\nloop invariant i102: 0 <= x <= sn;\nloop invariant i103: (x * 1) == sn;\nloop invariant i104: sn <= 2^32 - 1;\nloop invariant i105: x <= 2^32 - 1;\nloop invariant i106: sn >= x * 1;\nloop invariant i107: sn == 0 || sn >= x * 1;\nloop invariant i108: sn == 0 || sn <= x * 1;\nloop invariant i109: sn == 0 || (sn >= x * 1 && sn <= x * 1);\nloop invariant i110: sn >= 0 || sn == x * 1;\nloop invariant i111: sn <= 2^32 - 1 || sn == x * 1;\nloop invariant i112: x >= 0 || x == sn;\nloop invariant i113: x <= 2^32 - 1 || x == sn;\nloop invariant i114: x == sn || x == 0;\nloop invariant i115: x == sn || x == 1;\nloop invariant i116: x == sn || x == 2^32 - 1;\nloop invariant i117: x == sn || (x >= 0 && x <= 2^32 - 1);\nloop invariant i118: x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn);\nloop invariant i119: x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn && sn >= 0 && sn <= 2^32 - 1);\nloop invariant i120: x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn && sn >= 0 && sn <= 2^32 - 1 && sn == x * 1);\nloop invariant i121: x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn && sn >= 0 && sn <= 2^32 - 1 && sn == x * 1 && sn >= x * 1 && sn <= x * 1);\nloop invariant i122: x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn && sn >= 0 && sn <= 2^32 - 1 && sn == x * 1 && sn >= x * 1 && sn <= x * 1 && sn == 0 || sn == x * 1);\nloop invariant i123: x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn && sn >= 0 && sn <= 2^32 - 1 && sn == x * 1 && sn >= x * 1 && sn <= x * 1 && sn == 0 || sn == x * 1 && sn >= 0 && sn <= 2^32 - 1);\nloop invariant i124: x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn && sn >= 0 && sn <= 2^32 - 1 && sn == x * 1 && sn >= x * 1 && sn <= x * 1 && sn == 0 || sn == x * 1 && sn >= 0 && sn <= 2^32 - 1 && sn >= 0 && sn <= 2^32 - 1);\nloop invariant i125: x == sn || (x >= 0 && x <= 2^32 - 1 && x == sn && sn >= 0 && sn <= 2^32 - 1 && sn == x * 1 && sn >= x * 1 && sn <= x * 1 && sn == 0 || sn == x * 1 && sn >= 0 && sn <= 2^32 - 1 && sn >= 0 && sn <= 2^32 - 1 && sn == x * 1);\nloop invariant i126: 1 <= sn <= 2^32-1;\nloop invariant i127: 0 <= x <= 2^32-1;\nloop invariant i128: sn == x || sn == 0;\nloop invariant i129: sn <= 2^32-1;\nloop invariant i130: 1 <= sn <= x * 1;\nloop invariant i131: x >= 1;\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
        "combined_annotation_num_solver_calls": 85,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: 0 <= x;\n\nloop invariant i3: sn == x * 1 || sn == 0;\n\n\nloop invariant i6: x >= 0;\nloop invariant i7: sn >= 0;\nloop invariant i8: loop1 >= 0;\nloop invariant i9: n1 >= 0;\nloop invariant i10: sn <= x * 1;\n\nloop invariant i12: x <= sn;\n\n\n\n\n\n\n\nloop invariant i20: x == x;\n\nloop invariant i22: sn == x * 1 || sn == 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i71: 0 <= sn <= x * 1 || sn == 0;\n\n\n\n\nloop invariant i76: sn == 0 || sn == x;\nloop invariant i77: 0 <= sn <= x;\n\n\n\nloop invariant i81: sn == 0 || sn == x * 1;\n\n\nloop invariant i84: 0 <= sn;\nloop invariant i85: sn == x * 1;\n\n\nloop invariant i88: loop1 <= 4294967295;\n\nloop invariant i90: n1 <= 4294967295;\nloop invariant i91: x <= 4294967295;\nloop invariant i92: sn <= 4294967295;\nloop invariant i93: sn == x;\n\nloop invariant i95: x == 0 || x > 0;\n\n\nloop invariant i98: sn <= sn + 1;\nloop invariant i99: x <= x + 1;\nloop invariant i100: x == sn;\n\nloop invariant i102: 0 <= x <= sn;\nloop invariant i103: (x * 1) == sn;\n\n\nloop invariant i106: sn >= x * 1;\nloop invariant i107: sn == 0 || sn >= x * 1;\nloop invariant i108: sn == 0 || sn <= x * 1;\nloop invariant i109: sn == 0 || (sn >= x * 1 && sn <= x * 1);\nloop invariant i110: sn >= 0 || sn == x * 1;\n\nloop invariant i112: x >= 0 || x == sn;\n\nloop invariant i114: x == sn || x == 0;\nloop invariant i115: x == sn || x == 1;\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i128: sn == x || sn == 0;\n\n\n\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c"
        ],
        "skipped": [],
        "total": 91,
        "success_count": 77,
        "failure_count": 14,
        "success_rate": 0.8461538461538461
    }
}