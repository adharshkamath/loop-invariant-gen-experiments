{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n   int n = unknown1();\n   int flag = unknown1();\n\n   if(n>=0){\n   int k = 1;\n   if(flag) {\n\tk = unknown1();\n\tif(k>=0) ; else return 0;\n   }\n   int i = 0, j = 0;\n   while(i <= n) {\n     i++;\n     j+=i;\n   }\n   int z = k + i + j;\n   {;\n//@ assert(z > 2*n);\n}\n\n   }\n   return 0;\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant 0 <= z <= 2*n;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n;\nloop invariant 0 <= flag;\nloop invariant flag ==> 0 <= k;\nloop invariant flag ==> k >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= n;\nloop invariant j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant z > (2 * n) ==> (flag ==> (k + i + j > (2 * n)));\nloop invariant z <= (k + i + j) ==> (flag ==> (k + i + j <= (k + i + j)));\nloop invariant z == (k + i + j) ==> (flag ==> (k + i + j == (k + i + j)));\nloop invariant z >= (k + i + j) ==> (flag ==> (k + i + j >= (k + i + j)));\nloop invariant z < (k + i + j) ==> (flag ==> (k + i + j < (k + i + j)));\nloop invariant z == (k + i + j) ==> (flag ==> (k + i + j == (k + i + j)));\nloop invariant z >= (k + i + j) ==> (flag ==> (k + i + j >= (k + i + j)));\nloop invariant z <= (k + i + j) ==> (flag ==> (k + i + j <= (k + i + j)));\nloop invariant z == (k + i + j) ==> (flag ==> (k + i + j == (k + i + j)));\nloop invariant z >= (k + i + j) ==> (flag ==> (k + i + j >= (k + i + j)));\nloop invariant z <= (k + i + j) ==> (flag ==> (k + i + j <= (k + i + j)));\nloop invariant z == (k + i + j) ==> (flag ==> (k + i + j == (k + i + j)));\nloop invariant z >= (k + i + j) ==> (flag ==> (k + i + j >= (k + i + j)));\nloop invariant z <= (k + i + j) ==> (flag ==> (k + i + j <= (k + i + j)));\nloop invariant z == (k + i + j) ==> (flag ==> (k + i + j == (k + i + j)));\nloop invariant z >= (k + i + j) ==> (flag ==> (k + i + j >= (k + i + j)));\nloop invariant z <= (k + i + j) ==> (flag ==> (k + i + j <= (k + i + j)));\nloop invariant z == (k + i + j) ==> (flag ==> (k + i + j == (k + i + j)));\nloop invariant z >= (k + i + j) ==> (flag ==> (k + i + j >= (k + i + j)));\nloop invariant z <= (k + i + j) ==> (flag ==> (k + i + j <= (k + i + j)));\nloop invariant z == (k + i + j) ==> (flag ==> (k + i + j == (k + i + j)));\nloop invariant z >= (k + i + j) ==> (flag ==> (k + i + j >= (k + i + j)));\nloop invariant z <= (k + i + j) ==> (flag ==> (k + i + j <= (k + i + j)));\nloop invariant z == (k + i + j) ==> (flag ==> (k + i + j == (k + i + j)));\nloop invariant z >= (k + i + j) ==> (flag ==> (k + i + j >= (k + i + j)));\nloop invariant z <= (k + i + j) ==> (flag ==> (k + i + j <= (k + i + j)));\nloop invariant z == (k + i + j) ==> (flag ==> (k + i + j == (k + i + j)));\nloop invariant z >= (k + i + j) ==> (flag ==> (k + i + j >= (k + i + j)));\nloop invariant z <= (k + i + j) ==> (flag ==> (k + i + j <= (k + i + j)));\nloop invariant z == (k + i + j) ==> (flag ==> (k + i + j == (k + i + j)));\nloop invariant z >= (k + i + j) ==> (flag ==> (k + i + j >= (k + i + j)));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n + 1;\nloop invariant 0 <= j <= (n + 1) * (n + 2) / 2;\nloop invariant 0 <= k <= n;\nloop invariant k + i + j > 2 * n ==> flag || !flag;\nloop invariant k + i + j > 2 * n ==> i + j > n || j == (n + 1) * (n + 2) / 2;\nloop invariant k + i + j > 2 * n ==> i > n || i == n + 1;\nloop invariant k + i + j > 2 * n ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2;\nloop invariant k + i + j > 2 * n ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1;\nloop invariant k + i + j > 2 * n ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1 ==> flag || !flag;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i > n || i == n + 1;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1 ==> flag || !flag;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> j == (n + 1) * (n + 2) / 2;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> i > n;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> i == n + 1;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1 ==> flag || !flag;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> j == (n + 1) * (n + 2) / 2 ==> i > n;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> j == (n + 1) * (n + 2) / 2 ==> i == n + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= i * (i + 1) / 2;\nloop invariant j <= i * (i + 1) / 2;\nloop invariant z >= k + i + j;\nloop invariant 0 <= k <= i;\nloop invariant n >= 0;\nloop invariant k >= 0;\nloop invariant flag >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= (n * (n + 1)) / 2;\nloop invariant z = k + i + j;\nloop invariant z > 2 * n ==> (k >= 0 && n >= 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= (n * (n + 1)) / 2;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant i + j <= n + (n * (n + 1)) / 2;\nloop invariant i + j <= n + (n * (n + 1)) / 2 + k;\nloop invariant k + i + j > 2 * n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n + 1;\nloop invariant 0 <= j <= (n * (n + 1)) / 2;\nloop invariant k >= 0 ==> k <= n;\nloop invariant k >= 0 ==> z >= k + (n + 1) + (n * (n + 1)) / 2;\nloop invariant k >= 0 ==> z <= k + n + 1 + (n * (n + 1)) / 2;\nloop invariant k >= 0 ==> z <= (n + 1) + (n * (n + 1)) / 2;\nloop invariant k >= 0 ==> z <= (n + 1) + (n * (n + 1)) / 2 ==> z > 2 * n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= i * (i + 1) / 2;\nloop invariant n >= 0;\nloop invariant k >= 0;\nloop invariant z = k + i + j;\nloop invariant z > 2*n;\nloop invariant if (flag) then k >= 0 else k = unknown1();\nloop invariant if (flag) then k < 0 else k = unknown1();\nloop invariant if (flag) then k >= 0 else k < 0;\nloop invariant if (flag) then k >= 0 else k <= 0;\nloop invariant if (flag) then k >= 0 else k >= 0;\nloop invariant if (flag) then k >= 0 else k < 1;\nloop invariant if (flag) then k >= 0 else k <= 1;\nloop invariant if (flag) then k >= 0 else k >= 1;\nloop invariant if (flag) then k > 0 else k = unknown1();\nloop invariant if (flag) then k >= 0 else k > 1;\nloop invariant if (flag) then k >= 0 else k >= 2;\nloop invariant if (flag) then k >= 0 else k <= 2;\nloop invariant if (flag) then k >= 0 else k >= 3;\nloop invariant if (flag) then k >= 0 else k <= 3;\nloop invariant if (flag) then k >= 0 else k >= 4;\nloop invariant if (flag) then k >= 0 else k <= 4;\nloop invariant if (flag) then k >= 0 else k >= 5;\nloop invariant if (flag) then k >= 0 else k <= 5;\nloop invariant if (flag) then k >= 0 else k >= 6;\nloop invariant if (flag) then k >= 0 else k <= 6;\nloop invariant if (flag) then k >= 0 else k >= 7;\nloop invariant if (flag) then k >= 0 else k <= 7;\nloop invariant if (flag) then k >= 0 else k >= 8;\nloop invariant if (flag) then k >= 0 else k <= 8;\nloop invariant if (flag) then k >= 0 else k >= 9;\nloop invariant if (flag) then k >= 0 else k <= 9;\nloop invariant if (flag) then k >= 0 else k >= 10;\nloop invariant if (flag) then k >= 0 else k <= 10;\nloop invariant if (flag) then k >= 0 else k >= 11;\nloop invariant if (flag) then k >= 0 else k <= 11;\nloop invariant if (flag) then k >= 0 else k >= 12;\nloop invariant if (flag) then k >= 0 else k <= 12;\nloop invariant if (flag) then k >= 0 else k >= 13;\nloop invariant if (flag) then k >= 0 else k <= 13;\nloop invariant if (flag) then k >= 0 else k >= 14;\nloop invariant if (flag) then k >= 0 else k <= 14;\nloop invariant if (flag) then k >= 0 else k >= 15;\nloop invariant if (flag) then k >= 0 else k <= 15;\nloop invariant if (flag) then k >= 0 else k >= 16;\nloop invariant if (flag) then k >= 0 else k <= 16;\nloop invariant if (flag) then k >= 0 else k >= 17;\nloop invariant if (flag) then k >= 0 else k <= 17;\nloop invariant if (flag) then k >= 0 else k >= 18;\nloop invariant if (flag) then k >= 0 else k <= 18;\nloop invariant if (flag) then k >= 0 else k >= 19;\nloop invariant if (flag) then k >= 0 else k <= 19;\nloop invariant if (flag) then k >= 0 else k >= 20;\nloop invariant if (flag) then k >= 0 else k <= 20;\nloop invariant if (flag) then k >= 0 else k >= 21;\nloop invariant if (flag) then k >= 0 else k <= 21;\nloop invariant if (flag) then k >= 0 else k >= 22;\nloop invariant if (flag) then k >= 0 else k <= 22;\nloop invariant if (flag) then k >= 0 else k >= 23;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n + 1;loop invariant 0 <= j <= (n * (n + 1)) / 2;loop invariant i + j <= 2 * n;loop invariant k >= 0;loop invariant k <= n;loop invariant z >= k + (i + j) >= k + 2 * n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= (n*(n+1)/2);\nloop invariant 0 <= i <= (n+1);\nloop invariant 0 <= k <= (n+1);\nloop invariant (flag ==> j == (i*(i-1)/2));\nloop invariant (flag ==> i == (n+1));\nloop invariant (flag ==> k >= i);\nloop invariant (flag ==> k == (n+1));\nloop invariant (flag ==> j == ((n+1)*(n+2)/2));\nloop invariant (flag ==> z == (2*k + 2*i + j));\nloop invariant (flag ==> z == (2*(n+1) + (n+1)*(n+2)/2));\nloop invariant (flag ==> z > 2*n);\nloop invariant (flag ==> flag == 1);\nloop invariant (flag ==> i == (n+1));\nloop invariant (flag ==> j == ((n+1)*(n+2)/2));\nloop invariant (flag ==> k == (n+1));\nloop invariant (flag ==> z == (2*(n+1) + (n+1)*(n+2)/2));\nloop invariant (flag ==> z > 2*n);\nloop invariant (flag ==> flag == 1);\nloop invariant (flag ==> i == (n+1));\nloop invariant (flag ==> j == ((n+1)*(n+2)/2));\nloop invariant (flag ==> k == (n+1));\nloop invariant (flag ==> z == (2*(n+1) + (n+1)*(n+2)/2));\nloop invariant (flag ==> z > 2*n);\nloop invariant (flag ==> flag == 1);\nloop invariant (flag ==> i == (n+1));\nloop invariant (flag ==> j == ((n+1)*(n+2)/2));\nloop invariant (flag ==> k == (n+1));\nloop invariant (flag ==> z == (2*(n+1) + (n+1)*(n+2)/2));\nloop invariant (flag ==> z > 2*n);\nloop invariant (flag ==> flag == 1);\nloop invariant (flag ==> i == (n+1));\nloop invariant (flag ==> j == ((n+1)*(n+2)/2));\nloop invariant (flag ==> k == (n+1));\nloop invariant (flag ==> z == (2*(n+1) + (n+1)*(n+2)/2));\nloop invariant (flag ==> z > 2*n);\nloop invariant (flag ==> flag == 1);\nloop invariant (flag ==> i == (n+1));\nloop invariant (flag ==> j == ((n+1)*(n+2)/2));\nloop invariant (flag ==> k == (n+1));\nloop invariant (flag ==> z == (2*(n+1) + (n+1)*(n+2)/2));\nloop invariant (flag ==> z > 2*n);\nloop invariant (flag ==> flag == 1);\nloop invariant (flag ==> i == (n+1));\nloop invariant (flag ==> j == ((n+1)*(n+2)/2));\nloop invariant (flag ==> k == (n+1));\nloop invariant (flag ==> z == (2*(n+1) + (n+1)*(n+2)/2));\nloop invariant (flag ==> z > 2*n);\nloop invariant (flag ==> flag == 1);\nloop invariant (flag ==> i == (n+1));\nloop invariant (flag ==> j == ((n+1)*(n+2)/2));\nloop invariant (flag ==> k == (n+1));\nloop invariant (flag ==> z == (2*(n+1) + (n+1)*(n+2)/2));\nloop invariant (flag ==> z > 2*n);\nloop invariant (flag ==> flag == 1);\nloop invariant (flag ==> i == (n+1));\nloop invariant (flag ==> j == ((n+1)*(n+2)/2));\nloop invariant (flag ==> k == (n+1));\nloop invariant (flag ==> z == (2*(n+1) + (n+1)*(n+2)/2));\nloop invariant (flag ==> z > 2*n);\nloop invariant (flag ==> flag == 1);\nloop invariant (flag ==> i == (n+1));\nloop invariant (flag ==> j == ((n+1)*(n+2)/2));\nloop invariant (flag ==> k == (n+1));\nloop invariant (flag ==> z == (2*(n+1) + (n+1)*(n+2)/2));\nloop invariant (flag ==> z > 2*n);\nloop invariant (flag ==> flag == 1);\nloop invariant (flag ==> i == (n+1));\n*/\n```",
            "```\n/*@\nloop invariant n >= 0;\nloop invariant flag = 1 ==> k >= 0;\nloop invariant k <= i;\nloop invariant j >= 0;\nloop invariant j = (i * (i + 1)) / 2;\nloop invariant z = k + i + j;\nloop invariant z > 2 * n ==> (k >= 0) && (i >= 0) && (j >= 0) && (j = (i * (i + 1)) / 2) && (z = k + i + j);\nloop invariant n >= 0;\nloop invariant flag = 1 ==> k >= 0;\nloop invariant k <= i;\nloop invariant j >= 0;\nloop invariant j = (i * (i + 1)) / 2;\nloop invariant z = k + i + j;\nloop invariant (k >= 0) ==> (i >= 0) && (j >= 0) && (j = (i * (i + 1)) / 2) && (z = k + i + j);\nloop invariant (i >= 0) ==> (j >= 0) && (j = (i * (i + 1)) / 2) && (z = k + i + j);\nloop invariant (j >= 0) ==> (j = (i * (i + 1)) / 2) && (z = k + i + j);\nloop invariant (j = (i * (i + 1)) / 2) ==> (z = k + i + j);\nloop invariant (z = k + i + j) ==> (z > 2 * n) ==> (k >= 0) && (i >= 0) && (j >= 0) && (j = (i * (i + 1)) / 2) && (z = k + i + j);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= (i * (i + 1)) / 2;\nloop invariant (i == n) ==> (j == (n * (n + 1)) / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant j >= 0;\nloop invariant j <= (n * (n + 1)) / 2;\nloop invariant 0 <= z <= (n * (n + 1)) / 2 + n + k;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= (i * (i + 1)) / 2;\nloop invariant k > 0;\nloop invariant k >= (k - 1) * (k - 2) / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= (i * (i + 1)) / 2;\nloop invariant k > 0 && k < n;\nloop invariant z >= 0 && z < 3 * n;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\nloop invariant j == 0 || j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\nloop invariant j == 0 || j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\nloop invariant j == 0 || j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\nloop invariant j == 0 || j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\nloop invariant j == 0 || j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\nloop invariant j == 0 || j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\nloop invariant j == 0 || j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\nloop invariant j == 0 || j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\nloop invariant j == 0 || j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\nloop invariant j == 0 || j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant 0 <= z <= 2*n;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant z >= 0;\nloop invariant z <= 2*n;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n   int n = unknown1();\n   int flag = unknown1();\n\n   if(n>=0){\n   int k = 1;\n   if(flag) {\n\tk = unknown1();\n\tif(k>=0) ; else return 0;\n   }\n   int i = 0, j = 0;\n   /*@\n\nloop invariant i2: j >= 0;\nloop invariant i3: k >= 0;\n\nloop invariant i5: i >= 0;\n\n\n\n*/\nwhile(i <= n) {\n     i++;\n     j+=i;\n   }\n   int z = k + i + j;\n   {;\n//@ assert(z > 2*n);\n}\n\n   }\n   return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= n;\nloop invariant 0 <= flag;\nloop invariant flag ==> 0 <= k;\nloop invariant flag ==> k >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= n;\nloop invariant j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant z > (2 * n) ==> (flag ==> (k + i + j > (2 * n)));\nloop invariant z <= (k + i + j) ==> (flag ==> (k + i + j <= (k + i + j)));\nloop invariant z == (k + i + j) ==> (flag ==> (k + i + j == (k + i + j)));\nloop invariant z >= (k + i + j) ==> (flag ==> (k + i + j >= (k + i + j)));\nloop invariant z < (k + i + j) ==> (flag ==> (k + i + j < (k + i + j)));\nloop invariant z == (k + i + j) ==> (flag ==> (k + i + j == (k + i + j)));\nloop invariant z >= (k + i + j) ==> (flag ==> (k + i + j >= (k + i + j)));\nloop invariant z <= (k + i + j) ==> (flag ==> (k + i + j <= (k + i + j)));\nloop invariant z == (k + i + j) ==> (flag ==> (k + i + j == (k + i + j)));\nloop invariant z >= (k + i + j) ==> (flag ==> (k + i + j >= (k + i + j)));\nloop invariant z <= (k + i + j) ==> (flag ==> (k + i + j <= (k + i + j)));\nloop invariant z == (k + i + j) ==> (flag ==> (k + i + j == (k + i + j)));\nloop invariant z >= (k + i + j) ==> (flag ==> (k + i + j >= (k + i + j)));\nloop invariant z <= (k + i + j) ==> (flag ==> (k + i + j <= (k + i + j)));\nloop invariant z == (k + i + j) ==> (flag ==> (k + i + j == (k + i + j)));\nloop invariant z >= (k + i + j) ==> (flag ==> (k + i + j >= (k + i + j)));\nloop invariant z <= (k + i + j) ==> (flag ==> (k + i + j <= (k + i + j)));\nloop invariant z == (k + i + j) ==> (flag ==> (k + i + j == (k + i + j)));\nloop invariant z >= (k + i + j) ==> (flag ==> (k + i + j >= (k + i + j)));\nloop invariant z <= (k + i + j) ==> (flag ==> (k + i + j <= (k + i + j)));\nloop invariant z == (k + i + j) ==> (flag ==> (k + i + j == (k + i + j)));\nloop invariant z >= (k + i + j) ==> (flag ==> (k + i + j >= (k + i + j)));\nloop invariant z <= (k + i + j) ==> (flag ==> (k + i + j <= (k + i + j)));\nloop invariant z == (k + i + j) ==> (flag ==> (k + i + j == (k + i + j)));\nloop invariant z >= (k + i + j) ==> (flag ==> (k + i + j >= (k + i + j)));\nloop invariant z <= (k + i + j) ==> (flag ==> (k + i + j <= (k + i + j)));\nloop invariant z == (k + i + j) ==> (flag ==> (k + i + j == (k + i + j)));\nloop invariant z >= (k + i + j) ==> (flag ==> (k + i + j >= (k + i + j)));\nloop invariant z <= (k + i + j) ==> (flag ==> (k + i + j <= (k + i + j)));\nloop invariant z == (k + i + j) ==> (flag ==> (k + i + j == (k + i + j)));\nloop invariant z >= (k + i + j) ==> (flag ==> (k + i + j >= (k + i + j)));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n   int n = unknown1();\n   int flag = unknown1();\n\n   if(n>=0){\n   int k = 1;\n   if(flag) {\n\tk = unknown1();\n\tif(k>=0) ; else return 0;\n   }\n   int i = 0, j = 0;\n   /*@\nloop invariant i1: 0 <= n;\n\nloop invariant i3: flag ==> 0 <= k;\nloop invariant i4: flag ==> k >= 0;\nloop invariant i5: i >= 0;\nloop invariant i6: j >= 0;\n\nloop invariant i8: j == (i * (i + 1)) / 2;\n\n\n\n\n\n\n*/\nwhile(i <= n) {\n     i++;\n     j+=i;\n   }\n   int z = k + i + j;\n   {;\n//@ assert(z > 2*n);\n}\n\n   }\n   return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n + 1;\nloop invariant 0 <= j <= (n + 1) * (n + 2) / 2;\nloop invariant 0 <= k <= n;\nloop invariant k + i + j > 2 * n ==> flag || !flag;\nloop invariant k + i + j > 2 * n ==> i + j > n || j == (n + 1) * (n + 2) / 2;\nloop invariant k + i + j > 2 * n ==> i > n || i == n + 1;\nloop invariant k + i + j > 2 * n ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2;\nloop invariant k + i + j > 2 * n ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1;\nloop invariant k + i + j > 2 * n ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1 ==> flag || !flag;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i > n || i == n + 1;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1 ==> flag || !flag;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> j == (n + 1) * (n + 2) / 2;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> i > n;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> i == n + 1;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1 ==> flag || !flag;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> j == (n + 1) * (n + 2) / 2 ==> i > n;\nloop invariant k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> j == (n + 1) * (n + 2) / 2 ==> i == n + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n   int n = unknown1();\n   int flag = unknown1();\n\n   if(n>=0){\n   int k = 1;\n   if(flag) {\n\tk = unknown1();\n\tif(k>=0) ; else return 0;\n   }\n   int i = 0, j = 0;\n   /*@\nloop invariant i1: 0 <= i <= n + 1;\n\n\nloop invariant i4: k + i + j > 2 * n ==> flag || !flag;\n\n\n\n\nloop invariant i9: k + i + j > 2 * n ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1 ==> flag || !flag;\n\n\n\n\nloop invariant i14: k + i + j > 2 * n ==> flag || !flag ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1 ==> flag || !flag;\n\n\n\n\n\nloop invariant i20: k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1 ==> flag || !flag;\n\n\n*/\nwhile(i <= n) {\n     i++;\n     j+=i;\n   }\n   int z = k + i + j;\n   {;\n//@ assert(z > 2*n);\n}\n\n   }\n   return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= i * (i + 1) / 2;\nloop invariant j <= i * (i + 1) / 2;\nloop invariant z >= k + i + j;\nloop invariant 0 <= k <= i;\nloop invariant n >= 0;\nloop invariant k >= 0;\nloop invariant flag >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown1() >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n   int n = unknown1();\n   int flag = unknown1();\n\n   if(n>=0){\n   int k = 1;\n   if(flag) {\n\tk = unknown1();\n\tif(k>=0) ; else return 0;\n   }\n   int i = 0, j = 0;\n   /*@\n\n\nloop invariant i3: j <= i * (i + 1) / 2;\n\n\nloop invariant i6: n >= 0;\nloop invariant i7: k >= 0;\n\n\n*/\nwhile(i <= n) {\n     i++;\n     j+=i;\n   }\n   int z = k + i + j;\n   {;\n//@ assert(z > 2*n);\n}\n\n   }\n   return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= (n * (n + 1)) / 2;\nloop invariant z = k + i + j;\nloop invariant z > 2 * n ==> (k >= 0 && n >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n   int n = unknown1();\n   int flag = unknown1();\n\n   if(n>=0){\n   int k = 1;\n   if(flag) {\n\tk = unknown1();\n\tif(k>=0) ; else return 0;\n   }\n   int i = 0, j = 0;\n   /*@\n\n\n\n\n\n*/\nwhile(i <= n) {\n     i++;\n     j+=i;\n   }\n   int z = k + i + j;\n   {;\n//@ assert(z > 2*n);\n}\n\n   }\n   return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= (n * (n + 1)) / 2;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant i + j <= n + (n * (n + 1)) / 2;\nloop invariant i + j <= n + (n * (n + 1)) / 2 + k;\nloop invariant k + i + j > 2 * n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n   int n = unknown1();\n   int flag = unknown1();\n\n   if(n>=0){\n   int k = 1;\n   if(flag) {\n\tk = unknown1();\n\tif(k>=0) ; else return 0;\n   }\n   int i = 0, j = 0;\n   /*@\n\n\nloop invariant i3: k >= 0;\n\n\n\n\n*/\nwhile(i <= n) {\n     i++;\n     j+=i;\n   }\n   int z = k + i + j;\n   {;\n//@ assert(z > 2*n);\n}\n\n   }\n   return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n + 1;\nloop invariant 0 <= j <= (n * (n + 1)) / 2;\nloop invariant k >= 0 ==> k <= n;\nloop invariant k >= 0 ==> z >= k + (n + 1) + (n * (n + 1)) / 2;\nloop invariant k >= 0 ==> z <= k + n + 1 + (n * (n + 1)) / 2;\nloop invariant k >= 0 ==> z <= (n + 1) + (n * (n + 1)) / 2;\nloop invariant k >= 0 ==> z <= (n + 1) + (n * (n + 1)) / 2 ==> z > 2 * n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n   int n = unknown1();\n   int flag = unknown1();\n\n   if(n>=0){\n   int k = 1;\n   if(flag) {\n\tk = unknown1();\n\tif(k>=0) ; else return 0;\n   }\n   int i = 0, j = 0;\n   /*@\nloop invariant i1: 0 <= i <= n + 1;\n\n\n\n\n\n\n*/\nwhile(i <= n) {\n     i++;\n     j+=i;\n   }\n   int z = k + i + j;\n   {;\n//@ assert(z > 2*n);\n}\n\n   }\n   return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 58,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= i * (i + 1) / 2;\nloop invariant n >= 0;\nloop invariant k >= 0;\nloop invariant z = k + i + j;\nloop invariant z > 2*n;\nloop invariant if (flag) then k >= 0 else k = unknown1();\nloop invariant if (flag) then k < 0 else k = unknown1();\nloop invariant if (flag) then k >= 0 else k < 0;\nloop invariant if (flag) then k >= 0 else k <= 0;\nloop invariant if (flag) then k >= 0 else k >= 0;\nloop invariant if (flag) then k >= 0 else k < 1;\nloop invariant if (flag) then k >= 0 else k <= 1;\nloop invariant if (flag) then k >= 0 else k >= 1;\nloop invariant if (flag) then k > 0 else k = unknown1();\nloop invariant if (flag) then k >= 0 else k > 1;\nloop invariant if (flag) then k >= 0 else k >= 2;\nloop invariant if (flag) then k >= 0 else k <= 2;\nloop invariant if (flag) then k >= 0 else k >= 3;\nloop invariant if (flag) then k >= 0 else k <= 3;\nloop invariant if (flag) then k >= 0 else k >= 4;\nloop invariant if (flag) then k >= 0 else k <= 4;\nloop invariant if (flag) then k >= 0 else k >= 5;\nloop invariant if (flag) then k >= 0 else k <= 5;\nloop invariant if (flag) then k >= 0 else k >= 6;\nloop invariant if (flag) then k >= 0 else k <= 6;\nloop invariant if (flag) then k >= 0 else k >= 7;\nloop invariant if (flag) then k >= 0 else k <= 7;\nloop invariant if (flag) then k >= 0 else k >= 8;\nloop invariant if (flag) then k >= 0 else k <= 8;\nloop invariant if (flag) then k >= 0 else k >= 9;\nloop invariant if (flag) then k >= 0 else k <= 9;\nloop invariant if (flag) then k >= 0 else k >= 10;\nloop invariant if (flag) then k >= 0 else k <= 10;\nloop invariant if (flag) then k >= 0 else k >= 11;\nloop invariant if (flag) then k >= 0 else k <= 11;\nloop invariant if (flag) then k >= 0 else k >= 12;\nloop invariant if (flag) then k >= 0 else k <= 12;\nloop invariant if (flag) then k >= 0 else k >= 13;\nloop invariant if (flag) then k >= 0 else k <= 13;\nloop invariant if (flag) then k >= 0 else k >= 14;\nloop invariant if (flag) then k >= 0 else k <= 14;\nloop invariant if (flag) then k >= 0 else k >= 15;\nloop invariant if (flag) then k >= 0 else k <= 15;\nloop invariant if (flag) then k >= 0 else k >= 16;\nloop invariant if (flag) then k >= 0 else k <= 16;\nloop invariant if (flag) then k >= 0 else k >= 17;\nloop invariant if (flag) then k >= 0 else k <= 17;\nloop invariant if (flag) then k >= 0 else k >= 18;\nloop invariant if (flag) then k >= 0 else k <= 18;\nloop invariant if (flag) then k >= 0 else k >= 19;\nloop invariant if (flag) then k >= 0 else k <= 19;\nloop invariant if (flag) then k >= 0 else k >= 20;\nloop invariant if (flag) then k >= 0 else k <= 20;\nloop invariant if (flag) then k >= 0 else k >= 21;\nloop invariant if (flag) then k >= 0 else k <= 21;\nloop invariant if (flag) then k >= 0 else k >= 22;\nloop invariant if (flag) then k >= 0 else k <= 22;\nloop invariant if (flag) then k >= 0 else k >= 23;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n   int n = unknown1();\n   int flag = unknown1();\n\n   if(n>=0){\n   int k = 1;\n   if(flag) {\n\tk = unknown1();\n\tif(k>=0) ; else return 0;\n   }\n   int i = 0, j = 0;\n   /*@\n\n\nloop invariant i3: n >= 0;\nloop invariant i4: k >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(i <= n) {\n     i++;\n     j+=i;\n   }\n   int z = k + i + j;\n   {;\n//@ assert(z > 2*n);\n}\n\n   }\n   return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n + 1;loop invariant 0 <= j <= (n * (n + 1)) / 2;loop invariant i + j <= 2 * n;loop invariant k >= 0;loop invariant k <= n;loop invariant z >= k + (i + j) >= k + 2 * n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n   int n = unknown1();\n   int flag = unknown1();\n\n   if(n>=0){\n   int k = 1;\n   if(flag) {\n\tk = unknown1();\n\tif(k>=0) ; else return 0;\n   }\n   int i = 0, j = 0;\n   /*@\n\n*/\nwhile(i <= n) {\n     i++;\n     j+=i;\n   }\n   int z = k + i + j;\n   {;\n//@ assert(z > 2*n);\n}\n\n   }\n   return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= (n*(n+1)/2);\nloop invariant 0 <= i <= (n+1);\nloop invariant 0 <= k <= (n+1);\nloop invariant (flag ==> j == (i*(i-1)/2));\nloop invariant (flag ==> i == (n+1));\nloop invariant (flag ==> k >= i);\nloop invariant (flag ==> k == (n+1));\nloop invariant (flag ==> j == ((n+1)*(n+2)/2));\nloop invariant (flag ==> z == (2*k + 2*i + j));\nloop invariant (flag ==> z == (2*(n+1) + (n+1)*(n+2)/2));\nloop invariant (flag ==> z > 2*n);\nloop invariant (flag ==> flag == 1);\nloop invariant (flag ==> i == (n+1));\nloop invariant (flag ==> j == ((n+1)*(n+2)/2));\nloop invariant (flag ==> k == (n+1));\nloop invariant (flag ==> z == (2*(n+1) + (n+1)*(n+2)/2));\nloop invariant (flag ==> z > 2*n);\nloop invariant (flag ==> flag == 1);\nloop invariant (flag ==> i == (n+1));\nloop invariant (flag ==> j == ((n+1)*(n+2)/2));\nloop invariant (flag ==> k == (n+1));\nloop invariant (flag ==> z == (2*(n+1) + (n+1)*(n+2)/2));\nloop invariant (flag ==> z > 2*n);\nloop invariant (flag ==> flag == 1);\nloop invariant (flag ==> i == (n+1));\nloop invariant (flag ==> j == ((n+1)*(n+2)/2));\nloop invariant (flag ==> k == (n+1));\nloop invariant (flag ==> z == (2*(n+1) + (n+1)*(n+2)/2));\nloop invariant (flag ==> z > 2*n);\nloop invariant (flag ==> flag == 1);\nloop invariant (flag ==> i == (n+1));\nloop invariant (flag ==> j == ((n+1)*(n+2)/2));\nloop invariant (flag ==> k == (n+1));\nloop invariant (flag ==> z == (2*(n+1) + (n+1)*(n+2)/2));\nloop invariant (flag ==> z > 2*n);\nloop invariant (flag ==> flag == 1);\nloop invariant (flag ==> i == (n+1));\nloop invariant (flag ==> j == ((n+1)*(n+2)/2));\nloop invariant (flag ==> k == (n+1));\nloop invariant (flag ==> z == (2*(n+1) + (n+1)*(n+2)/2));\nloop invariant (flag ==> z > 2*n);\nloop invariant (flag ==> flag == 1);\nloop invariant (flag ==> i == (n+1));\nloop invariant (flag ==> j == ((n+1)*(n+2)/2));\nloop invariant (flag ==> k == (n+1));\nloop invariant (flag ==> z == (2*(n+1) + (n+1)*(n+2)/2));\nloop invariant (flag ==> z > 2*n);\nloop invariant (flag ==> flag == 1);\nloop invariant (flag ==> i == (n+1));\nloop invariant (flag ==> j == ((n+1)*(n+2)/2));\nloop invariant (flag ==> k == (n+1));\nloop invariant (flag ==> z == (2*(n+1) + (n+1)*(n+2)/2));\nloop invariant (flag ==> z > 2*n);\nloop invariant (flag ==> flag == 1);\nloop invariant (flag ==> i == (n+1));\nloop invariant (flag ==> j == ((n+1)*(n+2)/2));\nloop invariant (flag ==> k == (n+1));\nloop invariant (flag ==> z == (2*(n+1) + (n+1)*(n+2)/2));\nloop invariant (flag ==> z > 2*n);\nloop invariant (flag ==> flag == 1);\nloop invariant (flag ==> i == (n+1));\nloop invariant (flag ==> j == ((n+1)*(n+2)/2));\nloop invariant (flag ==> k == (n+1));\nloop invariant (flag ==> z == (2*(n+1) + (n+1)*(n+2)/2));\nloop invariant (flag ==> z > 2*n);\nloop invariant (flag ==> flag == 1);\nloop invariant (flag ==> i == (n+1));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n   int n = unknown1();\n   int flag = unknown1();\n\n   if(n>=0){\n   int k = 1;\n   if(flag) {\n\tk = unknown1();\n\tif(k>=0) ; else return 0;\n   }\n   int i = 0, j = 0;\n   /*@\n\nloop invariant i2: 0 <= i <= (n+1);\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(i <= n) {\n     i++;\n     j+=i;\n   }\n   int z = k + i + j;\n   {;\n//@ assert(z > 2*n);\n}\n\n   }\n   return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 11,
                "annotations": "```\n/*@\nloop invariant n >= 0;\nloop invariant flag = 1 ==> k >= 0;\nloop invariant k <= i;\nloop invariant j >= 0;\nloop invariant j = (i * (i + 1)) / 2;\nloop invariant z = k + i + j;\nloop invariant z > 2 * n ==> (k >= 0) && (i >= 0) && (j >= 0) && (j = (i * (i + 1)) / 2) && (z = k + i + j);\nloop invariant n >= 0;\nloop invariant flag = 1 ==> k >= 0;\nloop invariant k <= i;\nloop invariant j >= 0;\nloop invariant j = (i * (i + 1)) / 2;\nloop invariant z = k + i + j;\nloop invariant (k >= 0) ==> (i >= 0) && (j >= 0) && (j = (i * (i + 1)) / 2) && (z = k + i + j);\nloop invariant (i >= 0) ==> (j >= 0) && (j = (i * (i + 1)) / 2) && (z = k + i + j);\nloop invariant (j >= 0) ==> (j = (i * (i + 1)) / 2) && (z = k + i + j);\nloop invariant (j = (i * (i + 1)) / 2) ==> (z = k + i + j);\nloop invariant (z = k + i + j) ==> (z > 2 * n) ==> (k >= 0) && (i >= 0) && (j >= 0) && (j = (i * (i + 1)) / 2) && (z = k + i + j);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n   int n = unknown1();\n   int flag = unknown1();\n\n   if(n>=0){\n   int k = 1;\n   if(flag) {\n\tk = unknown1();\n\tif(k>=0) ; else return 0;\n   }\n   int i = 0, j = 0;\n   /*@\nloop invariant i1: n >= 0;\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(i <= n) {\n     i++;\n     j+=i;\n   }\n   int z = k + i + j;\n   {;\n//@ assert(z > 2*n);\n}\n\n   }\n   return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= (i * (i + 1)) / 2;\nloop invariant (i == n) ==> (j == (n * (n + 1)) / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n   int n = unknown1();\n   int flag = unknown1();\n\n   if(n>=0){\n   int k = 1;\n   if(flag) {\n\tk = unknown1();\n\tif(k>=0) ; else return 0;\n   }\n   int i = 0, j = 0;\n   /*@\n\n\n\n*/\nwhile(i <= n) {\n     i++;\n     j+=i;\n   }\n   int z = k + i + j;\n   {;\n//@ assert(z > 2*n);\n}\n\n   }\n   return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant j >= 0;\nloop invariant j <= (n * (n + 1)) / 2;\nloop invariant 0 <= z <= (n * (n + 1)) / 2 + n + k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n   int n = unknown1();\n   int flag = unknown1();\n\n   if(n>=0){\n   int k = 1;\n   if(flag) {\n\tk = unknown1();\n\tif(k>=0) ; else return 0;\n   }\n   int i = 0, j = 0;\n   /*@\n\n\n\n\n*/\nwhile(i <= n) {\n     i++;\n     j+=i;\n   }\n   int z = k + i + j;\n   {;\n//@ assert(z > 2*n);\n}\n\n   }\n   return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= (i * (i + 1)) / 2;\nloop invariant k > 0;\nloop invariant k >= (k - 1) * (k - 2) / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n   int n = unknown1();\n   int flag = unknown1();\n\n   if(n>=0){\n   int k = 1;\n   if(flag) {\n\tk = unknown1();\n\tif(k>=0) ; else return 0;\n   }\n   int i = 0, j = 0;\n   /*@\n\n\n\n\n*/\nwhile(i <= n) {\n     i++;\n     j+=i;\n   }\n   int z = k + i + j;\n   {;\n//@ assert(z > 2*n);\n}\n\n   }\n   return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= (i * (i + 1)) / 2;\nloop invariant k > 0 && k < n;\nloop invariant z >= 0 && z < 3 * n;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\nloop invariant j == 0 || j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\nloop invariant j == 0 || j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\nloop invariant j == 0 || j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\nloop invariant j == 0 || j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\nloop invariant j == 0 || j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\nloop invariant j == 0 || j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\nloop invariant j == 0 || j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\nloop invariant j == 0 || j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\nloop invariant j == 0 || j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\nloop invariant j == 0 || j == (i * (i + 1)) / 2;\nloop invariant z == (k + i + j);\nloop invariant n >= 0 && n < 100000;\nloop invariant flag == 0 || flag == 1;\nloop invariant k >= 0 && k < n;\nloop invariant i == 0 || i == n + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n   int n = unknown1();\n   int flag = unknown1();\n\n   if(n>=0){\n   int k = 1;\n   if(flag) {\n\tk = unknown1();\n\tif(k>=0) ; else return 0;\n   }\n   int i = 0, j = 0;\n   /*@\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(i <= n) {\n     i++;\n     j+=i;\n   }\n   int z = k + i + j;\n   {;\n//@ assert(z > 2*n);\n}\n\n   }\n   return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 68: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n   int n = unknown1();\n   int flag = unknown1();\n\n   if(n>=0){\n   int k = 1;\n   if(flag) {\n\tk = unknown1();\n\tif(k>=0) ; else return 0;\n   }\n   int i = 0, j = 0;\n   /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: j >= 0;\nloop invariant i3: k >= 0;\nloop invariant i4: 0 <= z <= 2*n;\nloop invariant i5: i >= 0;\nloop invariant i6: z >= 0;\nloop invariant i7: z <= 2*n;\nloop invariant i8: i <= n;\nloop invariant i9: 0 <= n;\nloop invariant i10: 0 <= flag;\nloop invariant i11: flag ==> 0 <= k;\nloop invariant i12: flag ==> k >= 0;\nloop invariant i13: j == (i * (i + 1)) / 2;\nloop invariant i14: z == (k + i + j);\nloop invariant i15: z > (2 * n) ==> (flag ==> (k + i + j > (2 * n)));\nloop invariant i16: z <= (k + i + j) ==> (flag ==> (k + i + j <= (k + i + j)));\nloop invariant i17: z == (k + i + j) ==> (flag ==> (k + i + j == (k + i + j)));\nloop invariant i18: z >= (k + i + j) ==> (flag ==> (k + i + j >= (k + i + j)));\nloop invariant i19: z < (k + i + j) ==> (flag ==> (k + i + j < (k + i + j)));\nloop invariant i20: 0 <= i <= n + 1;\nloop invariant i21: 0 <= j <= (n + 1) * (n + 2) / 2;\nloop invariant i22: 0 <= k <= n;\nloop invariant i23: k + i + j > 2 * n ==> flag || !flag;\nloop invariant i24: k + i + j > 2 * n ==> i + j > n || j == (n + 1) * (n + 2) / 2;\nloop invariant i25: k + i + j > 2 * n ==> i > n || i == n + 1;\nloop invariant i26: k + i + j > 2 * n ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2;\nloop invariant i27: k + i + j > 2 * n ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1;\nloop invariant i28: k + i + j > 2 * n ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1 ==> flag || !flag;\nloop invariant i29: k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2;\nloop invariant i30: k + i + j > 2 * n ==> flag || !flag ==> i > n || i == n + 1;\nloop invariant i31: k + i + j > 2 * n ==> flag || !flag ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2;\nloop invariant i32: k + i + j > 2 * n ==> flag || !flag ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1;\nloop invariant i33: k + i + j > 2 * n ==> flag || !flag ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1 ==> flag || !flag;\nloop invariant i34: k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> j == (n + 1) * (n + 2) / 2;\nloop invariant i35: k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> i > n;\nloop invariant i36: k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> i == n + 1;\nloop invariant i37: k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2;\nloop invariant i38: k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1;\nloop invariant i39: k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1 ==> flag || !flag;\nloop invariant i40: k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> j == (n + 1) * (n + 2) / 2 ==> i > n;\nloop invariant i41: k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> j == (n + 1) * (n + 2) / 2 ==> i == n + 1;\nloop invariant i42: 0 <= j <= i * (i + 1) / 2;\nloop invariant i43: j <= i * (i + 1) / 2;\nloop invariant i44: z >= k + i + j;\nloop invariant i45: 0 <= k <= i;\nloop invariant i46: n >= 0;\nloop invariant i47: flag >= 0;\nloop invariant i48: unknown1() >= 0;\nloop invariant i49: 0 <= k <= 1;\nloop invariant i50: 0 <= j <= (n * (n + 1)) / 2;\nloop invariant i51: z = k + i + j;\nloop invariant i52: z > 2 * n ==> (k >= 0 && n >= 0);\nloop invariant i53: k <= n;\nloop invariant i54: i + j <= n + (n * (n + 1)) / 2;\nloop invariant i55: i + j <= n + (n * (n + 1)) / 2 + k;\nloop invariant i56: k + i + j > 2 * n;\nloop invariant i57: k >= 0 ==> k <= n;\nloop invariant i58: k >= 0 ==> z >= k + (n + 1) + (n * (n + 1)) / 2;\nloop invariant i59: k >= 0 ==> z <= k + n + 1 + (n * (n + 1)) / 2;\nloop invariant i60: k >= 0 ==> z <= (n + 1) + (n * (n + 1)) / 2;\nloop invariant i61: k >= 0 ==> z <= (n + 1) + (n * (n + 1)) / 2 ==> z > 2 * n;\nloop invariant i62: z > 2*n;\nloop invariant i63: if (flag) then k >= 0 else k = unknown1();\nloop invariant i64: if (flag) then k < 0 else k = unknown1();\nloop invariant i65: if (flag) then k >= 0 else k < 0;\nloop invariant i66: if (flag) then k >= 0 else k <= 0;\nloop invariant i67: if (flag) then k >= 0 else k >= 0;\nloop invariant i68: if (flag) then k >= 0 else k < 1;\nloop invariant i69: if (flag) then k >= 0 else k <= 1;\nloop invariant i70: if (flag) then k >= 0 else k >= 1;\nloop invariant i71: if (flag) then k > 0 else k = unknown1();\nloop invariant i72: if (flag) then k >= 0 else k > 1;\nloop invariant i73: if (flag) then k >= 0 else k >= 2;\nloop invariant i74: if (flag) then k >= 0 else k <= 2;\nloop invariant i75: if (flag) then k >= 0 else k >= 3;\nloop invariant i76: if (flag) then k >= 0 else k <= 3;\nloop invariant i77: if (flag) then k >= 0 else k >= 4;\nloop invariant i78: if (flag) then k >= 0 else k <= 4;\nloop invariant i79: if (flag) then k >= 0 else k >= 5;\nloop invariant i80: if (flag) then k >= 0 else k <= 5;\nloop invariant i81: if (flag) then k >= 0 else k >= 6;\nloop invariant i82: if (flag) then k >= 0 else k <= 6;\nloop invariant i83: if (flag) then k >= 0 else k >= 7;\nloop invariant i84: if (flag) then k >= 0 else k <= 7;\nloop invariant i85: if (flag) then k >= 0 else k >= 8;\nloop invariant i86: if (flag) then k >= 0 else k <= 8;\nloop invariant i87: if (flag) then k >= 0 else k >= 9;\nloop invariant i88: if (flag) then k >= 0 else k <= 9;\nloop invariant i89: if (flag) then k >= 0 else k >= 10;\nloop invariant i90: if (flag) then k >= 0 else k <= 10;\nloop invariant i91: if (flag) then k >= 0 else k >= 11;\nloop invariant i92: if (flag) then k >= 0 else k <= 11;\nloop invariant i93: if (flag) then k >= 0 else k >= 12;\nloop invariant i94: if (flag) then k >= 0 else k <= 12;\nloop invariant i95: if (flag) then k >= 0 else k >= 13;\nloop invariant i96: if (flag) then k >= 0 else k <= 13;\nloop invariant i97: if (flag) then k >= 0 else k >= 14;\nloop invariant i98: if (flag) then k >= 0 else k <= 14;\nloop invariant i99: if (flag) then k >= 0 else k >= 15;\nloop invariant i100: if (flag) then k >= 0 else k <= 15;\nloop invariant i101: if (flag) then k >= 0 else k >= 16;\nloop invariant i102: if (flag) then k >= 0 else k <= 16;\nloop invariant i103: if (flag) then k >= 0 else k >= 17;\nloop invariant i104: if (flag) then k >= 0 else k <= 17;\nloop invariant i105: if (flag) then k >= 0 else k >= 18;\nloop invariant i106: if (flag) then k >= 0 else k <= 18;\nloop invariant i107: if (flag) then k >= 0 else k >= 19;\nloop invariant i108: if (flag) then k >= 0 else k <= 19;\nloop invariant i109: if (flag) then k >= 0 else k >= 20;\nloop invariant i110: if (flag) then k >= 0 else k <= 20;\nloop invariant i111: if (flag) then k >= 0 else k >= 21;\nloop invariant i112: if (flag) then k >= 0 else k <= 21;\nloop invariant i113: if (flag) then k >= 0 else k >= 22;\nloop invariant i114: if (flag) then k >= 0 else k <= 22;\nloop invariant i115: if (flag) then k >= 0 else k >= 23;\nloop invariant i116: 0 <= i <= n + 1;loop invariant 0 <= j <= (n * (n + 1)) / 2;loop invariant i + j <= 2 * n;loop invariant k >= 0;loop invariant k <= n;loop invariant z >= k + (i + j) >= k + 2 * n;\nloop invariant i117: 0 <= j <= (n*(n+1)/2);\nloop invariant i118: 0 <= i <= (n+1);\nloop invariant i119: 0 <= k <= (n+1);\nloop invariant i120: (flag ==> j == (i*(i-1)/2));\nloop invariant i121: (flag ==> i == (n+1));\nloop invariant i122: (flag ==> k >= i);\nloop invariant i123: (flag ==> k == (n+1));\nloop invariant i124: (flag ==> j == ((n+1)*(n+2)/2));\nloop invariant i125: (flag ==> z == (2*k + 2*i + j));\nloop invariant i126: (flag ==> z == (2*(n+1) + (n+1)*(n+2)/2));\nloop invariant i127: (flag ==> z > 2*n);\nloop invariant i128: (flag ==> flag == 1);\nloop invariant i129: flag = 1 ==> k >= 0;\nloop invariant i130: k <= i;\nloop invariant i131: j = (i * (i + 1)) / 2;\nloop invariant i132: z > 2 * n ==> (k >= 0) && (i >= 0) && (j >= 0) && (j = (i * (i + 1)) / 2) && (z = k + i + j);\nloop invariant i133: (k >= 0) ==> (i >= 0) && (j >= 0) && (j = (i * (i + 1)) / 2) && (z = k + i + j);\nloop invariant i134: (i >= 0) ==> (j >= 0) && (j = (i * (i + 1)) / 2) && (z = k + i + j);\nloop invariant i135: (j >= 0) ==> (j = (i * (i + 1)) / 2) && (z = k + i + j);\nloop invariant i136: (j = (i * (i + 1)) / 2) ==> (z = k + i + j);\nloop invariant i137: (z = k + i + j) ==> (z > 2 * n) ==> (k >= 0) && (i >= 0) && (j >= 0) && (j = (i * (i + 1)) / 2) && (z = k + i + j);\nloop invariant i138: 0 <= j <= (i * (i + 1)) / 2;\nloop invariant i139: (i == n) ==> (j == (n * (n + 1)) / 2);\nloop invariant i140: j <= (n * (n + 1)) / 2;\nloop invariant i141: 0 <= z <= (n * (n + 1)) / 2 + n + k;\nloop invariant i142: k > 0;\nloop invariant i143: k >= (k - 1) * (k - 2) / 2;\nloop invariant i144: k > 0 && k < n;\nloop invariant i145: z >= 0 && z < 3 * n;\nloop invariant i146: n >= 0 && n < 100000;\nloop invariant i147: flag == 0 || flag == 1;\nloop invariant i148: k >= 0 && k < n;\nloop invariant i149: i == 0 || i == n + 1;\nloop invariant i150: j == 0 || j == (i * (i + 1)) / 2;\n*/\nwhile(i <= n) {\n     i++;\n     j+=i;\n   }\n   int z = k + i + j;\n   {;\n//@ assert(z > 2*n);\n}\n\n   }\n   return 0;\n}",
        "combined_annotation_num_solver_calls": 98,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n   int n = unknown1();\n   int flag = unknown1();\n\n   if(n>=0){\n   int k = 1;\n   if(flag) {\n\tk = unknown1();\n\tif(k>=0) ; else return 0;\n   }\n   int i = 0, j = 0;\n   /*@\n\nloop invariant i2: j >= 0;\nloop invariant i3: k >= 0;\n\nloop invariant i5: i >= 0;\n\n\n\nloop invariant i9: 0 <= n;\n\nloop invariant i11: flag ==> 0 <= k;\nloop invariant i12: flag ==> k >= 0;\n\n\n\n\n\n\n\nloop invariant i20: 0 <= i <= n + 1;\nloop invariant i21: 0 <= j <= (n + 1) * (n + 2) / 2;\n\nloop invariant i23: k + i + j > 2 * n ==> flag || !flag;\n\n\n\n\nloop invariant i28: k + i + j > 2 * n ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1 ==> flag || !flag;\n\n\n\n\nloop invariant i33: k + i + j > 2 * n ==> flag || !flag ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1 ==> flag || !flag;\n\n\n\n\n\nloop invariant i39: k + i + j > 2 * n ==> flag || !flag ==> i + j > n || j == (n + 1) * (n + 2) / 2 ==> i == n + 1 ==> j == (n + 1) * (n + 2) / 2 ==> k == 1 ==> flag || !flag;\n\n\nloop invariant i42: 0 <= j <= i * (i + 1) / 2;\nloop invariant i43: j <= i * (i + 1) / 2;\n\n\nloop invariant i46: n >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i118: 0 <= i <= (n+1);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i138: 0 <= j <= (i * (i + 1)) / 2;\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(i <= n) {\n     i++;\n     j+=i;\n   }\n   int z = k + i + j;\n   {;\n//@ assert(z > 2*n);\n}\n\n   }\n   return 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c"
        ],
        "skipped": [],
        "total": 121,
        "success_count": 100,
        "failure_count": 21,
        "success_rate": 0.8264462809917356
    }
}