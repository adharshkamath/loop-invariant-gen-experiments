{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n    int  x=unknown_int();\n    int y=unknown_int();\n    int  z=unknown_int();\nassume(x<100);\nassume(x>-100);\nassume(z<100);\nassume(z>-100);\n    while(x<100 && 100<z)\n    {\n        int  tmp=unknown_bool();\n        if(tmp){\n            x++;\n        } else {\n            x--;\n            z--;\n        }\n    }\n    {;\n//@ assert(x>=100 || z<=100);\n}\n\n    return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant -100 <= x <= 0;\nloop invariant z >= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= z;\nloop invariant x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\n*/\n```",
            "```\n/*@\nloop invariant x >= -100;\nloop invariant x <= 100;\nloop invariant 100 < z;\nloop invariant z <= 100;\nloop invariant x + z <= 200;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 99;\nloop invariant 100 <= z <= 108;\nloop invariant x <= z;\nloop invariant x >= 0;\nloop invariant z >= 100;\nloop invariant x >= -100;\nloop invariant z <= 108;\nloop invariant x <= z;\nloop invariant x >= 0;\nloop invariant z >= 100;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\n*/\n```",
            "```\n/*@\nloop invariant x >= -100;\nloop invariant x < 100;\nloop invariant z > -100;\nloop invariant z < 100;\nloop invariant x < 100 && 100 < z;\nloop invariant x >= -100;\nloop invariant x < 100;\nloop invariant z > -100;\nloop invariant z < 100;\nloop invariant x < 100 && 100 < z;\nloop invariant x > -100;\nloop invariant x >= 100;\nloop invariant z > -100;\nloop invariant z <= 100;\nloop invariant x < 100 && 100 < z;\n*/\n```",
            "```\n/*@\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 100 ==> x < 1000;\nloop invariant x < 100 ==> x < 1000;\nloop invariant z <= -100 ==> z > 100;\nloop invariant z > -100 ==> z > 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant -100 <= x <= 100;\nloop invariant 100 <= z <= 100;\nloop invariant -100 <= z <= 100;\nloop invariant x >= z;\nloop invariant x <= z;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z > 100;\nloop invariant z <= 100 ==> x >= 100;\nloop invariant z > 100 ==> x < 100;\nloop invariant x >= -100 ==> z <= 100;\nloop invariant x < -100 ==> z > 100;\nloop invariant z <= -100 ==> x >= 100;\nloop invariant z > -100 ==> x < 100;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x < 0 ==> z > 100;\nloop invariant z <= 0 ==> x >= 100;\nloop invariant z > 0 ==> x < 100;\nloop invariant x >= 1 ==> z <= 100;\nloop invariant x < 1 ==> z > 100;\nloop invariant z <= 1 ==> x >= 100;\nloop invariant z > 1 ==> x < 100;\nloop invariant x >= 2 ==> z <= 100;\nloop invariant x < 2 ==> z > 100;\nloop invariant z <= 2 ==> x >= 100;\nloop invariant z > 2 ==> x < 100;\nloop invariant x >= 3 ==> z <= 100;\nloop invariant x < 3 ==> z > 100;\nloop invariant z <= 3 ==> x >= 100;\nloop invariant z > 3 ==> x < 100;\nloop invariant x >= 4 ==> z <= 100;\nloop invariant x < 4 ==> z > 100;\nloop invariant z <= 4 ==> x >= 100;\nloop invariant z > 4 ==> x < 100;\nloop invariant x >= 5 ==> z <= 100;\nloop invariant x < 5 ==> z > 100;\nloop invariant z <= 5 ==> x >= 100;\nloop invariant z > 5 ==> x < 100;\nloop invariant x >= 6 ==> z <= 100;\nloop invariant x < 6 ==> z > 100;\nloop invariant z <= 6 ==> x >= 100;\nloop invariant z > 6 ==> x < 100;\nloop invariant x >= 7 ==> z <= 100;\nloop invariant x < 7 ==> z > 100;\nloop invariant z <= 7 ==> x >= 100;\nloop invariant z > 7 ==> x < 100;\nloop invariant x >= 8 ==> z <= 100;\nloop invariant x < 8 ==> z > 100;\nloop invariant z <= 8 ==> x >= 100;\nloop invariant z > 8 ==> x < 100;\nloop invariant x >= 9 ==> z <= 100;\nloop invariant x < 9 ==> z > 100;\nloop invariant z <= 9 ==> x >= 100;\nloop invariant z > 9 ==> x < 100;\nloop invariant x >= 10 ==> z <= 100;\nloop invariant x < 10 ==> z > 100;\nloop invariant z <= 10 ==> x >= 100;\nloop invariant z > 10 ==> x < 100;\nloop invariant x >= 11 ==> z <= 100;\nloop invariant x < 11 ==> z > 100;\nloop invariant z <= 11 ==> x >= 100;\nloop invariant z > 11 ==> x < 100;\nloop invariant x >= 12 ==> z <= 100;\nloop invariant x < 12 ==> z > 100;\nloop invariant z <= 12 ==> x >= 100;\nloop invariant z > 12 ==> x < 100;\nloop invariant x >= 13 ==> z <= 100;\nloop invariant x < 13 ==> z > 100;\nloop invariant z <= 13 ==> x >= 100;\nloop invariant z > 13 ==> x < 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant -100 <= x <= 100;\nloop invariant 0 <= z <= 100;\nloop invariant 0 <= x <= 100 ==> x>=100 || z<=100;\nloop invariant -100 <= x <= 100 ==> x>=100 || z<=100;\nloop invariant 0 <= z <= 100 ==> x>=100 || z<=100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant -100 <= x <= 0;\nloop invariant z <= 100;\nloop invariant z > 100 ==> x < 100;\nloop invariant x >= 100 ==> z > 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant -100 <= x <= 100;\nloop invariant x > 100 ==> z < 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x == 100 ==> z <= 100;\nloop invariant x == -100 ==> z >= 100;\nloop invariant x == z ==> z >= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant -100 <= x <= 0;\nloop invariant 0 <= z <= 100;\nloop invariant x < z;\nloop invariant x >= z;\nloop invariant x + z < 100;\nloop invariant x + z <= 100;\nloop invariant x + z > 100;\nloop invariant x + z >= 100;\nloop invariant x <= z;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant x >= -100;\nloop invariant z <= 100;\nloop invariant z >= -100;\nloop invariant x + z < 100;\nloop invariant x + z <= 100;\nloop invariant x + z > 100;\nloop invariant x + z >= 100;\nloop invariant x <= z;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant x >= -100;\nloop invariant z <= 100;\nloop invariant z >= -100;\nloop invariant x + z < 100;\nloop invariant x + z <= 100;\nloop invariant x + z > 100;\nloop invariant x + z >= 100;\nloop invariant x <= z;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant x >= -100;\nloop invariant z <= 100;\nloop invariant z >= -100;\nloop invariant x + z < 100;\nloop invariant x + z <= 100;\nloop invariant x + z > 100;\nloop invariant x + z >= 100;\nloop invariant x <= z;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant x >= -100;\nloop invariant z <= 100;\nloop invariant z >= -100;\nloop invariant x + z < 100;\nloop invariant x + z <= 100;\nloop invariant x + z > 100;\nloop invariant x + z >= 100;\nloop invariant x <= z;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant x >= -100;\nloop invariant z <= 100;\nloop invariant z >= -100;\nloop invariant x + z < 100;\nloop invariant x + z <= 100;\nloop invariant x + z > 100;\nloop invariant x + z >= 100;\nloop invariant x <= z;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant x >= -100;\nloop invariant z <= 100;\nloop invariant z >= -100;\nloop invariant x + z < 100;\nloop invariant x + z <= 100;\nloop invariant x + z > 100;\nloop invariant x + z >= 100;\nloop invariant x <= z;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant x >= -100;\nloop invariant z <= 100;\nloop invariant z >= -100;\nloop invariant x + z < 100;\nloop invariant x + z <= 100;\nloop invariant x + z > 100;\nloop invariant x + z >= 100;\nloop invariant x <= z;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant x >= -100;\nloop invariant z <= 100;\nloop invariant z >= -100;\nloop invariant x + z < 100;\nloop invariant x + z <= 100;\nloop invariant x + z > 100;\nloop invariant x + z >= 100;\nloop invariant x <= z;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant x >= -100;\nloop invariant z <= 100;\nloop invariant z >= -100;\nloop invariant x + z < 100;\nloop invariant x + z <= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 100 < z;\nloop invariant (x - 100) * y <= z <= (x + 100) * y;\nloop invariant (x - 100) * y <= x <= (x + 100) * y;\nloop invariant x >= z;\nloop invariant x <= z;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant -100 <= x <= 100;\nloop invariant z > 100;\nloop invariant 100 > z;\nloop invariant x <= 100;\nloop invariant x <= z;\nloop invariant x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\n*/\n```",
            "```\n/*@\nloop invariant ( ( ( ( x == 0 ) && ( y == 0 ) ) || ( ( x > 0 ) && ( y > 0 ) ) ) && ( ( x >= z ) || ( x < 100 ) ) ) ==> ( ( ( ( x == 0 ) && ( y == 0 ) ) || ( ( x > 0 ) && ( y > 0 ) ) ) && ( ( x >= z ) || ( x < 100 ) ) );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100;\nloop invariant x >= -100;\nloop invariant x >= (x + (x - 1) * (x - 1) / 2);\nloop invariant x >= (x - 1) * (x - 1) / 2;\nloop invariant x >= (x - 1) * (x - 2) / 2;\nloop invariant x >= (x - 1) * (x - 3) / 2;\nloop invariant x >= (x - 1) * (x - 4) / 2;\nloop invariant x >= (x - 1) * (x - 5) / 2;\nloop invariant x >= (x - 1) * (x - 6) / 2;\nloop invariant x >= (x - 1) * (x - 7) / 2;\nloop invariant x >= (x - 1) * (x - 8) / 2;\nloop invariant x >= (x - 1) * (x - 9) / 2;\nloop invariant x >= (x - 1) * (x - 10) / 2;\nloop invariant x >= (x - 1) * (x - 11) / 2;\nloop invariant x >= (x - 1) * (x - 12) / 2;\nloop invariant x >= (x - 1) * (x - 13) / 2;\nloop invariant x >= (x - 1) * (x - 14) / 2;\nloop invariant x >= (x - 1) * (x - 15) / 2;\nloop invariant x >= (x - 1) * (x - 16) / 2;\nloop invariant x >= (x - 1) * (x - 17) / 2;\nloop invariant x >= (x - 1) * (x - 18) / 2;\nloop invariant x >= (x - 1) * (x - 19) / 2;\nloop invariant x >= (x - 1) * (x - 20) / 2;\nloop invariant x >= (x - 1) * (x - 21) / 2;\nloop invariant x >= (x - 1) * (x - 22) / 2;\nloop invariant x >= (x - 1) * (x - 23) / 2;\nloop invariant x >= (x - 1) * (x - 24) / 2;\nloop invariant x >= (x - 1) * (x - 25) / 2;\nloop invariant x >= (x - 1) * (x - 26) / 2;\nloop invariant x >= (x - 1) * (x - 27) / 2;\nloop invariant x >= (x - 1) * (x - 28) / 2;\nloop invariant x >= (x - 1) * (x - 29) / 2;\nloop invariant x >= (x - 1) * (x - 30) / 2;\nloop invariant x >= (x - 1) * (x - 31) / 2;\nloop invariant x >= (x - 1) * (x - 32) / 2;\nloop invariant x >= (x - 1) * (x - 33) / 2;\nloop invariant x >= (x - 1) * (x - 34) / 2;\nloop invariant x >= (x - 1) * (x - 35) / 2;\nloop invariant x >= (x - 1) * (x - 36) / 2;\nloop invariant x >= (x - 1) * (x - 37) / 2;\nloop invariant x >= (x - 1) * (x - 38) / 2;\nloop invariant x >= (x - 1) * (x - 39) / 2;\nloop invariant x >= (x - 1) * (x - 40) / 2;\nloop invariant x >= (x - 1) * (x - 41) / 2;\nloop invariant x >= (x - 1) * (x - 42) / 2;\nloop invariant x >= (x - 1) * (x - 43) / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= z <= 100;\nloop invariant x <= z;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant -100 <= x <= 0;\nloop invariant z >= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= z;\nloop invariant x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\nloop invariant x == z ==> x == z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n    int  x=unknown_int();\n    int y=unknown_int();\n    int  z=unknown_int();\nassume(x<100);\nassume(x>-100);\nassume(z<100);\nassume(z>-100);\n    /*@\n\n\n\nloop invariant i4: z <= 100;\n\n\n\nloop invariant i8: x == z ==> x == z;\n*/\nwhile(x<100 && 100<z)\n    {\n        int  tmp=unknown_bool();\n        if(tmp){\n            x++;\n        } else {\n            x--;\n            z--;\n        }\n    }\n    {;\n//@ assert(x>=100 || z<=100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant x >= -100;\nloop invariant x <= 100;\nloop invariant 100 < z;\nloop invariant z <= 100;\nloop invariant x + z <= 200;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n    int  x=unknown_int();\n    int y=unknown_int();\n    int  z=unknown_int();\nassume(x<100);\nassume(x>-100);\nassume(z<100);\nassume(z>-100);\n    /*@\nloop invariant i1: x >= -100;\nloop invariant i2: x <= 100;\n\nloop invariant i4: z <= 100;\nloop invariant i5: x + z <= 200;\n*/\nwhile(x<100 && 100<z)\n    {\n        int  tmp=unknown_bool();\n        if(tmp){\n            x++;\n        } else {\n            x--;\n            z--;\n        }\n    }\n    {;\n//@ assert(x>=100 || z<=100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 99;\nloop invariant 100 <= z <= 108;\nloop invariant x <= z;\nloop invariant x >= 0;\nloop invariant z >= 100;\nloop invariant x >= -100;\nloop invariant z <= 108;\nloop invariant x <= z;\nloop invariant x >= 0;\nloop invariant z >= 100;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\nloop invariant x <= z;\nloop invariant x >= -100;\nloop invariant z >= 108;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n    int  x=unknown_int();\n    int y=unknown_int();\n    int  z=unknown_int();\nassume(x<100);\nassume(x>-100);\nassume(z<100);\nassume(z>-100);\n    /*@\n\n\n\n\n\n\nloop invariant i7: z <= 108;\n\n*/\nwhile(x<100 && 100<z)\n    {\n        int  tmp=unknown_bool();\n        if(tmp){\n            x++;\n        } else {\n            x--;\n            z--;\n        }\n    }\n    {;\n//@ assert(x>=100 || z<=100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x >= -100;\nloop invariant x < 100;\nloop invariant z > -100;\nloop invariant z < 100;\nloop invariant x < 100 && 100 < z;\nloop invariant x >= -100;\nloop invariant x < 100;\nloop invariant z > -100;\nloop invariant z < 100;\nloop invariant x < 100 && 100 < z;\nloop invariant x > -100;\nloop invariant x >= 100;\nloop invariant z > -100;\nloop invariant z <= 100;\nloop invariant x < 100 && 100 < z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n    int  x=unknown_int();\n    int y=unknown_int();\n    int  z=unknown_int();\nassume(x<100);\nassume(x>-100);\nassume(z<100);\nassume(z>-100);\n    /*@\nloop invariant i1: x >= -100;\nloop invariant i2: x < 100;\nloop invariant i3: z > -100;\nloop invariant i4: z < 100;\n\nloop invariant i6: x > -100;\n\nloop invariant i8: z <= 100;\n*/\nwhile(x<100 && 100<z)\n    {\n        int  tmp=unknown_bool();\n        if(tmp){\n            x++;\n        } else {\n            x--;\n            z--;\n        }\n    }\n    {;\n//@ assert(x>=100 || z<=100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 100 ==> x < 1000;\nloop invariant x < 100 ==> x < 1000;\nloop invariant z <= -100 ==> z > 100;\nloop invariant z > -100 ==> z > 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n    int  x=unknown_int();\n    int y=unknown_int();\n    int  z=unknown_int();\nassume(x<100);\nassume(x>-100);\nassume(z<100);\nassume(z>-100);\n    /*@\n\nloop invariant i2: x >= 100 ==> x < 1000;\nloop invariant i3: x < 100 ==> x < 1000;\nloop invariant i4: z <= -100 ==> z > 100;\n\n*/\nwhile(x<100 && 100<z)\n    {\n        int  tmp=unknown_bool();\n        if(tmp){\n            x++;\n        } else {\n            x--;\n            z--;\n        }\n    }\n    {;\n//@ assert(x>=100 || z<=100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant -100 <= x <= 100;\nloop invariant 100 <= z <= 100;\nloop invariant -100 <= z <= 100;\nloop invariant x >= z;\nloop invariant x <= z;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z > 100;\nloop invariant z <= 100 ==> x >= 100;\nloop invariant z > 100 ==> x < 100;\nloop invariant x >= -100 ==> z <= 100;\nloop invariant x < -100 ==> z > 100;\nloop invariant z <= -100 ==> x >= 100;\nloop invariant z > -100 ==> x < 100;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x < 0 ==> z > 100;\nloop invariant z <= 0 ==> x >= 100;\nloop invariant z > 0 ==> x < 100;\nloop invariant x >= 1 ==> z <= 100;\nloop invariant x < 1 ==> z > 100;\nloop invariant z <= 1 ==> x >= 100;\nloop invariant z > 1 ==> x < 100;\nloop invariant x >= 2 ==> z <= 100;\nloop invariant x < 2 ==> z > 100;\nloop invariant z <= 2 ==> x >= 100;\nloop invariant z > 2 ==> x < 100;\nloop invariant x >= 3 ==> z <= 100;\nloop invariant x < 3 ==> z > 100;\nloop invariant z <= 3 ==> x >= 100;\nloop invariant z > 3 ==> x < 100;\nloop invariant x >= 4 ==> z <= 100;\nloop invariant x < 4 ==> z > 100;\nloop invariant z <= 4 ==> x >= 100;\nloop invariant z > 4 ==> x < 100;\nloop invariant x >= 5 ==> z <= 100;\nloop invariant x < 5 ==> z > 100;\nloop invariant z <= 5 ==> x >= 100;\nloop invariant z > 5 ==> x < 100;\nloop invariant x >= 6 ==> z <= 100;\nloop invariant x < 6 ==> z > 100;\nloop invariant z <= 6 ==> x >= 100;\nloop invariant z > 6 ==> x < 100;\nloop invariant x >= 7 ==> z <= 100;\nloop invariant x < 7 ==> z > 100;\nloop invariant z <= 7 ==> x >= 100;\nloop invariant z > 7 ==> x < 100;\nloop invariant x >= 8 ==> z <= 100;\nloop invariant x < 8 ==> z > 100;\nloop invariant z <= 8 ==> x >= 100;\nloop invariant z > 8 ==> x < 100;\nloop invariant x >= 9 ==> z <= 100;\nloop invariant x < 9 ==> z > 100;\nloop invariant z <= 9 ==> x >= 100;\nloop invariant z > 9 ==> x < 100;\nloop invariant x >= 10 ==> z <= 100;\nloop invariant x < 10 ==> z > 100;\nloop invariant z <= 10 ==> x >= 100;\nloop invariant z > 10 ==> x < 100;\nloop invariant x >= 11 ==> z <= 100;\nloop invariant x < 11 ==> z > 100;\nloop invariant z <= 11 ==> x >= 100;\nloop invariant z > 11 ==> x < 100;\nloop invariant x >= 12 ==> z <= 100;\nloop invariant x < 12 ==> z > 100;\nloop invariant z <= 12 ==> x >= 100;\nloop invariant z > 12 ==> x < 100;\nloop invariant x >= 13 ==> z <= 100;\nloop invariant x < 13 ==> z > 100;\nloop invariant z <= 13 ==> x >= 100;\nloop invariant z > 13 ==> x < 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n    int  x=unknown_int();\n    int y=unknown_int();\n    int  z=unknown_int();\nassume(x<100);\nassume(x>-100);\nassume(z<100);\nassume(z>-100);\n    /*@\n\nloop invariant i2: -100 <= x <= 100;\n\nloop invariant i4: -100 <= z <= 100;\n\n\nloop invariant i7: x >= 100 ==> z <= 100;\n\n\nloop invariant i10: z > 100 ==> x < 100;\nloop invariant i11: x >= -100 ==> z <= 100;\nloop invariant i12: x < -100 ==> z > 100;\nloop invariant i13: z <= -100 ==> x >= 100;\nloop invariant i14: z > -100 ==> x < 100;\nloop invariant i15: x >= 0 ==> z <= 100;\n\n\nloop invariant i18: z > 0 ==> x < 100;\nloop invariant i19: x >= 1 ==> z <= 100;\n\n\nloop invariant i22: z > 1 ==> x < 100;\nloop invariant i23: x >= 2 ==> z <= 100;\n\n\nloop invariant i26: z > 2 ==> x < 100;\nloop invariant i27: x >= 3 ==> z <= 100;\n\n\nloop invariant i30: z > 3 ==> x < 100;\nloop invariant i31: x >= 4 ==> z <= 100;\n\n\nloop invariant i34: z > 4 ==> x < 100;\nloop invariant i35: x >= 5 ==> z <= 100;\n\n\nloop invariant i38: z > 5 ==> x < 100;\nloop invariant i39: x >= 6 ==> z <= 100;\n\n\nloop invariant i42: z > 6 ==> x < 100;\nloop invariant i43: x >= 7 ==> z <= 100;\n\n\nloop invariant i46: z > 7 ==> x < 100;\nloop invariant i47: x >= 8 ==> z <= 100;\n\n\nloop invariant i50: z > 8 ==> x < 100;\nloop invariant i51: x >= 9 ==> z <= 100;\n\n\nloop invariant i54: z > 9 ==> x < 100;\nloop invariant i55: x >= 10 ==> z <= 100;\n\n\nloop invariant i58: z > 10 ==> x < 100;\nloop invariant i59: x >= 11 ==> z <= 100;\n\n\nloop invariant i62: z > 11 ==> x < 100;\nloop invariant i63: x >= 12 ==> z <= 100;\n\n\nloop invariant i66: z > 12 ==> x < 100;\nloop invariant i67: x >= 13 ==> z <= 100;\n\n\nloop invariant i70: z > 13 ==> x < 100;\n*/\nwhile(x<100 && 100<z)\n    {\n        int  tmp=unknown_bool();\n        if(tmp){\n            x++;\n        } else {\n            x--;\n            z--;\n        }\n    }\n    {;\n//@ assert(x>=100 || z<=100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant -100 <= x <= 100;\nloop invariant 0 <= z <= 100;\nloop invariant 0 <= x <= 100 ==> x>=100 || z<=100;\nloop invariant -100 <= x <= 100 ==> x>=100 || z<=100;\nloop invariant 0 <= z <= 100 ==> x>=100 || z<=100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n    int  x=unknown_int();\n    int y=unknown_int();\n    int  z=unknown_int();\nassume(x<100);\nassume(x>-100);\nassume(z<100);\nassume(z>-100);\n    /*@\n\nloop invariant i2: -100 <= x <= 100;\n\nloop invariant i4: 0 <= x <= 100 ==> x>=100 || z<=100;\nloop invariant i5: -100 <= x <= 100 ==> x>=100 || z<=100;\nloop invariant i6: 0 <= z <= 100 ==> x>=100 || z<=100;\n*/\nwhile(x<100 && 100<z)\n    {\n        int  tmp=unknown_bool();\n        if(tmp){\n            x++;\n        } else {\n            x--;\n            z--;\n        }\n    }\n    {;\n//@ assert(x>=100 || z<=100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant -100 <= x <= 0;\nloop invariant z <= 100;\nloop invariant z > 100 ==> x < 100;\nloop invariant x >= 100 ==> z > 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x < 100 ==> z >= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n    int  x=unknown_int();\n    int y=unknown_int();\n    int  z=unknown_int();\nassume(x<100);\nassume(x>-100);\nassume(z<100);\nassume(z>-100);\n    /*@\n\n\nloop invariant i3: z <= 100;\nloop invariant i4: z > 100 ==> x < 100;\nloop invariant i5: x >= 100 ==> z > 100;\nloop invariant i6: x >= 100 ==> z <= 100;\n\n*/\nwhile(x<100 && 100<z)\n    {\n        int  tmp=unknown_bool();\n        if(tmp){\n            x++;\n        } else {\n            x--;\n            z--;\n        }\n    }\n    {;\n//@ assert(x>=100 || z<=100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant -100 <= x <= 100;\nloop invariant x > 100 ==> z < 100;\nloop invariant x < 100 ==> z >= 100;\nloop invariant x == 100 ==> z <= 100;\nloop invariant x == -100 ==> z >= 100;\nloop invariant x == z ==> z >= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n    int  x=unknown_int();\n    int y=unknown_int();\n    int  z=unknown_int();\nassume(x<100);\nassume(x>-100);\nassume(z<100);\nassume(z>-100);\n    /*@\n\n\nloop invariant i3: x > 100 ==> z < 100;\n\n\nloop invariant i6: x == -100 ==> z >= 100;\n\n*/\nwhile(x<100 && 100<z)\n    {\n        int  tmp=unknown_bool();\n        if(tmp){\n            x++;\n        } else {\n            x--;\n            z--;\n        }\n    }\n    {;\n//@ assert(x>=100 || z<=100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant -100 <= x <= 0;\nloop invariant 0 <= z <= 100;\nloop invariant x < z;\nloop invariant x >= z;\nloop invariant x + z < 100;\nloop invariant x + z <= 100;\nloop invariant x + z > 100;\nloop invariant x + z >= 100;\nloop invariant x <= z;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant x >= -100;\nloop invariant z <= 100;\nloop invariant z >= -100;\nloop invariant x + z < 100;\nloop invariant x + z <= 100;\nloop invariant x + z > 100;\nloop invariant x + z >= 100;\nloop invariant x <= z;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant x >= -100;\nloop invariant z <= 100;\nloop invariant z >= -100;\nloop invariant x + z < 100;\nloop invariant x + z <= 100;\nloop invariant x + z > 100;\nloop invariant x + z >= 100;\nloop invariant x <= z;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant x >= -100;\nloop invariant z <= 100;\nloop invariant z >= -100;\nloop invariant x + z < 100;\nloop invariant x + z <= 100;\nloop invariant x + z > 100;\nloop invariant x + z >= 100;\nloop invariant x <= z;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant x >= -100;\nloop invariant z <= 100;\nloop invariant z >= -100;\nloop invariant x + z < 100;\nloop invariant x + z <= 100;\nloop invariant x + z > 100;\nloop invariant x + z >= 100;\nloop invariant x <= z;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant x >= -100;\nloop invariant z <= 100;\nloop invariant z >= -100;\nloop invariant x + z < 100;\nloop invariant x + z <= 100;\nloop invariant x + z > 100;\nloop invariant x + z >= 100;\nloop invariant x <= z;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant x >= -100;\nloop invariant z <= 100;\nloop invariant z >= -100;\nloop invariant x + z < 100;\nloop invariant x + z <= 100;\nloop invariant x + z > 100;\nloop invariant x + z >= 100;\nloop invariant x <= z;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant x >= -100;\nloop invariant z <= 100;\nloop invariant z >= -100;\nloop invariant x + z < 100;\nloop invariant x + z <= 100;\nloop invariant x + z > 100;\nloop invariant x + z >= 100;\nloop invariant x <= z;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant x >= -100;\nloop invariant z <= 100;\nloop invariant z >= -100;\nloop invariant x + z < 100;\nloop invariant x + z <= 100;\nloop invariant x + z > 100;\nloop invariant x + z >= 100;\nloop invariant x <= z;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant x >= -100;\nloop invariant z <= 100;\nloop invariant z >= -100;\nloop invariant x + z < 100;\nloop invariant x + z <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n    int  x=unknown_int();\n    int y=unknown_int();\n    int  z=unknown_int();\nassume(x<100);\nassume(x>-100);\nassume(z<100);\nassume(z>-100);\n    /*@\n\n\n\n\n\n\n\n\n\n\nloop invariant i11: x <= 100;\nloop invariant i12: x >= -100;\nloop invariant i13: z <= 100;\nloop invariant i14: z >= -100;\n*/\nwhile(x<100 && 100<z)\n    {\n        int  tmp=unknown_bool();\n        if(tmp){\n            x++;\n        } else {\n            x--;\n            z--;\n        }\n    }\n    {;\n//@ assert(x>=100 || z<=100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 100 < z;\nloop invariant (x - 100) * y <= z <= (x + 100) * y;\nloop invariant (x - 100) * y <= x <= (x + 100) * y;\nloop invariant x >= z;\nloop invariant x <= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n    int  x=unknown_int();\n    int y=unknown_int();\n    int  z=unknown_int();\nassume(x<100);\nassume(x>-100);\nassume(z<100);\nassume(z>-100);\n    /*@\n\n\n\n\n\n\n*/\nwhile(x<100 && 100<z)\n    {\n        int  tmp=unknown_bool();\n        if(tmp){\n            x++;\n        } else {\n            x--;\n            z--;\n        }\n    }\n    {;\n//@ assert(x>=100 || z<=100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant -100 <= x <= 100;\nloop invariant z > 100;\nloop invariant 100 > z;\nloop invariant x <= 100;\nloop invariant x <= z;\nloop invariant x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n    int  x=unknown_int();\n    int y=unknown_int();\n    int  z=unknown_int();\nassume(x<100);\nassume(x>-100);\nassume(z<100);\nassume(z>-100);\n    /*@\n\nloop invariant i2: -100 <= x <= 100;\n\nloop invariant i4: 100 > z;\nloop invariant i5: x <= 100;\n\nloop invariant i7: x <= z ==> x <= z;\nloop invariant i8: x <= z ==> x <= z ==> x <= z;\nloop invariant i9: x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i10: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i11: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i12: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i13: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i14: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i15: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i16: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i17: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i18: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i19: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i20: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i21: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i22: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i23: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i24: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i25: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\n*/\nwhile(x<100 && 100<z)\n    {\n        int  tmp=unknown_bool();\n        if(tmp){\n            x++;\n        } else {\n            x--;\n            z--;\n        }\n    }\n    {;\n//@ assert(x>=100 || z<=100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant ( ( ( ( x == 0 ) && ( y == 0 ) ) || ( ( x > 0 ) && ( y > 0 ) ) ) && ( ( x >= z ) || ( x < 100 ) ) ) ==> ( ( ( ( x == 0 ) && ( y == 0 ) ) || ( ( x > 0 ) && ( y > 0 ) ) ) && ( ( x >= z ) || ( x < 100 ) ) );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n    int  x=unknown_int();\n    int y=unknown_int();\n    int  z=unknown_int();\nassume(x<100);\nassume(x>-100);\nassume(z<100);\nassume(z>-100);\n    /*@\nloop invariant i1: ( ( ( ( x == 0 ) && ( y == 0 ) ) || ( ( x > 0 ) && ( y > 0 ) ) ) && ( ( x >= z ) || ( x < 100 ) ) ) ==> ( ( ( ( x == 0 ) && ( y == 0 ) ) || ( ( x > 0 ) && ( y > 0 ) ) ) && ( ( x >= z ) || ( x < 100 ) ) );\n*/\nwhile(x<100 && 100<z)\n    {\n        int  tmp=unknown_bool();\n        if(tmp){\n            x++;\n        } else {\n            x--;\n            z--;\n        }\n    }\n    {;\n//@ assert(x>=100 || z<=100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100;\nloop invariant x >= -100;\nloop invariant x >= (x + (x - 1) * (x - 1) / 2);\nloop invariant x >= (x - 1) * (x - 1) / 2;\nloop invariant x >= (x - 1) * (x - 2) / 2;\nloop invariant x >= (x - 1) * (x - 3) / 2;\nloop invariant x >= (x - 1) * (x - 4) / 2;\nloop invariant x >= (x - 1) * (x - 5) / 2;\nloop invariant x >= (x - 1) * (x - 6) / 2;\nloop invariant x >= (x - 1) * (x - 7) / 2;\nloop invariant x >= (x - 1) * (x - 8) / 2;\nloop invariant x >= (x - 1) * (x - 9) / 2;\nloop invariant x >= (x - 1) * (x - 10) / 2;\nloop invariant x >= (x - 1) * (x - 11) / 2;\nloop invariant x >= (x - 1) * (x - 12) / 2;\nloop invariant x >= (x - 1) * (x - 13) / 2;\nloop invariant x >= (x - 1) * (x - 14) / 2;\nloop invariant x >= (x - 1) * (x - 15) / 2;\nloop invariant x >= (x - 1) * (x - 16) / 2;\nloop invariant x >= (x - 1) * (x - 17) / 2;\nloop invariant x >= (x - 1) * (x - 18) / 2;\nloop invariant x >= (x - 1) * (x - 19) / 2;\nloop invariant x >= (x - 1) * (x - 20) / 2;\nloop invariant x >= (x - 1) * (x - 21) / 2;\nloop invariant x >= (x - 1) * (x - 22) / 2;\nloop invariant x >= (x - 1) * (x - 23) / 2;\nloop invariant x >= (x - 1) * (x - 24) / 2;\nloop invariant x >= (x - 1) * (x - 25) / 2;\nloop invariant x >= (x - 1) * (x - 26) / 2;\nloop invariant x >= (x - 1) * (x - 27) / 2;\nloop invariant x >= (x - 1) * (x - 28) / 2;\nloop invariant x >= (x - 1) * (x - 29) / 2;\nloop invariant x >= (x - 1) * (x - 30) / 2;\nloop invariant x >= (x - 1) * (x - 31) / 2;\nloop invariant x >= (x - 1) * (x - 32) / 2;\nloop invariant x >= (x - 1) * (x - 33) / 2;\nloop invariant x >= (x - 1) * (x - 34) / 2;\nloop invariant x >= (x - 1) * (x - 35) / 2;\nloop invariant x >= (x - 1) * (x - 36) / 2;\nloop invariant x >= (x - 1) * (x - 37) / 2;\nloop invariant x >= (x - 1) * (x - 38) / 2;\nloop invariant x >= (x - 1) * (x - 39) / 2;\nloop invariant x >= (x - 1) * (x - 40) / 2;\nloop invariant x >= (x - 1) * (x - 41) / 2;\nloop invariant x >= (x - 1) * (x - 42) / 2;\nloop invariant x >= (x - 1) * (x - 43) / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n    int  x=unknown_int();\n    int y=unknown_int();\n    int  z=unknown_int();\nassume(x<100);\nassume(x>-100);\nassume(z<100);\nassume(z>-100);\n    /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x<100 && 100<z)\n    {\n        int  tmp=unknown_bool();\n        if(tmp){\n            x++;\n        } else {\n            x--;\n            z--;\n        }\n    }\n    {;\n//@ assert(x>=100 || z<=100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= z <= 100;\nloop invariant x <= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n    int  x=unknown_int();\n    int y=unknown_int();\n    int  z=unknown_int();\nassume(x<100);\nassume(x>-100);\nassume(z<100);\nassume(z>-100);\n    /*@\n\n\n\n*/\nwhile(x<100 && 100<z)\n    {\n        int  tmp=unknown_bool();\n        if(tmp){\n            x++;\n        } else {\n            x--;\n            z--;\n        }\n    }\n    {;\n//@ assert(x>=100 || z<=100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "loop invariant 0 <= x <= 100 is preserved but not established.\nloop invariant -100 <= x <= 0 is preserved but not established.\nloop invariant z >= 100 is preserved but not established.\nloop invariant z <= 100 is partially proven to be inductive.\nloop invariant x >= z is partially proven to be inductive.\nloop invariant x <= z is partially proven to be inductive.\nloop invariant x == z is partially proven to be inductive.\nloop invariant x == z ==> x == z is partially proven to be inductive.\nloop invariant x >= -100 is partially proven to be inductive.\nloop invariant x <= 100 is partially proven to be inductive.\nloop invariant 100 < z is partially proven to be inductive.\nloop invariant x + z <= 200 is partially proven to be inductive.\nloop invariant 0 <= x <= 99 is partially proven to be inductive.\nloop invariant 100 <= z <= 108 is partially proven to be inductive.\nloop invariant x >= 0 is partially proven to be inductive.\nloop invariant z <= 108 is partially proven to be inductive.\nloop invariant z >= 108 is partially proven to be inductive.\nloop invariant x < 100 is partially proven to be inductive.\nloop invariant z > -100 is partially proven to be inductive.\nloop invariant z < 100 is partially proven to be inductive.\nloop invariant x < 100 && 100 < z is partially proven to be inductive.\nloop invariant x > -100 is partially proven to be inductive.\nloop invariant x >= 100 is partially proven to be inductive.\nloop invariant x >= (1 + (y - 1) * y / 2) is partially proven to be inductive.\nloop invariant x >= 100 ==> x < 1000 is partially proven to be inductive.\nloop invariant x < 100 ==> x < 1000 is partially proven to be inductive.\nloop invariant z <= -100 ==> z > 100 is partially proven to be inductive.\nloop invariant z > -100 ==> z > 100 is partially proven to be inductive.\nloop invariant -100 <= x <= 100 is partially proven to be inductive.\nloop invariant 100 <= z <= 100 is partially proven to be inductive.\nloop invariant -100 <= z <= 100 is partially proven to be inductive.\nloop invariant x >= 100 ==> z <= 100 is partially proven to be inductive.\nloop invariant x < 100 ==> z > 100 is partially proven to be inductive.\nloop invariant z <= 100 ==> x >= 100 is partially proven to be inductive.\nloop invariant z > 100 ==> x < 100 is partially proven to be inductive.\nloop invariant x >= -100 ==> z <= 100 is partially proven to be inductive.\nloop invariant x < -100 ==> z > 100 is partially proven to be inductive.\nloop invariant z <= -100 ==> x >= 100 is partially proven to be inductive.\nloop invariant z > -100 ==> x < 100 is partially proven to be inductive.\nloop invariant x >= 0 ==> z <= 100 is partially proven to be inductive.\nloop invariant x < 0 ==> z > 100 is partially proven to be inductive.\nloop invariant z <= 0 ==> x >= 100 is partially proven to be inductive.\nloop invariant z > 0 ==> x < 100 is partially proven to be inductive.\nloop invariant x >= 1 ==> z <= 100 is partially proven to be inductive.\nloop invariant x < 1 ==> z > 100 is partially proven to be inductive.\nloop invariant z <= 1 ==> x >= 100 is partially proven to be inductive.\nloop invariant z > 1 ==> x < 100 is partially proven to be inductive.\nloop invariant x >= 2 ==> z <= 100 is partially proven to be inductive.\nloop invariant x < 2 ==> z > 100 is partially proven to be inductive.\nloop invariant z <= 2 ==> x >= 100 is partially proven to be inductive.\nloop invariant z > 2 ==> x < 100 is partially proven to be inductive.\nloop invariant x >= 3 ==> z <= 100 is partially proven to be inductive.\nloop invariant x < 3 ==> z > 100 is partially proven to be inductive.\nloop invariant z <= 3 ==> x >= 100 is partially proven to be inductive.\nloop invariant z > 3 ==> x < 100 is partially proven to be inductive.\nloop invariant x >= 4 ==> z <= 100 is partially proven to be inductive.\nloop invariant x < 4 ==> z > 100 is partially proven to be inductive.\nloop invariant z <= 4 ==> x >= 100 is partially proven to be inductive.\nloop invariant z > 4 ==> x < 100 is partially proven to be inductive.\nloop invariant x >= 5 ==> z <= 100 is partially proven to be inductive.\nloop invariant x < 5 ==> z > 100 is partially proven to be inductive.\nloop invariant z <= 5 ==> x >= 100 is partially proven to be inductive.\nloop invariant z > 5 ==> x < 100 is partially proven to be inductive.\nloop invariant x >= 6 ==> z <= 100 is partially proven to be inductive.\nloop invariant x < 6 ==> z > 100 is partially proven to be inductive.\nloop invariant z <= 6 ==> x >= 100 is partially proven to be inductive.\nloop invariant z > 6 ==> x < 100 is partially proven to be inductive.\nloop invariant x >= 7 ==> z <= 100 is partially proven to be inductive.\nloop invariant x < 7 ==> z > 100 is partially proven to be inductive.\nloop invariant z <= 7 ==> x >= 100 is partially proven to be inductive.\nloop invariant z > 7 ==> x < 100 is partially proven to be inductive.\nloop invariant x >= 8 ==> z <= 100 is partially proven to be inductive.\nloop invariant x < 8 ==> z > 100 is partially proven to be inductive.\nloop invariant z <= 8 ==> x >= 100 is partially proven to be inductive.\nloop invariant z > 8 ==> x < 100 is partially proven to be inductive.\nloop invariant x >= 9 ==> z <= 100 is partially proven to be inductive.\nloop invariant x < 9 ==> z > 100 is partially proven to be inductive.\nloop invariant z <= 9 ==> x >= 100 is partially proven to be inductive.\nloop invariant z > 9 ==> x < 100 is partially proven to be inductive.\nloop invariant x >= 10 ==> z <= 100 is partially proven to be inductive.\nloop invariant x < 10 ==> z > 100 is partially proven to be inductive.\nloop invariant z <= 10 ==> x >= 100 is partially proven to be inductive.\nloop invariant z > 10 ==> x < 100 is partially proven to be inductive.\nloop invariant x >= 11 ==> z <= 100 is partially proven to be inductive.\nloop invariant x < 11 ==> z > 100 is partially proven to be inductive.\nloop invariant z <= 11 ==> x >= 100 is partially proven to be inductive.\nloop invariant z > 11 ==> x < 100 is partially proven to be inductive.\nloop invariant x >= 12 ==> z <= 100 is partially proven to be inductive.\nloop invariant x < 12 ==> z > 100 is partially proven to be inductive.\nloop invariant z <= 12 ==> x >= 100 is partially proven to be inductive.\nloop invariant z > 12 ==> x < 100 is partially proven to be inductive.\nloop invariant x >= 13 ==> z <= 100 is partially proven to be inductive.\nloop invariant x < 13 ==> z > 100 is partially proven to be inductive.\nloop invariant z <= 13 ==> x >= 100 is partially proven to be inductive.\nloop invariant z > 13 ==> x < 100 is partially proven to be inductive.\nloop invariant 0 <= z <= 100 is partially proven to be inductive.\nloop invariant 0 <= x <= 100 ==> x>=100 || z<=100 is partially proven to be inductive.\nloop invariant -100 <= x <= 100 ==> x>=100 || z<=100 is partially proven to be inductive.\nloop invariant 0 <= z <= 100 ==> x>=100 || z<=100 is partially proven to be inductive.\nloop invariant x >= 100 ==> z > 100 is partially proven to be inductive.\nloop invariant x < 100 ==> z >= 100 is partially proven to be inductive.\nloop invariant x > 100 ==> z < 100 is partially proven to be inductive.\nloop invariant x == 100 ==> z <= 100 is partially proven to be inductive.\nloop invariant x == -100 ==> z >= 100 is partially proven to be inductive.\nloop invariant x == z ==> z >= 100 is partially proven to be inductive.\nloop invariant x < z is partially proven to be inductive.\nloop invariant x + z < 100 is partially proven to be inductive.\nloop invariant x + z <= 100 is partially proven to be inductive.\nloop invariant x + z > 100 is partially proven to be inductive.\nloop invariant x + z >= 100 is partially proven to be inductive.\nloop invariant z >= -100 is partially proven to be inductive.\nloop invariant (x - 100) * y <= z <= (x + 100) * y is partially proven to be inductive.\nloop invariant (x - 100) * y <= x <= (x + 100) * y is partially proven to be inductive.\nloop invariant z > 100 is partially proven to be inductive.\nloop invariant 100 > z is partially proven to be inductive.\nloop invariant x <= z ==> x <= z is partially proven to be inductive.\nloop invariant x <= z ==> x <= z ==> x <= z is partially proven to be inductive.\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z is partially proven to be inductive.\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z is partially proven to be inductive.\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z is partially proven to be inductive.\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z is partially proven to be inductive.\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z is partially proven to be inductive.\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z is partially proven to be inductive.\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z is partially proven to be inductive.\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z is partially proven to be inductive.\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z is partially proven to be inductive.\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z is partially proven to be inductive.\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z is partially proven to be inductive.\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z is partially proven to be inductive.\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z is partially proven to be inductive.\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z is partially proven to be inductive.\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z is partially proven to be inductive.\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z is partially proven to be inductive.\nloop invariant x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z is partially proven to be inductive.\nloop invariant ( ( ( ( x == 0 ) && ( y == 0 ) ) || ( ( x > 0 ) && ( y > 0 ) ) ) && ( ( x >= z ) || ( x < 100 ) ) ) ==> ( ( ( ( x == 0 ) && ( y == 0 ) ) || ( ( x > 0 ) && ( y > 0 ) ) ) && ( ( x >= z ) || ( x < 100 ) ) ) is partially proven to be inductive.\nloop invariant 0 <= y <= 100 is partially proven to be inductive.\nloop invariant x >= (x + (x - 1) * (x - 1) / 2) is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 1) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 2) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 3) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 4) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 5) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 6) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 7) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 8) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 9) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 10) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 11) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 12) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 13) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 14) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 15) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 16) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 17) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 18) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 19) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 20) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 21) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 22) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 23) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 24) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 25) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 26) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 27) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 28) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 29) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 30) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 31) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 32) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 33) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 34) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 35) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 36) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 37) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 38) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 39) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 40) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 41) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 42) / 2 is partially proven to be inductive.\nloop invariant x >= (x - 1) * (x - 43) / 2 is partially proven to be inductive.\nAssertion x >= 100 || z <= 100: Partially proven",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n    int  x=unknown_int();\n    int y=unknown_int();\n    int  z=unknown_int();\nassume(x<100);\nassume(x>-100);\nassume(z<100);\nassume(z>-100);\n    /*@\nloop invariant i1: 0 <= x <= 100;\nloop invariant i2: -100 <= x <= 0;\nloop invariant i3: z >= 100;\nloop invariant i4: z <= 100;\nloop invariant i5: x >= z;\nloop invariant i6: x <= z;\nloop invariant i7: x == z;\nloop invariant i8: x == z ==> x == z;\nloop invariant i9: x >= -100;\nloop invariant i10: x <= 100;\nloop invariant i11: 100 < z;\nloop invariant i12: x + z <= 200;\nloop invariant i13: 0 <= x <= 99;\nloop invariant i14: 100 <= z <= 108;\nloop invariant i15: x >= 0;\nloop invariant i16: z <= 108;\nloop invariant i17: z >= 108;\nloop invariant i18: x < 100;\nloop invariant i19: z > -100;\nloop invariant i20: z < 100;\nloop invariant i21: x < 100 && 100 < z;\nloop invariant i22: x > -100;\nloop invariant i23: x >= 100;\nloop invariant i24: x >= (1 + (y - 1) * y / 2);\nloop invariant i25: x >= 100 ==> x < 1000;\nloop invariant i26: x < 100 ==> x < 1000;\nloop invariant i27: z <= -100 ==> z > 100;\nloop invariant i28: z > -100 ==> z > 100;\nloop invariant i29: -100 <= x <= 100;\nloop invariant i30: 100 <= z <= 100;\nloop invariant i31: -100 <= z <= 100;\nloop invariant i32: x >= 100 ==> z <= 100;\nloop invariant i33: x < 100 ==> z > 100;\nloop invariant i34: z <= 100 ==> x >= 100;\nloop invariant i35: z > 100 ==> x < 100;\nloop invariant i36: x >= -100 ==> z <= 100;\nloop invariant i37: x < -100 ==> z > 100;\nloop invariant i38: z <= -100 ==> x >= 100;\nloop invariant i39: z > -100 ==> x < 100;\nloop invariant i40: x >= 0 ==> z <= 100;\nloop invariant i41: x < 0 ==> z > 100;\nloop invariant i42: z <= 0 ==> x >= 100;\nloop invariant i43: z > 0 ==> x < 100;\nloop invariant i44: x >= 1 ==> z <= 100;\nloop invariant i45: x < 1 ==> z > 100;\nloop invariant i46: z <= 1 ==> x >= 100;\nloop invariant i47: z > 1 ==> x < 100;\nloop invariant i48: x >= 2 ==> z <= 100;\nloop invariant i49: x < 2 ==> z > 100;\nloop invariant i50: z <= 2 ==> x >= 100;\nloop invariant i51: z > 2 ==> x < 100;\nloop invariant i52: x >= 3 ==> z <= 100;\nloop invariant i53: x < 3 ==> z > 100;\nloop invariant i54: z <= 3 ==> x >= 100;\nloop invariant i55: z > 3 ==> x < 100;\nloop invariant i56: x >= 4 ==> z <= 100;\nloop invariant i57: x < 4 ==> z > 100;\nloop invariant i58: z <= 4 ==> x >= 100;\nloop invariant i59: z > 4 ==> x < 100;\nloop invariant i60: x >= 5 ==> z <= 100;\nloop invariant i61: x < 5 ==> z > 100;\nloop invariant i62: z <= 5 ==> x >= 100;\nloop invariant i63: z > 5 ==> x < 100;\nloop invariant i64: x >= 6 ==> z <= 100;\nloop invariant i65: x < 6 ==> z > 100;\nloop invariant i66: z <= 6 ==> x >= 100;\nloop invariant i67: z > 6 ==> x < 100;\nloop invariant i68: x >= 7 ==> z <= 100;\nloop invariant i69: x < 7 ==> z > 100;\nloop invariant i70: z <= 7 ==> x >= 100;\nloop invariant i71: z > 7 ==> x < 100;\nloop invariant i72: x >= 8 ==> z <= 100;\nloop invariant i73: x < 8 ==> z > 100;\nloop invariant i74: z <= 8 ==> x >= 100;\nloop invariant i75: z > 8 ==> x < 100;\nloop invariant i76: x >= 9 ==> z <= 100;\nloop invariant i77: x < 9 ==> z > 100;\nloop invariant i78: z <= 9 ==> x >= 100;\nloop invariant i79: z > 9 ==> x < 100;\nloop invariant i80: x >= 10 ==> z <= 100;\nloop invariant i81: x < 10 ==> z > 100;\nloop invariant i82: z <= 10 ==> x >= 100;\nloop invariant i83: z > 10 ==> x < 100;\nloop invariant i84: x >= 11 ==> z <= 100;\nloop invariant i85: x < 11 ==> z > 100;\nloop invariant i86: z <= 11 ==> x >= 100;\nloop invariant i87: z > 11 ==> x < 100;\nloop invariant i88: x >= 12 ==> z <= 100;\nloop invariant i89: x < 12 ==> z > 100;\nloop invariant i90: z <= 12 ==> x >= 100;\nloop invariant i91: z > 12 ==> x < 100;\nloop invariant i92: x >= 13 ==> z <= 100;\nloop invariant i93: x < 13 ==> z > 100;\nloop invariant i94: z <= 13 ==> x >= 100;\nloop invariant i95: z > 13 ==> x < 100;\nloop invariant i96: 0 <= z <= 100;\nloop invariant i97: 0 <= x <= 100 ==> x>=100 || z<=100;\nloop invariant i98: -100 <= x <= 100 ==> x>=100 || z<=100;\nloop invariant i99: 0 <= z <= 100 ==> x>=100 || z<=100;\nloop invariant i100: x >= 100 ==> z > 100;\nloop invariant i101: x < 100 ==> z >= 100;\nloop invariant i102: x > 100 ==> z < 100;\nloop invariant i103: x == 100 ==> z <= 100;\nloop invariant i104: x == -100 ==> z >= 100;\nloop invariant i105: x == z ==> z >= 100;\nloop invariant i106: x < z;\nloop invariant i107: x + z < 100;\nloop invariant i108: x + z <= 100;\nloop invariant i109: x + z > 100;\nloop invariant i110: x + z >= 100;\nloop invariant i111: z >= -100;\nloop invariant i112: (x - 100) * y <= z <= (x + 100) * y;\nloop invariant i113: (x - 100) * y <= x <= (x + 100) * y;\nloop invariant i114: z > 100;\nloop invariant i115: 100 > z;\nloop invariant i116: x <= z ==> x <= z;\nloop invariant i117: x <= z ==> x <= z ==> x <= z;\nloop invariant i118: x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i119: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i120: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i121: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i122: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i123: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i124: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i125: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i126: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i127: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i128: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i129: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i130: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i131: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i132: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i133: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i134: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i135: ( ( ( ( x == 0 ) && ( y == 0 ) ) || ( ( x > 0 ) && ( y > 0 ) ) ) && ( ( x >= z ) || ( x < 100 ) ) ) ==> ( ( ( ( x == 0 ) && ( y == 0 ) ) || ( ( x > 0 ) && ( y > 0 ) ) ) && ( ( x >= z ) || ( x < 100 ) ) );\nloop invariant i136: 0 <= y <= 100;\nloop invariant i137: x >= (x + (x - 1) * (x - 1) / 2);\nloop invariant i138: x >= (x - 1) * (x - 1) / 2;\nloop invariant i139: x >= (x - 1) * (x - 2) / 2;\nloop invariant i140: x >= (x - 1) * (x - 3) / 2;\nloop invariant i141: x >= (x - 1) * (x - 4) / 2;\nloop invariant i142: x >= (x - 1) * (x - 5) / 2;\nloop invariant i143: x >= (x - 1) * (x - 6) / 2;\nloop invariant i144: x >= (x - 1) * (x - 7) / 2;\nloop invariant i145: x >= (x - 1) * (x - 8) / 2;\nloop invariant i146: x >= (x - 1) * (x - 9) / 2;\nloop invariant i147: x >= (x - 1) * (x - 10) / 2;\nloop invariant i148: x >= (x - 1) * (x - 11) / 2;\nloop invariant i149: x >= (x - 1) * (x - 12) / 2;\nloop invariant i150: x >= (x - 1) * (x - 13) / 2;\nloop invariant i151: x >= (x - 1) * (x - 14) / 2;\nloop invariant i152: x >= (x - 1) * (x - 15) / 2;\nloop invariant i153: x >= (x - 1) * (x - 16) / 2;\nloop invariant i154: x >= (x - 1) * (x - 17) / 2;\nloop invariant i155: x >= (x - 1) * (x - 18) / 2;\nloop invariant i156: x >= (x - 1) * (x - 19) / 2;\nloop invariant i157: x >= (x - 1) * (x - 20) / 2;\nloop invariant i158: x >= (x - 1) * (x - 21) / 2;\nloop invariant i159: x >= (x - 1) * (x - 22) / 2;\nloop invariant i160: x >= (x - 1) * (x - 23) / 2;\nloop invariant i161: x >= (x - 1) * (x - 24) / 2;\nloop invariant i162: x >= (x - 1) * (x - 25) / 2;\nloop invariant i163: x >= (x - 1) * (x - 26) / 2;\nloop invariant i164: x >= (x - 1) * (x - 27) / 2;\nloop invariant i165: x >= (x - 1) * (x - 28) / 2;\nloop invariant i166: x >= (x - 1) * (x - 29) / 2;\nloop invariant i167: x >= (x - 1) * (x - 30) / 2;\nloop invariant i168: x >= (x - 1) * (x - 31) / 2;\nloop invariant i169: x >= (x - 1) * (x - 32) / 2;\nloop invariant i170: x >= (x - 1) * (x - 33) / 2;\nloop invariant i171: x >= (x - 1) * (x - 34) / 2;\nloop invariant i172: x >= (x - 1) * (x - 35) / 2;\nloop invariant i173: x >= (x - 1) * (x - 36) / 2;\nloop invariant i174: x >= (x - 1) * (x - 37) / 2;\nloop invariant i175: x >= (x - 1) * (x - 38) / 2;\nloop invariant i176: x >= (x - 1) * (x - 39) / 2;\nloop invariant i177: x >= (x - 1) * (x - 40) / 2;\nloop invariant i178: x >= (x - 1) * (x - 41) / 2;\nloop invariant i179: x >= (x - 1) * (x - 42) / 2;\nloop invariant i180: x >= (x - 1) * (x - 43) / 2;\n*/\nwhile(x<100 && 100<z)\n    {\n        int  tmp=unknown_bool();\n        if(tmp){\n            x++;\n        } else {\n            x--;\n            z--;\n        }\n    }\n    {;\n//@ assert(x>=100 || z<=100);\n}\n\n    return 0;\n}",
        "combined_annotation_num_solver_calls": 56,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n    int  x=unknown_int();\n    int y=unknown_int();\n    int  z=unknown_int();\nassume(x<100);\nassume(x>-100);\nassume(z<100);\nassume(z>-100);\n    /*@\n\n\n\nloop invariant i4: z <= 100;\n\n\n\nloop invariant i8: x == z ==> x == z;\nloop invariant i9: x >= -100;\nloop invariant i10: x <= 100;\n\nloop invariant i12: x + z <= 200;\n\n\n\nloop invariant i16: z <= 108;\n\nloop invariant i18: x < 100;\nloop invariant i19: z > -100;\nloop invariant i20: z < 100;\n\nloop invariant i22: x > -100;\n\n\nloop invariant i25: x >= 100 ==> x < 1000;\nloop invariant i26: x < 100 ==> x < 1000;\nloop invariant i27: z <= -100 ==> z > 100;\n\nloop invariant i29: -100 <= x <= 100;\n\nloop invariant i31: -100 <= z <= 100;\nloop invariant i32: x >= 100 ==> z <= 100;\n\n\nloop invariant i35: z > 100 ==> x < 100;\nloop invariant i36: x >= -100 ==> z <= 100;\nloop invariant i37: x < -100 ==> z > 100;\nloop invariant i38: z <= -100 ==> x >= 100;\nloop invariant i39: z > -100 ==> x < 100;\nloop invariant i40: x >= 0 ==> z <= 100;\n\n\nloop invariant i43: z > 0 ==> x < 100;\nloop invariant i44: x >= 1 ==> z <= 100;\n\n\nloop invariant i47: z > 1 ==> x < 100;\nloop invariant i48: x >= 2 ==> z <= 100;\n\n\nloop invariant i51: z > 2 ==> x < 100;\nloop invariant i52: x >= 3 ==> z <= 100;\n\n\nloop invariant i55: z > 3 ==> x < 100;\nloop invariant i56: x >= 4 ==> z <= 100;\n\n\nloop invariant i59: z > 4 ==> x < 100;\nloop invariant i60: x >= 5 ==> z <= 100;\n\n\nloop invariant i63: z > 5 ==> x < 100;\nloop invariant i64: x >= 6 ==> z <= 100;\n\n\nloop invariant i67: z > 6 ==> x < 100;\nloop invariant i68: x >= 7 ==> z <= 100;\n\n\nloop invariant i71: z > 7 ==> x < 100;\nloop invariant i72: x >= 8 ==> z <= 100;\n\n\nloop invariant i75: z > 8 ==> x < 100;\nloop invariant i76: x >= 9 ==> z <= 100;\n\n\nloop invariant i79: z > 9 ==> x < 100;\nloop invariant i80: x >= 10 ==> z <= 100;\n\n\nloop invariant i83: z > 10 ==> x < 100;\nloop invariant i84: x >= 11 ==> z <= 100;\n\n\nloop invariant i87: z > 11 ==> x < 100;\nloop invariant i88: x >= 12 ==> z <= 100;\n\n\nloop invariant i91: z > 12 ==> x < 100;\nloop invariant i92: x >= 13 ==> z <= 100;\n\n\nloop invariant i95: z > 13 ==> x < 100;\n\nloop invariant i97: 0 <= x <= 100 ==> x>=100 || z<=100;\nloop invariant i98: -100 <= x <= 100 ==> x>=100 || z<=100;\nloop invariant i99: 0 <= z <= 100 ==> x>=100 || z<=100;\nloop invariant i100: x >= 100 ==> z > 100;\n\nloop invariant i102: x > 100 ==> z < 100;\nloop invariant i103: x == 100 ==> z <= 100;\nloop invariant i104: x == -100 ==> z >= 100;\n\n\n\n\n\n\nloop invariant i111: z >= -100;\n\n\n\nloop invariant i115: 100 > z;\nloop invariant i116: x <= z ==> x <= z;\nloop invariant i117: x <= z ==> x <= z ==> x <= z;\nloop invariant i118: x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i119: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i120: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i121: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i122: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i123: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i124: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i125: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i126: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i127: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i128: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i129: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i130: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i131: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i132: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i133: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i134: x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z ==> x <= z;\nloop invariant i135: ( ( ( ( x == 0 ) && ( y == 0 ) ) || ( ( x > 0 ) && ( y > 0 ) ) ) && ( ( x >= z ) || ( x < 100 ) ) ) ==> ( ( ( ( x == 0 ) && ( y == 0 ) ) || ( ( x > 0 ) && ( y > 0 ) ) ) && ( ( x >= z ) || ( x < 100 ) ) );\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x<100 && 100<z)\n    {\n        int  tmp=unknown_bool();\n        if(tmp){\n            x++;\n        } else {\n            x--;\n            z--;\n        }\n    }\n    {;\n//@ assert(x>=100 || z<=100);\n}\n\n    return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c"
        ],
        "skipped": [],
        "total": 65,
        "success_count": 55,
        "failure_count": 10,
        "success_rate": 0.8461538461538461
    }
}