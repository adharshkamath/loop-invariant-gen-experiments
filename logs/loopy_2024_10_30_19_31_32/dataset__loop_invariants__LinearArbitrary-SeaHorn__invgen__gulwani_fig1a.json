{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  while( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x < 0;\nloop invariant y >= 0;\nloop invariant x + y >= 0;\nloop invariant x + y < 100;\nloop invariant x >= -50;\nloop invariant y <= 100;\nloop invariant x < y < 100;\nloop invariant x >= -50 + y;\nloop invariant x < -50 + y;\nloop invariant x >= -50 + (y - 1);\nloop invariant x < -50 + (y - 1);\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x < -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2 - y;\nloop invariant x < -50 + (y - 1) * y / 2 - y;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1;\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y;\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1;\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y;\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1;\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y;\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1;\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y;\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1;\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1 + y;\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1 + y;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1 + y + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;loop invariant x <= 0;loop invariant y >= 0;loop invariant y >= x + 50;loop invariant y <= x + 50;loop invariant x + 1 <= y;loop invariant x + 1 >= y;loop invariant x + 1 <= x + 50;loop invariant x + 1 >= x + 50;loop invariant x <= x + 50;loop invariant x >= x + 50;loop invariant y <= y - 1;loop invariant y >= y - 1;loop invariant x <= y;loop invariant x >= y;loop invariant x == y;loop invariant x != y;loop invariant x <= 0;loop invariant x >= 0;loop invariant y <= 0;loop invariant y >= 0;loop invariant x <= 1;loop invariant x >= 1;loop invariant y <= 1;loop invariant y >= 1;loop invariant x <= 2;loop invariant x >= 2;loop invariant y <= 2;loop invariant y >= 2;loop invariant x <= 3;loop invariant x >= 3;loop invariant y <= 3;loop invariant y >= 3;loop invariant x <= 4;loop invariant x >= 4;loop invariant y <= 4;loop invariant y >= 4;loop invariant x <= 5;loop invariant x >= 5;loop invariant y <= 5;loop invariant y >= 5;loop invariant x <= 6;loop invariant x >= 6;loop invariant y <= 6;loop invariant y >= 6;loop invariant x <= 7;loop invariant x >= 7;loop invariant y <= 7;loop invariant y >= 7;loop invariant x <= 8;loop invariant x >= 8;loop invariant y <= 8;loop invariant y >= 8;loop invariant x <= 9;loop invariant x >= 9;loop invariant y <= 9;loop invariant y >= 9;loop invariant x <= 10;loop invariant x >= 10;loop invariant y <= 10;loop invariant y >= 10;loop invariant x <= 11;loop invariant x >= 11;loop invariant y <= 11;loop invariant y >= 11;loop invariant x <= 12;loop invariant x >= 12;loop invariant y <= 12;loop invariant y >= 12;loop invariant x <= 13;loop invariant x >= 13;loop invariant y <= 13;loop invariant y >= 13;loop invariant x <= 14;loop invariant x >= 14;loop invariant y <= 14;loop invariant y >= 14;loop invariant x <= 15;loop invariant x >= 15;loop invariant y <= 15;loop invariant y >= 15;loop invariant x <= 16;loop invariant x >= 16;loop invariant y <= 16;loop invariant y >= 16;loop invariant x <= 17;loop invariant x >= 17;loop invariant y <= 17;loop invariant y >= 17;loop invariant x <= 18;loop invariant x >= 18;loop invariant y <= 18;loop invariant y >= 18;loop invariant x <= 19;loop invariant x >= 19;loop invariant y <= 19;loop invariant y >= 19;loop invariant x <= 20;loop invariant x >= 20;loop invariant y <= 20;loop invariant y >= 20;loop invariant x <= 21;loop invariant x >= 21;loop invariant y <= 21;loop invariant y >= 21;loop invariant x <= 22;loop invariant x >= 22;loop invariant y <= 22;loop invariant y >= 22;loop invariant x <= 23;loop invariant x >= 23;loop invariant y <= 23;loop invariant y >= 23;loop invariant x <= 24;loop invariant x >= 24;loop invariant y <= 24;loop invariant y >= 24;loop invariant x <= 25;loop invariant x >= 25;loop invariant y <= 25;loop invariant y >= 25;loop invariant x <= 26;loop invariant x >= 26;loop invariant y <= 26;loop invariant y >= 26;loop invariant x <= 27;loop invariant x >= 27;loop invariant y <= 27;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y;\nloop invariant -50 <= x <= y;\nloop invariant y > 0 ==> x >= y - 100000 || x < 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= y <= -x;\nloop invariant x >= -50;\nloop invariant y <= 50;\nloop invariant y <= -x;\nloop invariant x + y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y <= -x;\nloop invariant x + y >= 0;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y; loop invariant x >= -50; loop invariant y >= 0; loop invariant y <= x; loop invariant y <= 50; loop invariant y <= 50 + x; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000; loop invariant x >= (1 + (y - 1) * y / 2); loop invariant x >= y;\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant y > 0;\nloop invariant x >= -50;\nloop invariant x >= y;\nloop invariant x <= y + (-50 + y) * y / 2;\nloop invariant x + y <= -50 + y * (y + 1) / 2;\nloop invariant x + y <= -50 + y * (y + 1) / 2;\nloop invariant x + y <= -50 + y * (y + 1) / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= y;\nloop invariant x >= -50;\nloop invariant y >= -50;\nloop invariant y >= 0;\nloop invariant y >= 1;\nloop invariant x >= -49;\nloop invariant y <= 100000;\nloop invariant x >= 100001;\nloop invariant x >= 100002;\nloop invariant x >= 100003;\nloop invariant x >= 100004;\nloop invariant x >= 100005;\nloop invariant x >= 100006;\nloop invariant x >= 100007;\nloop invariant x >= 100008;\nloop invariant x >= 100009;\nloop invariant x >= 100010;\nloop invariant x >= 100011;\nloop invariant x >= 100012;\nloop invariant x >= 100013;\nloop invariant x >= 100014;\nloop invariant x >= 100015;\nloop invariant x >= 100016;\nloop invariant x >= 100017;\nloop invariant x >= 100018;\nloop invariant x >= 100019;\nloop invariant x >= 100020;\nloop invariant x >= 100021;\nloop invariant x >= 100022;\nloop invariant x >= 100023;\nloop invariant x >= 100024;\nloop invariant x >= 100025;\nloop invariant x >= 100026;\nloop invariant x >= 100027;\nloop invariant x >= 100028;\nloop invariant x >= 100029;\nloop invariant x >= 100030;\nloop invariant x >= 100031;\nloop invariant x >= 100032;\nloop invariant x >= 100033;\nloop invariant x >= 100034;\nloop invariant x >= 100035;\nloop invariant x >= 100036;\nloop invariant x >= 100037;\nloop invariant x >= 100038;\nloop invariant x >= 100039;\nloop invariant x >= 100040;\nloop invariant x >= 100041;\nloop invariant x >= 100042;\nloop invariant x >= 100043;\nloop invariant x >= 100044;\nloop invariant x >= 100045;\nloop invariant x >= 100046;\nloop invariant x >= 100047;\nloop invariant x >= 100048;\nloop invariant x >= 100049;\nloop invariant x >= 100050;\nloop invariant x >= 100051;\nloop invariant x >= 100052;\nloop invariant x >= 100053;\nloop invariant x >= 100054;\nloop invariant x >= 100055;\nloop invariant x >= 100056;\nloop invariant x >= 100057;\nloop invariant x >= 100058;\nloop invariant x >= 100059;\nloop invariant x >= 100060;\nloop invariant x >= 100061;\nloop invariant x >= 100062;\nloop invariant x >= 100063;\nloop invariant x >= 100064;\nloop invariant x >= 100065;\nloop invariant x >= 100066;\nloop invariant x >= 100067;\nloop invariant x >= 100068;\nloop invariant x >= 100069;\nloop invariant x >= 100070;\nloop invariant x >= 100071;\nloop invariant x >= 100072;\nloop invariant x >= 100073;\nloop invariant x >= 100074;\nloop invariant x >= 100075;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y;\nloop invariant x + y >= 0;\nloop invariant x + y <= -50 + y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 50;\nloop invariant x >= -50;\nloop invariant x >= y;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 18,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x < 0;\nloop invariant y >= 0;\nloop invariant x + y >= 0;\nloop invariant x + y < 100;\nloop invariant x >= -50;\nloop invariant y <= 100;\nloop invariant x < y < 100;\nloop invariant x >= -50 + y;\nloop invariant x < -50 + y;\nloop invariant x >= -50 + (y - 1);\nloop invariant x < -50 + (y - 1);\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x < -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2 - y;\nloop invariant x < -50 + (y - 1) * y / 2 - y;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1;\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y;\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1;\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y;\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1;\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y;\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1;\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y;\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1;\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1 + y;\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1 + y;\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1 + y + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i21: x < -50 + (y - 1) * y / 2 - y + 1 + y;\n\nloop invariant i23: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1;\n\nloop invariant i25: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y;\n\nloop invariant i27: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1;\n\nloop invariant i29: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y;\n\nloop invariant i31: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1;\n\nloop invariant i33: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y;\n\nloop invariant i35: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1;\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;loop invariant x <= 0;loop invariant y >= 0;loop invariant y >= x + 50;loop invariant y <= x + 50;loop invariant x + 1 <= y;loop invariant x + 1 >= y;loop invariant x + 1 <= x + 50;loop invariant x + 1 >= x + 50;loop invariant x <= x + 50;loop invariant x >= x + 50;loop invariant y <= y - 1;loop invariant y >= y - 1;loop invariant x <= y;loop invariant x >= y;loop invariant x == y;loop invariant x != y;loop invariant x <= 0;loop invariant x >= 0;loop invariant y <= 0;loop invariant y >= 0;loop invariant x <= 1;loop invariant x >= 1;loop invariant y <= 1;loop invariant y >= 1;loop invariant x <= 2;loop invariant x >= 2;loop invariant y <= 2;loop invariant y >= 2;loop invariant x <= 3;loop invariant x >= 3;loop invariant y <= 3;loop invariant y >= 3;loop invariant x <= 4;loop invariant x >= 4;loop invariant y <= 4;loop invariant y >= 4;loop invariant x <= 5;loop invariant x >= 5;loop invariant y <= 5;loop invariant y >= 5;loop invariant x <= 6;loop invariant x >= 6;loop invariant y <= 6;loop invariant y >= 6;loop invariant x <= 7;loop invariant x >= 7;loop invariant y <= 7;loop invariant y >= 7;loop invariant x <= 8;loop invariant x >= 8;loop invariant y <= 8;loop invariant y >= 8;loop invariant x <= 9;loop invariant x >= 9;loop invariant y <= 9;loop invariant y >= 9;loop invariant x <= 10;loop invariant x >= 10;loop invariant y <= 10;loop invariant y >= 10;loop invariant x <= 11;loop invariant x >= 11;loop invariant y <= 11;loop invariant y >= 11;loop invariant x <= 12;loop invariant x >= 12;loop invariant y <= 12;loop invariant y >= 12;loop invariant x <= 13;loop invariant x >= 13;loop invariant y <= 13;loop invariant y >= 13;loop invariant x <= 14;loop invariant x >= 14;loop invariant y <= 14;loop invariant y >= 14;loop invariant x <= 15;loop invariant x >= 15;loop invariant y <= 15;loop invariant y >= 15;loop invariant x <= 16;loop invariant x >= 16;loop invariant y <= 16;loop invariant y >= 16;loop invariant x <= 17;loop invariant x >= 17;loop invariant y <= 17;loop invariant y >= 17;loop invariant x <= 18;loop invariant x >= 18;loop invariant y <= 18;loop invariant y >= 18;loop invariant x <= 19;loop invariant x >= 19;loop invariant y <= 19;loop invariant y >= 19;loop invariant x <= 20;loop invariant x >= 20;loop invariant y <= 20;loop invariant y >= 20;loop invariant x <= 21;loop invariant x >= 21;loop invariant y <= 21;loop invariant y >= 21;loop invariant x <= 22;loop invariant x >= 22;loop invariant y <= 22;loop invariant y >= 22;loop invariant x <= 23;loop invariant x >= 23;loop invariant y <= 23;loop invariant y >= 23;loop invariant x <= 24;loop invariant x >= 24;loop invariant y <= 24;loop invariant y >= 24;loop invariant x <= 25;loop invariant x >= 25;loop invariant y <= 25;loop invariant y >= 25;loop invariant x <= 26;loop invariant x >= 26;loop invariant y <= 26;loop invariant y >= 26;loop invariant x <= 27;loop invariant x >= 27;loop invariant y <= 27;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y;\nloop invariant -50 <= x <= y;\nloop invariant y > 0 ==> x >= y - 100000 || x < 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= y <= -x;\nloop invariant x >= -50;\nloop invariant y <= 50;\nloop invariant y <= -x;\nloop invariant x + y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y <= -x;\nloop invariant x + y >= 0;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\nloop invariant y >= 0;\nloop invariant y <= x + y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\n\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y; loop invariant x >= -50; loop invariant y >= 0; loop invariant y <= x; loop invariant y <= 50; loop invariant y <= 50 + x; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000; loop invariant x >= (1 + (y - 1) * y / 2); loop invariant x >= y;\nloop invariant y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant y > 0;\nloop invariant x >= -50;\nloop invariant x >= y;\nloop invariant x <= y + (-50 + y) * y / 2;\nloop invariant x + y <= -50 + y * (y + 1) / 2;\nloop invariant x + y <= -50 + y * (y + 1) / 2;\nloop invariant x + y <= -50 + y * (y + 1) / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\n\nloop invariant i5: x + y <= -50 + y * (y + 1) / 2;\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 79,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= y;\nloop invariant x >= -50;\nloop invariant y >= -50;\nloop invariant y >= 0;\nloop invariant y >= 1;\nloop invariant x >= -49;\nloop invariant y <= 100000;\nloop invariant x >= 100001;\nloop invariant x >= 100002;\nloop invariant x >= 100003;\nloop invariant x >= 100004;\nloop invariant x >= 100005;\nloop invariant x >= 100006;\nloop invariant x >= 100007;\nloop invariant x >= 100008;\nloop invariant x >= 100009;\nloop invariant x >= 100010;\nloop invariant x >= 100011;\nloop invariant x >= 100012;\nloop invariant x >= 100013;\nloop invariant x >= 100014;\nloop invariant x >= 100015;\nloop invariant x >= 100016;\nloop invariant x >= 100017;\nloop invariant x >= 100018;\nloop invariant x >= 100019;\nloop invariant x >= 100020;\nloop invariant x >= 100021;\nloop invariant x >= 100022;\nloop invariant x >= 100023;\nloop invariant x >= 100024;\nloop invariant x >= 100025;\nloop invariant x >= 100026;\nloop invariant x >= 100027;\nloop invariant x >= 100028;\nloop invariant x >= 100029;\nloop invariant x >= 100030;\nloop invariant x >= 100031;\nloop invariant x >= 100032;\nloop invariant x >= 100033;\nloop invariant x >= 100034;\nloop invariant x >= 100035;\nloop invariant x >= 100036;\nloop invariant x >= 100037;\nloop invariant x >= 100038;\nloop invariant x >= 100039;\nloop invariant x >= 100040;\nloop invariant x >= 100041;\nloop invariant x >= 100042;\nloop invariant x >= 100043;\nloop invariant x >= 100044;\nloop invariant x >= 100045;\nloop invariant x >= 100046;\nloop invariant x >= 100047;\nloop invariant x >= 100048;\nloop invariant x >= 100049;\nloop invariant x >= 100050;\nloop invariant x >= 100051;\nloop invariant x >= 100052;\nloop invariant x >= 100053;\nloop invariant x >= 100054;\nloop invariant x >= 100055;\nloop invariant x >= 100056;\nloop invariant x >= 100057;\nloop invariant x >= 100058;\nloop invariant x >= 100059;\nloop invariant x >= 100060;\nloop invariant x >= 100061;\nloop invariant x >= 100062;\nloop invariant x >= 100063;\nloop invariant x >= 100064;\nloop invariant x >= 100065;\nloop invariant x >= 100066;\nloop invariant x >= 100067;\nloop invariant x >= 100068;\nloop invariant x >= 100069;\nloop invariant x >= 100070;\nloop invariant x >= 100071;\nloop invariant x >= 100072;\nloop invariant x >= 100073;\nloop invariant x >= 100074;\nloop invariant x >= 100075;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y;\nloop invariant x + y >= 0;\nloop invariant x + y <= -50 + y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 50;\nloop invariant x >= -50;\nloop invariant x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "loop invariant 0 <= x is preserved but not established.\nloop invariant 0 <= y is partially proven to be inductive.\nloop invariant x < 0 is partially proven to be inductive.\nloop invariant y >= 0 is partially proven to be inductive.\nloop invariant x + y >= 0 is partially proven to be inductive.\nloop invariant x + y < 100 is partially proven to be inductive.\nloop invariant x >= -50 is partially proven to be inductive.\nloop invariant y <= 100 is partially proven to be inductive.\nloop invariant x < y < 100 is partially proven to be inductive.\nloop invariant x >= -50 + y is partially proven to be inductive.\nloop invariant x < -50 + y is partially proven to be inductive.\nloop invariant x >= -50 + (y - 1) is partially proven to be inductive.\nloop invariant x < -50 + (y - 1) is partially proven to be inductive.\nloop invariant x >= -50 + (y - 1) * y / 2 is partially proven to be inductive.\nloop invariant x < -50 + (y - 1) * y / 2 is partially proven to be inductive.\nloop invariant x >= -50 + (y - 1) * y / 2 - y is partially proven to be inductive.\nloop invariant x < -50 + (y - 1) * y / 2 - y is partially proven to be inductive.\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 is partially proven to be inductive.\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 is partially proven to be inductive.\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y is partially proven to be inductive.\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y is partially proven to be inductive.\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 is partially proven to be inductive.\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 is partially proven to be inductive.\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y is partially proven to be inductive.\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y is partially proven to be inductive.\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 is partially proven to be inductive.\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 is partially proven to be inductive.\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y is partially proven to be inductive.\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y is partially proven to be inductive.\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 is partially proven to be inductive.\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 is partially proven to be inductive.\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y is partially proven to be inductive.\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y is partially proven to be inductive.\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1 is partially proven to be inductive.\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1 is partially proven to be inductive.\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1 + y is partially proven to be inductive.\nloop invariant x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1 + y is partially proven to be inductive.\nloop invariant x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1 + y + 1 is partially proven to be inductive.\nloop invariant 0 <= x <= y;loop invariant x <= 0;loop invariant y >= 0;loop invariant y >= x + 50;loop invariant y <= x + 50;loop invariant x + 1 <= y;loop invariant x + 1 >= y;loop invariant x + 1 <= x + 50;loop invariant x + 1 >= x + 50;loop invariant x <= x + 50;loop invariant x >= x + 50;loop invariant y <= y - 1;loop invariant y >= y - 1;loop invariant x <= y;loop invariant x >= y;loop invariant x == y;loop invariant x != y;loop invariant x <= 0;loop invariant x >= 0;loop invariant y <= 0;loop invariant y >= 0;loop invariant x <= 1;loop invariant x >= 1;loop invariant y <= 1;loop invariant y >= 1;loop invariant x <= 2;loop invariant x >= 2;loop invariant y <= 2;loop invariant y >= 2;loop invariant x <= 3;loop invariant x >= 3;loop invariant y <= 3;loop invariant y >= 3;loop invariant x <= 4;loop invariant x >= 4;loop invariant y <= 4;loop invariant y >= 4;loop invariant x <= 5;loop invariant x >= 5;loop invariant y <= 5;loop invariant y >= 5;loop invariant x <= 6;loop invariant x >= 6;loop invariant y <= 6;loop invariant y >= 6;loop invariant x <= 7;loop invariant x >= 7;loop invariant y <= 7;loop invariant y >= 7;loop invariant x <= 8;loop invariant x >= 8;loop invariant y <= 8;loop invariant y >= 8;loop invariant x <= 9;loop invariant x >= 9;loop invariant y <= 9;loop invariant y >= 9;loop invariant x <= 10;loop invariant x >= 10;loop invariant y <= 10;loop invariant y >= 10;loop invariant x <= 11;loop invariant x >= 11;loop invariant y <= 11;loop invariant y >= 11;loop invariant x <= 12;loop invariant x >= 12;loop invariant y <= 12;loop invariant y >= 12;loop invariant x <= 13;loop invariant x >= 13;loop invariant y <= 13;loop invariant y >= 13;loop invariant x <= 14;loop invariant x >= 14;loop invariant y <= 14;loop invariant y >= 14;loop invariant x <= 15;loop invariant x >= 15;loop invariant y <= 15;loop invariant y >= 15;loop invariant x <= 16;loop invariant x >= 16;loop invariant y <= 16;loop invariant y >= 16;loop invariant x <= 17;loop invariant x >= 17;loop invariant y <= 17;loop invariant y >= 17;loop invariant x <= 18;loop invariant x >= 18;loop invariant y <= 18;loop invariant y >= 18;loop invariant x <= 19;loop invariant x >= 19;loop invariant y <= 19;loop invariant y >= 19;loop invariant x <= 20;loop invariant x >= 20;loop invariant y <= 20;loop invariant y >= 20;loop invariant x <= 21;loop invariant x >= 21;loop invariant y <= 21;loop invariant y >= 21;loop invariant x <= 22;loop invariant x >= 22;loop invariant y <= 22;loop invariant y >= 22;loop invariant x <= 23;loop invariant x >= 23;loop invariant y <= 23;loop invariant y >= 23;loop invariant x <= 24;loop invariant x >= 24;loop invariant y <= 24;loop invariant y >= 24;loop invariant x <= 25;loop invariant x >= 25;loop invariant y <= 25;loop invariant y >= 25;loop invariant x <= 26;loop invariant x >= 26;loop invariant y <= 26;loop invariant y >= 26;loop invariant x <= 27;loop invariant x >= 27;loop invariant y <= 27 is partially proven to be inductive.\nloop invariant -50 <= x <= y is partially proven to be inductive.\nloop invariant y > 0 ==> x >= y - 100000 || x < 0 is partially proven to be inductive.\nloop invariant 0 <= y <= 100000 is partially proven to be inductive.\nloop invariant x >= (1 + (y - 1) * y / 2) is partially proven to be inductive.\nloop invariant 1 <= y <= -x is partially proven to be inductive.\nloop invariant y <= 50 is partially proven to be inductive.\nloop invariant y <= -x is partially proven to be inductive.\nloop invariant y <= x + y is partially proven to be inductive.\nloop invariant 0 <= y; loop invariant x >= -50; loop invariant y >= 0; loop invariant y <= x; loop invariant y <= 50; loop invariant y <= 50 + x; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y is partially proven to be inductive.\nloop invariant 0 <= y <= 100000; loop invariant x >= (1 + (y - 1) * y / 2); loop invariant x >= y is partially proven to be inductive.\nloop invariant y > 0 is partially proven to be inductive.\nloop invariant x >= y is partially proven to be inductive.\nloop invariant x <= y + (-50 + y) * y / 2 is partially proven to be inductive.\nloop invariant x + y <= -50 + y * (y + 1) / 2 is partially proven to be inductive.\nloop invariant y >= -50 is partially proven to be inductive.\nloop invariant y >= 1 is partially proven to be inductive.\nloop invariant x >= -49 is partially proven to be inductive.\nloop invariant y <= 100000 is partially proven to be inductive.\nloop invariant x >= 100001 is partially proven to be inductive.\nloop invariant x >= 100002 is partially proven to be inductive.\nloop invariant x >= 100003 is partially proven to be inductive.\nloop invariant x >= 100004 is partially proven to be inductive.\nloop invariant x >= 100005 is partially proven to be inductive.\nloop invariant x >= 100006 is partially proven to be inductive.\nloop invariant x >= 100007 is partially proven to be inductive.\nloop invariant x >= 100008 is partially proven to be inductive.\nloop invariant x >= 100009 is partially proven to be inductive.\nloop invariant x >= 100010 is partially proven to be inductive.\nloop invariant x >= 100011 is partially proven to be inductive.\nloop invariant x >= 100012 is partially proven to be inductive.\nloop invariant x >= 100013 is partially proven to be inductive.\nloop invariant x >= 100014 is partially proven to be inductive.\nloop invariant x >= 100015 is partially proven to be inductive.\nloop invariant x >= 100016 is partially proven to be inductive.\nloop invariant x >= 100017 is partially proven to be inductive.\nloop invariant x >= 100018 is partially proven to be inductive.\nloop invariant x >= 100019 is partially proven to be inductive.\nloop invariant x >= 100020 is partially proven to be inductive.\nloop invariant x >= 100021 is partially proven to be inductive.\nloop invariant x >= 100022 is partially proven to be inductive.\nloop invariant x >= 100023 is partially proven to be inductive.\nloop invariant x >= 100024 is partially proven to be inductive.\nloop invariant x >= 100025 is partially proven to be inductive.\nloop invariant x >= 100026 is partially proven to be inductive.\nloop invariant x >= 100027 is partially proven to be inductive.\nloop invariant x >= 100028 is partially proven to be inductive.\nloop invariant x >= 100029 is partially proven to be inductive.\nloop invariant x >= 100030 is partially proven to be inductive.\nloop invariant x >= 100031 is partially proven to be inductive.\nloop invariant x >= 100032 is partially proven to be inductive.\nloop invariant x >= 100033 is partially proven to be inductive.\nloop invariant x >= 100034 is partially proven to be inductive.\nloop invariant x >= 100035 is partially proven to be inductive.\nloop invariant x >= 100036 is partially proven to be inductive.\nloop invariant x >= 100037 is partially proven to be inductive.\nloop invariant x >= 100038 is partially proven to be inductive.\nloop invariant x >= 100039 is partially proven to be inductive.\nloop invariant x >= 100040 is partially proven to be inductive.\nloop invariant x >= 100041 is partially proven to be inductive.\nloop invariant x >= 100042 is partially proven to be inductive.\nloop invariant x >= 100043 is partially proven to be inductive.\nloop invariant x >= 100044 is partially proven to be inductive.\nloop invariant x >= 100045 is partially proven to be inductive.\nloop invariant x >= 100046 is partially proven to be inductive.\nloop invariant x >= 100047 is partially proven to be inductive.\nloop invariant x >= 100048 is partially proven to be inductive.\nloop invariant x >= 100049 is partially proven to be inductive.\nloop invariant x >= 100050 is partially proven to be inductive.\nloop invariant x >= 100051 is partially proven to be inductive.\nloop invariant x >= 100052 is partially proven to be inductive.\nloop invariant x >= 100053 is partially proven to be inductive.\nloop invariant x >= 100054 is partially proven to be inductive.\nloop invariant x >= 100055 is partially proven to be inductive.\nloop invariant x >= 100056 is partially proven to be inductive.\nloop invariant x >= 100057 is partially proven to be inductive.\nloop invariant x >= 100058 is partially proven to be inductive.\nloop invariant x >= 100059 is partially proven to be inductive.\nloop invariant x >= 100060 is partially proven to be inductive.\nloop invariant x >= 100061 is partially proven to be inductive.\nloop invariant x >= 100062 is partially proven to be inductive.\nloop invariant x >= 100063 is partially proven to be inductive.\nloop invariant x >= 100064 is partially proven to be inductive.\nloop invariant x >= 100065 is partially proven to be inductive.\nloop invariant x >= 100066 is partially proven to be inductive.\nloop invariant x >= 100067 is partially proven to be inductive.\nloop invariant x >= 100068 is partially proven to be inductive.\nloop invariant x >= 100069 is partially proven to be inductive.\nloop invariant x >= 100070 is partially proven to be inductive.\nloop invariant x >= 100071 is partially proven to be inductive.\nloop invariant x >= 100072 is partially proven to be inductive.\nloop invariant x >= 100073 is partially proven to be inductive.\nloop invariant x >= 100074 is partially proven to be inductive.\nloop invariant x >= 100075 is partially proven to be inductive.\nloop invariant x + y <= -50 + y is partially proven to be inductive.\nloop invariant 0 <= y <= 50 is partially proven to be inductive.\nAssertion y > 0: Partially proven",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\nloop invariant i1: 0 <= x;\nloop invariant i2: 0 <= y;\nloop invariant i3: x < 0;\nloop invariant i4: y >= 0;\nloop invariant i5: x + y >= 0;\nloop invariant i6: x + y < 100;\nloop invariant i7: x >= -50;\nloop invariant i8: y <= 100;\nloop invariant i9: x < y < 100;\nloop invariant i10: x >= -50 + y;\nloop invariant i11: x < -50 + y;\nloop invariant i12: x >= -50 + (y - 1);\nloop invariant i13: x < -50 + (y - 1);\nloop invariant i14: x >= -50 + (y - 1) * y / 2;\nloop invariant i15: x < -50 + (y - 1) * y / 2;\nloop invariant i16: x >= -50 + (y - 1) * y / 2 - y;\nloop invariant i17: x < -50 + (y - 1) * y / 2 - y;\nloop invariant i18: x >= -50 + (y - 1) * y / 2 - y + 1;\nloop invariant i19: x < -50 + (y - 1) * y / 2 - y + 1;\nloop invariant i20: x >= -50 + (y - 1) * y / 2 - y + 1 + y;\nloop invariant i21: x < -50 + (y - 1) * y / 2 - y + 1 + y;\nloop invariant i22: x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1;\nloop invariant i23: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1;\nloop invariant i24: x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y;\nloop invariant i25: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y;\nloop invariant i26: x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1;\nloop invariant i27: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1;\nloop invariant i28: x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y;\nloop invariant i29: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y;\nloop invariant i30: x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1;\nloop invariant i31: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1;\nloop invariant i32: x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y;\nloop invariant i33: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y;\nloop invariant i34: x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1;\nloop invariant i35: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1;\nloop invariant i36: x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1 + y;\nloop invariant i37: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1 + y;\nloop invariant i38: x >= -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1 + y + 1;\nloop invariant i39: 0 <= x <= y;loop invariant x <= 0;loop invariant y >= 0;loop invariant y >= x + 50;loop invariant y <= x + 50;loop invariant x + 1 <= y;loop invariant x + 1 >= y;loop invariant x + 1 <= x + 50;loop invariant x + 1 >= x + 50;loop invariant x <= x + 50;loop invariant x >= x + 50;loop invariant y <= y - 1;loop invariant y >= y - 1;loop invariant x <= y;loop invariant x >= y;loop invariant x == y;loop invariant x != y;loop invariant x <= 0;loop invariant x >= 0;loop invariant y <= 0;loop invariant y >= 0;loop invariant x <= 1;loop invariant x >= 1;loop invariant y <= 1;loop invariant y >= 1;loop invariant x <= 2;loop invariant x >= 2;loop invariant y <= 2;loop invariant y >= 2;loop invariant x <= 3;loop invariant x >= 3;loop invariant y <= 3;loop invariant y >= 3;loop invariant x <= 4;loop invariant x >= 4;loop invariant y <= 4;loop invariant y >= 4;loop invariant x <= 5;loop invariant x >= 5;loop invariant y <= 5;loop invariant y >= 5;loop invariant x <= 6;loop invariant x >= 6;loop invariant y <= 6;loop invariant y >= 6;loop invariant x <= 7;loop invariant x >= 7;loop invariant y <= 7;loop invariant y >= 7;loop invariant x <= 8;loop invariant x >= 8;loop invariant y <= 8;loop invariant y >= 8;loop invariant x <= 9;loop invariant x >= 9;loop invariant y <= 9;loop invariant y >= 9;loop invariant x <= 10;loop invariant x >= 10;loop invariant y <= 10;loop invariant y >= 10;loop invariant x <= 11;loop invariant x >= 11;loop invariant y <= 11;loop invariant y >= 11;loop invariant x <= 12;loop invariant x >= 12;loop invariant y <= 12;loop invariant y >= 12;loop invariant x <= 13;loop invariant x >= 13;loop invariant y <= 13;loop invariant y >= 13;loop invariant x <= 14;loop invariant x >= 14;loop invariant y <= 14;loop invariant y >= 14;loop invariant x <= 15;loop invariant x >= 15;loop invariant y <= 15;loop invariant y >= 15;loop invariant x <= 16;loop invariant x >= 16;loop invariant y <= 16;loop invariant y >= 16;loop invariant x <= 17;loop invariant x >= 17;loop invariant y <= 17;loop invariant y >= 17;loop invariant x <= 18;loop invariant x >= 18;loop invariant y <= 18;loop invariant y >= 18;loop invariant x <= 19;loop invariant x >= 19;loop invariant y <= 19;loop invariant y >= 19;loop invariant x <= 20;loop invariant x >= 20;loop invariant y <= 20;loop invariant y >= 20;loop invariant x <= 21;loop invariant x >= 21;loop invariant y <= 21;loop invariant y >= 21;loop invariant x <= 22;loop invariant x >= 22;loop invariant y <= 22;loop invariant y >= 22;loop invariant x <= 23;loop invariant x >= 23;loop invariant y <= 23;loop invariant y >= 23;loop invariant x <= 24;loop invariant x >= 24;loop invariant y <= 24;loop invariant y >= 24;loop invariant x <= 25;loop invariant x >= 25;loop invariant y <= 25;loop invariant y >= 25;loop invariant x <= 26;loop invariant x >= 26;loop invariant y <= 26;loop invariant y >= 26;loop invariant x <= 27;loop invariant x >= 27;loop invariant y <= 27;\nloop invariant i40: -50 <= x <= y;\nloop invariant i41: y > 0 ==> x >= y - 100000 || x < 0;\nloop invariant i42: 0 <= y <= 100000;\nloop invariant i43: x >= (1 + (y - 1) * y / 2);\nloop invariant i44: 1 <= y <= -x;\nloop invariant i45: y <= 50;\nloop invariant i46: y <= -x;\nloop invariant i47: y <= x + y;\nloop invariant i48: 0 <= y; loop invariant x >= -50; loop invariant y >= 0; loop invariant y <= x; loop invariant y <= 50; loop invariant y <= 50 + x; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y; loop invariant x >= y; loop invariant x >= -50 + y;\nloop invariant i49: 0 <= y <= 100000; loop invariant x >= (1 + (y - 1) * y / 2); loop invariant x >= y;\nloop invariant i50: y > 0;\nloop invariant i51: x >= y;\nloop invariant i52: x <= y + (-50 + y) * y / 2;\nloop invariant i53: x + y <= -50 + y * (y + 1) / 2;\nloop invariant i54: y >= -50;\nloop invariant i55: y >= 1;\nloop invariant i56: x >= -49;\nloop invariant i57: y <= 100000;\nloop invariant i58: x >= 100001;\nloop invariant i59: x >= 100002;\nloop invariant i60: x >= 100003;\nloop invariant i61: x >= 100004;\nloop invariant i62: x >= 100005;\nloop invariant i63: x >= 100006;\nloop invariant i64: x >= 100007;\nloop invariant i65: x >= 100008;\nloop invariant i66: x >= 100009;\nloop invariant i67: x >= 100010;\nloop invariant i68: x >= 100011;\nloop invariant i69: x >= 100012;\nloop invariant i70: x >= 100013;\nloop invariant i71: x >= 100014;\nloop invariant i72: x >= 100015;\nloop invariant i73: x >= 100016;\nloop invariant i74: x >= 100017;\nloop invariant i75: x >= 100018;\nloop invariant i76: x >= 100019;\nloop invariant i77: x >= 100020;\nloop invariant i78: x >= 100021;\nloop invariant i79: x >= 100022;\nloop invariant i80: x >= 100023;\nloop invariant i81: x >= 100024;\nloop invariant i82: x >= 100025;\nloop invariant i83: x >= 100026;\nloop invariant i84: x >= 100027;\nloop invariant i85: x >= 100028;\nloop invariant i86: x >= 100029;\nloop invariant i87: x >= 100030;\nloop invariant i88: x >= 100031;\nloop invariant i89: x >= 100032;\nloop invariant i90: x >= 100033;\nloop invariant i91: x >= 100034;\nloop invariant i92: x >= 100035;\nloop invariant i93: x >= 100036;\nloop invariant i94: x >= 100037;\nloop invariant i95: x >= 100038;\nloop invariant i96: x >= 100039;\nloop invariant i97: x >= 100040;\nloop invariant i98: x >= 100041;\nloop invariant i99: x >= 100042;\nloop invariant i100: x >= 100043;\nloop invariant i101: x >= 100044;\nloop invariant i102: x >= 100045;\nloop invariant i103: x >= 100046;\nloop invariant i104: x >= 100047;\nloop invariant i105: x >= 100048;\nloop invariant i106: x >= 100049;\nloop invariant i107: x >= 100050;\nloop invariant i108: x >= 100051;\nloop invariant i109: x >= 100052;\nloop invariant i110: x >= 100053;\nloop invariant i111: x >= 100054;\nloop invariant i112: x >= 100055;\nloop invariant i113: x >= 100056;\nloop invariant i114: x >= 100057;\nloop invariant i115: x >= 100058;\nloop invariant i116: x >= 100059;\nloop invariant i117: x >= 100060;\nloop invariant i118: x >= 100061;\nloop invariant i119: x >= 100062;\nloop invariant i120: x >= 100063;\nloop invariant i121: x >= 100064;\nloop invariant i122: x >= 100065;\nloop invariant i123: x >= 100066;\nloop invariant i124: x >= 100067;\nloop invariant i125: x >= 100068;\nloop invariant i126: x >= 100069;\nloop invariant i127: x >= 100070;\nloop invariant i128: x >= 100071;\nloop invariant i129: x >= 100072;\nloop invariant i130: x >= 100073;\nloop invariant i131: x >= 100074;\nloop invariant i132: x >= 100075;\nloop invariant i133: x + y <= -50 + y;\nloop invariant i134: 0 <= y <= 50;\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
        "combined_annotation_num_solver_calls": 102,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i21: x < -50 + (y - 1) * y / 2 - y + 1 + y;\n\nloop invariant i23: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1;\n\nloop invariant i25: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y;\n\nloop invariant i27: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1;\n\nloop invariant i29: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y;\n\nloop invariant i31: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1;\n\nloop invariant i33: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y;\n\nloop invariant i35: x < -50 + (y - 1) * y / 2 - y + 1 + y + 1 + y + 1 + y + 1 + y + 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i53: x + y <= -50 + y * (y + 1) / 2;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c"
        ],
        "skipped": [],
        "total": 30,
        "success_count": 26,
        "failure_count": 4,
        "success_rate": 0.8666666666666667
    }
}