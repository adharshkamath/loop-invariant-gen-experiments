{
    "logs": {
        "file": "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe3.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned short N;\n\n  while (x < N) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x % 2 == 0;\nloop invariant N >= 0;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0 ==> x < N;\nloop invariant x % 2 == 0 ==> x == 0 || x > 2;\nloop invariant x % 2 == 0 ==> N >= 2;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4 ==> N >= 8;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4 ==> N >= 8 ==> x < N ==> x % 4 == 0 ==> x >= 8;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4 ==> N >= 8 ==> x < N ==> x % 4 == 0 ==> x >= 8 ==> N >= 16;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4 ==> N >= 8 ==> x < N ==> x % 4 == 0 ==> x >= 8 ==> N >= 16 ==> x < N ==> x % 4 == 0 ==> x >= 16;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4 ==> N >= 8 ==> x < N ==> x % 4 == 0 ==> x >= 8 ==> N >= 16 ==> x < N ==> x % 4 == 0 ==> x >= 16 ==> N >= 32;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4 ==> N >= 8 ==> x < N ==> x % 4 == 0 ==> x >= 8 ==> N >= 16 ==> x < N ==> x % 4 == 0 ==> x >= 16 ==> N >= 32 ==> x < N ==> x % 4 == 0 ==> x >= 32;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4 ==> N >= 8 ==> x < N ==> x % 4 == 0 ==> x >= 8 ==> N >= 16 ==> x < N ==> x % 4 == 0 ==> x >= 16 ==> N >= 32 ==> x < N ==> x % 4 == 0 ==> x >= 32 ==> N >= 64;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= N;\nloop invariant x >= 0 && x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 2 * N;\nloop invariant x % 2 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x % 2 == 0;\nloop invariant x >= 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x % 2 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= N;\nloop invariant 0 <= x <= (2 * N);\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 2*N;\nloop invariant (x % 2) == 0;\n*/\n```",
            "```\n/*@\nloop invariant x <= 2 * N;\nloop invariant x >= 0;\nloop invariant N >= 0;\nloop invariant x <= 2 * N;\nloop invariant x >= 0;\nloop invariant N >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant x <= N * 2;\nloop invariant (x % 2 == 0);\nloop invariant (x >= 0);\nloop invariant (N >= 0);\nloop invariant (x % 2 == 0 ==> x <= N);\n*/\n```",
            "```\n/*@\nloop invariant i1; loop invariant i2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N + 2;\nloop invariant x >= N;\nloop invariant x % 2 == 0 ==> !((x % 2) != 0);\nloop invariant N >= 0 ==> !((N < 0) || (x < 0));\nloop invariant x <= N ==> !(x > N);\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 2 * (N/2);\nloop invariant 0 <= N <= 2 * (N/2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x % 2 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x % 2 == (x >= N) ==> (x % 2 == 0);\nloop invariant x % 2 == (x < N) ==> (x % 2 == 0);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x % 2 == 0;\nloop invariant N >= 0;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0 ==> x < N;\nloop invariant x % 2 == 0 ==> x == 0 || x > 2;\nloop invariant x % 2 == 0 ==> N >= 2;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4 ==> N >= 8;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4 ==> N >= 8 ==> x < N ==> x % 4 == 0 ==> x >= 8;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4 ==> N >= 8 ==> x < N ==> x % 4 == 0 ==> x >= 8 ==> N >= 16;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4 ==> N >= 8 ==> x < N ==> x % 4 == 0 ==> x >= 8 ==> N >= 16 ==> x < N ==> x % 4 == 0 ==> x >= 16;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4 ==> N >= 8 ==> x < N ==> x % 4 == 0 ==> x >= 8 ==> N >= 16 ==> x < N ==> x % 4 == 0 ==> x >= 16 ==> N >= 32;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4 ==> N >= 8 ==> x < N ==> x % 4 == 0 ==> x >= 8 ==> N >= 16 ==> x < N ==> x % 4 == 0 ==> x >= 16 ==> N >= 32 ==> x < N ==> x % 4 == 0 ==> x >= 32;\nloop invariant x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4 ==> N >= 8 ==> x < N ==> x % 4 == 0 ==> x >= 8 ==> N >= 16 ==> x < N ==> x % 4 == 0 ==> x >= 16 ==> N >= 32 ==> x < N ==> x % 4 == 0 ==> x >= 32 ==> N >= 64;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned short N;\n\n  /*@\n\nloop invariant i2: x % 2 == 0;\nloop invariant i3: N >= 0;\nloop invariant i4: x >= 0;\n\n\n\n\n\n\nloop invariant i11: x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4;\nloop invariant i12: x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4;\n\n\n\n\n\n\n\n*/\nwhile (x < N) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= N;\nloop invariant x >= 0 && x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\nloop invariant N <= 2 * N;\nloop invariant N >= 0;\nloop invariant x >= N;\nloop invariant x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x + 2 >= 2 * N;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned short N;\n\n  /*@\nloop invariant i1: 0 <= N;\nloop invariant i2: x >= 0 && x <= 2 * N;\nloop invariant i3: x % 2 == 0;\n\nloop invariant i5: N <= 2 * N;\nloop invariant i6: N >= 0;\n\nloop invariant i8: x <= 2 * N;\n*/\nwhile (x < N) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2 * N;\nloop invariant x % 2 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned short N;\n\n  /*@\nloop invariant i1: 0 <= x <= 2 * N;\nloop invariant i2: x % 2 == 0;\n*/\nwhile (x < N) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x % 2 == 0;\nloop invariant x >= 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned short N;\n\n  /*@\n\nloop invariant i2: x % 2 == 0;\n\n*/\nwhile (x < N) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x % 2 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned short N;\n\n  /*@\n\nloop invariant i2: x % 2 == 0;\n*/\nwhile (x < N) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= N;\nloop invariant 0 <= x <= (2 * N);\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned short N;\n\n  /*@\nloop invariant i1: 0 <= N;\nloop invariant i2: 0 <= x <= (2 * N);\nloop invariant i3: x % 2 == 0;\n\nloop invariant i5: x >= 0;\n*/\nwhile (x < N) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2*N;\nloop invariant (x % 2) == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned short N;\n\n  /*@\nloop invariant i1: 0 <= x <= 2*N;\nloop invariant i2: (x % 2) == 0;\n*/\nwhile (x < N) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant x <= 2 * N;\nloop invariant x >= 0;\nloop invariant N >= 0;\nloop invariant x <= 2 * N;\nloop invariant x >= 0;\nloop invariant N >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned short N;\n\n  /*@\nloop invariant i1: x <= 2 * N;\nloop invariant i2: x >= 0;\nloop invariant i3: N >= 0;\n*/\nwhile (x < N) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant x <= N * 2;\nloop invariant (x % 2 == 0);\nloop invariant (x >= 0);\nloop invariant (N >= 0);\nloop invariant (x % 2 == 0 ==> x <= N);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned short N;\n\n  /*@\nloop invariant i1: 0 <= x;\nloop invariant i2: x <= N * 2;\nloop invariant i3: (x % 2 == 0);\nloop invariant i4: (x >= 0);\nloop invariant i5: (N >= 0);\n\n*/\nwhile (x < N) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant i1; loop invariant i2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned short N;\n\n  /*@\n\n*/\nwhile (x < N) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x % 2 == 0;\nloop invariant x <= N + 2;\nloop invariant x >= N;\nloop invariant x % 2 == 0 ==> !((x % 2) != 0);\nloop invariant N >= 0 ==> !((N < 0) || (x < 0));\nloop invariant x <= N ==> !(x > N);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned short N;\n\n  /*@\n\nloop invariant i2: x % 2 == 0;\nloop invariant i3: x <= N + 2;\n\nloop invariant i5: x % 2 == 0 ==> !((x % 2) != 0);\nloop invariant i6: N >= 0 ==> !((N < 0) || (x < 0));\nloop invariant i7: x <= N ==> !(x > N);\n*/\nwhile (x < N) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned short N;\n\n  /*@\n\n*/\nwhile (x < N) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2 * (N/2);\nloop invariant 0 <= N <= 2 * (N/2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned short N;\n\n  /*@\n\n\n*/\nwhile (x < N) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x % 2 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned short N;\n\n  /*@\n\nloop invariant i2: x % 2 == 0;\n*/\nwhile (x < N) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2 * N;\nloop invariant x % 2 == 0;\nloop invariant x % 2 == (x >= N) ==> (x % 2 == 0);\nloop invariant x % 2 == (x < N) ==> (x % 2 == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned short N;\n\n  /*@\nloop invariant i1: 0 <= x <= 2 * N;\nloop invariant i2: x % 2 == 0;\nloop invariant i3: x % 2 == (x >= N) ==> (x % 2 == 0);\nloop invariant i4: x % 2 == (x < N) ==> (x % 2 == 0);\n*/\nwhile (x < N) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 48: unbound logic variable i1. Ignoring loop annotation",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned short N;\n\n  /*@\nloop invariant i1: 0 <= x <= N;\nloop invariant i2: x % 2 == 0;\nloop invariant i3: N >= 0;\nloop invariant i4: x >= 0;\nloop invariant i5: x <= N;\nloop invariant i6: x % 2 == 0 ==> x < N;\nloop invariant i7: x % 2 == 0 ==> x == 0 || x > 2;\nloop invariant i8: x % 2 == 0 ==> N >= 2;\nloop invariant i9: x % 2 == 0 ==> x < N ==> x % 4 == 0;\nloop invariant i10: x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2;\nloop invariant i11: x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4;\nloop invariant i12: x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4;\nloop invariant i13: x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4 ==> N >= 8;\nloop invariant i14: x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4 ==> N >= 8 ==> x < N ==> x % 4 == 0 ==> x >= 8;\nloop invariant i15: x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4 ==> N >= 8 ==> x < N ==> x % 4 == 0 ==> x >= 8 ==> N >= 16;\nloop invariant i16: x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4 ==> N >= 8 ==> x < N ==> x % 4 == 0 ==> x >= 8 ==> N >= 16 ==> x < N ==> x % 4 == 0 ==> x >= 16;\nloop invariant i17: x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4 ==> N >= 8 ==> x < N ==> x % 4 == 0 ==> x >= 8 ==> N >= 16 ==> x < N ==> x % 4 == 0 ==> x >= 16 ==> N >= 32;\nloop invariant i18: x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4 ==> N >= 8 ==> x < N ==> x % 4 == 0 ==> x >= 8 ==> N >= 16 ==> x < N ==> x % 4 == 0 ==> x >= 16 ==> N >= 32 ==> x < N ==> x % 4 == 0 ==> x >= 32;\nloop invariant i19: x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4 ==> N >= 8 ==> x < N ==> x % 4 == 0 ==> x >= 8 ==> N >= 16 ==> x < N ==> x % 4 == 0 ==> x >= 16 ==> N >= 32 ==> x < N ==> x % 4 == 0 ==> x >= 32 ==> N >= 64;\nloop invariant i20: 0 <= N;\nloop invariant i21: x >= 0 && x <= 2 * N;\nloop invariant i22: x + 2 >= 2 * N;\nloop invariant i23: N <= 2 * N;\nloop invariant i24: x >= N;\nloop invariant i25: x <= 2 * N;\nloop invariant i26: 0 <= x <= 2 * N;\nloop invariant i27: x >= 2;\nloop invariant i28: 0 <= x <= (2 * N);\nloop invariant i29: 0 <= x <= 2*N;\nloop invariant i30: (x % 2) == 0;\nloop invariant i31: 0 <= x;\nloop invariant i32: x <= N * 2;\nloop invariant i33: (x % 2 == 0);\nloop invariant i34: (x >= 0);\nloop invariant i35: (N >= 0);\nloop invariant i36: (x % 2 == 0 ==> x <= N);\nloop invariant i37: i1; loop invariant i2;\nloop invariant i38: x <= N + 2;\nloop invariant i39: x % 2 == 0 ==> !((x % 2) != 0);\nloop invariant i40: N >= 0 ==> !((N < 0) || (x < 0));\nloop invariant i41: x <= N ==> !(x > N);\nloop invariant i42: 0 <= x <= 2 * (N/2);\nloop invariant i43: 0 <= N <= 2 * (N/2);\nloop invariant i44: x % 2 == (x >= N) ==> (x % 2 == 0);\nloop invariant i45: x % 2 == (x < N) ==> (x % 2 == 0);\n*/\nwhile (x < N) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
        "combined_annotation_num_solver_calls": 9,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned short N;\n\n  /*@\n\nloop invariant i2: x % 2 == 0;\nloop invariant i3: N >= 0;\nloop invariant i4: x >= 0;\n\n\n\n\n\n\nloop invariant i11: x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4;\nloop invariant i12: x % 2 == 0 ==> x < N ==> x % 4 == 0 ==> x >= 2 ==> N >= 4 ==> x < N ==> x % 4 == 0 ==> x >= 4;\n\n\n\n\n\n\n\nloop invariant i20: 0 <= N;\nloop invariant i21: x >= 0 && x <= 2 * N;\n\nloop invariant i23: N <= 2 * N;\n\nloop invariant i25: x <= 2 * N;\nloop invariant i26: 0 <= x <= 2 * N;\n\nloop invariant i28: 0 <= x <= (2 * N);\nloop invariant i29: 0 <= x <= 2*N;\nloop invariant i30: (x % 2) == 0;\nloop invariant i31: 0 <= x;\nloop invariant i32: x <= N * 2;\nloop invariant i33: (x % 2 == 0);\nloop invariant i34: (x >= 0);\nloop invariant i35: (N >= 0);\n\n\nloop invariant i38: x <= N + 2;\nloop invariant i39: x % 2 == 0 ==> !((x % 2) != 0);\nloop invariant i40: N >= 0 ==> !((N < 0) || (x < 0));\nloop invariant i41: x <= N ==> !(x > N);\n\n\nloop invariant i44: x % 2 == (x >= N) ==> (x % 2 == 0);\nloop invariant i45: x % 2 == (x < N) ==> (x % 2 == 0);\n*/\nwhile (x < N) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/popl.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/07.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/39.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv_simp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/xy10.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/const_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe3.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/05.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/37.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/pldi082_unbounded.c"
        ],
        "skipped": [],
        "total": 142,
        "success_count": 114,
        "failure_count": 28,
        "success_rate": 0.8028169014084507
    }
}