{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x,y;\n    x = 0;\n    y = 0;\n    while (1) {\n        if (x < 50) {\n            y++;\n        } else {\n            y--;\n        }\n        if (y < 0) break;\n        x++;\n    }\n    {;\n//@ assert(x == 100);\n}\n\n    return 0;\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant x <= 50 ==> y >= 0;\nloop invariant x == 50 ==> y == 0;\nloop invariant x >= 50 ==> y <= 0;\nloop invariant x >= 0;\nloop invariant y >= -50;\nloop invariant y <= 50;\nloop invariant y >= x;\nloop invariant x >= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= x;\nloop invariant x + y == 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant 0 <= x <= 100000;\nloop invariant x <= y;\nloop invariant x <= y + 100000;\nloop invariant y <= x + 100000;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 50;\nloop invariant x + y >= 0;\nloop invariant x + y <= 100;\nloop invariant (x >= 50) ==> (y < 0);\nloop invariant (x < 50) ==> (y > 0);\nloop invariant (x >= 50) ==> (y == -y);\nloop invariant (x < 50) ==> (y == y);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 1 <= y <= 100;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x >= y - 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 50;\nloop invariant x == y + 50;\nloop invariant y < 50 ==> x < 100;\nloop invariant y >= 50 ==> x >= 100;\nloop invariant !(y < 0 ==> x >= 100);\nloop invariant !(y >= 0 ==> x < 100);\nloop invariant !(y < 0 ==> x > 100);\nloop invariant !(y >= 0 ==> x > 100);\nloop invariant !(y < 0 ==> x < 100);\nloop invariant !(y >= 0 ==> x >= 100);\nloop invariant !(y < 0 ==> x >= 100);\nloop invariant !(y >= 0 ==> x < 100);\nloop invariant !(y < 0 ==> x > 100);\nloop invariant !(y >= 0 ==> x > 100);\nloop invariant !(y < 0 ==> x < 100);\nloop invariant !(y >= 0 ==> x >= 100);\nloop invariant !(y < 0 ==> x >= 100);\nloop invariant !(y >= 0 ==> x < 100);\nloop invariant !(y < 0 ==> x > 100);\nloop invariant !(y >= 0 ==> x > 100);\nloop invariant !(y < 0 ==> x < 100);\nloop invariant !(y >= 0 ==> x >= 100);\nloop invariant !(y < 0 ==> x >= 100);\nloop invariant !(y >= 0 ==> x < 100);\nloop invariant !(y < 0 ==> x > 100);\nloop invariant !(y >= 0 ==> x > 100);\nloop invariant !(y < 0 ==> x < 100);\nloop invariant !(y >= 0 ==> x >= 100);\nloop invariant !(y < 0 ==> x >= 100);\nloop invariant !(y >= 0 ==> x < 100);\nloop invariant !(y < 0 ==> x > 100);\nloop invariant !(y >= 0 ==> x > 100);\nloop invariant !(y < 0 ==> x < 100);\nloop invariant !(y >= 0 ==> x >= 100);\nloop invariant !(y < 0 ==> x >= 100);\nloop invariant !(y >= 0 ==> x < 100);\nloop invariant !(y < 0 ==> x > 100);\nloop invariant !(y >= 0 ==> x > 100);\nloop invariant !(y < 0 ==> x < 100);\nloop invariant !(y >= 0 ==> x >= 100);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 100;\nloop invariant x == 100 ==> y == 0;\nloop invariant (x >= 50 ==> y <= 0) ==> (x < 50 ==> y >= 0);\nloop invariant x == 50 ==> y == 0;\nloop invariant x == 99 ==> y == 1;\nloop invariant x == 100 ==> y == 0;\nloop invariant x == 101 ==> y == -1;\nloop invariant x == 102 ==> y == -2;\nloop invariant x == 103 ==> y == -3;\nloop invariant x == 104 ==> y == -4;\nloop invariant x == 105 ==> y == -5;\nloop invariant x == 106 ==> y == -6;\nloop invariant x == 107 ==> y == -7;\nloop invariant x == 108 ==> y == -8;\nloop invariant x == 109 ==> y == -9;\nloop invariant x == 110 ==> y == -10;\nloop invariant x == 111 ==> y == -11;\nloop invariant x == 112 ==> y == -12;\nloop invariant x == 113 ==> y == -13;\nloop invariant x == 114 ==> y == -14;\nloop invariant x == 115 ==> y == -15;\nloop invariant x == 116 ==> y == -16;\nloop invariant x == 117 ==> y == -17;\nloop invariant x == 118 ==> y == -18;\nloop invariant x == 119 ==> y == -19;\nloop invariant x == 120 ==> y == -20;\nloop invariant x == 121 ==> y == -21;\nloop invariant x == 122 ==> y == -22;\nloop invariant x == 123 ==> y == -23;\nloop invariant x == 124 ==> y == -24;\nloop invariant x == 125 ==> y == -25;\nloop invariant x == 126 ==> y == -26;\nloop invariant x == 127 ==> y == -27;\nloop invariant x == 128 ==> y == -28;\nloop invariant x == 129 ==> y == -29;\nloop invariant x == 130 ==> y == -30;\nloop invariant x == 131 ==> y == -31;\nloop invariant x == 132 ==> y == -32;\nloop invariant x == 133 ==> y == -33;\nloop invariant x == 134 ==> y == -34;\nloop invariant x == 135 ==> y == -35;\nloop invariant x == 136 ==> y == -36;\nloop invariant x == 137 ==> y == -37;\nloop invariant x == 138 ==> y == -38;\nloop invariant x == 139 ==> y == -39;\nloop invariant x == 140 ==> y == -40;\nloop invariant x == 141 ==> y == -41;\nloop invariant x == 142 ==> y == -42;\nloop invariant x == 143 ==> y == -43;\nloop invariant x == 144 ==> y == -44;\nloop invariant x == 145 ==> y == -45;\nloop invariant x == 146 ==> y == -46;\nloop invariant x == 147 ==> y == -47;\nloop invariant x == 148 ==> y == -48;\nloop invariant x == 149 ==> y == -49;\nloop invariant x == 150 ==> y == -50;\nloop invariant x == 151 ==> y == -51;\nloop invariant x == 152 ==> y == -52;\nloop invariant x == 153 ==> y == -53;\nloop invariant x == 154 ==> y == -54;\nloop invariant x == 155 ==> y == -55;\nloop invariant x == 156 ==> y == -56;\nloop invariant x == 157 ==> y == -57;\nloop invariant x == 158 ==> y == -58;\nloop invariant x == 159 ==> y == -59;\nloop invariant x == 160 ==> y == -60;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 100;\nloop invariant x + y == 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x <= x + 1;\nloop invariant y <= y - 1;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y > 0;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x <= 100;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x >= 0;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y >= 0;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x <= y;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y == x + 100;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y >= x;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y < 100;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y <= 100;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x >= 0;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x <= 100;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y >= 0;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y < 100;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y <= 100;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x >= 0;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x <= 100;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y >= 0;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y < 100;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y <= 100;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 100;\nloop invariant x + y == 100;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x <= 50 ==> y >= 0;\nloop invariant x == 50 ==> y == 0;\nloop invariant x >= 50 ==> y <= 0;\nloop invariant x >= 0;\nloop invariant y >= -50;\nloop invariant y <= 50;\nloop invariant y >= x;\nloop invariant x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x,y;\n    x = 0;\n    y = 0;\n    /*@\nloop invariant i1: x <= 50 ==> y >= 0;\n\n\nloop invariant i4: x >= 0;\nloop invariant i5: y >= -50;\nloop invariant i6: y <= 50;\n\nloop invariant i8: x >= y;\n*/\nwhile (1) {\n        if (x < 50) {\n            y++;\n        } else {\n            y--;\n        }\n        if (y < 0) break;\n        x++;\n    }\n    {;\n//@ assert(x == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= x;\nloop invariant x + y == 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x,y;\n    x = 0;\n    y = 0;\n    /*@\n\nloop invariant i2: 0 <= y <= x;\n\n*/\nwhile (1) {\n        if (x < 50) {\n            y++;\n        } else {\n            y--;\n        }\n        if (y < 0) break;\n        x++;\n    }\n    {;\n//@ assert(x == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x,y;\n    x = 0;\n    y = 0;\n    /*@\n\n\n*/\nwhile (1) {\n        if (x < 50) {\n            y++;\n        } else {\n            y--;\n        }\n        if (y < 0) break;\n        x++;\n    }\n    {;\n//@ assert(x == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant 0 <= x <= 100000;\nloop invariant x <= y;\nloop invariant x <= y + 100000;\nloop invariant y <= x + 100000;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\nloop invariant y <= 100000 - x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x,y;\n    x = 0;\n    y = 0;\n    /*@\n\n\n\n\nloop invariant i5: y <= x + 100000;\n\n*/\nwhile (1) {\n        if (x < 50) {\n            y++;\n        } else {\n            y--;\n        }\n        if (y < 0) break;\n        x++;\n    }\n    {;\n//@ assert(x == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 50;\nloop invariant x + y >= 0;\nloop invariant x + y <= 100;\nloop invariant (x >= 50) ==> (y < 0);\nloop invariant (x < 50) ==> (y > 0);\nloop invariant (x >= 50) ==> (y == -y);\nloop invariant (x < 50) ==> (y == y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x,y;\n    x = 0;\n    y = 0;\n    /*@\n\n\nloop invariant i3: x + y >= 0;\n\n\n\n\nloop invariant i8: (x < 50) ==> (y == y);\n*/\nwhile (1) {\n        if (x < 50) {\n            y++;\n        } else {\n            y--;\n        }\n        if (y < 0) break;\n        x++;\n    }\n    {;\n//@ assert(x == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 1 <= y <= 100;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x >= y - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x,y;\n    x = 0;\n    y = 0;\n    /*@\n\n\n\nloop invariant i4: y <= 100;\nloop invariant i5: x >= y - 1;\n*/\nwhile (1) {\n        if (x < 50) {\n            y++;\n        } else {\n            y--;\n        }\n        if (y < 0) break;\n        x++;\n    }\n    {;\n//@ assert(x == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 50;\nloop invariant x == y + 50;\nloop invariant y < 50 ==> x < 100;\nloop invariant y >= 50 ==> x >= 100;\nloop invariant !(y < 0 ==> x >= 100);\nloop invariant !(y >= 0 ==> x < 100);\nloop invariant !(y < 0 ==> x > 100);\nloop invariant !(y >= 0 ==> x > 100);\nloop invariant !(y < 0 ==> x < 100);\nloop invariant !(y >= 0 ==> x >= 100);\nloop invariant !(y < 0 ==> x >= 100);\nloop invariant !(y >= 0 ==> x < 100);\nloop invariant !(y < 0 ==> x > 100);\nloop invariant !(y >= 0 ==> x > 100);\nloop invariant !(y < 0 ==> x < 100);\nloop invariant !(y >= 0 ==> x >= 100);\nloop invariant !(y < 0 ==> x >= 100);\nloop invariant !(y >= 0 ==> x < 100);\nloop invariant !(y < 0 ==> x > 100);\nloop invariant !(y >= 0 ==> x > 100);\nloop invariant !(y < 0 ==> x < 100);\nloop invariant !(y >= 0 ==> x >= 100);\nloop invariant !(y < 0 ==> x >= 100);\nloop invariant !(y >= 0 ==> x < 100);\nloop invariant !(y < 0 ==> x > 100);\nloop invariant !(y >= 0 ==> x > 100);\nloop invariant !(y < 0 ==> x < 100);\nloop invariant !(y >= 0 ==> x >= 100);\nloop invariant !(y < 0 ==> x >= 100);\nloop invariant !(y >= 0 ==> x < 100);\nloop invariant !(y < 0 ==> x > 100);\nloop invariant !(y >= 0 ==> x > 100);\nloop invariant !(y < 0 ==> x < 100);\nloop invariant !(y >= 0 ==> x >= 100);\nloop invariant !(y < 0 ==> x >= 100);\nloop invariant !(y >= 0 ==> x < 100);\nloop invariant !(y < 0 ==> x > 100);\nloop invariant !(y >= 0 ==> x > 100);\nloop invariant !(y < 0 ==> x < 100);\nloop invariant !(y >= 0 ==> x >= 100);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x,y;\n    x = 0;\n    y = 0;\n    /*@\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (1) {\n        if (x < 50) {\n            y++;\n        } else {\n            y--;\n        }\n        if (y < 0) break;\n        x++;\n    }\n    {;\n//@ assert(x == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x,y;\n    x = 0;\n    y = 0;\n    /*@\n\n\n*/\nwhile (1) {\n        if (x < 50) {\n            y++;\n        } else {\n            y--;\n        }\n        if (y < 0) break;\n        x++;\n    }\n    {;\n//@ assert(x == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x,y;\n    x = 0;\n    y = 0;\n    /*@\n\n\n*/\nwhile (1) {\n        if (x < 50) {\n            y++;\n        } else {\n            y--;\n        }\n        if (y < 0) break;\n        x++;\n    }\n    {;\n//@ assert(x == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 64,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 100;\nloop invariant x == 100 ==> y == 0;\nloop invariant (x >= 50 ==> y <= 0) ==> (x < 50 ==> y >= 0);\nloop invariant x == 50 ==> y == 0;\nloop invariant x == 99 ==> y == 1;\nloop invariant x == 100 ==> y == 0;\nloop invariant x == 101 ==> y == -1;\nloop invariant x == 102 ==> y == -2;\nloop invariant x == 103 ==> y == -3;\nloop invariant x == 104 ==> y == -4;\nloop invariant x == 105 ==> y == -5;\nloop invariant x == 106 ==> y == -6;\nloop invariant x == 107 ==> y == -7;\nloop invariant x == 108 ==> y == -8;\nloop invariant x == 109 ==> y == -9;\nloop invariant x == 110 ==> y == -10;\nloop invariant x == 111 ==> y == -11;\nloop invariant x == 112 ==> y == -12;\nloop invariant x == 113 ==> y == -13;\nloop invariant x == 114 ==> y == -14;\nloop invariant x == 115 ==> y == -15;\nloop invariant x == 116 ==> y == -16;\nloop invariant x == 117 ==> y == -17;\nloop invariant x == 118 ==> y == -18;\nloop invariant x == 119 ==> y == -19;\nloop invariant x == 120 ==> y == -20;\nloop invariant x == 121 ==> y == -21;\nloop invariant x == 122 ==> y == -22;\nloop invariant x == 123 ==> y == -23;\nloop invariant x == 124 ==> y == -24;\nloop invariant x == 125 ==> y == -25;\nloop invariant x == 126 ==> y == -26;\nloop invariant x == 127 ==> y == -27;\nloop invariant x == 128 ==> y == -28;\nloop invariant x == 129 ==> y == -29;\nloop invariant x == 130 ==> y == -30;\nloop invariant x == 131 ==> y == -31;\nloop invariant x == 132 ==> y == -32;\nloop invariant x == 133 ==> y == -33;\nloop invariant x == 134 ==> y == -34;\nloop invariant x == 135 ==> y == -35;\nloop invariant x == 136 ==> y == -36;\nloop invariant x == 137 ==> y == -37;\nloop invariant x == 138 ==> y == -38;\nloop invariant x == 139 ==> y == -39;\nloop invariant x == 140 ==> y == -40;\nloop invariant x == 141 ==> y == -41;\nloop invariant x == 142 ==> y == -42;\nloop invariant x == 143 ==> y == -43;\nloop invariant x == 144 ==> y == -44;\nloop invariant x == 145 ==> y == -45;\nloop invariant x == 146 ==> y == -46;\nloop invariant x == 147 ==> y == -47;\nloop invariant x == 148 ==> y == -48;\nloop invariant x == 149 ==> y == -49;\nloop invariant x == 150 ==> y == -50;\nloop invariant x == 151 ==> y == -51;\nloop invariant x == 152 ==> y == -52;\nloop invariant x == 153 ==> y == -53;\nloop invariant x == 154 ==> y == -54;\nloop invariant x == 155 ==> y == -55;\nloop invariant x == 156 ==> y == -56;\nloop invariant x == 157 ==> y == -57;\nloop invariant x == 158 ==> y == -58;\nloop invariant x == 159 ==> y == -59;\nloop invariant x == 160 ==> y == -60;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x,y;\n    x = 0;\n    y = 0;\n    /*@\n\n\n\nloop invariant i4: (x >= 50 ==> y <= 0) ==> (x < 50 ==> y >= 0);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (1) {\n        if (x < 50) {\n            y++;\n        } else {\n            y--;\n        }\n        if (y < 0) break;\n        x++;\n    }\n    {;\n//@ assert(x == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 100;\nloop invariant x + y == 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x,y;\n    x = 0;\n    y = 0;\n    /*@\n\n\n\n*/\nwhile (1) {\n        if (x < 50) {\n            y++;\n        } else {\n            y--;\n        }\n        if (y < 0) break;\n        x++;\n    }\n    {;\n//@ assert(x == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\nloop invariant x + y >= 100;\nloop invariant x - y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 50;\nloop invariant x + y >= 50;\nloop invariant x - y <= 50;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x,y;\n    x = 0;\n    y = 0;\n    /*@\n\n\n\n\n\n\nloop invariant i7: x >= 0;\nloop invariant i8: y >= 0;\n\n\n*/\nwhile (1) {\n        if (x < 50) {\n            y++;\n        } else {\n            y--;\n        }\n        if (y < 0) break;\n        x++;\n    }\n    {;\n//@ assert(x == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x <= x + 1;\nloop invariant y <= y - 1;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x,y;\n    x = 0;\n    y = 0;\n    /*@\n\n\nloop invariant i3: x <= x + 1;\n\nloop invariant i5: y >= 0;\nloop invariant i6: x >= 0;\n\n\n*/\nwhile (1) {\n        if (x < 50) {\n            y++;\n        } else {\n            y--;\n        }\n        if (y < 0) break;\n        x++;\n    }\n    {;\n//@ assert(x == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y > 0;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x <= 100;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x >= 0;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y >= 0;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x <= y;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y == x + 100;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y >= x;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y < 100;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y <= 100;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x >= 0;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x <= 100;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y >= 0;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y < 100;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y <= 100;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x >= 0;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x <= 100;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y >= 0;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y < 100;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y <= 100;\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x,y;\n    x = 0;\n    y = 0;\n    /*@\n\nloop invariant i2: ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x <= 100;\nloop invariant i3: ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x >= 0;\nloop invariant i4: ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y >= 0;\n\n\n\n\n\n*/\nwhile (1) {\n        if (x < 50) {\n            y++;\n        } else {\n            y--;\n        }\n        if (y < 0) break;\n        x++;\n    }\n    {;\n//@ assert(x == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 100;\nloop invariant x + y == 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x,y;\n    x = 0;\n    y = 0;\n    /*@\n\n\n\n*/\nwhile (1) {\n        if (x < 50) {\n            y++;\n        } else {\n            y--;\n        }\n        if (y < 0) break;\n        x++;\n    }\n    {;\n//@ assert(x == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "loop invariant x <= 50 ==> y >= 0 is partially proven to be inductive.\nloop invariant x == 50 ==> y == 0 is partially proven to be inductive.\nloop invariant x >= 50 ==> y <= 0 is partially proven to be inductive.\nloop invariant x >= 0 is partially proven to be inductive.\nloop invariant y >= -50 is partially proven to be inductive.\nloop invariant y <= 50 is partially proven to be inductive.\nloop invariant y >= x is partially proven to be inductive.\nloop invariant x >= y is partially proven to be inductive.\nloop invariant 0 <= x <= 100 is partially proven to be inductive.\nloop invariant 0 <= y <= x is partially proven to be inductive.\nloop invariant x + y == 100 is preserved but not established.\nloop invariant 0 <= y <= 100000 is partially proven to be inductive.\nloop invariant x >= (1 + (y - 1) * y / 2) is partially proven to be inductive.\nloop invariant 0 <= x <= 100000 is partially proven to be inductive.\nloop invariant x <= y is partially proven to be inductive.\nloop invariant x <= y + 100000 is partially proven to be inductive.\nloop invariant y <= x + 100000 is partially proven to be inductive.\nloop invariant y <= 100000 - x is partially proven to be inductive.\nloop invariant 0 <= x <= 50 is partially proven to be inductive.\nloop invariant 0 <= y <= 50 is partially proven to be inductive.\nloop invariant x + y >= 0 is partially proven to be inductive.\nloop invariant x + y <= 100 is partially proven to be inductive.\nloop invariant (x >= 50) ==> (y < 0) is partially proven to be inductive.\nloop invariant (x < 50) ==> (y > 0) is partially proven to be inductive.\nloop invariant (x >= 50) ==> (y == -y) is partially proven to be inductive.\nloop invariant (x < 50) ==> (y == y) is partially proven to be inductive.\nloop invariant 1 <= y <= 100 is partially proven to be inductive.\nloop invariant x <= 100 is partially proven to be inductive.\nloop invariant y <= 100 is partially proven to be inductive.\nloop invariant x >= y - 1 is partially proven to be inductive.\nloop invariant x == y + 50 is partially proven to be inductive.\nloop invariant y < 50 ==> x < 100 is partially proven to be inductive.\nloop invariant y >= 50 ==> x >= 100 is partially proven to be inductive.\nloop invariant !(y < 0 ==> x >= 100) is partially proven to be inductive.\nloop invariant !(y >= 0 ==> x < 100) is partially proven to be inductive.\nloop invariant !(y < 0 ==> x > 100) is partially proven to be inductive.\nloop invariant !(y >= 0 ==> x > 100) is partially proven to be inductive.\nloop invariant !(y < 0 ==> x < 100) is partially proven to be inductive.\nloop invariant !(y >= 0 ==> x >= 100) is partially proven to be inductive.\nloop invariant 0 <= y <= 100 is partially proven to be inductive.\nloop invariant x == 100 ==> y == 0 is partially proven to be inductive.\nloop invariant (x >= 50 ==> y <= 0) ==> (x < 50 ==> y >= 0) is partially proven to be inductive.\nloop invariant x == 99 ==> y == 1 is partially proven to be inductive.\nloop invariant x == 101 ==> y == -1 is partially proven to be inductive.\nloop invariant x == 102 ==> y == -2 is partially proven to be inductive.\nloop invariant x == 103 ==> y == -3 is partially proven to be inductive.\nloop invariant x == 104 ==> y == -4 is partially proven to be inductive.\nloop invariant x == 105 ==> y == -5 is partially proven to be inductive.\nloop invariant x == 106 ==> y == -6 is partially proven to be inductive.\nloop invariant x == 107 ==> y == -7 is partially proven to be inductive.\nloop invariant x == 108 ==> y == -8 is partially proven to be inductive.\nloop invariant x == 109 ==> y == -9 is partially proven to be inductive.\nloop invariant x == 110 ==> y == -10 is partially proven to be inductive.\nloop invariant x == 111 ==> y == -11 is partially proven to be inductive.\nloop invariant x == 112 ==> y == -12 is partially proven to be inductive.\nloop invariant x == 113 ==> y == -13 is partially proven to be inductive.\nloop invariant x == 114 ==> y == -14 is partially proven to be inductive.\nloop invariant x == 115 ==> y == -15 is partially proven to be inductive.\nloop invariant x == 116 ==> y == -16 is partially proven to be inductive.\nloop invariant x == 117 ==> y == -17 is partially proven to be inductive.\nloop invariant x == 118 ==> y == -18 is partially proven to be inductive.\nloop invariant x == 119 ==> y == -19 is partially proven to be inductive.\nloop invariant x == 120 ==> y == -20 is partially proven to be inductive.\nloop invariant x == 121 ==> y == -21 is partially proven to be inductive.\nloop invariant x == 122 ==> y == -22 is partially proven to be inductive.\nloop invariant x == 123 ==> y == -23 is partially proven to be inductive.\nloop invariant x == 124 ==> y == -24 is partially proven to be inductive.\nloop invariant x == 125 ==> y == -25 is partially proven to be inductive.\nloop invariant x == 126 ==> y == -26 is partially proven to be inductive.\nloop invariant x == 127 ==> y == -27 is partially proven to be inductive.\nloop invariant x == 128 ==> y == -28 is partially proven to be inductive.\nloop invariant x == 129 ==> y == -29 is partially proven to be inductive.\nloop invariant x == 130 ==> y == -30 is partially proven to be inductive.\nloop invariant x == 131 ==> y == -31 is partially proven to be inductive.\nloop invariant x == 132 ==> y == -32 is partially proven to be inductive.\nloop invariant x == 133 ==> y == -33 is partially proven to be inductive.\nloop invariant x == 134 ==> y == -34 is partially proven to be inductive.\nloop invariant x == 135 ==> y == -35 is partially proven to be inductive.\nloop invariant x == 136 ==> y == -36 is partially proven to be inductive.\nloop invariant x == 137 ==> y == -37 is partially proven to be inductive.\nloop invariant x == 138 ==> y == -38 is partially proven to be inductive.\nloop invariant x == 139 ==> y == -39 is partially proven to be inductive.\nloop invariant x == 140 ==> y == -40 is partially proven to be inductive.\nloop invariant x == 141 ==> y == -41 is partially proven to be inductive.\nloop invariant x == 142 ==> y == -42 is partially proven to be inductive.\nloop invariant x == 143 ==> y == -43 is partially proven to be inductive.\nloop invariant x == 144 ==> y == -44 is partially proven to be inductive.\nloop invariant x == 145 ==> y == -45 is partially proven to be inductive.\nloop invariant x == 146 ==> y == -46 is partially proven to be inductive.\nloop invariant x == 147 ==> y == -47 is partially proven to be inductive.\nloop invariant x == 148 ==> y == -48 is partially proven to be inductive.\nloop invariant x == 149 ==> y == -49 is partially proven to be inductive.\nloop invariant x == 150 ==> y == -50 is partially proven to be inductive.\nloop invariant x == 151 ==> y == -51 is partially proven to be inductive.\nloop invariant x == 152 ==> y == -52 is partially proven to be inductive.\nloop invariant x == 153 ==> y == -53 is partially proven to be inductive.\nloop invariant x == 154 ==> y == -54 is partially proven to be inductive.\nloop invariant x == 155 ==> y == -55 is partially proven to be inductive.\nloop invariant x == 156 ==> y == -56 is partially proven to be inductive.\nloop invariant x == 157 ==> y == -57 is partially proven to be inductive.\nloop invariant x == 158 ==> y == -58 is partially proven to be inductive.\nloop invariant x == 159 ==> y == -59 is partially proven to be inductive.\nloop invariant x == 160 ==> y == -60 is partially proven to be inductive.\nloop invariant x + y >= 50 is partially proven to be inductive.\nloop invariant x - y <= 50 is partially proven to be inductive.\nloop invariant x + y >= 100 is partially proven to be inductive.\nloop invariant x - y <= 100 is partially proven to be inductive.\nloop invariant y >= 0 is partially proven to be inductive.\nloop invariant x <= x + 1 is partially proven to be inductive.\nloop invariant y <= y - 1 is partially proven to be inductive.\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y > 0 is partially proven to be inductive.\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x <= 100 is partially proven to be inductive.\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x >= 0 is partially proven to be inductive.\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y >= 0 is partially proven to be inductive.\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x <= y is partially proven to be inductive.\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y == x + 100 is partially proven to be inductive.\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y >= x is partially proven to be inductive.\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y < 100 is partially proven to be inductive.\nloop invariant ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y <= 100 is partially proven to be inductive.\nAssertion x == 100: Partially proven",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x,y;\n    x = 0;\n    y = 0;\n    /*@\nloop invariant i1: x <= 50 ==> y >= 0;\nloop invariant i2: x == 50 ==> y == 0;\nloop invariant i3: x >= 50 ==> y <= 0;\nloop invariant i4: x >= 0;\nloop invariant i5: y >= -50;\nloop invariant i6: y <= 50;\nloop invariant i7: y >= x;\nloop invariant i8: x >= y;\nloop invariant i9: 0 <= x <= 100;\nloop invariant i10: 0 <= y <= x;\nloop invariant i11: x + y == 100;\nloop invariant i12: 0 <= y <= 100000;\nloop invariant i13: x >= (1 + (y - 1) * y / 2);\nloop invariant i14: 0 <= x <= 100000;\nloop invariant i15: x <= y;\nloop invariant i16: x <= y + 100000;\nloop invariant i17: y <= x + 100000;\nloop invariant i18: y <= 100000 - x;\nloop invariant i19: 0 <= x <= 50;\nloop invariant i20: 0 <= y <= 50;\nloop invariant i21: x + y >= 0;\nloop invariant i22: x + y <= 100;\nloop invariant i23: (x >= 50) ==> (y < 0);\nloop invariant i24: (x < 50) ==> (y > 0);\nloop invariant i25: (x >= 50) ==> (y == -y);\nloop invariant i26: (x < 50) ==> (y == y);\nloop invariant i27: 1 <= y <= 100;\nloop invariant i28: x <= 100;\nloop invariant i29: y <= 100;\nloop invariant i30: x >= y - 1;\nloop invariant i31: x == y + 50;\nloop invariant i32: y < 50 ==> x < 100;\nloop invariant i33: y >= 50 ==> x >= 100;\nloop invariant i34: !(y < 0 ==> x >= 100);\nloop invariant i35: !(y >= 0 ==> x < 100);\nloop invariant i36: !(y < 0 ==> x > 100);\nloop invariant i37: !(y >= 0 ==> x > 100);\nloop invariant i38: !(y < 0 ==> x < 100);\nloop invariant i39: !(y >= 0 ==> x >= 100);\nloop invariant i40: 0 <= y <= 100;\nloop invariant i41: x == 100 ==> y == 0;\nloop invariant i42: (x >= 50 ==> y <= 0) ==> (x < 50 ==> y >= 0);\nloop invariant i43: x == 99 ==> y == 1;\nloop invariant i44: x == 101 ==> y == -1;\nloop invariant i45: x == 102 ==> y == -2;\nloop invariant i46: x == 103 ==> y == -3;\nloop invariant i47: x == 104 ==> y == -4;\nloop invariant i48: x == 105 ==> y == -5;\nloop invariant i49: x == 106 ==> y == -6;\nloop invariant i50: x == 107 ==> y == -7;\nloop invariant i51: x == 108 ==> y == -8;\nloop invariant i52: x == 109 ==> y == -9;\nloop invariant i53: x == 110 ==> y == -10;\nloop invariant i54: x == 111 ==> y == -11;\nloop invariant i55: x == 112 ==> y == -12;\nloop invariant i56: x == 113 ==> y == -13;\nloop invariant i57: x == 114 ==> y == -14;\nloop invariant i58: x == 115 ==> y == -15;\nloop invariant i59: x == 116 ==> y == -16;\nloop invariant i60: x == 117 ==> y == -17;\nloop invariant i61: x == 118 ==> y == -18;\nloop invariant i62: x == 119 ==> y == -19;\nloop invariant i63: x == 120 ==> y == -20;\nloop invariant i64: x == 121 ==> y == -21;\nloop invariant i65: x == 122 ==> y == -22;\nloop invariant i66: x == 123 ==> y == -23;\nloop invariant i67: x == 124 ==> y == -24;\nloop invariant i68: x == 125 ==> y == -25;\nloop invariant i69: x == 126 ==> y == -26;\nloop invariant i70: x == 127 ==> y == -27;\nloop invariant i71: x == 128 ==> y == -28;\nloop invariant i72: x == 129 ==> y == -29;\nloop invariant i73: x == 130 ==> y == -30;\nloop invariant i74: x == 131 ==> y == -31;\nloop invariant i75: x == 132 ==> y == -32;\nloop invariant i76: x == 133 ==> y == -33;\nloop invariant i77: x == 134 ==> y == -34;\nloop invariant i78: x == 135 ==> y == -35;\nloop invariant i79: x == 136 ==> y == -36;\nloop invariant i80: x == 137 ==> y == -37;\nloop invariant i81: x == 138 ==> y == -38;\nloop invariant i82: x == 139 ==> y == -39;\nloop invariant i83: x == 140 ==> y == -40;\nloop invariant i84: x == 141 ==> y == -41;\nloop invariant i85: x == 142 ==> y == -42;\nloop invariant i86: x == 143 ==> y == -43;\nloop invariant i87: x == 144 ==> y == -44;\nloop invariant i88: x == 145 ==> y == -45;\nloop invariant i89: x == 146 ==> y == -46;\nloop invariant i90: x == 147 ==> y == -47;\nloop invariant i91: x == 148 ==> y == -48;\nloop invariant i92: x == 149 ==> y == -49;\nloop invariant i93: x == 150 ==> y == -50;\nloop invariant i94: x == 151 ==> y == -51;\nloop invariant i95: x == 152 ==> y == -52;\nloop invariant i96: x == 153 ==> y == -53;\nloop invariant i97: x == 154 ==> y == -54;\nloop invariant i98: x == 155 ==> y == -55;\nloop invariant i99: x == 156 ==> y == -56;\nloop invariant i100: x == 157 ==> y == -57;\nloop invariant i101: x == 158 ==> y == -58;\nloop invariant i102: x == 159 ==> y == -59;\nloop invariant i103: x == 160 ==> y == -60;\nloop invariant i104: x + y >= 50;\nloop invariant i105: x - y <= 50;\nloop invariant i106: x + y >= 100;\nloop invariant i107: x - y <= 100;\nloop invariant i108: y >= 0;\nloop invariant i109: x <= x + 1;\nloop invariant i110: y <= y - 1;\nloop invariant i111: ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y > 0;\nloop invariant i112: ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x <= 100;\nloop invariant i113: ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x >= 0;\nloop invariant i114: ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y >= 0;\nloop invariant i115: ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x <= y;\nloop invariant i116: ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y == x + 100;\nloop invariant i117: ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y >= x;\nloop invariant i118: ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y < 100;\nloop invariant i119: ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y <= 100;\n*/\nwhile (1) {\n        if (x < 50) {\n            y++;\n        } else {\n            y--;\n        }\n        if (y < 0) break;\n        x++;\n    }\n    {;\n//@ assert(x == 100);\n}\n\n    return 0;\n}",
        "combined_annotation_num_solver_calls": 28,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x,y;\n    x = 0;\n    y = 0;\n    /*@\nloop invariant i1: x <= 50 ==> y >= 0;\n\n\nloop invariant i4: x >= 0;\nloop invariant i5: y >= -50;\nloop invariant i6: y <= 50;\n\nloop invariant i8: x >= y;\nloop invariant i9: 0 <= x <= 100;\nloop invariant i10: 0 <= y <= x;\n\nloop invariant i12: 0 <= y <= 100000;\n\nloop invariant i14: 0 <= x <= 100000;\n\nloop invariant i16: x <= y + 100000;\nloop invariant i17: y <= x + 100000;\nloop invariant i18: y <= 100000 - x;\n\nloop invariant i20: 0 <= y <= 50;\nloop invariant i21: x + y >= 0;\nloop invariant i22: x + y <= 100;\n\n\n\nloop invariant i26: (x < 50) ==> (y == y);\n\nloop invariant i28: x <= 100;\nloop invariant i29: y <= 100;\nloop invariant i30: x >= y - 1;\n\n\n\n\n\n\nloop invariant i37: !(y >= 0 ==> x > 100);\n\n\nloop invariant i40: 0 <= y <= 100;\nloop invariant i41: x == 100 ==> y == 0;\nloop invariant i42: (x >= 50 ==> y <= 0) ==> (x < 50 ==> y >= 0);\n\nloop invariant i44: x == 101 ==> y == -1;\nloop invariant i45: x == 102 ==> y == -2;\nloop invariant i46: x == 103 ==> y == -3;\nloop invariant i47: x == 104 ==> y == -4;\nloop invariant i48: x == 105 ==> y == -5;\nloop invariant i49: x == 106 ==> y == -6;\nloop invariant i50: x == 107 ==> y == -7;\nloop invariant i51: x == 108 ==> y == -8;\nloop invariant i52: x == 109 ==> y == -9;\nloop invariant i53: x == 110 ==> y == -10;\nloop invariant i54: x == 111 ==> y == -11;\nloop invariant i55: x == 112 ==> y == -12;\nloop invariant i56: x == 113 ==> y == -13;\nloop invariant i57: x == 114 ==> y == -14;\nloop invariant i58: x == 115 ==> y == -15;\nloop invariant i59: x == 116 ==> y == -16;\nloop invariant i60: x == 117 ==> y == -17;\nloop invariant i61: x == 118 ==> y == -18;\nloop invariant i62: x == 119 ==> y == -19;\nloop invariant i63: x == 120 ==> y == -20;\nloop invariant i64: x == 121 ==> y == -21;\nloop invariant i65: x == 122 ==> y == -22;\nloop invariant i66: x == 123 ==> y == -23;\nloop invariant i67: x == 124 ==> y == -24;\nloop invariant i68: x == 125 ==> y == -25;\nloop invariant i69: x == 126 ==> y == -26;\nloop invariant i70: x == 127 ==> y == -27;\nloop invariant i71: x == 128 ==> y == -28;\nloop invariant i72: x == 129 ==> y == -29;\nloop invariant i73: x == 130 ==> y == -30;\nloop invariant i74: x == 131 ==> y == -31;\nloop invariant i75: x == 132 ==> y == -32;\nloop invariant i76: x == 133 ==> y == -33;\nloop invariant i77: x == 134 ==> y == -34;\nloop invariant i78: x == 135 ==> y == -35;\nloop invariant i79: x == 136 ==> y == -36;\nloop invariant i80: x == 137 ==> y == -37;\nloop invariant i81: x == 138 ==> y == -38;\nloop invariant i82: x == 139 ==> y == -39;\nloop invariant i83: x == 140 ==> y == -40;\nloop invariant i84: x == 141 ==> y == -41;\nloop invariant i85: x == 142 ==> y == -42;\nloop invariant i86: x == 143 ==> y == -43;\nloop invariant i87: x == 144 ==> y == -44;\nloop invariant i88: x == 145 ==> y == -45;\nloop invariant i89: x == 146 ==> y == -46;\nloop invariant i90: x == 147 ==> y == -47;\nloop invariant i91: x == 148 ==> y == -48;\nloop invariant i92: x == 149 ==> y == -49;\nloop invariant i93: x == 150 ==> y == -50;\nloop invariant i94: x == 151 ==> y == -51;\nloop invariant i95: x == 152 ==> y == -52;\nloop invariant i96: x == 153 ==> y == -53;\nloop invariant i97: x == 154 ==> y == -54;\nloop invariant i98: x == 155 ==> y == -55;\nloop invariant i99: x == 156 ==> y == -56;\nloop invariant i100: x == 157 ==> y == -57;\nloop invariant i101: x == 158 ==> y == -58;\nloop invariant i102: x == 159 ==> y == -59;\nloop invariant i103: x == 160 ==> y == -60;\n\n\n\nloop invariant i107: x - y <= 100;\nloop invariant i108: y >= 0;\nloop invariant i109: x <= x + 1;\n\n\nloop invariant i112: ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x <= 100;\nloop invariant i113: ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> x >= 0;\nloop invariant i114: ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y >= 0;\n\n\n\nloop invariant i118: ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y < 100;\nloop invariant i119: ( x == 0 || ( 0 <= y <= 100 && 0 <= x <= 100 ) && ( x == 0 || y > 0 ) ) ==> y <= 100;\n*/\nwhile (1) {\n        if (x < 50) {\n            y++;\n        } else {\n            y--;\n        }\n        if (y < 0) break;\n        x++;\n    }\n    {;\n//@ assert(x == 100);\n}\n\n    return 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c"
        ],
        "skipped": [],
        "total": 51,
        "success_count": 42,
        "failure_count": 9,
        "success_rate": 0.8235294117647058
    }
}