{
    "logs": {
        "file": "../dataset/loop_invariants/accelerating_invariant_generation/invgen/ken-imp.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n  int i;\n  int j;\n  int x = i;\n  int y = j;\n  while(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\tif(y != 0) {;\n//@ assert(0);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i - x <= j - y;\nloop invariant y >= 0;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= y;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= j;\nloop invariant x <= 0;\nloop invariant y <= 0;\nloop invariant (x == i) && (y == j);\nloop invariant (x == i - y);\nloop invariant (y == j - x);\nloop invariant (x == 0) ==> (y == 0);\nloop invariant (y == 0) ==> (x == 0);\nloop invariant (x == i - y) ==> (y == j - x);\nloop invariant (y == j - x) ==> (x == i - y);\nloop invariant (x == i - y) ==> (y == 0) ==> (x == 0);\nloop invariant (y == j - x) ==> (x == 0) ==> (y == 0);\nloop invariant (x == i - y) ==> (x == 0) ==> (y == 0);\nloop invariant (y == j - x) ==> (y == 0) ==> (x == 0);\nloop invariant (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j);\nloop invariant (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j);\nloop invariant (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0);\nloop invariant (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0);\nloop invariant (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1);\nloop invariant (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1);\nloop invariant (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0;\nloop invariant (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0;\nloop invariant (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0;\nloop invariant (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0;\nloop invariant (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0);\nloop invariant (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0);\nloop invariant (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0) ==> 0;\nloop invariant (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0) ==> 0;\nloop invariant (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0) ==> 0 ==> 0;\nloop invariant (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0) ==> 0 ==> 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= (i - j);\nloop invariant y == j - x;\nloop invariant (if x == 0 => y == 0);\nloop invariant (if x == 1 => y == j - 1);\nloop invariant (if x == 2 => y == j - 2);\nloop invariant (if x == 3 => y == j - 3);\nloop invariant (if x == 4 => y == j - 4);\nloop invariant (if x == 5 => y == j - 5);\nloop invariant (if x == 6 => y == j - 6);\nloop invariant (if x == 7 => y == j - 7);\nloop invariant (if x == 8 => y == j - 8);\nloop invariant (if x == 9 => y == j - 9);\nloop invariant (if x == 10 => y == j - 10);\nloop invariant (if x == 11 => y == j - 11);\nloop invariant (if x == 12 => y == j - 12);\nloop invariant (if x == 13 => y == j - 13);\nloop invariant (if x == 14 => y == j - 14);\nloop invariant (if x == 15 => y == j - 15);\nloop invariant (if x == 16 => y == j - 16);\nloop invariant (if x == 17 => y == j - 17);\nloop invariant (if x == 18 => y == j - 18);\nloop invariant (if x == 19 => y == j - 19);\nloop invariant (if x == 20 => y == j - 20);\nloop invariant (if x == 21 => y == j - 21);\nloop invariant (if x == 22 => y == j - 22);\nloop invariant (if x == 23 => y == j - 23);\nloop invariant (if x == 24 => y == j - 24);\nloop invariant (if x == 25 => y == j - 25);\nloop invariant (if x == 26 => y == j - 26);\nloop invariant (if x == 27 => y == j - 27);\nloop invariant (if x == 28 => y == j - 28);\nloop invariant (if x == 29 => y == j - 29);\nloop invariant (if x == 30 => y == j - 30);\nloop invariant (if x == 31 => y == j - 31);\nloop invariant (if x == 32 => y == j - 32);\nloop invariant (if x == 33 => y == j - 33);\nloop invariant (if x == 34 => y == j - 34);\nloop invariant (if x == 35 => y == j - 35);\nloop invariant (if x == 36 => y == j - 36);\nloop invariant (if x == 37 => y == j - 37);\nloop invariant (if x == 38 => y == j - 38);\nloop invariant (if x == 39 => y == j - 39);\nloop invariant (if x == 40 => y == j - 40);\nloop invariant (if x == 41 => y == j - 41);\nloop invariant (if x == 42 => y == j - 42);\nloop invariant (if x == 43 => y == j - 43);\nloop invariant (if x == 44 => y == j - 44);\nloop invariant (if x == 45 => y == j - 45);\nloop invariant (if x == 46 => y == j - 46);\nloop invariant (if x == 47 => y == j - 47);\nloop invariant (if x == 48 => y == j - 48);\nloop invariant (if x == 49 => y == j - 49);\nloop invariant (if x == 50 => y == j - 50);\nloop invariant (if x == 51 => y == j - 51);\nloop invariant (if x == 52 => y == j - 52);\nloop invariant (if x == 53 => y == j - 53);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= j;\nloop invariant x == i - 1;\nloop invariant y == j - 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= j;\nloop invariant x >= i;\nloop invariant x >= 0;\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x == i - y;\nloop invariant x <= i;\nloop invariant y <= j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 100000;\nloop invariant x >= (1 + (i - 1) * i / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x + y == i - j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant (x == i) ==> (y == j);\nloop invariant y == j - x;\nloop invariant y == j - i + x;\nloop invariant y == j - i + i - x;\nloop invariant y == j - x;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= 100000 && 1 <= j <= 100000;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= (i - (j - 1) * j / 2);\nloop invariant y >= (j - (i - 1) * i / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i;\nloop invariant 0 <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x == i;\nloop invariant y == j;\nloop invariant x >= y;\nloop invariant x >= (i - j);\nloop invariant x >= (i - y);\nloop invariant x >= (j - y);\nloop invariant x >= (i + j - y);\nloop invariant x >= (i - j + y);\nloop invariant x >= (i + j - y + 1);\nloop invariant x >= (i + j - y + 2);\nloop invariant x >= (i + j - y + 3);\nloop invariant x >= (i + j - y + 4);\nloop invariant x >= (i + j - y + 5);\nloop invariant x >= (i + j - y + 6);\nloop invariant x >= (i + j - y + 7);\nloop invariant x >= (i + j - y + 8);\nloop invariant x >= (i + j - y + 9);\nloop invariant x >= (i + j - y + 10);\nloop invariant x >= (i + j - y + 11);\nloop invariant x >= (i + j - y + 12);\nloop invariant x >= (i + j - y + 13);\nloop invariant x >= (i + j - y + 14);\nloop invariant x >= (i + j - y + 15);\nloop invariant x >= (i + j - y + 16);\nloop invariant x >= (i + j - y + 17);\nloop invariant x >= (i + j - y + 18);\nloop invariant x >= (i + j - y + 19);\nloop invariant x >= (i + j - y + 20);\nloop invariant x >= (i + j - y + 21);\nloop invariant x >= (i + j - y + 22);\nloop invariant x >= (i + j - y + 23);\nloop invariant x >= (i + j - y + 24);\nloop invariant x >= (i + j - y + 25);\nloop invariant x >= (i + j - y + 26);\nloop invariant x >= (i + j - y + 27);\nloop invariant x >= (i + j - y + 28);\nloop invariant x >= (i + j - y + 29);\nloop invariant x >= (i + j - y + 30);\nloop invariant x >= (i + j - y + 31);\nloop invariant x >= (i + j - y + 32);\nloop invariant x >= (i + j - y + 33);\nloop invariant x >= (i + j - y + 34);\nloop invariant x >= (i + j - y + 35);\nloop invariant x >= (i + j - y + 36);\nloop invariant x >= (i + j - y + 37);\nloop invariant x >= (i + j - y + 38);\nloop invariant x >= (i + j - y + 39);\nloop invariant x >= (i + j - y + 40);\nloop invariant x >= (i + j - y + 41);\nloop invariant x >= (i + j - y + 42);\nloop invariant x >= (i + j - y + 43);\nloop invariant x >= (i + j - y + 44);\nloop invariant x >= (i + j - y + 45);\nloop invariant x >= (i + j - y + 46);\nloop invariant x >= (i + j - y + 47);\nloop invariant x >= (i + j - y + 48);\nloop invariant x >= (i + j - y + 49);\nloop invariant x >= (i + j - y + 50);\nloop invariant x >= (i + j - y + 51);\nloop invariant x >= (i + j - y + 52);\nloop invariant x >= (i + j - y + 53);\nloop invariant x >= (i + j - y + 54);\nloop invariant x >= (i + j - y + 55);\nloop invariant x >= (i + j - y + 56);\nloop invariant x >= (i + j - y + 57);\nloop invariant x >= (i + j - y + 58);\nloop invariant x >= (i + j - y + 59);\nloop invariant x >= (i + j - y + 60);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant y <= x;\nloop invariant x == i - y;\nloop invariant y == j - x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i - x <= j - y;\nloop invariant y >= 0;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n  int i;\n  int j;\n  int x = i;\n  int y = j;\n  /*@\n\n\nloop invariant i3: i - x <= j - y;\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\tif(y != 0) {;\n//@ assert(0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n  int i;\n  int j;\n  int x = i;\n  int y = j;\n  /*@\n\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\tif(y != 0) {;\n//@ assert(0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= j;\nloop invariant x <= 0;\nloop invariant y <= 0;\nloop invariant (x == i) && (y == j);\nloop invariant (x == i - y);\nloop invariant (y == j - x);\nloop invariant (x == 0) ==> (y == 0);\nloop invariant (y == 0) ==> (x == 0);\nloop invariant (x == i - y) ==> (y == j - x);\nloop invariant (y == j - x) ==> (x == i - y);\nloop invariant (x == i - y) ==> (y == 0) ==> (x == 0);\nloop invariant (y == j - x) ==> (x == 0) ==> (y == 0);\nloop invariant (x == i - y) ==> (x == 0) ==> (y == 0);\nloop invariant (y == j - x) ==> (y == 0) ==> (x == 0);\nloop invariant (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j);\nloop invariant (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j);\nloop invariant (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0);\nloop invariant (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0);\nloop invariant (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1);\nloop invariant (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1);\nloop invariant (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0;\nloop invariant (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0;\nloop invariant (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0;\nloop invariant (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0;\nloop invariant (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0);\nloop invariant (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0);\nloop invariant (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0) ==> 0;\nloop invariant (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0) ==> 0;\nloop invariant (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0) ==> 0 ==> 0;\nloop invariant (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0) ==> 0 ==> 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n  int i;\n  int j;\n  int x = i;\n  int y = j;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i19: (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1);\nloop invariant i20: (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1);\nloop invariant i21: (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0;\nloop invariant i22: (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0;\nloop invariant i23: (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0);\nloop invariant i24: (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0);\nloop invariant i25: (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0) ==> 0;\nloop invariant i26: (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0) ==> 0;\nloop invariant i27: (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0) ==> 0 ==> 0;\nloop invariant i28: (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0) ==> 0 ==> 0;\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\tif(y != 0) {;\n//@ assert(0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 55,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= (i - j);\nloop invariant y == j - x;\nloop invariant (if x == 0 => y == 0);\nloop invariant (if x == 1 => y == j - 1);\nloop invariant (if x == 2 => y == j - 2);\nloop invariant (if x == 3 => y == j - 3);\nloop invariant (if x == 4 => y == j - 4);\nloop invariant (if x == 5 => y == j - 5);\nloop invariant (if x == 6 => y == j - 6);\nloop invariant (if x == 7 => y == j - 7);\nloop invariant (if x == 8 => y == j - 8);\nloop invariant (if x == 9 => y == j - 9);\nloop invariant (if x == 10 => y == j - 10);\nloop invariant (if x == 11 => y == j - 11);\nloop invariant (if x == 12 => y == j - 12);\nloop invariant (if x == 13 => y == j - 13);\nloop invariant (if x == 14 => y == j - 14);\nloop invariant (if x == 15 => y == j - 15);\nloop invariant (if x == 16 => y == j - 16);\nloop invariant (if x == 17 => y == j - 17);\nloop invariant (if x == 18 => y == j - 18);\nloop invariant (if x == 19 => y == j - 19);\nloop invariant (if x == 20 => y == j - 20);\nloop invariant (if x == 21 => y == j - 21);\nloop invariant (if x == 22 => y == j - 22);\nloop invariant (if x == 23 => y == j - 23);\nloop invariant (if x == 24 => y == j - 24);\nloop invariant (if x == 25 => y == j - 25);\nloop invariant (if x == 26 => y == j - 26);\nloop invariant (if x == 27 => y == j - 27);\nloop invariant (if x == 28 => y == j - 28);\nloop invariant (if x == 29 => y == j - 29);\nloop invariant (if x == 30 => y == j - 30);\nloop invariant (if x == 31 => y == j - 31);\nloop invariant (if x == 32 => y == j - 32);\nloop invariant (if x == 33 => y == j - 33);\nloop invariant (if x == 34 => y == j - 34);\nloop invariant (if x == 35 => y == j - 35);\nloop invariant (if x == 36 => y == j - 36);\nloop invariant (if x == 37 => y == j - 37);\nloop invariant (if x == 38 => y == j - 38);\nloop invariant (if x == 39 => y == j - 39);\nloop invariant (if x == 40 => y == j - 40);\nloop invariant (if x == 41 => y == j - 41);\nloop invariant (if x == 42 => y == j - 42);\nloop invariant (if x == 43 => y == j - 43);\nloop invariant (if x == 44 => y == j - 44);\nloop invariant (if x == 45 => y == j - 45);\nloop invariant (if x == 46 => y == j - 46);\nloop invariant (if x == 47 => y == j - 47);\nloop invariant (if x == 48 => y == j - 48);\nloop invariant (if x == 49 => y == j - 49);\nloop invariant (if x == 50 => y == j - 50);\nloop invariant (if x == 51 => y == j - 51);\nloop invariant (if x == 52 => y == j - 52);\nloop invariant (if x == 53 => y == j - 53);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n  int i;\n  int j;\n  int x = i;\n  int y = j;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\tif(y != 0) {;\n//@ assert(0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= j;\nloop invariant x == i - 1;\nloop invariant y == j - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n  int i;\n  int j;\n  int x = i;\n  int y = j;\n  /*@\n\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\tif(y != 0) {;\n//@ assert(0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= j;\nloop invariant x >= i;\nloop invariant x >= 0;\nloop invariant y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n  int i;\n  int j;\n  int x = i;\n  int y = j;\n  /*@\n\n\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\tif(y != 0) {;\n//@ assert(0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x == i - y;\nloop invariant x <= i;\nloop invariant y <= j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n  int i;\n  int j;\n  int x = i;\n  int y = j;\n  /*@\n\n\n\nloop invariant i4: x <= i;\nloop invariant i5: y <= j;\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\tif(y != 0) {;\n//@ assert(0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 100000;\nloop invariant x >= (1 + (i - 1) * i / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n  int i;\n  int j;\n  int x = i;\n  int y = j;\n  /*@\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\tif(y != 0) {;\n//@ assert(0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x + y == i - j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x == i - y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n  int i;\n  int j;\n  int x = i;\n  int y = j;\n  /*@\n\n\n\n\n\nloop invariant i6: x <= i;\nloop invariant i7: y <= j;\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\tif(y != 0) {;\n//@ assert(0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n  int i;\n  int j;\n  int x = i;\n  int y = j;\n  /*@\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\tif(y != 0) {;\n//@ assert(0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j;\nloop invariant (x == i) ==> (y == j);\nloop invariant y == j - x;\nloop invariant y == j - i + x;\nloop invariant y == j - i + i - x;\nloop invariant y == j - x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n  int i;\n  int j;\n  int x = i;\n  int y = j;\n  /*@\n\n\n\n\nloop invariant i5: x <= i;\nloop invariant i6: y <= j;\n\nloop invariant i8: (x == i) ==> (y == j);\n\nloop invariant i10: y == j - i + x;\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\tif(y != 0) {;\n//@ assert(0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= 100000 && 1 <= j <= 100000;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= (i - (j - 1) * j / 2);\nloop invariant y >= (j - (i - 1) * i / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n  int i;\n  int j;\n  int x = i;\n  int y = j;\n  /*@\n\n\n\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\tif(y != 0) {;\n//@ assert(0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 64,
                "annotations": "```\n/*@\nloop invariant 0 <= i;\nloop invariant 0 <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x == i;\nloop invariant y == j;\nloop invariant x >= y;\nloop invariant x >= (i - j);\nloop invariant x >= (i - y);\nloop invariant x >= (j - y);\nloop invariant x >= (i + j - y);\nloop invariant x >= (i - j + y);\nloop invariant x >= (i + j - y + 1);\nloop invariant x >= (i + j - y + 2);\nloop invariant x >= (i + j - y + 3);\nloop invariant x >= (i + j - y + 4);\nloop invariant x >= (i + j - y + 5);\nloop invariant x >= (i + j - y + 6);\nloop invariant x >= (i + j - y + 7);\nloop invariant x >= (i + j - y + 8);\nloop invariant x >= (i + j - y + 9);\nloop invariant x >= (i + j - y + 10);\nloop invariant x >= (i + j - y + 11);\nloop invariant x >= (i + j - y + 12);\nloop invariant x >= (i + j - y + 13);\nloop invariant x >= (i + j - y + 14);\nloop invariant x >= (i + j - y + 15);\nloop invariant x >= (i + j - y + 16);\nloop invariant x >= (i + j - y + 17);\nloop invariant x >= (i + j - y + 18);\nloop invariant x >= (i + j - y + 19);\nloop invariant x >= (i + j - y + 20);\nloop invariant x >= (i + j - y + 21);\nloop invariant x >= (i + j - y + 22);\nloop invariant x >= (i + j - y + 23);\nloop invariant x >= (i + j - y + 24);\nloop invariant x >= (i + j - y + 25);\nloop invariant x >= (i + j - y + 26);\nloop invariant x >= (i + j - y + 27);\nloop invariant x >= (i + j - y + 28);\nloop invariant x >= (i + j - y + 29);\nloop invariant x >= (i + j - y + 30);\nloop invariant x >= (i + j - y + 31);\nloop invariant x >= (i + j - y + 32);\nloop invariant x >= (i + j - y + 33);\nloop invariant x >= (i + j - y + 34);\nloop invariant x >= (i + j - y + 35);\nloop invariant x >= (i + j - y + 36);\nloop invariant x >= (i + j - y + 37);\nloop invariant x >= (i + j - y + 38);\nloop invariant x >= (i + j - y + 39);\nloop invariant x >= (i + j - y + 40);\nloop invariant x >= (i + j - y + 41);\nloop invariant x >= (i + j - y + 42);\nloop invariant x >= (i + j - y + 43);\nloop invariant x >= (i + j - y + 44);\nloop invariant x >= (i + j - y + 45);\nloop invariant x >= (i + j - y + 46);\nloop invariant x >= (i + j - y + 47);\nloop invariant x >= (i + j - y + 48);\nloop invariant x >= (i + j - y + 49);\nloop invariant x >= (i + j - y + 50);\nloop invariant x >= (i + j - y + 51);\nloop invariant x >= (i + j - y + 52);\nloop invariant x >= (i + j - y + 53);\nloop invariant x >= (i + j - y + 54);\nloop invariant x >= (i + j - y + 55);\nloop invariant x >= (i + j - y + 56);\nloop invariant x >= (i + j - y + 57);\nloop invariant x >= (i + j - y + 58);\nloop invariant x >= (i + j - y + 59);\nloop invariant x >= (i + j - y + 60);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n  int i;\n  int j;\n  int x = i;\n  int y = j;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i12: x >= (i - j + y);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\tif(y != 0) {;\n//@ assert(0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant y <= x;\nloop invariant x == i - y;\nloop invariant y == j - x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n  int i;\n  int j;\n  int x = i;\n  int y = j;\n  /*@\n\n\n\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\tif(y != 0) {;\n//@ assert(0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n  int i;\n  int j;\n  int x = i;\n  int y = j;\n  /*@\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\tif(y != 0) {;\n//@ assert(0);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 51: unexpected token 'x'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n  int i;\n  int j;\n  int x = i;\n  int y = j;\n  /*@\nloop invariant i1: 0 <= x <= i;\nloop invariant i2: 0 <= y <= j;\nloop invariant i3: i - x <= j - y;\nloop invariant i4: y >= 0;\nloop invariant i5: x >= 0;\nloop invariant i6: 0 <= j <= 100000;\nloop invariant i7: x >= (1 + (y - 1) * y / 2);\nloop invariant i8: x >= y;\nloop invariant i9: 1 <= i <= j;\nloop invariant i10: x <= 0;\nloop invariant i11: y <= 0;\nloop invariant i12: (x == i) && (y == j);\nloop invariant i13: (x == i - y);\nloop invariant i14: (y == j - x);\nloop invariant i15: (x == 0) ==> (y == 0);\nloop invariant i16: (y == 0) ==> (x == 0);\nloop invariant i17: (x == i - y) ==> (y == j - x);\nloop invariant i18: (y == j - x) ==> (x == i - y);\nloop invariant i19: (x == i - y) ==> (y == 0) ==> (x == 0);\nloop invariant i20: (y == j - x) ==> (x == 0) ==> (y == 0);\nloop invariant i21: (x == i - y) ==> (x == 0) ==> (y == 0);\nloop invariant i22: (y == j - x) ==> (y == 0) ==> (x == 0);\nloop invariant i23: (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j);\nloop invariant i24: (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j);\nloop invariant i25: (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0);\nloop invariant i26: (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0);\nloop invariant i27: (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1);\nloop invariant i28: (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1);\nloop invariant i29: (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0;\nloop invariant i30: (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0;\nloop invariant i31: (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0);\nloop invariant i32: (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0);\nloop invariant i33: (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0) ==> 0;\nloop invariant i34: (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0) ==> 0;\nloop invariant i35: (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0) ==> 0 ==> 0;\nloop invariant i36: (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0) ==> 0 ==> 0;\nloop invariant i37: x >= (i - j);\nloop invariant i38: y == j - x;\nloop invariant i39: (if x == 0 => y == 0);\nloop invariant i40: (if x == 1 => y == j - 1);\nloop invariant i41: (if x == 2 => y == j - 2);\nloop invariant i42: (if x == 3 => y == j - 3);\nloop invariant i43: (if x == 4 => y == j - 4);\nloop invariant i44: (if x == 5 => y == j - 5);\nloop invariant i45: (if x == 6 => y == j - 6);\nloop invariant i46: (if x == 7 => y == j - 7);\nloop invariant i47: (if x == 8 => y == j - 8);\nloop invariant i48: (if x == 9 => y == j - 9);\nloop invariant i49: (if x == 10 => y == j - 10);\nloop invariant i50: (if x == 11 => y == j - 11);\nloop invariant i51: (if x == 12 => y == j - 12);\nloop invariant i52: (if x == 13 => y == j - 13);\nloop invariant i53: (if x == 14 => y == j - 14);\nloop invariant i54: (if x == 15 => y == j - 15);\nloop invariant i55: (if x == 16 => y == j - 16);\nloop invariant i56: (if x == 17 => y == j - 17);\nloop invariant i57: (if x == 18 => y == j - 18);\nloop invariant i58: (if x == 19 => y == j - 19);\nloop invariant i59: (if x == 20 => y == j - 20);\nloop invariant i60: (if x == 21 => y == j - 21);\nloop invariant i61: (if x == 22 => y == j - 22);\nloop invariant i62: (if x == 23 => y == j - 23);\nloop invariant i63: (if x == 24 => y == j - 24);\nloop invariant i64: (if x == 25 => y == j - 25);\nloop invariant i65: (if x == 26 => y == j - 26);\nloop invariant i66: (if x == 27 => y == j - 27);\nloop invariant i67: (if x == 28 => y == j - 28);\nloop invariant i68: (if x == 29 => y == j - 29);\nloop invariant i69: (if x == 30 => y == j - 30);\nloop invariant i70: (if x == 31 => y == j - 31);\nloop invariant i71: (if x == 32 => y == j - 32);\nloop invariant i72: (if x == 33 => y == j - 33);\nloop invariant i73: (if x == 34 => y == j - 34);\nloop invariant i74: (if x == 35 => y == j - 35);\nloop invariant i75: (if x == 36 => y == j - 36);\nloop invariant i76: (if x == 37 => y == j - 37);\nloop invariant i77: (if x == 38 => y == j - 38);\nloop invariant i78: (if x == 39 => y == j - 39);\nloop invariant i79: (if x == 40 => y == j - 40);\nloop invariant i80: (if x == 41 => y == j - 41);\nloop invariant i81: (if x == 42 => y == j - 42);\nloop invariant i82: (if x == 43 => y == j - 43);\nloop invariant i83: (if x == 44 => y == j - 44);\nloop invariant i84: (if x == 45 => y == j - 45);\nloop invariant i85: (if x == 46 => y == j - 46);\nloop invariant i86: (if x == 47 => y == j - 47);\nloop invariant i87: (if x == 48 => y == j - 48);\nloop invariant i88: (if x == 49 => y == j - 49);\nloop invariant i89: (if x == 50 => y == j - 50);\nloop invariant i90: (if x == 51 => y == j - 51);\nloop invariant i91: (if x == 52 => y == j - 52);\nloop invariant i92: (if x == 53 => y == j - 53);\nloop invariant i93: x == i - 1;\nloop invariant i94: y == j - 1;\nloop invariant i95: x >= i;\nloop invariant i96: x == i - y;\nloop invariant i97: x <= i;\nloop invariant i98: y <= j;\nloop invariant i99: 0 <= i <= 100000;\nloop invariant i100: x >= (1 + (i - 1) * i / 2);\nloop invariant i101: x + y == i - j;\nloop invariant i102: 0 <= y <= 100000;\nloop invariant i103: y >= j;\nloop invariant i104: x + y == i + j;\nloop invariant i105: (x == i) ==> (y == j);\nloop invariant i106: y == j - i + x;\nloop invariant i107: y == j - i + i - x;\nloop invariant i108: 1 <= i <= 100000 && 1 <= j <= 100000;\nloop invariant i109: x >= (i - (j - 1) * j / 2);\nloop invariant i110: y >= (j - (i - 1) * i / 2);\nloop invariant i111: 0 <= i;\nloop invariant i112: 0 <= j;\nloop invariant i113: x == i;\nloop invariant i114: y == j;\nloop invariant i115: x >= (i - y);\nloop invariant i116: x >= (j - y);\nloop invariant i117: x >= (i + j - y);\nloop invariant i118: x >= (i - j + y);\nloop invariant i119: x >= (i + j - y + 1);\nloop invariant i120: x >= (i + j - y + 2);\nloop invariant i121: x >= (i + j - y + 3);\nloop invariant i122: x >= (i + j - y + 4);\nloop invariant i123: x >= (i + j - y + 5);\nloop invariant i124: x >= (i + j - y + 6);\nloop invariant i125: x >= (i + j - y + 7);\nloop invariant i126: x >= (i + j - y + 8);\nloop invariant i127: x >= (i + j - y + 9);\nloop invariant i128: x >= (i + j - y + 10);\nloop invariant i129: x >= (i + j - y + 11);\nloop invariant i130: x >= (i + j - y + 12);\nloop invariant i131: x >= (i + j - y + 13);\nloop invariant i132: x >= (i + j - y + 14);\nloop invariant i133: x >= (i + j - y + 15);\nloop invariant i134: x >= (i + j - y + 16);\nloop invariant i135: x >= (i + j - y + 17);\nloop invariant i136: x >= (i + j - y + 18);\nloop invariant i137: x >= (i + j - y + 19);\nloop invariant i138: x >= (i + j - y + 20);\nloop invariant i139: x >= (i + j - y + 21);\nloop invariant i140: x >= (i + j - y + 22);\nloop invariant i141: x >= (i + j - y + 23);\nloop invariant i142: x >= (i + j - y + 24);\nloop invariant i143: x >= (i + j - y + 25);\nloop invariant i144: x >= (i + j - y + 26);\nloop invariant i145: x >= (i + j - y + 27);\nloop invariant i146: x >= (i + j - y + 28);\nloop invariant i147: x >= (i + j - y + 29);\nloop invariant i148: x >= (i + j - y + 30);\nloop invariant i149: x >= (i + j - y + 31);\nloop invariant i150: x >= (i + j - y + 32);\nloop invariant i151: x >= (i + j - y + 33);\nloop invariant i152: x >= (i + j - y + 34);\nloop invariant i153: x >= (i + j - y + 35);\nloop invariant i154: x >= (i + j - y + 36);\nloop invariant i155: x >= (i + j - y + 37);\nloop invariant i156: x >= (i + j - y + 38);\nloop invariant i157: x >= (i + j - y + 39);\nloop invariant i158: x >= (i + j - y + 40);\nloop invariant i159: x >= (i + j - y + 41);\nloop invariant i160: x >= (i + j - y + 42);\nloop invariant i161: x >= (i + j - y + 43);\nloop invariant i162: x >= (i + j - y + 44);\nloop invariant i163: x >= (i + j - y + 45);\nloop invariant i164: x >= (i + j - y + 46);\nloop invariant i165: x >= (i + j - y + 47);\nloop invariant i166: x >= (i + j - y + 48);\nloop invariant i167: x >= (i + j - y + 49);\nloop invariant i168: x >= (i + j - y + 50);\nloop invariant i169: x >= (i + j - y + 51);\nloop invariant i170: x >= (i + j - y + 52);\nloop invariant i171: x >= (i + j - y + 53);\nloop invariant i172: x >= (i + j - y + 54);\nloop invariant i173: x >= (i + j - y + 55);\nloop invariant i174: x >= (i + j - y + 56);\nloop invariant i175: x >= (i + j - y + 57);\nloop invariant i176: x >= (i + j - y + 58);\nloop invariant i177: x >= (i + j - y + 59);\nloop invariant i178: x >= (i + j - y + 60);\nloop invariant i179: y <= x;\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\tif(y != 0) {;\n//@ assert(0);\n}\n\n}",
        "combined_annotation_num_solver_calls": 129,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n  int i;\n  int j;\n  int x = i;\n  int y = j;\n  /*@\n\n\nloop invariant i3: i - x <= j - y;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i23: (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j);\nloop invariant i24: (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j);\n\n\nloop invariant i27: (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1);\nloop invariant i28: (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1);\nloop invariant i29: (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0;\nloop invariant i30: (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0;\nloop invariant i31: (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0);\nloop invariant i32: (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0);\nloop invariant i33: (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0) ==> 0;\nloop invariant i34: (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0) ==> 0;\nloop invariant i35: (x == i - y) ==> (x == 0) ==> (y == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0) ==> 0 ==> 0;\nloop invariant i36: (y == j - x) ==> (y == 0) ==> (x == 0) ==> (i == j) ==> (y != 0) ==> (0 == 1) ==> 0 ==> (1 == 0) ==> 0 ==> 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i97: x <= i;\nloop invariant i98: y <= j;\n\n\n\n\n\n\nloop invariant i105: (x == i) ==> (y == j);\nloop invariant i106: y == j - i + x;\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i118: x >= (i - j + y);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\tif(y != 0) {;\n//@ assert(0);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/popl.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/07.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/39.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv_simp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/xy10.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/const_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe3.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe4.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_unsafe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbr.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbrprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bk-nat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bkley.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/efm.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/ex1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnatprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifo.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/seesaw.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/ken-imp.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/05.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/37.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/pldi082_unbounded.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar2.c"
        ],
        "skipped": [],
        "total": 165,
        "success_count": 136,
        "failure_count": 29,
        "success_rate": 0.8242424242424242
    }
}