{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() { \n  int i, n=unknown_int(), sn=0;\n  for(i=1; i<=n; i++) {\n    sn = sn + 1;\n  }\n  {;\n//@ assert(sn==n || sn == 0);\n}\n\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant sn = i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant sn == i;\nloop invariant (n == 0) ==> (sn == 0);\nloop invariant (n > 0) ==> (sn == i);\nloop invariant (n >= 0) ==> (sn >= 0);\nloop invariant (n <= n) ==> (sn <= n);\nloop invariant (n >= 0) ==> (i >= 0);\nloop invariant (n <= n) ==> (i <= n);\nloop invariant (n >= 0) ==> (sn >= i);\nloop invariant (n <= n) ==> (sn <= i);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= sn <= n;\nloop invariant i == n - sn + 1;\nloop invariant i >= 1;\nloop invariant i <= n + 1;\nloop invariant sn >= 0;\nloop invariant sn <= n;\nloop invariant n >= 0;\nloop invariant n <= INT_MAX;\nloop invariant i >= 0;\nloop invariant i <= INT_MAX;\nloop invariant sn >= 0;\nloop invariant sn <= INT_MAX;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant 0 <= sn <= i;\nloop invariant (sn == i) ==> (i == n);\nloop invariant (sn == 0) ==> (i == 0);\nloop invariant (i == 0) ==> (sn == 0);\nloop invariant (i == n) ==> (sn == n);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n + 1;\nloop invariant sn == (i - 1);\nloop invariant (i == n + 1) ==> (sn == n);\nloop invariant (i == 1) ==> (sn == 0);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant 0 <= sn <= n;\nloop invariant sn == i - 1;\nloop invariant sn == n - i + 1;\nloop invariant sn == 0 || sn == n;\nloop invariant sn >= 0 && sn <= n;\nloop invariant sn <= n;\nloop invariant sn >= 0;\nloop invariant i >= 1 && i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant sn >= 0;\nloop invariant sn <= n;\nloop invariant sn == i - 1 ==> sn == n - i + 1;\nloop invariant sn == n - i + 1 ==> sn == i - 1;\nloop invariant sn == i - 1 ==> sn <= n;\nloop invariant sn == n - i + 1 ==> sn >= 0;\nloop invariant sn <= n ==> sn >= 0;\nloop invariant sn >= 0 ==> sn <= n;\nloop invariant sn == i - 1 ==> sn >= 0;\nloop invariant sn == n - i + 1 ==> sn <= n;\nloop invariant sn <= n ==> sn >= 0;\nloop invariant sn >= 0 ==> sn <= n;\nloop invariant sn == i - 1 ==> sn <= n && sn >= 0;\nloop invariant sn == n - i + 1 ==> sn <= n && sn >= 0;\nloop invariant sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant sn == i - 1 ==> sn >= 0 && sn <= n;\nloop invariant sn == n - i + 1 ==> sn >= 0 && sn <= n;\nloop invariant sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant sn == i - 1 ==> sn == n - i + 1 ==> sn >= 0 && sn <= n;\nloop invariant sn == n - i + 1 ==> sn == i - 1 ==> sn >= 0 && sn <= n;\nloop invariant sn >= 0 ==> sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn <= n ==> sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant sn == i - 1 ==> sn <= n && sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant sn == n - i + 1 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn <= n ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn >= 0 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn == i - 1 ==> sn <= n && sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant sn == n - i + 1 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn <= n ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn >= 0 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn == i - 1 ==> sn <= n && sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant sn == n - i + 1 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn <= n ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn >= 0 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn == i - 1 ==> sn <= n && sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant sn == n - i + 1 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn <= n ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn >= 0 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn == i - 1 ==> sn <= n && sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant sn == n - i + 1 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn <= n ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant sn = i - 1;\nloop invariant sn >= 0;\nloop invariant sn <= n;\nloop invariant sn = n - (n - i) + (n - i - 1);\nloop invariant sn = n - (n - i);\nloop invariant sn = n - (i - 1);\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - (i - 1);\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= sn <= n * (n + 1) / 2;\nloop invariant sn >= (n - i + 1) * i / 2;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant 0 <= sn <= n;\nloop invariant i - 1 <= sn <= i;\nloop invariant i - 1 <= sn <= n;\nloop invariant i - 1 <= sn <= i + 1;\nloop invariant i - 1 <= sn <= n + 1;\nloop invariant i - 1 <= sn <= i + 2;\nloop invariant i - 1 <= sn <= n + 2;\nloop invariant i - 1 <= sn <= i + 3;\nloop invariant i - 1 <= sn <= n + 3;\nloop invariant i - 1 <= sn <= i + 4;\nloop invariant i - 1 <= sn <= n + 4;\nloop invariant i - 1 <= sn <= i + 5;\nloop invariant i - 1 <= sn <= n + 5;\nloop invariant i - 1 <= sn <= i + 6;\nloop invariant i - 1 <= sn <= n + 6;\nloop invariant i - 1 <= sn <= i + 7;\nloop invariant i - 1 <= sn <= n + 7;\nloop invariant i - 1 <= sn <= i + 8;\nloop invariant i - 1 <= sn <= n + 8;\nloop invariant i - 1 <= sn <= i + 9;\nloop invariant i - 1 <= sn <= n + 9;\nloop invariant i - 1 <= sn <= i + 10;\nloop invariant i - 1 <= sn <= n + 10;\nloop invariant i - 1 <= sn <= i + 11;\nloop invariant i - 1 <= sn <= n + 11;\nloop invariant i - 1 <= sn <= i + 12;\nloop invariant i - 1 <= sn <= n + 12;\nloop invariant i - 1 <= sn <= i + 13;\nloop invariant i - 1 <= sn <= n + 13;\nloop invariant i - 1 <= sn <= i + 14;\nloop invariant i - 1 <= sn <= n + 14;\nloop invariant i - 1 <= sn <= i + 15;\nloop invariant i - 1 <= sn <= n + 15;\nloop invariant i - 1 <= sn <= i + 16;\nloop invariant i - 1 <= sn <= n + 16;\nloop invariant i - 1 <= sn <= i + 17;\nloop invariant i - 1 <= sn <= n + 17;\nloop invariant i - 1 <= sn <= i + 18;\nloop invariant i - 1 <= sn <= n + 18;\nloop invariant i - 1 <= sn <= i + 19;\nloop invariant i - 1 <= sn <= n + 19;\nloop invariant i - 1 <= sn <= i + 20;\nloop invariant i - 1 <= sn <= n + 20;\nloop invariant i - 1 <= sn <= i + 21;\nloop invariant i - 1 <= sn <= n + 21;\nloop invariant i - 1 <= sn <= i + 22;\nloop invariant i - 1 <= sn <= n + 22;\nloop invariant i - 1 <= sn <= i + 23;\nloop invariant i - 1 <= sn <= n + 23;\nloop invariant i - 1 <= sn <= i + 24;\nloop invariant i - 1 <= sn <= n + 24;\nloop invariant i - 1 <= sn <= i + 25;\nloop invariant i - 1 <= sn <= n + 25;\nloop invariant i - 1 <= sn <= i + 26;\nloop invariant i - 1 <= sn <= n + 26;\nloop invariant i - 1 <= sn <= i + 27;\nloop invariant i - 1 <= sn <= n + 27;\nloop invariant i - 1 <= sn <= i + 28;\nloop invariant i - 1 <= sn <= n + 28;\nloop invariant i - 1 <= sn <= i + 29;\nloop invariant i - 1 <= sn <= n + 29;\nloop invariant i - 1 <= sn <= i + 30;\nloop invariant i - 1 <= sn <= n + 30;\nloop invariant i - 1 <= sn <= i + 31;\nloop invariant i - 1 <= sn <= n + 31;\nloop invariant i - 1 <= sn <= i + 32;\nloop invariant i - 1 <= sn <= n + 32;\nloop invariant i - 1 <= sn <= i + 33;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant 0 <= sn <= n;\nloop invariant sn == (i - 1);\nloop invariant sn <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant i <= n;\nloop invariant sn == i;\nloop invariant sn == i * (i + 1) / 2;\nloop invariant sn == (i * (i + 1)) / 2;\nloop invariant sn == (i * (i + 1)) / 2 || sn == 0;\nloop invariant sn == (i * (i + 1)) / 2 || sn == 0;\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant sn == i;\nloop invariant sn >= 0;\nloop invariant sn <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant sn == i ==> sn == n;\nloop invariant sn == i ==> sn == 0;\n*/\n```",
            "```\n/*@\nloop invariant i > 0;\nloop invariant n > 0;\nloop invariant s == (i - 1);\nloop invariant 0 <= i <= n + 1;\nloop invariant 0 <= s <= n;\nloop invariant 0 <= sn <= n;\nloop invariant sn == (i - 1);\nloop invariant s <= sn;\nloop invariant s + sn == (i - 1);\nloop invariant s + sn == (n - i + 1);\nloop invariant sn == (n - i + 1);\nloop invariant s + sn == n;\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x <= (y * y + y) / 2;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 158,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() { \n  int i, n=unknown_int(), sn=0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nfor(i=1; i<=n; i++) {\n    sn = sn + 1;\n  }\n  {;\n//@ assert(sn==n || sn == 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant sn = i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() { \n  int i, n=unknown_int(), sn=0;\n  /*@\n\n\n*/\nfor(i=1; i<=n; i++) {\n    sn = sn + 1;\n  }\n  {;\n//@ assert(sn==n || sn == 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant sn == i;\nloop invariant (n == 0) ==> (sn == 0);\nloop invariant (n > 0) ==> (sn == i);\nloop invariant (n >= 0) ==> (sn >= 0);\nloop invariant (n <= n) ==> (sn <= n);\nloop invariant (n >= 0) ==> (i >= 0);\nloop invariant (n <= n) ==> (i <= n);\nloop invariant (n >= 0) ==> (sn >= i);\nloop invariant (n <= n) ==> (sn <= i);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() { \n  int i, n=unknown_int(), sn=0;\n  /*@\n\n\n\n\nloop invariant i5: (n >= 0) ==> (sn >= 0);\n\nloop invariant i7: (n >= 0) ==> (i >= 0);\n\n\nloop invariant i10: (n <= n) ==> (sn <= i);\n*/\nfor(i=1; i<=n; i++) {\n    sn = sn + 1;\n  }\n  {;\n//@ assert(sn==n || sn == 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 1 <= sn <= n;\nloop invariant i == n - sn + 1;\nloop invariant i >= 1;\nloop invariant i <= n + 1;\nloop invariant sn >= 0;\nloop invariant sn <= n;\nloop invariant n >= 0;\nloop invariant n <= INT_MAX;\nloop invariant i >= 0;\nloop invariant i <= INT_MAX;\nloop invariant sn >= 0;\nloop invariant sn <= INT_MAX;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() { \n  int i, n=unknown_int(), sn=0;\n  /*@\n\n\nloop invariant i3: i >= 1;\n\nloop invariant i5: sn >= 0;\n\n\nloop invariant i8: n <= INT_MAX;\nloop invariant i9: i >= 0;\nloop invariant i10: i <= INT_MAX;\nloop invariant i11: sn <= INT_MAX;\n*/\nfor(i=1; i<=n; i++) {\n    sn = sn + 1;\n  }\n  {;\n//@ assert(sn==n || sn == 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant 0 <= sn <= i;\nloop invariant (sn == i) ==> (i == n);\nloop invariant (sn == 0) ==> (i == 0);\nloop invariant (i == 0) ==> (sn == 0);\nloop invariant (i == n) ==> (sn == n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() { \n  int i, n=unknown_int(), sn=0;\n  /*@\n\nloop invariant i2: 0 <= sn <= i;\n\n\nloop invariant i5: (i == 0) ==> (sn == 0);\n\n*/\nfor(i=1; i<=n; i++) {\n    sn = sn + 1;\n  }\n  {;\n//@ assert(sn==n || sn == 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n + 1;\nloop invariant sn == (i - 1);\nloop invariant (i == n + 1) ==> (sn == n);\nloop invariant (i == 1) ==> (sn == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() { \n  int i, n=unknown_int(), sn=0;\n  /*@\n\nloop invariant i2: sn == (i - 1);\nloop invariant i3: (i == n + 1) ==> (sn == n);\nloop invariant i4: (i == 1) ==> (sn == 0);\n*/\nfor(i=1; i<=n; i++) {\n    sn = sn + 1;\n  }\n  {;\n//@ assert(sn==n || sn == 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 10,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant 0 <= sn <= n;\nloop invariant sn == i - 1;\nloop invariant sn == n - i + 1;\nloop invariant sn == 0 || sn == n;\nloop invariant sn >= 0 && sn <= n;\nloop invariant sn <= n;\nloop invariant sn >= 0;\nloop invariant i >= 1 && i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant sn >= 0;\nloop invariant sn <= n;\nloop invariant sn == i - 1 ==> sn == n - i + 1;\nloop invariant sn == n - i + 1 ==> sn == i - 1;\nloop invariant sn == i - 1 ==> sn <= n;\nloop invariant sn == n - i + 1 ==> sn >= 0;\nloop invariant sn <= n ==> sn >= 0;\nloop invariant sn >= 0 ==> sn <= n;\nloop invariant sn == i - 1 ==> sn >= 0;\nloop invariant sn == n - i + 1 ==> sn <= n;\nloop invariant sn <= n ==> sn >= 0;\nloop invariant sn >= 0 ==> sn <= n;\nloop invariant sn == i - 1 ==> sn <= n && sn >= 0;\nloop invariant sn == n - i + 1 ==> sn <= n && sn >= 0;\nloop invariant sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant sn == i - 1 ==> sn >= 0 && sn <= n;\nloop invariant sn == n - i + 1 ==> sn >= 0 && sn <= n;\nloop invariant sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant sn == i - 1 ==> sn == n - i + 1 ==> sn >= 0 && sn <= n;\nloop invariant sn == n - i + 1 ==> sn == i - 1 ==> sn >= 0 && sn <= n;\nloop invariant sn >= 0 ==> sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn <= n ==> sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant sn == i - 1 ==> sn <= n && sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant sn == n - i + 1 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn <= n ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn >= 0 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn == i - 1 ==> sn <= n && sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant sn == n - i + 1 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn <= n ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn >= 0 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn == i - 1 ==> sn <= n && sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant sn == n - i + 1 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn <= n ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn >= 0 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn == i - 1 ==> sn <= n && sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant sn == n - i + 1 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn <= n ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn >= 0 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn == i - 1 ==> sn <= n && sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant sn == n - i + 1 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant sn <= n ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() { \n  int i, n=unknown_int(), sn=0;\n  /*@\n\n\nloop invariant i3: sn == i - 1;\n\n\n\n\nloop invariant i8: sn >= 0;\n\nloop invariant i10: i >= 1;\n\n\nloop invariant i13: sn == n - i + 1 ==> sn == i - 1;\n\nloop invariant i15: sn == n - i + 1 ==> sn >= 0;\nloop invariant i16: sn <= n ==> sn >= 0;\n\nloop invariant i18: sn == i - 1 ==> sn >= 0;\nloop invariant i19: sn == n - i + 1 ==> sn <= n;\n\nloop invariant i21: sn == n - i + 1 ==> sn <= n && sn >= 0;\nloop invariant i22: sn <= n ==> sn >= 0 && sn <= n;\n\n\nloop invariant i25: sn == n - i + 1 ==> sn >= 0 && sn <= n;\nloop invariant i26: sn == i - 1 ==> sn == n - i + 1 ==> sn >= 0 && sn <= n;\nloop invariant i27: sn == n - i + 1 ==> sn == i - 1 ==> sn >= 0 && sn <= n;\nloop invariant i28: sn >= 0 ==> sn <= n ==> sn >= 0 && sn <= n;\nloop invariant i29: sn <= n ==> sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant i30: sn == i - 1 ==> sn <= n && sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant i31: sn == n - i + 1 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant i32: sn <= n ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant i33: sn >= 0 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\n*/\nfor(i=1; i<=n; i++) {\n    sn = sn + 1;\n  }\n  {;\n//@ assert(sn==n || sn == 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant sn = i - 1;\nloop invariant sn >= 0;\nloop invariant sn <= n;\nloop invariant sn = n - (n - i) + (n - i - 1);\nloop invariant sn = n - (n - i);\nloop invariant sn = n - (i - 1);\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - (i - 1);\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\nloop invariant sn = n - i + 1;\nloop invariant sn = n - i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() { \n  int i, n=unknown_int(), sn=0;\n  /*@\n\n\nloop invariant i3: sn >= 0;\n\n\n\n\n\n\n*/\nfor(i=1; i<=n; i++) {\n    sn = sn + 1;\n  }\n  {;\n//@ assert(sn==n || sn == 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= sn <= n * (n + 1) / 2;\nloop invariant sn >= (n - i + 1) * i / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() { \n  int i, n=unknown_int(), sn=0;\n  /*@\n\n\n*/\nfor(i=1; i<=n; i++) {\n    sn = sn + 1;\n  }\n  {;\n//@ assert(sn==n || sn == 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 36,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant 0 <= sn <= n;\nloop invariant i - 1 <= sn <= i;\nloop invariant i - 1 <= sn <= n;\nloop invariant i - 1 <= sn <= i + 1;\nloop invariant i - 1 <= sn <= n + 1;\nloop invariant i - 1 <= sn <= i + 2;\nloop invariant i - 1 <= sn <= n + 2;\nloop invariant i - 1 <= sn <= i + 3;\nloop invariant i - 1 <= sn <= n + 3;\nloop invariant i - 1 <= sn <= i + 4;\nloop invariant i - 1 <= sn <= n + 4;\nloop invariant i - 1 <= sn <= i + 5;\nloop invariant i - 1 <= sn <= n + 5;\nloop invariant i - 1 <= sn <= i + 6;\nloop invariant i - 1 <= sn <= n + 6;\nloop invariant i - 1 <= sn <= i + 7;\nloop invariant i - 1 <= sn <= n + 7;\nloop invariant i - 1 <= sn <= i + 8;\nloop invariant i - 1 <= sn <= n + 8;\nloop invariant i - 1 <= sn <= i + 9;\nloop invariant i - 1 <= sn <= n + 9;\nloop invariant i - 1 <= sn <= i + 10;\nloop invariant i - 1 <= sn <= n + 10;\nloop invariant i - 1 <= sn <= i + 11;\nloop invariant i - 1 <= sn <= n + 11;\nloop invariant i - 1 <= sn <= i + 12;\nloop invariant i - 1 <= sn <= n + 12;\nloop invariant i - 1 <= sn <= i + 13;\nloop invariant i - 1 <= sn <= n + 13;\nloop invariant i - 1 <= sn <= i + 14;\nloop invariant i - 1 <= sn <= n + 14;\nloop invariant i - 1 <= sn <= i + 15;\nloop invariant i - 1 <= sn <= n + 15;\nloop invariant i - 1 <= sn <= i + 16;\nloop invariant i - 1 <= sn <= n + 16;\nloop invariant i - 1 <= sn <= i + 17;\nloop invariant i - 1 <= sn <= n + 17;\nloop invariant i - 1 <= sn <= i + 18;\nloop invariant i - 1 <= sn <= n + 18;\nloop invariant i - 1 <= sn <= i + 19;\nloop invariant i - 1 <= sn <= n + 19;\nloop invariant i - 1 <= sn <= i + 20;\nloop invariant i - 1 <= sn <= n + 20;\nloop invariant i - 1 <= sn <= i + 21;\nloop invariant i - 1 <= sn <= n + 21;\nloop invariant i - 1 <= sn <= i + 22;\nloop invariant i - 1 <= sn <= n + 22;\nloop invariant i - 1 <= sn <= i + 23;\nloop invariant i - 1 <= sn <= n + 23;\nloop invariant i - 1 <= sn <= i + 24;\nloop invariant i - 1 <= sn <= n + 24;\nloop invariant i - 1 <= sn <= i + 25;\nloop invariant i - 1 <= sn <= n + 25;\nloop invariant i - 1 <= sn <= i + 26;\nloop invariant i - 1 <= sn <= n + 26;\nloop invariant i - 1 <= sn <= i + 27;\nloop invariant i - 1 <= sn <= n + 27;\nloop invariant i - 1 <= sn <= i + 28;\nloop invariant i - 1 <= sn <= n + 28;\nloop invariant i - 1 <= sn <= i + 29;\nloop invariant i - 1 <= sn <= n + 29;\nloop invariant i - 1 <= sn <= i + 30;\nloop invariant i - 1 <= sn <= n + 30;\nloop invariant i - 1 <= sn <= i + 31;\nloop invariant i - 1 <= sn <= n + 31;\nloop invariant i - 1 <= sn <= i + 32;\nloop invariant i - 1 <= sn <= n + 32;\nloop invariant i - 1 <= sn <= i + 33;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() { \n  int i, n=unknown_int(), sn=0;\n  /*@\n\n\nloop invariant i3: i - 1 <= sn <= i;\n\nloop invariant i5: i - 1 <= sn <= i + 1;\n\nloop invariant i7: i - 1 <= sn <= i + 2;\n\nloop invariant i9: i - 1 <= sn <= i + 3;\n\nloop invariant i11: i - 1 <= sn <= i + 4;\n\nloop invariant i13: i - 1 <= sn <= i + 5;\n\nloop invariant i15: i - 1 <= sn <= i + 6;\n\nloop invariant i17: i - 1 <= sn <= i + 7;\n\nloop invariant i19: i - 1 <= sn <= i + 8;\n\nloop invariant i21: i - 1 <= sn <= i + 9;\n\nloop invariant i23: i - 1 <= sn <= i + 10;\n\nloop invariant i25: i - 1 <= sn <= i + 11;\n\nloop invariant i27: i - 1 <= sn <= i + 12;\n\nloop invariant i29: i - 1 <= sn <= i + 13;\n\nloop invariant i31: i - 1 <= sn <= i + 14;\n\nloop invariant i33: i - 1 <= sn <= i + 15;\n\nloop invariant i35: i - 1 <= sn <= i + 16;\n\nloop invariant i37: i - 1 <= sn <= i + 17;\n\nloop invariant i39: i - 1 <= sn <= i + 18;\n\nloop invariant i41: i - 1 <= sn <= i + 19;\n\nloop invariant i43: i - 1 <= sn <= i + 20;\n\nloop invariant i45: i - 1 <= sn <= i + 21;\n\nloop invariant i47: i - 1 <= sn <= i + 22;\n\nloop invariant i49: i - 1 <= sn <= i + 23;\n\nloop invariant i51: i - 1 <= sn <= i + 24;\n\nloop invariant i53: i - 1 <= sn <= i + 25;\n\nloop invariant i55: i - 1 <= sn <= i + 26;\n\nloop invariant i57: i - 1 <= sn <= i + 27;\n\nloop invariant i59: i - 1 <= sn <= i + 28;\n\nloop invariant i61: i - 1 <= sn <= i + 29;\n\nloop invariant i63: i - 1 <= sn <= i + 30;\n\nloop invariant i65: i - 1 <= sn <= i + 31;\n\nloop invariant i67: i - 1 <= sn <= i + 32;\n\nloop invariant i69: i - 1 <= sn <= i + 33;\n*/\nfor(i=1; i<=n; i++) {\n    sn = sn + 1;\n  }\n  {;\n//@ assert(sn==n || sn == 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant 0 <= sn <= n;\nloop invariant sn == (i - 1);\nloop invariant sn <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() { \n  int i, n=unknown_int(), sn=0;\n  /*@\n\n\nloop invariant i3: sn == (i - 1);\n\n*/\nfor(i=1; i<=n; i++) {\n    sn = sn + 1;\n  }\n  {;\n//@ assert(sn==n || sn == 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant i <= n;\nloop invariant sn == i;\nloop invariant sn == i * (i + 1) / 2;\nloop invariant sn == (i * (i + 1)) / 2;\nloop invariant sn == (i * (i + 1)) / 2 || sn == 0;\nloop invariant sn == (i * (i + 1)) / 2 || sn == 0;\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() { \n  int i, n=unknown_int(), sn=0;\n  /*@\n\n\n\n\n\n\n\n*/\nfor(i=1; i<=n; i++) {\n    sn = sn + 1;\n  }\n  {;\n//@ assert(sn==n || sn == 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant sn == i;\nloop invariant sn >= 0;\nloop invariant sn <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant sn == i ==> sn == n;\nloop invariant sn == i ==> sn == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() { \n  int i, n=unknown_int(), sn=0;\n  /*@\n\n\nloop invariant i3: sn >= 0;\n\nloop invariant i5: i >= 1;\n\nloop invariant i7: sn == i ==> sn == n;\nloop invariant i8: sn == i ==> sn == 0;\n*/\nfor(i=1; i<=n; i++) {\n    sn = sn + 1;\n  }\n  {;\n//@ assert(sn==n || sn == 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 11,
                "annotations": "```\n/*@\nloop invariant i > 0;\nloop invariant n > 0;\nloop invariant s == (i - 1);\nloop invariant 0 <= i <= n + 1;\nloop invariant 0 <= s <= n;\nloop invariant 0 <= sn <= n;\nloop invariant sn == (i - 1);\nloop invariant s <= sn;\nloop invariant s + sn == (i - 1);\nloop invariant s + sn == (n - i + 1);\nloop invariant sn == (n - i + 1);\nloop invariant s + sn == n;\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\nloop invariant s + sn == (n - 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() { \n  int i, n=unknown_int(), sn=0;\n  /*@\nloop invariant i1: i > 0;\n\n\n\n\n\nloop invariant i7: sn == (i - 1);\n\n\n\n\n\n\n*/\nfor(i=1; i<=n; i++) {\n    sn = sn + 1;\n  }\n  {;\n//@ assert(sn==n || sn == 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= n <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x <= (y * y + y) / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() { \n  int i, n=unknown_int(), sn=0;\n  /*@\n\n\n\n*/\nfor(i=1; i<=n; i++) {\n    sn = sn + 1;\n  }\n  {;\n//@ assert(sn==n || sn == 0);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 171: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() { \n  int i, n=unknown_int(), sn=0;\n  /*@\nloop invariant i1: i1;\nloop invariant i2: i2;\nloop invariant i3: i3;\nloop invariant i4: i4;\nloop invariant i5: i5;\nloop invariant i6: i6;\nloop invariant i7: i7;\nloop invariant i8: i8;\nloop invariant i9: i9;\nloop invariant i10: i10;\nloop invariant i11: i11;\nloop invariant i12: i12;\nloop invariant i13: i13;\nloop invariant i14: i14;\nloop invariant i15: i15;\nloop invariant i16: i16;\nloop invariant i17: i17;\nloop invariant i18: i18;\nloop invariant i19: i19;\nloop invariant i20: i20;\nloop invariant i21: i21;\nloop invariant i22: i22;\nloop invariant i23: i23;\nloop invariant i24: i24;\nloop invariant i25: i25;\nloop invariant i26: i26;\nloop invariant i27: i27;\nloop invariant i28: i28;\nloop invariant i29: i29;\nloop invariant i30: i30;\nloop invariant i31: i31;\nloop invariant i32: i32;\nloop invariant i33: i33;\nloop invariant i34: i34;\nloop invariant i35: i35;\nloop invariant i36: i36;\nloop invariant i37: i37;\nloop invariant i38: i38;\nloop invariant i39: i39;\nloop invariant i40: i40;\nloop invariant i41: i41;\nloop invariant i42: i42;\nloop invariant i43: i43;\nloop invariant i44: i44;\nloop invariant i45: i45;\nloop invariant i46: i46;\nloop invariant i47: i47;\nloop invariant i48: i48;\nloop invariant i49: i49;\nloop invariant i50: i50;\nloop invariant i51: i51;\nloop invariant i52: i52;\nloop invariant i53: i53;\nloop invariant i54: i54;\nloop invariant i55: i55;\nloop invariant i56: i56;\nloop invariant i57: i57;\nloop invariant i58: i58;\nloop invariant i59: i59;\nloop invariant i60: i60;\nloop invariant i61: i61;\nloop invariant i62: i62;\nloop invariant i63: i63;\nloop invariant i64: i64;\nloop invariant i65: i65;\nloop invariant i66: i66;\nloop invariant i67: i67;\nloop invariant i68: i68;\nloop invariant i69: i69;\nloop invariant i70: i70;\nloop invariant i71: i71;\nloop invariant i72: i72;\nloop invariant i73: i73;\nloop invariant i74: i74;\nloop invariant i75: i75;\nloop invariant i76: i76;\nloop invariant i77: i77;\nloop invariant i78: i78;\nloop invariant i79: i79;\nloop invariant i80: i80;\nloop invariant i81: i81;\nloop invariant i82: i82;\nloop invariant i83: i83;\nloop invariant i84: i84;\nloop invariant i85: i85;\nloop invariant i86: i86;\nloop invariant i87: i87;\nloop invariant i88: i88;\nloop invariant i89: i89;\nloop invariant i90: i90;\nloop invariant i91: i91;\nloop invariant i92: i92;\nloop invariant i93: i93;\nloop invariant i94: i94;\nloop invariant i95: i95;\nloop invariant i96: i96;\nloop invariant i97: i97;\nloop invariant i98: i98;\nloop invariant i99: i99;\nloop invariant i100: i100;\nloop invariant i101: i101;\nloop invariant i102: i102;\nloop invariant i103: i103;\nloop invariant i104: i104;\nloop invariant i105: i105;\nloop invariant i106: i106;\nloop invariant i107: i107;\nloop invariant i108: i108;\nloop invariant i109: i109;\nloop invariant i110: i110;\nloop invariant i111: i111;\nloop invariant i112: i112;\nloop invariant i113: i113;\nloop invariant i114: i114;\nloop invariant i115: i115;\nloop invariant i116: i116;\nloop invariant i117: i117;\nloop invariant i118: i118;\nloop invariant i119: i119;\nloop invariant i120: i120;\nloop invariant i121: i121;\nloop invariant i122: i122;\nloop invariant i123: i123;\nloop invariant i124: i124;\nloop invariant i125: i125;\nloop invariant i126: i126;\nloop invariant i127: i127;\nloop invariant i128: i128;\nloop invariant i129: i129;\nloop invariant i130: i130;\nloop invariant i131: i131;\nloop invariant i132: i132;\nloop invariant i133: i133;\nloop invariant i134: i134;\nloop invariant i135: i135;\nloop invariant i136: i136;\nloop invariant i137: i137;\nloop invariant i138: i138;\nloop invariant i139: i139;\nloop invariant i140: i140;\nloop invariant i141: i141;\nloop invariant i142: i142;\nloop invariant i143: i143;\nloop invariant i144: i144;\nloop invariant i145: i145;\nloop invariant i146: i146;\nloop invariant i147: i147;\nloop invariant i148: i148;\nloop invariant i149: i149;\nloop invariant i150: i150;\nloop invariant i151: i151;\nloop invariant i152: i152;\nloop invariant i153: i153;\nloop invariant i154: i154;\nloop invariant i155: i155;\nloop invariant i156: i156;\nloop invariant i157: i157;\nloop invariant i158: i158;\nloop invariant i159: 0 <= i <= n;\nloop invariant i160: sn = i;\nloop invariant i161: sn == i;\nloop invariant i162: (n == 0) ==> (sn == 0);\nloop invariant i163: (n > 0) ==> (sn == i);\nloop invariant i164: (n >= 0) ==> (sn >= 0);\nloop invariant i165: (n <= n) ==> (sn <= n);\nloop invariant i166: (n >= 0) ==> (i >= 0);\nloop invariant i167: (n <= n) ==> (i <= n);\nloop invariant i168: (n >= 0) ==> (sn >= i);\nloop invariant i169: (n <= n) ==> (sn <= i);\nloop invariant i170: 1 <= sn <= n;\nloop invariant i171: i == n - sn + 1;\nloop invariant i172: i >= 1;\nloop invariant i173: i <= n + 1;\nloop invariant i174: sn >= 0;\nloop invariant i175: sn <= n;\nloop invariant i176: n >= 0;\nloop invariant i177: n <= INT_MAX;\nloop invariant i178: i >= 0;\nloop invariant i179: i <= INT_MAX;\nloop invariant i180: sn <= INT_MAX;\nloop invariant i181: 1 <= i <= n;\nloop invariant i182: 0 <= sn <= i;\nloop invariant i183: (sn == i) ==> (i == n);\nloop invariant i184: (sn == 0) ==> (i == 0);\nloop invariant i185: (i == 0) ==> (sn == 0);\nloop invariant i186: (i == n) ==> (sn == n);\nloop invariant i187: 0 <= i <= n + 1;\nloop invariant i188: sn == (i - 1);\nloop invariant i189: (i == n + 1) ==> (sn == n);\nloop invariant i190: (i == 1) ==> (sn == 0);\nloop invariant i191: 0 <= sn <= n;\nloop invariant i192: sn == i - 1;\nloop invariant i193: sn == n - i + 1;\nloop invariant i194: sn == 0 || sn == n;\nloop invariant i195: sn >= 0 && sn <= n;\nloop invariant i196: i >= 1 && i <= n;\nloop invariant i197: i <= n;\nloop invariant i198: sn == i - 1 ==> sn == n - i + 1;\nloop invariant i199: sn == n - i + 1 ==> sn == i - 1;\nloop invariant i200: sn == i - 1 ==> sn <= n;\nloop invariant i201: sn == n - i + 1 ==> sn >= 0;\nloop invariant i202: sn <= n ==> sn >= 0;\nloop invariant i203: sn >= 0 ==> sn <= n;\nloop invariant i204: sn == i - 1 ==> sn >= 0;\nloop invariant i205: sn == n - i + 1 ==> sn <= n;\nloop invariant i206: sn == i - 1 ==> sn <= n && sn >= 0;\nloop invariant i207: sn == n - i + 1 ==> sn <= n && sn >= 0;\nloop invariant i208: sn <= n ==> sn >= 0 && sn <= n;\nloop invariant i209: sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant i210: sn == i - 1 ==> sn >= 0 && sn <= n;\nloop invariant i211: sn == n - i + 1 ==> sn >= 0 && sn <= n;\nloop invariant i212: sn == i - 1 ==> sn == n - i + 1 ==> sn >= 0 && sn <= n;\nloop invariant i213: sn == n - i + 1 ==> sn == i - 1 ==> sn >= 0 && sn <= n;\nloop invariant i214: sn >= 0 ==> sn <= n ==> sn >= 0 && sn <= n;\nloop invariant i215: sn <= n ==> sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant i216: sn == i - 1 ==> sn <= n && sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant i217: sn == n - i + 1 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant i218: sn <= n ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant i219: sn >= 0 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant i220: sn = i - 1;\nloop invariant i221: sn = n - (n - i) + (n - i - 1);\nloop invariant i222: sn = n - (n - i);\nloop invariant i223: sn = n - (i - 1);\nloop invariant i224: sn = n - i + 1;\nloop invariant i225: sn = n - i;\nloop invariant i226: 0 <= sn <= n * (n + 1) / 2;\nloop invariant i227: sn >= (n - i + 1) * i / 2;\nloop invariant i228: i - 1 <= sn <= i;\nloop invariant i229: i - 1 <= sn <= n;\nloop invariant i230: i - 1 <= sn <= i + 1;\nloop invariant i231: i - 1 <= sn <= n + 1;\nloop invariant i232: i - 1 <= sn <= i + 2;\nloop invariant i233: i - 1 <= sn <= n + 2;\nloop invariant i234: i - 1 <= sn <= i + 3;\nloop invariant i235: i - 1 <= sn <= n + 3;\nloop invariant i236: i - 1 <= sn <= i + 4;\nloop invariant i237: i - 1 <= sn <= n + 4;\nloop invariant i238: i - 1 <= sn <= i + 5;\nloop invariant i239: i - 1 <= sn <= n + 5;\nloop invariant i240: i - 1 <= sn <= i + 6;\nloop invariant i241: i - 1 <= sn <= n + 6;\nloop invariant i242: i - 1 <= sn <= i + 7;\nloop invariant i243: i - 1 <= sn <= n + 7;\nloop invariant i244: i - 1 <= sn <= i + 8;\nloop invariant i245: i - 1 <= sn <= n + 8;\nloop invariant i246: i - 1 <= sn <= i + 9;\nloop invariant i247: i - 1 <= sn <= n + 9;\nloop invariant i248: i - 1 <= sn <= i + 10;\nloop invariant i249: i - 1 <= sn <= n + 10;\nloop invariant i250: i - 1 <= sn <= i + 11;\nloop invariant i251: i - 1 <= sn <= n + 11;\nloop invariant i252: i - 1 <= sn <= i + 12;\nloop invariant i253: i - 1 <= sn <= n + 12;\nloop invariant i254: i - 1 <= sn <= i + 13;\nloop invariant i255: i - 1 <= sn <= n + 13;\nloop invariant i256: i - 1 <= sn <= i + 14;\nloop invariant i257: i - 1 <= sn <= n + 14;\nloop invariant i258: i - 1 <= sn <= i + 15;\nloop invariant i259: i - 1 <= sn <= n + 15;\nloop invariant i260: i - 1 <= sn <= i + 16;\nloop invariant i261: i - 1 <= sn <= n + 16;\nloop invariant i262: i - 1 <= sn <= i + 17;\nloop invariant i263: i - 1 <= sn <= n + 17;\nloop invariant i264: i - 1 <= sn <= i + 18;\nloop invariant i265: i - 1 <= sn <= n + 18;\nloop invariant i266: i - 1 <= sn <= i + 19;\nloop invariant i267: i - 1 <= sn <= n + 19;\nloop invariant i268: i - 1 <= sn <= i + 20;\nloop invariant i269: i - 1 <= sn <= n + 20;\nloop invariant i270: i - 1 <= sn <= i + 21;\nloop invariant i271: i - 1 <= sn <= n + 21;\nloop invariant i272: i - 1 <= sn <= i + 22;\nloop invariant i273: i - 1 <= sn <= n + 22;\nloop invariant i274: i - 1 <= sn <= i + 23;\nloop invariant i275: i - 1 <= sn <= n + 23;\nloop invariant i276: i - 1 <= sn <= i + 24;\nloop invariant i277: i - 1 <= sn <= n + 24;\nloop invariant i278: i - 1 <= sn <= i + 25;\nloop invariant i279: i - 1 <= sn <= n + 25;\nloop invariant i280: i - 1 <= sn <= i + 26;\nloop invariant i281: i - 1 <= sn <= n + 26;\nloop invariant i282: i - 1 <= sn <= i + 27;\nloop invariant i283: i - 1 <= sn <= n + 27;\nloop invariant i284: i - 1 <= sn <= i + 28;\nloop invariant i285: i - 1 <= sn <= n + 28;\nloop invariant i286: i - 1 <= sn <= i + 29;\nloop invariant i287: i - 1 <= sn <= n + 29;\nloop invariant i288: i - 1 <= sn <= i + 30;\nloop invariant i289: i - 1 <= sn <= n + 30;\nloop invariant i290: i - 1 <= sn <= i + 31;\nloop invariant i291: i - 1 <= sn <= n + 31;\nloop invariant i292: i - 1 <= sn <= i + 32;\nloop invariant i293: i - 1 <= sn <= n + 32;\nloop invariant i294: i - 1 <= sn <= i + 33;\nloop invariant i295: sn == i * (i + 1) / 2;\nloop invariant i296: sn == (i * (i + 1)) / 2;\nloop invariant i297: sn == (i * (i + 1)) / 2 || sn == 0;\nloop invariant i298: (i <= n ==> sn == (i * (i + 1)) / 2 || sn == 0);\nloop invariant i299: sn == i ==> sn == n;\nloop invariant i300: sn == i ==> sn == 0;\nloop invariant i301: i > 0;\nloop invariant i302: n > 0;\nloop invariant i303: s == (i - 1);\nloop invariant i304: 0 <= s <= n;\nloop invariant i305: s <= sn;\nloop invariant i306: s + sn == (i - 1);\nloop invariant i307: s + sn == (n - i + 1);\nloop invariant i308: sn == (n - i + 1);\nloop invariant i309: s + sn == n;\nloop invariant i310: s + sn == (n - 1);\nloop invariant i311: 0 <= n <= 100000;\nloop invariant i312: x >= (1 + (y - 1) * y / 2);\nloop invariant i313: x <= (y * y + y) / 2;\n*/\nfor(i=1; i<=n; i++) {\n    sn = sn + 1;\n  }\n  {;\n//@ assert(sn==n || sn == 0);\n}\n\n}",
        "combined_annotation_num_solver_calls": 224,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() { \n  int i, n=unknown_int(), sn=0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i162: (n == 0) ==> (sn == 0);\n\nloop invariant i164: (n >= 0) ==> (sn >= 0);\n\nloop invariant i166: (n >= 0) ==> (i >= 0);\n\n\nloop invariant i169: (n <= n) ==> (sn <= i);\n\n\nloop invariant i172: i >= 1;\n\nloop invariant i174: sn >= 0;\n\n\nloop invariant i177: n <= INT_MAX;\nloop invariant i178: i >= 0;\nloop invariant i179: i <= INT_MAX;\nloop invariant i180: sn <= INT_MAX;\n\nloop invariant i182: 0 <= sn <= i;\nloop invariant i183: (sn == i) ==> (i == n);\n\nloop invariant i185: (i == 0) ==> (sn == 0);\n\n\nloop invariant i188: sn == (i - 1);\nloop invariant i189: (i == n + 1) ==> (sn == n);\nloop invariant i190: (i == 1) ==> (sn == 0);\n\nloop invariant i192: sn == i - 1;\n\n\n\n\n\n\nloop invariant i199: sn == n - i + 1 ==> sn == i - 1;\n\nloop invariant i201: sn == n - i + 1 ==> sn >= 0;\nloop invariant i202: sn <= n ==> sn >= 0;\n\nloop invariant i204: sn == i - 1 ==> sn >= 0;\nloop invariant i205: sn == n - i + 1 ==> sn <= n;\n\nloop invariant i207: sn == n - i + 1 ==> sn <= n && sn >= 0;\nloop invariant i208: sn <= n ==> sn >= 0 && sn <= n;\n\n\nloop invariant i211: sn == n - i + 1 ==> sn >= 0 && sn <= n;\nloop invariant i212: sn == i - 1 ==> sn == n - i + 1 ==> sn >= 0 && sn <= n;\nloop invariant i213: sn == n - i + 1 ==> sn == i - 1 ==> sn >= 0 && sn <= n;\nloop invariant i214: sn >= 0 ==> sn <= n ==> sn >= 0 && sn <= n;\nloop invariant i215: sn <= n ==> sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant i216: sn == i - 1 ==> sn <= n && sn >= 0 ==> sn >= 0 && sn <= n;\nloop invariant i217: sn == n - i + 1 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant i218: sn <= n ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\nloop invariant i219: sn >= 0 ==> sn >= 0 && sn <= n ==> sn >= 0 && sn <= n;\n\n\n\n\n\n\nloop invariant i226: 0 <= sn <= n * (n + 1) / 2;\n\nloop invariant i228: i - 1 <= sn <= i;\n\nloop invariant i230: i - 1 <= sn <= i + 1;\n\nloop invariant i232: i - 1 <= sn <= i + 2;\n\nloop invariant i234: i - 1 <= sn <= i + 3;\n\nloop invariant i236: i - 1 <= sn <= i + 4;\n\nloop invariant i238: i - 1 <= sn <= i + 5;\n\nloop invariant i240: i - 1 <= sn <= i + 6;\n\nloop invariant i242: i - 1 <= sn <= i + 7;\n\nloop invariant i244: i - 1 <= sn <= i + 8;\n\nloop invariant i246: i - 1 <= sn <= i + 9;\n\nloop invariant i248: i - 1 <= sn <= i + 10;\n\nloop invariant i250: i - 1 <= sn <= i + 11;\n\nloop invariant i252: i - 1 <= sn <= i + 12;\n\nloop invariant i254: i - 1 <= sn <= i + 13;\n\nloop invariant i256: i - 1 <= sn <= i + 14;\n\nloop invariant i258: i - 1 <= sn <= i + 15;\n\nloop invariant i260: i - 1 <= sn <= i + 16;\n\nloop invariant i262: i - 1 <= sn <= i + 17;\n\nloop invariant i264: i - 1 <= sn <= i + 18;\n\nloop invariant i266: i - 1 <= sn <= i + 19;\n\nloop invariant i268: i - 1 <= sn <= i + 20;\n\nloop invariant i270: i - 1 <= sn <= i + 21;\n\nloop invariant i272: i - 1 <= sn <= i + 22;\n\nloop invariant i274: i - 1 <= sn <= i + 23;\n\nloop invariant i276: i - 1 <= sn <= i + 24;\n\nloop invariant i278: i - 1 <= sn <= i + 25;\n\nloop invariant i280: i - 1 <= sn <= i + 26;\n\nloop invariant i282: i - 1 <= sn <= i + 27;\n\nloop invariant i284: i - 1 <= sn <= i + 28;\n\nloop invariant i286: i - 1 <= sn <= i + 29;\n\nloop invariant i288: i - 1 <= sn <= i + 30;\n\nloop invariant i290: i - 1 <= sn <= i + 31;\n\nloop invariant i292: i - 1 <= sn <= i + 32;\n\nloop invariant i294: i - 1 <= sn <= i + 33;\n\n\n\n\nloop invariant i299: sn == i ==> sn == n;\nloop invariant i300: sn == i ==> sn == 0;\nloop invariant i301: i > 0;\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nfor(i=1; i<=n; i++) {\n    sn = sn + 1;\n  }\n  {;\n//@ assert(sn==n || sn == 0);\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c"
        ],
        "skipped": [],
        "total": 88,
        "success_count": 74,
        "failure_count": 14,
        "success_rate": 0.8409090909090909
    }
}