{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  while(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant 0 <= c1 <= 1;\nloop invariant 0 <= c2 <= 1;\nloop invariant (c1 ==> x1 - d1 >= 0);\nloop invariant (c2 ==> x2 - d2 >= 0);\nloop invariant (x1 > 0 ==> x1 >= d1);\nloop invariant (x2 > 0 ==> x2 >= d2);\nloop invariant (x3 > 0 ==> x3 >= d3);\nloop invariant (x1 > 0 ==> x1 >= d1);\nloop invariant (x2 > 0 ==> x2 >= d2);\nloop invariant (x3 > 0 ==> x3 >= d3);\nloop invariant (x1 == 0 ==> x1 == 0);\nloop invariant (x2 == 0 ==> x2 == 0);\nloop invariant (x3 == 0 ==> x3 == 0);\nloop invariant (x1 == 0 ==> x1 == 0);\nloop invariant (x2 == 0 ==> x2 == 0);\nloop invariant (x3 == 0 ==> x3 == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 0 <= d1 <= unknown_uint();\nloop invariant 0 <= d2 <= unknown_uint();\nloop invariant 0 <= d3 <= unknown_uint();\nloop invariant (x1 > 0) ==> (c1 || !c2);\nloop invariant (x2 > 0) ==> (!c1 || c2);\nloop invariant (x3 > 0) ==> (!c1 && !c2);\nloop invariant (!c1 || d1 == 0);\nloop invariant (!c2 || d2 == 0);\nloop invariant (!(!c1 && !c2) || d3 == 0);\nloop invariant (x1 > 0) ==> (d1 == 1);\nloop invariant (x2 > 0) ==> (d2 == 1);\nloop invariant (x3 > 0) ==> (d3 == 1);\nloop invariant (x1 > 0) ==> (d1 == 1 || d1 == 0);\nloop invariant (x2 > 0) ==> (d2 == 1 || d2 == 0);\nloop invariant (x3 > 0) ==> (d3 == 1 || d3 == 0);\nloop invariant (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1);\nloop invariant (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2);\nloop invariant (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2);\nloop invariant (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0);\nloop invariant (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0);\nloop invariant (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2 || d3 == 0);\nloop invariant (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0 || c1);\nloop invariant (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0 || c2);\nloop invariant (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2 || d3 == 0 || !c1 && !c2);\nloop invariant (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0 || c1 || c1);\nloop invariant (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0 || c2 || c2);\nloop invariant (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2 || d3 == 0 || !c1 && !c2 || !c1 && !c2);\nloop invariant (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0 || c1 || c1 || c1);\nloop invariant (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0 || c2 || c2 || c2);\nloop invariant (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2 || d3 == 0 || !c1 && !c2 || !c1 && !c2 || !c1 && !c2);\nloop invariant (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0 || c1 || c1 || c1 || c1);\nloop invariant (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0 || c2 || c2 || c2 || c2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 && x1 <= 4294967295;\nloop invariant 0 <= x2 && x2 <= 4294967295;\nloop invariant 0 <= x3 && x3 <= 4294967295;\nloop invariant 0 <= d1 && d1 <= 4294967295;\nloop invariant 0 <= d2 && d2 <= 4294967295;\nloop invariant 0 <= d3 && d3 <= 4294967295;\nloop invariant 0 <= c1 && c1 <= 1;\nloop invariant 0 <= c2 && c2 <= 1;\nloop invariant (x1 >= d1) ==> (x1 > 0);\nloop invariant (x2 >= d2) ==> (x2 > 0);\nloop invariant (x3 >= d3) ==> (x3 > 0);\nloop invariant (c1 ==> x1 >= d1) && (c2 ==> x2 >= d2) && (!c1 && !c2 ==> x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 > 0) && (x2 > 0) && (x3 > 0);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= d1 <= x1;loop invariant 0 <= d2 <= x2;loop invariant 0 <= d3 <= x3;loop invariant 0 <= x1 <= x1 + x2 + x3;loop invariant 0 <= x2 <= x1 + x2 + x3;loop invariant 0 <= x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x2 <= unknown_uint();loop invariant 1 <= x3 <= unknown_uint();loop invariant 1 <= d1 <= 1;loop invariant 1 <= d2 <= 1;loop invariant 1 <= d3 <= 1;loop invariant c1 == unknown_bool();loop invariant c2 == unknown_bool();loop invariant x1 > 0 && x2 > 0 && x3 > 0 ==> (x1 >= d1 || x2 >= d2 || x3 >= d3);loop invariant x1 > 0 && x2 > 0 && x3 > 0 ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);loop invariant x1 > 0 && x2 > 0 && x3 > 0 ==> (x1 >= d1 || x2 >= d2 || x3 >= d3);loop invariant x1 > 0 && x2 > 0 && x3 > 0 ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant x1 >= 0, x2 >= 0, x3 >= 0;\nloop invariant x1 > 0 ==> d1 >= 1;\nloop invariant x2 > 0 ==> d2 >= 1;\nloop invariant x3 > 0 ==> d3 >= 1;\nloop invariant x1 + x2 + x3 + d1 + d2 + d3 >= 1;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 > 0 ==> x1 >= d1;\nloop invariant x2 > 0 ==> x2 >= d2;\nloop invariant x3 > 0 ==> x3 >= d3;\nloop invariant x1 > 0 ==> x1 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x2 > 0 ==> x2 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x3 > 0 ==> x3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 == 1;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x2 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x1 <= unknown_uint();\nloop invariant 1 <= x2 <= unknown_uint();\nloop invariant 1 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant 0 <= c1 <= 1;\nloop invariant 0 <= c2 <= 1;\nloop invariant 0 <= d1 <= x1;\nloop invariant 0 <= d2 <= x2;\nloop invariant 0 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x1 <= unknown_uint();\nloop invariant 1 <= x2 <= unknown_uint();\nloop invariant 1 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant 0 <= c1 <= 1;\nloop invariant 0 <= c2 <= 1;\nloop invariant x1 > 0;\nloop invariant x2 > 0;\nloop invariant x3 > 0;\nloop invariant x1 + x2 + x3 == unknown_uint();\nloop invariant d1 + d2 + d3 == 3;\nloop invariant x1 - x2 >= 0;\nloop invariant x2 - x3 >= 0;\nloop invariant x3 - x1 >= 0;\nloop invariant c1 ==> x1 - d1 >= 0;\nloop invariant c2 ==> x2 - d2 >= 0;\nloop invariant !c1 && !c2 ==> x3 - d3 >= 0;\nloop invariant c1 ==> x1 == unknown_uint() || x1 == 1;\nloop invariant c2 ==> x2 == unknown_uint() || x2 == 1;\nloop invariant !c1 && !c2 ==> x3 == unknown_uint() || x3 == 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= x1 + d1;\nloop invariant 0 <= x2 <= x2 + d2;\nloop invariant 0 <= x3 <= x3 + d3;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 || c2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 0 <= d1 <= 1;\nloop invariant 0 <= d2 <= 1;\nloop invariant 0 <= d3 <= 1;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 > 0 ==> c1 == 1;\nloop invariant x2 > 0 ==> c2 == 1;\nloop invariant x3 > 0 ==> c1 == 0 && c2 == 0;\nloop invariant x1 <= (x1 + d1);\nloop invariant x2 <= (x2 + d2);\nloop invariant x3 <= (x3 + d3);\nloop invariant x1 >= (x1 - d1);\nloop invariant x2 >= (x2 - d2);\nloop invariant x3 >= (x3 - d3);\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= x1_0;\nloop invariant 0 <= x2 <= x2_0;\nloop invariant 0 <= x3 <= x3_0;\nloop invariant d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 + x2 + x3 == x1_0 + x2_0 + x3_0;\nloop invariant d1 * c1 + d2 * c2 + d3 * (1 - c1 - c2) <= x1_0;\nloop invariant d1 * c1 + d2 * c2 + d3 * (1 - c1 - c2) <= x2_0;\nloop invariant d1 * c1 + d2 * c2 + d3 * (1 - c1 - c2) <= x3_0;\nloop invariant if c1 == 0 then d1 == 1 else d1 >= 1;\nloop invariant if c2 == 0 then d2 == 1 else d2 >= 1;\nloop invariant if (c1 == 0 && c2 == 0) then d3 == 1 else d3 >= 1;\nloop invariant x1_0 >= 0 && x2_0 >= 0 && x3_0 >= 0;\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1_0 >= x1 && x2_0 >= x2 && x3_0 >= x3;\nloop invariant x1_0 <= x1 && x2_0 <= x2 && x3_0 <= x3;\nloop invariant x1_0 <= x1_0 + x2_0 + x3_0;\nloop invariant x2_0 <= x1_0 + x2_0 + x3_0;\nloop invariant x3_0 <= x1_0 + x2_0 + x3_0;\nloop invariant x1 <= x1_0 && x2 <= x2_0 && x3 <= x3_0;\nloop invariant x1 <= x1_0 + x2_0 + x3_0;\nloop invariant x2 <= x1_0 + x2_0 + x3_0;\nloop invariant x3 <= x1_0 + x2_0 + x3_0;\nloop invariant x1_0 == x1 + d1 * c1;\nloop invariant x2_0 == x2 + d2 * c2;\nloop invariant x3_0 == x3 + d3 * (1 - c1 - c2);\nloop invariant x1_0 <= x1_0 + x2_0 + x3_0;\nloop invariant x2_0 <= x1_0 + x2_0 + x3_0;\nloop invariant x3_0 <= x1_0 + x2_0 + x3_0;\nloop invariant x1_0 >= 0;\nloop invariant x2_0 >= 0;\nloop invariant x3_0 >= 0;\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= x1_0 + x2_0 + x3_0;\nloop invariant x1 <= x1_0;\nloop invariant x2 <= x2_0;\nloop invariant x3 <= x3_0;\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= x1_0 + x2_0 + x3_0;\nloop invariant x1 <= x1_0;\nloop invariant x2 <= x2_0;\nloop invariant x3 <= x3_0;\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= x1_0 + x2_0 + x3_0;\nloop invariant x1 <= x1_0;\nloop invariant x2 <= x2_0;\nloop invariant x3 <= x3_0;\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= x1_0 + x2_0 + x3_0;\nloop invariant x1 <= x1_0;\nloop invariant x2 <= x2_0;\nloop invariant x3 <= x3_0;\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= x1_0 + x2_0 + x3_0;\n*/\n```",
            "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 <= unknown_uint();\nloop invariant x2 <= unknown_uint();\nloop invariant x3 <= unknown_uint();\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant d1 == 1;\nloop invariant d2 == 1;\nloop invariant d3 == 1;\nloop invariant x1 >= x2;\nloop invariant x1 >= x3;\nloop invariant x2 >= x3;\nloop invariant x1 - x2 <= x3;\nloop invariant x1 - x3 <= x2;\nloop invariant x2 - x3 <= x1;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x1 <= x1_max && 1 <= x2 <= x2_max && 1 <= x3 <= x3_max;\nloop invariant 1 <= d1 <= d1_max && 1 <= d2 <= d2_max && 1 <= d3 <= d3_max;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant c1 ==> (x1 >= d1);\nloop invariant c2 ==> (x2 >= d2);\nloop invariant !(c1 && c2) ==> (x3 >= d3);\nloop invariant c1 ==> (x1 <= x1_max);\nloop invariant c2 ==> (x2 <= x2_max);\nloop invariant !(c1 && c2) ==> (x3 <= x3_max);\nloop invariant c1 ==> (x1 <= x1_max - d1);\nloop invariant c2 ==> (x2 <= x2_max - d2);\nloop invariant !(c1 && c2) ==> (x3 <= x3_max - d3);\nloop invariant c1 ==> (x1 >= 1);\nloop invariant c2 ==> (x2 >= 1);\nloop invariant !(c1 && c2) ==> (x3 >= 1);\nloop invariant c1 ==> (x1 >= d1);\nloop invariant c2 ==> (x2 >= d2);\nloop invariant !(c1 && c2) ==> (x3 >= d3);\nloop invariant c1 ==> (x1 <= x1_max);\nloop invariant c2 ==> (x2 <= x2_max);\nloop invariant !(c1 && c2) ==> (x3 <= x3_max);\nloop invariant c1 ==> (x1 <= x1_max - d1);\nloop invariant c2 ==> (x2 <= x2_max - d2);\nloop invariant !(c1 && c2) ==> (x3 <= x3_max - d3);\nloop invariant c1 ==> (x1 >= 1);\nloop invariant c2 ==> (x2 >= 1);\nloop invariant !(c1 && c2) ==> (x3 >= 1);\nloop invariant c1 ==> (x1 >= d1);\nloop invariant c2 ==> (x2 >= d2);\nloop invariant !(c1 && c2) ==> (x3 >= d3);\nloop invariant c1 ==> (x1 <= x1_max);\nloop invariant c2 ==> (x2 <= x2_max);\nloop invariant !(c1 && c2) ==> (x3 <= x3_max);\nloop invariant c1 ==> (x1 <= x1_max - d1);\nloop invariant c2 ==> (x2 <= x2_max - d2);\nloop invariant !(c1 && c2) ==> (x3 <= x3_max - d3);\nloop invariant c1 ==> (x1 >= 1);\nloop invariant c2 ==> (x2 >= 1);\nloop invariant !(c1 && c2) ==> (x3 >= 1);\nloop invariant c1 ==> (x1 >= d1);\nloop invariant c2 ==> (x2 >= d2);\nloop invariant !(c1 && c2) ==> (x3 >= d3);\nloop invariant c1 ==> (x1 <= x1_max);\nloop invariant c2 ==> (x2 <= x2_max);\nloop invariant !(c1 && c2) ==> (x3 <= x3_max);\nloop invariant c1 ==> (x1 <= x1_max - d1);\nloop invariant c2 ==> (x2 <= x2_max - d2);\nloop invariant !(c1 && c2) ==> (x3 <= x3_max - d3);\nloop invariant c1 ==> (x1 >= 1);\nloop invariant c2 ==> (x2 >= 1);\nloop invariant !(c1 && c2) ==> (x3 >= 1);\nloop invariant c1 ==> (x1 >= d1);\nloop invariant c2 ==> (x2 >= d2);\nloop invariant !(c1 && c2) ==> (x3 >= d3);\nloop invariant c1 ==> (x1 <= x1_max);\nloop invariant c2 ==> (x2 <= x2_max);\nloop invariant !(c1 && c2) ==> (x3 <= x3_max);\nloop invariant c1 ==> (x1 <= x1_max - d1);\nloop invariant c2 ==> (x2 <= x2_max - d2);\nloop invariant !(c1 && c2) ==> (x3 <= x3_max - d3);\nloop invariant c1 ==> (x1 >= 1);\nloop invariant c2 ==> (x2 >= 1);\nloop invariant !(c1 && c2) ==> (x3 >= 1);\nloop invariant c1 ==> (x1 >= d1);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x1 <= x1;\nloop invariant 1 <= x2 <= x2;\nloop invariant 1 <= x3 <= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x1 >= x3;\nloop invariant x2 >= x3;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 == unknown_bool() ==> x1 >= x1;\nloop invariant c1 == unknown_bool() ==> x2 >= x2;\nloop invariant c1 == unknown_bool() ==> x3 >= x3;\nloop invariant c2 == unknown_bool() ==> x1 >= x1;\nloop invariant c2 == unknown_bool() ==> x2 >= x2;\nloop invariant c2 == unknown_bool() ==> x3 >= x3;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x1 >= x2;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x1 >= x3;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x2 >= x3;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d1 >= 1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d2 >= 1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d3 >= 1;\nloop invariant c1 == unknown_bool() ==> d1 >= 1;\nloop invariant c1 == unknown_bool() ==> d2 >= 1;\nloop invariant c1 == unknown_bool() ==> d3 >= 1;\nloop invariant c2 == unknown_bool() ==> d1 >= 1;\nloop invariant c2 == unknown_bool() ==> d2 >= 1;\nloop invariant c2 == unknown_bool() ==> d3 >= 1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x1 >= x1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x2 >= x2;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x3 >= x3;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d1 >= 1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d2 >= 1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d3 >= 1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> c1 == unknown_bool();\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> c2 == unknown_bool();\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x1 >= x2;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x1 >= x3;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x2 >= x3;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d1 >= 1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d2 >= 1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d3 >= 1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> c1 == unknown_bool();\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> c2 == unknown_bool();\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x1 >= x2;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x1 >= x3;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x2 >= x3;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d1 >= 1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d2 >= 1;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant 0 <= c1 <= 1;\nloop invariant 0 <= c2 <= 1;\nloop invariant (c1 ==> x1 - d1 >= 0);\nloop invariant (c2 ==> x2 - d2 >= 0);\nloop invariant (x1 > 0 ==> x1 >= d1);\nloop invariant (x2 > 0 ==> x2 >= d2);\nloop invariant (x3 > 0 ==> x3 >= d3);\nloop invariant (x1 > 0 ==> x1 >= d1);\nloop invariant (x2 > 0 ==> x2 >= d2);\nloop invariant (x3 > 0 ==> x3 >= d3);\nloop invariant (x1 == 0 ==> x1 == 0);\nloop invariant (x2 == 0 ==> x2 == 0);\nloop invariant (x3 == 0 ==> x3 == 0);\nloop invariant (x1 == 0 ==> x1 == 0);\nloop invariant (x2 == 0 ==> x2 == 0);\nloop invariant (x3 == 0 ==> x3 == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n\n\n\n\n\nloop invariant i7: 0 <= c1 <= 1;\nloop invariant i8: 0 <= c2 <= 1;\n\n\n\n\n\nloop invariant i14: (x1 == 0 ==> x1 == 0);\nloop invariant i15: (x2 == 0 ==> x2 == 0);\nloop invariant i16: (x3 == 0 ==> x3 == 0);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 0 <= d1 <= unknown_uint();\nloop invariant 0 <= d2 <= unknown_uint();\nloop invariant 0 <= d3 <= unknown_uint();\nloop invariant (x1 > 0) ==> (c1 || !c2);\nloop invariant (x2 > 0) ==> (!c1 || c2);\nloop invariant (x3 > 0) ==> (!c1 && !c2);\nloop invariant (!c1 || d1 == 0);\nloop invariant (!c2 || d2 == 0);\nloop invariant (!(!c1 && !c2) || d3 == 0);\nloop invariant (x1 > 0) ==> (d1 == 1);\nloop invariant (x2 > 0) ==> (d2 == 1);\nloop invariant (x3 > 0) ==> (d3 == 1);\nloop invariant (x1 > 0) ==> (d1 == 1 || d1 == 0);\nloop invariant (x2 > 0) ==> (d2 == 1 || d2 == 0);\nloop invariant (x3 > 0) ==> (d3 == 1 || d3 == 0);\nloop invariant (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1);\nloop invariant (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2);\nloop invariant (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2);\nloop invariant (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0);\nloop invariant (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0);\nloop invariant (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2 || d3 == 0);\nloop invariant (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0 || c1);\nloop invariant (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0 || c2);\nloop invariant (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2 || d3 == 0 || !c1 && !c2);\nloop invariant (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0 || c1 || c1);\nloop invariant (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0 || c2 || c2);\nloop invariant (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2 || d3 == 0 || !c1 && !c2 || !c1 && !c2);\nloop invariant (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0 || c1 || c1 || c1);\nloop invariant (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0 || c2 || c2 || c2);\nloop invariant (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2 || d3 == 0 || !c1 && !c2 || !c1 && !c2 || !c1 && !c2);\nloop invariant (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0 || c1 || c1 || c1 || c1);\nloop invariant (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0 || c2 || c2 || c2 || c2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i13: (x1 > 0) ==> (d1 == 1);\nloop invariant i14: (x2 > 0) ==> (d2 == 1);\nloop invariant i15: (x3 > 0) ==> (d3 == 1);\nloop invariant i16: (x1 > 0) ==> (d1 == 1 || d1 == 0);\nloop invariant i17: (x2 > 0) ==> (d2 == 1 || d2 == 0);\nloop invariant i18: (x3 > 0) ==> (d3 == 1 || d3 == 0);\nloop invariant i19: (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1);\nloop invariant i20: (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2);\nloop invariant i21: (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2);\nloop invariant i22: (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0);\nloop invariant i23: (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0);\nloop invariant i24: (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2 || d3 == 0);\nloop invariant i25: (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0 || c1);\nloop invariant i26: (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0 || c2);\nloop invariant i27: (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2 || d3 == 0 || !c1 && !c2);\nloop invariant i28: (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0 || c1 || c1);\nloop invariant i29: (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0 || c2 || c2);\nloop invariant i30: (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2 || d3 == 0 || !c1 && !c2 || !c1 && !c2);\nloop invariant i31: (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0 || c1 || c1 || c1);\nloop invariant i32: (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0 || c2 || c2 || c2);\nloop invariant i33: (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2 || d3 == 0 || !c1 && !c2 || !c1 && !c2 || !c1 && !c2);\nloop invariant i34: (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0 || c1 || c1 || c1 || c1);\nloop invariant i35: (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0 || c2 || c2 || c2 || c2);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 && x1 <= 4294967295;\nloop invariant 0 <= x2 && x2 <= 4294967295;\nloop invariant 0 <= x3 && x3 <= 4294967295;\nloop invariant 0 <= d1 && d1 <= 4294967295;\nloop invariant 0 <= d2 && d2 <= 4294967295;\nloop invariant 0 <= d3 && d3 <= 4294967295;\nloop invariant 0 <= c1 && c1 <= 1;\nloop invariant 0 <= c2 && c2 <= 1;\nloop invariant (x1 >= d1) ==> (x1 > 0);\nloop invariant (x2 >= d2) ==> (x2 > 0);\nloop invariant (x3 >= d3) ==> (x3 > 0);\nloop invariant (c1 ==> x1 >= d1) && (c2 ==> x2 >= d2) && (!c1 && !c2 ==> x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 > 0) && (x2 > 0) && (x3 > 0);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\nloop invariant i1: 0 <= x1 && x1 <= 4294967295;\nloop invariant i2: 0 <= x2 && x2 <= 4294967295;\nloop invariant i3: 0 <= x3 && x3 <= 4294967295;\nloop invariant i4: 0 <= d1 && d1 <= 4294967295;\nloop invariant i5: 0 <= d2 && d2 <= 4294967295;\nloop invariant i6: 0 <= d3 && d3 <= 4294967295;\nloop invariant i7: 0 <= c1 && c1 <= 1;\nloop invariant i8: 0 <= c2 && c2 <= 1;\nloop invariant i9: (x1 >= d1) ==> (x1 > 0);\nloop invariant i10: (x2 >= d2) ==> (x2 > 0);\nloop invariant i11: (x3 >= d3) ==> (x3 > 0);\n\n\nloop invariant i14: (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 > 0) && (x2 > 0) && (x3 > 0);\nloop invariant i15: (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= d1 <= x1;loop invariant 0 <= d2 <= x2;loop invariant 0 <= d3 <= x3;loop invariant 0 <= x1 <= x1 + x2 + x3;loop invariant 0 <= x2 <= x1 + x2 + x3;loop invariant 0 <= x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= x2 <= unknown_uint();loop invariant 1 <= x3 <= unknown_uint();loop invariant 1 <= d1 <= 1;loop invariant 1 <= d2 <= 1;loop invariant 1 <= d3 <= 1;loop invariant c1 == unknown_bool();loop invariant c2 == unknown_bool();loop invariant x1 > 0 && x2 > 0 && x3 > 0 ==> (x1 >= d1 || x2 >= d2 || x3 >= d3);loop invariant x1 > 0 && x2 > 0 && x3 > 0 ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);loop invariant x1 > 0 && x2 > 0 && x3 > 0 ==> (x1 >= d1 || x2 >= d2 || x3 >= d3);loop invariant x1 > 0 && x2 > 0 && x3 > 0 ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x1 >= 0, x2 >= 0, x3 >= 0;\nloop invariant x1 > 0 ==> d1 >= 1;\nloop invariant x2 > 0 ==> d2 >= 1;\nloop invariant x3 > 0 ==> d3 >= 1;\nloop invariant x1 + x2 + x3 + d1 + d2 + d3 >= 1;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 > 0 ==> x1 >= d1;\nloop invariant x2 > 0 ==> x2 >= d2;\nloop invariant x3 > 0 ==> x3 >= d3;\nloop invariant x1 > 0 ==> x1 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x2 > 0 ==> x2 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x3 > 0 ==> x3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 == 1;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x2 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\nloop invariant i2: x1 > 0 ==> d1 >= 1;\nloop invariant i3: x2 > 0 ==> d2 >= 1;\nloop invariant i4: x3 > 0 ==> d3 >= 1;\nloop invariant i5: x1 + x2 + x3 + d1 + d2 + d3 >= 1;\n\n\n\n\n\nloop invariant i11: x1 > 0 ==> x1 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant i12: x2 > 0 ==> x2 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant i13: x3 > 0 ==> x3 <= x1 + x2 + x3 + d1 + d2 + d3;\n\nloop invariant i15: x1 == 0 || x2 == 0 || x3 == 0 ==> x1 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant i16: x1 == 0 || x2 == 0 || x3 == 0 ==> x2 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant i17: x1 == 0 || x2 == 0 || x3 == 0 ==> x3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant i18: x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 11,
                "annotations": "```\n/*@\nloop invariant 1 <= x1 <= unknown_uint();\nloop invariant 1 <= x2 <= unknown_uint();\nloop invariant 1 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant 0 <= c1 <= 1;\nloop invariant 0 <= c2 <= 1;\nloop invariant 0 <= d1 <= x1;\nloop invariant 0 <= d2 <= x2;\nloop invariant 0 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant 0 <= x1 <= unknown_uint();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n\n\n\n\n\nloop invariant i7: 0 <= c1 <= 1;\nloop invariant i8: 0 <= c2 <= 1;\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 11,
                "annotations": "```\n/*@\nloop invariant 1 <= x1 <= unknown_uint();\nloop invariant 1 <= x2 <= unknown_uint();\nloop invariant 1 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant 0 <= c1 <= 1;\nloop invariant 0 <= c2 <= 1;\nloop invariant x1 > 0;\nloop invariant x2 > 0;\nloop invariant x3 > 0;\nloop invariant x1 + x2 + x3 == unknown_uint();\nloop invariant d1 + d2 + d3 == 3;\nloop invariant x1 - x2 >= 0;\nloop invariant x2 - x3 >= 0;\nloop invariant x3 - x1 >= 0;\nloop invariant c1 ==> x1 - d1 >= 0;\nloop invariant c2 ==> x2 - d2 >= 0;\nloop invariant !c1 && !c2 ==> x3 - d3 >= 0;\nloop invariant c1 ==> x1 == unknown_uint() || x1 == 1;\nloop invariant c2 ==> x2 == unknown_uint() || x2 == 1;\nloop invariant !c1 && !c2 ==> x3 == unknown_uint() || x3 == 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n\n\n\n\n\nloop invariant i7: 0 <= c1 <= 1;\nloop invariant i8: 0 <= c2 <= 1;\n\n\n\n\nloop invariant i13: d1 + d2 + d3 == 3;\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= x1 + d1;\nloop invariant 0 <= x2 <= x2 + d2;\nloop invariant 0 <= x3 <= x3 + d3;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 || c2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\nloop invariant i1: 0 <= x1 <= x1 + d1;\nloop invariant i2: 0 <= x2 <= x2 + d2;\nloop invariant i3: 0 <= x3 <= x3 + d3;\nloop invariant i4: d1 >= 1;\nloop invariant i5: d2 >= 1;\nloop invariant i6: d3 >= 1;\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 0 <= d1 <= 1;\nloop invariant 0 <= d2 <= 1;\nloop invariant 0 <= d3 <= 1;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 > 0 ==> c1 == 1;\nloop invariant x2 > 0 ==> c2 == 1;\nloop invariant x3 > 0 ==> c1 == 0 && c2 == 0;\nloop invariant x1 <= (x1 + d1);\nloop invariant x2 <= (x2 + d2);\nloop invariant x3 <= (x3 + d3);\nloop invariant x1 >= (x1 - d1);\nloop invariant x2 >= (x2 - d2);\nloop invariant x3 >= (x3 - d3);\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n\n\nloop invariant i4: 0 <= d1 <= 1;\nloop invariant i5: 0 <= d2 <= 1;\nloop invariant i6: 0 <= d3 <= 1;\n\n\n\n\n\nloop invariant i12: x1 <= (x1 + d1);\nloop invariant i13: x2 <= (x2 + d2);\nloop invariant i14: x3 <= (x3 + d3);\nloop invariant i15: x1 >= (x1 - d1);\nloop invariant i16: x2 >= (x2 - d2);\nloop invariant i17: x3 >= (x3 - d3);\nloop invariant i18: x1 >= 0;\nloop invariant i19: x2 >= 0;\nloop invariant i20: x3 >= 0;\nloop invariant i21: d1 >= 0;\nloop invariant i22: d2 >= 0;\nloop invariant i23: d3 >= 0;\nloop invariant i24: c1 == 0 || c1 == 1;\nloop invariant i25: c2 == 0 || c2 == 1;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 30,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= x1_0;\nloop invariant 0 <= x2 <= x2_0;\nloop invariant 0 <= x3 <= x3_0;\nloop invariant d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 + x2 + x3 == x1_0 + x2_0 + x3_0;\nloop invariant d1 * c1 + d2 * c2 + d3 * (1 - c1 - c2) <= x1_0;\nloop invariant d1 * c1 + d2 * c2 + d3 * (1 - c1 - c2) <= x2_0;\nloop invariant d1 * c1 + d2 * c2 + d3 * (1 - c1 - c2) <= x3_0;\nloop invariant if c1 == 0 then d1 == 1 else d1 >= 1;\nloop invariant if c2 == 0 then d2 == 1 else d2 >= 1;\nloop invariant if (c1 == 0 && c2 == 0) then d3 == 1 else d3 >= 1;\nloop invariant x1_0 >= 0 && x2_0 >= 0 && x3_0 >= 0;\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1_0 >= x1 && x2_0 >= x2 && x3_0 >= x3;\nloop invariant x1_0 <= x1 && x2_0 <= x2 && x3_0 <= x3;\nloop invariant x1_0 <= x1_0 + x2_0 + x3_0;\nloop invariant x2_0 <= x1_0 + x2_0 + x3_0;\nloop invariant x3_0 <= x1_0 + x2_0 + x3_0;\nloop invariant x1 <= x1_0 && x2 <= x2_0 && x3 <= x3_0;\nloop invariant x1 <= x1_0 + x2_0 + x3_0;\nloop invariant x2 <= x1_0 + x2_0 + x3_0;\nloop invariant x3 <= x1_0 + x2_0 + x3_0;\nloop invariant x1_0 == x1 + d1 * c1;\nloop invariant x2_0 == x2 + d2 * c2;\nloop invariant x3_0 == x3 + d3 * (1 - c1 - c2);\nloop invariant x1_0 <= x1_0 + x2_0 + x3_0;\nloop invariant x2_0 <= x1_0 + x2_0 + x3_0;\nloop invariant x3_0 <= x1_0 + x2_0 + x3_0;\nloop invariant x1_0 >= 0;\nloop invariant x2_0 >= 0;\nloop invariant x3_0 >= 0;\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= x1_0 + x2_0 + x3_0;\nloop invariant x1 <= x1_0;\nloop invariant x2 <= x2_0;\nloop invariant x3 <= x3_0;\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= x1_0 + x2_0 + x3_0;\nloop invariant x1 <= x1_0;\nloop invariant x2 <= x2_0;\nloop invariant x3 <= x3_0;\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= x1_0 + x2_0 + x3_0;\nloop invariant x1 <= x1_0;\nloop invariant x2 <= x2_0;\nloop invariant x3 <= x3_0;\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= x1_0 + x2_0 + x3_0;\nloop invariant x1 <= x1_0;\nloop invariant x2 <= x2_0;\nloop invariant x3 <= x3_0;\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= x1_0 + x2_0 + x3_0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n\n\nloop invariant i4: d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant i5: c1 == 0 || c1 == 1;\nloop invariant i6: c2 == 0 || c2 == 1;\n\n\n\n\n\n\n\n\nloop invariant i15: x1 + x2 + x3 >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 <= unknown_uint();\nloop invariant x2 <= unknown_uint();\nloop invariant x3 <= unknown_uint();\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant d1 == 1;\nloop invariant d2 == 1;\nloop invariant d3 == 1;\nloop invariant x1 >= x2;\nloop invariant x1 >= x3;\nloop invariant x2 >= x3;\nloop invariant x1 - x2 <= x3;\nloop invariant x1 - x3 <= x2;\nloop invariant x2 - x3 <= x1;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant x1 + x2 + x3 >= 0;\nloop invariant x1 + x2 + x3 <= 3 * unknown_uint();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\nloop invariant i1: x1 >= 0;\nloop invariant i2: x2 >= 0;\nloop invariant i3: x3 >= 0;\n\n\n\n\n\nloop invariant i9: d1 == 1;\nloop invariant i10: d2 == 1;\nloop invariant i11: d3 == 1;\n\n\n\n\n\n\n\nloop invariant i19: x1 + x2 + x3 >= 0;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 10,
                "annotations": "```\n/*@\nloop invariant 1 <= x1 <= x1_max && 1 <= x2 <= x2_max && 1 <= x3 <= x3_max;\nloop invariant 1 <= d1 <= d1_max && 1 <= d2 <= d2_max && 1 <= d3 <= d3_max;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant c1 ==> (x1 >= d1);\nloop invariant c2 ==> (x2 >= d2);\nloop invariant !(c1 && c2) ==> (x3 >= d3);\nloop invariant c1 ==> (x1 <= x1_max);\nloop invariant c2 ==> (x2 <= x2_max);\nloop invariant !(c1 && c2) ==> (x3 <= x3_max);\nloop invariant c1 ==> (x1 <= x1_max - d1);\nloop invariant c2 ==> (x2 <= x2_max - d2);\nloop invariant !(c1 && c2) ==> (x3 <= x3_max - d3);\nloop invariant c1 ==> (x1 >= 1);\nloop invariant c2 ==> (x2 >= 1);\nloop invariant !(c1 && c2) ==> (x3 >= 1);\nloop invariant c1 ==> (x1 >= d1);\nloop invariant c2 ==> (x2 >= d2);\nloop invariant !(c1 && c2) ==> (x3 >= d3);\nloop invariant c1 ==> (x1 <= x1_max);\nloop invariant c2 ==> (x2 <= x2_max);\nloop invariant !(c1 && c2) ==> (x3 <= x3_max);\nloop invariant c1 ==> (x1 <= x1_max - d1);\nloop invariant c2 ==> (x2 <= x2_max - d2);\nloop invariant !(c1 && c2) ==> (x3 <= x3_max - d3);\nloop invariant c1 ==> (x1 >= 1);\nloop invariant c2 ==> (x2 >= 1);\nloop invariant !(c1 && c2) ==> (x3 >= 1);\nloop invariant c1 ==> (x1 >= d1);\nloop invariant c2 ==> (x2 >= d2);\nloop invariant !(c1 && c2) ==> (x3 >= d3);\nloop invariant c1 ==> (x1 <= x1_max);\nloop invariant c2 ==> (x2 <= x2_max);\nloop invariant !(c1 && c2) ==> (x3 <= x3_max);\nloop invariant c1 ==> (x1 <= x1_max - d1);\nloop invariant c2 ==> (x2 <= x2_max - d2);\nloop invariant !(c1 && c2) ==> (x3 <= x3_max - d3);\nloop invariant c1 ==> (x1 >= 1);\nloop invariant c2 ==> (x2 >= 1);\nloop invariant !(c1 && c2) ==> (x3 >= 1);\nloop invariant c1 ==> (x1 >= d1);\nloop invariant c2 ==> (x2 >= d2);\nloop invariant !(c1 && c2) ==> (x3 >= d3);\nloop invariant c1 ==> (x1 <= x1_max);\nloop invariant c2 ==> (x2 <= x2_max);\nloop invariant !(c1 && c2) ==> (x3 <= x3_max);\nloop invariant c1 ==> (x1 <= x1_max - d1);\nloop invariant c2 ==> (x2 <= x2_max - d2);\nloop invariant !(c1 && c2) ==> (x3 <= x3_max - d3);\nloop invariant c1 ==> (x1 >= 1);\nloop invariant c2 ==> (x2 >= 1);\nloop invariant !(c1 && c2) ==> (x3 >= 1);\nloop invariant c1 ==> (x1 >= d1);\nloop invariant c2 ==> (x2 >= d2);\nloop invariant !(c1 && c2) ==> (x3 >= d3);\nloop invariant c1 ==> (x1 <= x1_max);\nloop invariant c2 ==> (x2 <= x2_max);\nloop invariant !(c1 && c2) ==> (x3 <= x3_max);\nloop invariant c1 ==> (x1 <= x1_max - d1);\nloop invariant c2 ==> (x2 <= x2_max - d2);\nloop invariant !(c1 && c2) ==> (x3 <= x3_max - d3);\nloop invariant c1 ==> (x1 >= 1);\nloop invariant c2 ==> (x2 >= 1);\nloop invariant !(c1 && c2) ==> (x3 >= 1);\nloop invariant c1 ==> (x1 >= d1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n\nloop invariant i3: c1 == 0 || c1 == 1;\nloop invariant i4: c2 == 0 || c2 == 1;\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 16,
                "annotations": "```\n/*@\nloop invariant 1 <= x1 <= x1;\nloop invariant 1 <= x2 <= x2;\nloop invariant 1 <= x3 <= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x1 >= x3;\nloop invariant x2 >= x3;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 == unknown_bool() ==> x1 >= x1;\nloop invariant c1 == unknown_bool() ==> x2 >= x2;\nloop invariant c1 == unknown_bool() ==> x3 >= x3;\nloop invariant c2 == unknown_bool() ==> x1 >= x1;\nloop invariant c2 == unknown_bool() ==> x2 >= x2;\nloop invariant c2 == unknown_bool() ==> x3 >= x3;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x1 >= x2;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x1 >= x3;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x2 >= x3;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d1 >= 1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d2 >= 1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d3 >= 1;\nloop invariant c1 == unknown_bool() ==> d1 >= 1;\nloop invariant c1 == unknown_bool() ==> d2 >= 1;\nloop invariant c1 == unknown_bool() ==> d3 >= 1;\nloop invariant c2 == unknown_bool() ==> d1 >= 1;\nloop invariant c2 == unknown_bool() ==> d2 >= 1;\nloop invariant c2 == unknown_bool() ==> d3 >= 1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x1 >= x1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x2 >= x2;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x3 >= x3;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d1 >= 1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d2 >= 1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d3 >= 1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> c1 == unknown_bool();\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> c2 == unknown_bool();\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x1 >= x2;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x1 >= x3;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x2 >= x3;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d1 >= 1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d2 >= 1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d3 >= 1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> c1 == unknown_bool();\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> c2 == unknown_bool();\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x1 >= x2;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x1 >= x3;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x2 >= x3;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d1 >= 1;\nloop invariant x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d2 >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n\n\nloop invariant i4: x1 >= 0;\nloop invariant i5: x2 >= 0;\nloop invariant i6: x3 >= 0;\n\n\n\nloop invariant i10: d1 >= 1;\nloop invariant i11: d2 >= 1;\nloop invariant i12: d3 >= 1;\n\n\n\n\n\n\n\n\n\nloop invariant i22: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d1 >= 1;\nloop invariant i23: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d2 >= 1;\nloop invariant i24: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d3 >= 1;\n\n\n\n\n\n\nloop invariant i31: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x1 >= x1;\nloop invariant i32: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x2 >= x2;\nloop invariant i33: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x3 >= x3;\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 17: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\nloop invariant i1: 0 <= x1 <= unknown_uint();\nloop invariant i2: 0 <= x2 <= unknown_uint();\nloop invariant i3: 0 <= x3 <= unknown_uint();\nloop invariant i4: 1 <= d1 <= unknown_uint();\nloop invariant i5: 1 <= d2 <= unknown_uint();\nloop invariant i6: 1 <= d3 <= unknown_uint();\nloop invariant i7: 0 <= c1 <= 1;\nloop invariant i8: 0 <= c2 <= 1;\nloop invariant i9: (c1 ==> x1 - d1 >= 0);\nloop invariant i10: (c2 ==> x2 - d2 >= 0);\nloop invariant i11: (x1 > 0 ==> x1 >= d1);\nloop invariant i12: (x2 > 0 ==> x2 >= d2);\nloop invariant i13: (x3 > 0 ==> x3 >= d3);\nloop invariant i14: (x1 == 0 ==> x1 == 0);\nloop invariant i15: (x2 == 0 ==> x2 == 0);\nloop invariant i16: (x3 == 0 ==> x3 == 0);\nloop invariant i17: 0 <= d1 <= unknown_uint();\nloop invariant i18: 0 <= d2 <= unknown_uint();\nloop invariant i19: 0 <= d3 <= unknown_uint();\nloop invariant i20: (x1 > 0) ==> (c1 || !c2);\nloop invariant i21: (x2 > 0) ==> (!c1 || c2);\nloop invariant i22: (x3 > 0) ==> (!c1 && !c2);\nloop invariant i23: (!c1 || d1 == 0);\nloop invariant i24: (!c2 || d2 == 0);\nloop invariant i25: (!(!c1 && !c2) || d3 == 0);\nloop invariant i26: (x1 > 0) ==> (d1 == 1);\nloop invariant i27: (x2 > 0) ==> (d2 == 1);\nloop invariant i28: (x3 > 0) ==> (d3 == 1);\nloop invariant i29: (x1 > 0) ==> (d1 == 1 || d1 == 0);\nloop invariant i30: (x2 > 0) ==> (d2 == 1 || d2 == 0);\nloop invariant i31: (x3 > 0) ==> (d3 == 1 || d3 == 0);\nloop invariant i32: (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1);\nloop invariant i33: (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2);\nloop invariant i34: (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2);\nloop invariant i35: (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0);\nloop invariant i36: (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0);\nloop invariant i37: (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2 || d3 == 0);\nloop invariant i38: (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0 || c1);\nloop invariant i39: (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0 || c2);\nloop invariant i40: (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2 || d3 == 0 || !c1 && !c2);\nloop invariant i41: (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0 || c1 || c1);\nloop invariant i42: (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0 || c2 || c2);\nloop invariant i43: (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2 || d3 == 0 || !c1 && !c2 || !c1 && !c2);\nloop invariant i44: (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0 || c1 || c1 || c1);\nloop invariant i45: (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0 || c2 || c2 || c2);\nloop invariant i46: (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2 || d3 == 0 || !c1 && !c2 || !c1 && !c2 || !c1 && !c2);\nloop invariant i47: (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0 || c1 || c1 || c1 || c1);\nloop invariant i48: (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0 || c2 || c2 || c2 || c2);\nloop invariant i49: 0 <= x1 && x1 <= 4294967295;\nloop invariant i50: 0 <= x2 && x2 <= 4294967295;\nloop invariant i51: 0 <= x3 && x3 <= 4294967295;\nloop invariant i52: 0 <= d1 && d1 <= 4294967295;\nloop invariant i53: 0 <= d2 && d2 <= 4294967295;\nloop invariant i54: 0 <= d3 && d3 <= 4294967295;\nloop invariant i55: 0 <= c1 && c1 <= 1;\nloop invariant i56: 0 <= c2 && c2 <= 1;\nloop invariant i57: (x1 >= d1) ==> (x1 > 0);\nloop invariant i58: (x2 >= d2) ==> (x2 > 0);\nloop invariant i59: (x3 >= d3) ==> (x3 > 0);\nloop invariant i60: (c1 ==> x1 >= d1) && (c2 ==> x2 >= d2) && (!c1 && !c2 ==> x3 >= d3);\nloop invariant i61: (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant i62: (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 > 0) && (x2 > 0) && (x3 > 0);\nloop invariant i63: (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\nloop invariant i64: 0 <= d1 <= x1;loop invariant 0 <= d2 <= x2;loop invariant 0 <= d3 <= x3;loop invariant 0 <= x1 <= x1 + x2 + x3;loop invariant 0 <= x2 <= x1 + x2 + x3;loop invariant 0 <= x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;loop invariant x1 + x2 + x3 <= x1 + x2 + x3;\nloop invariant i65: 1 <= x2 <= unknown_uint();loop invariant 1 <= x3 <= unknown_uint();loop invariant 1 <= d1 <= 1;loop invariant 1 <= d2 <= 1;loop invariant 1 <= d3 <= 1;loop invariant c1 == unknown_bool();loop invariant c2 == unknown_bool();loop invariant x1 > 0 && x2 > 0 && x3 > 0 ==> (x1 >= d1 || x2 >= d2 || x3 >= d3);loop invariant x1 > 0 && x2 > 0 && x3 > 0 ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);loop invariant x1 > 0 && x2 > 0 && x3 > 0 ==> (x1 >= d1 || x2 >= d2 || x3 >= d3);loop invariant x1 > 0 && x2 > 0 && x3 > 0 ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant i66: x1 >= 0, x2 >= 0, x3 >= 0;\nloop invariant i67: x1 > 0 ==> d1 >= 1;\nloop invariant i68: x2 > 0 ==> d2 >= 1;\nloop invariant i69: x3 > 0 ==> d3 >= 1;\nloop invariant i70: x1 + x2 + x3 + d1 + d2 + d3 >= 1;\nloop invariant i71: c1 == unknown_bool();\nloop invariant i72: c2 == unknown_bool();\nloop invariant i73: x1 > 0 ==> x1 >= d1;\nloop invariant i74: x2 > 0 ==> x2 >= d2;\nloop invariant i75: x3 > 0 ==> x3 >= d3;\nloop invariant i76: x1 > 0 ==> x1 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant i77: x2 > 0 ==> x2 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant i78: x3 > 0 ==> x3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant i79: x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 == 1;\nloop invariant i80: x1 == 0 || x2 == 0 || x3 == 0 ==> x1 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant i81: x1 == 0 || x2 == 0 || x3 == 0 ==> x2 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant i82: x1 == 0 || x2 == 0 || x3 == 0 ==> x3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant i83: x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant i84: 1 <= x1 <= unknown_uint();\nloop invariant i85: 1 <= x2 <= unknown_uint();\nloop invariant i86: 1 <= x3 <= unknown_uint();\nloop invariant i87: 0 <= d1 <= x1;\nloop invariant i88: 0 <= d2 <= x2;\nloop invariant i89: 0 <= d3 <= x3;\nloop invariant i90: 1 <= d1 <= x1;\nloop invariant i91: 1 <= d2 <= x2;\nloop invariant i92: 1 <= d3 <= x3;\nloop invariant i93: x1 > 0;\nloop invariant i94: x2 > 0;\nloop invariant i95: x3 > 0;\nloop invariant i96: x1 + x2 + x3 == unknown_uint();\nloop invariant i97: d1 + d2 + d3 == 3;\nloop invariant i98: x1 - x2 >= 0;\nloop invariant i99: x2 - x3 >= 0;\nloop invariant i100: x3 - x1 >= 0;\nloop invariant i101: c1 ==> x1 - d1 >= 0;\nloop invariant i102: c2 ==> x2 - d2 >= 0;\nloop invariant i103: !c1 && !c2 ==> x3 - d3 >= 0;\nloop invariant i104: c1 ==> x1 == unknown_uint() || x1 == 1;\nloop invariant i105: c2 ==> x2 == unknown_uint() || x2 == 1;\nloop invariant i106: !c1 && !c2 ==> x3 == unknown_uint() || x3 == 1;\nloop invariant i107: 0 <= x1 <= x1 + d1;\nloop invariant i108: 0 <= x2 <= x2 + d2;\nloop invariant i109: 0 <= x3 <= x3 + d3;\nloop invariant i110: d1 >= 1;\nloop invariant i111: d2 >= 1;\nloop invariant i112: d3 >= 1;\nloop invariant i113: c1 || c2;\nloop invariant i114: 0 <= d1 <= 1;\nloop invariant i115: 0 <= d2 <= 1;\nloop invariant i116: 0 <= d3 <= 1;\nloop invariant i117: x1 > 0 ==> c1 == 1;\nloop invariant i118: x2 > 0 ==> c2 == 1;\nloop invariant i119: x3 > 0 ==> c1 == 0 && c2 == 0;\nloop invariant i120: x1 <= (x1 + d1);\nloop invariant i121: x2 <= (x2 + d2);\nloop invariant i122: x3 <= (x3 + d3);\nloop invariant i123: x1 >= (x1 - d1);\nloop invariant i124: x2 >= (x2 - d2);\nloop invariant i125: x3 >= (x3 - d3);\nloop invariant i126: x1 >= 0;\nloop invariant i127: x2 >= 0;\nloop invariant i128: x3 >= 0;\nloop invariant i129: d1 >= 0;\nloop invariant i130: d2 >= 0;\nloop invariant i131: d3 >= 0;\nloop invariant i132: c1 == 0 || c1 == 1;\nloop invariant i133: c2 == 0 || c2 == 1;\nloop invariant i134: 0 <= x1 <= x1_0;\nloop invariant i135: 0 <= x2 <= x2_0;\nloop invariant i136: 0 <= x3 <= x3_0;\nloop invariant i137: d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant i138: x1 + x2 + x3 == x1_0 + x2_0 + x3_0;\nloop invariant i139: d1 * c1 + d2 * c2 + d3 * (1 - c1 - c2) <= x1_0;\nloop invariant i140: d1 * c1 + d2 * c2 + d3 * (1 - c1 - c2) <= x2_0;\nloop invariant i141: d1 * c1 + d2 * c2 + d3 * (1 - c1 - c2) <= x3_0;\nloop invariant i142: if c1 == 0 then d1 == 1 else d1 >= 1;\nloop invariant i143: if c2 == 0 then d2 == 1 else d2 >= 1;\nloop invariant i144: if (c1 == 0 && c2 == 0) then d3 == 1 else d3 >= 1;\nloop invariant i145: x1_0 >= 0 && x2_0 >= 0 && x3_0 >= 0;\nloop invariant i146: x1 + x2 + x3 >= 0;\nloop invariant i147: x1_0 >= x1 && x2_0 >= x2 && x3_0 >= x3;\nloop invariant i148: x1_0 <= x1 && x2_0 <= x2 && x3_0 <= x3;\nloop invariant i149: x1_0 <= x1_0 + x2_0 + x3_0;\nloop invariant i150: x2_0 <= x1_0 + x2_0 + x3_0;\nloop invariant i151: x3_0 <= x1_0 + x2_0 + x3_0;\nloop invariant i152: x1 <= x1_0 && x2 <= x2_0 && x3 <= x3_0;\nloop invariant i153: x1 <= x1_0 + x2_0 + x3_0;\nloop invariant i154: x2 <= x1_0 + x2_0 + x3_0;\nloop invariant i155: x3 <= x1_0 + x2_0 + x3_0;\nloop invariant i156: x1_0 == x1 + d1 * c1;\nloop invariant i157: x2_0 == x2 + d2 * c2;\nloop invariant i158: x3_0 == x3 + d3 * (1 - c1 - c2);\nloop invariant i159: x1_0 >= 0;\nloop invariant i160: x2_0 >= 0;\nloop invariant i161: x3_0 >= 0;\nloop invariant i162: x1 + x2 + x3 <= x1_0 + x2_0 + x3_0;\nloop invariant i163: x1 <= x1_0;\nloop invariant i164: x2 <= x2_0;\nloop invariant i165: x3 <= x3_0;\nloop invariant i166: x1 <= unknown_uint();\nloop invariant i167: x2 <= unknown_uint();\nloop invariant i168: x3 <= unknown_uint();\nloop invariant i169: d1 == 1;\nloop invariant i170: d2 == 1;\nloop invariant i171: d3 == 1;\nloop invariant i172: x1 >= x2;\nloop invariant i173: x1 >= x3;\nloop invariant i174: x2 >= x3;\nloop invariant i175: x1 - x2 <= x3;\nloop invariant i176: x1 - x3 <= x2;\nloop invariant i177: x2 - x3 <= x1;\nloop invariant i178: x1 + x2 + x3 <= 3 * unknown_uint();\nloop invariant i179: 1 <= x1 <= x1_max && 1 <= x2 <= x2_max && 1 <= x3 <= x3_max;\nloop invariant i180: 1 <= d1 <= d1_max && 1 <= d2 <= d2_max && 1 <= d3 <= d3_max;\nloop invariant i181: c1 ==> (x1 >= d1);\nloop invariant i182: c2 ==> (x2 >= d2);\nloop invariant i183: !(c1 && c2) ==> (x3 >= d3);\nloop invariant i184: c1 ==> (x1 <= x1_max);\nloop invariant i185: c2 ==> (x2 <= x2_max);\nloop invariant i186: !(c1 && c2) ==> (x3 <= x3_max);\nloop invariant i187: c1 ==> (x1 <= x1_max - d1);\nloop invariant i188: c2 ==> (x2 <= x2_max - d2);\nloop invariant i189: !(c1 && c2) ==> (x3 <= x3_max - d3);\nloop invariant i190: c1 ==> (x1 >= 1);\nloop invariant i191: c2 ==> (x2 >= 1);\nloop invariant i192: !(c1 && c2) ==> (x3 >= 1);\nloop invariant i193: 1 <= x1 <= x1;\nloop invariant i194: 1 <= x2 <= x2;\nloop invariant i195: 1 <= x3 <= x3;\nloop invariant i196: c1 == unknown_bool() ==> x1 >= x1;\nloop invariant i197: c1 == unknown_bool() ==> x2 >= x2;\nloop invariant i198: c1 == unknown_bool() ==> x3 >= x3;\nloop invariant i199: c2 == unknown_bool() ==> x1 >= x1;\nloop invariant i200: c2 == unknown_bool() ==> x2 >= x2;\nloop invariant i201: c2 == unknown_bool() ==> x3 >= x3;\nloop invariant i202: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x1 >= x2;\nloop invariant i203: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x1 >= x3;\nloop invariant i204: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x2 >= x3;\nloop invariant i205: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d1 >= 1;\nloop invariant i206: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d2 >= 1;\nloop invariant i207: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d3 >= 1;\nloop invariant i208: c1 == unknown_bool() ==> d1 >= 1;\nloop invariant i209: c1 == unknown_bool() ==> d2 >= 1;\nloop invariant i210: c1 == unknown_bool() ==> d3 >= 1;\nloop invariant i211: c2 == unknown_bool() ==> d1 >= 1;\nloop invariant i212: c2 == unknown_bool() ==> d2 >= 1;\nloop invariant i213: c2 == unknown_bool() ==> d3 >= 1;\nloop invariant i214: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x1 >= x1;\nloop invariant i215: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x2 >= x2;\nloop invariant i216: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x3 >= x3;\nloop invariant i217: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> c1 == unknown_bool();\nloop invariant i218: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> c2 == unknown_bool();\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 87,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n\n\n\n\n\nloop invariant i7: 0 <= c1 <= 1;\nloop invariant i8: 0 <= c2 <= 1;\n\n\nloop invariant i11: (x1 > 0 ==> x1 >= d1);\nloop invariant i12: (x2 > 0 ==> x2 >= d2);\nloop invariant i13: (x3 > 0 ==> x3 >= d3);\nloop invariant i14: (x1 == 0 ==> x1 == 0);\nloop invariant i15: (x2 == 0 ==> x2 == 0);\nloop invariant i16: (x3 == 0 ==> x3 == 0);\n\n\n\n\n\n\n\n\n\nloop invariant i26: (x1 > 0) ==> (d1 == 1);\nloop invariant i27: (x2 > 0) ==> (d2 == 1);\nloop invariant i28: (x3 > 0) ==> (d3 == 1);\nloop invariant i29: (x1 > 0) ==> (d1 == 1 || d1 == 0);\nloop invariant i30: (x2 > 0) ==> (d2 == 1 || d2 == 0);\nloop invariant i31: (x3 > 0) ==> (d3 == 1 || d3 == 0);\nloop invariant i32: (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1);\nloop invariant i33: (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2);\nloop invariant i34: (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2);\nloop invariant i35: (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0);\nloop invariant i36: (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0);\nloop invariant i37: (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2 || d3 == 0);\nloop invariant i38: (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0 || c1);\nloop invariant i39: (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0 || c2);\nloop invariant i40: (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2 || d3 == 0 || !c1 && !c2);\nloop invariant i41: (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0 || c1 || c1);\nloop invariant i42: (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0 || c2 || c2);\nloop invariant i43: (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2 || d3 == 0 || !c1 && !c2 || !c1 && !c2);\nloop invariant i44: (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0 || c1 || c1 || c1);\nloop invariant i45: (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0 || c2 || c2 || c2);\nloop invariant i46: (x3 > 0) ==> (d3 == 1 || d3 == 0 || !c1 && !c2 || d3 == 0 || !c1 && !c2 || !c1 && !c2 || !c1 && !c2);\nloop invariant i47: (x1 > 0) ==> (d1 == 1 || d1 == 0 || c1 || d1 == 0 || c1 || c1 || c1 || c1);\nloop invariant i48: (x2 > 0) ==> (d2 == 1 || d2 == 0 || c2 || d2 == 0 || c2 || c2 || c2 || c2);\nloop invariant i49: 0 <= x1 && x1 <= 4294967295;\nloop invariant i50: 0 <= x2 && x2 <= 4294967295;\nloop invariant i51: 0 <= x3 && x3 <= 4294967295;\nloop invariant i52: 0 <= d1 && d1 <= 4294967295;\nloop invariant i53: 0 <= d2 && d2 <= 4294967295;\nloop invariant i54: 0 <= d3 && d3 <= 4294967295;\nloop invariant i55: 0 <= c1 && c1 <= 1;\nloop invariant i56: 0 <= c2 && c2 <= 1;\nloop invariant i57: (x1 >= d1) ==> (x1 > 0);\nloop invariant i58: (x2 >= d2) ==> (x2 > 0);\nloop invariant i59: (x3 >= d3) ==> (x3 > 0);\n\n\nloop invariant i62: (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 > 0) && (x2 > 0) && (x3 > 0);\nloop invariant i63: (x1 >= d1) && (x2 >= d2) && (x3 >= d3) ==> (x1 >= d1) && (x2 >= d2) && (x3 >= d3);\n\n\n\nloop invariant i67: x1 > 0 ==> d1 >= 1;\nloop invariant i68: x2 > 0 ==> d2 >= 1;\nloop invariant i69: x3 > 0 ==> d3 >= 1;\nloop invariant i70: x1 + x2 + x3 + d1 + d2 + d3 >= 1;\n\n\nloop invariant i73: x1 > 0 ==> x1 >= d1;\nloop invariant i74: x2 > 0 ==> x2 >= d2;\nloop invariant i75: x3 > 0 ==> x3 >= d3;\nloop invariant i76: x1 > 0 ==> x1 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant i77: x2 > 0 ==> x2 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant i78: x3 > 0 ==> x3 <= x1 + x2 + x3 + d1 + d2 + d3;\n\nloop invariant i80: x1 == 0 || x2 == 0 || x3 == 0 ==> x1 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant i81: x1 == 0 || x2 == 0 || x3 == 0 ==> x2 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant i82: x1 == 0 || x2 == 0 || x3 == 0 ==> x3 <= x1 + x2 + x3 + d1 + d2 + d3;\nloop invariant i83: x1 == 0 || x2 == 0 || x3 == 0 ==> x1 + x2 + x3 + d1 + d2 + d3 <= x1 + x2 + x3 + d1 + d2 + d3;\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i97: d1 + d2 + d3 == 3;\n\n\n\n\n\n\n\n\n\nloop invariant i107: 0 <= x1 <= x1 + d1;\nloop invariant i108: 0 <= x2 <= x2 + d2;\nloop invariant i109: 0 <= x3 <= x3 + d3;\nloop invariant i110: d1 >= 1;\nloop invariant i111: d2 >= 1;\nloop invariant i112: d3 >= 1;\n\nloop invariant i114: 0 <= d1 <= 1;\nloop invariant i115: 0 <= d2 <= 1;\nloop invariant i116: 0 <= d3 <= 1;\n\n\n\nloop invariant i120: x1 <= (x1 + d1);\nloop invariant i121: x2 <= (x2 + d2);\nloop invariant i122: x3 <= (x3 + d3);\nloop invariant i123: x1 >= (x1 - d1);\nloop invariant i124: x2 >= (x2 - d2);\nloop invariant i125: x3 >= (x3 - d3);\nloop invariant i126: x1 >= 0;\nloop invariant i127: x2 >= 0;\nloop invariant i128: x3 >= 0;\nloop invariant i129: d1 >= 0;\nloop invariant i130: d2 >= 0;\nloop invariant i131: d3 >= 0;\nloop invariant i132: c1 == 0 || c1 == 1;\nloop invariant i133: c2 == 0 || c2 == 1;\n\n\n\nloop invariant i137: d1 >= 1 && d2 >= 1 && d3 >= 1;\n\n\n\n\n\n\n\n\nloop invariant i146: x1 + x2 + x3 >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i169: d1 == 1;\nloop invariant i170: d2 == 1;\nloop invariant i171: d3 == 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i205: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d1 >= 1;\nloop invariant i206: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d2 >= 1;\nloop invariant i207: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> d3 >= 1;\n\n\n\n\n\n\nloop invariant i214: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x1 >= x1;\nloop invariant i215: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x2 >= x2;\nloop invariant i216: x1 >= x1 && x2 >= x2 && x3 >= x3 ==> x3 >= x3;\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c"
        ],
        "skipped": [],
        "total": 67,
        "success_count": 57,
        "failure_count": 10,
        "success_rate": 0.8507462686567164
    }
}