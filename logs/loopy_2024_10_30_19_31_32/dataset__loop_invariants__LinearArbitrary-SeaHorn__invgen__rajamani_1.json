{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  while ( unknown() ){\n    if ( unknown() ) {\n      x++; y = y+100;\n    } else if  ( unknown() ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 1000000;\nloop invariant 0 <= z <= 100000;\nloop invariant 0 <= w <= 100000;\nloop invariant (x >= 4) ==> (y > 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 100;\nloop invariant 0 <= z <= w * 10;\nloop invariant 0 <= w <= 100000;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y <= 10 * w;\nloop invariant z <= 100 * x;\nloop invariant x >= (y / 100 - 1);\nloop invariant x < 4 ==> y >= 100;\nloop invariant x >= 4 ==> y > 2;\nloop invariant x >= 4 ==> z >= 100 * x;\nloop invariant x >= 4 ==> w >= z / 10;\nloop invariant x >= 4 ==> y <= w * 10;\nloop invariant x >= 4 ==> y >= 0;\nloop invariant x >= 4 ==> z >= 0;\nloop invariant x >= 4 ==> w >= 0;\nloop invariant x >= 4 ==> w <= 100000;\nloop invariant x >= 4 ==> z <= w * 10;\nloop invariant x >= 4 ==> x >= 0;\nloop invariant x >= 4 ==> y >= 0;\nloop invariant x >= 4 ==> z >= 0;\nloop invariant x >= 4 ==> w >= 0;\nloop invariant x >= 4 ==> w <= 100000;\nloop invariant x >= 4 ==> z <= w * 10;\nloop invariant x >= 4 ==> x >= 0;\nloop invariant x >= 4 ==> y >= 0;\nloop invariant x >= 4 ==> z >= 0;\nloop invariant x >= 4 ==> w >= 0;\nloop invariant x >= 4 ==> w <= 100000;\nloop invariant x >= 4 ==> z <= w * 10;\nloop invariant x >= 4 ==> x >= 0;\nloop invariant x >= 4 ==> y >= 0;\nloop invariant x >= 4 ==> z >= 0;\nloop invariant x >= 4 ==> w >= 0;\nloop invariant x >= 4 ==> w <= 100000;\nloop invariant x >= 4 ==> z <= w * 10;\nloop invariant x >= 4 ==> x >= 0;\nloop invariant x >= 4 ==> y >= 0;\nloop invariant x >= 4 ==> z >= 0;\nloop invariant x >= 4 ==> w >= 0;\nloop invariant x >= 4 ==> w <= 100000;\nloop invariant x >= 4 ==> z <= w * 10;\nloop invariant x >= 4 ==> x >= 0;\nloop invariant x >= 4 ==> y >= 0;\nloop invariant x >= 4 ==> z >= 0;\nloop invariant x >= 4 ==> w >= 0;\nloop invariant x >= 4 ==> w <= 100000;\nloop invariant x >= 4 ==> z <= w * 10;\nloop invariant x >= 4 ==> x >= 0;\nloop invariant x >= 4 ==> y >= 0;\nloop invariant x >= 4 ==> z >= 0;\nloop invariant x >= 4 ==> w >= 0;\nloop invariant x >= 4 ==> w <= 100000;\nloop invariant x >= 4 ==> z <= w * 10;\nloop invariant x >= 4 ==> x >= 0;\nloop invariant x >= 4 ==> y >= 0;\nloop invariant x >= 4 ==> z >= 0;\nloop invariant x >= 4 ==> w >= 0;\nloop invariant x >= 4 ==> w <= 100000;\nloop invariant x >= 4 ==> z <= w * 10;\nloop invariant x >= 4 ==> x >= 0;\nloop invariant x >= 4 ==> y >= 0;\nloop invariant x >= 4 ==> z >= 0;\nloop invariant x >= 4 ==> w >= 0;\nloop invariant x >= 4 ==> w <= 100000;\nloop invariant x >= 4 ==> z <= w * 10;\nloop invariant x >= 4 ==> x >= 0;\nloop invariant x >= 4 ==> y >= 0;\nloop invariant x >= 4 ==> z >= 0;\nloop invariant x >= 4 ==> w >= 0;\nloop invariant x >= 4 ==> w <= 100000;\nloop invariant x >= 4 ==> z <= w * 10;\nloop invariant x >= 4 ==> x >= 0;\nloop invariant x >= 4 ==> y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 1000;\nloop invariant 0 <= z <= 1000;\nloop invariant 0 <= w <= 500;\nloop invariant y <= 100*x;\nloop invariant y <= 10*w;\nloop invariant z <= 10*w;\nloop invariant y >= -10*w;\nloop invariant x <= 4 ==> y <= 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant y < 100000;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant z <= 100000;\nloop invariant w <= 100000;\nloop invariant x <= y;\nloop invariant y <= 10*w;\nloop invariant z <= 100*x;\nloop invariant x >= z;\nloop invariant y >= -y;\nloop invariant y >= 2;\nloop invariant x >= 4;\nloop invariant y <= 2;\nloop invariant x <= 3;\nloop invariant y <= 1;\nloop invariant x <= 2;\nloop invariant y <= 0;\nloop invariant x <= 1;\nloop invariant y <= -1;\nloop invariant x <= 0;\nloop invariant y <= -2;\nloop invariant x <= -1;\nloop invariant y <= -3;\nloop invariant x <= -2;\nloop invariant y <= -4;\nloop invariant x <= -3;\nloop invariant y <= -5;\nloop invariant x <= -4;\nloop invariant y <= -6;\nloop invariant x <= -5;\nloop invariant y <= -7;\nloop invariant x <= -6;\nloop invariant y <= -8;\nloop invariant x <= -7;\nloop invariant y <= -9;\nloop invariant x <= -8;\nloop invariant y <= -10;\nloop invariant x <= -9;\nloop invariant y <= -11;\nloop invariant x <= -10;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant z >= w * 10;\nloop invariant 0 <= w <= 100000;\nloop invariant 0 <= x <= 100000;\nloop invariant 0 <= z <= 1000000;\nloop invariant (unknown() ==> y > 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 99999;\nloop invariant 0 <= y <= 99999;\nloop invariant 0 <= z <= 99999;\nloop invariant 0 <= w <= 99999;\nloop invariant 0 <= (x - y) <= 99999;\nloop invariant 0 <= (y - x) <= 99999;\nloop invariant 0 <= (z - w) <= 99999;\nloop invariant 0 <= (w - z) <= 99999;\nloop invariant (x == 0) ==> (y == 0);\nloop invariant (x == 0) ==> (z == 0);\nloop invariant (x == 0) ==> (w == 0);\nloop invariant (x == 1) ==> (y == 100);\nloop invariant (x == 2) ==> (y == 200);\nloop invariant (x == 3) ==> (y == 300);\nloop invariant (x == 4) ==> (y == 400);\nloop invariant (x >= 5) ==> (y >= 500);\nloop invariant (x >= 6) ==> (y >= 600);\nloop invariant (x >= 7) ==> (y >= 700);\nloop invariant (x >= 8) ==> (y >= 800);\nloop invariant (x >= 9) ==> (y >= 900);\nloop invariant (x >= 10) ==> (y >= 1000);\nloop invariant (x >= 11) ==> (y >= 1100);\nloop invariant (x >= 12) ==> (y >= 1200);\nloop invariant (x >= 13) ==> (y >= 1300);\nloop invariant (x >= 14) ==> (y >= 1400);\nloop invariant (x >= 15) ==> (y >= 1500);\nloop invariant (x >= 16) ==> (y >= 1600);\nloop invariant (x >= 17) ==> (y >= 1700);\nloop invariant (x >= 18) ==> (y >= 1800);\nloop invariant (x >= 19) ==> (y >= 1900);\nloop invariant (x >= 20) ==> (y >= 2000);\nloop invariant (x >= 21) ==> (y >= 2100);\nloop invariant (x >= 22) ==> (y >= 2200);\nloop invariant (x >= 23) ==> (y >= 2300);\nloop invariant (x >= 24) ==> (y >= 2400);\nloop invariant (x >= 25) ==> (y >= 2500);\nloop invariant (x >= 26) ==> (y >= 2600);\nloop invariant (x >= 27) ==> (y >= 2700);\nloop invariant (x >= 28) ==> (y >= 2800);\nloop invariant (x >= 29) ==> (y >= 2900);\nloop invariant (x >= 30) ==> (y >= 3000);\nloop invariant (x >= 31) ==> (y >= 3100);\nloop invariant (x >= 32) ==> (y >= 3200);\nloop invariant (x >= 33) ==> (y >= 3300);\nloop invariant (x >= 34) ==> (y >= 3400);\nloop invariant (x >= 35) ==> (y >= 3500);\nloop invariant (x >= 36) ==> (y >= 3600);\nloop invariant (x >= 37) ==> (y >= 3700);\nloop invariant (x >= 38) ==> (y >= 3800);\nloop invariant (x >= 39) ==> (y >= 3900);\nloop invariant (x >= 40) ==> (y >= 4000);\nloop invariant (x >= 41) ==> (y >= 4100);\nloop invariant (x >= 42) ==> (y >= 4200);\nloop invariant (x >= 43) ==> (y >= 4300);\nloop invariant (x >= 44) ==> (y >= 4400);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 100000;\nloop invariant 0 <= z <= 100000;\nloop invariant 0 <= w <= 100000;\nloop invariant y <= 10*w;\nloop invariant if (x < 4) then y <= 100000 else y >= 100000;\nloop invariant if (x < 4) then z <= 100000 else z >= 100000;\nloop invariant if (x < 4) then w <= 100000 else w >= 100000;\nloop invariant if (x < 4) then y <= 10*w else y >= 10*w;\nloop invariant if (x < 4) then z <= 100*x else z >= 100*x;\nloop invariant if (x < 4) then w <= 100000 else w >= 100000;\nloop invariant if (x < 4) then y <= 100000 else y >= 100000;\nloop invariant if (x < 4) then z <= 100000 else z >= 100000;\nloop invariant if (x < 4) then w <= 100000 else w >= 100000;\nloop invariant if (x < 4) then y <= 10*w else y >= 10*w;\nloop invariant if (x < 4) then z <= 100*x else z >= 100*x;\nloop invariant if (x < 4) then w <= 100000 else w >= 100000;\nloop invariant if (x < 4) then y <= 100000 else y >= 100000;\nloop invariant if (x < 4) then z <= 100000 else z >= 100000;\nloop invariant if (x < 4) then w <= 100000 else w >= 100000;\nloop invariant if (x < 4) then y <= 10*w else y >= 10*w;\nloop invariant if (x < 4) then z <= 100*x else z >= 100*x;\nloop invariant if (x < 4) then w <= 100000 else w >= 100000;\nloop invariant if (x < 4) then y <= 100000 else y >= 100000;\nloop invariant if (x < 4) then z <= 100000 else z >= 100000;\nloop invariant if (x < 4) then w <= 100000 else w >= 100000;\nloop invariant if (x < 4) then y <= 10*w else y >= 10*w;\nloop invariant if (x < 4) then z <= 100*x else z >= 100*x;\nloop invariant if (x < 4) then w <= 100000 else w >= 100000;\nloop invariant if (x < 4) then y <= 100000 else y >= 100000;\nloop invariant if (x < 4) then z <= 100000 else z >= 100000;\nloop invariant if (x < 4) then w <= 100000 else w >= 100000;\nloop invariant if (x < 4) then y <= 10*w else y >= 10*w;\nloop invariant if (x < 4) then z <= 100*x else z >= 100*x;\nloop invariant if (x < 4) then w <= 100000 else w >= 100000;\nloop invariant if (x < 4) then y <= 100000 else y >= 100000;\nloop invariant if (x < 4) then z <= 100000 else z >= 100000;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant x == y / 100;\nloop invariant y == 100 * z - 1000;\nloop invariant 0 <= z <= 100 * w;\nloop invariant w == y / 100 + 1;\nloop invariant x == 4;\nloop invariant y == 400;\nloop invariant z == 400;\nloop invariant w == 5;\nloop invariant x == z;\nloop invariant y == 400;\nloop invariant z == 400;\nloop invariant w == 5;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x < 4 || y <= 10*w || z < 100*x;\nloop invariant x >= 0 ==> y <= 100000;\nloop invariant x >= 0 ==> y >= 0;\nloop invariant x >= 0 ==> w >= 0;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> x < 4 || y <= 10*w || z < 100*x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 100;\nloop invariant 0 <= z <= 40;\nloop invariant 0 <= w <= 4;\nloop invariant w == 1 ==> y == 0;\nloop invariant w == 2 ==> y == 100;\nloop invariant w == 3 ==> y == 200;\nloop invariant w == 4 ==> y == 300;\nloop invariant w == 1 ==> z == 10;\nloop invariant w == 2 ==> z == 210;\nloop invariant w == 3 ==> z == 310;\nloop invariant w == 4 ==> z == 410;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 100000;\nloop invariant x <= z <= 100 * x;\nloop invariant y <= w <= y + 100;\nloop invariant x >= 4 ==> y > 2;\nloop invariant x < 4 ==> y <= 2;\nloop invariant y < 10 * w ==> z < 100 * x;\nloop invariant y >= 10 * w ==> z > 100 * x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 1000;\nloop invariant 0 <= z <= 1000;\nloop invariant 0 <= w <= 100;\nloop invariant x >= 4 ==> x >= 4;\nloop invariant y >= 10*w ==> y >= 10*w;\nloop invariant z >= 100*x ==> z >= 100*x;\nloop invariant w >= 1 ==> w >= 1;\nloop invariant z >= 10 ==> z >= 10;\nloop invariant y >= 1 ==> y >= 1;\nloop invariant z >= 100 ==> z >= 100;\nloop invariant w >= 10 ==> w >= 10;\nloop invariant z >= 1000 ==> z >= 1000;\nloop invariant w >= 100 ==> w >= 100;\nloop invariant y >= 10*w ==> y >= 10*w;\nloop invariant z >= 100*x ==> z >= 100*x;\nloop invariant w >= 1 ==> w >= 1;\nloop invariant z >= 10 ==> z >= 10;\nloop invariant y >= 1 ==> y >= 1;\nloop invariant z >= 100 ==> z >= 100;\nloop invariant w >= 10 ==> w >= 10;\nloop invariant z >= 1000 ==> z >= 1000;\nloop invariant w >= 100 ==> w >= 100;\nloop invariant y >= 10*w ==> y >= 10*w;\nloop invariant z >= 100*x ==> z >= 100*x;\nloop invariant w >= 1 ==> w >= 1;\nloop invariant z >= 10 ==> z >= 10;\nloop invariant y >= 1 ==> y >= 1;\nloop invariant z >= 100 ==> z >= 100;\nloop invariant w >= 10 ==> w >= 10;\nloop invariant z >= 1000 ==> z >= 1000;\nloop invariant w >= 100 ==> w >= 100;\nloop invariant y >= 10*w ==> y >= 10*w;\nloop invariant z >= 100*x ==> z >= 100*x;\nloop invariant w >= 1 ==> w >= 1;\nloop invariant z >= 10 ==> z >= 10;\nloop invariant y >= 1 ==> y >= 1;\nloop invariant z >= 100 ==> z >= 100;\nloop invariant w >= 10 ==> w >= 10;\nloop invariant z >= 1000 ==> z >= 1000;\nloop invariant w >= 100 ==> w >= 100;\nloop invariant y >= 10*w ==> y >= 10*w;\nloop invariant z >= 100*x ==> z >= 100*x;\nloop invariant w >= 1 ==> w >= 1;\nloop invariant z >= 10 ==> z >= 10;\nloop invariant y >= 1 ==> y >= 1;\nloop invariant z >= 100 ==> z >= 100;\nloop invariant w >= 10 ==> w >= 10;\nloop invariant z >= 1000 ==> z >= 1000;\nloop invariant w >= 100 ==> w >= 100;\nloop invariant y >= 10*w ==> y >= 10*w;\nloop invariant z >= 100*x ==> z >= 100*x;\nloop invariant w >= 1 ==> w >= 1;\nloop invariant z >= 10 ==> z >= 10;\nloop invariant y >= 1 ==> y >= 1;\nloop invariant z >= 100 ==> z >= 100;\nloop invariant w >= 10 ==> w >= 10;\nloop invariant z >= 1000 ==> z >= 1000;\nloop invariant w >= 100 ==> w >= 100;\nloop invariant y >= 10*w ==> y >= 10*w;\nloop invariant z >= 100*x ==> z >= 100*x;\nloop invariant w >= 1 ==> w >= 1;\nloop invariant z >= 10 ==> z >= 10;\nloop invariant y >= 1 ==> y >= 1;\nloop invariant z >= 100 ==> z >= 100;\nloop invariant w >= 10 ==> w >= 10;\nloop invariant z >= 1000 ==> z >= 1000;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= w <= 2147483647;\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 400;\nloop invariant 0 <= z <= 40;\nloop invariant x == 0 ==> !(y > 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 400;\nloop invariant 0 <= z <= 4000;\nloop invariant 0 <= w <= 400000;\nloop invariant x == 1 ==> y == 100;\nloop invariant x == 1 ==> z == 1000;\nloop invariant x == 1 ==> w == 10000;\nloop invariant x == 2 ==> y == 200;\nloop invariant x == 2 ==> z == 2000;\nloop invariant x == 2 ==> w == 20000;\nloop invariant x == 3 ==> y == 300;\nloop invariant x == 3 ==> z == 3000;\nloop invariant x == 3 ==> w == 30000;\nloop invariant x == 4 ==> y == 400;\nloop invariant x == 4 ==> z == 4000;\nloop invariant x == 4 ==> w == 40000;\nloop invariant y > 10*w ==> y == -y;\nloop invariant z >= 100*x ==> y == -y;\nloop invariant y <= 10*w ==> y >= 0;\nloop invariant z < 100*x ==> y >= 0;\nloop invariant x < 4 ==> y >= 0;\nloop invariant x < 4 ==> y <= 400;\nloop invariant x < 4 ==> z >= 0;\nloop invariant x < 4 ==> z <= 4000;\nloop invariant w < 400000 ==> w >= 0;\nloop invariant w < 400000 ==> w <= 400000;\nloop invariant z < 4000 ==> z >= 0;\nloop invariant z < 4000 ==> z <= 4000;\nloop invariant y < 400 ==> y >= 0;\nloop invariant y < 400 ==> y <= 400;\nloop invariant w < 400000 ==> w >= 0;\nloop invariant w < 400000 ==> w <= 400000;\nloop invariant z < 4000 ==> z >= 0;\nloop invariant z < 4000 ==> z <= 4000;\nloop invariant y < 400 ==> y >= 0;\nloop invariant y < 400 ==> y <= 400;\nloop invariant w < 400000 ==> w >= 0;\nloop invariant w < 400000 ==> w <= 400000;\nloop invariant z < 4000 ==> z >= 0;\nloop invariant z < 4000 ==> z <= 4000;\nloop invariant y < 400 ==> y >= 0;\nloop invariant y < 400 ==> y <= 400;\nloop invariant w < 400000 ==> w >= 0;\nloop invariant w < 400000 ==> w <= 400000;\nloop invariant z < 4000 ==> z >= 0;\nloop invariant z < 4000 ==> z <= 4000;\nloop invariant y < 400 ==> y >= 0;\nloop invariant y < 400 ==> y <= 400;\nloop invariant w < 400000 ==> w >= 0;\nloop invariant w < 400000 ==> w <= 400000;\nloop invariant z < 4000 ==> z >= 0;\nloop invariant z < 4000 ==> z <= 4000;\nloop invariant y < 400 ==> y >= 0;\nloop invariant y < 400 ==> y <= 400;\nloop invariant w < 400000 ==> w >= 0;\nloop invariant w < 400000 ==> w <= 400000;\nloop invariant z < 4000 ==> z >= 0;\nloop invariant z < 4000 ==> z <= 4000;\nloop invariant y < 400 ==> y >= 0;\nloop invariant y < 400 ==> y <= 400;\nloop invariant w < 400000 ==> w >= 0;\nloop invariant w < 400000 ==> w <= 400000;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= 1000000;\nloop invariant 0 <= z <= 100000;\nloop invariant 0 <= w <= 100000;\nloop invariant (x >= 4) ==> (y > 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\n\n\n\n\n*/\nwhile ( unknown() ){\n    if ( unknown() ) {\n      x++; y = y+100;\n    } else if  ( unknown() ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 100;\nloop invariant 0 <= z <= w * 10;\nloop invariant 0 <= w <= 100000;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y <= 10 * w;\nloop invariant z <= 100 * x;\nloop invariant x >= (y / 100 - 1);\nloop invariant x < 4 ==> y >= 100;\nloop invariant x >= 4 ==> y > 2;\nloop invariant x >= 4 ==> z >= 100 * x;\nloop invariant x >= 4 ==> w >= z / 10;\nloop invariant x >= 4 ==> y <= w * 10;\nloop invariant x >= 4 ==> y >= 0;\nloop invariant x >= 4 ==> z >= 0;\nloop invariant x >= 4 ==> w >= 0;\nloop invariant x >= 4 ==> w <= 100000;\nloop invariant x >= 4 ==> z <= w * 10;\nloop invariant x >= 4 ==> x >= 0;\nloop invariant x >= 4 ==> y >= 0;\nloop invariant x >= 4 ==> z >= 0;\nloop invariant x >= 4 ==> w >= 0;\nloop invariant x >= 4 ==> w <= 100000;\nloop invariant x >= 4 ==> z <= w * 10;\nloop invariant x >= 4 ==> x >= 0;\nloop invariant x >= 4 ==> y >= 0;\nloop invariant x >= 4 ==> z >= 0;\nloop invariant x >= 4 ==> w >= 0;\nloop invariant x >= 4 ==> w <= 100000;\nloop invariant x >= 4 ==> z <= w * 10;\nloop invariant x >= 4 ==> x >= 0;\nloop invariant x >= 4 ==> y >= 0;\nloop invariant x >= 4 ==> z >= 0;\nloop invariant x >= 4 ==> w >= 0;\nloop invariant x >= 4 ==> w <= 100000;\nloop invariant x >= 4 ==> z <= w * 10;\nloop invariant x >= 4 ==> x >= 0;\nloop invariant x >= 4 ==> y >= 0;\nloop invariant x >= 4 ==> z >= 0;\nloop invariant x >= 4 ==> w >= 0;\nloop invariant x >= 4 ==> w <= 100000;\nloop invariant x >= 4 ==> z <= w * 10;\nloop invariant x >= 4 ==> x >= 0;\nloop invariant x >= 4 ==> y >= 0;\nloop invariant x >= 4 ==> z >= 0;\nloop invariant x >= 4 ==> w >= 0;\nloop invariant x >= 4 ==> w <= 100000;\nloop invariant x >= 4 ==> z <= w * 10;\nloop invariant x >= 4 ==> x >= 0;\nloop invariant x >= 4 ==> y >= 0;\nloop invariant x >= 4 ==> z >= 0;\nloop invariant x >= 4 ==> w >= 0;\nloop invariant x >= 4 ==> w <= 100000;\nloop invariant x >= 4 ==> z <= w * 10;\nloop invariant x >= 4 ==> x >= 0;\nloop invariant x >= 4 ==> y >= 0;\nloop invariant x >= 4 ==> z >= 0;\nloop invariant x >= 4 ==> w >= 0;\nloop invariant x >= 4 ==> w <= 100000;\nloop invariant x >= 4 ==> z <= w * 10;\nloop invariant x >= 4 ==> x >= 0;\nloop invariant x >= 4 ==> y >= 0;\nloop invariant x >= 4 ==> z >= 0;\nloop invariant x >= 4 ==> w >= 0;\nloop invariant x >= 4 ==> w <= 100000;\nloop invariant x >= 4 ==> z <= w * 10;\nloop invariant x >= 4 ==> x >= 0;\nloop invariant x >= 4 ==> y >= 0;\nloop invariant x >= 4 ==> z >= 0;\nloop invariant x >= 4 ==> w >= 0;\nloop invariant x >= 4 ==> w <= 100000;\nloop invariant x >= 4 ==> z <= w * 10;\nloop invariant x >= 4 ==> x >= 0;\nloop invariant x >= 4 ==> y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\nloop invariant i3: 0 <= z <= w * 10;\n\nloop invariant i5: x >= 0;\n\nloop invariant i7: z >= 0;\nloop invariant i8: w >= 0;\n\n\nloop invariant i11: x >= (y / 100 - 1);\n\n\n\nloop invariant i15: x >= 4 ==> w >= z / 10;\n\n\nloop invariant i18: x >= 4 ==> z >= 0;\nloop invariant i19: x >= 4 ==> w >= 0;\n\nloop invariant i21: x >= 4 ==> z <= w * 10;\nloop invariant i22: x >= 4 ==> x >= 0;\n*/\nwhile ( unknown() ){\n    if ( unknown() ) {\n      x++; y = y+100;\n    } else if  ( unknown() ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\n*/\nwhile ( unknown() ){\n    if ( unknown() ) {\n      x++; y = y+100;\n    } else if  ( unknown() ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 1000;\nloop invariant 0 <= z <= 1000;\nloop invariant 0 <= w <= 500;\nloop invariant y <= 100*x;\nloop invariant y <= 10*w;\nloop invariant z <= 10*w;\nloop invariant y >= -10*w;\nloop invariant x <= 4 ==> y <= 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\n\n\nloop invariant i5: y <= 100*x;\n\nloop invariant i7: z <= 10*w;\nloop invariant i8: y >= -10*w;\n\n*/\nwhile ( unknown() ){\n    if ( unknown() ) {\n      x++; y = y+100;\n    } else if  ( unknown() ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 34,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant y < 100000;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant z <= 100000;\nloop invariant w <= 100000;\nloop invariant x <= y;\nloop invariant y <= 10*w;\nloop invariant z <= 100*x;\nloop invariant x >= z;\nloop invariant y >= -y;\nloop invariant y >= 2;\nloop invariant x >= 4;\nloop invariant y <= 2;\nloop invariant x <= 3;\nloop invariant y <= 1;\nloop invariant x <= 2;\nloop invariant y <= 0;\nloop invariant x <= 1;\nloop invariant y <= -1;\nloop invariant x <= 0;\nloop invariant y <= -2;\nloop invariant x <= -1;\nloop invariant y <= -3;\nloop invariant x <= -2;\nloop invariant y <= -4;\nloop invariant x <= -3;\nloop invariant y <= -5;\nloop invariant x <= -4;\nloop invariant y <= -6;\nloop invariant x <= -5;\nloop invariant y <= -7;\nloop invariant x <= -6;\nloop invariant y <= -8;\nloop invariant x <= -7;\nloop invariant y <= -9;\nloop invariant x <= -8;\nloop invariant y <= -10;\nloop invariant x <= -9;\nloop invariant y <= -11;\nloop invariant x <= -10;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\n\n\nloop invariant i5: x >= 0;\nloop invariant i6: w >= 0;\nloop invariant i7: z >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ( unknown() ){\n    if ( unknown() ) {\n      x++; y = y+100;\n    } else if  ( unknown() ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant z >= w * 10;\nloop invariant 0 <= w <= 100000;\nloop invariant 0 <= x <= 100000;\nloop invariant 0 <= z <= 1000000;\nloop invariant (unknown() ==> y > 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\nloop invariant i3: z >= w * 10;\n\n\n\n\n*/\nwhile ( unknown() ){\n    if ( unknown() ) {\n      x++; y = y+100;\n    } else if  ( unknown() ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 99999;\nloop invariant 0 <= y <= 99999;\nloop invariant 0 <= z <= 99999;\nloop invariant 0 <= w <= 99999;\nloop invariant 0 <= (x - y) <= 99999;\nloop invariant 0 <= (y - x) <= 99999;\nloop invariant 0 <= (z - w) <= 99999;\nloop invariant 0 <= (w - z) <= 99999;\nloop invariant (x == 0) ==> (y == 0);\nloop invariant (x == 0) ==> (z == 0);\nloop invariant (x == 0) ==> (w == 0);\nloop invariant (x == 1) ==> (y == 100);\nloop invariant (x == 2) ==> (y == 200);\nloop invariant (x == 3) ==> (y == 300);\nloop invariant (x == 4) ==> (y == 400);\nloop invariant (x >= 5) ==> (y >= 500);\nloop invariant (x >= 6) ==> (y >= 600);\nloop invariant (x >= 7) ==> (y >= 700);\nloop invariant (x >= 8) ==> (y >= 800);\nloop invariant (x >= 9) ==> (y >= 900);\nloop invariant (x >= 10) ==> (y >= 1000);\nloop invariant (x >= 11) ==> (y >= 1100);\nloop invariant (x >= 12) ==> (y >= 1200);\nloop invariant (x >= 13) ==> (y >= 1300);\nloop invariant (x >= 14) ==> (y >= 1400);\nloop invariant (x >= 15) ==> (y >= 1500);\nloop invariant (x >= 16) ==> (y >= 1600);\nloop invariant (x >= 17) ==> (y >= 1700);\nloop invariant (x >= 18) ==> (y >= 1800);\nloop invariant (x >= 19) ==> (y >= 1900);\nloop invariant (x >= 20) ==> (y >= 2000);\nloop invariant (x >= 21) ==> (y >= 2100);\nloop invariant (x >= 22) ==> (y >= 2200);\nloop invariant (x >= 23) ==> (y >= 2300);\nloop invariant (x >= 24) ==> (y >= 2400);\nloop invariant (x >= 25) ==> (y >= 2500);\nloop invariant (x >= 26) ==> (y >= 2600);\nloop invariant (x >= 27) ==> (y >= 2700);\nloop invariant (x >= 28) ==> (y >= 2800);\nloop invariant (x >= 29) ==> (y >= 2900);\nloop invariant (x >= 30) ==> (y >= 3000);\nloop invariant (x >= 31) ==> (y >= 3100);\nloop invariant (x >= 32) ==> (y >= 3200);\nloop invariant (x >= 33) ==> (y >= 3300);\nloop invariant (x >= 34) ==> (y >= 3400);\nloop invariant (x >= 35) ==> (y >= 3500);\nloop invariant (x >= 36) ==> (y >= 3600);\nloop invariant (x >= 37) ==> (y >= 3700);\nloop invariant (x >= 38) ==> (y >= 3800);\nloop invariant (x >= 39) ==> (y >= 3900);\nloop invariant (x >= 40) ==> (y >= 4000);\nloop invariant (x >= 41) ==> (y >= 4100);\nloop invariant (x >= 42) ==> (y >= 4200);\nloop invariant (x >= 43) ==> (y >= 4300);\nloop invariant (x >= 44) ==> (y >= 4400);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ( unknown() ){\n    if ( unknown() ) {\n      x++; y = y+100;\n    } else if  ( unknown() ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 100000;\nloop invariant 0 <= z <= 100000;\nloop invariant 0 <= w <= 100000;\nloop invariant y <= 10*w;\nloop invariant if (x < 4) then y <= 100000 else y >= 100000;\nloop invariant if (x < 4) then z <= 100000 else z >= 100000;\nloop invariant if (x < 4) then w <= 100000 else w >= 100000;\nloop invariant if (x < 4) then y <= 10*w else y >= 10*w;\nloop invariant if (x < 4) then z <= 100*x else z >= 100*x;\nloop invariant if (x < 4) then w <= 100000 else w >= 100000;\nloop invariant if (x < 4) then y <= 100000 else y >= 100000;\nloop invariant if (x < 4) then z <= 100000 else z >= 100000;\nloop invariant if (x < 4) then w <= 100000 else w >= 100000;\nloop invariant if (x < 4) then y <= 10*w else y >= 10*w;\nloop invariant if (x < 4) then z <= 100*x else z >= 100*x;\nloop invariant if (x < 4) then w <= 100000 else w >= 100000;\nloop invariant if (x < 4) then y <= 100000 else y >= 100000;\nloop invariant if (x < 4) then z <= 100000 else z >= 100000;\nloop invariant if (x < 4) then w <= 100000 else w >= 100000;\nloop invariant if (x < 4) then y <= 10*w else y >= 10*w;\nloop invariant if (x < 4) then z <= 100*x else z >= 100*x;\nloop invariant if (x < 4) then w <= 100000 else w >= 100000;\nloop invariant if (x < 4) then y <= 100000 else y >= 100000;\nloop invariant if (x < 4) then z <= 100000 else z >= 100000;\nloop invariant if (x < 4) then w <= 100000 else w >= 100000;\nloop invariant if (x < 4) then y <= 10*w else y >= 10*w;\nloop invariant if (x < 4) then z <= 100*x else z >= 100*x;\nloop invariant if (x < 4) then w <= 100000 else w >= 100000;\nloop invariant if (x < 4) then y <= 100000 else y >= 100000;\nloop invariant if (x < 4) then z <= 100000 else z >= 100000;\nloop invariant if (x < 4) then w <= 100000 else w >= 100000;\nloop invariant if (x < 4) then y <= 10*w else y >= 10*w;\nloop invariant if (x < 4) then z <= 100*x else z >= 100*x;\nloop invariant if (x < 4) then w <= 100000 else w >= 100000;\nloop invariant if (x < 4) then y <= 100000 else y >= 100000;\nloop invariant if (x < 4) then z <= 100000 else z >= 100000;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ( unknown() ){\n    if ( unknown() ) {\n      x++; y = y+100;\n    } else if  ( unknown() ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant x == y / 100;\nloop invariant y == 100 * z - 1000;\nloop invariant 0 <= z <= 100 * w;\nloop invariant w == y / 100 + 1;\nloop invariant x == 4;\nloop invariant y == 400;\nloop invariant z == 400;\nloop invariant w == 5;\nloop invariant x == z;\nloop invariant y == 400;\nloop invariant z == 400;\nloop invariant w == 5;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\n\nloop invariant i4: 0 <= z <= 100 * w;\n\n\n\n\n\n\n*/\nwhile ( unknown() ){\n    if ( unknown() ) {\n      x++; y = y+100;\n    } else if  ( unknown() ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x < 4 || y <= 10*w || z < 100*x;\nloop invariant x >= 0 ==> y <= 100000;\nloop invariant x >= 0 ==> y >= 0;\nloop invariant x >= 0 ==> w >= 0;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> x < 4 || y <= 10*w || z < 100*x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\nloop invariant i3: x >= 0;\n\nloop invariant i5: w >= 0;\nloop invariant i6: z >= 0;\n\n\n\nloop invariant i10: x >= 0 ==> w >= 0;\nloop invariant i11: x >= 0 ==> z >= 0;\n\n*/\nwhile ( unknown() ){\n    if ( unknown() ) {\n      x++; y = y+100;\n    } else if  ( unknown() ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 100;\nloop invariant 0 <= z <= 40;\nloop invariant 0 <= w <= 4;\nloop invariant w == 1 ==> y == 0;\nloop invariant w == 2 ==> y == 100;\nloop invariant w == 3 ==> y == 200;\nloop invariant w == 4 ==> y == 300;\nloop invariant w == 1 ==> z == 10;\nloop invariant w == 2 ==> z == 210;\nloop invariant w == 3 ==> z == 310;\nloop invariant w == 4 ==> z == 410;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ( unknown() ){\n    if ( unknown() ) {\n      x++; y = y+100;\n    } else if  ( unknown() ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 100000;\nloop invariant x <= z <= 100 * x;\nloop invariant y <= w <= y + 100;\nloop invariant x >= 4 ==> y > 2;\nloop invariant x < 4 ==> y <= 2;\nloop invariant y < 10 * w ==> z < 100 * x;\nloop invariant y >= 10 * w ==> z > 100 * x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\n\n\n\n\n\n\n*/\nwhile ( unknown() ){\n    if ( unknown() ) {\n      x++; y = y+100;\n    } else if  ( unknown() ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 1000;\nloop invariant 0 <= z <= 1000;\nloop invariant 0 <= w <= 100;\nloop invariant x >= 4 ==> x >= 4;\nloop invariant y >= 10*w ==> y >= 10*w;\nloop invariant z >= 100*x ==> z >= 100*x;\nloop invariant w >= 1 ==> w >= 1;\nloop invariant z >= 10 ==> z >= 10;\nloop invariant y >= 1 ==> y >= 1;\nloop invariant z >= 100 ==> z >= 100;\nloop invariant w >= 10 ==> w >= 10;\nloop invariant z >= 1000 ==> z >= 1000;\nloop invariant w >= 100 ==> w >= 100;\nloop invariant y >= 10*w ==> y >= 10*w;\nloop invariant z >= 100*x ==> z >= 100*x;\nloop invariant w >= 1 ==> w >= 1;\nloop invariant z >= 10 ==> z >= 10;\nloop invariant y >= 1 ==> y >= 1;\nloop invariant z >= 100 ==> z >= 100;\nloop invariant w >= 10 ==> w >= 10;\nloop invariant z >= 1000 ==> z >= 1000;\nloop invariant w >= 100 ==> w >= 100;\nloop invariant y >= 10*w ==> y >= 10*w;\nloop invariant z >= 100*x ==> z >= 100*x;\nloop invariant w >= 1 ==> w >= 1;\nloop invariant z >= 10 ==> z >= 10;\nloop invariant y >= 1 ==> y >= 1;\nloop invariant z >= 100 ==> z >= 100;\nloop invariant w >= 10 ==> w >= 10;\nloop invariant z >= 1000 ==> z >= 1000;\nloop invariant w >= 100 ==> w >= 100;\nloop invariant y >= 10*w ==> y >= 10*w;\nloop invariant z >= 100*x ==> z >= 100*x;\nloop invariant w >= 1 ==> w >= 1;\nloop invariant z >= 10 ==> z >= 10;\nloop invariant y >= 1 ==> y >= 1;\nloop invariant z >= 100 ==> z >= 100;\nloop invariant w >= 10 ==> w >= 10;\nloop invariant z >= 1000 ==> z >= 1000;\nloop invariant w >= 100 ==> w >= 100;\nloop invariant y >= 10*w ==> y >= 10*w;\nloop invariant z >= 100*x ==> z >= 100*x;\nloop invariant w >= 1 ==> w >= 1;\nloop invariant z >= 10 ==> z >= 10;\nloop invariant y >= 1 ==> y >= 1;\nloop invariant z >= 100 ==> z >= 100;\nloop invariant w >= 10 ==> w >= 10;\nloop invariant z >= 1000 ==> z >= 1000;\nloop invariant w >= 100 ==> w >= 100;\nloop invariant y >= 10*w ==> y >= 10*w;\nloop invariant z >= 100*x ==> z >= 100*x;\nloop invariant w >= 1 ==> w >= 1;\nloop invariant z >= 10 ==> z >= 10;\nloop invariant y >= 1 ==> y >= 1;\nloop invariant z >= 100 ==> z >= 100;\nloop invariant w >= 10 ==> w >= 10;\nloop invariant z >= 1000 ==> z >= 1000;\nloop invariant w >= 100 ==> w >= 100;\nloop invariant y >= 10*w ==> y >= 10*w;\nloop invariant z >= 100*x ==> z >= 100*x;\nloop invariant w >= 1 ==> w >= 1;\nloop invariant z >= 10 ==> z >= 10;\nloop invariant y >= 1 ==> y >= 1;\nloop invariant z >= 100 ==> z >= 100;\nloop invariant w >= 10 ==> w >= 10;\nloop invariant z >= 1000 ==> z >= 1000;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\n\n\nloop invariant i5: x >= 4 ==> x >= 4;\nloop invariant i6: y >= 10*w ==> y >= 10*w;\nloop invariant i7: z >= 100*x ==> z >= 100*x;\nloop invariant i8: w >= 1 ==> w >= 1;\nloop invariant i9: z >= 10 ==> z >= 10;\nloop invariant i10: y >= 1 ==> y >= 1;\nloop invariant i11: z >= 100 ==> z >= 100;\nloop invariant i12: w >= 10 ==> w >= 10;\nloop invariant i13: z >= 1000 ==> z >= 1000;\nloop invariant i14: w >= 100 ==> w >= 100;\n*/\nwhile ( unknown() ){\n    if ( unknown() ) {\n      x++; y = y+100;\n    } else if  ( unknown() ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= w <= 2147483647;\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 400;\nloop invariant 0 <= z <= 40;\nloop invariant x == 0 ==> !(y > 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\nloop invariant i1: 0 <= w <= 2147483647;\n\n\n\n\n*/\nwhile ( unknown() ){\n    if ( unknown() ) {\n      x++; y = y+100;\n    } else if  ( unknown() ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 400;\nloop invariant 0 <= z <= 4000;\nloop invariant 0 <= w <= 400000;\nloop invariant x == 1 ==> y == 100;\nloop invariant x == 1 ==> z == 1000;\nloop invariant x == 1 ==> w == 10000;\nloop invariant x == 2 ==> y == 200;\nloop invariant x == 2 ==> z == 2000;\nloop invariant x == 2 ==> w == 20000;\nloop invariant x == 3 ==> y == 300;\nloop invariant x == 3 ==> z == 3000;\nloop invariant x == 3 ==> w == 30000;\nloop invariant x == 4 ==> y == 400;\nloop invariant x == 4 ==> z == 4000;\nloop invariant x == 4 ==> w == 40000;\nloop invariant y > 10*w ==> y == -y;\nloop invariant z >= 100*x ==> y == -y;\nloop invariant y <= 10*w ==> y >= 0;\nloop invariant z < 100*x ==> y >= 0;\nloop invariant x < 4 ==> y >= 0;\nloop invariant x < 4 ==> y <= 400;\nloop invariant x < 4 ==> z >= 0;\nloop invariant x < 4 ==> z <= 4000;\nloop invariant w < 400000 ==> w >= 0;\nloop invariant w < 400000 ==> w <= 400000;\nloop invariant z < 4000 ==> z >= 0;\nloop invariant z < 4000 ==> z <= 4000;\nloop invariant y < 400 ==> y >= 0;\nloop invariant y < 400 ==> y <= 400;\nloop invariant w < 400000 ==> w >= 0;\nloop invariant w < 400000 ==> w <= 400000;\nloop invariant z < 4000 ==> z >= 0;\nloop invariant z < 4000 ==> z <= 4000;\nloop invariant y < 400 ==> y >= 0;\nloop invariant y < 400 ==> y <= 400;\nloop invariant w < 400000 ==> w >= 0;\nloop invariant w < 400000 ==> w <= 400000;\nloop invariant z < 4000 ==> z >= 0;\nloop invariant z < 4000 ==> z <= 4000;\nloop invariant y < 400 ==> y >= 0;\nloop invariant y < 400 ==> y <= 400;\nloop invariant w < 400000 ==> w >= 0;\nloop invariant w < 400000 ==> w <= 400000;\nloop invariant z < 4000 ==> z >= 0;\nloop invariant z < 4000 ==> z <= 4000;\nloop invariant y < 400 ==> y >= 0;\nloop invariant y < 400 ==> y <= 400;\nloop invariant w < 400000 ==> w >= 0;\nloop invariant w < 400000 ==> w <= 400000;\nloop invariant z < 4000 ==> z >= 0;\nloop invariant z < 4000 ==> z <= 4000;\nloop invariant y < 400 ==> y >= 0;\nloop invariant y < 400 ==> y <= 400;\nloop invariant w < 400000 ==> w >= 0;\nloop invariant w < 400000 ==> w <= 400000;\nloop invariant z < 4000 ==> z >= 0;\nloop invariant z < 4000 ==> z <= 4000;\nloop invariant y < 400 ==> y >= 0;\nloop invariant y < 400 ==> y <= 400;\nloop invariant w < 400000 ==> w >= 0;\nloop invariant w < 400000 ==> w <= 400000;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i23: x < 4 ==> z >= 0;\n\nloop invariant i25: w < 400000 ==> w >= 0;\nloop invariant i26: w < 400000 ==> w <= 400000;\nloop invariant i27: z < 4000 ==> z >= 0;\nloop invariant i28: z < 4000 ==> z <= 4000;\n\nloop invariant i30: y < 400 ==> y <= 400;\n*/\nwhile ( unknown() ){\n    if ( unknown() ) {\n      x++; y = y+100;\n    } else if  ( unknown() ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 95: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\nloop invariant i1: 0 <= y <= 100000;\nloop invariant i2: x >= (1 + (y - 1) * y / 2);\nloop invariant i3: 0 <= x <= 1000000;\nloop invariant i4: 0 <= z <= 100000;\nloop invariant i5: 0 <= w <= 100000;\nloop invariant i6: (x >= 4) ==> (y > 2);\nloop invariant i7: 0 <= x <= 4;\nloop invariant i8: 0 <= y <= 100;\nloop invariant i9: 0 <= z <= w * 10;\nloop invariant i10: x >= 0;\nloop invariant i11: y >= 0;\nloop invariant i12: z >= 0;\nloop invariant i13: w >= 0;\nloop invariant i14: y <= 10 * w;\nloop invariant i15: z <= 100 * x;\nloop invariant i16: x >= (y / 100 - 1);\nloop invariant i17: x < 4 ==> y >= 100;\nloop invariant i18: x >= 4 ==> y > 2;\nloop invariant i19: x >= 4 ==> z >= 100 * x;\nloop invariant i20: x >= 4 ==> w >= z / 10;\nloop invariant i21: x >= 4 ==> y <= w * 10;\nloop invariant i22: x >= 4 ==> y >= 0;\nloop invariant i23: x >= 4 ==> z >= 0;\nloop invariant i24: x >= 4 ==> w >= 0;\nloop invariant i25: x >= 4 ==> w <= 100000;\nloop invariant i26: x >= 4 ==> z <= w * 10;\nloop invariant i27: x >= 4 ==> x >= 0;\nloop invariant i28: 0 <= y <= 1000;\nloop invariant i29: 0 <= z <= 1000;\nloop invariant i30: 0 <= w <= 500;\nloop invariant i31: y <= 100*x;\nloop invariant i32: y <= 10*w;\nloop invariant i33: z <= 10*w;\nloop invariant i34: y >= -10*w;\nloop invariant i35: x <= 4 ==> y <= 2;\nloop invariant i36: y < 100000;\nloop invariant i37: x <= 100000;\nloop invariant i38: y <= 100000;\nloop invariant i39: z <= 100000;\nloop invariant i40: w <= 100000;\nloop invariant i41: x <= y;\nloop invariant i42: z <= 100*x;\nloop invariant i43: x >= z;\nloop invariant i44: y >= -y;\nloop invariant i45: y >= 2;\nloop invariant i46: x >= 4;\nloop invariant i47: y <= 2;\nloop invariant i48: x <= 3;\nloop invariant i49: y <= 1;\nloop invariant i50: x <= 2;\nloop invariant i51: y <= 0;\nloop invariant i52: x <= 1;\nloop invariant i53: y <= -1;\nloop invariant i54: x <= 0;\nloop invariant i55: y <= -2;\nloop invariant i56: x <= -1;\nloop invariant i57: y <= -3;\nloop invariant i58: x <= -2;\nloop invariant i59: y <= -4;\nloop invariant i60: x <= -3;\nloop invariant i61: y <= -5;\nloop invariant i62: x <= -4;\nloop invariant i63: y <= -6;\nloop invariant i64: x <= -5;\nloop invariant i65: y <= -7;\nloop invariant i66: x <= -6;\nloop invariant i67: y <= -8;\nloop invariant i68: x <= -7;\nloop invariant i69: y <= -9;\nloop invariant i70: x <= -8;\nloop invariant i71: y <= -10;\nloop invariant i72: x <= -9;\nloop invariant i73: y <= -11;\nloop invariant i74: x <= -10;\nloop invariant i75: z >= w * 10;\nloop invariant i76: 0 <= x <= 100000;\nloop invariant i77: 0 <= z <= 1000000;\nloop invariant i78: (unknown() ==> y > 2);\nloop invariant i79: 0 <= x <= 99999;\nloop invariant i80: 0 <= y <= 99999;\nloop invariant i81: 0 <= z <= 99999;\nloop invariant i82: 0 <= w <= 99999;\nloop invariant i83: 0 <= (x - y) <= 99999;\nloop invariant i84: 0 <= (y - x) <= 99999;\nloop invariant i85: 0 <= (z - w) <= 99999;\nloop invariant i86: 0 <= (w - z) <= 99999;\nloop invariant i87: (x == 0) ==> (y == 0);\nloop invariant i88: (x == 0) ==> (z == 0);\nloop invariant i89: (x == 0) ==> (w == 0);\nloop invariant i90: (x == 1) ==> (y == 100);\nloop invariant i91: (x == 2) ==> (y == 200);\nloop invariant i92: (x == 3) ==> (y == 300);\nloop invariant i93: (x == 4) ==> (y == 400);\nloop invariant i94: (x >= 5) ==> (y >= 500);\nloop invariant i95: (x >= 6) ==> (y >= 600);\nloop invariant i96: (x >= 7) ==> (y >= 700);\nloop invariant i97: (x >= 8) ==> (y >= 800);\nloop invariant i98: (x >= 9) ==> (y >= 900);\nloop invariant i99: (x >= 10) ==> (y >= 1000);\nloop invariant i100: (x >= 11) ==> (y >= 1100);\nloop invariant i101: (x >= 12) ==> (y >= 1200);\nloop invariant i102: (x >= 13) ==> (y >= 1300);\nloop invariant i103: (x >= 14) ==> (y >= 1400);\nloop invariant i104: (x >= 15) ==> (y >= 1500);\nloop invariant i105: (x >= 16) ==> (y >= 1600);\nloop invariant i106: (x >= 17) ==> (y >= 1700);\nloop invariant i107: (x >= 18) ==> (y >= 1800);\nloop invariant i108: (x >= 19) ==> (y >= 1900);\nloop invariant i109: (x >= 20) ==> (y >= 2000);\nloop invariant i110: (x >= 21) ==> (y >= 2100);\nloop invariant i111: (x >= 22) ==> (y >= 2200);\nloop invariant i112: (x >= 23) ==> (y >= 2300);\nloop invariant i113: (x >= 24) ==> (y >= 2400);\nloop invariant i114: (x >= 25) ==> (y >= 2500);\nloop invariant i115: (x >= 26) ==> (y >= 2600);\nloop invariant i116: (x >= 27) ==> (y >= 2700);\nloop invariant i117: (x >= 28) ==> (y >= 2800);\nloop invariant i118: (x >= 29) ==> (y >= 2900);\nloop invariant i119: (x >= 30) ==> (y >= 3000);\nloop invariant i120: (x >= 31) ==> (y >= 3100);\nloop invariant i121: (x >= 32) ==> (y >= 3200);\nloop invariant i122: (x >= 33) ==> (y >= 3300);\nloop invariant i123: (x >= 34) ==> (y >= 3400);\nloop invariant i124: (x >= 35) ==> (y >= 3500);\nloop invariant i125: (x >= 36) ==> (y >= 3600);\nloop invariant i126: (x >= 37) ==> (y >= 3700);\nloop invariant i127: (x >= 38) ==> (y >= 3800);\nloop invariant i128: (x >= 39) ==> (y >= 3900);\nloop invariant i129: (x >= 40) ==> (y >= 4000);\nloop invariant i130: (x >= 41) ==> (y >= 4100);\nloop invariant i131: (x >= 42) ==> (y >= 4200);\nloop invariant i132: (x >= 43) ==> (y >= 4300);\nloop invariant i133: (x >= 44) ==> (y >= 4400);\nloop invariant i134: if (x < 4) then y <= 100000 else y >= 100000;\nloop invariant i135: if (x < 4) then z <= 100000 else z >= 100000;\nloop invariant i136: if (x < 4) then w <= 100000 else w >= 100000;\nloop invariant i137: if (x < 4) then y <= 10*w else y >= 10*w;\nloop invariant i138: if (x < 4) then z <= 100*x else z >= 100*x;\nloop invariant i139: x == y / 100;\nloop invariant i140: y == 100 * z - 1000;\nloop invariant i141: 0 <= z <= 100 * w;\nloop invariant i142: w == y / 100 + 1;\nloop invariant i143: x == 4;\nloop invariant i144: y == 400;\nloop invariant i145: z == 400;\nloop invariant i146: w == 5;\nloop invariant i147: x == z;\nloop invariant i148: x < 4 || y <= 10*w || z < 100*x;\nloop invariant i149: x >= 0 ==> y <= 100000;\nloop invariant i150: x >= 0 ==> y >= 0;\nloop invariant i151: x >= 0 ==> w >= 0;\nloop invariant i152: x >= 0 ==> z >= 0;\nloop invariant i153: x >= 0 ==> x < 4 || y <= 10*w || z < 100*x;\nloop invariant i154: 0 <= z <= 40;\nloop invariant i155: 0 <= w <= 4;\nloop invariant i156: w == 1 ==> y == 0;\nloop invariant i157: w == 2 ==> y == 100;\nloop invariant i158: w == 3 ==> y == 200;\nloop invariant i159: w == 4 ==> y == 300;\nloop invariant i160: w == 1 ==> z == 10;\nloop invariant i161: w == 2 ==> z == 210;\nloop invariant i162: w == 3 ==> z == 310;\nloop invariant i163: w == 4 ==> z == 410;\nloop invariant i164: x <= z <= 100 * x;\nloop invariant i165: y <= w <= y + 100;\nloop invariant i166: x < 4 ==> y <= 2;\nloop invariant i167: y < 10 * w ==> z < 100 * x;\nloop invariant i168: y >= 10 * w ==> z > 100 * x;\nloop invariant i169: 0 <= w <= 100;\nloop invariant i170: x >= 4 ==> x >= 4;\nloop invariant i171: y >= 10*w ==> y >= 10*w;\nloop invariant i172: z >= 100*x ==> z >= 100*x;\nloop invariant i173: w >= 1 ==> w >= 1;\nloop invariant i174: z >= 10 ==> z >= 10;\nloop invariant i175: y >= 1 ==> y >= 1;\nloop invariant i176: z >= 100 ==> z >= 100;\nloop invariant i177: w >= 10 ==> w >= 10;\nloop invariant i178: z >= 1000 ==> z >= 1000;\nloop invariant i179: w >= 100 ==> w >= 100;\nloop invariant i180: 0 <= w <= 2147483647;\nloop invariant i181: 0 <= y <= 400;\nloop invariant i182: x == 0 ==> !(y > 2);\nloop invariant i183: 0 <= z <= 4000;\nloop invariant i184: 0 <= w <= 400000;\nloop invariant i185: x == 1 ==> y == 100;\nloop invariant i186: x == 1 ==> z == 1000;\nloop invariant i187: x == 1 ==> w == 10000;\nloop invariant i188: x == 2 ==> y == 200;\nloop invariant i189: x == 2 ==> z == 2000;\nloop invariant i190: x == 2 ==> w == 20000;\nloop invariant i191: x == 3 ==> y == 300;\nloop invariant i192: x == 3 ==> z == 3000;\nloop invariant i193: x == 3 ==> w == 30000;\nloop invariant i194: x == 4 ==> y == 400;\nloop invariant i195: x == 4 ==> z == 4000;\nloop invariant i196: x == 4 ==> w == 40000;\nloop invariant i197: y > 10*w ==> y == -y;\nloop invariant i198: z >= 100*x ==> y == -y;\nloop invariant i199: y <= 10*w ==> y >= 0;\nloop invariant i200: z < 100*x ==> y >= 0;\nloop invariant i201: x < 4 ==> y >= 0;\nloop invariant i202: x < 4 ==> y <= 400;\nloop invariant i203: x < 4 ==> z >= 0;\nloop invariant i204: x < 4 ==> z <= 4000;\nloop invariant i205: w < 400000 ==> w >= 0;\nloop invariant i206: w < 400000 ==> w <= 400000;\nloop invariant i207: z < 4000 ==> z >= 0;\nloop invariant i208: z < 4000 ==> z <= 4000;\nloop invariant i209: y < 400 ==> y >= 0;\nloop invariant i210: y < 400 ==> y <= 400;\n*/\nwhile ( unknown() ){\n    if ( unknown() ) {\n      x++; y = y+100;\n    } else if  ( unknown() ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
        "combined_annotation_num_solver_calls": 69,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\n\n\n\nloop invariant i6: (x >= 4) ==> (y > 2);\n\n\nloop invariant i9: 0 <= z <= w * 10;\nloop invariant i10: x >= 0;\nloop invariant i11: y >= 0;\nloop invariant i12: z >= 0;\nloop invariant i13: w >= 0;\n\n\nloop invariant i16: x >= (y / 100 - 1);\n\nloop invariant i18: x >= 4 ==> y > 2;\n\nloop invariant i20: x >= 4 ==> w >= z / 10;\n\nloop invariant i22: x >= 4 ==> y >= 0;\nloop invariant i23: x >= 4 ==> z >= 0;\nloop invariant i24: x >= 4 ==> w >= 0;\n\nloop invariant i26: x >= 4 ==> z <= w * 10;\nloop invariant i27: x >= 4 ==> x >= 0;\n\n\n\nloop invariant i31: y <= 100*x;\n\nloop invariant i33: z <= 10*w;\nloop invariant i34: y >= -10*w;\n\n\n\n\n\n\nloop invariant i41: x <= y;\n\n\nloop invariant i44: y >= -y;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i75: z >= w * 10;\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i87: (x == 0) ==> (y == 0);\n\n\nloop invariant i90: (x == 1) ==> (y == 100);\nloop invariant i91: (x == 2) ==> (y == 200);\nloop invariant i92: (x == 3) ==> (y == 300);\nloop invariant i93: (x == 4) ==> (y == 400);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i141: 0 <= z <= 100 * w;\n\n\n\n\n\n\nloop invariant i148: x < 4 || y <= 10*w || z < 100*x;\n\nloop invariant i150: x >= 0 ==> y >= 0;\nloop invariant i151: x >= 0 ==> w >= 0;\nloop invariant i152: x >= 0 ==> z >= 0;\nloop invariant i153: x >= 0 ==> x < 4 || y <= 10*w || z < 100*x;\n\n\n\n\n\n\nloop invariant i160: w == 1 ==> z == 10;\n\n\n\n\n\n\n\n\n\nloop invariant i170: x >= 4 ==> x >= 4;\nloop invariant i171: y >= 10*w ==> y >= 10*w;\nloop invariant i172: z >= 100*x ==> z >= 100*x;\nloop invariant i173: w >= 1 ==> w >= 1;\nloop invariant i174: z >= 10 ==> z >= 10;\nloop invariant i175: y >= 1 ==> y >= 1;\nloop invariant i176: z >= 100 ==> z >= 100;\nloop invariant i177: w >= 10 ==> w >= 10;\nloop invariant i178: z >= 1000 ==> z >= 1000;\nloop invariant i179: w >= 100 ==> w >= 100;\nloop invariant i180: 0 <= w <= 2147483647;\n\nloop invariant i182: x == 0 ==> !(y > 2);\n\n\nloop invariant i185: x == 1 ==> y == 100;\n\n\nloop invariant i188: x == 2 ==> y == 200;\n\n\nloop invariant i191: x == 3 ==> y == 300;\n\n\nloop invariant i194: x == 4 ==> y == 400;\n\n\n\n\nloop invariant i199: y <= 10*w ==> y >= 0;\nloop invariant i200: z < 100*x ==> y >= 0;\nloop invariant i201: x < 4 ==> y >= 0;\nloop invariant i202: x < 4 ==> y <= 400;\nloop invariant i203: x < 4 ==> z >= 0;\n\nloop invariant i205: w < 400000 ==> w >= 0;\nloop invariant i206: w < 400000 ==> w <= 400000;\nloop invariant i207: z < 4000 ==> z >= 0;\nloop invariant i208: z < 4000 ==> z <= 4000;\nloop invariant i209: y < 400 ==> y >= 0;\nloop invariant i210: y < 400 ==> y <= 400;\n*/\nwhile ( unknown() ){\n    if ( unknown() ) {\n      x++; y = y+100;\n    } else if  ( unknown() ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c"
        ],
        "skipped": [],
        "total": 32,
        "success_count": 28,
        "failure_count": 4,
        "success_rate": 0.875
    }
}