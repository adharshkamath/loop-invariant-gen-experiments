{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nvoid main()\n{\n  int x, m, N;\n  N = unknown_int();\n  if (N < 0)\n    \nreturn;\n\n  x = N;\n  while(x > 0)\n  {\n    x = x - 1;\n  }\n  {;\n//@ assert(x == 0);\n}\n    \n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant (x - 1) == N;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= N;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x == N - y;\nloop invariant y == N - x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x < N ==> x == 0;\nloop invariant x >= N ==> x == N;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= N;\nloop invariant 0 <= x;\nloop invariant x <= N;\nloop invariant x == N - (N - x);\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == N - x;\nloop invariant x <= 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\n*/\n```",
            "```\n/*@\nloop invariant N >= 0;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x + 1 >= N;\nloop invariant x + 2 >= N;\nloop invariant x + 3 >= N;\nloop invariant x + 4 >= N;\nloop invariant x + 5 >= N;\nloop invariant x + 6 >= N;\nloop invariant x + 7 >= N;\nloop invariant x + 8 >= N;\nloop invariant x + 9 >= N;\nloop invariant x + 10 >= N;\nloop invariant x + 11 >= N;\nloop invariant x + 12 >= N;\nloop invariant x + 13 >= N;\nloop invariant x + 14 >= N;\nloop invariant x + 15 >= N;\nloop invariant x + 16 >= N;\nloop invariant x + 17 >= N;\nloop invariant x + 18 >= N;\nloop invariant x + 19 >= N;\nloop invariant x + 20 >= N;\nloop invariant x + 21 >= N;\nloop invariant x + 22 >= N;\nloop invariant x + 23 >= N;\nloop invariant x + 24 >= N;\nloop invariant x + 25 >= N;\nloop invariant x + 26 >= N;\nloop invariant x + 27 >= N;\nloop invariant x + 28 >= N;\nloop invariant x + 29 >= N;\nloop invariant x + 30 >= N;\nloop invariant x + 31 >= N;\nloop invariant x + 32 >= N;\nloop invariant x + 33 >= N;\nloop invariant x + 34 >= N;\nloop invariant x + 35 >= N;\nloop invariant x + 36 >= N;\nloop invariant x + 37 >= N;\nloop invariant x + 38 >= N;\nloop invariant x + 39 >= N;\nloop invariant x + 40 >= N;\nloop invariant x + 41 >= N;\nloop invariant x + 42 >= N;\nloop invariant x + 43 >= N;\nloop invariant x + 44 >= N;\nloop invariant x + 45 >= N;\nloop invariant x + 46 >= N;\nloop invariant x + 47 >= N;\nloop invariant x + 48 >= N;\nloop invariant x + 49 >= N;\nloop invariant x + 50 >= N;\nloop invariant x + 51 >= N;\nloop invariant x + 52 >= N;\nloop invariant x + 53 >= N;\nloop invariant x + 54 >= N;\nloop invariant x + 55 >= N;\nloop invariant x + 56 >= N;\nloop invariant x + 57 >= N;\nloop invariant x + 58 >= N;\nloop invariant x + 59 >= N;\nloop invariant x + 60 >= N;\nloop invariant x + 61 >= N;\nloop invariant x + 62 >= N;\nloop invariant x + 63 >= N;\nloop invariant x + 64 >= N;\nloop invariant x + 65 >= N;\nloop invariant x + 66 >= N;\nloop invariant x + 67 >= N;\nloop invariant x + 68 >= N;\nloop invariant x + 69 >= N;\nloop invariant x + 70 >= N;\nloop invariant x + 71 >= N;\nloop invariant x + 72 >= N;\nloop invariant x + 73 >= N;\nloop invariant x + 74 >= N;\nloop invariant x + 75 >= N;\nloop invariant x + 76 >= N;\nloop invariant x + 77 >= N;\nloop invariant x + 78 >= N;\nloop invariant x + 79 >= N;\nloop invariant x + 80 >= N;\nloop invariant x + 81 >= N;\nloop invariant x + 82 >= N;\nloop invariant x + 83 >= N;\nloop invariant x + 84 >= N;\nloop invariant x + 85 >= N;\nloop invariant x + 86 >= N;\nloop invariant x + 87 >= N;\nloop invariant x + 88 >= N;\nloop invariant x + 89 >= N;\nloop invariant x + 90 >= N;\nloop invariant x + 91 >= N;\nloop invariant x + 92 >= N;\nloop invariant x + 93 >= N;\nloop invariant x + 94 >= N;\nloop invariant x + 95 >= N;\nloop invariant x + 96 >= N;\nloop invariant x + 97 >= N;\nloop invariant x + 98 >= N;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x == N - y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x >= N;\nloop invariant x == 0 ==> N >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= N && x <= 0;\nloop invariant 0 <= x <= N && x <= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= N;\nloop invariant x == N - (N - x);\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == 0 ==> x >= 0;\nloop invariant x == 0 ==> x <= N;\nloop invariant x == 0 ==> 1 <= x;\nloop invariant x == 0 ==> x == N - (N - x);\nloop invariant x == 0 ==> true;\nloop invariant x == 0 ==> x >= 0 ==> true;\nloop invariant x == 0 ==> x <= N ==> true;\nloop invariant x == 0 ==> 1 <= x ==> true;\nloop invariant x == 0 ==> x == N - (N - x) ==> true;\nloop invariant x == 0 ==> true ==> true;\nloop invariant x == 0 ==> x >= 0 ==> true ==> true;\nloop invariant x == 0 ==> x <= N ==> true ==> true;\nloop invariant x == 0 ==> 1 <= x ==> true ==> true;\nloop invariant x == 0 ==> x == N - (N - x) ==> true ==> true;\nloop invariant x == 0 ==> true ==> true ==> true;\nloop invariant x == 0 ==> x >= 0 ==> true ==> true ==> true;\nloop invariant x == 0 ==> x <= N ==> true ==> true ==> true;\nloop invariant x == 0 ==> 1 <= x ==> true ==> true ==> true;\nloop invariant x == 0 ==> x == N - (N - x) ==> true ==> true ==> true;\nloop invariant x == 0 ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> x >= 0 ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> x <= N ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> 1 <= x ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> x == N - (N - x) ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> true ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> x >= 0 ==> true ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> x <= N ==> true ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> 1 <= x ==> true ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> x == N - (N - x) ==> true ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> true ==> true ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> x >= 0 ==> true ==> true ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> x <= N ==> true ==> true ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> 1 <= x ==> true ==> true ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> x == N - (N - x) ==> true ==> true ==> true ==> true ==> true ==> true;\n*/\n```",
            "```\n/*@\nloop invariant x <= N;\nloop invariant 0 <= x <= N;\nloop invariant x >= N;\nloop invariant x <= 0;\nloop invariant x == N;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 < x <= N;\nloop invariant x == (N - #loop_iters);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x >= N - i, i = 1, 2, ..., N;\nloop invariant x >= 0;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant (x - 1) == N;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nvoid main()\n{\n  int x, m, N;\n  N = unknown_int();\n  if (N < 0)\n    \nreturn;\n\n  x = N;\n  /*@\nloop invariant i1: 0 <= x <= N;\n\n*/\nwhile(x > 0)\n  {\n    x = x - 1;\n  }\n  {;\n//@ assert(x == 0);\n}\n    \n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nvoid main()\n{\n  int x, m, N;\n  N = unknown_int();\n  if (N < 0)\n    \nreturn;\n\n  x = N;\n  /*@\nloop invariant i1: 0 <= x <= N;\n*/\nwhile(x > 0)\n  {\n    x = x - 1;\n  }\n  {;\n//@ assert(x == 0);\n}\n    \n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x == N - y;\nloop invariant y == N - x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nvoid main()\n{\n  int x, m, N;\n  N = unknown_int();\n  if (N < 0)\n    \nreturn;\n\n  x = N;\n  /*@\nloop invariant i1: 0 <= x <= N;\n\n\n*/\nwhile(x > 0)\n  {\n    x = x - 1;\n  }\n  {;\n//@ assert(x == 0);\n}\n    \n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x < N ==> x == 0;\nloop invariant x >= N ==> x == N;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nvoid main()\n{\n  int x, m, N;\n  N = unknown_int();\n  if (N < 0)\n    \nreturn;\n\n  x = N;\n  /*@\nloop invariant i1: 0 <= x <= N;\n\nloop invariant i3: x >= N ==> x == N;\n*/\nwhile(x > 0)\n  {\n    x = x - 1;\n  }\n  {;\n//@ assert(x == 0);\n}\n    \n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= N;\nloop invariant 0 <= x;\nloop invariant x <= N;\nloop invariant x == N - (N - x);\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == N - x;\nloop invariant x <= 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\nloop invariant N == x;\nloop invariant x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nvoid main()\n{\n  int x, m, N;\n  N = unknown_int();\n  if (N < 0)\n    \nreturn;\n\n  x = N;\n  /*@\nloop invariant i1: 0 <= N;\nloop invariant i2: 0 <= x;\nloop invariant i3: x <= N;\nloop invariant i4: x == N - (N - x);\n\n\n\n\n*/\nwhile(x > 0)\n  {\n    x = x - 1;\n  }\n  {;\n//@ assert(x == 0);\n}\n    \n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 98,
                "annotations": "```\n/*@\nloop invariant N >= 0;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x + 1 >= N;\nloop invariant x + 2 >= N;\nloop invariant x + 3 >= N;\nloop invariant x + 4 >= N;\nloop invariant x + 5 >= N;\nloop invariant x + 6 >= N;\nloop invariant x + 7 >= N;\nloop invariant x + 8 >= N;\nloop invariant x + 9 >= N;\nloop invariant x + 10 >= N;\nloop invariant x + 11 >= N;\nloop invariant x + 12 >= N;\nloop invariant x + 13 >= N;\nloop invariant x + 14 >= N;\nloop invariant x + 15 >= N;\nloop invariant x + 16 >= N;\nloop invariant x + 17 >= N;\nloop invariant x + 18 >= N;\nloop invariant x + 19 >= N;\nloop invariant x + 20 >= N;\nloop invariant x + 21 >= N;\nloop invariant x + 22 >= N;\nloop invariant x + 23 >= N;\nloop invariant x + 24 >= N;\nloop invariant x + 25 >= N;\nloop invariant x + 26 >= N;\nloop invariant x + 27 >= N;\nloop invariant x + 28 >= N;\nloop invariant x + 29 >= N;\nloop invariant x + 30 >= N;\nloop invariant x + 31 >= N;\nloop invariant x + 32 >= N;\nloop invariant x + 33 >= N;\nloop invariant x + 34 >= N;\nloop invariant x + 35 >= N;\nloop invariant x + 36 >= N;\nloop invariant x + 37 >= N;\nloop invariant x + 38 >= N;\nloop invariant x + 39 >= N;\nloop invariant x + 40 >= N;\nloop invariant x + 41 >= N;\nloop invariant x + 42 >= N;\nloop invariant x + 43 >= N;\nloop invariant x + 44 >= N;\nloop invariant x + 45 >= N;\nloop invariant x + 46 >= N;\nloop invariant x + 47 >= N;\nloop invariant x + 48 >= N;\nloop invariant x + 49 >= N;\nloop invariant x + 50 >= N;\nloop invariant x + 51 >= N;\nloop invariant x + 52 >= N;\nloop invariant x + 53 >= N;\nloop invariant x + 54 >= N;\nloop invariant x + 55 >= N;\nloop invariant x + 56 >= N;\nloop invariant x + 57 >= N;\nloop invariant x + 58 >= N;\nloop invariant x + 59 >= N;\nloop invariant x + 60 >= N;\nloop invariant x + 61 >= N;\nloop invariant x + 62 >= N;\nloop invariant x + 63 >= N;\nloop invariant x + 64 >= N;\nloop invariant x + 65 >= N;\nloop invariant x + 66 >= N;\nloop invariant x + 67 >= N;\nloop invariant x + 68 >= N;\nloop invariant x + 69 >= N;\nloop invariant x + 70 >= N;\nloop invariant x + 71 >= N;\nloop invariant x + 72 >= N;\nloop invariant x + 73 >= N;\nloop invariant x + 74 >= N;\nloop invariant x + 75 >= N;\nloop invariant x + 76 >= N;\nloop invariant x + 77 >= N;\nloop invariant x + 78 >= N;\nloop invariant x + 79 >= N;\nloop invariant x + 80 >= N;\nloop invariant x + 81 >= N;\nloop invariant x + 82 >= N;\nloop invariant x + 83 >= N;\nloop invariant x + 84 >= N;\nloop invariant x + 85 >= N;\nloop invariant x + 86 >= N;\nloop invariant x + 87 >= N;\nloop invariant x + 88 >= N;\nloop invariant x + 89 >= N;\nloop invariant x + 90 >= N;\nloop invariant x + 91 >= N;\nloop invariant x + 92 >= N;\nloop invariant x + 93 >= N;\nloop invariant x + 94 >= N;\nloop invariant x + 95 >= N;\nloop invariant x + 96 >= N;\nloop invariant x + 97 >= N;\nloop invariant x + 98 >= N;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nvoid main()\n{\n  int x, m, N;\n  N = unknown_int();\n  if (N < 0)\n    \nreturn;\n\n  x = N;\n  /*@\nloop invariant i1: N >= 0;\nloop invariant i2: x >= 0;\nloop invariant i3: x <= N;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x > 0)\n  {\n    x = x - 1;\n  }\n  {;\n//@ assert(x == 0);\n}\n    \n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x == N - y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nvoid main()\n{\n  int x, m, N;\n  N = unknown_int();\n  if (N < 0)\n    \nreturn;\n\n  x = N;\n  /*@\nloop invariant i1: 0 <= x <= N;\n\n*/\nwhile(x > 0)\n  {\n    x = x - 1;\n  }\n  {;\n//@ assert(x == 0);\n}\n    \n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x >= N;\nloop invariant x == 0 ==> N >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nvoid main()\n{\n  int x, m, N;\n  N = unknown_int();\n  if (N < 0)\n    \nreturn;\n\n  x = N;\n  /*@\nloop invariant i1: 0 <= x <= N;\n\nloop invariant i3: x == 0 ==> N >= 0;\n*/\nwhile(x > 0)\n  {\n    x = x - 1;\n  }\n  {;\n//@ assert(x == 0);\n}\n    \n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N && x <= 0;\nloop invariant 0 <= x <= N && x <= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nvoid main()\n{\n  int x, m, N;\n  N = unknown_int();\n  if (N < 0)\n    \nreturn;\n\n  x = N;\n  /*@\n\n*/\nwhile(x > 0)\n  {\n    x = x - 1;\n  }\n  {;\n//@ assert(x == 0);\n}\n    \n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nvoid main()\n{\n  int x, m, N;\n  N = unknown_int();\n  if (N < 0)\n    \nreturn;\n\n  x = N;\n  /*@\nloop invariant i1: 0 <= x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N;\n*/\nwhile(x > 0)\n  {\n    x = x - 1;\n  }\n  {;\n//@ assert(x == 0);\n}\n    \n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 32,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= N;\nloop invariant x == N - (N - x);\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == 0 ==> x >= 0;\nloop invariant x == 0 ==> x <= N;\nloop invariant x == 0 ==> 1 <= x;\nloop invariant x == 0 ==> x == N - (N - x);\nloop invariant x == 0 ==> true;\nloop invariant x == 0 ==> x >= 0 ==> true;\nloop invariant x == 0 ==> x <= N ==> true;\nloop invariant x == 0 ==> 1 <= x ==> true;\nloop invariant x == 0 ==> x == N - (N - x) ==> true;\nloop invariant x == 0 ==> true ==> true;\nloop invariant x == 0 ==> x >= 0 ==> true ==> true;\nloop invariant x == 0 ==> x <= N ==> true ==> true;\nloop invariant x == 0 ==> 1 <= x ==> true ==> true;\nloop invariant x == 0 ==> x == N - (N - x) ==> true ==> true;\nloop invariant x == 0 ==> true ==> true ==> true;\nloop invariant x == 0 ==> x >= 0 ==> true ==> true ==> true;\nloop invariant x == 0 ==> x <= N ==> true ==> true ==> true;\nloop invariant x == 0 ==> 1 <= x ==> true ==> true ==> true;\nloop invariant x == 0 ==> x == N - (N - x) ==> true ==> true ==> true;\nloop invariant x == 0 ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> x >= 0 ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> x <= N ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> 1 <= x ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> x == N - (N - x) ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> true ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> x >= 0 ==> true ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> x <= N ==> true ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> 1 <= x ==> true ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> x == N - (N - x) ==> true ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> true ==> true ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> x >= 0 ==> true ==> true ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> x <= N ==> true ==> true ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> 1 <= x ==> true ==> true ==> true ==> true ==> true ==> true;\nloop invariant x == 0 ==> x == N - (N - x) ==> true ==> true ==> true ==> true ==> true ==> true;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nvoid main()\n{\n  int x, m, N;\n  N = unknown_int();\n  if (N < 0)\n    \nreturn;\n\n  x = N;\n  /*@\n\nloop invariant i2: x == N - (N - x);\nloop invariant i3: x >= 0;\n\nloop invariant i5: x == 0 ==> x >= 0;\n\n\nloop invariant i8: x == 0 ==> x == N - (N - x);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x > 0)\n  {\n    x = x - 1;\n  }\n  {;\n//@ assert(x == 0);\n}\n    \n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x <= N;\nloop invariant 0 <= x <= N;\nloop invariant x >= N;\nloop invariant x <= 0;\nloop invariant x == N;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == N;\nloop invariant x <= N;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nvoid main()\n{\n  int x, m, N;\n  N = unknown_int();\n  if (N < 0)\n    \nreturn;\n\n  x = N;\n  /*@\nloop invariant i1: x <= N;\nloop invariant i2: 0 <= x <= N;\n\n\n\n\nloop invariant i7: x >= 0;\n*/\nwhile(x > 0)\n  {\n    x = x - 1;\n  }\n  {;\n//@ assert(x == 0);\n}\n    \n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 < x <= N;\nloop invariant x == (N - #loop_iters);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nvoid main()\n{\n  int x, m, N;\n  N = unknown_int();\n  if (N < 0)\n    \nreturn;\n\n  x = N;\n  /*@\nloop invariant i1: 0 < x <= N;\nloop invariant i2: x == (N - #loop_iters);\n*/\nwhile(x > 0)\n  {\n    x = x - 1;\n  }\n  {;\n//@ assert(x == 0);\n}\n    \n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nvoid main()\n{\n  int x, m, N;\n  N = unknown_int();\n  if (N < 0)\n    \nreturn;\n\n  x = N;\n  /*@\nloop invariant i1: 0 <= x <= N;\nloop invariant i2: x >= 0;\n*/\nwhile(x > 0)\n  {\n    x = x - 1;\n  }\n  {;\n//@ assert(x == 0);\n}\n    \n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x >= N - i, i = 1, 2, ..., N;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nvoid main()\n{\n  int x, m, N;\n  N = unknown_int();\n  if (N < 0)\n    \nreturn;\n\n  x = N;\n  /*@\nloop invariant i1: 0 <= x <= N;\n\nloop invariant i3: x >= 0;\n*/\nwhile(x > 0)\n  {\n    x = x - 1;\n  }\n  {;\n//@ assert(x == 0);\n}\n    \n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 175: unexpected token 'invariant'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nvoid main()\n{\n  int x, m, N;\n  N = unknown_int();\n  if (N < 0)\n    \nreturn;\n\n  x = N;\n  /*@\nloop invariant i1: 0 <= x <= N;\nloop invariant i2: (x - 1) == N;\nloop invariant i3: x == N - y;\nloop invariant i4: y == N - x;\nloop invariant i5: x < N ==> x == 0;\nloop invariant i6: x >= N ==> x == N;\nloop invariant i7: 0 <= N;\nloop invariant i8: 0 <= x;\nloop invariant i9: x <= N;\nloop invariant i10: x == N - (N - x);\nloop invariant i11: x == 0;\nloop invariant i12: N == x;\nloop invariant i13: x == N - x;\nloop invariant i14: x <= 0;\nloop invariant i15: N >= 0;\nloop invariant i16: x >= 0;\nloop invariant i17: x + 1 >= N;\nloop invariant i18: x + 2 >= N;\nloop invariant i19: x + 3 >= N;\nloop invariant i20: x + 4 >= N;\nloop invariant i21: x + 5 >= N;\nloop invariant i22: x + 6 >= N;\nloop invariant i23: x + 7 >= N;\nloop invariant i24: x + 8 >= N;\nloop invariant i25: x + 9 >= N;\nloop invariant i26: x + 10 >= N;\nloop invariant i27: x + 11 >= N;\nloop invariant i28: x + 12 >= N;\nloop invariant i29: x + 13 >= N;\nloop invariant i30: x + 14 >= N;\nloop invariant i31: x + 15 >= N;\nloop invariant i32: x + 16 >= N;\nloop invariant i33: x + 17 >= N;\nloop invariant i34: x + 18 >= N;\nloop invariant i35: x + 19 >= N;\nloop invariant i36: x + 20 >= N;\nloop invariant i37: x + 21 >= N;\nloop invariant i38: x + 22 >= N;\nloop invariant i39: x + 23 >= N;\nloop invariant i40: x + 24 >= N;\nloop invariant i41: x + 25 >= N;\nloop invariant i42: x + 26 >= N;\nloop invariant i43: x + 27 >= N;\nloop invariant i44: x + 28 >= N;\nloop invariant i45: x + 29 >= N;\nloop invariant i46: x + 30 >= N;\nloop invariant i47: x + 31 >= N;\nloop invariant i48: x + 32 >= N;\nloop invariant i49: x + 33 >= N;\nloop invariant i50: x + 34 >= N;\nloop invariant i51: x + 35 >= N;\nloop invariant i52: x + 36 >= N;\nloop invariant i53: x + 37 >= N;\nloop invariant i54: x + 38 >= N;\nloop invariant i55: x + 39 >= N;\nloop invariant i56: x + 40 >= N;\nloop invariant i57: x + 41 >= N;\nloop invariant i58: x + 42 >= N;\nloop invariant i59: x + 43 >= N;\nloop invariant i60: x + 44 >= N;\nloop invariant i61: x + 45 >= N;\nloop invariant i62: x + 46 >= N;\nloop invariant i63: x + 47 >= N;\nloop invariant i64: x + 48 >= N;\nloop invariant i65: x + 49 >= N;\nloop invariant i66: x + 50 >= N;\nloop invariant i67: x + 51 >= N;\nloop invariant i68: x + 52 >= N;\nloop invariant i69: x + 53 >= N;\nloop invariant i70: x + 54 >= N;\nloop invariant i71: x + 55 >= N;\nloop invariant i72: x + 56 >= N;\nloop invariant i73: x + 57 >= N;\nloop invariant i74: x + 58 >= N;\nloop invariant i75: x + 59 >= N;\nloop invariant i76: x + 60 >= N;\nloop invariant i77: x + 61 >= N;\nloop invariant i78: x + 62 >= N;\nloop invariant i79: x + 63 >= N;\nloop invariant i80: x + 64 >= N;\nloop invariant i81: x + 65 >= N;\nloop invariant i82: x + 66 >= N;\nloop invariant i83: x + 67 >= N;\nloop invariant i84: x + 68 >= N;\nloop invariant i85: x + 69 >= N;\nloop invariant i86: x + 70 >= N;\nloop invariant i87: x + 71 >= N;\nloop invariant i88: x + 72 >= N;\nloop invariant i89: x + 73 >= N;\nloop invariant i90: x + 74 >= N;\nloop invariant i91: x + 75 >= N;\nloop invariant i92: x + 76 >= N;\nloop invariant i93: x + 77 >= N;\nloop invariant i94: x + 78 >= N;\nloop invariant i95: x + 79 >= N;\nloop invariant i96: x + 80 >= N;\nloop invariant i97: x + 81 >= N;\nloop invariant i98: x + 82 >= N;\nloop invariant i99: x + 83 >= N;\nloop invariant i100: x + 84 >= N;\nloop invariant i101: x + 85 >= N;\nloop invariant i102: x + 86 >= N;\nloop invariant i103: x + 87 >= N;\nloop invariant i104: x + 88 >= N;\nloop invariant i105: x + 89 >= N;\nloop invariant i106: x + 90 >= N;\nloop invariant i107: x + 91 >= N;\nloop invariant i108: x + 92 >= N;\nloop invariant i109: x + 93 >= N;\nloop invariant i110: x + 94 >= N;\nloop invariant i111: x + 95 >= N;\nloop invariant i112: x + 96 >= N;\nloop invariant i113: x + 97 >= N;\nloop invariant i114: x + 98 >= N;\nloop invariant i115: x >= N;\nloop invariant i116: x == 0 ==> N >= 0;\nloop invariant i117: 0 <= x <= N && x <= 0;\nloop invariant i118: 0 <= x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N;\nloop invariant i119: 1 <= x <= N;\nloop invariant i120: x == 0 ==> x >= 0;\nloop invariant i121: x == 0 ==> x <= N;\nloop invariant i122: x == 0 ==> 1 <= x;\nloop invariant i123: x == 0 ==> x == N - (N - x);\nloop invariant i124: x == 0 ==> true;\nloop invariant i125: x == 0 ==> x >= 0 ==> true;\nloop invariant i126: x == 0 ==> x <= N ==> true;\nloop invariant i127: x == 0 ==> 1 <= x ==> true;\nloop invariant i128: x == 0 ==> x == N - (N - x) ==> true;\nloop invariant i129: x == 0 ==> true ==> true;\nloop invariant i130: x == 0 ==> x >= 0 ==> true ==> true;\nloop invariant i131: x == 0 ==> x <= N ==> true ==> true;\nloop invariant i132: x == 0 ==> 1 <= x ==> true ==> true;\nloop invariant i133: x == 0 ==> x == N - (N - x) ==> true ==> true;\nloop invariant i134: x == 0 ==> true ==> true ==> true;\nloop invariant i135: x == 0 ==> x >= 0 ==> true ==> true ==> true;\nloop invariant i136: x == 0 ==> x <= N ==> true ==> true ==> true;\nloop invariant i137: x == 0 ==> 1 <= x ==> true ==> true ==> true;\nloop invariant i138: x == 0 ==> x == N - (N - x) ==> true ==> true ==> true;\nloop invariant i139: x == 0 ==> true ==> true ==> true ==> true;\nloop invariant i140: x == 0 ==> x >= 0 ==> true ==> true ==> true ==> true;\nloop invariant i141: x == 0 ==> x <= N ==> true ==> true ==> true ==> true;\nloop invariant i142: x == 0 ==> 1 <= x ==> true ==> true ==> true ==> true;\nloop invariant i143: x == 0 ==> x == N - (N - x) ==> true ==> true ==> true ==> true;\nloop invariant i144: x == 0 ==> true ==> true ==> true ==> true ==> true;\nloop invariant i145: x == 0 ==> x >= 0 ==> true ==> true ==> true ==> true ==> true;\nloop invariant i146: x == 0 ==> x <= N ==> true ==> true ==> true ==> true ==> true;\nloop invariant i147: x == 0 ==> 1 <= x ==> true ==> true ==> true ==> true ==> true;\nloop invariant i148: x == 0 ==> x == N - (N - x) ==> true ==> true ==> true ==> true ==> true;\nloop invariant i149: x == 0 ==> true ==> true ==> true ==> true ==> true ==> true;\nloop invariant i150: x == 0 ==> x >= 0 ==> true ==> true ==> true ==> true ==> true ==> true;\nloop invariant i151: x == 0 ==> x <= N ==> true ==> true ==> true ==> true ==> true ==> true;\nloop invariant i152: x == 0 ==> 1 <= x ==> true ==> true ==> true ==> true ==> true ==> true;\nloop invariant i153: x == 0 ==> x == N - (N - x) ==> true ==> true ==> true ==> true ==> true ==> true;\nloop invariant i154: x == N;\nloop invariant i155: 0 < x <= N;\nloop invariant i156: x == (N - #loop_iters);\nloop invariant i157: x >= N - i, i = 1, 2, ..., N;\n*/\nwhile(x > 0)\n  {\n    x = x - 1;\n  }\n  {;\n//@ assert(x == 0);\n}\n    \n}",
        "combined_annotation_num_solver_calls": 2,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nvoid main()\n{\n  int x, m, N;\n  N = unknown_int();\n  if (N < 0)\n    \nreturn;\n\n  x = N;\n  /*@\nloop invariant i1: 0 <= x <= N;\nloop invariant i2: (x - 1) == N;\nloop invariant i3: x == N - y;\nloop invariant i4: y == N - x;\nloop invariant i5: x < N ==> x == 0;\nloop invariant i6: x >= N ==> x == N;\nloop invariant i7: 0 <= N;\nloop invariant i8: 0 <= x;\nloop invariant i9: x <= N;\nloop invariant i10: x == N - (N - x);\nloop invariant i11: x == 0;\nloop invariant i12: N == x;\nloop invariant i13: x == N - x;\nloop invariant i14: x <= 0;\nloop invariant i15: N >= 0;\nloop invariant i16: x >= 0;\nloop invariant i17: x + 1 >= N;\nloop invariant i18: x + 2 >= N;\nloop invariant i19: x + 3 >= N;\nloop invariant i20: x + 4 >= N;\nloop invariant i21: x + 5 >= N;\nloop invariant i22: x + 6 >= N;\nloop invariant i23: x + 7 >= N;\nloop invariant i24: x + 8 >= N;\nloop invariant i25: x + 9 >= N;\nloop invariant i26: x + 10 >= N;\nloop invariant i27: x + 11 >= N;\nloop invariant i28: x + 12 >= N;\nloop invariant i29: x + 13 >= N;\nloop invariant i30: x + 14 >= N;\nloop invariant i31: x + 15 >= N;\nloop invariant i32: x + 16 >= N;\nloop invariant i33: x + 17 >= N;\nloop invariant i34: x + 18 >= N;\nloop invariant i35: x + 19 >= N;\nloop invariant i36: x + 20 >= N;\nloop invariant i37: x + 21 >= N;\nloop invariant i38: x + 22 >= N;\nloop invariant i39: x + 23 >= N;\nloop invariant i40: x + 24 >= N;\nloop invariant i41: x + 25 >= N;\nloop invariant i42: x + 26 >= N;\nloop invariant i43: x + 27 >= N;\nloop invariant i44: x + 28 >= N;\nloop invariant i45: x + 29 >= N;\nloop invariant i46: x + 30 >= N;\nloop invariant i47: x + 31 >= N;\nloop invariant i48: x + 32 >= N;\nloop invariant i49: x + 33 >= N;\nloop invariant i50: x + 34 >= N;\nloop invariant i51: x + 35 >= N;\nloop invariant i52: x + 36 >= N;\nloop invariant i53: x + 37 >= N;\nloop invariant i54: x + 38 >= N;\nloop invariant i55: x + 39 >= N;\nloop invariant i56: x + 40 >= N;\nloop invariant i57: x + 41 >= N;\nloop invariant i58: x + 42 >= N;\nloop invariant i59: x + 43 >= N;\nloop invariant i60: x + 44 >= N;\nloop invariant i61: x + 45 >= N;\nloop invariant i62: x + 46 >= N;\nloop invariant i63: x + 47 >= N;\nloop invariant i64: x + 48 >= N;\nloop invariant i65: x + 49 >= N;\nloop invariant i66: x + 50 >= N;\nloop invariant i67: x + 51 >= N;\nloop invariant i68: x + 52 >= N;\nloop invariant i69: x + 53 >= N;\nloop invariant i70: x + 54 >= N;\nloop invariant i71: x + 55 >= N;\nloop invariant i72: x + 56 >= N;\nloop invariant i73: x + 57 >= N;\nloop invariant i74: x + 58 >= N;\nloop invariant i75: x + 59 >= N;\nloop invariant i76: x + 60 >= N;\nloop invariant i77: x + 61 >= N;\nloop invariant i78: x + 62 >= N;\nloop invariant i79: x + 63 >= N;\nloop invariant i80: x + 64 >= N;\nloop invariant i81: x + 65 >= N;\nloop invariant i82: x + 66 >= N;\nloop invariant i83: x + 67 >= N;\nloop invariant i84: x + 68 >= N;\nloop invariant i85: x + 69 >= N;\nloop invariant i86: x + 70 >= N;\nloop invariant i87: x + 71 >= N;\nloop invariant i88: x + 72 >= N;\nloop invariant i89: x + 73 >= N;\nloop invariant i90: x + 74 >= N;\nloop invariant i91: x + 75 >= N;\nloop invariant i92: x + 76 >= N;\nloop invariant i93: x + 77 >= N;\nloop invariant i94: x + 78 >= N;\nloop invariant i95: x + 79 >= N;\nloop invariant i96: x + 80 >= N;\nloop invariant i97: x + 81 >= N;\nloop invariant i98: x + 82 >= N;\nloop invariant i99: x + 83 >= N;\nloop invariant i100: x + 84 >= N;\nloop invariant i101: x + 85 >= N;\nloop invariant i102: x + 86 >= N;\nloop invariant i103: x + 87 >= N;\nloop invariant i104: x + 88 >= N;\nloop invariant i105: x + 89 >= N;\nloop invariant i106: x + 90 >= N;\nloop invariant i107: x + 91 >= N;\nloop invariant i108: x + 92 >= N;\nloop invariant i109: x + 93 >= N;\nloop invariant i110: x + 94 >= N;\nloop invariant i111: x + 95 >= N;\nloop invariant i112: x + 96 >= N;\nloop invariant i113: x + 97 >= N;\nloop invariant i114: x + 98 >= N;\nloop invariant i115: x >= N;\nloop invariant i116: x == 0 ==> N >= 0;\nloop invariant i117: 0 <= x <= N && x <= 0;\nloop invariant i118: 0 <= x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N; loop invariant x >= 0; loop invariant x <= N; loop invariant x <= N;\nloop invariant i119: 1 <= x <= N;\nloop invariant i120: x == 0 ==> x >= 0;\nloop invariant i121: x == 0 ==> x <= N;\nloop invariant i122: x == 0 ==> 1 <= x;\nloop invariant i123: x == 0 ==> x == N - (N - x);\nloop invariant i124: x == 0 ==> true;\nloop invariant i125: x == 0 ==> x >= 0 ==> true;\nloop invariant i126: x == 0 ==> x <= N ==> true;\nloop invariant i127: x == 0 ==> 1 <= x ==> true;\nloop invariant i128: x == 0 ==> x == N - (N - x) ==> true;\nloop invariant i129: x == 0 ==> true ==> true;\nloop invariant i130: x == 0 ==> x >= 0 ==> true ==> true;\nloop invariant i131: x == 0 ==> x <= N ==> true ==> true;\nloop invariant i132: x == 0 ==> 1 <= x ==> true ==> true;\nloop invariant i133: x == 0 ==> x == N - (N - x) ==> true ==> true;\nloop invariant i134: x == 0 ==> true ==> true ==> true;\nloop invariant i135: x == 0 ==> x >= 0 ==> true ==> true ==> true;\nloop invariant i136: x == 0 ==> x <= N ==> true ==> true ==> true;\nloop invariant i137: x == 0 ==> 1 <= x ==> true ==> true ==> true;\nloop invariant i138: x == 0 ==> x == N - (N - x) ==> true ==> true ==> true;\nloop invariant i139: x == 0 ==> true ==> true ==> true ==> true;\nloop invariant i140: x == 0 ==> x >= 0 ==> true ==> true ==> true ==> true;\nloop invariant i141: x == 0 ==> x <= N ==> true ==> true ==> true ==> true;\nloop invariant i142: x == 0 ==> 1 <= x ==> true ==> true ==> true ==> true;\nloop invariant i143: x == 0 ==> x == N - (N - x) ==> true ==> true ==> true ==> true;\nloop invariant i144: x == 0 ==> true ==> true ==> true ==> true ==> true;\nloop invariant i145: x == 0 ==> x >= 0 ==> true ==> true ==> true ==> true ==> true;\nloop invariant i146: x == 0 ==> x <= N ==> true ==> true ==> true ==> true ==> true;\nloop invariant i147: x == 0 ==> 1 <= x ==> true ==> true ==> true ==> true ==> true;\nloop invariant i148: x == 0 ==> x == N - (N - x) ==> true ==> true ==> true ==> true ==> true;\nloop invariant i149: x == 0 ==> true ==> true ==> true ==> true ==> true ==> true;\nloop invariant i150: x == 0 ==> x >= 0 ==> true ==> true ==> true ==> true ==> true ==> true;\nloop invariant i151: x == 0 ==> x <= N ==> true ==> true ==> true ==> true ==> true ==> true;\nloop invariant i152: x == 0 ==> 1 <= x ==> true ==> true ==> true ==> true ==> true ==> true;\nloop invariant i153: x == 0 ==> x == N - (N - x) ==> true ==> true ==> true ==> true ==> true ==> true;\nloop invariant i154: x == N;\nloop invariant i155: 0 < x <= N;\nloop invariant i156: x == (N - #loop_iters);\n\n*/\nwhile(x > 0)\n  {\n    x = x - 1;\n  }\n  {;\n//@ assert(x == 0);\n}\n    \n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c"
        ],
        "skipped": [],
        "total": 74,
        "success_count": 63,
        "failure_count": 11,
        "success_rate": 0.8513513513513513
    }
}