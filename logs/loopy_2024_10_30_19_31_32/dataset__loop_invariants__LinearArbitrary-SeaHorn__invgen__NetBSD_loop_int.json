{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main ()\n{\n  int MAXPATHLEN = unknown ();\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  for (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      {;\n//@ assert(0 <= glob3_dc);\n}\n{;\n//@ assert(glob3_dc < MAXPATHLEN + 1);\n}\n\n      if (unknown()) goto END;\n    }\n\n END:  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= glob3_dc;\nloop invariant 0 <= glob3_pathend_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pattern_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathlim_off ==> glob3_pathend_off >= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathlim_off ==> glob3_dc >= 0;\nloop invariant glob3_dc >= 0 ==> glob3_pathend_off + glob3_dc >= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 ==> glob3_pathend_off + glob3_dc >= 0;\nloop invariant glob3_dc >= 0 ==> glob3_pathend_off >= 0;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off >= 0;\nloop invariant glob3_dc >= 0 ==> MAXPATHLEN + 1 >= 0;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 1;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 2;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 3;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 4;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 5;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 6;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 7;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 8;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 9;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 10;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 11;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 12;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 13;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 14;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 15;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 16;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 17;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 18;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 19;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 20;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 21;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 22;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 23;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 24;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob3_dc;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pattern_off;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off + glob3_dc < glob3_pathlim_off + 1;\nloop invariant glob3_pathbuf_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + 1;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 2;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 3;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 4;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 5;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 6;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 7;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 8;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 9;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 10;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 11;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 12;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 13;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 14;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 15;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 16;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 17;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 18;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 19;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 20;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 21;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 22;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 23;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 24;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 25;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 26;\n*/\n```",
            "```\n/*@\nloop invariant glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant glob3_pathlim_off <= MAXPATHLEN + 1;\nloop invariant 0 <= glob3_dc;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off + 1;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob3_dc;\nloop invariant glob3_pattern_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pattern_off <= glob3_pathlim_off;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathbuf_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off + glob3_dc;\nloop invariant glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pattern_off <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_dc <= MAXPATHLEN + 1 - glob3_pathbuf_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pattern_off <= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off >= glob3_pathend_off + glob3_dc;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> 0 <= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathlim_off >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc == glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off == glob3_pathlim_off - glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathlim_off - glob3_dc > 0;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= 0;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob3_dc;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant buf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_pathbuf_off <= MAXPATHLEN;\nloop invariant glob3_pathend_off - glob3_pathbuf_off <= MAXPATHLEN;\nloop invariant glob3_pathlim_off - glob3_pathend_off <= MAXPATHLEN;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathbuf_off;\nloop invariant glob3_dc <= glob3_pathend_off - glob3_pathbuf_off;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob3_dc;\nloop invariant 0 <= glob3_pathend_off;\nloop invariant 0 <= glob3_pathbuf_off;\nloop invariant 0 <= glob3_pattern_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathlim_off ==> glob3_pathend_off + glob3_dc == glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathlim_off ==> glob3_dc == 0;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc + 1 == glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc + 1 == 0;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc == glob3_pathlim_off - glob3_pathend_off - 1;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off - 1;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= glob3_dc;\nloop invariant 0 <= glob3_pathend_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pattern_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main ()\n{\n  int MAXPATHLEN = unknown ();\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_dc;\nloop invariant i2: 0 <= glob3_pathend_off;\n\nloop invariant i4: glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i5: glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i6: glob3_pattern_off <= glob3_pathend_off;\nloop invariant i7: glob3_pattern_off <= glob3_pathlim_off;\nloop invariant i8: glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant i9: glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant i10: glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant i11: glob3_pathend_off <= glob3_pathbuf_off;\n\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      {;\n//@ assert(0 <= glob3_dc);\n}\n{;\n//@ assert(glob3_dc < MAXPATHLEN + 1);\n}\n\n      if (unknown()) goto END;\n    }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 26,
                "annotations": "```\n/*@\nloop invariant 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathlim_off ==> glob3_pathend_off >= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathlim_off ==> glob3_dc >= 0;\nloop invariant glob3_dc >= 0 ==> glob3_pathend_off + glob3_dc >= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 ==> glob3_pathend_off + glob3_dc >= 0;\nloop invariant glob3_dc >= 0 ==> glob3_pathend_off >= 0;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off >= 0;\nloop invariant glob3_dc >= 0 ==> MAXPATHLEN + 1 >= 0;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 1;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 2;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 3;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 4;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 5;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 6;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 7;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 8;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 9;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 10;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 11;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 12;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 13;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 14;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 15;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 16;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 17;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 18;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 19;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 20;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 21;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 22;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 23;\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 24;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main ()\n{\n  int MAXPATHLEN = unknown ();\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant i2: glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i3: glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= MAXPATHLEN + 1;\n\nloop invariant i5: glob3_pathend_off + glob3_dc >= glob3_pathlim_off ==> glob3_dc >= 0;\n\nloop invariant i7: glob3_dc >= 0 ==> glob3_pathend_off + glob3_dc >= 0;\nloop invariant i8: glob3_dc >= 0 ==> glob3_pathend_off >= 0;\nloop invariant i9: glob3_dc >= 0 ==> glob3_pathlim_off >= 0;\nloop invariant i10: glob3_dc >= 0 ==> MAXPATHLEN + 1 >= 0;\n\nloop invariant i12: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + MAXPATHLEN + 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      {;\n//@ assert(0 <= glob3_dc);\n}\n{;\n//@ assert(glob3_dc < MAXPATHLEN + 1);\n}\n\n      if (unknown()) goto END;\n    }\n\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main ()\n{\n  int MAXPATHLEN = unknown ();\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_dc;\n\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      {;\n//@ assert(0 <= glob3_dc);\n}\n{;\n//@ assert(glob3_dc < MAXPATHLEN + 1);\n}\n\n      if (unknown()) goto END;\n    }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= glob3_dc;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pattern_off;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off + glob3_dc < glob3_pathlim_off + 1;\nloop invariant glob3_pathbuf_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + 1;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 2;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 3;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 4;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 5;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 6;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 7;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 8;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 9;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 10;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 11;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 12;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 13;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 14;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 15;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 16;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 17;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 18;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 19;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 20;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 21;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 22;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 23;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 24;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 25;\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 26;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main ()\n{\n  int MAXPATHLEN = unknown ();\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_dc;\nloop invariant i2: glob3_dc <= MAXPATHLEN;\nloop invariant i3: glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i4: glob3_pathend_off + glob3_dc < glob3_pathlim_off + 1;\nloop invariant i5: glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant i6: glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i7: glob3_pattern_off <= glob3_pattern_off;\nloop invariant i8: glob3_pathbuf_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i9: glob3_pathbuf_off + glob3_dc < glob3_pathlim_off + 1;\nloop invariant i10: glob3_pathbuf_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant i11: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc;\nloop invariant i12: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + 1;\nloop invariant i13: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN;\nloop invariant i14: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 1;\nloop invariant i15: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 2;\nloop invariant i16: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 3;\nloop invariant i17: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 4;\nloop invariant i18: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 5;\nloop invariant i19: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 6;\nloop invariant i20: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 7;\nloop invariant i21: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 8;\nloop invariant i22: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 9;\nloop invariant i23: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 10;\nloop invariant i24: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 11;\nloop invariant i25: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 12;\nloop invariant i26: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 13;\nloop invariant i27: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 14;\nloop invariant i28: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 15;\nloop invariant i29: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 16;\nloop invariant i30: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 17;\nloop invariant i31: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 18;\nloop invariant i32: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 19;\nloop invariant i33: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 20;\nloop invariant i34: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 21;\nloop invariant i35: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 22;\nloop invariant i36: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 23;\nloop invariant i37: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 24;\nloop invariant i38: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 25;\nloop invariant i39: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 26;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      {;\n//@ assert(0 <= glob3_dc);\n}\n{;\n//@ assert(glob3_dc < MAXPATHLEN + 1);\n}\n\n      if (unknown()) goto END;\n    }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant glob3_pathlim_off <= MAXPATHLEN + 1;\nloop invariant 0 <= glob3_dc;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main ()\n{\n  int MAXPATHLEN = unknown ();\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant i2: glob3_pathlim_off <= MAXPATHLEN + 1;\nloop invariant i3: 0 <= glob3_dc;\nloop invariant i4: glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant i5: glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant i6: glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i7: glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant i8: glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant i9: glob3_pathlim_off <= glob3_pathbuf_off + MAXPATHLEN + 1;\n\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      {;\n//@ assert(0 <= glob3_dc);\n}\n{;\n//@ assert(glob3_dc < MAXPATHLEN + 1);\n}\n\n      if (unknown()) goto END;\n    }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main ()\n{\n  int MAXPATHLEN = unknown ();\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_dc;\nloop invariant i2: glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\n\nloop invariant i4: glob3_dc < MAXPATHLEN + 1;\nloop invariant i5: glob3_dc >= 0;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      {;\n//@ assert(0 <= glob3_dc);\n}\n{;\n//@ assert(glob3_dc < MAXPATHLEN + 1);\n}\n\n      if (unknown()) goto END;\n    }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off + 1;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main ()\n{\n  int MAXPATHLEN = unknown ();\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_dc <= MAXPATHLEN;\nloop invariant i2: glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i3: glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i4: glob3_dc <= MAXPATHLEN;\nloop invariant i5: glob3_dc <= MAXPATHLEN + 1;\nloop invariant i6: glob3_dc >= 0;\nloop invariant i7: glob3_pathend_off <= glob3_pathlim_off + 1;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      {;\n//@ assert(0 <= glob3_dc);\n}\n{;\n//@ assert(glob3_dc < MAXPATHLEN + 1);\n}\n\n      if (unknown()) goto END;\n    }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= glob3_dc;\nloop invariant glob3_pattern_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pattern_off <= glob3_pathlim_off;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathbuf_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off + glob3_dc;\nloop invariant glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pattern_off <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main ()\n{\n  int MAXPATHLEN = unknown ();\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_dc;\nloop invariant i2: glob3_pattern_off <= glob3_pathlim_off;\nloop invariant i3: glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant i4: glob3_pattern_off <= glob3_pathend_off;\nloop invariant i5: glob3_dc <= glob3_pathlim_off - glob3_pathbuf_off;\nloop invariant i6: glob3_pattern_off <= glob3_pathend_off + glob3_dc;\nloop invariant i7: glob3_dc <= MAXPATHLEN + 1;\nloop invariant i8: glob3_pattern_off <= MAXPATHLEN + 1;\nloop invariant i9: glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant i10: glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i11: glob3_pathbuf_off <= glob3_pathend_off;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      {;\n//@ assert(0 <= glob3_dc);\n}\n{;\n//@ assert(glob3_dc < MAXPATHLEN + 1);\n}\n\n      if (unknown()) goto END;\n    }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_dc <= MAXPATHLEN + 1 - glob3_pathbuf_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pattern_off <= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off >= glob3_pathend_off + glob3_dc;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main ()\n{\n  int MAXPATHLEN = unknown ();\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\n\nloop invariant i2: glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant i3: glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant i4: glob3_pathbuf_off <= glob3_pattern_off;\n\nloop invariant i6: glob3_dc >= 0;\nloop invariant i7: glob3_pattern_off <= glob3_pathend_off + glob3_dc;\nloop invariant i8: glob3_pathlim_off >= glob3_pathend_off + glob3_dc;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      {;\n//@ assert(0 <= glob3_dc);\n}\n{;\n//@ assert(glob3_dc < MAXPATHLEN + 1);\n}\n\n      if (unknown()) goto END;\n    }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> 0 <= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathlim_off >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main ()\n{\n  int MAXPATHLEN = unknown ();\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant i2: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc < MAXPATHLEN + 1;\nloop invariant i3: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> 0 <= glob3_pathend_off + glob3_dc;\nloop invariant i4: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathlim_off >= glob3_pathend_off + glob3_dc;\nloop invariant i5: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i6: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i7: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      {;\n//@ assert(0 <= glob3_dc);\n}\n{;\n//@ assert(glob3_dc < MAXPATHLEN + 1);\n}\n\n      if (unknown()) goto END;\n    }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc == glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off == glob3_pathlim_off - glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathlim_off - glob3_dc > 0;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= 0;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main ()\n{\n  int MAXPATHLEN = unknown ();\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_dc;\n\n\n\nloop invariant i5: glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\n\nloop invariant i7: glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\n\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      {;\n//@ assert(0 <= glob3_dc);\n}\n{;\n//@ assert(glob3_dc < MAXPATHLEN + 1);\n}\n\n      if (unknown()) goto END;\n    }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= glob3_dc;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main ()\n{\n  int MAXPATHLEN = unknown ();\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_dc;\nloop invariant i2: glob3_dc < MAXPATHLEN + 1;\nloop invariant i3: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      {;\n//@ assert(0 <= glob3_dc);\n}\n{;\n//@ assert(glob3_dc < MAXPATHLEN + 1);\n}\n\n      if (unknown()) goto END;\n    }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant buf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off - glob3_pathbuf_off <= MAXPATHLEN;\nloop invariant glob3_pathend_off - glob3_pathbuf_off <= MAXPATHLEN;\nloop invariant glob3_pathlim_off - glob3_pathend_off <= MAXPATHLEN;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathbuf_off;\nloop invariant glob3_dc <= glob3_pathend_off - glob3_pathbuf_off;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main ()\n{\n  int MAXPATHLEN = unknown ();\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: buf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i2: glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant i3: glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i4: glob3_pathlim_off - glob3_pathbuf_off <= MAXPATHLEN;\nloop invariant i5: glob3_pathend_off - glob3_pathbuf_off <= MAXPATHLEN;\nloop invariant i6: glob3_pathlim_off - glob3_pathend_off <= MAXPATHLEN;\nloop invariant i7: glob3_dc >= 0;\nloop invariant i8: glob3_dc <= MAXPATHLEN;\nloop invariant i9: glob3_dc <= glob3_pathlim_off - glob3_pathbuf_off;\n\nloop invariant i11: glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant i12: glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i13: glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\n\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      {;\n//@ assert(0 <= glob3_dc);\n}\n{;\n//@ assert(glob3_dc < MAXPATHLEN + 1);\n}\n\n      if (unknown()) goto END;\n    }\n\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main ()\n{\n  int MAXPATHLEN = unknown ();\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i2: 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant i3: glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i4: glob3_pathend_off <= glob3_pathlim_off;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      {;\n//@ assert(0 <= glob3_dc);\n}\n{;\n//@ assert(glob3_dc < MAXPATHLEN + 1);\n}\n\n      if (unknown()) goto END;\n    }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= glob3_dc;\nloop invariant 0 <= glob3_pathend_off;\nloop invariant 0 <= glob3_pathbuf_off;\nloop invariant 0 <= glob3_pattern_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathlim_off ==> glob3_pathend_off + glob3_dc == glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathlim_off ==> glob3_dc == 0;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc + 1 == glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc + 1 == 0;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc == glob3_pathlim_off - glob3_pathend_off - 1;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc >= 0;\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main ()\n{\n  int MAXPATHLEN = unknown ();\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_dc;\nloop invariant i2: 0 <= glob3_pathend_off;\nloop invariant i3: 0 <= glob3_pathbuf_off;\nloop invariant i4: 0 <= glob3_pattern_off;\nloop invariant i5: glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant i6: glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i7: glob3_pathlim_off <= MAXPATHLEN + 1;\nloop invariant i8: glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i9: glob3_pathend_off + glob3_dc >= glob3_pathlim_off ==> glob3_pathend_off + glob3_dc == glob3_pathlim_off;\n\n\n\n\nloop invariant i14: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc >= 0;\nloop invariant i15: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off - 1;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      {;\n//@ assert(0 <= glob3_dc);\n}\n{;\n//@ assert(glob3_dc < MAXPATHLEN + 1);\n}\n\n      if (unknown()) goto END;\n    }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "loop invariant 0 <= glob3_dc is partially proven to be inductive.\nloop invariant 0 <= glob3_pathend_off is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off is partially proven to be inductive.\nloop invariant glob3_pathend_off <= glob3_pathlim_off is partially proven to be inductive.\nloop invariant glob3_pattern_off <= glob3_pathend_off is partially proven to be inductive.\nloop invariant glob3_pattern_off <= glob3_pathlim_off is partially proven to be inductive.\nloop invariant glob3_pattern_off <= glob3_pathbuf_off is partially proven to be inductive.\nloop invariant glob3_pathbuf_off <= glob3_pathend_off is partially proven to be inductive.\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off is partially proven to be inductive.\nloop invariant glob3_pathend_off <= glob3_pathbuf_off is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathbuf_off is partially proven to be inductive.\nloop invariant 0 <= glob3_dc <= MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathlim_off ==> glob3_pathend_off >= glob3_pathlim_off is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathlim_off ==> glob3_dc >= 0 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathend_off + glob3_dc >= glob3_pathlim_off is preserved but not established.\nloop invariant glob3_dc >= 0 ==> glob3_pathend_off + glob3_dc >= 0 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathend_off >= 0 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off >= 0 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> MAXPATHLEN + 1 >= 0 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 1 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 2 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 3 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 4 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 5 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 6 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 7 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 8 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 9 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 10 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 11 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 12 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 13 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 14 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 15 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 16 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 17 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 18 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 19 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 20 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 21 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 22 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 23 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 24 is partially proven to be inductive.\nloop invariant glob3_dc <= MAXPATHLEN is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off + 1 is partially proven to be inductive.\nloop invariant glob3_pattern_off <= glob3_pattern_off is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathlim_off is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc < glob3_pathlim_off + 1 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc >= glob3_pathbuf_off is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + 1 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 2 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 3 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 4 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 5 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 6 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 7 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 8 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 9 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 10 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 11 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 12 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 13 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 14 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 15 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 16 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 17 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 18 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 19 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 20 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 21 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 22 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 23 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 24 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 25 is partially proven to be inductive.\nloop invariant glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 26 is partially proven to be inductive.\nloop invariant glob3_pathend_off <= glob3_pathlim_off - glob3_dc is partially proven to be inductive.\nloop invariant glob3_pathlim_off <= MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off is partially proven to be inductive.\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off + MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc is partially proven to be inductive.\nloop invariant glob3_dc < MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant glob3_dc >= 0 is partially proven to be inductive.\nloop invariant 0 <= glob3_dc <= MAXPATHLEN is partially proven to be inductive.\nloop invariant glob3_dc <= MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant glob3_pathend_off <= glob3_pathlim_off + 1 is partially proven to be inductive.\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathbuf_off is partially proven to be inductive.\nloop invariant glob3_pattern_off <= glob3_pathend_off + glob3_dc is partially proven to be inductive.\nloop invariant glob3_pattern_off <= MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant 1 <= glob3_pathend_off <= glob3_pathlim_off is partially proven to be inductive.\nloop invariant glob3_pathbuf_off <= glob3_pattern_off is partially proven to be inductive.\nloop invariant glob3_dc <= MAXPATHLEN + 1 - glob3_pathbuf_off is partially proven to be inductive.\nloop invariant glob3_pathlim_off >= glob3_pathend_off + glob3_dc is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc < MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> 0 <= glob3_pathend_off + glob3_dc is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathlim_off >= glob3_pathend_off + glob3_dc is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc == glob3_pathlim_off is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off == glob3_pathlim_off - glob3_dc is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathlim_off - glob3_dc > 0 is partially proven to be inductive.\nloop invariant glob3_pathlim_off - glob3_dc <= glob3_pathlim_off is partially proven to be inductive.\nloop invariant glob3_pathlim_off - glob3_dc >= 0 is partially proven to be inductive.\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off is partially proven to be inductive.\nloop invariant glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off is partially proven to be inductive.\nloop invariant buf_off <= glob3_pathend_off <= glob3_pathlim_off is partially proven to be inductive.\nloop invariant glob3_pathlim_off - glob3_pathbuf_off <= MAXPATHLEN is partially proven to be inductive.\nloop invariant glob3_pathend_off - glob3_pathbuf_off <= MAXPATHLEN is partially proven to be inductive.\nloop invariant glob3_pathlim_off - glob3_pathend_off <= MAXPATHLEN is partially proven to be inductive.\nloop invariant glob3_dc <= glob3_pathend_off - glob3_pathbuf_off is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathlim_off is partially proven to be inductive.\nloop invariant 0 <= glob3_pathend_off <= glob3_pathlim_off is partially proven to be inductive.\nloop invariant 0 <= glob3_pathbuf_off is partially proven to be inductive.\nloop invariant 0 <= glob3_pattern_off is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathlim_off ==> glob3_pathend_off + glob3_dc == glob3_pathlim_off is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathlim_off ==> glob3_dc == 0 is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc + 1 == glob3_pathlim_off is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc + 1 == 0 is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc == glob3_pathlim_off - glob3_pathend_off - 1 is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc >= 0 is partially proven to be inductive.\nloop invariant glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off - 1 is partially proven to be inductive.\nAssertion 0 <= glob3_dc: Partially proven\nAssertion glob3_dc < MAXPATHLEN + 1: Partially proven",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main ()\n{\n  int MAXPATHLEN = unknown ();\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_dc;\nloop invariant i2: 0 <= glob3_pathend_off;\nloop invariant i3: glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant i4: glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i5: glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i6: glob3_pattern_off <= glob3_pathend_off;\nloop invariant i7: glob3_pattern_off <= glob3_pathlim_off;\nloop invariant i8: glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant i9: glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant i10: glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant i11: glob3_pathend_off <= glob3_pathbuf_off;\nloop invariant i12: glob3_pathend_off + glob3_dc <= glob3_pathbuf_off;\nloop invariant i13: 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant i14: glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i15: glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= MAXPATHLEN + 1;\nloop invariant i16: glob3_pathend_off + glob3_dc >= glob3_pathlim_off ==> glob3_pathend_off >= glob3_pathlim_off;\nloop invariant i17: glob3_pathend_off + glob3_dc >= glob3_pathlim_off ==> glob3_dc >= 0;\nloop invariant i18: glob3_dc >= 0 ==> glob3_pathend_off + glob3_dc >= glob3_pathlim_off;\nloop invariant i19: glob3_dc >= 0 ==> glob3_pathend_off + glob3_dc >= 0;\nloop invariant i20: glob3_dc >= 0 ==> glob3_pathend_off >= 0;\nloop invariant i21: glob3_dc >= 0 ==> glob3_pathlim_off >= 0;\nloop invariant i22: glob3_dc >= 0 ==> MAXPATHLEN + 1 >= 0;\nloop invariant i23: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc;\nloop invariant i24: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + MAXPATHLEN + 1;\nloop invariant i25: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 1;\nloop invariant i26: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 2;\nloop invariant i27: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 3;\nloop invariant i28: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 4;\nloop invariant i29: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 5;\nloop invariant i30: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 6;\nloop invariant i31: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 7;\nloop invariant i32: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 8;\nloop invariant i33: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 9;\nloop invariant i34: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 10;\nloop invariant i35: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 11;\nloop invariant i36: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 12;\nloop invariant i37: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 13;\nloop invariant i38: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 14;\nloop invariant i39: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 15;\nloop invariant i40: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 16;\nloop invariant i41: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 17;\nloop invariant i42: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 18;\nloop invariant i43: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 19;\nloop invariant i44: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 20;\nloop invariant i45: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 21;\nloop invariant i46: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 22;\nloop invariant i47: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 23;\nloop invariant i48: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + glob3_dc + 24;\nloop invariant i49: glob3_dc <= MAXPATHLEN;\nloop invariant i50: glob3_pathend_off + glob3_dc < glob3_pathlim_off + 1;\nloop invariant i51: glob3_pattern_off <= glob3_pattern_off;\nloop invariant i52: glob3_pathbuf_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i53: glob3_pathbuf_off + glob3_dc < glob3_pathlim_off + 1;\nloop invariant i54: glob3_pathbuf_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant i55: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc;\nloop invariant i56: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + 1;\nloop invariant i57: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN;\nloop invariant i58: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 1;\nloop invariant i59: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 2;\nloop invariant i60: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 3;\nloop invariant i61: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 4;\nloop invariant i62: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 5;\nloop invariant i63: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 6;\nloop invariant i64: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 7;\nloop invariant i65: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 8;\nloop invariant i66: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 9;\nloop invariant i67: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 10;\nloop invariant i68: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 11;\nloop invariant i69: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 12;\nloop invariant i70: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 13;\nloop invariant i71: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 14;\nloop invariant i72: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 15;\nloop invariant i73: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 16;\nloop invariant i74: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 17;\nloop invariant i75: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 18;\nloop invariant i76: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 19;\nloop invariant i77: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 20;\nloop invariant i78: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 21;\nloop invariant i79: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 22;\nloop invariant i80: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 23;\nloop invariant i81: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 24;\nloop invariant i82: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 25;\nloop invariant i83: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 26;\nloop invariant i84: glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant i85: glob3_pathlim_off <= MAXPATHLEN + 1;\nloop invariant i86: glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant i87: glob3_pathlim_off <= glob3_pathbuf_off + MAXPATHLEN + 1;\nloop invariant i88: glob3_pathlim_off <= glob3_pathbuf_off - glob3_pathend_off + glob3_dc;\nloop invariant i89: glob3_dc < MAXPATHLEN + 1;\nloop invariant i90: glob3_dc >= 0;\nloop invariant i91: 0 <= glob3_dc <= MAXPATHLEN;\nloop invariant i92: glob3_dc <= MAXPATHLEN + 1;\nloop invariant i93: glob3_pathend_off <= glob3_pathlim_off + 1;\nloop invariant i94: glob3_dc <= glob3_pathlim_off - glob3_pathbuf_off;\nloop invariant i95: glob3_pattern_off <= glob3_pathend_off + glob3_dc;\nloop invariant i96: glob3_pattern_off <= MAXPATHLEN + 1;\nloop invariant i97: 1 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i98: glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant i99: glob3_dc <= MAXPATHLEN + 1 - glob3_pathbuf_off;\nloop invariant i100: glob3_pathlim_off >= glob3_pathend_off + glob3_dc;\nloop invariant i101: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc < MAXPATHLEN + 1;\nloop invariant i102: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> 0 <= glob3_pathend_off + glob3_dc;\nloop invariant i103: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathlim_off >= glob3_pathend_off + glob3_dc;\nloop invariant i104: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i105: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i106: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant i107: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc == glob3_pathlim_off;\nloop invariant i108: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off == glob3_pathlim_off - glob3_dc;\nloop invariant i109: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathlim_off - glob3_dc > 0;\nloop invariant i110: glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant i111: glob3_pathlim_off - glob3_dc >= 0;\nloop invariant i112: glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\nloop invariant i113: glob3_pathlim_off - glob3_dc >= glob3_pathend_off + glob3_dc;\nloop invariant i114: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant i115: buf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i116: glob3_pathlim_off - glob3_pathbuf_off <= MAXPATHLEN;\nloop invariant i117: glob3_pathend_off - glob3_pathbuf_off <= MAXPATHLEN;\nloop invariant i118: glob3_pathlim_off - glob3_pathend_off <= MAXPATHLEN;\nloop invariant i119: glob3_dc <= glob3_pathend_off - glob3_pathbuf_off;\nloop invariant i120: glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant i121: glob3_pathend_off + glob3_dc >= glob3_pathlim_off;\nloop invariant i122: 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i123: 0 <= glob3_pathbuf_off;\nloop invariant i124: 0 <= glob3_pattern_off;\nloop invariant i125: glob3_pathend_off + glob3_dc >= glob3_pathlim_off ==> glob3_pathend_off + glob3_dc == glob3_pathlim_off;\nloop invariant i126: glob3_pathend_off + glob3_dc >= glob3_pathlim_off ==> glob3_dc == 0;\nloop invariant i127: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc + 1 == glob3_pathlim_off;\nloop invariant i128: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc + 1 == 0;\nloop invariant i129: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc == glob3_pathlim_off - glob3_pathend_off - 1;\nloop invariant i130: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc >= 0;\nloop invariant i131: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off - 1;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      {;\n//@ assert(0 <= glob3_dc);\n}\n{;\n//@ assert(glob3_dc < MAXPATHLEN + 1);\n}\n\n      if (unknown()) goto END;\n    }\n\n END:  return 0;\n}",
        "combined_annotation_num_solver_calls": 27,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main ()\n{\n  int MAXPATHLEN = unknown ();\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_dc;\nloop invariant i2: 0 <= glob3_pathend_off;\n\nloop invariant i4: glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i5: glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i6: glob3_pattern_off <= glob3_pathend_off;\nloop invariant i7: glob3_pattern_off <= glob3_pathlim_off;\nloop invariant i8: glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant i9: glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant i10: glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant i11: glob3_pathend_off <= glob3_pathbuf_off;\n\nloop invariant i13: 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant i14: glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i15: glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= MAXPATHLEN + 1;\n\nloop invariant i17: glob3_pathend_off + glob3_dc >= glob3_pathlim_off ==> glob3_dc >= 0;\n\nloop invariant i19: glob3_dc >= 0 ==> glob3_pathend_off + glob3_dc >= 0;\nloop invariant i20: glob3_dc >= 0 ==> glob3_pathend_off >= 0;\nloop invariant i21: glob3_dc >= 0 ==> glob3_pathlim_off >= 0;\nloop invariant i22: glob3_dc >= 0 ==> MAXPATHLEN + 1 >= 0;\n\nloop invariant i24: glob3_dc >= 0 ==> glob3_pathlim_off < glob3_pathend_off + MAXPATHLEN + 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i49: glob3_dc <= MAXPATHLEN;\nloop invariant i50: glob3_pathend_off + glob3_dc < glob3_pathlim_off + 1;\nloop invariant i51: glob3_pattern_off <= glob3_pattern_off;\nloop invariant i52: glob3_pathbuf_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i53: glob3_pathbuf_off + glob3_dc < glob3_pathlim_off + 1;\nloop invariant i54: glob3_pathbuf_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant i55: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc;\nloop invariant i56: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + 1;\nloop invariant i57: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN;\nloop invariant i58: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 1;\nloop invariant i59: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 2;\nloop invariant i60: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 3;\nloop invariant i61: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 4;\nloop invariant i62: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 5;\nloop invariant i63: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 6;\nloop invariant i64: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 7;\nloop invariant i65: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 8;\nloop invariant i66: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 9;\nloop invariant i67: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 10;\nloop invariant i68: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 11;\nloop invariant i69: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 12;\nloop invariant i70: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 13;\nloop invariant i71: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 14;\nloop invariant i72: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 15;\nloop invariant i73: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 16;\nloop invariant i74: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 17;\nloop invariant i75: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 18;\nloop invariant i76: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 19;\nloop invariant i77: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 20;\nloop invariant i78: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 21;\nloop invariant i79: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 22;\nloop invariant i80: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 23;\nloop invariant i81: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 24;\nloop invariant i82: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 25;\nloop invariant i83: glob3_pathbuf_off + glob3_dc <= glob3_pathbuf_off + glob3_dc + MAXPATHLEN + 26;\nloop invariant i84: glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant i85: glob3_pathlim_off <= MAXPATHLEN + 1;\nloop invariant i86: glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant i87: glob3_pathlim_off <= glob3_pathbuf_off + MAXPATHLEN + 1;\n\nloop invariant i89: glob3_dc < MAXPATHLEN + 1;\nloop invariant i90: glob3_dc >= 0;\nloop invariant i91: 0 <= glob3_dc <= MAXPATHLEN;\nloop invariant i92: glob3_dc <= MAXPATHLEN + 1;\nloop invariant i93: glob3_pathend_off <= glob3_pathlim_off + 1;\nloop invariant i94: glob3_dc <= glob3_pathlim_off - glob3_pathbuf_off;\nloop invariant i95: glob3_pattern_off <= glob3_pathend_off + glob3_dc;\nloop invariant i96: glob3_pattern_off <= MAXPATHLEN + 1;\n\nloop invariant i98: glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant i99: glob3_dc <= MAXPATHLEN + 1 - glob3_pathbuf_off;\nloop invariant i100: glob3_pathlim_off >= glob3_pathend_off + glob3_dc;\nloop invariant i101: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc < MAXPATHLEN + 1;\nloop invariant i102: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> 0 <= glob3_pathend_off + glob3_dc;\nloop invariant i103: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathlim_off >= glob3_pathend_off + glob3_dc;\nloop invariant i104: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i105: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i106: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\n\n\nloop invariant i109: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathlim_off - glob3_dc > 0;\nloop invariant i110: glob3_pathlim_off - glob3_dc <= glob3_pathlim_off;\nloop invariant i111: glob3_pathlim_off - glob3_dc >= 0;\nloop invariant i112: glob3_pathlim_off - glob3_dc >= glob3_pathend_off;\n\nloop invariant i114: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_pathend_off + glob3_dc < glob3_pathlim_off;\nloop invariant i115: buf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i116: glob3_pathlim_off - glob3_pathbuf_off <= MAXPATHLEN;\nloop invariant i117: glob3_pathend_off - glob3_pathbuf_off <= MAXPATHLEN;\nloop invariant i118: glob3_pathlim_off - glob3_pathend_off <= MAXPATHLEN;\n\nloop invariant i120: glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\n\nloop invariant i122: 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i123: 0 <= glob3_pathbuf_off;\nloop invariant i124: 0 <= glob3_pattern_off;\nloop invariant i125: glob3_pathend_off + glob3_dc >= glob3_pathlim_off ==> glob3_pathend_off + glob3_dc == glob3_pathlim_off;\n\n\n\n\nloop invariant i130: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc >= 0;\nloop invariant i131: glob3_pathend_off + glob3_dc < glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off - 1;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      {;\n//@ assert(0 <= glob3_dc);\n}\n{;\n//@ assert(glob3_dc < MAXPATHLEN + 1);\n}\n\n      if (unknown()) goto END;\n    }\n\n END:  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c"
        ],
        "skipped": [],
        "total": 26,
        "success_count": 24,
        "failure_count": 2,
        "success_rate": 0.9230769230769231
    }
}