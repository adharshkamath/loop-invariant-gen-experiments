{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n\n  int i = unknown1();\n  int j = unknown1();\n  \n  int x = i;\n  int y = j;\n \n  while(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\t{;\n//@ assert(y==0);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i < j ==> x == 0 && y == 0;\nloop invariant i == j ==> x == 0 && y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i;\nloop invariant 0 <= j;\nloop invariant i + j <= x + y;\nloop invariant (y - j) == (x - i);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i - y == j - x;\nloop invariant (x - i) + (y - j) == 0;\nloop invariant (x - i) * (y - j) == 0;\nloop invariant (x >= j) ==> (x == j);\nloop invariant (y >= i) ==> (y == i);\nloop invariant (x == j) ==> (y == i);loop invariant (y == i) ==> (x == j);\nloop invariant (x - i) == (y - j);\nloop invariant (x - i) <= 0;\nloop invariant (y - j) <= 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant (x == 0) ==> (y == 0);\nloop invariant (y == 0) ==> (x == 0);\nloop invariant (x == 0) && (y == 0);\nloop invariant (x == j) && (x == 0);\nloop invariant (y == i) && (y == 0);\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y >= i + j;\nloop invariant i - x == j - y;\nloop invariant i - x == j - y ==> i >= j;\nloop invariant i - x == j - y ==> i <= j;\nloop invariant i - x == j - y ==> x >= 0;\nloop invariant i - x == j - y ==> y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x + y >= i + j - (i - j);\nloop invariant x + y >= i + j - (j - i);\nloop invariant x + y >= i + j - (j - i);\nloop invariant x + y >= i + j - (j - i);\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= INT_MAX;\nloop invariant 0 <= j <= INT_MAX;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= i - y;\n*/\n```",
            "```\n/*@\nloop invariant y <= 0;\nloop invariant y == 0 ==> i == j;\nloop invariant y != 0 ==> i != j;\nloop invariant y != 0 ==> x >= 0;\nloop invariant y != 0 ==> x < i;\nloop invariant y != 0 ==> y <= i;\nloop invariant y != 0 ==> y <= j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x >= y;\nloop invariant x + y >= 0;\nloop invariant x + y <= i;\nloop invariant y <= j;\nloop invariant x <= i;\nloop invariant x <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x == i - y;\nloop invariant y == j - i + x;\nloop invariant x == y + i - j;\nloop invariant y == i - j - x;\nloop invariant x == i - j + y;\nloop invariant y == j - i + x;\nloop invariant x == j - i - y;\nloop invariant y == i - j - x;\nloop invariant x == j - i + y;\nloop invariant y == i - j + x;\nloop invariant x == i - y;\nloop invariant y == j - i + x;\nloop invariant x == y + i - j;\nloop invariant y == i - j - x;\nloop invariant x == i - j + y;\nloop invariant y == j - i + x;\nloop invariant x == j - i - y;\nloop invariant y == i - j - x;\nloop invariant x == j - i + y;\nloop invariant y == i - j + x;\nloop invariant x == i - y;\nloop invariant y == j - i + x;\nloop invariant x == y + i - j;\nloop invariant y == i - j - x;\nloop invariant x == i - j + y;\nloop invariant y == j - i + x;\nloop invariant x == j - i - y;\nloop invariant y == i - j - x;\nloop invariant x == j - i + y;\nloop invariant y == i - j + x;\nloop invariant x == i - y;\nloop invariant y == j - i + x;\nloop invariant x == y + i - j;\nloop invariant y == i - j - x;\nloop invariant x == i - j + y;\nloop invariant y == j - i + x;\nloop invariant x == j - i - y;\nloop invariant y == i - j - x;\nloop invariant x == j - i + y;\nloop invariant y == i - j + x;\nloop invariant x == i - y;\nloop invariant y == j - i + x;\nloop invariant x == y + i - j;\nloop invariant y == i - j - x;\nloop invariant x == i - j + y;\nloop invariant y == j - i + x;\nloop invariant x == j - i - y;\nloop invariant y == i - j - x;\nloop invariant x == j - i + y;\nloop invariant y == i - j + x;\nloop invariant x == i - y;\nloop invariant y == j - i + x;\nloop invariant x == y + i - j;\nloop invariant y == i - j - x;\nloop invariant x == i - j + y;\nloop invariant y == j - i + x;\nloop invariant x == j - i - y;\nloop invariant y == i - j - x;\nloop invariant x == j - i + y;\nloop invariant y == i - j + x;\nloop invariant x == i - y;\nloop invariant y == j - i + x;\nloop invariant x == y + i - j;\nloop invariant y == i - j - x;\nloop invariant x == i - j + y;\nloop invariant y == j - i + x;\nloop invariant x == j - i - y;\nloop invariant y == i - j - x;\nloop invariant x == j - i + y;\nloop invariant y == i - j + x;\nloop invariant x == i - y;\nloop invariant y == j - i + x;\nloop invariant x == y + i - j;\nloop invariant y == i - j - x;\nloop invariant x == i - j + y;\nloop invariant y == j - i + x;\nloop invariant x == j - i - y;\nloop invariant y == i - j - x;\nloop invariant x == j - i + y;\nloop invariant y == i - j + x;\nloop invariant x == i - y;\nloop invariant y == j - i + x;\nloop invariant x == y + i - j;\nloop invariant y == i - j - x;\nloop invariant x == i - j + y;\nloop invariant y == j - i + x;\nloop invariant x == j - i - y;\nloop invariant y == i - j - x;\nloop invariant x == j - i + y;\nloop invariant y == i - j + x;\nloop invariant x == i - y;\nloop invariant y == j - i + x;\nloop invariant x == y + i - j;\n*/\n```",
            "```\n/*@\nloop invariant i >= j;\nloop invariant j >= 0;\nloop invariant i >= 0;\nloop invariant i - j == x;\nloop invariant j - i == y;\n*/\n```",
            "```\n/*@\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i >= j;\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant x - y == j;\nloop invariant x - y == i;\nloop invariant x - y == i + j - i;\nloop invariant x - y == j;\nloop invariant x - y == j - i;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant (x <= i && y <= j) ==> (x + y <= i + j);\nloop invariant (x <= i && y <= j) ==> (x + y >= i + j - (i - x) - (j - y));\nloop invariant (x <= i && y <= j) ==> (x == i || y == j);\nloop invariant (x <= i && y <= j) ==> (x == 0 || y == 0);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i < j ==> x == 0 && y == 0;\nloop invariant i == j ==> x == 0 && y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n\n  int i = unknown1();\n  int j = unknown1();\n  \n  int x = i;\n  int y = j;\n \n  /*@\n\n\n\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\t{;\n//@ assert(y==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= i;\nloop invariant 0 <= j;\nloop invariant i + j <= x + y;\nloop invariant (y - j) == (x - i);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i - y == j - x;\nloop invariant (x - i) + (y - j) == 0;\nloop invariant (x - i) * (y - j) == 0;\nloop invariant (x >= j) ==> (x == j);\nloop invariant (y >= i) ==> (y == i);\nloop invariant (x == j) ==> (y == i);loop invariant (y == i) ==> (x == j);\nloop invariant (x - i) == (y - j);\nloop invariant (x - i) <= 0;\nloop invariant (y - j) <= 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant (x == 0) ==> (y == 0);\nloop invariant (y == 0) ==> (x == 0);\nloop invariant (x == 0) && (y == 0);\nloop invariant (x == j) && (x == 0);\nloop invariant (y == i) && (y == 0);\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\nloop invariant (x - j) == 0;\nloop invariant (y - i) == 0;\nloop invariant x == j;\nloop invariant y == i;\nloop invariant (x == j) && (y == i);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n\n  int i = unknown1();\n  int j = unknown1();\n  \n  int x = i;\n  int y = j;\n \n  /*@\n\n\n\nloop invariant i4: (y - j) == (x - i);\n\n\nloop invariant i7: x <= i;\nloop invariant i8: y <= j;\n\n\n\n\n\n\nloop invariant i15: (x - i) == (y - j);\nloop invariant i16: (x - i) <= 0;\nloop invariant i17: (y - j) <= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\t{;\n//@ assert(y==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y >= i + j;\nloop invariant i - x == j - y;\nloop invariant i - x == j - y ==> i >= j;\nloop invariant i - x == j - y ==> i <= j;\nloop invariant i - x == j - y ==> x >= 0;\nloop invariant i - x == j - y ==> y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n\n  int i = unknown1();\n  int j = unknown1();\n  \n  int x = i;\n  int y = j;\n \n  /*@\n\n\n\n\n\nloop invariant i6: i - x == j - y;\n\n\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\t{;\n//@ assert(y==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x = i - y;\nloop invariant y = j - x;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n\n  int i = unknown1();\n  int j = unknown1();\n  \n  int x = i;\n  int y = j;\n \n  /*@\n\n\n\n\nloop invariant i5: x <= i;\nloop invariant i6: y <= j;\n\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\t{;\n//@ assert(y==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x + y >= i + j - (i - j);\nloop invariant x + y >= i + j - (j - i);\nloop invariant x + y >= i + j - (j - i);\nloop invariant x + y >= i + j - (j - i);\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n\n  int i = unknown1();\n  int j = unknown1();\n  \n  int x = i;\n  int y = j;\n \n  /*@\n\n\nloop invariant i3: x <= i;\nloop invariant i4: y <= j;\nloop invariant i5: x + y <= i + j;\n\n\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\t{;\n//@ assert(y==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n\n  int i = unknown1();\n  int j = unknown1();\n  \n  int x = i;\n  int y = j;\n \n  /*@\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\t{;\n//@ assert(y==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= INT_MAX;\nloop invariant 0 <= j <= INT_MAX;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n\n  int i = unknown1();\n  int j = unknown1();\n  \n  int x = i;\n  int y = j;\n \n  /*@\n\n\nloop invariant i3: x <= i;\nloop invariant i4: y <= j;\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\t{;\n//@ assert(y==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= i - y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n\n  int i = unknown1();\n  int j = unknown1();\n  \n  int x = i;\n  int y = j;\n \n  /*@\n\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\t{;\n//@ assert(y==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant y <= 0;\nloop invariant y == 0 ==> i == j;\nloop invariant y != 0 ==> i != j;\nloop invariant y != 0 ==> x >= 0;\nloop invariant y != 0 ==> x < i;\nloop invariant y != 0 ==> y <= i;\nloop invariant y != 0 ==> y <= j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n\n  int i = unknown1();\n  int j = unknown1();\n  \n  int x = i;\n  int y = j;\n \n  /*@\n\n\n\n\n\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\t{;\n//@ assert(y==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x >= y;\nloop invariant x + y >= 0;\nloop invariant x + y <= i;\nloop invariant y <= j;\nloop invariant x <= i;\nloop invariant x <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x == i - y;\nloop invariant y == j - i + x;\nloop invariant x == y + i - j;\nloop invariant y == i - j - x;\nloop invariant x == i - j + y;\nloop invariant y == j - i + x;\nloop invariant x == j - i - y;\nloop invariant y == i - j - x;\nloop invariant x == j - i + y;\nloop invariant y == i - j + x;\nloop invariant x == i - y;\nloop invariant y == j - i + x;\nloop invariant x == y + i - j;\nloop invariant y == i - j - x;\nloop invariant x == i - j + y;\nloop invariant y == j - i + x;\nloop invariant x == j - i - y;\nloop invariant y == i - j - x;\nloop invariant x == j - i + y;\nloop invariant y == i - j + x;\nloop invariant x == i - y;\nloop invariant y == j - i + x;\nloop invariant x == y + i - j;\nloop invariant y == i - j - x;\nloop invariant x == i - j + y;\nloop invariant y == j - i + x;\nloop invariant x == j - i - y;\nloop invariant y == i - j - x;\nloop invariant x == j - i + y;\nloop invariant y == i - j + x;\nloop invariant x == i - y;\nloop invariant y == j - i + x;\nloop invariant x == y + i - j;\nloop invariant y == i - j - x;\nloop invariant x == i - j + y;\nloop invariant y == j - i + x;\nloop invariant x == j - i - y;\nloop invariant y == i - j - x;\nloop invariant x == j - i + y;\nloop invariant y == i - j + x;\nloop invariant x == i - y;\nloop invariant y == j - i + x;\nloop invariant x == y + i - j;\nloop invariant y == i - j - x;\nloop invariant x == i - j + y;\nloop invariant y == j - i + x;\nloop invariant x == j - i - y;\nloop invariant y == i - j - x;\nloop invariant x == j - i + y;\nloop invariant y == i - j + x;\nloop invariant x == i - y;\nloop invariant y == j - i + x;\nloop invariant x == y + i - j;\nloop invariant y == i - j - x;\nloop invariant x == i - j + y;\nloop invariant y == j - i + x;\nloop invariant x == j - i - y;\nloop invariant y == i - j - x;\nloop invariant x == j - i + y;\nloop invariant y == i - j + x;\nloop invariant x == i - y;\nloop invariant y == j - i + x;\nloop invariant x == y + i - j;\nloop invariant y == i - j - x;\nloop invariant x == i - j + y;\nloop invariant y == j - i + x;\nloop invariant x == j - i - y;\nloop invariant y == i - j - x;\nloop invariant x == j - i + y;\nloop invariant y == i - j + x;\nloop invariant x == i - y;\nloop invariant y == j - i + x;\nloop invariant x == y + i - j;\nloop invariant y == i - j - x;\nloop invariant x == i - j + y;\nloop invariant y == j - i + x;\nloop invariant x == j - i - y;\nloop invariant y == i - j - x;\nloop invariant x == j - i + y;\nloop invariant y == i - j + x;\nloop invariant x == i - y;\nloop invariant y == j - i + x;\nloop invariant x == y + i - j;\nloop invariant y == i - j - x;\nloop invariant x == i - j + y;\nloop invariant y == j - i + x;\nloop invariant x == j - i - y;\nloop invariant y == i - j - x;\nloop invariant x == j - i + y;\nloop invariant y == i - j + x;\nloop invariant x == i - y;\nloop invariant y == j - i + x;\nloop invariant x == y + i - j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n\n  int i = unknown1();\n  int j = unknown1();\n  \n  int x = i;\n  int y = j;\n \n  /*@\n\n\n\n\n\nloop invariant i6: y <= j;\nloop invariant i7: x <= i;\n\n\n\n\n\n\nloop invariant i14: y == j - i + x;\nloop invariant i15: x == y + i - j;\n\nloop invariant i17: x == i - j + y;\n\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\t{;\n//@ assert(y==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant i >= j;\nloop invariant j >= 0;\nloop invariant i >= 0;\nloop invariant i - j == x;\nloop invariant j - i == y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n\n  int i = unknown1();\n  int j = unknown1();\n  \n  int x = i;\n  int y = j;\n \n  /*@\n\n\n\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\t{;\n//@ assert(y==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == j - i;\nloop invariant y == i - j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n\n  int i = unknown1();\n  int j = unknown1();\n  \n  int x = i;\n  int y = j;\n \n  /*@\n\n\n\n\nloop invariant i5: x <= i;\nloop invariant i6: y <= j;\n\n\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\t{;\n//@ assert(y==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j ==> x >= y;\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n\n  int i = unknown1();\n  int j = unknown1();\n  \n  int x = i;\n  int y = j;\n \n  /*@\n\n\n\n\nloop invariant i5: x <= i;\nloop invariant i6: y <= j;\n\n\nloop invariant i9: i >= j ==> x >= y;\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\t{;\n//@ assert(y==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i >= j;\nloop invariant x == i;\nloop invariant y == j - i;\nloop invariant x - y == j;\nloop invariant x - y == i;\nloop invariant x - y == i + j - i;\nloop invariant x - y == j;\nloop invariant x - y == j - i;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\nloop invariant x - y == j - i + i;\nloop invariant x - y == j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n\n  int i = unknown1();\n  int j = unknown1();\n  \n  int x = i;\n  int y = j;\n \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\t{;\n//@ assert(y==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant (x <= i && y <= j) ==> (x + y <= i + j);\nloop invariant (x <= i && y <= j) ==> (x + y >= i + j - (i - x) - (j - y));\nloop invariant (x <= i && y <= j) ==> (x == i || y == j);\nloop invariant (x <= i && y <= j) ==> (x == 0 || y == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n\n  int i = unknown1();\n  int j = unknown1();\n  \n  int x = i;\n  int y = j;\n \n  /*@\n\n\nloop invariant i3: (x <= i && y <= j) ==> (x + y <= i + j);\nloop invariant i4: (x <= i && y <= j) ==> (x + y >= i + j - (i - x) - (j - y));\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\t{;\n//@ assert(y==0);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 58: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n\n  int i = unknown1();\n  int j = unknown1();\n  \n  int x = i;\n  int y = j;\n \n  /*@\nloop invariant i1: x >= 0;\nloop invariant i2: y >= 0;\nloop invariant i3: x >= y;\nloop invariant i4: i < j ==> x == 0 && y == 0;\nloop invariant i5: i == j ==> x == 0 && y == 0;\nloop invariant i6: 0 <= i;\nloop invariant i7: 0 <= j;\nloop invariant i8: i + j <= x + y;\nloop invariant i9: (y - j) == (x - i);\nloop invariant i10: x <= i;\nloop invariant i11: y <= j;\nloop invariant i12: i - y == j - x;\nloop invariant i13: (x - i) + (y - j) == 0;\nloop invariant i14: (x - i) * (y - j) == 0;\nloop invariant i15: (x >= j) ==> (x == j);\nloop invariant i16: (y >= i) ==> (y == i);\nloop invariant i17: (x == j) ==> (y == i);loop invariant (y == i) ==> (x == j);\nloop invariant i18: (x - i) == (y - j);\nloop invariant i19: (x - i) <= 0;\nloop invariant i20: (y - j) <= 0;\nloop invariant i21: x == j;\nloop invariant i22: y == i;\nloop invariant i23: (x == j) && (y == i);\nloop invariant i24: (x - j) == 0;\nloop invariant i25: (y - i) == 0;\nloop invariant i26: x == 0;\nloop invariant i27: y == 0;\nloop invariant i28: (x == 0) ==> (y == 0);\nloop invariant i29: (y == 0) ==> (x == 0);\nloop invariant i30: (x == 0) && (y == 0);\nloop invariant i31: (x == j) && (x == 0);\nloop invariant i32: (y == i) && (y == 0);\nloop invariant i33: 0 <= x <= i;\nloop invariant i34: 0 <= y <= j;\nloop invariant i35: x + y >= i + j;\nloop invariant i36: i - x == j - y;\nloop invariant i37: i - x == j - y ==> i >= j;\nloop invariant i38: i - x == j - y ==> i <= j;\nloop invariant i39: i - x == j - y ==> x >= 0;\nloop invariant i40: i - x == j - y ==> y >= 0;\nloop invariant i41: x = i - y;\nloop invariant i42: y = j - x;\nloop invariant i43: x + y <= i + j;\nloop invariant i44: x >= i - j;\nloop invariant i45: y >= j - i;\nloop invariant i46: x + y >= i + j - (i - j);\nloop invariant i47: x + y >= i + j - (j - i);\nloop invariant i48: 1 <= x <= y;\nloop invariant i49: 0 <= i <= INT_MAX;\nloop invariant i50: 0 <= j <= INT_MAX;\nloop invariant i51: x >= i - y;\nloop invariant i52: y <= 0;\nloop invariant i53: y == 0 ==> i == j;\nloop invariant i54: y != 0 ==> i != j;\nloop invariant i55: y != 0 ==> x >= 0;\nloop invariant i56: y != 0 ==> x < i;\nloop invariant i57: y != 0 ==> y <= i;\nloop invariant i58: y != 0 ==> y <= j;\nloop invariant i59: 0 <= x;\nloop invariant i60: 0 <= y;\nloop invariant i61: x + y >= 0;\nloop invariant i62: x + y <= i;\nloop invariant i63: x <= j;\nloop invariant i64: i >= 0;\nloop invariant i65: j >= 0;\nloop invariant i66: x == i - y;\nloop invariant i67: y == j - i + x;\nloop invariant i68: x == y + i - j;\nloop invariant i69: y == i - j - x;\nloop invariant i70: x == i - j + y;\nloop invariant i71: x == j - i - y;\nloop invariant i72: x == j - i + y;\nloop invariant i73: y == i - j + x;\nloop invariant i74: i >= j;\nloop invariant i75: i - j == x;\nloop invariant i76: j - i == y;\nloop invariant i77: x == i - j;\nloop invariant i78: y == j - i;\nloop invariant i79: x == j - i;\nloop invariant i80: y == i - j;\nloop invariant i81: i >= j ==> x >= y;\nloop invariant i82: x == i;\nloop invariant i83: x - y == j;\nloop invariant i84: x - y == i;\nloop invariant i85: x - y == i + j - i;\nloop invariant i86: x - y == j - i;\nloop invariant i87: x - y == j - i + i;\nloop invariant i88: (x <= i && y <= j) ==> (x + y <= i + j);\nloop invariant i89: (x <= i && y <= j) ==> (x + y >= i + j - (i - x) - (j - y));\nloop invariant i90: (x <= i && y <= j) ==> (x == i || y == j);\nloop invariant i91: (x <= i && y <= j) ==> (x == 0 || y == 0);\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\t{;\n//@ assert(y==0);\n}\n\n}",
        "combined_annotation_num_solver_calls": 28,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nint main() {\n\n  int i = unknown1();\n  int j = unknown1();\n  \n  int x = i;\n  int y = j;\n \n  /*@\n\n\n\n\n\n\n\n\nloop invariant i9: (y - j) == (x - i);\nloop invariant i10: x <= i;\nloop invariant i11: y <= j;\n\n\n\n\n\n\nloop invariant i18: (x - i) == (y - j);\nloop invariant i19: (x - i) <= 0;\nloop invariant i20: (y - j) <= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i36: i - x == j - y;\n\n\n\n\n\n\nloop invariant i43: x + y <= i + j;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i58: y != 0 ==> y <= j;\n\n\n\n\n\n\n\n\nloop invariant i67: y == j - i + x;\nloop invariant i68: x == y + i - j;\n\nloop invariant i70: x == i - j + y;\n\n\n\n\n\n\n\n\n\n\nloop invariant i81: i >= j ==> x >= y;\n\n\n\n\n\n\nloop invariant i88: (x <= i && y <= j) ==> (x + y <= i + j);\nloop invariant i89: (x <= i && y <= j) ==> (x + y >= i + j - (i - x) - (j - y));\n\n\n*/\nwhile(x!=0) {\n\tx--;\n\ty--;\n  }\n  if(i==j)\n\t{;\n//@ assert(y==0);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c"
        ],
        "skipped": [],
        "total": 111,
        "success_count": 94,
        "failure_count": 17,
        "success_rate": 0.8468468468468469
    }
}