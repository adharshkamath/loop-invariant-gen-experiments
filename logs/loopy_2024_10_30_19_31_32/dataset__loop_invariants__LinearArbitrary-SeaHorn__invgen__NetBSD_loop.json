{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main ()\n{\n  \n  int MAXPATHLEN = unknown ();\n  int pathbuf_off = unknown ();\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  for (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 1 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= pathbuf_off <= bound_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant (glob2_p_off == glob2_pathbuf_off ==> glob2_pathbuf_off <= glob2_p_off);\nloop invariant (glob2_p_off == glob2_pathlim_off ==> glob2_p_off <= glob2_pathlim_off);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off < MAXPATHLEN + 1;\nloop invariant glob2_p_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= MAXPATHLEN + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - 1;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 1);\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 1);\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 2);\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 2);\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 3);\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 3);\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 4);\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 4);\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 5);\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 5);\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 6);\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 6);\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 7);\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 7);\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 8);\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 8);\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 9);\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 9);\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 10);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;loop invariant glob2_p_off >= glob2_pathbuf_off;loop invariant glob2_pathbuf_off <= glob2_pathlim_off;loop invariant glob2_p_off - glob2_pathbuf_off >= 0;loop invariant glob2_pathlim_off - glob2_pathbuf_off <= MAXPATHLEN + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> glob2_pathbuf_off <= glob2_p_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant 0 <= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant 0 <= glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathlim_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathlim_off <= glob2_pathlim_off + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off == glob2_p_off - (MAXPATHLEN - 1);\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == bound_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN; loop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1; loop invariant glob2_p_off <= glob2_pathbuf_off; loop invariant glob2_p_off <= glob2_pathbuf_off + 1; loop invariant glob2_p_off <= glob2_pathbuf_off + 1; loop invariant glob2_p_off <= bound_off; loop invariant glob2_p_off <= bound_off + 1; loop invariant glob2_p_off <= bound_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main ()\n{\n  \n  int MAXPATHLEN = unknown ();\n  int pathbuf_off = unknown ();\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n\nloop invariant i3: glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= pathbuf_off <= bound_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant (glob2_p_off == glob2_pathbuf_off ==> glob2_pathbuf_off <= glob2_p_off);\nloop invariant (glob2_p_off == glob2_pathlim_off ==> glob2_p_off <= glob2_pathlim_off);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main ()\n{\n  \n  int MAXPATHLEN = unknown ();\n  int pathbuf_off = unknown ();\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\nloop invariant i1: 0 <= pathbuf_off <= bound_off;\nloop invariant i2: glob2_p_off >= glob2_pathbuf_off;\n\nloop invariant i4: (glob2_p_off == glob2_pathbuf_off ==> glob2_pathbuf_off <= glob2_p_off);\nloop invariant i5: (glob2_p_off == glob2_pathlim_off ==> glob2_p_off <= glob2_pathlim_off);\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main ()\n{\n  \n  int MAXPATHLEN = unknown ();\n  int pathbuf_off = unknown ();\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n\nloop invariant i3: glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant i4: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off;\nloop invariant i5: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant i6: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off;\nloop invariant i7: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant i8: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off;\nloop invariant i9: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant i10: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off;\nloop invariant i11: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off < MAXPATHLEN + 1;\nloop invariant glob2_p_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main ()\n{\n  \n  int MAXPATHLEN = unknown ();\n  int pathbuf_off = unknown ();\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\nloop invariant i1: 0 <= glob2_pathbuf_off <= glob2_pathlim_off;\n\nloop invariant i3: glob2_pathbuf_off < MAXPATHLEN + 1;\n\nloop invariant i5: glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant i6: glob2_pathbuf_off <= glob2_pathlim_off;\n\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= MAXPATHLEN + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main ()\n{\n  \n  int MAXPATHLEN = unknown ();\n  int pathbuf_off = unknown ();\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\nloop invariant i1: 0 <= glob2_pathbuf_off;\nloop invariant i2: glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant i3: glob2_pathlim_off <= MAXPATHLEN + 1;\n\nloop invariant i5: glob2_p_off >= glob2_pathbuf_off;\nloop invariant i6: glob2_p_off <= MAXPATHLEN + 1;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - 1;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 1);\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 1);\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 2);\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 2);\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 3);\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 3);\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 4);\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 4);\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 5);\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 5);\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 6);\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 6);\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 7);\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 7);\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 8);\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 8);\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 9);\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 9);\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 10);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main ()\n{\n  \n  int MAXPATHLEN = unknown ();\n  int pathbuf_off = unknown ();\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\nloop invariant i1: 0 <= glob2_p_off;\n\n\nloop invariant i4: glob2_p_off >= glob2_pathbuf_off;\n\nloop invariant i6: glob2_p_off > glob2_pathbuf_off - 1;\n\nloop invariant i8: glob2_p_off >= glob2_pathbuf_off - MAXPATHLEN;\nloop invariant i9: glob2_p_off > glob2_pathbuf_off - MAXPATHLEN;\nloop invariant i10: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 1);\nloop invariant i11: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 1);\nloop invariant i12: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 2);\nloop invariant i13: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 2);\nloop invariant i14: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 3);\nloop invariant i15: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 3);\nloop invariant i16: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 4);\nloop invariant i17: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 4);\nloop invariant i18: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 5);\nloop invariant i19: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 5);\nloop invariant i20: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 6);\nloop invariant i21: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 6);\nloop invariant i22: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 7);\nloop invariant i23: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 7);\nloop invariant i24: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 8);\nloop invariant i25: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 8);\nloop invariant i26: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 9);\nloop invariant i27: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 9);\nloop invariant i28: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 10);\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;loop invariant glob2_p_off >= glob2_pathbuf_off;loop invariant glob2_pathbuf_off <= glob2_pathlim_off;loop invariant glob2_p_off - glob2_pathbuf_off >= 0;loop invariant glob2_pathlim_off - glob2_pathbuf_off <= MAXPATHLEN + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main ()\n{\n  \n  int MAXPATHLEN = unknown ();\n  int pathbuf_off = unknown ();\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> glob2_pathbuf_off <= glob2_p_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main ()\n{\n  \n  int MAXPATHLEN = unknown ();\n  int pathbuf_off = unknown ();\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\nloop invariant i1: 0 <= glob2_pathbuf_off <= glob2_pathlim_off;\n\n\nloop invariant i4: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> glob2_pathbuf_off <= glob2_p_off;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main ()\n{\n  \n  int MAXPATHLEN = unknown ();\n  int pathbuf_off = unknown ();\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n\nloop invariant i3: glob2_pathbuf_off <= glob2_p_off;\nloop invariant i4: glob2_pathlim_off >= glob2_pathbuf_off;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant 0 <= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant 0 <= glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main ()\n{\n  \n  int MAXPATHLEN = unknown ();\n  int pathbuf_off = unknown ();\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n\n\n\nloop invariant i5: 0 <= glob2_pathbuf_off;\nloop invariant i6: glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant i7: 0 <= glob2_pathbuf_off <= glob2_pathlim_off;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathlim_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathlim_off <= glob2_pathlim_off + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main ()\n{\n  \n  int MAXPATHLEN = unknown ();\n  int pathbuf_off = unknown ();\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n\nloop invariant i3: glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant i4: glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant i5: glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant i6: glob2_pathbuf_off <= glob2_pathbuf_off;\nloop invariant i7: glob2_pathlim_off <= glob2_pathlim_off;\nloop invariant i8: glob2_pathlim_off <= glob2_pathlim_off + 1;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off == glob2_p_off - (MAXPATHLEN - 1);\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == bound_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main ()\n{\n  \n  int MAXPATHLEN = unknown ();\n  int pathbuf_off = unknown ();\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n\nloop invariant i3: glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant i4: glob2_pathbuf_off <= glob2_pathlim_off;\n\nloop invariant i6: glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant i7: glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == bound_off;\n\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN; loop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1; loop invariant glob2_p_off <= glob2_pathbuf_off; loop invariant glob2_p_off <= glob2_pathbuf_off + 1; loop invariant glob2_p_off <= glob2_pathbuf_off + 1; loop invariant glob2_p_off <= bound_off; loop invariant glob2_p_off <= bound_off + 1; loop invariant glob2_p_off <= bound_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main ()\n{\n  \n  int MAXPATHLEN = unknown ();\n  int pathbuf_off = unknown ();\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main ()\n{\n  \n  int MAXPATHLEN = unknown ();\n  int pathbuf_off = unknown ();\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main ()\n{\n  \n  int MAXPATHLEN = unknown ();\n  int pathbuf_off = unknown ();\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n\n\nloop invariant i4: glob2_pathbuf_off <= glob2_pathlim_off;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "loop invariant 1 <= glob2_p_off <= glob2_pathlim_off is preserved but not established.\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 is partially proven to be inductive.\nloop invariant 0 <= pathbuf_off <= bound_off is partially proven to be inductive.\nloop invariant glob2_p_off >= glob2_pathbuf_off is partially proven to be inductive.\nloop invariant glob2_p_off <= glob2_pathlim_off is partially proven to be inductive.\nloop invariant (glob2_p_off == glob2_pathbuf_off ==> glob2_pathbuf_off <= glob2_p_off) is partially proven to be inductive.\nloop invariant (glob2_p_off == glob2_pathlim_off ==> glob2_p_off <= glob2_pathlim_off) is partially proven to be inductive.\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off is partially proven to be inductive.\nloop invariant 0 <= glob2_pathbuf_off <= glob2_pathlim_off is partially proven to be inductive.\nloop invariant glob2_pathbuf_off < MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant glob2_p_off < MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant 0 <= glob2_pathbuf_off is partially proven to be inductive.\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant glob2_p_off <= MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant 0 <= glob2_p_off is partially proven to be inductive.\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN is partially proven to be inductive.\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 is partially proven to be inductive.\nloop invariant glob2_p_off > glob2_pathbuf_off - 1 is partially proven to be inductive.\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant glob2_p_off >= glob2_pathbuf_off - MAXPATHLEN is partially proven to be inductive.\nloop invariant glob2_p_off > glob2_pathbuf_off - MAXPATHLEN is partially proven to be inductive.\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 1) is partially proven to be inductive.\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 1) is partially proven to be inductive.\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 2) is partially proven to be inductive.\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 2) is partially proven to be inductive.\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 3) is partially proven to be inductive.\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 3) is partially proven to be inductive.\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 4) is partially proven to be inductive.\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 4) is partially proven to be inductive.\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 5) is partially proven to be inductive.\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 5) is partially proven to be inductive.\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 6) is partially proven to be inductive.\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 6) is partially proven to be inductive.\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 7) is partially proven to be inductive.\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 7) is partially proven to be inductive.\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 8) is partially proven to be inductive.\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 8) is partially proven to be inductive.\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 9) is partially proven to be inductive.\nloop invariant glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 9) is partially proven to be inductive.\nloop invariant glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 10) is partially proven to be inductive.\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;loop invariant glob2_p_off >= glob2_pathbuf_off;loop invariant glob2_pathbuf_off <= glob2_pathlim_off;loop invariant glob2_p_off - glob2_pathbuf_off >= 0;loop invariant glob2_pathlim_off - glob2_pathbuf_off <= MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> glob2_pathbuf_off <= glob2_p_off is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_p_off is partially proven to be inductive.\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off is partially proven to be inductive.\nloop invariant glob2_p_off <= glob2_pathlim_off + 1 is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1 is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off is partially proven to be inductive.\nloop invariant glob2_pathlim_off <= glob2_pathlim_off is partially proven to be inductive.\nloop invariant glob2_pathlim_off <= glob2_pathlim_off + 1 is partially proven to be inductive.\nloop invariant glob2_pathbuf_off == glob2_p_off - (MAXPATHLEN - 1) is partially proven to be inductive.\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off is partially proven to be inductive.\nloop invariant glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == bound_off is partially proven to be inductive.\nloop invariant glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off is partially proven to be inductive.\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN; loop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1; loop invariant glob2_p_off <= glob2_pathbuf_off; loop invariant glob2_p_off <= glob2_pathbuf_off + 1; loop invariant glob2_p_off <= glob2_pathbuf_off + 1; loop invariant glob2_p_off <= bound_off; loop invariant glob2_p_off <= bound_off + 1; loop invariant glob2_p_off <= bound_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1 is partially proven to be inductive.\nAssertion 0 <= glob2_p_off: Partially proven\nAssertion glob2_p_off < MAXPATHLEN + 1: Partially proven",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main ()\n{\n  \n  int MAXPATHLEN = unknown ();\n  int pathbuf_off = unknown ();\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\nloop invariant i1: 1 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant i2: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant i3: glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant i4: 0 <= pathbuf_off <= bound_off;\nloop invariant i5: glob2_p_off >= glob2_pathbuf_off;\nloop invariant i6: glob2_p_off <= glob2_pathlim_off;\nloop invariant i7: (glob2_p_off == glob2_pathbuf_off ==> glob2_pathbuf_off <= glob2_p_off);\nloop invariant i8: (glob2_p_off == glob2_pathlim_off ==> glob2_p_off <= glob2_pathlim_off);\nloop invariant i9: 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant i10: glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant i11: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off;\nloop invariant i12: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant i13: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off;\nloop invariant i14: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant i15: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off;\nloop invariant i16: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant i17: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off;\nloop invariant i18: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant i19: 0 <= glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant i20: glob2_pathbuf_off < MAXPATHLEN + 1;\nloop invariant i21: glob2_p_off < MAXPATHLEN + 1;\nloop invariant i22: glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant i23: 0 <= glob2_pathbuf_off;\nloop invariant i24: glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant i25: glob2_p_off <= MAXPATHLEN + 1;\nloop invariant i26: 0 <= glob2_p_off;\nloop invariant i27: glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant i28: glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant i29: glob2_p_off > glob2_pathbuf_off - 1;\nloop invariant i30: glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant i31: glob2_p_off >= glob2_pathbuf_off - MAXPATHLEN;\nloop invariant i32: glob2_p_off > glob2_pathbuf_off - MAXPATHLEN;\nloop invariant i33: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 1);\nloop invariant i34: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 1);\nloop invariant i35: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 2);\nloop invariant i36: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 2);\nloop invariant i37: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 3);\nloop invariant i38: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 3);\nloop invariant i39: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 4);\nloop invariant i40: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 4);\nloop invariant i41: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 5);\nloop invariant i42: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 5);\nloop invariant i43: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 6);\nloop invariant i44: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 6);\nloop invariant i45: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 7);\nloop invariant i46: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 7);\nloop invariant i47: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 8);\nloop invariant i48: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 8);\nloop invariant i49: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 9);\nloop invariant i50: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 9);\nloop invariant i51: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 10);\nloop invariant i52: 0 <= glob2_p_off <= glob2_pathlim_off;loop invariant glob2_p_off >= glob2_pathbuf_off;loop invariant glob2_pathbuf_off <= glob2_pathlim_off;loop invariant glob2_p_off - glob2_pathbuf_off >= 0;loop invariant glob2_pathlim_off - glob2_pathbuf_off <= MAXPATHLEN + 1;\nloop invariant i53: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> glob2_pathbuf_off <= glob2_p_off;\nloop invariant i54: glob2_pathbuf_off <= glob2_p_off;\nloop invariant i55: glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant i56: glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant i57: glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant i58: glob2_pathbuf_off <= glob2_pathbuf_off;\nloop invariant i59: glob2_pathlim_off <= glob2_pathlim_off;\nloop invariant i60: glob2_pathlim_off <= glob2_pathlim_off + 1;\nloop invariant i61: glob2_pathbuf_off == glob2_p_off - (MAXPATHLEN - 1);\nloop invariant i62: glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant i63: glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == bound_off;\nloop invariant i64: glob2_pathbuf_off - (MAXPATHLEN - 1) == glob2_p_off;\nloop invariant i65: 0 <= glob2_p_off <= glob2_pathlim_off; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN; loop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1; loop invariant glob2_p_off <= glob2_pathbuf_off; loop invariant glob2_p_off <= glob2_pathbuf_off + 1; loop invariant glob2_p_off <= glob2_pathbuf_off + 1; loop invariant glob2_p_off <= bound_off; loop invariant glob2_p_off <= bound_off + 1; loop invariant glob2_p_off <= bound_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
        "combined_annotation_num_solver_calls": 5,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main ()\n{\n  \n  int MAXPATHLEN = unknown ();\n  int pathbuf_off = unknown ();\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\nloop invariant i2: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant i3: glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant i4: 0 <= pathbuf_off <= bound_off;\nloop invariant i5: glob2_p_off >= glob2_pathbuf_off;\nloop invariant i6: glob2_p_off <= glob2_pathlim_off;\nloop invariant i7: (glob2_p_off == glob2_pathbuf_off ==> glob2_pathbuf_off <= glob2_p_off);\nloop invariant i8: (glob2_p_off == glob2_pathlim_off ==> glob2_p_off <= glob2_pathlim_off);\nloop invariant i9: 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant i10: glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant i11: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off;\nloop invariant i12: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant i13: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off;\nloop invariant i14: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant i15: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off;\nloop invariant i16: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant i17: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off;\nloop invariant i18: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off ==> (glob2_p_off - glob2_pathbuf_off) <= glob2_pathlim_off - glob2_pathbuf_off ==> glob2_p_off <= glob2_pathlim_off;\nloop invariant i19: 0 <= glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant i20: glob2_pathbuf_off < MAXPATHLEN + 1;\nloop invariant i21: glob2_p_off < MAXPATHLEN + 1;\nloop invariant i22: glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant i23: 0 <= glob2_pathbuf_off;\nloop invariant i24: glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant i25: glob2_p_off <= MAXPATHLEN + 1;\nloop invariant i26: 0 <= glob2_p_off;\nloop invariant i27: glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant i28: glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant i29: glob2_p_off > glob2_pathbuf_off - 1;\nloop invariant i30: glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant i31: glob2_p_off >= glob2_pathbuf_off - MAXPATHLEN;\nloop invariant i32: glob2_p_off > glob2_pathbuf_off - MAXPATHLEN;\nloop invariant i33: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 1);\nloop invariant i34: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 1);\nloop invariant i35: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 2);\nloop invariant i36: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 2);\nloop invariant i37: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 3);\nloop invariant i38: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 3);\nloop invariant i39: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 4);\nloop invariant i40: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 4);\nloop invariant i41: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 5);\nloop invariant i42: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 5);\nloop invariant i43: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 6);\nloop invariant i44: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 6);\nloop invariant i45: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 7);\nloop invariant i46: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 7);\nloop invariant i47: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 8);\nloop invariant i48: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 8);\nloop invariant i49: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 9);\nloop invariant i50: glob2_p_off > glob2_pathbuf_off - (MAXPATHLEN + 9);\nloop invariant i51: glob2_p_off >= glob2_pathbuf_off - (MAXPATHLEN + 10);\nloop invariant i52: 0 <= glob2_p_off <= glob2_pathlim_off;loop invariant glob2_p_off >= glob2_pathbuf_off;loop invariant glob2_pathbuf_off <= glob2_pathlim_off;loop invariant glob2_p_off - glob2_pathbuf_off >= 0;loop invariant glob2_pathlim_off - glob2_pathbuf_off <= MAXPATHLEN + 1;\nloop invariant i53: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off ==> glob2_pathbuf_off <= glob2_p_off;\nloop invariant i54: glob2_pathbuf_off <= glob2_p_off;\nloop invariant i55: glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant i56: glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant i57: glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant i58: glob2_pathbuf_off <= glob2_pathbuf_off;\nloop invariant i59: glob2_pathlim_off <= glob2_pathlim_off;\nloop invariant i60: glob2_pathlim_off <= glob2_pathlim_off + 1;\n\nloop invariant i62: glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == glob2_pathlim_off;\nloop invariant i63: glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 == bound_off;\n\nloop invariant i65: 0 <= glob2_p_off <= glob2_pathlim_off; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN; loop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN + 1; loop invariant glob2_p_off <= glob2_pathbuf_off; loop invariant glob2_p_off <= glob2_pathbuf_off + 1; loop invariant glob2_p_off <= glob2_pathbuf_off + 1; loop invariant glob2_p_off <= bound_off; loop invariant glob2_p_off <= bound_off + 1; loop invariant glob2_p_off <= bound_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1; loop invariant glob2_p_off <= glob2_pathlim_off + 1;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c"
        ],
        "skipped": [],
        "total": 25,
        "success_count": 23,
        "failure_count": 2,
        "success_rate": 0.92
    }
}