{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  int v1,v2,v3;\n  \n  while(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant x1 >= d1;\nloop invariant x2 >= d2;\nloop invariant x3 >= d3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant c1 ==> x1 >= d1;\nloop invariant c2 ==> x2 >= d2;\nloop invariant !c1 && !c2 ==> x3 >= d3;\nloop invariant x1 <= x1 + d1;\nloop invariant x2 <= x2 + d2;\nloop invariant x3 <= x3 + d3;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 0 <= d1 <= unknown_uint();\nloop invariant 0 <= d2 <= unknown_uint();\nloop invariant 0 <= d3 <= unknown_uint();\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x1 >= 0 && x1 <= unknown_uint() ==> x1 != 0;\nloop invariant x2 >= 0 && x2 <= unknown_uint() ==> x2 != 0;\nloop invariant x3 >= 0 && x3 <= unknown_uint() ==> x3 != 0;\nloop invariant d1 >= 0 && d1 <= unknown_uint();\nloop invariant d2 >= 0 && d2 <= unknown_uint();\nloop invariant d3 >= 0 && d3 <= unknown_uint();\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x1 != 0 ==> x1 >= x2;\nloop invariant x1 != 0 ==> x1 >= x3;\nloop invariant x2 != 0 ==> x2 >= x1;\nloop invariant x2 != 0 ==> x2 >= x3;\nloop invariant x3 != 0 ==> x3 >= x1;\nloop invariant x3 != 0 ==> x3 >= x2;\nloop invariant x1 >= 0 && x1 <= unknown_uint() ==> x1 == 0 || x1 >= d1;\nloop invariant x2 >= 0 && x2 <= unknown_uint() ==> x2 == 0 || x2 >= d2;\nloop invariant x3 >= 0 && x3 <= unknown_uint() ==> x3 == 0 || x3 >= d3;\nloop invariant x1 >= 0 && x1 <= unknown_uint() && x1 != 0 ==> x1 >= d1;\nloop invariant x2 >= 0 && x2 <= unknown_uint() && x2 != 0 ==> x2 >= d2;\nloop invariant x3 >= 0 && x3 <= unknown_uint() && x3 != 0 ==> x3 >= d3;\nloop invariant x1 >= 0 && x1 <= unknown_uint() && x1 != 0 ==> x1 - d1 >= 0;\nloop invariant x2 >= 0 && x2 <= unknown_uint() && x2 != 0 ==> x2 - d2 >= 0;\nloop invariant x3 >= 0 && x3 <= unknown_uint() && x3 != 0 ==> x3 - d3 >= 0;\nloop invariant x1 >= 0 && x1 <= unknown_uint() && x1 != 0 ==> x1 - d1 <= unknown_uint();\nloop invariant x2 >= 0 && x2 <= unknown_uint() && x2 != 0 ==> x2 - d2 <= unknown_uint();\nloop invariant x3 >= 0 && x3 <= unknown_uint() && x3 != 0 ==> x3 - d3 <= unknown_uint();\nloop invariant x1 >= 0 && x1 <= unknown_uint() && x1 != 0 ==> x1 - d1 >= 0 && x1 - d1 <= unknown_uint();\nloop invariant x2 >= 0 && x2 <= unknown_uint() && x2 != 0 ==> x2 - d2 >= 0 && x2 - d2 <= unknown_uint();\nloop invariant x3 >= 0 && x3 <= unknown_uint() && x3 != 0 ==> x3 - d3 >= 0 && x3 - d3 <= unknown_uint();\nloop invariant x1 >= 0 && x1 <= unknown_uint() && x1 != 0 ==> x1 - d1 >= 0 && x1 - d1 <= unknown_uint() ==> x1 >= d1;\nloop invariant x2 >= 0 && x2 <= unknown_uint() && x2 != 0 ==> x2 - d2 >= 0 && x2 - d2 <= unknown_uint() ==> x2 >= d2;\nloop invariant x3 >= 0 && x3 <= unknown_uint() && x3 != 0 ==> x3 - d3 >= 0 && x3 - d3 <= unknown_uint() ==> x3 >= d3;\nloop invariant x1 >= 0 && x1 <= unknown_uint() && x1 != 0 ==> x1 >= d1 && x1 <= unknown_uint() ==> x1 - d1 >= 0 && x1 - d1 <= unknown_uint();\n*/\n```",
            "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 == 1 || c2 == 1;\nloop invariant x1 >= d1 * c1;\nloop invariant x2 >= d2 * c2;\nloop invariant x3 >= d3 * (1 - c1 - c2);\nloop invariant if (x1 > 0) x1 >= d1;\nloop invariant if (x2 > 0) x2 >= d2;\nloop invariant if (x3 > 0) x3 >= d3;\nloop invariant if (x1 > 0) x1 >= d1 * c1;\nloop invariant if (x2 > 0) x2 >= d2 * c2;\nloop invariant if (x3 > 0) x3 >= d3 * (1 - c1 - c2);\nloop invariant if (x1 > 0) x1 <= x2;\nloop invariant if (x2 > 0) x2 <= x3;\nloop invariant if (x1 > 0 && x2 > 0) x2 <= x3;\nloop invariant if (x1 > 0 && x3 > 0) x3 >= x2;\nloop invariant if (x2 > 0 && x3 > 0) x3 >= x1;\nloop invariant if (x1 > 0 && x2 > 0 && x3 > 0) x3 >= x2;\nloop invariant if (x1 > 0 && x2 > 0 && x3 > 0) x2 >= x1;\n*/\n```",
            "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 <= x2;\nloop invariant x1 <= x3;\nloop invariant x2 <= x3;\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant (x1 <= x2 + (x2 - d2) * d2 / d1);\nloop invariant (x1 <= x3 + (x3 - d3) * d3 / d1);\nloop invariant (x2 <= x3 + (x3 - d3) * d3 / d2);\nloop invariant (x2 >= x1 - (d1 - d2) * x1 / d1);\nloop invariant (x3 >= x1 - (d1 - d3) * x1 / d1);\nloop invariant (x3 >= x2 - (d2 - d3) * x2 / d2);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= x1' && 0 <= x2 <= x2' && 0 <= x3 <= x3';\nloop invariant (x1' - x1) + (x2' - x2) + (x3' - x3) = d1 + d2 + d3;\nloop invariant x1' = x1 + (c1 ? -d1 : 0);\nloop invariant x2' = x2 + (c2 ? -d2 : 0);\nloop invariant x3' = x3 + (-d3);\nloop invariant c1 == (x1 > 0) && c2 == (x2 > 0);\nloop invariant v1 = unknown_int() && v2 = unknown_int() && v3 = unknown_int();\nloop invariant x1 == x1' && x2 == x2' && x3 == x3';\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant x1' = x1 && x2' = x2 && x3' = x3;\nloop invariant (x1' == 0 || x2' == 0 || x3' == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant unknown_int() >= 0;\nloop invariant unknown_int() >= 0;\nloop invariant unknown_int() >= 0;\nloop invariant (x1 == 0) ==> (unknown_uint() == unknown_uint());\nloop invariant (x2 == 0) ==> (unknown_uint() == unknown_uint());\nloop invariant (x3 == 0) ==> (unknown_uint() == unknown_uint());\nloop invariant (c1 ==> 0 <= x1 <= unknown_uint()) && (c1 ==> d1 >= 1) && (c1 ==> x1 >= d1) && (c1 ==> x1 >= x1 - d1) && (c1 ==> unknown_uint() <= x1) && (c1 ==> unknown_uint() >= x1 - d1);\nloop invariant (c2 ==> 0 <= x2 <= unknown_uint()) && (c2 ==> d2 >= 1) && (c2 ==> x2 >= d2) && (c2 ==> x2 >= x2 - d2) && (c2 ==> unknown_uint() <= x2) && (c2 ==> unknown_uint() >= x2 - d2);\nloop invariant (!c1 && !c2 ==> 0 <= x3 <= unknown_uint()) && (!c1 && !c2 ==> d3 >= 1) && (!c1 && !c2 ==> x3 >= d3) && (!c1 && !c2 ==> x3 >= x3 - d3) && (!c1 && !c2 ==> unknown_uint() <= x3) && (!c1 && !c2 ==> unknown_uint() >= x3 - d3);\nloop invariant (x1 == 0) ==> (unknown_uint() == unknown_uint()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int());\nloop invariant (x2 == 0) ==> (unknown_uint() == unknown_uint()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int());\nloop invariant (x3 == 0) ==> (unknown_uint() == unknown_uint()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int());\nloop invariant (c1 ==> 0 <= x1 <= unknown_uint()) && (c1 ==> d1 >= 1) && (c1 ==> x1 >= d1) && (c1 ==> x1 >= x1 - d1) && (c1 ==> unknown_uint() <= x1) && (c1 ==> unknown_uint() >= x1 - d1) && (c1 ==> 0 <= unknown_int()) && (c1 ==> 0 <= unknown_int()) && (c1 ==> 0 <= unknown_int());\nloop invariant (c2 ==> 0 <= x2 <= unknown_uint()) && (c2 ==> d2 >= 1) && (c2 ==> x2 >= d2) && (c2 ==> x2 >= x2 - d2) && (c2 ==> unknown_uint() <= x2) && (c2 ==> unknown_uint() >= x2 - d2) && (c2 ==> 0 <= unknown_int()) && (c2 ==> 0 <= unknown_int()) && (c2 ==> 0 <= unknown_int());\nloop invariant (!c1 && !c2 ==> 0 <= x3 <= unknown_uint()) && (!c1 && !c2 ==> d3 >= 1) && (!c1 && !c2 ==> x3 >= d3) && (!c1 && !c2 ==> x3 >= x3 - d3) && (!c1 && !c2 ==> unknown_uint() <= x3) && (!c1 && !c2 ==> unknown_uint() >= x3 - d3) && (!c1 && !c2 ==> 0 <= unknown_int()) && (!c1 && !c2 ==> 0 <= unknown_int()) && (!c1 && !c2 ==> 0 <= unknown_int());\nloop invariant (x1 == 0) ==> (unknown_uint() == unknown_uint()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int());\nloop invariant (x2 == 0) ==> (unknown_uint() == unknown_uint()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int());\n*/\n```",
            "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 > 0;\nloop invariant d2 > 0;\nloop invariant d3 > 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant c1 ==> x1 >= 0;\nloop invariant c2 ==> x2 >= 0;\nloop invariant !c1 && !c2 ==> x3 >= 0;\nloop invariant c1 ==> x1 <= x1 + d1;\nloop invariant c2 ==> x2 <= x2 + d2;\nloop invariant !c1 && !c2 ==> x3 <= x3 + d3;\nloop invariant x1 >= 0 ==> x1 <= x2;\nloop invariant x1 >= 0 ==> x1 <= x3;\nloop invariant x2 >= 0 ==> x2 <= x3;\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (d1 > 0 && d2 > 0 && d3 > 0);\nloop invariant x1 >= 0 ==> v1 >= 0;\nloop invariant x2 >= 0 ==> v2 >= 0;\nloop invariant x3 >= 0 ==> v3 >= 0;\nloop invariant x1 >= 0 ==> c1 == 0;\nloop invariant x2 >= 0 ==> c2 == 0;\nloop invariant x3 >= 0 ==> c1 == 0 && c2 == 0;\nloop invariant x1 >= 0 ==> v1 >= 0 && v2 >= 0 && v3 >= 0;\nloop invariant x2 >= 0 ==> v1 >= 0 && v2 >= 0 && v3 >= 0;\nloop invariant x3 >= 0 ==> v1 >= 0 && v2 >= 0 && v3 >= 0;\nloop invariant x1 >= 0 ==> c1 == 0 && c2 == 0 && v1 >= 0 && v2 >= 0 && v3 >= 0;\nloop invariant x2 >= 0 ==> c1 == 0 && c2 == 0 && v1 >= 0 && v2 >= 0 && v3 >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= x1 + d1;\nloop invariant 0 <= x2 <= x2 + d2;\nloop invariant 0 <= x3 <= x3 + d3;\nloop invariant (x1+d1)*d1 == 0 ==> d1 == 0;\nloop invariant (x2+d2)*d2 == 0 ==> d2 == 0;\nloop invariant (x3+d3)*d3 == 0 ==> d3 == 0;\nloop invariant x1 >= d1 ==> x1 >= x1 + d1;\nloop invariant x2 >= d2 ==> x2 >= x2 + d2;\nloop invariant x3 >= d3 ==> x3 >= x3 + d3;\nloop invariant x1 >= x1+d1 ==> c1;\nloop invariant x2 >= x2+d2 ==> c2;\nloop invariant v1 == 0 ==> c1;\nloop invariant v2 == 0 ==> c2;\nloop invariant v3 == 0 ==> !(c1 || c2);\nloop invariant x1 >= x1+d1 ==> x1 >= (x1+d1);\nloop invariant x2 >= x2+d2 ==> x2 >= (x2+d2);\nloop invariant x3 >= x3+d3 ==> x3 >= (x3+d3);\nloop invariant c1 ==> x1 >= x1+d1;\nloop invariant c2 ==> x2 >= x2+d2;\nloop invariant !c1 ==> x1 >= x1;\nloop invariant !c2 ==> x2 >= x2;\nloop invariant x1+d1 == 0 ==> x1 == 0;\nloop invariant x2+d2 == 0 ==> x2 == 0;\nloop invariant x3+d3 == 0 ==> x3 == 0;\nloop invariant x1+d1 == 0 ==> d1 == 0;\nloop invariant x2+d2 == 0 ==> d2 == 0;\nloop invariant x3+d3 == 0 ==> d3 == 0;\nloop invariant x1 >= x1+d1 ==> x1 >= x1+d1;\nloop invariant x2 >= x2+d2 ==> x2 >= x2+d2;\nloop invariant x3 >= x3+d3 ==> x3 >= x3+d3;\nloop invariant x1 >= x1+d1 ==> x1 >= x1+d1;\nloop invariant x2 >= x2+d2 ==> x2 >= x2+d2;\nloop invariant x3 >= x3+d3 ==> x3 >= x3+d3;\nloop invariant x1+d1 == 0 ==> x1 == 0;\nloop invariant x2+d2 == 0 ==> x2 == 0;\nloop invariant x3+d3 == 0 ==> x3 == 0;\nloop invariant x1+d1 == 0 ==> d1 == 0;\nloop invariant x2+d2 == 0 ==> d2 == 0;\nloop invariant x3+d3 == 0 ==> d3 == 0;\nloop invariant x1 >= x1+d1 ==> x1 >= x1+d1;\nloop invariant x2 >= x2+d2 ==> x2 >= x2+d2;\nloop invariant x3 >= x3+d3 ==> x3 >= x3+d3;\nloop invariant x1 >= x1+d1 ==> x1 >= x1+d1;\nloop invariant x2 >= x2+d2 ==> x2 >= x2+d2;\nloop invariant x3 >= x3+d3 ==> x3 >= x3+d3;\nloop invariant x1+d1 == 0 ==> x1 == 0;\nloop invariant x2+d2 == 0 ==> x2 == 0;\nloop invariant x3+d3 == 0 ==> x3 == 0;\nloop invariant x1+d1 == 0 ==> d1 == 0;\nloop invariant x2+d2 == 0 ==> d2 == 0;\nloop invariant x3+d3 == 0 ==> d3 == 0;\nloop invariant x1 >= x1+d1 ==> x1 >= x1+d1;\nloop invariant x2 >= x2+d2 ==> x2 >= x2+d2;\nloop invariant x3 >= x3+d3 ==> x3 >= x3+d3;\nloop invariant x1 >= x1+d1 ==> x1 >= x1+d1;\nloop invariant x2 >= x2+d2 ==> x2 >= x2+d2;\nloop invariant x3 >= x3+d3 ==> x3 >= x3+d3;\nloop invariant x1+d1 == 0 ==> x1 == 0;\nloop invariant x2+d2 == 0 ==> x2 == 0;\nloop invariant x3+d3 == 0 ==> x3 == 0;\nloop invariant x1+d1 == 0 ==> d1 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= x1;\nloop invariant 0 <= x2 <= x2;\nloop invariant 0 <= x3 <= x3;\nloop invariant 0 <= d1 <= d1;\nloop invariant 0 <= d2 <= d2;\nloop invariant 0 <= d3 <= d3;\nloop invariant c1 in {0, 1};\nloop invariant c2 in {0, 1};\nloop invariant v1 in {0, 1};\nloop invariant v2 in {0, 1};\nloop invariant v3 in {0, 1};\nloop invariant x1 == x1 ==> 0 <= x1 <= x1;\nloop invariant x2 == x2 ==> 0 <= x2 <= x2;\nloop invariant x3 == x3 ==> 0 <= x3 <= x3;\nloop invariant d1 == d1 ==> 0 <= d1 <= d1;\nloop invariant d2 == d2 ==> 0 <= d2 <= d2;\nloop invariant d3 == d3 ==> 0 <= d3 <= d3;\nloop invariant c1 == c1 ==> c1 in {0, 1};\nloop invariant c2 == c2 ==> c2 in {0, 1};\nloop invariant v1 == v1 ==> v1 in {0, 1};\nloop invariant v2 == v2 ==> v2 in {0, 1};\nloop invariant v3 == v3 ==> v3 in {0, 1};\nloop invariant x1 == x1 ==> 0 <= x1 <= x1 ==> 0 <= x1 <= x1;\nloop invariant x2 == x2 ==> 0 <= x2 <= x2 ==> 0 <= x2 <= x2;\nloop invariant x3 == x3 ==> 0 <= x3 <= x3 ==> 0 <= x3 <= x3;\nloop invariant d1 == d1 ==> 0 <= d1 <= d1 ==> 0 <= d1 <= d1;\nloop invariant d2 == d2 ==> 0 <= d2 <= d2 ==> 0 <= d2 <= d2;\nloop invariant d3 == d3 ==> 0 <= d3 <= d3 ==> 0 <= d3 <= d3;\nloop invariant c1 == c1 ==> c1 in {0, 1} ==> c1 in {0, 1};\nloop invariant c2 == c2 ==> c2 in {0, 1} ==> c2 in {0, 1};\nloop invariant v1 == v1 ==> v1 in {0, 1} ==> v1 in {0, 1};\nloop invariant v2 == v2 ==> v2 in {0, 1} ==> v2 in {0, 1};\nloop invariant v3 == v3 ==> v3 in {0, 1} ==> v3 in {0, 1};\nloop invariant x1 == x1 ==> 0 <= x1 <= x1 ==> 0 <= x1 <= x1 ==> 0 <= x1 <= x1;\nloop invariant x2 == x2 ==> 0 <= x2 <= x2 ==> 0 <= x2 <= x2 ==> 0 <= x2 <= x2;\nloop invariant x3 == x3 ==> 0 <= x3 <= x3 ==> 0 <= x3 <= x3 ==> 0 <= x3 <= x3;\nloop invariant d1 == d1 ==> 0 <= d1 <= d1 ==> 0 <= d1 <= d1 ==> 0 <= d1 <= d1;\nloop invariant d2 == d2 ==> 0 <= d2 <= d2 ==> 0 <= d2 <= d2 ==> 0 <= d2 <= d2;\nloop invariant d3 == d3 ==> 0 <= d3 <= d3 ==> 0 <= d3 <= d3 ==> 0 <= d3 <= d3;\nloop invariant c1 == c1 ==> c1 in {0, 1} ==> c1 in {0, 1} ==> c1 in {0, 1};\nloop invariant c2 == c2 ==> c2 in {0, 1} ==> c2 in {0, 1} ==> c2 in {0, 1};\nloop invariant v1 == v1 ==> v1 in {0, 1} ==> v1 in {0, 1} ==> v1 in {0, 1};\nloop invariant v2 == v2 ==> v2 in {0, 1} ==> v2 in {0, 1} ==> v2 in {0, 1};\nloop invariant v3 == v3 ==> v3 in {0, 1} ==> v3 in {0, 1} ==> v3 in {0, 1};\n*/\n```",
            "```\n/*@\nloop invariant x1 >= 1 ==> x1 >= 0;\nloop invariant x2 >= 1 ==> x2 >= 0;\nloop invariant x3 >= 1 ==> x3 >= 0;\nloop invariant x1 <= 0 ==> x1 == 0;\nloop invariant x2 <= 0 ==> x2 == 0;\nloop invariant x3 <= 0 ==> x3 == 0;\nloop invariant d1 >= 1 ==> d1 >= 1;\nloop invariant d2 >= 1 ==> d2 >= 1;\nloop invariant d3 >= 1 ==> d3 >= 1;\nloop invariant c1 ==> c1 == 1;\nloop invariant !c1 ==> c1 == 0;\nloop invariant c2 ==> c2 == 1;\nloop invariant !c2 ==> c2 == 0;\nloop invariant (c1 ==> x1 >= 0) ==> (c1 ==> x1 >= d1);\nloop invariant (c2 ==> x2 >= 0) ==> (c2 ==> x2 >= d2);\nloop invariant (!c1 && !c2 ==> x3 >= 0) ==> (!c1 && !c2 ==> x3 >= d3);\nloop invariant (c1 ==> x1 == 0) ==> (c1 ==> x1 == d1);\nloop invariant (c2 ==> x2 == 0) ==> (c2 ==> x2 == d2);\nloop invariant (!c1 && !c2 ==> x3 == 0) ==> (!c1 && !c2 ==> x3 == d3);\nloop invariant (c1 ==> x1 >= 1 ==> x1 >= 0) ==> (c1 ==> x1 >= 1 ==> x1 >= d1);\nloop invariant (c2 ==> x2 >= 1 ==> x2 >= 0) ==> (c2 ==> x2 >= 1 ==> x2 >= d2);\nloop invariant (!c1 && !c2 ==> x3 >= 1 ==> x3 >= 0) ==> (!c1 && !c2 ==> x3 >= 1 ==> x3 >= d3);\nloop invariant (c1 ==> x1 <= 0 ==> x1 == 0) ==> (c1 ==> x1 <= 0 ==> x1 == d1);\nloop invariant (c2 ==> x2 <= 0 ==> x2 == 0) ==> (c2 ==> x2 <= 0 ==> x2 == d2);\nloop invariant (!c1 && !c2 ==> x3 <= 0 ==> x3 == 0) ==> (!c1 && !c2 ==> x3 <= 0 ==> x3 == d3);\nloop invariant (c1 ==> x1 >= 0 ==> x1 >= 1 ==> x1 >= 0) ==> (c1 ==> x1 >= 0 ==> x1 >= 1 ==> x1 >= d1);\nloop invariant (c2 ==> x2 >= 0 ==> x2 >= 1 ==> x2 >= 0) ==> (c2 ==> x2 >= 0 ==> x2 >= 1 ==> x2 >= d2);\nloop invariant (!c1 && !c2 ==> x3 >= 0 ==> x3 >= 1 ==> x3 >= 0) ==> (!c1 && !c2 ==> x3 >= 0 ==> x3 >= 1 ==> x3 >= d3);\nloop invariant (c1 ==> x1 <= 0 ==> x1 == 0) ==> (c1 ==> x1 <= 0 ==> x1 == d1);\nloop invariant (c2 ==> x2 <= 0 ==> x2 == 0) ==> (c2 ==> x2 <= 0 ==> x2 == d2);\nloop invariant (!c1 && !c2 ==> x3 <= 0 ==> x3 == 0) ==> (!c1 && !c2 ==> x3 <= 0 ==> x3 == d3);\nloop invariant v1 == v2 ==> v1 == v3;\nloop invariant v1 == v3 ==> v1 == v2;\nloop invariant v2 == v3 ==> v2 == v1;\nloop invariant v1 != v2 ==> v1 != v3;\nloop invariant v1 != v3 ==> v1 != v2;\nloop invariant v2 != v3 ==> v2 != v1;\nloop invariant v1 == v2 ==> v1 == v3 ==> v1 == v2;\nloop invariant v1 == v3 ==> v1 == v2 ==> v1 == v3;\nloop invariant v2 == v3 ==> v2 == v1 ==> v2 == v3;\nloop invariant v1 != v2 ==> v1 != v3 ==> v1 != v2;\nloop invariant v1 != v3 ==> v1 != v2 ==> v1 != v3;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= 2147483647;\nloop invariant d1 <= x1;\nloop invariant 0 <= x2 <= 2147483647;\nloop invariant d2 <= x2;\nloop invariant 0 <= x3 <= 2147483647;\nloop invariant d3 <= x3;\nloop invariant c1 && c2 ==> x1 == 0;\nloop invariant !c1 && !c2 ==> x2 == 0;\nloop invariant !c1 && !c2 ==> x3 == 0;\nloop invariant d1 == 1;\nloop invariant d2 == 1;\nloop invariant d3 == 1;\nloop invariant c1 && c2 ==> x1 == 0;\nloop invariant !c1 && !c2 ==> x2 == 0;\nloop invariant !c1 && !c2 ==> x3 == 0;\nloop invariant c1 && c2 ==> d1 <= x1;\nloop invariant !c1 && !c2 ==> d2 <= x2;\nloop invariant !c1 && !c2 ==> d3 <= x3;\nloop invariant c1 && c2 ==> d1 == 1;\nloop invariant !c1 && !c2 ==> d2 == 1;\nloop invariant !c1 && !c2 ==> d3 == 1;\nloop invariant c1 && c2 ==> x1 == 0;\nloop invariant !c1 && !c2 ==> x2 == 0;\nloop invariant !c1 && !c2 ==> x3 == 0;\nloop invariant c1 && c2 ==> d1 == 1;\nloop invariant !c1 && !c2 ==> d2 == 1;\nloop invariant !c1 && !c2 ==> d3 == 1;\nloop invariant c1 && c2 ==> x1 == 0;\nloop invariant !c1 && !c2 ==> x2 == 0;\nloop invariant !c1 && !c2 ==> x3 == 0;\nloop invariant c1 && c2 ==> d1 == 1;\nloop invariant !c1 && !c2 ==> d2 == 1;\nloop invariant !c1 && !c2 ==> d3 == 1;\nloop invariant c1 && c2 ==> x1 == 0;\nloop invariant !c1 && !c2 ==> x2 == 0;\nloop invariant !c1 && !c2 ==> x3 == 0;\nloop invariant c1 && c2 ==> d1 == 1;\nloop invariant !c1 && !c2 ==> d2 == 1;\nloop invariant !c1 && !c2 ==> d3 == 1;\nloop invariant c1 && c2 ==> x1 == 0;\nloop invariant !c1 && !c2 ==> x2 == 0;\nloop invariant !c1 && !c2 ==> x3 == 0;\nloop invariant c1 && c2 ==> d1 == 1;\nloop invariant !c1 && !c2 ==> d2 == 1;\nloop invariant !c1 && !c2 ==> d3 == 1;\nloop invariant c1 && c2 ==> x1 == 0;\nloop invariant !c1 && !c2 ==> x2 == 0;\nloop invariant !c1 && !c2 ==> x3 == 0;\nloop invariant c1 && c2 ==> d1 == 1;\nloop invariant !c1 && !c2 ==> d2 == 1;\nloop invariant !c1 && !c2 ==> d3 == 1;\nloop invariant c1 && c2 ==> x1 == 0;\nloop invariant !c1 && !c2 ==> x2 == 0;\nloop invariant !c1 && !c2 ==> x3 == 0;\nloop invariant c1 && c2 ==> d1 == 1;\nloop invariant !c1 && !c2 ==> d2 == 1;\nloop invariant !c1 && !c2 ==> d3 == 1;\nloop invariant c1 && c2 ==> x1 == 0;\nloop invariant !c1 && !c2 ==> x2 == 0;\nloop invariant !c1 && !c2 ==> x3 == 0;\nloop invariant c1 && c2 ==> d1 == 1;\nloop invariant !c1 && !c2 ==> d2 == 1;\nloop invariant !c1 && !c2 ==> d3 == 1;\nloop invariant c1 && c2 ==> x1 == 0;\nloop invariant !c1 && !c2 ==> x2 == 0;\nloop invariant !c1 && !c2 ==> x3 == 0;\nloop invariant c1 && c2 ==> d1 == 1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x1 <= unknown_uint();\nloop invariant 1 <= x2 <= unknown_uint();\nloop invariant 1 <= x3 <= unknown_uint();\nloop invariant (x1 >= 0) ==> (x1 <= unknown_uint());\nloop invariant (x2 >= 0) ==> (x2 <= unknown_uint());\nloop invariant (x3 >= 0) ==> (x3 <= unknown_uint());\nloop invariant (x1 >= 0) ==> (x1 == x1-d1 * d1);\nloop invariant (x2 >= 0) ==> (x2 == x2-d2 * d2);\nloop invariant (x3 >= 0) ==> (x3 == x3-d3 * d3);\nloop invariant (x1 == 0) ==> (x1 > 0);\nloop invariant (x2 == 0) ==> (x2 > 0);\nloop invariant (x3 == 0) ==> (x3 > 0);\nloop invariant (c1 == unknown_bool()) ==> (c1 == unknown_bool());\nloop invariant (c2 == unknown_bool()) ==> (c2 == unknown_bool());\nloop invariant (v1 == unknown_int()) ==> (v1 == unknown_int());\nloop invariant (v2 == unknown_int()) ==> (v2 == unknown_int());\nloop invariant (v3 == unknown_int()) ==> (v3 == unknown_int());\n*/\n```",
            "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 > 0;\nloop invariant d2 > 0;\nloop invariant d3 > 0;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x1 == (x1 - d1) ==> c1;\nloop invariant x2 == (x2 - d2) ==> c2;\nloop invariant x3 == (x3 - d3) ==> !c1 && !c2;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= 2147483647;\nloop invariant 0 <= x2 <= 2147483647;\nloop invariant 0 <= x3 <= 2147483647;\nloop invariant 0 <= d1 <= 2147483647;\nloop invariant 0 <= d2 <= 2147483647;\nloop invariant 0 <= d3 <= 2147483647;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x2 >= x1 && x2 >= x3);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x3 >= x1 && x3 >= x2);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= 2147483647;\nloop invariant 0 <= x2 <= 2147483647;\nloop invariant 0 <= x3 <= 2147483647;\nloop invariant 0 <= d1 <= 2147483647;\nloop invariant 0 <= d2 <= 2147483647;\nloop invariant 0 <= d3 <= 2147483647;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant v1 >= -2147483648;\nloop invariant v1 <= 2147483647;\nloop invariant v2 >= -2147483648;\nloop invariant v2 <= 2147483647;\nloop invariant v3 >= -2147483648;\nloop invariant v3 <= 2147483647;\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 || x2 >= d2 || x3 >= d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (c1 || c2);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (v1 == x1 || v1 == x2 || v1 == x3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (v2 == x1 || v2 == x2 || v2 == x3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (v3 == x1 || v3 == x2 || v3 == x3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (c1 || c2 || (v1 == x1 && v2 == x2 && v3 == x3));\nloop invariant (x1 <= 0 || x2 <= 0 || x3 <= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 <= 0 || x2 <= 0 || x3 <= 0) ==> (d1 == 0 && d2 == 0 && d3 == 0);\nloop invariant (x1 <= 0 || x2 <= 0 || x3 <= 0) ==> (c1 == 0 && c2 == 0);\nloop invariant (x1 <= 0 || x2 <= 0 || x3 <= 0) ==> (v1 == 0 && v2 == 0 && v3 == 0);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x1 >= d1;\nloop invariant x2 >= d2;\nloop invariant x3 >= d3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant c1 ==> x1 >= d1;\nloop invariant c2 ==> x2 >= d2;\nloop invariant !c1 && !c2 ==> x3 >= d3;\nloop invariant x1 <= x1 + d1;\nloop invariant x2 <= x2 + d2;\nloop invariant x3 <= x3 + d3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  int v1,v2,v3;\n  \n  /*@\n\n\n\nloop invariant i4: x1 >= 0;\nloop invariant i5: x2 >= 0;\nloop invariant i6: x3 >= 0;\n\n\n\nloop invariant i10: x1 <= x1 + d1;\nloop invariant i11: x2 <= x2 + d2;\nloop invariant i12: x3 <= x3 + d3;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 37,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 0 <= d1 <= unknown_uint();\nloop invariant 0 <= d2 <= unknown_uint();\nloop invariant 0 <= d3 <= unknown_uint();\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x1 >= 0 && x1 <= unknown_uint() ==> x1 != 0;\nloop invariant x2 >= 0 && x2 <= unknown_uint() ==> x2 != 0;\nloop invariant x3 >= 0 && x3 <= unknown_uint() ==> x3 != 0;\nloop invariant d1 >= 0 && d1 <= unknown_uint();\nloop invariant d2 >= 0 && d2 <= unknown_uint();\nloop invariant d3 >= 0 && d3 <= unknown_uint();\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x1 != 0 ==> x1 >= x2;\nloop invariant x1 != 0 ==> x1 >= x3;\nloop invariant x2 != 0 ==> x2 >= x1;\nloop invariant x2 != 0 ==> x2 >= x3;\nloop invariant x3 != 0 ==> x3 >= x1;\nloop invariant x3 != 0 ==> x3 >= x2;\nloop invariant x1 >= 0 && x1 <= unknown_uint() ==> x1 == 0 || x1 >= d1;\nloop invariant x2 >= 0 && x2 <= unknown_uint() ==> x2 == 0 || x2 >= d2;\nloop invariant x3 >= 0 && x3 <= unknown_uint() ==> x3 == 0 || x3 >= d3;\nloop invariant x1 >= 0 && x1 <= unknown_uint() && x1 != 0 ==> x1 >= d1;\nloop invariant x2 >= 0 && x2 <= unknown_uint() && x2 != 0 ==> x2 >= d2;\nloop invariant x3 >= 0 && x3 <= unknown_uint() && x3 != 0 ==> x3 >= d3;\nloop invariant x1 >= 0 && x1 <= unknown_uint() && x1 != 0 ==> x1 - d1 >= 0;\nloop invariant x2 >= 0 && x2 <= unknown_uint() && x2 != 0 ==> x2 - d2 >= 0;\nloop invariant x3 >= 0 && x3 <= unknown_uint() && x3 != 0 ==> x3 - d3 >= 0;\nloop invariant x1 >= 0 && x1 <= unknown_uint() && x1 != 0 ==> x1 - d1 <= unknown_uint();\nloop invariant x2 >= 0 && x2 <= unknown_uint() && x2 != 0 ==> x2 - d2 <= unknown_uint();\nloop invariant x3 >= 0 && x3 <= unknown_uint() && x3 != 0 ==> x3 - d3 <= unknown_uint();\nloop invariant x1 >= 0 && x1 <= unknown_uint() && x1 != 0 ==> x1 - d1 >= 0 && x1 - d1 <= unknown_uint();\nloop invariant x2 >= 0 && x2 <= unknown_uint() && x2 != 0 ==> x2 - d2 >= 0 && x2 - d2 <= unknown_uint();\nloop invariant x3 >= 0 && x3 <= unknown_uint() && x3 != 0 ==> x3 - d3 >= 0 && x3 - d3 <= unknown_uint();\nloop invariant x1 >= 0 && x1 <= unknown_uint() && x1 != 0 ==> x1 - d1 >= 0 && x1 - d1 <= unknown_uint() ==> x1 >= d1;\nloop invariant x2 >= 0 && x2 <= unknown_uint() && x2 != 0 ==> x2 - d2 >= 0 && x2 - d2 <= unknown_uint() ==> x2 >= d2;\nloop invariant x3 >= 0 && x3 <= unknown_uint() && x3 != 0 ==> x3 - d3 >= 0 && x3 - d3 <= unknown_uint() ==> x3 >= d3;\nloop invariant x1 >= 0 && x1 <= unknown_uint() && x1 != 0 ==> x1 >= d1 && x1 <= unknown_uint() ==> x1 - d1 >= 0 && x1 - d1 <= unknown_uint();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  int v1,v2,v3;\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 15,
                "annotations": "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 == 1 || c2 == 1;\nloop invariant x1 >= d1 * c1;\nloop invariant x2 >= d2 * c2;\nloop invariant x3 >= d3 * (1 - c1 - c2);\nloop invariant if (x1 > 0) x1 >= d1;\nloop invariant if (x2 > 0) x2 >= d2;\nloop invariant if (x3 > 0) x3 >= d3;\nloop invariant if (x1 > 0) x1 >= d1 * c1;\nloop invariant if (x2 > 0) x2 >= d2 * c2;\nloop invariant if (x3 > 0) x3 >= d3 * (1 - c1 - c2);\nloop invariant if (x1 > 0) x1 <= x2;\nloop invariant if (x2 > 0) x2 <= x3;\nloop invariant if (x1 > 0 && x2 > 0) x2 <= x3;\nloop invariant if (x1 > 0 && x3 > 0) x3 >= x2;\nloop invariant if (x2 > 0 && x3 > 0) x3 >= x1;\nloop invariant if (x1 > 0 && x2 > 0 && x3 > 0) x3 >= x2;\nloop invariant if (x1 > 0 && x2 > 0 && x3 > 0) x2 >= x1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  int v1,v2,v3;\n  \n  /*@\nloop invariant i1: x1 >= 0;\nloop invariant i2: x2 >= 0;\nloop invariant i3: x3 >= 0;\n\n\nloop invariant i6: d1 >= 1;\nloop invariant i7: d2 >= 1;\nloop invariant i8: d3 >= 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 <= x2;\nloop invariant x1 <= x3;\nloop invariant x2 <= x3;\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant (x1 <= x2 + (x2 - d2) * d2 / d1);\nloop invariant (x1 <= x3 + (x3 - d3) * d3 / d1);\nloop invariant (x2 <= x3 + (x3 - d3) * d3 / d2);\nloop invariant (x2 >= x1 - (d1 - d2) * x1 / d1);\nloop invariant (x3 >= x1 - (d1 - d3) * x1 / d1);\nloop invariant (x3 >= x2 - (d2 - d3) * x2 / d2);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  int v1,v2,v3;\n  \n  /*@\nloop invariant i1: x1 >= 0;\nloop invariant i2: x2 >= 0;\nloop invariant i3: x3 >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= x1' && 0 <= x2 <= x2' && 0 <= x3 <= x3';\nloop invariant (x1' - x1) + (x2' - x2) + (x3' - x3) = d1 + d2 + d3;\nloop invariant x1' = x1 + (c1 ? -d1 : 0);\nloop invariant x2' = x2 + (c2 ? -d2 : 0);\nloop invariant x3' = x3 + (-d3);\nloop invariant c1 == (x1 > 0) && c2 == (x2 > 0);\nloop invariant v1 = unknown_int() && v2 = unknown_int() && v3 = unknown_int();\nloop invariant x1 == x1' && x2 == x2' && x3 == x3';\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant x1' = x1 && x2' = x2 && x3' = x3;\nloop invariant (x1' == 0 || x2' == 0 || x3' == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  int v1,v2,v3;\n  \n  /*@\nloop invariant i1: 0 <= x1 <= x1' && 0 <= x2 <= x2' && 0 <= x3 <= x3';\nloop invariant i2: (x1' - x1) + (x2' - x2) + (x3' - x3) = d1 + d2 + d3;\nloop invariant i3: x1' = x1 + (c1 ? -d1 : 0);\nloop invariant i4: x2' = x2 + (c2 ? -d2 : 0);\nloop invariant i5: x3' = x3 + (-d3);\nloop invariant i6: c1 == (x1 > 0) && c2 == (x2 > 0);\nloop invariant i7: v1 = unknown_int() && v2 = unknown_int() && v3 = unknown_int();\nloop invariant i8: x1 == x1' && x2 == x2' && x3 == x3';\nloop invariant i9: (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i10: x1' = x1 && x2' = x2 && x3' = x3;\nloop invariant i11: (x1' == 0 || x2' == 0 || x3' == 0);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 18,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant unknown_int() >= 0;\nloop invariant unknown_int() >= 0;\nloop invariant unknown_int() >= 0;\nloop invariant (x1 == 0) ==> (unknown_uint() == unknown_uint());\nloop invariant (x2 == 0) ==> (unknown_uint() == unknown_uint());\nloop invariant (x3 == 0) ==> (unknown_uint() == unknown_uint());\nloop invariant (c1 ==> 0 <= x1 <= unknown_uint()) && (c1 ==> d1 >= 1) && (c1 ==> x1 >= d1) && (c1 ==> x1 >= x1 - d1) && (c1 ==> unknown_uint() <= x1) && (c1 ==> unknown_uint() >= x1 - d1);\nloop invariant (c2 ==> 0 <= x2 <= unknown_uint()) && (c2 ==> d2 >= 1) && (c2 ==> x2 >= d2) && (c2 ==> x2 >= x2 - d2) && (c2 ==> unknown_uint() <= x2) && (c2 ==> unknown_uint() >= x2 - d2);\nloop invariant (!c1 && !c2 ==> 0 <= x3 <= unknown_uint()) && (!c1 && !c2 ==> d3 >= 1) && (!c1 && !c2 ==> x3 >= d3) && (!c1 && !c2 ==> x3 >= x3 - d3) && (!c1 && !c2 ==> unknown_uint() <= x3) && (!c1 && !c2 ==> unknown_uint() >= x3 - d3);\nloop invariant (x1 == 0) ==> (unknown_uint() == unknown_uint()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int());\nloop invariant (x2 == 0) ==> (unknown_uint() == unknown_uint()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int());\nloop invariant (x3 == 0) ==> (unknown_uint() == unknown_uint()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int());\nloop invariant (c1 ==> 0 <= x1 <= unknown_uint()) && (c1 ==> d1 >= 1) && (c1 ==> x1 >= d1) && (c1 ==> x1 >= x1 - d1) && (c1 ==> unknown_uint() <= x1) && (c1 ==> unknown_uint() >= x1 - d1) && (c1 ==> 0 <= unknown_int()) && (c1 ==> 0 <= unknown_int()) && (c1 ==> 0 <= unknown_int());\nloop invariant (c2 ==> 0 <= x2 <= unknown_uint()) && (c2 ==> d2 >= 1) && (c2 ==> x2 >= d2) && (c2 ==> x2 >= x2 - d2) && (c2 ==> unknown_uint() <= x2) && (c2 ==> unknown_uint() >= x2 - d2) && (c2 ==> 0 <= unknown_int()) && (c2 ==> 0 <= unknown_int()) && (c2 ==> 0 <= unknown_int());\nloop invariant (!c1 && !c2 ==> 0 <= x3 <= unknown_uint()) && (!c1 && !c2 ==> d3 >= 1) && (!c1 && !c2 ==> x3 >= d3) && (!c1 && !c2 ==> x3 >= x3 - d3) && (!c1 && !c2 ==> unknown_uint() <= x3) && (!c1 && !c2 ==> unknown_uint() >= x3 - d3) && (!c1 && !c2 ==> 0 <= unknown_int()) && (!c1 && !c2 ==> 0 <= unknown_int()) && (!c1 && !c2 ==> 0 <= unknown_int());\nloop invariant (x1 == 0) ==> (unknown_uint() == unknown_uint()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int());\nloop invariant (x2 == 0) ==> (unknown_uint() == unknown_uint()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int());\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  int v1,v2,v3;\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 > 0;\nloop invariant d2 > 0;\nloop invariant d3 > 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant c1 ==> x1 >= 0;\nloop invariant c2 ==> x2 >= 0;\nloop invariant !c1 && !c2 ==> x3 >= 0;\nloop invariant c1 ==> x1 <= x1 + d1;\nloop invariant c2 ==> x2 <= x2 + d2;\nloop invariant !c1 && !c2 ==> x3 <= x3 + d3;\nloop invariant x1 >= 0 ==> x1 <= x2;\nloop invariant x1 >= 0 ==> x1 <= x3;\nloop invariant x2 >= 0 ==> x2 <= x3;\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (d1 > 0 && d2 > 0 && d3 > 0);\nloop invariant x1 >= 0 ==> v1 >= 0;\nloop invariant x2 >= 0 ==> v2 >= 0;\nloop invariant x3 >= 0 ==> v3 >= 0;\nloop invariant x1 >= 0 ==> c1 == 0;\nloop invariant x2 >= 0 ==> c2 == 0;\nloop invariant x3 >= 0 ==> c1 == 0 && c2 == 0;\nloop invariant x1 >= 0 ==> v1 >= 0 && v2 >= 0 && v3 >= 0;\nloop invariant x2 >= 0 ==> v1 >= 0 && v2 >= 0 && v3 >= 0;\nloop invariant x3 >= 0 ==> v1 >= 0 && v2 >= 0 && v3 >= 0;\nloop invariant x1 >= 0 ==> c1 == 0 && c2 == 0 && v1 >= 0 && v2 >= 0 && v3 >= 0;\nloop invariant x2 >= 0 ==> c1 == 0 && c2 == 0 && v1 >= 0 && v2 >= 0 && v3 >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  int v1,v2,v3;\n  \n  /*@\nloop invariant i1: x1 >= 0;\nloop invariant i2: x2 >= 0;\nloop invariant i3: x3 >= 0;\nloop invariant i4: d1 > 0;\nloop invariant i5: d2 > 0;\nloop invariant i6: d3 > 0;\nloop invariant i7: c1 == 0 || c1 == 1;\nloop invariant i8: c2 == 0 || c2 == 1;\n\n\n\nloop invariant i12: c1 ==> x1 >= 0;\nloop invariant i13: c2 ==> x2 >= 0;\nloop invariant i14: !c1 && !c2 ==> x3 >= 0;\nloop invariant i15: c1 ==> x1 <= x1 + d1;\nloop invariant i16: c2 ==> x2 <= x2 + d2;\nloop invariant i17: !c1 && !c2 ==> x3 <= x3 + d3;\n\n\n\nloop invariant i21: (x1 > 0 && x2 > 0 && x3 > 0) ==> (d1 > 0 && d2 > 0 && d3 > 0);\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= x1 + d1;\nloop invariant 0 <= x2 <= x2 + d2;\nloop invariant 0 <= x3 <= x3 + d3;\nloop invariant (x1+d1)*d1 == 0 ==> d1 == 0;\nloop invariant (x2+d2)*d2 == 0 ==> d2 == 0;\nloop invariant (x3+d3)*d3 == 0 ==> d3 == 0;\nloop invariant x1 >= d1 ==> x1 >= x1 + d1;\nloop invariant x2 >= d2 ==> x2 >= x2 + d2;\nloop invariant x3 >= d3 ==> x3 >= x3 + d3;\nloop invariant x1 >= x1+d1 ==> c1;\nloop invariant x2 >= x2+d2 ==> c2;\nloop invariant v1 == 0 ==> c1;\nloop invariant v2 == 0 ==> c2;\nloop invariant v3 == 0 ==> !(c1 || c2);\nloop invariant x1 >= x1+d1 ==> x1 >= (x1+d1);\nloop invariant x2 >= x2+d2 ==> x2 >= (x2+d2);\nloop invariant x3 >= x3+d3 ==> x3 >= (x3+d3);\nloop invariant c1 ==> x1 >= x1+d1;\nloop invariant c2 ==> x2 >= x2+d2;\nloop invariant !c1 ==> x1 >= x1;\nloop invariant !c2 ==> x2 >= x2;\nloop invariant x1+d1 == 0 ==> x1 == 0;\nloop invariant x2+d2 == 0 ==> x2 == 0;\nloop invariant x3+d3 == 0 ==> x3 == 0;\nloop invariant x1+d1 == 0 ==> d1 == 0;\nloop invariant x2+d2 == 0 ==> d2 == 0;\nloop invariant x3+d3 == 0 ==> d3 == 0;\nloop invariant x1 >= x1+d1 ==> x1 >= x1+d1;\nloop invariant x2 >= x2+d2 ==> x2 >= x2+d2;\nloop invariant x3 >= x3+d3 ==> x3 >= x3+d3;\nloop invariant x1 >= x1+d1 ==> x1 >= x1+d1;\nloop invariant x2 >= x2+d2 ==> x2 >= x2+d2;\nloop invariant x3 >= x3+d3 ==> x3 >= x3+d3;\nloop invariant x1+d1 == 0 ==> x1 == 0;\nloop invariant x2+d2 == 0 ==> x2 == 0;\nloop invariant x3+d3 == 0 ==> x3 == 0;\nloop invariant x1+d1 == 0 ==> d1 == 0;\nloop invariant x2+d2 == 0 ==> d2 == 0;\nloop invariant x3+d3 == 0 ==> d3 == 0;\nloop invariant x1 >= x1+d1 ==> x1 >= x1+d1;\nloop invariant x2 >= x2+d2 ==> x2 >= x2+d2;\nloop invariant x3 >= x3+d3 ==> x3 >= x3+d3;\nloop invariant x1 >= x1+d1 ==> x1 >= x1+d1;\nloop invariant x2 >= x2+d2 ==> x2 >= x2+d2;\nloop invariant x3 >= x3+d3 ==> x3 >= x3+d3;\nloop invariant x1+d1 == 0 ==> x1 == 0;\nloop invariant x2+d2 == 0 ==> x2 == 0;\nloop invariant x3+d3 == 0 ==> x3 == 0;\nloop invariant x1+d1 == 0 ==> d1 == 0;\nloop invariant x2+d2 == 0 ==> d2 == 0;\nloop invariant x3+d3 == 0 ==> d3 == 0;\nloop invariant x1 >= x1+d1 ==> x1 >= x1+d1;\nloop invariant x2 >= x2+d2 ==> x2 >= x2+d2;\nloop invariant x3 >= x3+d3 ==> x3 >= x3+d3;\nloop invariant x1 >= x1+d1 ==> x1 >= x1+d1;\nloop invariant x2 >= x2+d2 ==> x2 >= x2+d2;\nloop invariant x3 >= x3+d3 ==> x3 >= x3+d3;\nloop invariant x1+d1 == 0 ==> x1 == 0;\nloop invariant x2+d2 == 0 ==> x2 == 0;\nloop invariant x3+d3 == 0 ==> x3 == 0;\nloop invariant x1+d1 == 0 ==> d1 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  int v1,v2,v3;\n  \n  /*@\nloop invariant i1: 0 <= x1 <= x1 + d1;\nloop invariant i2: 0 <= x2 <= x2 + d2;\nloop invariant i3: 0 <= x3 <= x3 + d3;\nloop invariant i4: (x1+d1)*d1 == 0 ==> d1 == 0;\nloop invariant i5: (x2+d2)*d2 == 0 ==> d2 == 0;\nloop invariant i6: (x3+d3)*d3 == 0 ==> d3 == 0;\n\n\n\n\n\n\n\n\nloop invariant i15: x1 >= x1+d1 ==> x1 >= (x1+d1);\nloop invariant i16: x2 >= x2+d2 ==> x2 >= (x2+d2);\nloop invariant i17: x3 >= x3+d3 ==> x3 >= (x3+d3);\n\n\nloop invariant i20: !c1 ==> x1 >= x1;\nloop invariant i21: !c2 ==> x2 >= x2;\nloop invariant i22: x1+d1 == 0 ==> x1 == 0;\nloop invariant i23: x2+d2 == 0 ==> x2 == 0;\nloop invariant i24: x3+d3 == 0 ==> x3 == 0;\nloop invariant i25: x1+d1 == 0 ==> d1 == 0;\nloop invariant i26: x2+d2 == 0 ==> d2 == 0;\nloop invariant i27: x3+d3 == 0 ==> d3 == 0;\nloop invariant i28: x1 >= x1+d1 ==> x1 >= x1+d1;\nloop invariant i29: x2 >= x2+d2 ==> x2 >= x2+d2;\nloop invariant i30: x3 >= x3+d3 ==> x3 >= x3+d3;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 20,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= x1;\nloop invariant 0 <= x2 <= x2;\nloop invariant 0 <= x3 <= x3;\nloop invariant 0 <= d1 <= d1;\nloop invariant 0 <= d2 <= d2;\nloop invariant 0 <= d3 <= d3;\nloop invariant c1 in {0, 1};\nloop invariant c2 in {0, 1};\nloop invariant v1 in {0, 1};\nloop invariant v2 in {0, 1};\nloop invariant v3 in {0, 1};\nloop invariant x1 == x1 ==> 0 <= x1 <= x1;\nloop invariant x2 == x2 ==> 0 <= x2 <= x2;\nloop invariant x3 == x3 ==> 0 <= x3 <= x3;\nloop invariant d1 == d1 ==> 0 <= d1 <= d1;\nloop invariant d2 == d2 ==> 0 <= d2 <= d2;\nloop invariant d3 == d3 ==> 0 <= d3 <= d3;\nloop invariant c1 == c1 ==> c1 in {0, 1};\nloop invariant c2 == c2 ==> c2 in {0, 1};\nloop invariant v1 == v1 ==> v1 in {0, 1};\nloop invariant v2 == v2 ==> v2 in {0, 1};\nloop invariant v3 == v3 ==> v3 in {0, 1};\nloop invariant x1 == x1 ==> 0 <= x1 <= x1 ==> 0 <= x1 <= x1;\nloop invariant x2 == x2 ==> 0 <= x2 <= x2 ==> 0 <= x2 <= x2;\nloop invariant x3 == x3 ==> 0 <= x3 <= x3 ==> 0 <= x3 <= x3;\nloop invariant d1 == d1 ==> 0 <= d1 <= d1 ==> 0 <= d1 <= d1;\nloop invariant d2 == d2 ==> 0 <= d2 <= d2 ==> 0 <= d2 <= d2;\nloop invariant d3 == d3 ==> 0 <= d3 <= d3 ==> 0 <= d3 <= d3;\nloop invariant c1 == c1 ==> c1 in {0, 1} ==> c1 in {0, 1};\nloop invariant c2 == c2 ==> c2 in {0, 1} ==> c2 in {0, 1};\nloop invariant v1 == v1 ==> v1 in {0, 1} ==> v1 in {0, 1};\nloop invariant v2 == v2 ==> v2 in {0, 1} ==> v2 in {0, 1};\nloop invariant v3 == v3 ==> v3 in {0, 1} ==> v3 in {0, 1};\nloop invariant x1 == x1 ==> 0 <= x1 <= x1 ==> 0 <= x1 <= x1 ==> 0 <= x1 <= x1;\nloop invariant x2 == x2 ==> 0 <= x2 <= x2 ==> 0 <= x2 <= x2 ==> 0 <= x2 <= x2;\nloop invariant x3 == x3 ==> 0 <= x3 <= x3 ==> 0 <= x3 <= x3 ==> 0 <= x3 <= x3;\nloop invariant d1 == d1 ==> 0 <= d1 <= d1 ==> 0 <= d1 <= d1 ==> 0 <= d1 <= d1;\nloop invariant d2 == d2 ==> 0 <= d2 <= d2 ==> 0 <= d2 <= d2 ==> 0 <= d2 <= d2;\nloop invariant d3 == d3 ==> 0 <= d3 <= d3 ==> 0 <= d3 <= d3 ==> 0 <= d3 <= d3;\nloop invariant c1 == c1 ==> c1 in {0, 1} ==> c1 in {0, 1} ==> c1 in {0, 1};\nloop invariant c2 == c2 ==> c2 in {0, 1} ==> c2 in {0, 1} ==> c2 in {0, 1};\nloop invariant v1 == v1 ==> v1 in {0, 1} ==> v1 in {0, 1} ==> v1 in {0, 1};\nloop invariant v2 == v2 ==> v2 in {0, 1} ==> v2 in {0, 1} ==> v2 in {0, 1};\nloop invariant v3 == v3 ==> v3 in {0, 1} ==> v3 in {0, 1} ==> v3 in {0, 1};\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  int v1,v2,v3;\n  \n  /*@\nloop invariant i1: 0 <= x1 <= x1;\nloop invariant i2: 0 <= x2 <= x2;\nloop invariant i3: 0 <= x3 <= x3;\nloop invariant i4: 0 <= d1 <= d1;\nloop invariant i5: 0 <= d2 <= d2;\nloop invariant i6: 0 <= d3 <= d3;\n\n\n\n\n\nloop invariant i12: x1 == x1 ==> 0 <= x1 <= x1;\nloop invariant i13: x2 == x2 ==> 0 <= x2 <= x2;\nloop invariant i14: x3 == x3 ==> 0 <= x3 <= x3;\nloop invariant i15: d1 == d1 ==> 0 <= d1 <= d1;\nloop invariant i16: d2 == d2 ==> 0 <= d2 <= d2;\nloop invariant i17: d3 == d3 ==> 0 <= d3 <= d3;\n\n\n\n\n\nloop invariant i23: x1 == x1 ==> 0 <= x1 <= x1 ==> 0 <= x1 <= x1;\nloop invariant i24: x2 == x2 ==> 0 <= x2 <= x2 ==> 0 <= x2 <= x2;\nloop invariant i25: x3 == x3 ==> 0 <= x3 <= x3 ==> 0 <= x3 <= x3;\nloop invariant i26: d1 == d1 ==> 0 <= d1 <= d1 ==> 0 <= d1 <= d1;\nloop invariant i27: d2 == d2 ==> 0 <= d2 <= d2 ==> 0 <= d2 <= d2;\nloop invariant i28: d3 == d3 ==> 0 <= d3 <= d3 ==> 0 <= d3 <= d3;\n\n\n\n\n\nloop invariant i34: x1 == x1 ==> 0 <= x1 <= x1 ==> 0 <= x1 <= x1 ==> 0 <= x1 <= x1;\nloop invariant i35: x2 == x2 ==> 0 <= x2 <= x2 ==> 0 <= x2 <= x2 ==> 0 <= x2 <= x2;\nloop invariant i36: x3 == x3 ==> 0 <= x3 <= x3 ==> 0 <= x3 <= x3 ==> 0 <= x3 <= x3;\nloop invariant i37: d1 == d1 ==> 0 <= d1 <= d1 ==> 0 <= d1 <= d1 ==> 0 <= d1 <= d1;\nloop invariant i38: d2 == d2 ==> 0 <= d2 <= d2 ==> 0 <= d2 <= d2 ==> 0 <= d2 <= d2;\nloop invariant i39: d3 == d3 ==> 0 <= d3 <= d3 ==> 0 <= d3 <= d3 ==> 0 <= d3 <= d3;\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant x1 >= 1 ==> x1 >= 0;\nloop invariant x2 >= 1 ==> x2 >= 0;\nloop invariant x3 >= 1 ==> x3 >= 0;\nloop invariant x1 <= 0 ==> x1 == 0;\nloop invariant x2 <= 0 ==> x2 == 0;\nloop invariant x3 <= 0 ==> x3 == 0;\nloop invariant d1 >= 1 ==> d1 >= 1;\nloop invariant d2 >= 1 ==> d2 >= 1;\nloop invariant d3 >= 1 ==> d3 >= 1;\nloop invariant c1 ==> c1 == 1;\nloop invariant !c1 ==> c1 == 0;\nloop invariant c2 ==> c2 == 1;\nloop invariant !c2 ==> c2 == 0;\nloop invariant (c1 ==> x1 >= 0) ==> (c1 ==> x1 >= d1);\nloop invariant (c2 ==> x2 >= 0) ==> (c2 ==> x2 >= d2);\nloop invariant (!c1 && !c2 ==> x3 >= 0) ==> (!c1 && !c2 ==> x3 >= d3);\nloop invariant (c1 ==> x1 == 0) ==> (c1 ==> x1 == d1);\nloop invariant (c2 ==> x2 == 0) ==> (c2 ==> x2 == d2);\nloop invariant (!c1 && !c2 ==> x3 == 0) ==> (!c1 && !c2 ==> x3 == d3);\nloop invariant (c1 ==> x1 >= 1 ==> x1 >= 0) ==> (c1 ==> x1 >= 1 ==> x1 >= d1);\nloop invariant (c2 ==> x2 >= 1 ==> x2 >= 0) ==> (c2 ==> x2 >= 1 ==> x2 >= d2);\nloop invariant (!c1 && !c2 ==> x3 >= 1 ==> x3 >= 0) ==> (!c1 && !c2 ==> x3 >= 1 ==> x3 >= d3);\nloop invariant (c1 ==> x1 <= 0 ==> x1 == 0) ==> (c1 ==> x1 <= 0 ==> x1 == d1);\nloop invariant (c2 ==> x2 <= 0 ==> x2 == 0) ==> (c2 ==> x2 <= 0 ==> x2 == d2);\nloop invariant (!c1 && !c2 ==> x3 <= 0 ==> x3 == 0) ==> (!c1 && !c2 ==> x3 <= 0 ==> x3 == d3);\nloop invariant (c1 ==> x1 >= 0 ==> x1 >= 1 ==> x1 >= 0) ==> (c1 ==> x1 >= 0 ==> x1 >= 1 ==> x1 >= d1);\nloop invariant (c2 ==> x2 >= 0 ==> x2 >= 1 ==> x2 >= 0) ==> (c2 ==> x2 >= 0 ==> x2 >= 1 ==> x2 >= d2);\nloop invariant (!c1 && !c2 ==> x3 >= 0 ==> x3 >= 1 ==> x3 >= 0) ==> (!c1 && !c2 ==> x3 >= 0 ==> x3 >= 1 ==> x3 >= d3);\nloop invariant (c1 ==> x1 <= 0 ==> x1 == 0) ==> (c1 ==> x1 <= 0 ==> x1 == d1);\nloop invariant (c2 ==> x2 <= 0 ==> x2 == 0) ==> (c2 ==> x2 <= 0 ==> x2 == d2);\nloop invariant (!c1 && !c2 ==> x3 <= 0 ==> x3 == 0) ==> (!c1 && !c2 ==> x3 <= 0 ==> x3 == d3);\nloop invariant v1 == v2 ==> v1 == v3;\nloop invariant v1 == v3 ==> v1 == v2;\nloop invariant v2 == v3 ==> v2 == v1;\nloop invariant v1 != v2 ==> v1 != v3;\nloop invariant v1 != v3 ==> v1 != v2;\nloop invariant v2 != v3 ==> v2 != v1;\nloop invariant v1 == v2 ==> v1 == v3 ==> v1 == v2;\nloop invariant v1 == v3 ==> v1 == v2 ==> v1 == v3;\nloop invariant v2 == v3 ==> v2 == v1 ==> v2 == v3;\nloop invariant v1 != v2 ==> v1 != v3 ==> v1 != v2;\nloop invariant v1 != v3 ==> v1 != v2 ==> v1 != v3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  int v1,v2,v3;\n  \n  /*@\nloop invariant i1: x1 >= 1 ==> x1 >= 0;\nloop invariant i2: x2 >= 1 ==> x2 >= 0;\nloop invariant i3: x3 >= 1 ==> x3 >= 0;\nloop invariant i4: x1 <= 0 ==> x1 == 0;\nloop invariant i5: x2 <= 0 ==> x2 == 0;\nloop invariant i6: x3 <= 0 ==> x3 == 0;\nloop invariant i7: d1 >= 1 ==> d1 >= 1;\nloop invariant i8: d2 >= 1 ==> d2 >= 1;\nloop invariant i9: d3 >= 1 ==> d3 >= 1;\nloop invariant i10: c1 ==> c1 == 1;\nloop invariant i11: !c1 ==> c1 == 0;\nloop invariant i12: c2 ==> c2 == 1;\nloop invariant i13: !c2 ==> c2 == 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i35: v1 == v2 ==> v1 == v3 ==> v1 == v2;\nloop invariant i36: v1 == v3 ==> v1 == v2 ==> v1 == v3;\nloop invariant i37: v2 == v3 ==> v2 == v1 ==> v2 == v3;\nloop invariant i38: v1 != v2 ==> v1 != v3 ==> v1 != v2;\nloop invariant i39: v1 != v3 ==> v1 != v2 ==> v1 != v3;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= 2147483647;\nloop invariant d1 <= x1;\nloop invariant 0 <= x2 <= 2147483647;\nloop invariant d2 <= x2;\nloop invariant 0 <= x3 <= 2147483647;\nloop invariant d3 <= x3;\nloop invariant c1 && c2 ==> x1 == 0;\nloop invariant !c1 && !c2 ==> x2 == 0;\nloop invariant !c1 && !c2 ==> x3 == 0;\nloop invariant d1 == 1;\nloop invariant d2 == 1;\nloop invariant d3 == 1;\nloop invariant c1 && c2 ==> x1 == 0;\nloop invariant !c1 && !c2 ==> x2 == 0;\nloop invariant !c1 && !c2 ==> x3 == 0;\nloop invariant c1 && c2 ==> d1 <= x1;\nloop invariant !c1 && !c2 ==> d2 <= x2;\nloop invariant !c1 && !c2 ==> d3 <= x3;\nloop invariant c1 && c2 ==> d1 == 1;\nloop invariant !c1 && !c2 ==> d2 == 1;\nloop invariant !c1 && !c2 ==> d3 == 1;\nloop invariant c1 && c2 ==> x1 == 0;\nloop invariant !c1 && !c2 ==> x2 == 0;\nloop invariant !c1 && !c2 ==> x3 == 0;\nloop invariant c1 && c2 ==> d1 == 1;\nloop invariant !c1 && !c2 ==> d2 == 1;\nloop invariant !c1 && !c2 ==> d3 == 1;\nloop invariant c1 && c2 ==> x1 == 0;\nloop invariant !c1 && !c2 ==> x2 == 0;\nloop invariant !c1 && !c2 ==> x3 == 0;\nloop invariant c1 && c2 ==> d1 == 1;\nloop invariant !c1 && !c2 ==> d2 == 1;\nloop invariant !c1 && !c2 ==> d3 == 1;\nloop invariant c1 && c2 ==> x1 == 0;\nloop invariant !c1 && !c2 ==> x2 == 0;\nloop invariant !c1 && !c2 ==> x3 == 0;\nloop invariant c1 && c2 ==> d1 == 1;\nloop invariant !c1 && !c2 ==> d2 == 1;\nloop invariant !c1 && !c2 ==> d3 == 1;\nloop invariant c1 && c2 ==> x1 == 0;\nloop invariant !c1 && !c2 ==> x2 == 0;\nloop invariant !c1 && !c2 ==> x3 == 0;\nloop invariant c1 && c2 ==> d1 == 1;\nloop invariant !c1 && !c2 ==> d2 == 1;\nloop invariant !c1 && !c2 ==> d3 == 1;\nloop invariant c1 && c2 ==> x1 == 0;\nloop invariant !c1 && !c2 ==> x2 == 0;\nloop invariant !c1 && !c2 ==> x3 == 0;\nloop invariant c1 && c2 ==> d1 == 1;\nloop invariant !c1 && !c2 ==> d2 == 1;\nloop invariant !c1 && !c2 ==> d3 == 1;\nloop invariant c1 && c2 ==> x1 == 0;\nloop invariant !c1 && !c2 ==> x2 == 0;\nloop invariant !c1 && !c2 ==> x3 == 0;\nloop invariant c1 && c2 ==> d1 == 1;\nloop invariant !c1 && !c2 ==> d2 == 1;\nloop invariant !c1 && !c2 ==> d3 == 1;\nloop invariant c1 && c2 ==> x1 == 0;\nloop invariant !c1 && !c2 ==> x2 == 0;\nloop invariant !c1 && !c2 ==> x3 == 0;\nloop invariant c1 && c2 ==> d1 == 1;\nloop invariant !c1 && !c2 ==> d2 == 1;\nloop invariant !c1 && !c2 ==> d3 == 1;\nloop invariant c1 && c2 ==> x1 == 0;\nloop invariant !c1 && !c2 ==> x2 == 0;\nloop invariant !c1 && !c2 ==> x3 == 0;\nloop invariant c1 && c2 ==> d1 == 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  int v1,v2,v3;\n  \n  /*@\n\n\n\n\n\n\n\n\n\nloop invariant i10: d1 == 1;\nloop invariant i11: d2 == 1;\nloop invariant i12: d3 == 1;\n\n\n\nloop invariant i16: c1 && c2 ==> d1 == 1;\nloop invariant i17: !c1 && !c2 ==> d2 == 1;\nloop invariant i18: !c1 && !c2 ==> d3 == 1;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 15,
                "annotations": "```\n/*@\nloop invariant 1 <= x1 <= unknown_uint();\nloop invariant 1 <= x2 <= unknown_uint();\nloop invariant 1 <= x3 <= unknown_uint();\nloop invariant (x1 >= 0) ==> (x1 <= unknown_uint());\nloop invariant (x2 >= 0) ==> (x2 <= unknown_uint());\nloop invariant (x3 >= 0) ==> (x3 <= unknown_uint());\nloop invariant (x1 >= 0) ==> (x1 == x1-d1 * d1);\nloop invariant (x2 >= 0) ==> (x2 == x2-d2 * d2);\nloop invariant (x3 >= 0) ==> (x3 == x3-d3 * d3);\nloop invariant (x1 == 0) ==> (x1 > 0);\nloop invariant (x2 == 0) ==> (x2 > 0);\nloop invariant (x3 == 0) ==> (x3 > 0);\nloop invariant (c1 == unknown_bool()) ==> (c1 == unknown_bool());\nloop invariant (c2 == unknown_bool()) ==> (c2 == unknown_bool());\nloop invariant (v1 == unknown_int()) ==> (v1 == unknown_int());\nloop invariant (v2 == unknown_int()) ==> (v2 == unknown_int());\nloop invariant (v3 == unknown_int()) ==> (v3 == unknown_int());\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  int v1,v2,v3;\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 > 0;\nloop invariant d2 > 0;\nloop invariant d3 > 0;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x1 == (x1 - d1) ==> c1;\nloop invariant x2 == (x2 - d2) ==> c2;\nloop invariant x3 == (x3 - d3) ==> !c1 && !c2;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  int v1,v2,v3;\n  \n  /*@\nloop invariant i1: x1 >= 0;\nloop invariant i2: x2 >= 0;\nloop invariant i3: x3 >= 0;\nloop invariant i4: d1 > 0;\nloop invariant i5: d2 > 0;\nloop invariant i6: d3 > 0;\n\n\n\n\n\nloop invariant i12: x1 == (x1 - d1) ==> c1;\nloop invariant i13: x2 == (x2 - d2) ==> c2;\nloop invariant i14: x3 == (x3 - d3) ==> !c1 && !c2;\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= 2147483647;\nloop invariant 0 <= x2 <= 2147483647;\nloop invariant 0 <= x3 <= 2147483647;\nloop invariant 0 <= d1 <= 2147483647;\nloop invariant 0 <= d2 <= 2147483647;\nloop invariant 0 <= d3 <= 2147483647;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x2 >= x1 && x2 >= x3);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x3 >= x1 && x3 >= x2);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  int v1,v2,v3;\n  \n  /*@\n\n\n\nloop invariant i4: 0 <= d1 <= 2147483647;\nloop invariant i5: 0 <= d2 <= 2147483647;\nloop invariant i6: 0 <= d3 <= 2147483647;\nloop invariant i7: c1 == 0 || c1 == 1;\nloop invariant i8: c2 == 0 || c2 == 1;\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= 2147483647;\nloop invariant 0 <= x2 <= 2147483647;\nloop invariant 0 <= x3 <= 2147483647;\nloop invariant 0 <= d1 <= 2147483647;\nloop invariant 0 <= d2 <= 2147483647;\nloop invariant 0 <= d3 <= 2147483647;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant v1 >= -2147483648;\nloop invariant v1 <= 2147483647;\nloop invariant v2 >= -2147483648;\nloop invariant v2 <= 2147483647;\nloop invariant v3 >= -2147483648;\nloop invariant v3 <= 2147483647;\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 || x2 >= d2 || x3 >= d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (c1 || c2);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (v1 == x1 || v1 == x2 || v1 == x3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (v2 == x1 || v2 == x2 || v2 == x3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (v3 == x1 || v3 == x2 || v3 == x3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (c1 || c2 || (v1 == x1 && v2 == x2 && v3 == x3));\nloop invariant (x1 <= 0 || x2 <= 0 || x3 <= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 <= 0 || x2 <= 0 || x3 <= 0) ==> (d1 == 0 && d2 == 0 && d3 == 0);\nloop invariant (x1 <= 0 || x2 <= 0 || x3 <= 0) ==> (c1 == 0 && c2 == 0);\nloop invariant (x1 <= 0 || x2 <= 0 || x3 <= 0) ==> (v1 == 0 && v2 == 0 && v3 == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  int v1,v2,v3;\n  \n  /*@\n\n\n\nloop invariant i4: 0 <= d1 <= 2147483647;\nloop invariant i5: 0 <= d2 <= 2147483647;\nloop invariant i6: 0 <= d3 <= 2147483647;\nloop invariant i7: c1 == 0 || c1 == 1;\nloop invariant i8: c2 == 0 || c2 == 1;\nloop invariant i9: v1 >= -2147483648;\nloop invariant i10: v1 <= 2147483647;\nloop invariant i11: v2 >= -2147483648;\nloop invariant i12: v2 <= 2147483647;\nloop invariant i13: v3 >= -2147483648;\nloop invariant i14: v3 <= 2147483647;\n\n\n\n\n\n\nloop invariant i21: (x1 <= 0 || x2 <= 0 || x3 <= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 33: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  int v1,v2,v3;\n  \n  /*@\nloop invariant i1: x1 >= d1;\nloop invariant i2: x2 >= d2;\nloop invariant i3: x3 >= d3;\nloop invariant i4: x1 >= 0;\nloop invariant i5: x2 >= 0;\nloop invariant i6: x3 >= 0;\nloop invariant i7: c1 ==> x1 >= d1;\nloop invariant i8: c2 ==> x2 >= d2;\nloop invariant i9: !c1 && !c2 ==> x3 >= d3;\nloop invariant i10: x1 <= x1 + d1;\nloop invariant i11: x2 <= x2 + d2;\nloop invariant i12: x3 <= x3 + d3;\nloop invariant i13: 0 <= x1 <= unknown_uint();\nloop invariant i14: 0 <= x2 <= unknown_uint();\nloop invariant i15: 0 <= x3 <= unknown_uint();\nloop invariant i16: 0 <= d1 <= unknown_uint();\nloop invariant i17: 0 <= d2 <= unknown_uint();\nloop invariant i18: 0 <= d3 <= unknown_uint();\nloop invariant i19: c1 == unknown_bool();\nloop invariant i20: c2 == unknown_bool();\nloop invariant i21: v1 == unknown_int();\nloop invariant i22: v2 == unknown_int();\nloop invariant i23: v3 == unknown_int();\nloop invariant i24: x1 >= 0 && x1 <= unknown_uint() ==> x1 != 0;\nloop invariant i25: x2 >= 0 && x2 <= unknown_uint() ==> x2 != 0;\nloop invariant i26: x3 >= 0 && x3 <= unknown_uint() ==> x3 != 0;\nloop invariant i27: d1 >= 0 && d1 <= unknown_uint();\nloop invariant i28: d2 >= 0 && d2 <= unknown_uint();\nloop invariant i29: d3 >= 0 && d3 <= unknown_uint();\nloop invariant i30: x1 != 0 ==> x1 >= x2;\nloop invariant i31: x1 != 0 ==> x1 >= x3;\nloop invariant i32: x2 != 0 ==> x2 >= x1;\nloop invariant i33: x2 != 0 ==> x2 >= x3;\nloop invariant i34: x3 != 0 ==> x3 >= x1;\nloop invariant i35: x3 != 0 ==> x3 >= x2;\nloop invariant i36: x1 >= 0 && x1 <= unknown_uint() ==> x1 == 0 || x1 >= d1;\nloop invariant i37: x2 >= 0 && x2 <= unknown_uint() ==> x2 == 0 || x2 >= d2;\nloop invariant i38: x3 >= 0 && x3 <= unknown_uint() ==> x3 == 0 || x3 >= d3;\nloop invariant i39: x1 >= 0 && x1 <= unknown_uint() && x1 != 0 ==> x1 >= d1;\nloop invariant i40: x2 >= 0 && x2 <= unknown_uint() && x2 != 0 ==> x2 >= d2;\nloop invariant i41: x3 >= 0 && x3 <= unknown_uint() && x3 != 0 ==> x3 >= d3;\nloop invariant i42: x1 >= 0 && x1 <= unknown_uint() && x1 != 0 ==> x1 - d1 >= 0;\nloop invariant i43: x2 >= 0 && x2 <= unknown_uint() && x2 != 0 ==> x2 - d2 >= 0;\nloop invariant i44: x3 >= 0 && x3 <= unknown_uint() && x3 != 0 ==> x3 - d3 >= 0;\nloop invariant i45: x1 >= 0 && x1 <= unknown_uint() && x1 != 0 ==> x1 - d1 <= unknown_uint();\nloop invariant i46: x2 >= 0 && x2 <= unknown_uint() && x2 != 0 ==> x2 - d2 <= unknown_uint();\nloop invariant i47: x3 >= 0 && x3 <= unknown_uint() && x3 != 0 ==> x3 - d3 <= unknown_uint();\nloop invariant i48: x1 >= 0 && x1 <= unknown_uint() && x1 != 0 ==> x1 - d1 >= 0 && x1 - d1 <= unknown_uint();\nloop invariant i49: x2 >= 0 && x2 <= unknown_uint() && x2 != 0 ==> x2 - d2 >= 0 && x2 - d2 <= unknown_uint();\nloop invariant i50: x3 >= 0 && x3 <= unknown_uint() && x3 != 0 ==> x3 - d3 >= 0 && x3 - d3 <= unknown_uint();\nloop invariant i51: x1 >= 0 && x1 <= unknown_uint() && x1 != 0 ==> x1 - d1 >= 0 && x1 - d1 <= unknown_uint() ==> x1 >= d1;\nloop invariant i52: x2 >= 0 && x2 <= unknown_uint() && x2 != 0 ==> x2 - d2 >= 0 && x2 - d2 <= unknown_uint() ==> x2 >= d2;\nloop invariant i53: x3 >= 0 && x3 <= unknown_uint() && x3 != 0 ==> x3 - d3 >= 0 && x3 - d3 <= unknown_uint() ==> x3 >= d3;\nloop invariant i54: x1 >= 0 && x1 <= unknown_uint() && x1 != 0 ==> x1 >= d1 && x1 <= unknown_uint() ==> x1 - d1 >= 0 && x1 - d1 <= unknown_uint();\nloop invariant i55: x1 <= x2;\nloop invariant i56: x2 <= x3;\nloop invariant i57: d1 >= 1;\nloop invariant i58: d2 >= 1;\nloop invariant i59: d3 >= 1;\nloop invariant i60: c1 == 1 || c2 == 1;\nloop invariant i61: x1 >= d1 * c1;\nloop invariant i62: x2 >= d2 * c2;\nloop invariant i63: x3 >= d3 * (1 - c1 - c2);\nloop invariant i64: if (x1 > 0) x1 >= d1;\nloop invariant i65: if (x2 > 0) x2 >= d2;\nloop invariant i66: if (x3 > 0) x3 >= d3;\nloop invariant i67: if (x1 > 0) x1 >= d1 * c1;\nloop invariant i68: if (x2 > 0) x2 >= d2 * c2;\nloop invariant i69: if (x3 > 0) x3 >= d3 * (1 - c1 - c2);\nloop invariant i70: if (x1 > 0) x1 <= x2;\nloop invariant i71: if (x2 > 0) x2 <= x3;\nloop invariant i72: if (x1 > 0 && x2 > 0) x2 <= x3;\nloop invariant i73: if (x1 > 0 && x3 > 0) x3 >= x2;\nloop invariant i74: if (x2 > 0 && x3 > 0) x3 >= x1;\nloop invariant i75: if (x1 > 0 && x2 > 0 && x3 > 0) x3 >= x2;\nloop invariant i76: if (x1 > 0 && x2 > 0 && x3 > 0) x2 >= x1;\nloop invariant i77: x1 <= x3;\nloop invariant i78: (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i79: (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant i80: (x1 <= x2 + (x2 - d2) * d2 / d1);\nloop invariant i81: (x1 <= x3 + (x3 - d3) * d3 / d1);\nloop invariant i82: (x2 <= x3 + (x3 - d3) * d3 / d2);\nloop invariant i83: (x2 >= x1 - (d1 - d2) * x1 / d1);\nloop invariant i84: (x3 >= x1 - (d1 - d3) * x1 / d1);\nloop invariant i85: (x3 >= x2 - (d2 - d3) * x2 / d2);\nloop invariant i86: (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant i87: 0 <= x1 <= x1' && 0 <= x2 <= x2' && 0 <= x3 <= x3';\nloop invariant i88: (x1' - x1) + (x2' - x2) + (x3' - x3) = d1 + d2 + d3;\nloop invariant i89: x1' = x1 + (c1 ? -d1 : 0);\nloop invariant i90: x2' = x2 + (c2 ? -d2 : 0);\nloop invariant i91: x3' = x3 + (-d3);\nloop invariant i92: c1 == (x1 > 0) && c2 == (x2 > 0);\nloop invariant i93: v1 = unknown_int() && v2 = unknown_int() && v3 = unknown_int();\nloop invariant i94: x1 == x1' && x2 == x2' && x3 == x3';\nloop invariant i95: x1' = x1 && x2' = x2 && x3' = x3;\nloop invariant i96: (x1' == 0 || x2' == 0 || x3' == 0);\nloop invariant i97: unknown_int() >= 0;\nloop invariant i98: (x1 == 0) ==> (unknown_uint() == unknown_uint());\nloop invariant i99: (x2 == 0) ==> (unknown_uint() == unknown_uint());\nloop invariant i100: (x3 == 0) ==> (unknown_uint() == unknown_uint());\nloop invariant i101: (c1 ==> 0 <= x1 <= unknown_uint()) && (c1 ==> d1 >= 1) && (c1 ==> x1 >= d1) && (c1 ==> x1 >= x1 - d1) && (c1 ==> unknown_uint() <= x1) && (c1 ==> unknown_uint() >= x1 - d1);\nloop invariant i102: (c2 ==> 0 <= x2 <= unknown_uint()) && (c2 ==> d2 >= 1) && (c2 ==> x2 >= d2) && (c2 ==> x2 >= x2 - d2) && (c2 ==> unknown_uint() <= x2) && (c2 ==> unknown_uint() >= x2 - d2);\nloop invariant i103: (!c1 && !c2 ==> 0 <= x3 <= unknown_uint()) && (!c1 && !c2 ==> d3 >= 1) && (!c1 && !c2 ==> x3 >= d3) && (!c1 && !c2 ==> x3 >= x3 - d3) && (!c1 && !c2 ==> unknown_uint() <= x3) && (!c1 && !c2 ==> unknown_uint() >= x3 - d3);\nloop invariant i104: (x1 == 0) ==> (unknown_uint() == unknown_uint()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int());\nloop invariant i105: (x2 == 0) ==> (unknown_uint() == unknown_uint()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int());\nloop invariant i106: (x3 == 0) ==> (unknown_uint() == unknown_uint()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int());\nloop invariant i107: (c1 ==> 0 <= x1 <= unknown_uint()) && (c1 ==> d1 >= 1) && (c1 ==> x1 >= d1) && (c1 ==> x1 >= x1 - d1) && (c1 ==> unknown_uint() <= x1) && (c1 ==> unknown_uint() >= x1 - d1) && (c1 ==> 0 <= unknown_int()) && (c1 ==> 0 <= unknown_int()) && (c1 ==> 0 <= unknown_int());\nloop invariant i108: (c2 ==> 0 <= x2 <= unknown_uint()) && (c2 ==> d2 >= 1) && (c2 ==> x2 >= d2) && (c2 ==> x2 >= x2 - d2) && (c2 ==> unknown_uint() <= x2) && (c2 ==> unknown_uint() >= x2 - d2) && (c2 ==> 0 <= unknown_int()) && (c2 ==> 0 <= unknown_int()) && (c2 ==> 0 <= unknown_int());\nloop invariant i109: (!c1 && !c2 ==> 0 <= x3 <= unknown_uint()) && (!c1 && !c2 ==> d3 >= 1) && (!c1 && !c2 ==> x3 >= d3) && (!c1 && !c2 ==> x3 >= x3 - d3) && (!c1 && !c2 ==> unknown_uint() <= x3) && (!c1 && !c2 ==> unknown_uint() >= x3 - d3) && (!c1 && !c2 ==> 0 <= unknown_int()) && (!c1 && !c2 ==> 0 <= unknown_int()) && (!c1 && !c2 ==> 0 <= unknown_int());\nloop invariant i110: (x1 == 0) ==> (unknown_uint() == unknown_uint()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int());\nloop invariant i111: (x2 == 0) ==> (unknown_uint() == unknown_uint()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int());\nloop invariant i112: d1 > 0;\nloop invariant i113: d2 > 0;\nloop invariant i114: d3 > 0;\nloop invariant i115: c1 == 0 || c1 == 1;\nloop invariant i116: c2 == 0 || c2 == 1;\nloop invariant i117: v1 >= 0;\nloop invariant i118: v2 >= 0;\nloop invariant i119: v3 >= 0;\nloop invariant i120: c1 ==> x1 >= 0;\nloop invariant i121: c2 ==> x2 >= 0;\nloop invariant i122: !c1 && !c2 ==> x3 >= 0;\nloop invariant i123: c1 ==> x1 <= x1 + d1;\nloop invariant i124: c2 ==> x2 <= x2 + d2;\nloop invariant i125: !c1 && !c2 ==> x3 <= x3 + d3;\nloop invariant i126: x1 >= 0 ==> x1 <= x2;\nloop invariant i127: x1 >= 0 ==> x1 <= x3;\nloop invariant i128: x2 >= 0 ==> x2 <= x3;\nloop invariant i129: (x1 > 0 && x2 > 0 && x3 > 0) ==> (d1 > 0 && d2 > 0 && d3 > 0);\nloop invariant i130: x1 >= 0 ==> v1 >= 0;\nloop invariant i131: x2 >= 0 ==> v2 >= 0;\nloop invariant i132: x3 >= 0 ==> v3 >= 0;\nloop invariant i133: x1 >= 0 ==> c1 == 0;\nloop invariant i134: x2 >= 0 ==> c2 == 0;\nloop invariant i135: x3 >= 0 ==> c1 == 0 && c2 == 0;\nloop invariant i136: x1 >= 0 ==> v1 >= 0 && v2 >= 0 && v3 >= 0;\nloop invariant i137: x2 >= 0 ==> v1 >= 0 && v2 >= 0 && v3 >= 0;\nloop invariant i138: x3 >= 0 ==> v1 >= 0 && v2 >= 0 && v3 >= 0;\nloop invariant i139: x1 >= 0 ==> c1 == 0 && c2 == 0 && v1 >= 0 && v2 >= 0 && v3 >= 0;\nloop invariant i140: x2 >= 0 ==> c1 == 0 && c2 == 0 && v1 >= 0 && v2 >= 0 && v3 >= 0;\nloop invariant i141: 0 <= x1 <= x1 + d1;\nloop invariant i142: 0 <= x2 <= x2 + d2;\nloop invariant i143: 0 <= x3 <= x3 + d3;\nloop invariant i144: (x1+d1)*d1 == 0 ==> d1 == 0;\nloop invariant i145: (x2+d2)*d2 == 0 ==> d2 == 0;\nloop invariant i146: (x3+d3)*d3 == 0 ==> d3 == 0;\nloop invariant i147: x1 >= d1 ==> x1 >= x1 + d1;\nloop invariant i148: x2 >= d2 ==> x2 >= x2 + d2;\nloop invariant i149: x3 >= d3 ==> x3 >= x3 + d3;\nloop invariant i150: x1 >= x1+d1 ==> c1;\nloop invariant i151: x2 >= x2+d2 ==> c2;\nloop invariant i152: v1 == 0 ==> c1;\nloop invariant i153: v2 == 0 ==> c2;\nloop invariant i154: v3 == 0 ==> !(c1 || c2);\nloop invariant i155: x1 >= x1+d1 ==> x1 >= (x1+d1);\nloop invariant i156: x2 >= x2+d2 ==> x2 >= (x2+d2);\nloop invariant i157: x3 >= x3+d3 ==> x3 >= (x3+d3);\nloop invariant i158: c1 ==> x1 >= x1+d1;\nloop invariant i159: c2 ==> x2 >= x2+d2;\nloop invariant i160: !c1 ==> x1 >= x1;\nloop invariant i161: !c2 ==> x2 >= x2;\nloop invariant i162: x1+d1 == 0 ==> x1 == 0;\nloop invariant i163: x2+d2 == 0 ==> x2 == 0;\nloop invariant i164: x3+d3 == 0 ==> x3 == 0;\nloop invariant i165: x1+d1 == 0 ==> d1 == 0;\nloop invariant i166: x2+d2 == 0 ==> d2 == 0;\nloop invariant i167: x3+d3 == 0 ==> d3 == 0;\nloop invariant i168: x1 >= x1+d1 ==> x1 >= x1+d1;\nloop invariant i169: x2 >= x2+d2 ==> x2 >= x2+d2;\nloop invariant i170: x3 >= x3+d3 ==> x3 >= x3+d3;\nloop invariant i171: 0 <= x1 <= x1;\nloop invariant i172: 0 <= x2 <= x2;\nloop invariant i173: 0 <= x3 <= x3;\nloop invariant i174: 0 <= d1 <= d1;\nloop invariant i175: 0 <= d2 <= d2;\nloop invariant i176: 0 <= d3 <= d3;\nloop invariant i177: c1 in {0, 1};\nloop invariant i178: c2 in {0, 1};\nloop invariant i179: v1 in {0, 1};\nloop invariant i180: v2 in {0, 1};\nloop invariant i181: v3 in {0, 1};\nloop invariant i182: x1 == x1 ==> 0 <= x1 <= x1;\nloop invariant i183: x2 == x2 ==> 0 <= x2 <= x2;\nloop invariant i184: x3 == x3 ==> 0 <= x3 <= x3;\nloop invariant i185: d1 == d1 ==> 0 <= d1 <= d1;\nloop invariant i186: d2 == d2 ==> 0 <= d2 <= d2;\nloop invariant i187: d3 == d3 ==> 0 <= d3 <= d3;\nloop invariant i188: c1 == c1 ==> c1 in {0, 1};\nloop invariant i189: c2 == c2 ==> c2 in {0, 1};\nloop invariant i190: v1 == v1 ==> v1 in {0, 1};\nloop invariant i191: v2 == v2 ==> v2 in {0, 1};\nloop invariant i192: v3 == v3 ==> v3 in {0, 1};\nloop invariant i193: x1 == x1 ==> 0 <= x1 <= x1 ==> 0 <= x1 <= x1;\nloop invariant i194: x2 == x2 ==> 0 <= x2 <= x2 ==> 0 <= x2 <= x2;\nloop invariant i195: x3 == x3 ==> 0 <= x3 <= x3 ==> 0 <= x3 <= x3;\nloop invariant i196: d1 == d1 ==> 0 <= d1 <= d1 ==> 0 <= d1 <= d1;\nloop invariant i197: d2 == d2 ==> 0 <= d2 <= d2 ==> 0 <= d2 <= d2;\nloop invariant i198: d3 == d3 ==> 0 <= d3 <= d3 ==> 0 <= d3 <= d3;\nloop invariant i199: c1 == c1 ==> c1 in {0, 1} ==> c1 in {0, 1};\nloop invariant i200: c2 == c2 ==> c2 in {0, 1} ==> c2 in {0, 1};\nloop invariant i201: v1 == v1 ==> v1 in {0, 1} ==> v1 in {0, 1};\nloop invariant i202: v2 == v2 ==> v2 in {0, 1} ==> v2 in {0, 1};\nloop invariant i203: v3 == v3 ==> v3 in {0, 1} ==> v3 in {0, 1};\nloop invariant i204: x1 == x1 ==> 0 <= x1 <= x1 ==> 0 <= x1 <= x1 ==> 0 <= x1 <= x1;\nloop invariant i205: x2 == x2 ==> 0 <= x2 <= x2 ==> 0 <= x2 <= x2 ==> 0 <= x2 <= x2;\nloop invariant i206: x3 == x3 ==> 0 <= x3 <= x3 ==> 0 <= x3 <= x3 ==> 0 <= x3 <= x3;\nloop invariant i207: d1 == d1 ==> 0 <= d1 <= d1 ==> 0 <= d1 <= d1 ==> 0 <= d1 <= d1;\nloop invariant i208: d2 == d2 ==> 0 <= d2 <= d2 ==> 0 <= d2 <= d2 ==> 0 <= d2 <= d2;\nloop invariant i209: d3 == d3 ==> 0 <= d3 <= d3 ==> 0 <= d3 <= d3 ==> 0 <= d3 <= d3;\nloop invariant i210: c1 == c1 ==> c1 in {0, 1} ==> c1 in {0, 1} ==> c1 in {0, 1};\nloop invariant i211: c2 == c2 ==> c2 in {0, 1} ==> c2 in {0, 1} ==> c2 in {0, 1};\nloop invariant i212: v1 == v1 ==> v1 in {0, 1} ==> v1 in {0, 1} ==> v1 in {0, 1};\nloop invariant i213: v2 == v2 ==> v2 in {0, 1} ==> v2 in {0, 1} ==> v2 in {0, 1};\nloop invariant i214: v3 == v3 ==> v3 in {0, 1} ==> v3 in {0, 1} ==> v3 in {0, 1};\nloop invariant i215: x1 >= 1 ==> x1 >= 0;\nloop invariant i216: x2 >= 1 ==> x2 >= 0;\nloop invariant i217: x3 >= 1 ==> x3 >= 0;\nloop invariant i218: x1 <= 0 ==> x1 == 0;\nloop invariant i219: x2 <= 0 ==> x2 == 0;\nloop invariant i220: x3 <= 0 ==> x3 == 0;\nloop invariant i221: d1 >= 1 ==> d1 >= 1;\nloop invariant i222: d2 >= 1 ==> d2 >= 1;\nloop invariant i223: d3 >= 1 ==> d3 >= 1;\nloop invariant i224: c1 ==> c1 == 1;\nloop invariant i225: !c1 ==> c1 == 0;\nloop invariant i226: c2 ==> c2 == 1;\nloop invariant i227: !c2 ==> c2 == 0;\nloop invariant i228: (c1 ==> x1 >= 0) ==> (c1 ==> x1 >= d1);\nloop invariant i229: (c2 ==> x2 >= 0) ==> (c2 ==> x2 >= d2);\nloop invariant i230: (!c1 && !c2 ==> x3 >= 0) ==> (!c1 && !c2 ==> x3 >= d3);\nloop invariant i231: (c1 ==> x1 == 0) ==> (c1 ==> x1 == d1);\nloop invariant i232: (c2 ==> x2 == 0) ==> (c2 ==> x2 == d2);\nloop invariant i233: (!c1 && !c2 ==> x3 == 0) ==> (!c1 && !c2 ==> x3 == d3);\nloop invariant i234: (c1 ==> x1 >= 1 ==> x1 >= 0) ==> (c1 ==> x1 >= 1 ==> x1 >= d1);\nloop invariant i235: (c2 ==> x2 >= 1 ==> x2 >= 0) ==> (c2 ==> x2 >= 1 ==> x2 >= d2);\nloop invariant i236: (!c1 && !c2 ==> x3 >= 1 ==> x3 >= 0) ==> (!c1 && !c2 ==> x3 >= 1 ==> x3 >= d3);\nloop invariant i237: (c1 ==> x1 <= 0 ==> x1 == 0) ==> (c1 ==> x1 <= 0 ==> x1 == d1);\nloop invariant i238: (c2 ==> x2 <= 0 ==> x2 == 0) ==> (c2 ==> x2 <= 0 ==> x2 == d2);\nloop invariant i239: (!c1 && !c2 ==> x3 <= 0 ==> x3 == 0) ==> (!c1 && !c2 ==> x3 <= 0 ==> x3 == d3);\nloop invariant i240: (c1 ==> x1 >= 0 ==> x1 >= 1 ==> x1 >= 0) ==> (c1 ==> x1 >= 0 ==> x1 >= 1 ==> x1 >= d1);\nloop invariant i241: (c2 ==> x2 >= 0 ==> x2 >= 1 ==> x2 >= 0) ==> (c2 ==> x2 >= 0 ==> x2 >= 1 ==> x2 >= d2);\nloop invariant i242: (!c1 && !c2 ==> x3 >= 0 ==> x3 >= 1 ==> x3 >= 0) ==> (!c1 && !c2 ==> x3 >= 0 ==> x3 >= 1 ==> x3 >= d3);\nloop invariant i243: v1 == v2 ==> v1 == v3;\nloop invariant i244: v1 == v3 ==> v1 == v2;\nloop invariant i245: v2 == v3 ==> v2 == v1;\nloop invariant i246: v1 != v2 ==> v1 != v3;\nloop invariant i247: v1 != v3 ==> v1 != v2;\nloop invariant i248: v2 != v3 ==> v2 != v1;\nloop invariant i249: v1 == v2 ==> v1 == v3 ==> v1 == v2;\nloop invariant i250: v1 == v3 ==> v1 == v2 ==> v1 == v3;\nloop invariant i251: v2 == v3 ==> v2 == v1 ==> v2 == v3;\nloop invariant i252: v1 != v2 ==> v1 != v3 ==> v1 != v2;\nloop invariant i253: v1 != v3 ==> v1 != v2 ==> v1 != v3;\nloop invariant i254: 0 <= x1 <= 2147483647;\nloop invariant i255: d1 <= x1;\nloop invariant i256: 0 <= x2 <= 2147483647;\nloop invariant i257: d2 <= x2;\nloop invariant i258: 0 <= x3 <= 2147483647;\nloop invariant i259: d3 <= x3;\nloop invariant i260: c1 && c2 ==> x1 == 0;\nloop invariant i261: !c1 && !c2 ==> x2 == 0;\nloop invariant i262: !c1 && !c2 ==> x3 == 0;\nloop invariant i263: d1 == 1;\nloop invariant i264: d2 == 1;\nloop invariant i265: d3 == 1;\nloop invariant i266: c1 && c2 ==> d1 <= x1;\nloop invariant i267: !c1 && !c2 ==> d2 <= x2;\nloop invariant i268: !c1 && !c2 ==> d3 <= x3;\nloop invariant i269: c1 && c2 ==> d1 == 1;\nloop invariant i270: !c1 && !c2 ==> d2 == 1;\nloop invariant i271: !c1 && !c2 ==> d3 == 1;\nloop invariant i272: 1 <= x1 <= unknown_uint();\nloop invariant i273: 1 <= x2 <= unknown_uint();\nloop invariant i274: 1 <= x3 <= unknown_uint();\nloop invariant i275: (x1 >= 0) ==> (x1 <= unknown_uint());\nloop invariant i276: (x2 >= 0) ==> (x2 <= unknown_uint());\nloop invariant i277: (x3 >= 0) ==> (x3 <= unknown_uint());\nloop invariant i278: (x1 >= 0) ==> (x1 == x1-d1 * d1);\nloop invariant i279: (x2 >= 0) ==> (x2 == x2-d2 * d2);\nloop invariant i280: (x3 >= 0) ==> (x3 == x3-d3 * d3);\nloop invariant i281: (x1 == 0) ==> (x1 > 0);\nloop invariant i282: (x2 == 0) ==> (x2 > 0);\nloop invariant i283: (x3 == 0) ==> (x3 > 0);\nloop invariant i284: (c1 == unknown_bool()) ==> (c1 == unknown_bool());\nloop invariant i285: (c2 == unknown_bool()) ==> (c2 == unknown_bool());\nloop invariant i286: (v1 == unknown_int()) ==> (v1 == unknown_int());\nloop invariant i287: (v2 == unknown_int()) ==> (v2 == unknown_int());\nloop invariant i288: (v3 == unknown_int()) ==> (v3 == unknown_int());\nloop invariant i289: x1 == (x1 - d1) ==> c1;\nloop invariant i290: x2 == (x2 - d2) ==> c2;\nloop invariant i291: x3 == (x3 - d3) ==> !c1 && !c2;\nloop invariant i292: x1 == 0 || x2 == 0 || x3 == 0;\nloop invariant i293: 0 <= d1 <= 2147483647;\nloop invariant i294: 0 <= d2 <= 2147483647;\nloop invariant i295: 0 <= d3 <= 2147483647;\nloop invariant i296: (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 >= x2 && x1 >= x3);\nloop invariant i297: (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x2 >= x1 && x2 >= x3);\nloop invariant i298: (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x3 >= x1 && x3 >= x2);\nloop invariant i299: (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i300: v1 >= -2147483648;\nloop invariant i301: v1 <= 2147483647;\nloop invariant i302: v2 >= -2147483648;\nloop invariant i303: v2 <= 2147483647;\nloop invariant i304: v3 >= -2147483648;\nloop invariant i305: v3 <= 2147483647;\nloop invariant i306: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 || x2 >= d2 || x3 >= d3);\nloop invariant i307: (x1 > 0 && x2 > 0 && x3 > 0) ==> (c1 || c2);\nloop invariant i308: (x1 > 0 && x2 > 0 && x3 > 0) ==> (v1 == x1 || v1 == x2 || v1 == x3);\nloop invariant i309: (x1 > 0 && x2 > 0 && x3 > 0) ==> (v2 == x1 || v2 == x2 || v2 == x3);\nloop invariant i310: (x1 > 0 && x2 > 0 && x3 > 0) ==> (v3 == x1 || v3 == x2 || v3 == x3);\nloop invariant i311: (x1 > 0 && x2 > 0 && x3 > 0) ==> (c1 || c2 || (v1 == x1 && v2 == x2 && v3 == x3));\nloop invariant i312: (x1 <= 0 || x2 <= 0 || x3 <= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i313: (x1 <= 0 || x2 <= 0 || x3 <= 0) ==> (d1 == 0 && d2 == 0 && d3 == 0);\nloop invariant i314: (x1 <= 0 || x2 <= 0 || x3 <= 0) ==> (c1 == 0 && c2 == 0);\nloop invariant i315: (x1 <= 0 || x2 <= 0 || x3 <= 0) ==> (v1 == 0 && v2 == 0 && v3 == 0);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 50,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  int v1,v2,v3;\n  \n  /*@\nloop invariant i1: x1 >= d1;\nloop invariant i2: x2 >= d2;\nloop invariant i3: x3 >= d3;\nloop invariant i4: x1 >= 0;\nloop invariant i5: x2 >= 0;\nloop invariant i6: x3 >= 0;\nloop invariant i7: c1 ==> x1 >= d1;\nloop invariant i8: c2 ==> x2 >= d2;\nloop invariant i9: !c1 && !c2 ==> x3 >= d3;\nloop invariant i10: x1 <= x1 + d1;\nloop invariant i11: x2 <= x2 + d2;\nloop invariant i12: x3 <= x3 + d3;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i30: x1 != 0 ==> x1 >= x2;\nloop invariant i31: x1 != 0 ==> x1 >= x3;\nloop invariant i32: x2 != 0 ==> x2 >= x1;\nloop invariant i33: x2 != 0 ==> x2 >= x3;\nloop invariant i34: x3 != 0 ==> x3 >= x1;\nloop invariant i35: x3 != 0 ==> x3 >= x2;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i55: x1 <= x2;\nloop invariant i56: x2 <= x3;\nloop invariant i57: d1 >= 1;\nloop invariant i58: d2 >= 1;\nloop invariant i59: d3 >= 1;\nloop invariant i60: c1 == 1 || c2 == 1;\nloop invariant i61: x1 >= d1 * c1;\nloop invariant i62: x2 >= d2 * c2;\nloop invariant i63: x3 >= d3 * (1 - c1 - c2);\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i77: x1 <= x3;\nloop invariant i78: (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i79: (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant i80: (x1 <= x2 + (x2 - d2) * d2 / d1);\nloop invariant i81: (x1 <= x3 + (x3 - d3) * d3 / d1);\nloop invariant i82: (x2 <= x3 + (x3 - d3) * d3 / d2);\nloop invariant i83: (x2 >= x1 - (d1 - d2) * x1 / d1);\nloop invariant i84: (x3 >= x1 - (d1 - d3) * x1 / d1);\nloop invariant i85: (x3 >= x2 - (d2 - d3) * x2 / d2);\nloop invariant i86: (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant i87: 0 <= x1 <= x1' && 0 <= x2 <= x2' && 0 <= x3 <= x3';\nloop invariant i88: (x1' - x1) + (x2' - x2) + (x3' - x3) = d1 + d2 + d3;\nloop invariant i89: x1' = x1 + (c1 ? -d1 : 0);\nloop invariant i90: x2' = x2 + (c2 ? -d2 : 0);\nloop invariant i91: x3' = x3 + (-d3);\nloop invariant i92: c1 == (x1 > 0) && c2 == (x2 > 0);\nloop invariant i93: v1 = unknown_int() && v2 = unknown_int() && v3 = unknown_int();\nloop invariant i94: x1 == x1' && x2 == x2' && x3 == x3';\nloop invariant i95: x1' = x1 && x2' = x2 && x3' = x3;\nloop invariant i96: (x1' == 0 || x2' == 0 || x3' == 0);\nloop invariant i97: unknown_int() >= 0;\nloop invariant i98: (x1 == 0) ==> (unknown_uint() == unknown_uint());\nloop invariant i99: (x2 == 0) ==> (unknown_uint() == unknown_uint());\nloop invariant i100: (x3 == 0) ==> (unknown_uint() == unknown_uint());\nloop invariant i101: (c1 ==> 0 <= x1 <= unknown_uint()) && (c1 ==> d1 >= 1) && (c1 ==> x1 >= d1) && (c1 ==> x1 >= x1 - d1) && (c1 ==> unknown_uint() <= x1) && (c1 ==> unknown_uint() >= x1 - d1);\nloop invariant i102: (c2 ==> 0 <= x2 <= unknown_uint()) && (c2 ==> d2 >= 1) && (c2 ==> x2 >= d2) && (c2 ==> x2 >= x2 - d2) && (c2 ==> unknown_uint() <= x2) && (c2 ==> unknown_uint() >= x2 - d2);\nloop invariant i103: (!c1 && !c2 ==> 0 <= x3 <= unknown_uint()) && (!c1 && !c2 ==> d3 >= 1) && (!c1 && !c2 ==> x3 >= d3) && (!c1 && !c2 ==> x3 >= x3 - d3) && (!c1 && !c2 ==> unknown_uint() <= x3) && (!c1 && !c2 ==> unknown_uint() >= x3 - d3);\nloop invariant i104: (x1 == 0) ==> (unknown_uint() == unknown_uint()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int());\nloop invariant i105: (x2 == 0) ==> (unknown_uint() == unknown_uint()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int());\nloop invariant i106: (x3 == 0) ==> (unknown_uint() == unknown_uint()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int());\nloop invariant i107: (c1 ==> 0 <= x1 <= unknown_uint()) && (c1 ==> d1 >= 1) && (c1 ==> x1 >= d1) && (c1 ==> x1 >= x1 - d1) && (c1 ==> unknown_uint() <= x1) && (c1 ==> unknown_uint() >= x1 - d1) && (c1 ==> 0 <= unknown_int()) && (c1 ==> 0 <= unknown_int()) && (c1 ==> 0 <= unknown_int());\nloop invariant i108: (c2 ==> 0 <= x2 <= unknown_uint()) && (c2 ==> d2 >= 1) && (c2 ==> x2 >= d2) && (c2 ==> x2 >= x2 - d2) && (c2 ==> unknown_uint() <= x2) && (c2 ==> unknown_uint() >= x2 - d2) && (c2 ==> 0 <= unknown_int()) && (c2 ==> 0 <= unknown_int()) && (c2 ==> 0 <= unknown_int());\nloop invariant i109: (!c1 && !c2 ==> 0 <= x3 <= unknown_uint()) && (!c1 && !c2 ==> d3 >= 1) && (!c1 && !c2 ==> x3 >= d3) && (!c1 && !c2 ==> x3 >= x3 - d3) && (!c1 && !c2 ==> unknown_uint() <= x3) && (!c1 && !c2 ==> unknown_uint() >= x3 - d3) && (!c1 && !c2 ==> 0 <= unknown_int()) && (!c1 && !c2 ==> 0 <= unknown_int()) && (!c1 && !c2 ==> 0 <= unknown_int());\nloop invariant i110: (x1 == 0) ==> (unknown_uint() == unknown_uint()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int());\nloop invariant i111: (x2 == 0) ==> (unknown_uint() == unknown_uint()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int()) && (0 <= unknown_int());\nloop invariant i112: d1 > 0;\nloop invariant i113: d2 > 0;\nloop invariant i114: d3 > 0;\nloop invariant i115: c1 == 0 || c1 == 1;\nloop invariant i116: c2 == 0 || c2 == 1;\nloop invariant i117: v1 >= 0;\nloop invariant i118: v2 >= 0;\nloop invariant i119: v3 >= 0;\nloop invariant i120: c1 ==> x1 >= 0;\nloop invariant i121: c2 ==> x2 >= 0;\nloop invariant i122: !c1 && !c2 ==> x3 >= 0;\nloop invariant i123: c1 ==> x1 <= x1 + d1;\nloop invariant i124: c2 ==> x2 <= x2 + d2;\nloop invariant i125: !c1 && !c2 ==> x3 <= x3 + d3;\nloop invariant i126: x1 >= 0 ==> x1 <= x2;\nloop invariant i127: x1 >= 0 ==> x1 <= x3;\nloop invariant i128: x2 >= 0 ==> x2 <= x3;\nloop invariant i129: (x1 > 0 && x2 > 0 && x3 > 0) ==> (d1 > 0 && d2 > 0 && d3 > 0);\nloop invariant i130: x1 >= 0 ==> v1 >= 0;\nloop invariant i131: x2 >= 0 ==> v2 >= 0;\nloop invariant i132: x3 >= 0 ==> v3 >= 0;\nloop invariant i133: x1 >= 0 ==> c1 == 0;\nloop invariant i134: x2 >= 0 ==> c2 == 0;\nloop invariant i135: x3 >= 0 ==> c1 == 0 && c2 == 0;\nloop invariant i136: x1 >= 0 ==> v1 >= 0 && v2 >= 0 && v3 >= 0;\nloop invariant i137: x2 >= 0 ==> v1 >= 0 && v2 >= 0 && v3 >= 0;\nloop invariant i138: x3 >= 0 ==> v1 >= 0 && v2 >= 0 && v3 >= 0;\nloop invariant i139: x1 >= 0 ==> c1 == 0 && c2 == 0 && v1 >= 0 && v2 >= 0 && v3 >= 0;\nloop invariant i140: x2 >= 0 ==> c1 == 0 && c2 == 0 && v1 >= 0 && v2 >= 0 && v3 >= 0;\nloop invariant i141: 0 <= x1 <= x1 + d1;\nloop invariant i142: 0 <= x2 <= x2 + d2;\nloop invariant i143: 0 <= x3 <= x3 + d3;\nloop invariant i144: (x1+d1)*d1 == 0 ==> d1 == 0;\nloop invariant i145: (x2+d2)*d2 == 0 ==> d2 == 0;\nloop invariant i146: (x3+d3)*d3 == 0 ==> d3 == 0;\nloop invariant i147: x1 >= d1 ==> x1 >= x1 + d1;\nloop invariant i148: x2 >= d2 ==> x2 >= x2 + d2;\nloop invariant i149: x3 >= d3 ==> x3 >= x3 + d3;\nloop invariant i150: x1 >= x1+d1 ==> c1;\nloop invariant i151: x2 >= x2+d2 ==> c2;\nloop invariant i152: v1 == 0 ==> c1;\nloop invariant i153: v2 == 0 ==> c2;\nloop invariant i154: v3 == 0 ==> !(c1 || c2);\nloop invariant i155: x1 >= x1+d1 ==> x1 >= (x1+d1);\nloop invariant i156: x2 >= x2+d2 ==> x2 >= (x2+d2);\nloop invariant i157: x3 >= x3+d3 ==> x3 >= (x3+d3);\nloop invariant i158: c1 ==> x1 >= x1+d1;\nloop invariant i159: c2 ==> x2 >= x2+d2;\nloop invariant i160: !c1 ==> x1 >= x1;\nloop invariant i161: !c2 ==> x2 >= x2;\nloop invariant i162: x1+d1 == 0 ==> x1 == 0;\nloop invariant i163: x2+d2 == 0 ==> x2 == 0;\nloop invariant i164: x3+d3 == 0 ==> x3 == 0;\nloop invariant i165: x1+d1 == 0 ==> d1 == 0;\nloop invariant i166: x2+d2 == 0 ==> d2 == 0;\nloop invariant i167: x3+d3 == 0 ==> d3 == 0;\nloop invariant i168: x1 >= x1+d1 ==> x1 >= x1+d1;\nloop invariant i169: x2 >= x2+d2 ==> x2 >= x2+d2;\nloop invariant i170: x3 >= x3+d3 ==> x3 >= x3+d3;\nloop invariant i171: 0 <= x1 <= x1;\nloop invariant i172: 0 <= x2 <= x2;\nloop invariant i173: 0 <= x3 <= x3;\nloop invariant i174: 0 <= d1 <= d1;\nloop invariant i175: 0 <= d2 <= d2;\nloop invariant i176: 0 <= d3 <= d3;\nloop invariant i177: c1 in {0, 1};\nloop invariant i178: c2 in {0, 1};\nloop invariant i179: v1 in {0, 1};\nloop invariant i180: v2 in {0, 1};\nloop invariant i181: v3 in {0, 1};\nloop invariant i182: x1 == x1 ==> 0 <= x1 <= x1;\nloop invariant i183: x2 == x2 ==> 0 <= x2 <= x2;\nloop invariant i184: x3 == x3 ==> 0 <= x3 <= x3;\nloop invariant i185: d1 == d1 ==> 0 <= d1 <= d1;\nloop invariant i186: d2 == d2 ==> 0 <= d2 <= d2;\nloop invariant i187: d3 == d3 ==> 0 <= d3 <= d3;\nloop invariant i188: c1 == c1 ==> c1 in {0, 1};\nloop invariant i189: c2 == c2 ==> c2 in {0, 1};\nloop invariant i190: v1 == v1 ==> v1 in {0, 1};\nloop invariant i191: v2 == v2 ==> v2 in {0, 1};\nloop invariant i192: v3 == v3 ==> v3 in {0, 1};\nloop invariant i193: x1 == x1 ==> 0 <= x1 <= x1 ==> 0 <= x1 <= x1;\nloop invariant i194: x2 == x2 ==> 0 <= x2 <= x2 ==> 0 <= x2 <= x2;\nloop invariant i195: x3 == x3 ==> 0 <= x3 <= x3 ==> 0 <= x3 <= x3;\nloop invariant i196: d1 == d1 ==> 0 <= d1 <= d1 ==> 0 <= d1 <= d1;\nloop invariant i197: d2 == d2 ==> 0 <= d2 <= d2 ==> 0 <= d2 <= d2;\nloop invariant i198: d3 == d3 ==> 0 <= d3 <= d3 ==> 0 <= d3 <= d3;\nloop invariant i199: c1 == c1 ==> c1 in {0, 1} ==> c1 in {0, 1};\nloop invariant i200: c2 == c2 ==> c2 in {0, 1} ==> c2 in {0, 1};\nloop invariant i201: v1 == v1 ==> v1 in {0, 1} ==> v1 in {0, 1};\nloop invariant i202: v2 == v2 ==> v2 in {0, 1} ==> v2 in {0, 1};\nloop invariant i203: v3 == v3 ==> v3 in {0, 1} ==> v3 in {0, 1};\nloop invariant i204: x1 == x1 ==> 0 <= x1 <= x1 ==> 0 <= x1 <= x1 ==> 0 <= x1 <= x1;\nloop invariant i205: x2 == x2 ==> 0 <= x2 <= x2 ==> 0 <= x2 <= x2 ==> 0 <= x2 <= x2;\nloop invariant i206: x3 == x3 ==> 0 <= x3 <= x3 ==> 0 <= x3 <= x3 ==> 0 <= x3 <= x3;\nloop invariant i207: d1 == d1 ==> 0 <= d1 <= d1 ==> 0 <= d1 <= d1 ==> 0 <= d1 <= d1;\nloop invariant i208: d2 == d2 ==> 0 <= d2 <= d2 ==> 0 <= d2 <= d2 ==> 0 <= d2 <= d2;\nloop invariant i209: d3 == d3 ==> 0 <= d3 <= d3 ==> 0 <= d3 <= d3 ==> 0 <= d3 <= d3;\nloop invariant i210: c1 == c1 ==> c1 in {0, 1} ==> c1 in {0, 1} ==> c1 in {0, 1};\nloop invariant i211: c2 == c2 ==> c2 in {0, 1} ==> c2 in {0, 1} ==> c2 in {0, 1};\nloop invariant i212: v1 == v1 ==> v1 in {0, 1} ==> v1 in {0, 1} ==> v1 in {0, 1};\nloop invariant i213: v2 == v2 ==> v2 in {0, 1} ==> v2 in {0, 1} ==> v2 in {0, 1};\nloop invariant i214: v3 == v3 ==> v3 in {0, 1} ==> v3 in {0, 1} ==> v3 in {0, 1};\nloop invariant i215: x1 >= 1 ==> x1 >= 0;\nloop invariant i216: x2 >= 1 ==> x2 >= 0;\nloop invariant i217: x3 >= 1 ==> x3 >= 0;\nloop invariant i218: x1 <= 0 ==> x1 == 0;\nloop invariant i219: x2 <= 0 ==> x2 == 0;\nloop invariant i220: x3 <= 0 ==> x3 == 0;\nloop invariant i221: d1 >= 1 ==> d1 >= 1;\nloop invariant i222: d2 >= 1 ==> d2 >= 1;\nloop invariant i223: d3 >= 1 ==> d3 >= 1;\nloop invariant i224: c1 ==> c1 == 1;\nloop invariant i225: !c1 ==> c1 == 0;\nloop invariant i226: c2 ==> c2 == 1;\nloop invariant i227: !c2 ==> c2 == 0;\nloop invariant i228: (c1 ==> x1 >= 0) ==> (c1 ==> x1 >= d1);\nloop invariant i229: (c2 ==> x2 >= 0) ==> (c2 ==> x2 >= d2);\nloop invariant i230: (!c1 && !c2 ==> x3 >= 0) ==> (!c1 && !c2 ==> x3 >= d3);\nloop invariant i231: (c1 ==> x1 == 0) ==> (c1 ==> x1 == d1);\nloop invariant i232: (c2 ==> x2 == 0) ==> (c2 ==> x2 == d2);\nloop invariant i233: (!c1 && !c2 ==> x3 == 0) ==> (!c1 && !c2 ==> x3 == d3);\nloop invariant i234: (c1 ==> x1 >= 1 ==> x1 >= 0) ==> (c1 ==> x1 >= 1 ==> x1 >= d1);\nloop invariant i235: (c2 ==> x2 >= 1 ==> x2 >= 0) ==> (c2 ==> x2 >= 1 ==> x2 >= d2);\nloop invariant i236: (!c1 && !c2 ==> x3 >= 1 ==> x3 >= 0) ==> (!c1 && !c2 ==> x3 >= 1 ==> x3 >= d3);\nloop invariant i237: (c1 ==> x1 <= 0 ==> x1 == 0) ==> (c1 ==> x1 <= 0 ==> x1 == d1);\nloop invariant i238: (c2 ==> x2 <= 0 ==> x2 == 0) ==> (c2 ==> x2 <= 0 ==> x2 == d2);\nloop invariant i239: (!c1 && !c2 ==> x3 <= 0 ==> x3 == 0) ==> (!c1 && !c2 ==> x3 <= 0 ==> x3 == d3);\nloop invariant i240: (c1 ==> x1 >= 0 ==> x1 >= 1 ==> x1 >= 0) ==> (c1 ==> x1 >= 0 ==> x1 >= 1 ==> x1 >= d1);\nloop invariant i241: (c2 ==> x2 >= 0 ==> x2 >= 1 ==> x2 >= 0) ==> (c2 ==> x2 >= 0 ==> x2 >= 1 ==> x2 >= d2);\nloop invariant i242: (!c1 && !c2 ==> x3 >= 0 ==> x3 >= 1 ==> x3 >= 0) ==> (!c1 && !c2 ==> x3 >= 0 ==> x3 >= 1 ==> x3 >= d3);\nloop invariant i243: v1 == v2 ==> v1 == v3;\nloop invariant i244: v1 == v3 ==> v1 == v2;\nloop invariant i245: v2 == v3 ==> v2 == v1;\nloop invariant i246: v1 != v2 ==> v1 != v3;\nloop invariant i247: v1 != v3 ==> v1 != v2;\nloop invariant i248: v2 != v3 ==> v2 != v1;\nloop invariant i249: v1 == v2 ==> v1 == v3 ==> v1 == v2;\nloop invariant i250: v1 == v3 ==> v1 == v2 ==> v1 == v3;\nloop invariant i251: v2 == v3 ==> v2 == v1 ==> v2 == v3;\nloop invariant i252: v1 != v2 ==> v1 != v3 ==> v1 != v2;\nloop invariant i253: v1 != v3 ==> v1 != v2 ==> v1 != v3;\nloop invariant i254: 0 <= x1 <= 2147483647;\nloop invariant i255: d1 <= x1;\nloop invariant i256: 0 <= x2 <= 2147483647;\nloop invariant i257: d2 <= x2;\nloop invariant i258: 0 <= x3 <= 2147483647;\nloop invariant i259: d3 <= x3;\nloop invariant i260: c1 && c2 ==> x1 == 0;\nloop invariant i261: !c1 && !c2 ==> x2 == 0;\nloop invariant i262: !c1 && !c2 ==> x3 == 0;\nloop invariant i263: d1 == 1;\nloop invariant i264: d2 == 1;\nloop invariant i265: d3 == 1;\nloop invariant i266: c1 && c2 ==> d1 <= x1;\nloop invariant i267: !c1 && !c2 ==> d2 <= x2;\nloop invariant i268: !c1 && !c2 ==> d3 <= x3;\nloop invariant i269: c1 && c2 ==> d1 == 1;\nloop invariant i270: !c1 && !c2 ==> d2 == 1;\nloop invariant i271: !c1 && !c2 ==> d3 == 1;\nloop invariant i272: 1 <= x1 <= unknown_uint();\nloop invariant i273: 1 <= x2 <= unknown_uint();\nloop invariant i274: 1 <= x3 <= unknown_uint();\nloop invariant i275: (x1 >= 0) ==> (x1 <= unknown_uint());\nloop invariant i276: (x2 >= 0) ==> (x2 <= unknown_uint());\nloop invariant i277: (x3 >= 0) ==> (x3 <= unknown_uint());\nloop invariant i278: (x1 >= 0) ==> (x1 == x1-d1 * d1);\nloop invariant i279: (x2 >= 0) ==> (x2 == x2-d2 * d2);\nloop invariant i280: (x3 >= 0) ==> (x3 == x3-d3 * d3);\nloop invariant i281: (x1 == 0) ==> (x1 > 0);\nloop invariant i282: (x2 == 0) ==> (x2 > 0);\nloop invariant i283: (x3 == 0) ==> (x3 > 0);\nloop invariant i284: (c1 == unknown_bool()) ==> (c1 == unknown_bool());\nloop invariant i285: (c2 == unknown_bool()) ==> (c2 == unknown_bool());\nloop invariant i286: (v1 == unknown_int()) ==> (v1 == unknown_int());\nloop invariant i287: (v2 == unknown_int()) ==> (v2 == unknown_int());\nloop invariant i288: (v3 == unknown_int()) ==> (v3 == unknown_int());\nloop invariant i289: x1 == (x1 - d1) ==> c1;\nloop invariant i290: x2 == (x2 - d2) ==> c2;\nloop invariant i291: x3 == (x3 - d3) ==> !c1 && !c2;\nloop invariant i292: x1 == 0 || x2 == 0 || x3 == 0;\nloop invariant i293: 0 <= d1 <= 2147483647;\nloop invariant i294: 0 <= d2 <= 2147483647;\nloop invariant i295: 0 <= d3 <= 2147483647;\nloop invariant i296: (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 >= x2 && x1 >= x3);\nloop invariant i297: (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x2 >= x1 && x2 >= x3);\nloop invariant i298: (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x3 >= x1 && x3 >= x2);\nloop invariant i299: (x1 >= 0 && x2 >= 0 && x3 >= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i300: v1 >= -2147483648;\nloop invariant i301: v1 <= 2147483647;\nloop invariant i302: v2 >= -2147483648;\nloop invariant i303: v2 <= 2147483647;\nloop invariant i304: v3 >= -2147483648;\nloop invariant i305: v3 <= 2147483647;\nloop invariant i306: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 || x2 >= d2 || x3 >= d3);\nloop invariant i307: (x1 > 0 && x2 > 0 && x3 > 0) ==> (c1 || c2);\nloop invariant i308: (x1 > 0 && x2 > 0 && x3 > 0) ==> (v1 == x1 || v1 == x2 || v1 == x3);\nloop invariant i309: (x1 > 0 && x2 > 0 && x3 > 0) ==> (v2 == x1 || v2 == x2 || v2 == x3);\nloop invariant i310: (x1 > 0 && x2 > 0 && x3 > 0) ==> (v3 == x1 || v3 == x2 || v3 == x3);\nloop invariant i311: (x1 > 0 && x2 > 0 && x3 > 0) ==> (c1 || c2 || (v1 == x1 && v2 == x2 && v3 == x3));\nloop invariant i312: (x1 <= 0 || x2 <= 0 || x3 <= 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i313: (x1 <= 0 || x2 <= 0 || x3 <= 0) ==> (d1 == 0 && d2 == 0 && d3 == 0);\nloop invariant i314: (x1 <= 0 || x2 <= 0 || x3 <= 0) ==> (c1 == 0 && c2 == 0);\nloop invariant i315: (x1 <= 0 || x2 <= 0 || x3 <= 0) ==> (v1 == 0 && v2 == 0 && v3 == 0);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c"
        ],
        "skipped": [],
        "total": 98,
        "success_count": 84,
        "failure_count": 14,
        "success_rate": 0.8571428571428571
    }
}