{
    "logs": {
        "file": "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/for_infinite_loop_1_true.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  for(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant x == 0;\nloop invariant x == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 0;\nloop invariant y <= 0;\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n; loop invariant x == 0; loop invariant y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0 ==> i >= 0;\nloop invariant x == 0 ==> i <= n;\nloop invariant y == 0 ==> i >= 0;\nloop invariant y == 0 ==> i <= n;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 0 ==> x <= 0;\nloop invariant x == 0 ==> x >= 0;\nloop invariant x == 0 ==> y <= 0;\nloop invariant x == 0 ==> y >= 0;\nloop invariant x == 0 ==> n <= 0;\nloop invariant x == 0 ==> n >= 0;\nloop invariant x == 0 ==> n == 0;\nloop invariant x == 0 ==> n == i;\nloop invariant i == 0 ==> i == n;\nloop invariant i == 0 ==> i <= n;\nloop invariant i == 0 ==> i >= 0;\nloop invariant i == 0 ==> n <= 0;\nloop invariant i == 0 ==> n >= 0;\nloop invariant i == 0 ==> n == i;\nloop invariant y == 0 ==> i <= n;\nloop invariant y == 0 ==> i >= 0;\nloop invariant y == 0 ==> n <= 0;\nloop invariant y == 0 ==> n >= 0;\nloop invariant y == 0 ==> n == i;\nloop invariant n == 0 ==> i >= 0;\nloop invariant n == 0 ==> i <= n;\nloop invariant n == 0 ==> n <= 0;\nloop invariant n == 0 ==> n >= 0;\nloop invariant n == 0 ==> n == i;\nloop invariant n == i ==> i <= n;\nloop invariant n == i ==> i >= 0;\nloop invariant n == i ==> n <= 0;\nloop invariant n == i ==> n >= 0;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant x == 0 ==> n == i;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant n == i ==> i <= n;\nloop invariant n == i ==> i >= 0;\nloop invariant n == i ==> n <= 0;\nloop invariant n == i ==> n >= 0;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant x == 0 ==> n == i;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant n == i ==> i <= n;\nloop invariant n == i ==> i >= 0;\nloop invariant n == i ==> n <= 0;\nloop invariant n == i ==> n >= 0;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant x == 0 ==> n == i;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant n == i ==> i <= n;\nloop invariant n == i ==> i >= 0;\nloop invariant n == i ==> n <= 0;\nloop invariant n == i ==> n >= 0;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant x == 0 ==> n == i;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant n == i ==> i <= n;\nloop invariant n == i ==> i >= 0;\nloop invariant n == i ==> n <= 0;\nloop invariant n == i ==> n >= 0;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant x == 0 ==> n == i;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant n == i ==> i <= n;\nloop invariant n == i ==> i >= 0;\nloop invariant n == i ==> n <= 0;\nloop invariant n == i ==> n >= 0;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant x == 0 ==> n == i;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant n == i ==> i <= n;\nloop invariant n == i ==> i >= 0;\nloop invariant n == i ==> n <= 0;\nloop invariant n == i ==> n >= 0;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant x == 0 ==> n == i;\nloop invariant n == i ==> n == i;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i < n ==> x == 0;\nloop invariant i == n ==> x == 0;\nloop invariant i < n ==> y == 0;\nloop invariant i == n ==> y == 0;\nloop invariant i < n ==> x == 0 ==> y == 0;\n*/\n```",
            "```\n/*@\nloop invariant x = 0;\nloop invariant y = 0;\nloop invariant 0 <= i <= n;\nloop invariant i is non-deterministic at the beginning of the loop;\nloop invariant i is non-deterministic at the end of the loop;\nloop invariant x is non-deterministic at the beginning of the loop;\nloop invariant x is non-deterministic at the end of the loop;\nloop invariant y is non-deterministic at the beginning of the loop;\nloop invariant y is non-deterministic at the end of the loop;\nloop invariant 0 <= i <= n ==> x = 0;\nloop invariant 0 <= i <= n ==> y = 0;\nloop invariant i is non-deterministic at the beginning of the loop ==> x = 0;\nloop invariant i is non-deterministic at the beginning of the loop ==> y = 0;\nloop invariant i is non-deterministic at the end of the loop ==> x = 0;\nloop invariant i is non-deterministic at the end of the loop ==> y = 0;\nloop invariant x is non-deterministic at the beginning of the loop ==> x = 0;\nloop invariant x is non-deterministic at the beginning of the loop ==> y = 0;\nloop invariant x is non-deterministic at the end of the loop ==> x = 0;\nloop invariant x is non-deterministic at the end of the loop ==> y = 0;\nloop invariant y is non-deterministic at the beginning of the loop ==> x = 0;\nloop invariant y is non-deterministic at the beginning of the loop ==> y = 0;\nloop invariant y is non-deterministic at the end of the loop ==> x = 0;\nloop invariant y is non-deterministic at the end of the loop ==> y = 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 1;\nloop invariant i==0;\nloop invariant y==0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant 0 <= x <= y;\nloop invariant 0 <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant i >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= i <= 100000;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= n <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= n <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= n <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= n <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= n <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= n <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= n <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x==0 ==> i==0;\nloop invariant x==0 ==> y==0;\nloop invariant x==0 ==> i==0 ==> y==0;\nloop invariant x==0 ==> i==0 ==> y==0 ==> x==0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 0;\nloop invariant 0 <= y <= 0;\nloop invariant i == 0;\nloop invariant n > 0;\nloop invariant unknown_int() == n;\nloop invariant i >= 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant x == 0;\nloop invariant x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\nloop invariant i1: x == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 0;\nloop invariant y <= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: x >= 0;\nloop invariant i3: y >= 0;\nloop invariant i4: x <= 0;\nloop invariant i5: y <= 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 158,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n; loop invariant x == 0; loop invariant y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 14,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0 ==> i >= 0;\nloop invariant x == 0 ==> i <= n;\nloop invariant y == 0 ==> i >= 0;\nloop invariant y == 0 ==> i <= n;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 0 ==> x <= 0;\nloop invariant x == 0 ==> x >= 0;\nloop invariant x == 0 ==> y <= 0;\nloop invariant x == 0 ==> y >= 0;\nloop invariant x == 0 ==> n <= 0;\nloop invariant x == 0 ==> n >= 0;\nloop invariant x == 0 ==> n == 0;\nloop invariant x == 0 ==> n == i;\nloop invariant i == 0 ==> i == n;\nloop invariant i == 0 ==> i <= n;\nloop invariant i == 0 ==> i >= 0;\nloop invariant i == 0 ==> n <= 0;\nloop invariant i == 0 ==> n >= 0;\nloop invariant i == 0 ==> n == i;\nloop invariant y == 0 ==> i <= n;\nloop invariant y == 0 ==> i >= 0;\nloop invariant y == 0 ==> n <= 0;\nloop invariant y == 0 ==> n >= 0;\nloop invariant y == 0 ==> n == i;\nloop invariant n == 0 ==> i >= 0;\nloop invariant n == 0 ==> i <= n;\nloop invariant n == 0 ==> n <= 0;\nloop invariant n == 0 ==> n >= 0;\nloop invariant n == 0 ==> n == i;\nloop invariant n == i ==> i <= n;\nloop invariant n == i ==> i >= 0;\nloop invariant n == i ==> n <= 0;\nloop invariant n == i ==> n >= 0;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant x == 0 ==> n == i;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant n == i ==> i <= n;\nloop invariant n == i ==> i >= 0;\nloop invariant n == i ==> n <= 0;\nloop invariant n == i ==> n >= 0;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant x == 0 ==> n == i;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant n == i ==> i <= n;\nloop invariant n == i ==> i >= 0;\nloop invariant n == i ==> n <= 0;\nloop invariant n == i ==> n >= 0;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant x == 0 ==> n == i;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant n == i ==> i <= n;\nloop invariant n == i ==> i >= 0;\nloop invariant n == i ==> n <= 0;\nloop invariant n == i ==> n >= 0;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant x == 0 ==> n == i;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant n == i ==> i <= n;\nloop invariant n == i ==> i >= 0;\nloop invariant n == i ==> n <= 0;\nloop invariant n == i ==> n >= 0;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant x == 0 ==> n == i;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant n == i ==> i <= n;\nloop invariant n == i ==> i >= 0;\nloop invariant n == i ==> n <= 0;\nloop invariant n == i ==> n >= 0;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant x == 0 ==> n == i;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant n == i ==> i <= n;\nloop invariant n == i ==> i >= 0;\nloop invariant n == i ==> n <= 0;\nloop invariant n == i ==> n >= 0;\nloop invariant n == i ==> n == i;\nloop invariant n == i ==> i == n;\nloop invariant x == 0 ==> n == i;\nloop invariant n == i ==> n == i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: x == 0 ==> i >= 0;\n\nloop invariant i4: y == 0 ==> i >= 0;\n\nloop invariant i6: x == 0 ==> y == 0;\nloop invariant i7: x == 0 ==> x <= 0;\nloop invariant i8: x == 0 ==> x >= 0;\nloop invariant i9: x == 0 ==> y <= 0;\nloop invariant i10: x == 0 ==> y >= 0;\n\nloop invariant i12: x == 0 ==> n >= 0;\n\n\n\nloop invariant i16: i == 0 ==> i <= n;\nloop invariant i17: i == 0 ==> i >= 0;\n\nloop invariant i19: i == 0 ==> n >= 0;\n\n\nloop invariant i22: y == 0 ==> n >= 0;\n\nloop invariant i24: n == 0 ==> i >= 0;\n\nloop invariant i26: n == 0 ==> n <= 0;\nloop invariant i27: n == 0 ==> n >= 0;\n\nloop invariant i29: n == i ==> i <= n;\nloop invariant i30: n == i ==> i >= 0;\n\nloop invariant i32: n == i ==> n >= 0;\nloop invariant i33: n == i ==> n == i;\nloop invariant i34: n == i ==> i == n;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i < n ==> x == 0;\nloop invariant i == n ==> x == 0;\nloop invariant i < n ==> y == 0;\nloop invariant i == n ==> y == 0;\nloop invariant i < n ==> x == 0 ==> y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: i < n ==> x == 0;\nloop invariant i5: i == n ==> x == 0;\nloop invariant i6: i < n ==> y == 0;\nloop invariant i7: i == n ==> y == 0;\nloop invariant i8: i < n ==> x == 0 ==> y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 23,
                "annotations": "```\n/*@\nloop invariant x = 0;\nloop invariant y = 0;\nloop invariant 0 <= i <= n;\nloop invariant i is non-deterministic at the beginning of the loop;\nloop invariant i is non-deterministic at the end of the loop;\nloop invariant x is non-deterministic at the beginning of the loop;\nloop invariant x is non-deterministic at the end of the loop;\nloop invariant y is non-deterministic at the beginning of the loop;\nloop invariant y is non-deterministic at the end of the loop;\nloop invariant 0 <= i <= n ==> x = 0;\nloop invariant 0 <= i <= n ==> y = 0;\nloop invariant i is non-deterministic at the beginning of the loop ==> x = 0;\nloop invariant i is non-deterministic at the beginning of the loop ==> y = 0;\nloop invariant i is non-deterministic at the end of the loop ==> x = 0;\nloop invariant i is non-deterministic at the end of the loop ==> y = 0;\nloop invariant x is non-deterministic at the beginning of the loop ==> x = 0;\nloop invariant x is non-deterministic at the beginning of the loop ==> y = 0;\nloop invariant x is non-deterministic at the end of the loop ==> x = 0;\nloop invariant x is non-deterministic at the end of the loop ==> y = 0;\nloop invariant y is non-deterministic at the beginning of the loop ==> x = 0;\nloop invariant y is non-deterministic at the beginning of the loop ==> y = 0;\nloop invariant y is non-deterministic at the end of the loop ==> x = 0;\nloop invariant y is non-deterministic at the end of the loop ==> y = 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 1;\nloop invariant i==0;\nloop invariant y==0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\nloop invariant i1: 0 <= x <= 1;\n\nloop invariant i3: y==0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant 0 <= x <= y;\nloop invariant 0 <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: 0 <= x <= y;\nloop invariant i3: 0 <= n;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant i >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\nloop invariant i1: 0 <= i;\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\n\nloop invariant i5: i >= 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= n <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= i <= 100000;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= n <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= n <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= n <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= n <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= n <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= n <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= n <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\n\n\nloop invariant i4: x >= 0;\nloop invariant i5: y >= 0;\nloop invariant i6: i >= 0;\nloop invariant i7: x <= 100000;\nloop invariant i8: y <= 100000;\nloop invariant i9: x >= y;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\nloop invariant i1: 0 <= x <= y <= n;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x==0 ==> i==0;\nloop invariant x==0 ==> y==0;\nloop invariant x==0 ==> i==0 ==> y==0;\nloop invariant x==0 ==> i==0 ==> y==0 ==> x==0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\nloop invariant i1: 0 <= x;\nloop invariant i2: 0 <= y;\nloop invariant i3: x <= y;\nloop invariant i4: i >= 0;\n\n\nloop invariant i7: x==0 ==> y==0;\nloop invariant i8: x==0 ==> i==0 ==> y==0;\nloop invariant i9: x==0 ==> i==0 ==> y==0 ==> x==0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 0;\nloop invariant 0 <= y <= 0;\nloop invariant i == 0;\nloop invariant n > 0;\nloop invariant unknown_int() == n;\nloop invariant i >= 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= unknown_int();\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\nloop invariant i1: 0 <= x <= 0;\nloop invariant i2: 0 <= y <= 0;\n\nloop invariant i4: n > 0;\n\nloop invariant i6: i >= 0;\n\nloop invariant i8: x == 0;\nloop invariant i9: y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 218: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\nloop invariant i1: x == 0;\nloop invariant i2: 0 <= i <= n;\nloop invariant i3: x >= 0;\nloop invariant i4: y >= 0;\nloop invariant i5: x <= 0;\nloop invariant i6: y <= 0;\nloop invariant i7: i1;\nloop invariant i8: i2;\nloop invariant i9: i3;\nloop invariant i10: i4;\nloop invariant i11: i5;\nloop invariant i12: i6;\nloop invariant i13: i7;\nloop invariant i14: i8;\nloop invariant i15: i9;\nloop invariant i16: i10;\nloop invariant i17: i11;\nloop invariant i18: i12;\nloop invariant i19: i13;\nloop invariant i20: i14;\nloop invariant i21: i15;\nloop invariant i22: i16;\nloop invariant i23: i17;\nloop invariant i24: i18;\nloop invariant i25: i19;\nloop invariant i26: i20;\nloop invariant i27: i21;\nloop invariant i28: i22;\nloop invariant i29: i23;\nloop invariant i30: i24;\nloop invariant i31: i25;\nloop invariant i32: i26;\nloop invariant i33: i27;\nloop invariant i34: i28;\nloop invariant i35: i29;\nloop invariant i36: i30;\nloop invariant i37: i31;\nloop invariant i38: i32;\nloop invariant i39: i33;\nloop invariant i40: i34;\nloop invariant i41: i35;\nloop invariant i42: i36;\nloop invariant i43: i37;\nloop invariant i44: i38;\nloop invariant i45: i39;\nloop invariant i46: i40;\nloop invariant i47: i41;\nloop invariant i48: i42;\nloop invariant i49: i43;\nloop invariant i50: i44;\nloop invariant i51: i45;\nloop invariant i52: i46;\nloop invariant i53: i47;\nloop invariant i54: i48;\nloop invariant i55: i49;\nloop invariant i56: i50;\nloop invariant i57: i51;\nloop invariant i58: i52;\nloop invariant i59: i53;\nloop invariant i60: i54;\nloop invariant i61: i55;\nloop invariant i62: i56;\nloop invariant i63: i57;\nloop invariant i64: i58;\nloop invariant i65: i59;\nloop invariant i66: i60;\nloop invariant i67: i61;\nloop invariant i68: i62;\nloop invariant i69: i63;\nloop invariant i70: i64;\nloop invariant i71: i65;\nloop invariant i72: i66;\nloop invariant i73: i67;\nloop invariant i74: i68;\nloop invariant i75: i69;\nloop invariant i76: i70;\nloop invariant i77: i71;\nloop invariant i78: i72;\nloop invariant i79: i73;\nloop invariant i80: i74;\nloop invariant i81: i75;\nloop invariant i82: i76;\nloop invariant i83: i77;\nloop invariant i84: i78;\nloop invariant i85: i79;\nloop invariant i86: i80;\nloop invariant i87: i81;\nloop invariant i88: i82;\nloop invariant i89: i83;\nloop invariant i90: i84;\nloop invariant i91: i85;\nloop invariant i92: i86;\nloop invariant i93: i87;\nloop invariant i94: i88;\nloop invariant i95: i89;\nloop invariant i96: i90;\nloop invariant i97: i91;\nloop invariant i98: i92;\nloop invariant i99: i93;\nloop invariant i100: i94;\nloop invariant i101: i95;\nloop invariant i102: i96;\nloop invariant i103: i97;\nloop invariant i104: i98;\nloop invariant i105: i99;\nloop invariant i106: i100;\nloop invariant i107: i101;\nloop invariant i108: i102;\nloop invariant i109: i103;\nloop invariant i110: i104;\nloop invariant i111: i105;\nloop invariant i112: i106;\nloop invariant i113: i107;\nloop invariant i114: i108;\nloop invariant i115: i109;\nloop invariant i116: i110;\nloop invariant i117: i111;\nloop invariant i118: i112;\nloop invariant i119: i113;\nloop invariant i120: i114;\nloop invariant i121: i115;\nloop invariant i122: i116;\nloop invariant i123: i117;\nloop invariant i124: i118;\nloop invariant i125: i119;\nloop invariant i126: i120;\nloop invariant i127: i121;\nloop invariant i128: i122;\nloop invariant i129: i123;\nloop invariant i130: i124;\nloop invariant i131: i125;\nloop invariant i132: i126;\nloop invariant i133: i127;\nloop invariant i134: i128;\nloop invariant i135: i129;\nloop invariant i136: i130;\nloop invariant i137: i131;\nloop invariant i138: i132;\nloop invariant i139: i133;\nloop invariant i140: i134;\nloop invariant i141: i135;\nloop invariant i142: i136;\nloop invariant i143: i137;\nloop invariant i144: i138;\nloop invariant i145: i139;\nloop invariant i146: i140;\nloop invariant i147: i141;\nloop invariant i148: i142;\nloop invariant i149: i143;\nloop invariant i150: i144;\nloop invariant i151: i145;\nloop invariant i152: i146;\nloop invariant i153: i147;\nloop invariant i154: i148;\nloop invariant i155: i149;\nloop invariant i156: i150;\nloop invariant i157: i151;\nloop invariant i158: i152;\nloop invariant i159: i153;\nloop invariant i160: i154;\nloop invariant i161: i155;\nloop invariant i162: i156;\nloop invariant i163: i157;\nloop invariant i164: i158;\nloop invariant i165: 0 <= i <= n; loop invariant x == 0; loop invariant y == 0;\nloop invariant i166: x == 0 ==> i >= 0;\nloop invariant i167: x == 0 ==> i <= n;\nloop invariant i168: y == 0 ==> i >= 0;\nloop invariant i169: y == 0 ==> i <= n;\nloop invariant i170: x == 0 ==> y == 0;\nloop invariant i171: x == 0 ==> x <= 0;\nloop invariant i172: x == 0 ==> x >= 0;\nloop invariant i173: x == 0 ==> y <= 0;\nloop invariant i174: x == 0 ==> y >= 0;\nloop invariant i175: x == 0 ==> n <= 0;\nloop invariant i176: x == 0 ==> n >= 0;\nloop invariant i177: x == 0 ==> n == 0;\nloop invariant i178: x == 0 ==> n == i;\nloop invariant i179: i == 0 ==> i == n;\nloop invariant i180: i == 0 ==> i <= n;\nloop invariant i181: i == 0 ==> i >= 0;\nloop invariant i182: i == 0 ==> n <= 0;\nloop invariant i183: i == 0 ==> n >= 0;\nloop invariant i184: i == 0 ==> n == i;\nloop invariant i185: y == 0 ==> n <= 0;\nloop invariant i186: y == 0 ==> n >= 0;\nloop invariant i187: y == 0 ==> n == i;\nloop invariant i188: n == 0 ==> i >= 0;\nloop invariant i189: n == 0 ==> i <= n;\nloop invariant i190: n == 0 ==> n <= 0;\nloop invariant i191: n == 0 ==> n >= 0;\nloop invariant i192: n == 0 ==> n == i;\nloop invariant i193: n == i ==> i <= n;\nloop invariant i194: n == i ==> i >= 0;\nloop invariant i195: n == i ==> n <= 0;\nloop invariant i196: n == i ==> n >= 0;\nloop invariant i197: n == i ==> n == i;\nloop invariant i198: n == i ==> i == n;\nloop invariant i199: y == 0;\nloop invariant i200: i < n ==> x == 0;\nloop invariant i201: i == n ==> x == 0;\nloop invariant i202: i < n ==> y == 0;\nloop invariant i203: i == n ==> y == 0;\nloop invariant i204: i < n ==> x == 0 ==> y == 0;\nloop invariant i205: x = 0;\nloop invariant i206: y = 0;\nloop invariant i207: i is non-deterministic at the beginning of the loop;\nloop invariant i208: i is non-deterministic at the end of the loop;\nloop invariant i209: x is non-deterministic at the beginning of the loop;\nloop invariant i210: x is non-deterministic at the end of the loop;\nloop invariant i211: y is non-deterministic at the beginning of the loop;\nloop invariant i212: y is non-deterministic at the end of the loop;\nloop invariant i213: 0 <= i <= n ==> x = 0;\nloop invariant i214: 0 <= i <= n ==> y = 0;\nloop invariant i215: i is non-deterministic at the beginning of the loop ==> x = 0;\nloop invariant i216: i is non-deterministic at the beginning of the loop ==> y = 0;\nloop invariant i217: i is non-deterministic at the end of the loop ==> x = 0;\nloop invariant i218: i is non-deterministic at the end of the loop ==> y = 0;\nloop invariant i219: x is non-deterministic at the beginning of the loop ==> x = 0;\nloop invariant i220: x is non-deterministic at the beginning of the loop ==> y = 0;\nloop invariant i221: x is non-deterministic at the end of the loop ==> x = 0;\nloop invariant i222: x is non-deterministic at the end of the loop ==> y = 0;\nloop invariant i223: y is non-deterministic at the beginning of the loop ==> x = 0;\nloop invariant i224: y is non-deterministic at the beginning of the loop ==> y = 0;\nloop invariant i225: y is non-deterministic at the end of the loop ==> x = 0;\nloop invariant i226: y is non-deterministic at the end of the loop ==> y = 0;\nloop invariant i227: 0 <= x <= 1;\nloop invariant i228: i==0;\nloop invariant i229: y==0;\nloop invariant i230: 1 <= i <= n;\nloop invariant i231: 0 <= x <= y;\nloop invariant i232: 0 <= n;\nloop invariant i233: 0 <= i;\nloop invariant i234: i <= n;\nloop invariant i235: i >= 0;\nloop invariant i236: 0 <= n <= 100000;\nloop invariant i237: x >= (1 + (y - 1) * y / 2);\nloop invariant i238: 0 <= i <= 100000;\nloop invariant i239: x <= 100000;\nloop invariant i240: y <= 100000;\nloop invariant i241: x >= y;\nloop invariant i242: 0 <= x <= y <= n;\nloop invariant i243: 0 <= x;\nloop invariant i244: 0 <= y;\nloop invariant i245: x <= y;\nloop invariant i246: x==0 ==> i==0;\nloop invariant i247: x==0 ==> y==0;\nloop invariant i248: x==0 ==> i==0 ==> y==0;\nloop invariant i249: x==0 ==> i==0 ==> y==0 ==> x==0;\nloop invariant i250: 0 <= x <= 0;\nloop invariant i251: 0 <= y <= 0;\nloop invariant i252: i == 0;\nloop invariant i253: n > 0;\nloop invariant i254: unknown_int() == n;\nloop invariant i255: i <= unknown_int();\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
        "combined_annotation_num_solver_calls": 201,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\nloop invariant i1: x == 0;\n\nloop invariant i3: x >= 0;\nloop invariant i4: y >= 0;\nloop invariant i5: x <= 0;\nloop invariant i6: y <= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i166: x == 0 ==> i >= 0;\n\nloop invariant i168: y == 0 ==> i >= 0;\n\nloop invariant i170: x == 0 ==> y == 0;\nloop invariant i171: x == 0 ==> x <= 0;\nloop invariant i172: x == 0 ==> x >= 0;\nloop invariant i173: x == 0 ==> y <= 0;\nloop invariant i174: x == 0 ==> y >= 0;\n\nloop invariant i176: x == 0 ==> n >= 0;\n\n\n\nloop invariant i180: i == 0 ==> i <= n;\nloop invariant i181: i == 0 ==> i >= 0;\n\nloop invariant i183: i == 0 ==> n >= 0;\n\n\nloop invariant i186: y == 0 ==> n >= 0;\n\nloop invariant i188: n == 0 ==> i >= 0;\nloop invariant i189: n == 0 ==> i <= n;\nloop invariant i190: n == 0 ==> n <= 0;\nloop invariant i191: n == 0 ==> n >= 0;\nloop invariant i192: n == 0 ==> n == i;\nloop invariant i193: n == i ==> i <= n;\nloop invariant i194: n == i ==> i >= 0;\n\nloop invariant i196: n == i ==> n >= 0;\nloop invariant i197: n == i ==> n == i;\nloop invariant i198: n == i ==> i == n;\nloop invariant i199: y == 0;\nloop invariant i200: i < n ==> x == 0;\nloop invariant i201: i == n ==> x == 0;\nloop invariant i202: i < n ==> y == 0;\nloop invariant i203: i == n ==> y == 0;\nloop invariant i204: i < n ==> x == 0 ==> y == 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i227: 0 <= x <= 1;\n\nloop invariant i229: y==0;\n\nloop invariant i231: 0 <= x <= y;\nloop invariant i232: 0 <= n;\nloop invariant i233: 0 <= i;\n\nloop invariant i235: i >= 0;\n\n\n\nloop invariant i239: x <= 100000;\nloop invariant i240: y <= 100000;\nloop invariant i241: x >= y;\nloop invariant i242: 0 <= x <= y <= n;\nloop invariant i243: 0 <= x;\nloop invariant i244: 0 <= y;\nloop invariant i245: x <= y;\n\nloop invariant i247: x==0 ==> y==0;\nloop invariant i248: x==0 ==> i==0 ==> y==0;\nloop invariant i249: x==0 ==> i==0 ==> y==0 ==> x==0;\nloop invariant i250: 0 <= x <= 0;\nloop invariant i251: 0 <= y <= 0;\n\nloop invariant i253: n > 0;\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/popl.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/07.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/39.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv_simp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/xy10.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/const_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe3.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe4.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_unsafe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbr.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbrprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bk-nat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bkley.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/efm.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/ex1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnatprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifo.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/seesaw.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/ken-imp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/rajamani_1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/simple.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/simple_if.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/up-nested.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/count_up_down_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/for_infinite_loop_1_true.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/05.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/37.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/pldi082_unbounded.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-close-angle.c"
        ],
        "skipped": [],
        "total": 174,
        "success_count": 144,
        "failure_count": 30,
        "success_rate": 0.8275862068965517
    }
}