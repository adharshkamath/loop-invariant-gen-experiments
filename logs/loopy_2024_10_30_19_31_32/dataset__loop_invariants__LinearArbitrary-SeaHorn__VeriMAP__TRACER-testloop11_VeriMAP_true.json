{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int e, s;\n\n  e=0;\n  s=2;\n  while (unknown()) {\n    if (s == 2){\n      if (e ==0) e=1;\n      s = 3;\n    }\n    else if (s == 3){\n      if (e ==1) e=2;\n      s=4;\n    }\n    else if (s == 4){\n      {;\n//@ assert(!( e == 3 ));\n}\n\n      s=5;\n    }\n  }\n  \nreturn;\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= e <= 3;\nloop invariant 2 <= s <= 5;\nloop invariant (if e == 0 then s == 2 else (if e == 1 then (if s == 3 then e == 1 else (if e == 2 then s == 4 else s == 5))));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\n*/\n```",
            "```\n/*@\nloop invariant s == 2 ==> e >= 0;\nloop invariant s == 2 ==> e <= 1;\nloop invariant s == 3 ==> e >= 1;\nloop invariant s == 3 ==> e <= 2;\nloop invariant s == 4 ==> e >= 2;\nloop invariant s == 4 ==> e <= 3;\nloop invariant s == 5 ==> e >= 3;\nloop invariant s == 5 ==> e <= 3;\nloop invariant s == 2 ==> e ==> s;\nloop invariant s == 3 ==> e ==> s;\nloop invariant s == 4 ==> e ==> s;\nloop invariant s == 5 ==> e ==> s;\nloop invariant s == 2 ==> e <= s;\nloop invariant s == 3 ==> e <= s;\nloop invariant s == 4 ==> e <= s;\nloop invariant s == 5 ==> e <= s;\nloop invariant s == 2 ==> e <= 2;\nloop invariant s == 3 ==> e <= 3;\nloop invariant s == 4 ==> e <= 4;\nloop invariant s == 5 ==> e <= 5;\nloop invariant s == 2 ==> e >= 0;\nloop invariant s == 3 ==> e >= 1;\nloop invariant s == 4 ==> e >= 2;\nloop invariant s == 5 ==> e >= 3;\nloop invariant s == 2 ==> e == 0;\nloop invariant s == 3 ==> e == 1;\nloop invariant s == 4 ==> e == 2;\nloop invariant s == 5 ==> e == 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= s <= 5;\nloop invariant 0 <= e <= 2;\nloop invariant e != 3;\nloop invariant s != 2 || e == 1;\nloop invariant s != 3 || e == 2;\nloop invariant s != 4 || e == 2;\nloop invariant s != 5 || e == 0;\nloop invariant s != 0 || e == 0;\nloop invariant s != 1 || e == 0;\nloop invariant s != 6 || e == 0;\nloop invariant s != 7 || e == 0;\nloop invariant s != 8 || e == 0;\nloop invariant s != 9 || e == 0;\nloop invariant s != 10 || e == 0;\nloop invariant s != 11 || e == 0;\nloop invariant s != 12 || e == 0;\nloop invariant s != 13 || e == 0;\nloop invariant s != 14 || e == 0;\nloop invariant s != 15 || e == 0;\nloop invariant s != 16 || e == 0;\nloop invariant s != 17 || e == 0;\nloop invariant s != 18 || e == 0;\nloop invariant s != 19 || e == 0;\nloop invariant s != 20 || e == 0;\nloop invariant s != 21 || e == 0;\nloop invariant s != 22 || e == 0;\nloop invariant s != 23 || e == 0;\nloop invariant s != 24 || e == 0;\nloop invariant s != 25 || e == 0;\nloop invariant s != 26 || e == 0;\nloop invariant s != 27 || e == 0;\nloop invariant s != 28 || e == 0;\nloop invariant s != 29 || e == 0;\nloop invariant s != 30 || e == 0;\nloop invariant s != 31 || e == 0;\nloop invariant s != 32 || e == 0;\nloop invariant s != 33 || e == 0;\nloop invariant s != 34 || e == 0;\nloop invariant s != 35 || e == 0;\nloop invariant s != 36 || e == 0;\nloop invariant s != 37 || e == 0;\nloop invariant s != 38 || e == 0;\nloop invariant s != 39 || e == 0;\nloop invariant s != 40 || e == 0;\nloop invariant s != 41 || e == 0;\nloop invariant s != 42 || e == 0;\nloop invariant s != 43 || e == 0;\nloop invariant s != 44 || e == 0;\nloop invariant s != 45 || e == 0;\nloop invariant s != 46 || e == 0;\nloop invariant s != 47 || e == 0;\nloop invariant s != 48 || e == 0;\nloop invariant s != 49 || e == 0;\nloop invariant s != 50 || e == 0;\nloop invariant s != 51 || e == 0;\nloop invariant s != 52 || e == 0;\nloop invariant s != 53 || e == 0;\nloop invariant s != 54 || e == 0;\nloop invariant s != 55 || e == 0;\nloop invariant s != 56 || e == 0;\nloop invariant s != 57 || e == 0;\nloop invariant s != 58 || e == 0;\nloop invariant s != 59 || e == 0;\nloop invariant s != 60 || e == 0;\nloop invariant s != 61 || e == 0;\nloop invariant s != 62 || e == 0;\nloop invariant s != 63 || e == 0;\nloop invariant s != 64 || e == 0;\nloop invariant s != 65 || e == 0;\nloop invariant s != 66 || e == 0;\nloop invariant s != 67 || e == 0;\nloop invariant s != 68 || e == 0;\nloop invariant s != 69 || e == 0;\nloop invariant s != 70 || e == 0;\nloop invariant s != 71 || e == 0;\nloop invariant s != 72 || e == 0;\nloop invariant s != 73 || e == 0;\nloop invariant s != 74 || e == 0;\n*/\n```",
            "```\n/*@\nloop invariant ( e <= 2 ) && ( s <= 5 ) && ( e >= 0 ) && ( s >= 0 );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= e <= 2;\nloop invariant 2 <= s <= 5;\nloop invariant e <= s;\nloop invariant e >= 0;\nloop invariant s >= 2;\nloop invariant (e == 0 ==> s == 2);\nloop invariant (e == 1 ==> s == 3);\nloop invariant (e == 2 ==> s == 4);\nloop invariant (e == 3 ==> s == 5);\nloop invariant e == (unknown() + (unknown() * unknown()));\nloop invariant s == (unknown() + (unknown() * unknown()));\nloop invariant !(unknown() == 0);\nloop invariant !(unknown() == 1);\nloop invariant !(unknown() == 2);\nloop invariant !(unknown() == 3);\nloop invariant !(unknown() == 4);\nloop invariant !(unknown() == 5);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= e <= 2;\nloop invariant 1 <= s <= 5;\nloop invariant e == 1 ==> s == 3;\nloop invariant e == 2 ==> s == 5;\nloop invariant e != 1 ==> s != 3;\nloop invariant e != 2 ==> s != 5;\nloop invariant s == 3 ==> e == 2;\nloop invariant s == 5 ==> e == 1;\nloop invariant s != 3 ==> e != 2;\nloop invariant s != 5 ==> e != 1;\nloop invariant s >= 1;\nloop invariant s <= 5;\nloop invariant e >= 1;\nloop invariant e <= 2;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= s <= 5;\nloop invariant (s == 2 ==> e == 0);\nloop invariant (s == 3 ==> e == 1);\nloop invariant (s == 4 ==> e == 2);\nloop invariant (s == 5 ==> !(e == 3));\nloop invariant s >= 2;\nloop invariant s <= 5;\nloop invariant e >= 0;\nloop invariant e <= 3;\nloop invariant !(s == 5 && e == 3);\nloop invariant !(s == 5 && e == 2);\nloop invariant !(s == 4 && e == 3);\nloop invariant !(s == 4 && e == 2);\nloop invariant !(s == 3 && e == 3);\nloop invariant !(s == 2 && e == 2);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= e <= 2;\nloop invariant 2 <= s <= 5;\nloop invariant !( e == 3 );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= e <= 3;\nloop invariant 2 <= s <= 5;\nloop invariant !(s == 2 && e == 0);\nloop invariant !(s == 3 && e == 1);\nloop invariant !(s == 4 && e == 2);\nloop invariant !(s == 5 && e == 3);\nloop invariant !(s == 5 && e == 2);\nloop invariant !(s == 5 && e == 1);\nloop invariant !(s == 5 && e == 0);\nloop invariant !(s == 5 && e == 4);\nloop invariant !(s == 5 && e == 5);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= s <= 5;\nloop invariant e <= 2;\nloop invariant (s == 2) ==> (e == 0);\nloop invariant (s == 3) ==> (e == 1);\nloop invariant (s == 4) ==> (e == 2);\nloop invariant !(s == 5);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= e <= 3;\nloop invariant 2 <= s <= 5;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= e <= 3;\nloop invariant 2 <= s <= 5;\nloop invariant (s == 2) ==> (e == 1);\nloop invariant (s == 3) ==> (e == 2);\nloop invariant (s == 4) ==> (e == 3);\nloop invariant (s == 5) ==> (e == 3);\nloop invariant (s == 4) ==> (e == 3);\nloop invariant (s == 5) ==> (e == 3);\nloop invariant (s == 5) ==> (e == 3);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= s <= 5;\nloop invariant e <= s;\nloop invariant e <= 3;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= e <= 2;\nloop invariant 0 <= s <= 5;\nloop invariant e != 3;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= e <= 3;\nloop invariant 2 <= s <= 5;\nloop invariant (if e == 0 then s == 2 else (if e == 1 then (if s == 3 then e == 1 else (if e == 2 then s == 4 else s == 5))));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int e, s;\n\n  e=0;\n  s=2;\n  /*@\nloop invariant i1: 0 <= e <= 3;\nloop invariant i2: 2 <= s <= 5;\n\n\n*/\nwhile (unknown()) {\n    if (s == 2){\n      if (e ==0) e=1;\n      s = 3;\n    }\n    else if (s == 3){\n      if (e ==1) e=2;\n      s=4;\n    }\n    else if (s == 4){\n      {;\n//@ assert(!( e == 3 ));\n}\n\n      s=5;\n    }\n  }\n  \nreturn;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant s == 2 ==> e >= 0;\nloop invariant s == 2 ==> e <= 1;\nloop invariant s == 3 ==> e >= 1;\nloop invariant s == 3 ==> e <= 2;\nloop invariant s == 4 ==> e >= 2;\nloop invariant s == 4 ==> e <= 3;\nloop invariant s == 5 ==> e >= 3;\nloop invariant s == 5 ==> e <= 3;\nloop invariant s == 2 ==> e ==> s;\nloop invariant s == 3 ==> e ==> s;\nloop invariant s == 4 ==> e ==> s;\nloop invariant s == 5 ==> e ==> s;\nloop invariant s == 2 ==> e <= s;\nloop invariant s == 3 ==> e <= s;\nloop invariant s == 4 ==> e <= s;\nloop invariant s == 5 ==> e <= s;\nloop invariant s == 2 ==> e <= 2;\nloop invariant s == 3 ==> e <= 3;\nloop invariant s == 4 ==> e <= 4;\nloop invariant s == 5 ==> e <= 5;\nloop invariant s == 2 ==> e >= 0;\nloop invariant s == 3 ==> e >= 1;\nloop invariant s == 4 ==> e >= 2;\nloop invariant s == 5 ==> e >= 3;\nloop invariant s == 2 ==> e == 0;\nloop invariant s == 3 ==> e == 1;\nloop invariant s == 4 ==> e == 2;\nloop invariant s == 5 ==> e == 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\nloop invariant s == 2 ==> e = 0;\nloop invariant s == 3 ==> e = 1;\nloop invariant s == 4 ==> e = 2;\nloop invariant s == 5 ==> e = 3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int e, s;\n\n  e=0;\n  s=2;\n  /*@\nloop invariant i1: s == 2 ==> e >= 0;\nloop invariant i2: s == 2 ==> e <= 1;\nloop invariant i3: s == 3 ==> e >= 1;\nloop invariant i4: s == 3 ==> e <= 2;\nloop invariant i5: s == 4 ==> e >= 2;\nloop invariant i6: s == 4 ==> e <= 3;\n\nloop invariant i8: s == 5 ==> e <= 3;\nloop invariant i9: s == 2 ==> e ==> s;\nloop invariant i10: s == 3 ==> e ==> s;\nloop invariant i11: s == 4 ==> e ==> s;\nloop invariant i12: s == 5 ==> e ==> s;\nloop invariant i13: s == 2 ==> e <= s;\nloop invariant i14: s == 3 ==> e <= s;\nloop invariant i15: s == 4 ==> e <= s;\nloop invariant i16: s == 5 ==> e <= s;\nloop invariant i17: s == 2 ==> e <= 2;\nloop invariant i18: s == 3 ==> e <= 3;\nloop invariant i19: s == 4 ==> e <= 4;\nloop invariant i20: s == 5 ==> e <= 5;\nloop invariant i21: s == 2 ==> e == 0;\nloop invariant i22: s == 3 ==> e == 1;\nloop invariant i23: s == 4 ==> e == 2;\n\n\n\n\n\n*/\nwhile (unknown()) {\n    if (s == 2){\n      if (e ==0) e=1;\n      s = 3;\n    }\n    else if (s == 3){\n      if (e ==1) e=2;\n      s=4;\n    }\n    else if (s == 4){\n      {;\n//@ assert(!( e == 3 ));\n}\n\n      s=5;\n    }\n  }\n  \nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int e, s;\n\n  e=0;\n  s=2;\n  /*@\n\n*/\nwhile (unknown()) {\n    if (s == 2){\n      if (e ==0) e=1;\n      s = 3;\n    }\n    else if (s == 3){\n      if (e ==1) e=2;\n      s=4;\n    }\n    else if (s == 4){\n      {;\n//@ assert(!( e == 3 ));\n}\n\n      s=5;\n    }\n  }\n  \nreturn;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= s <= 5;\nloop invariant 0 <= e <= 2;\nloop invariant e != 3;\nloop invariant s != 2 || e == 1;\nloop invariant s != 3 || e == 2;\nloop invariant s != 4 || e == 2;\nloop invariant s != 5 || e == 0;\nloop invariant s != 0 || e == 0;\nloop invariant s != 1 || e == 0;\nloop invariant s != 6 || e == 0;\nloop invariant s != 7 || e == 0;\nloop invariant s != 8 || e == 0;\nloop invariant s != 9 || e == 0;\nloop invariant s != 10 || e == 0;\nloop invariant s != 11 || e == 0;\nloop invariant s != 12 || e == 0;\nloop invariant s != 13 || e == 0;\nloop invariant s != 14 || e == 0;\nloop invariant s != 15 || e == 0;\nloop invariant s != 16 || e == 0;\nloop invariant s != 17 || e == 0;\nloop invariant s != 18 || e == 0;\nloop invariant s != 19 || e == 0;\nloop invariant s != 20 || e == 0;\nloop invariant s != 21 || e == 0;\nloop invariant s != 22 || e == 0;\nloop invariant s != 23 || e == 0;\nloop invariant s != 24 || e == 0;\nloop invariant s != 25 || e == 0;\nloop invariant s != 26 || e == 0;\nloop invariant s != 27 || e == 0;\nloop invariant s != 28 || e == 0;\nloop invariant s != 29 || e == 0;\nloop invariant s != 30 || e == 0;\nloop invariant s != 31 || e == 0;\nloop invariant s != 32 || e == 0;\nloop invariant s != 33 || e == 0;\nloop invariant s != 34 || e == 0;\nloop invariant s != 35 || e == 0;\nloop invariant s != 36 || e == 0;\nloop invariant s != 37 || e == 0;\nloop invariant s != 38 || e == 0;\nloop invariant s != 39 || e == 0;\nloop invariant s != 40 || e == 0;\nloop invariant s != 41 || e == 0;\nloop invariant s != 42 || e == 0;\nloop invariant s != 43 || e == 0;\nloop invariant s != 44 || e == 0;\nloop invariant s != 45 || e == 0;\nloop invariant s != 46 || e == 0;\nloop invariant s != 47 || e == 0;\nloop invariant s != 48 || e == 0;\nloop invariant s != 49 || e == 0;\nloop invariant s != 50 || e == 0;\nloop invariant s != 51 || e == 0;\nloop invariant s != 52 || e == 0;\nloop invariant s != 53 || e == 0;\nloop invariant s != 54 || e == 0;\nloop invariant s != 55 || e == 0;\nloop invariant s != 56 || e == 0;\nloop invariant s != 57 || e == 0;\nloop invariant s != 58 || e == 0;\nloop invariant s != 59 || e == 0;\nloop invariant s != 60 || e == 0;\nloop invariant s != 61 || e == 0;\nloop invariant s != 62 || e == 0;\nloop invariant s != 63 || e == 0;\nloop invariant s != 64 || e == 0;\nloop invariant s != 65 || e == 0;\nloop invariant s != 66 || e == 0;\nloop invariant s != 67 || e == 0;\nloop invariant s != 68 || e == 0;\nloop invariant s != 69 || e == 0;\nloop invariant s != 70 || e == 0;\nloop invariant s != 71 || e == 0;\nloop invariant s != 72 || e == 0;\nloop invariant s != 73 || e == 0;\nloop invariant s != 74 || e == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int e, s;\n\n  e=0;\n  s=2;\n  /*@\nloop invariant i1: 0 <= s <= 5;\nloop invariant i2: 0 <= e <= 2;\nloop invariant i3: e != 3;\n\n\n\n\nloop invariant i8: s != 0 || e == 0;\nloop invariant i9: s != 1 || e == 0;\nloop invariant i10: s != 6 || e == 0;\nloop invariant i11: s != 7 || e == 0;\nloop invariant i12: s != 8 || e == 0;\nloop invariant i13: s != 9 || e == 0;\nloop invariant i14: s != 10 || e == 0;\nloop invariant i15: s != 11 || e == 0;\nloop invariant i16: s != 12 || e == 0;\nloop invariant i17: s != 13 || e == 0;\nloop invariant i18: s != 14 || e == 0;\nloop invariant i19: s != 15 || e == 0;\nloop invariant i20: s != 16 || e == 0;\nloop invariant i21: s != 17 || e == 0;\nloop invariant i22: s != 18 || e == 0;\nloop invariant i23: s != 19 || e == 0;\nloop invariant i24: s != 20 || e == 0;\nloop invariant i25: s != 21 || e == 0;\nloop invariant i26: s != 22 || e == 0;\nloop invariant i27: s != 23 || e == 0;\nloop invariant i28: s != 24 || e == 0;\nloop invariant i29: s != 25 || e == 0;\nloop invariant i30: s != 26 || e == 0;\nloop invariant i31: s != 27 || e == 0;\nloop invariant i32: s != 28 || e == 0;\nloop invariant i33: s != 29 || e == 0;\nloop invariant i34: s != 30 || e == 0;\nloop invariant i35: s != 31 || e == 0;\nloop invariant i36: s != 32 || e == 0;\nloop invariant i37: s != 33 || e == 0;\nloop invariant i38: s != 34 || e == 0;\nloop invariant i39: s != 35 || e == 0;\nloop invariant i40: s != 36 || e == 0;\nloop invariant i41: s != 37 || e == 0;\nloop invariant i42: s != 38 || e == 0;\nloop invariant i43: s != 39 || e == 0;\nloop invariant i44: s != 40 || e == 0;\nloop invariant i45: s != 41 || e == 0;\nloop invariant i46: s != 42 || e == 0;\nloop invariant i47: s != 43 || e == 0;\nloop invariant i48: s != 44 || e == 0;\nloop invariant i49: s != 45 || e == 0;\nloop invariant i50: s != 46 || e == 0;\nloop invariant i51: s != 47 || e == 0;\nloop invariant i52: s != 48 || e == 0;\nloop invariant i53: s != 49 || e == 0;\nloop invariant i54: s != 50 || e == 0;\nloop invariant i55: s != 51 || e == 0;\nloop invariant i56: s != 52 || e == 0;\nloop invariant i57: s != 53 || e == 0;\nloop invariant i58: s != 54 || e == 0;\nloop invariant i59: s != 55 || e == 0;\nloop invariant i60: s != 56 || e == 0;\nloop invariant i61: s != 57 || e == 0;\nloop invariant i62: s != 58 || e == 0;\nloop invariant i63: s != 59 || e == 0;\nloop invariant i64: s != 60 || e == 0;\nloop invariant i65: s != 61 || e == 0;\nloop invariant i66: s != 62 || e == 0;\nloop invariant i67: s != 63 || e == 0;\nloop invariant i68: s != 64 || e == 0;\nloop invariant i69: s != 65 || e == 0;\nloop invariant i70: s != 66 || e == 0;\nloop invariant i71: s != 67 || e == 0;\nloop invariant i72: s != 68 || e == 0;\nloop invariant i73: s != 69 || e == 0;\nloop invariant i74: s != 70 || e == 0;\nloop invariant i75: s != 71 || e == 0;\nloop invariant i76: s != 72 || e == 0;\nloop invariant i77: s != 73 || e == 0;\nloop invariant i78: s != 74 || e == 0;\n*/\nwhile (unknown()) {\n    if (s == 2){\n      if (e ==0) e=1;\n      s = 3;\n    }\n    else if (s == 3){\n      if (e ==1) e=2;\n      s=4;\n    }\n    else if (s == 4){\n      {;\n//@ assert(!( e == 3 ));\n}\n\n      s=5;\n    }\n  }\n  \nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant ( e <= 2 ) && ( s <= 5 ) && ( e >= 0 ) && ( s >= 0 );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int e, s;\n\n  e=0;\n  s=2;\n  /*@\nloop invariant i1: ( e <= 2 ) && ( s <= 5 ) && ( e >= 0 ) && ( s >= 0 );\n*/\nwhile (unknown()) {\n    if (s == 2){\n      if (e ==0) e=1;\n      s = 3;\n    }\n    else if (s == 3){\n      if (e ==1) e=2;\n      s=4;\n    }\n    else if (s == 4){\n      {;\n//@ assert(!( e == 3 ));\n}\n\n      s=5;\n    }\n  }\n  \nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= e <= 2;\nloop invariant 2 <= s <= 5;\nloop invariant e <= s;\nloop invariant e >= 0;\nloop invariant s >= 2;\nloop invariant (e == 0 ==> s == 2);\nloop invariant (e == 1 ==> s == 3);\nloop invariant (e == 2 ==> s == 4);\nloop invariant (e == 3 ==> s == 5);\nloop invariant e == (unknown() + (unknown() * unknown()));\nloop invariant s == (unknown() + (unknown() * unknown()));\nloop invariant !(unknown() == 0);\nloop invariant !(unknown() == 1);\nloop invariant !(unknown() == 2);\nloop invariant !(unknown() == 3);\nloop invariant !(unknown() == 4);\nloop invariant !(unknown() == 5);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int e, s;\n\n  e=0;\n  s=2;\n  /*@\nloop invariant i1: 0 <= e <= 2;\nloop invariant i2: 2 <= s <= 5;\nloop invariant i3: e <= s;\nloop invariant i4: e >= 0;\nloop invariant i5: s >= 2;\nloop invariant i6: (e == 0 ==> s == 2);\nloop invariant i7: (e == 1 ==> s == 3);\n\nloop invariant i9: (e == 3 ==> s == 5);\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    if (s == 2){\n      if (e ==0) e=1;\n      s = 3;\n    }\n    else if (s == 3){\n      if (e ==1) e=2;\n      s=4;\n    }\n    else if (s == 4){\n      {;\n//@ assert(!( e == 3 ));\n}\n\n      s=5;\n    }\n  }\n  \nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 1 <= e <= 2;\nloop invariant 1 <= s <= 5;\nloop invariant e == 1 ==> s == 3;\nloop invariant e == 2 ==> s == 5;\nloop invariant e != 1 ==> s != 3;\nloop invariant e != 2 ==> s != 5;\nloop invariant s == 3 ==> e == 2;\nloop invariant s == 5 ==> e == 1;\nloop invariant s != 3 ==> e != 2;\nloop invariant s != 5 ==> e != 1;\nloop invariant s >= 1;\nloop invariant s <= 5;\nloop invariant e >= 1;\nloop invariant e <= 2;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\nloop invariant s <= 4;\nloop invariant s >= 1;\nloop invariant e <= 2;\nloop invariant e >= 1;\nloop invariant e != 3 ==> s != 5;\nloop invariant s != 5 ==> e != 3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int e, s;\n\n  e=0;\n  s=2;\n  /*@\n\nloop invariant i2: 1 <= s <= 5;\nloop invariant i3: e == 1 ==> s == 3;\n\n\n\n\n\n\n\nloop invariant i11: s >= 1;\nloop invariant i12: s <= 5;\n\nloop invariant i14: e <= 2;\n\nloop invariant i16: s != 5 ==> e != 3;\n\n*/\nwhile (unknown()) {\n    if (s == 2){\n      if (e ==0) e=1;\n      s = 3;\n    }\n    else if (s == 3){\n      if (e ==1) e=2;\n      s=4;\n    }\n    else if (s == 4){\n      {;\n//@ assert(!( e == 3 ));\n}\n\n      s=5;\n    }\n  }\n  \nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= s <= 5;\nloop invariant (s == 2 ==> e == 0);\nloop invariant (s == 3 ==> e == 1);\nloop invariant (s == 4 ==> e == 2);\nloop invariant (s == 5 ==> !(e == 3));\nloop invariant s >= 2;\nloop invariant s <= 5;\nloop invariant e >= 0;\nloop invariant e <= 3;\nloop invariant !(s == 5 && e == 3);\nloop invariant !(s == 5 && e == 2);\nloop invariant !(s == 4 && e == 3);\nloop invariant !(s == 4 && e == 2);\nloop invariant !(s == 3 && e == 3);\nloop invariant !(s == 2 && e == 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int e, s;\n\n  e=0;\n  s=2;\n  /*@\nloop invariant i1: 0 <= s <= 5;\nloop invariant i2: (s == 2 ==> e == 0);\nloop invariant i3: (s == 3 ==> e == 1);\nloop invariant i4: (s == 4 ==> e == 2);\nloop invariant i5: (s == 5 ==> !(e == 3));\nloop invariant i6: s >= 2;\nloop invariant i7: s <= 5;\nloop invariant i8: e >= 0;\nloop invariant i9: e <= 3;\nloop invariant i10: !(s == 5 && e == 3);\n\nloop invariant i12: !(s == 4 && e == 3);\n\nloop invariant i14: !(s == 3 && e == 3);\nloop invariant i15: !(s == 2 && e == 2);\n*/\nwhile (unknown()) {\n    if (s == 2){\n      if (e ==0) e=1;\n      s = 3;\n    }\n    else if (s == 3){\n      if (e ==1) e=2;\n      s=4;\n    }\n    else if (s == 4){\n      {;\n//@ assert(!( e == 3 ));\n}\n\n      s=5;\n    }\n  }\n  \nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= e <= 2;\nloop invariant 2 <= s <= 5;\nloop invariant !( e == 3 );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int e, s;\n\n  e=0;\n  s=2;\n  /*@\n\nloop invariant i2: 2 <= s <= 5;\nloop invariant i3: !( e == 3 );\n*/\nwhile (unknown()) {\n    if (s == 2){\n      if (e ==0) e=1;\n      s = 3;\n    }\n    else if (s == 3){\n      if (e ==1) e=2;\n      s=4;\n    }\n    else if (s == 4){\n      {;\n//@ assert(!( e == 3 ));\n}\n\n      s=5;\n    }\n  }\n  \nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= e <= 3;\nloop invariant 2 <= s <= 5;\nloop invariant !(s == 2 && e == 0);\nloop invariant !(s == 3 && e == 1);\nloop invariant !(s == 4 && e == 2);\nloop invariant !(s == 5 && e == 3);\nloop invariant !(s == 5 && e == 2);\nloop invariant !(s == 5 && e == 1);\nloop invariant !(s == 5 && e == 0);\nloop invariant !(s == 5 && e == 4);\nloop invariant !(s == 5 && e == 5);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int e, s;\n\n  e=0;\n  s=2;\n  /*@\nloop invariant i1: 0 <= e <= 3;\nloop invariant i2: 2 <= s <= 5;\n\n\n\nloop invariant i6: !(s == 5 && e == 3);\n\n\n\nloop invariant i10: !(s == 5 && e == 4);\nloop invariant i11: !(s == 5 && e == 5);\n*/\nwhile (unknown()) {\n    if (s == 2){\n      if (e ==0) e=1;\n      s = 3;\n    }\n    else if (s == 3){\n      if (e ==1) e=2;\n      s=4;\n    }\n    else if (s == 4){\n      {;\n//@ assert(!( e == 3 ));\n}\n\n      s=5;\n    }\n  }\n  \nreturn;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= s <= 5;\nloop invariant e <= 2;\nloop invariant (s == 2) ==> (e == 0);\nloop invariant (s == 3) ==> (e == 1);\nloop invariant (s == 4) ==> (e == 2);\nloop invariant !(s == 5);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int e, s;\n\n  e=0;\n  s=2;\n  /*@\nloop invariant i1: 0 <= s <= 5;\nloop invariant i2: e <= 2;\nloop invariant i3: (s == 2) ==> (e == 0);\nloop invariant i4: (s == 3) ==> (e == 1);\nloop invariant i5: (s == 4) ==> (e == 2);\n\n*/\nwhile (unknown()) {\n    if (s == 2){\n      if (e ==0) e=1;\n      s = 3;\n    }\n    else if (s == 3){\n      if (e ==1) e=2;\n      s=4;\n    }\n    else if (s == 4){\n      {;\n//@ assert(!( e == 3 ));\n}\n\n      s=5;\n    }\n  }\n  \nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= e <= 3;\nloop invariant 2 <= s <= 5;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int e, s;\n\n  e=0;\n  s=2;\n  /*@\nloop invariant i1: 0 <= e <= 3;\nloop invariant i2: 2 <= s <= 5;\n*/\nwhile (unknown()) {\n    if (s == 2){\n      if (e ==0) e=1;\n      s = 3;\n    }\n    else if (s == 3){\n      if (e ==1) e=2;\n      s=4;\n    }\n    else if (s == 4){\n      {;\n//@ assert(!( e == 3 ));\n}\n\n      s=5;\n    }\n  }\n  \nreturn;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= e <= 3;\nloop invariant 2 <= s <= 5;\nloop invariant (s == 2) ==> (e == 1);\nloop invariant (s == 3) ==> (e == 2);\nloop invariant (s == 4) ==> (e == 3);\nloop invariant (s == 5) ==> (e == 3);\nloop invariant (s == 4) ==> (e == 3);\nloop invariant (s == 5) ==> (e == 3);\nloop invariant (s == 5) ==> (e == 3);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int e, s;\n\n  e=0;\n  s=2;\n  /*@\nloop invariant i1: 0 <= e <= 3;\nloop invariant i2: 2 <= s <= 5;\n\n\n\n\n*/\nwhile (unknown()) {\n    if (s == 2){\n      if (e ==0) e=1;\n      s = 3;\n    }\n    else if (s == 3){\n      if (e ==1) e=2;\n      s=4;\n    }\n    else if (s == 4){\n      {;\n//@ assert(!( e == 3 ));\n}\n\n      s=5;\n    }\n  }\n  \nreturn;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= s <= 5;\nloop invariant e <= s;\nloop invariant e <= 3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int e, s;\n\n  e=0;\n  s=2;\n  /*@\nloop invariant i1: 0 <= s <= 5;\nloop invariant i2: e <= s;\nloop invariant i3: e <= 3;\n*/\nwhile (unknown()) {\n    if (s == 2){\n      if (e ==0) e=1;\n      s = 3;\n    }\n    else if (s == 3){\n      if (e ==1) e=2;\n      s=4;\n    }\n    else if (s == 4){\n      {;\n//@ assert(!( e == 3 ));\n}\n\n      s=5;\n    }\n  }\n  \nreturn;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= e <= 2;\nloop invariant 0 <= s <= 5;\nloop invariant e != 3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int e, s;\n\n  e=0;\n  s=2;\n  /*@\nloop invariant i1: 0 <= e <= 2;\nloop invariant i2: 0 <= s <= 5;\nloop invariant i3: e != 3;\n*/\nwhile (unknown()) {\n    if (s == 2){\n      if (e ==0) e=1;\n      s = 3;\n    }\n    else if (s == 3){\n      if (e ==1) e=2;\n      s=4;\n    }\n    else if (s == 4){\n      {;\n//@ assert(!( e == 3 ));\n}\n\n      s=5;\n    }\n  }\n  \nreturn;\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 22: unexpected token 'e'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int e, s;\n\n  e=0;\n  s=2;\n  /*@\nloop invariant i1: 0 <= e <= 3;\nloop invariant i2: 2 <= s <= 5;\nloop invariant i3: (if e == 0 then s == 2 else (if e == 1 then (if s == 3 then e == 1 else (if e == 2 then s == 4 else s == 5))));\nloop invariant i4: (if s == 2 then e == 0 else (if s == 3 then e == 1 else (if s == 4 then e == 2 else e == 3)));\nloop invariant i5: s == 2 ==> e >= 0;\nloop invariant i6: s == 2 ==> e <= 1;\nloop invariant i7: s == 3 ==> e >= 1;\nloop invariant i8: s == 3 ==> e <= 2;\nloop invariant i9: s == 4 ==> e >= 2;\nloop invariant i10: s == 4 ==> e <= 3;\nloop invariant i11: s == 5 ==> e >= 3;\nloop invariant i12: s == 5 ==> e <= 3;\nloop invariant i13: s == 2 ==> e ==> s;\nloop invariant i14: s == 3 ==> e ==> s;\nloop invariant i15: s == 4 ==> e ==> s;\nloop invariant i16: s == 5 ==> e ==> s;\nloop invariant i17: s == 2 ==> e <= s;\nloop invariant i18: s == 3 ==> e <= s;\nloop invariant i19: s == 4 ==> e <= s;\nloop invariant i20: s == 5 ==> e <= s;\nloop invariant i21: s == 2 ==> e <= 2;\nloop invariant i22: s == 3 ==> e <= 3;\nloop invariant i23: s == 4 ==> e <= 4;\nloop invariant i24: s == 5 ==> e <= 5;\nloop invariant i25: s == 2 ==> e == 0;\nloop invariant i26: s == 3 ==> e == 1;\nloop invariant i27: s == 4 ==> e == 2;\nloop invariant i28: s == 5 ==> e == 3;\nloop invariant i29: s == 2 ==> e = 0;\nloop invariant i30: s == 3 ==> e = 1;\nloop invariant i31: s == 4 ==> e = 2;\nloop invariant i32: s == 5 ==> e = 3;\nloop invariant i33: 0 <= s <= 5;\nloop invariant i34: 0 <= e <= 2;\nloop invariant i35: e != 3;\nloop invariant i36: s != 2 || e == 1;\nloop invariant i37: s != 3 || e == 2;\nloop invariant i38: s != 4 || e == 2;\nloop invariant i39: s != 5 || e == 0;\nloop invariant i40: s != 0 || e == 0;\nloop invariant i41: s != 1 || e == 0;\nloop invariant i42: s != 6 || e == 0;\nloop invariant i43: s != 7 || e == 0;\nloop invariant i44: s != 8 || e == 0;\nloop invariant i45: s != 9 || e == 0;\nloop invariant i46: s != 10 || e == 0;\nloop invariant i47: s != 11 || e == 0;\nloop invariant i48: s != 12 || e == 0;\nloop invariant i49: s != 13 || e == 0;\nloop invariant i50: s != 14 || e == 0;\nloop invariant i51: s != 15 || e == 0;\nloop invariant i52: s != 16 || e == 0;\nloop invariant i53: s != 17 || e == 0;\nloop invariant i54: s != 18 || e == 0;\nloop invariant i55: s != 19 || e == 0;\nloop invariant i56: s != 20 || e == 0;\nloop invariant i57: s != 21 || e == 0;\nloop invariant i58: s != 22 || e == 0;\nloop invariant i59: s != 23 || e == 0;\nloop invariant i60: s != 24 || e == 0;\nloop invariant i61: s != 25 || e == 0;\nloop invariant i62: s != 26 || e == 0;\nloop invariant i63: s != 27 || e == 0;\nloop invariant i64: s != 28 || e == 0;\nloop invariant i65: s != 29 || e == 0;\nloop invariant i66: s != 30 || e == 0;\nloop invariant i67: s != 31 || e == 0;\nloop invariant i68: s != 32 || e == 0;\nloop invariant i69: s != 33 || e == 0;\nloop invariant i70: s != 34 || e == 0;\nloop invariant i71: s != 35 || e == 0;\nloop invariant i72: s != 36 || e == 0;\nloop invariant i73: s != 37 || e == 0;\nloop invariant i74: s != 38 || e == 0;\nloop invariant i75: s != 39 || e == 0;\nloop invariant i76: s != 40 || e == 0;\nloop invariant i77: s != 41 || e == 0;\nloop invariant i78: s != 42 || e == 0;\nloop invariant i79: s != 43 || e == 0;\nloop invariant i80: s != 44 || e == 0;\nloop invariant i81: s != 45 || e == 0;\nloop invariant i82: s != 46 || e == 0;\nloop invariant i83: s != 47 || e == 0;\nloop invariant i84: s != 48 || e == 0;\nloop invariant i85: s != 49 || e == 0;\nloop invariant i86: s != 50 || e == 0;\nloop invariant i87: s != 51 || e == 0;\nloop invariant i88: s != 52 || e == 0;\nloop invariant i89: s != 53 || e == 0;\nloop invariant i90: s != 54 || e == 0;\nloop invariant i91: s != 55 || e == 0;\nloop invariant i92: s != 56 || e == 0;\nloop invariant i93: s != 57 || e == 0;\nloop invariant i94: s != 58 || e == 0;\nloop invariant i95: s != 59 || e == 0;\nloop invariant i96: s != 60 || e == 0;\nloop invariant i97: s != 61 || e == 0;\nloop invariant i98: s != 62 || e == 0;\nloop invariant i99: s != 63 || e == 0;\nloop invariant i100: s != 64 || e == 0;\nloop invariant i101: s != 65 || e == 0;\nloop invariant i102: s != 66 || e == 0;\nloop invariant i103: s != 67 || e == 0;\nloop invariant i104: s != 68 || e == 0;\nloop invariant i105: s != 69 || e == 0;\nloop invariant i106: s != 70 || e == 0;\nloop invariant i107: s != 71 || e == 0;\nloop invariant i108: s != 72 || e == 0;\nloop invariant i109: s != 73 || e == 0;\nloop invariant i110: s != 74 || e == 0;\nloop invariant i111: ( e <= 2 ) && ( s <= 5 ) && ( e >= 0 ) && ( s >= 0 );\nloop invariant i112: e <= s;\nloop invariant i113: e >= 0;\nloop invariant i114: s >= 2;\nloop invariant i115: (e == 0 ==> s == 2);\nloop invariant i116: (e == 1 ==> s == 3);\nloop invariant i117: (e == 2 ==> s == 4);\nloop invariant i118: (e == 3 ==> s == 5);\nloop invariant i119: e == (unknown() + (unknown() * unknown()));\nloop invariant i120: s == (unknown() + (unknown() * unknown()));\nloop invariant i121: !(unknown() == 0);\nloop invariant i122: !(unknown() == 1);\nloop invariant i123: !(unknown() == 2);\nloop invariant i124: !(unknown() == 3);\nloop invariant i125: !(unknown() == 4);\nloop invariant i126: !(unknown() == 5);\nloop invariant i127: 1 <= e <= 2;\nloop invariant i128: 1 <= s <= 5;\nloop invariant i129: e == 1 ==> s == 3;\nloop invariant i130: e == 2 ==> s == 5;\nloop invariant i131: e != 1 ==> s != 3;\nloop invariant i132: e != 2 ==> s != 5;\nloop invariant i133: s == 3 ==> e == 2;\nloop invariant i134: s == 5 ==> e == 1;\nloop invariant i135: s != 3 ==> e != 2;\nloop invariant i136: s != 5 ==> e != 1;\nloop invariant i137: s >= 1;\nloop invariant i138: s <= 5;\nloop invariant i139: e >= 1;\nloop invariant i140: e <= 2;\nloop invariant i141: e != 3 ==> s != 5;\nloop invariant i142: s != 5 ==> e != 3;\nloop invariant i143: s <= 4;\nloop invariant i144: (s == 2 ==> e == 0);\nloop invariant i145: (s == 3 ==> e == 1);\nloop invariant i146: (s == 4 ==> e == 2);\nloop invariant i147: (s == 5 ==> !(e == 3));\nloop invariant i148: e <= 3;\nloop invariant i149: !(s == 5 && e == 3);\nloop invariant i150: !(s == 5 && e == 2);\nloop invariant i151: !(s == 4 && e == 3);\nloop invariant i152: !(s == 4 && e == 2);\nloop invariant i153: !(s == 3 && e == 3);\nloop invariant i154: !(s == 2 && e == 2);\nloop invariant i155: !( e == 3 );\nloop invariant i156: !(s == 2 && e == 0);\nloop invariant i157: !(s == 3 && e == 1);\nloop invariant i158: !(s == 5 && e == 1);\nloop invariant i159: !(s == 5 && e == 0);\nloop invariant i160: !(s == 5 && e == 4);\nloop invariant i161: !(s == 5 && e == 5);\nloop invariant i162: (s == 2) ==> (e == 0);\nloop invariant i163: (s == 3) ==> (e == 1);\nloop invariant i164: (s == 4) ==> (e == 2);\nloop invariant i165: !(s == 5);\nloop invariant i166: (s == 2) ==> (e == 1);\nloop invariant i167: (s == 3) ==> (e == 2);\nloop invariant i168: (s == 4) ==> (e == 3);\nloop invariant i169: (s == 5) ==> (e == 3);\n*/\nwhile (unknown()) {\n    if (s == 2){\n      if (e ==0) e=1;\n      s = 3;\n    }\n    else if (s == 3){\n      if (e ==1) e=2;\n      s=4;\n    }\n    else if (s == 4){\n      {;\n//@ assert(!( e == 3 ));\n}\n\n      s=5;\n    }\n  }\n  \nreturn;\n\n}",
        "combined_annotation_num_solver_calls": 39,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int e, s;\n\n  e=0;\n  s=2;\n  /*@\nloop invariant i1: 0 <= e <= 3;\nloop invariant i2: 2 <= s <= 5;\n\n\nloop invariant i5: s == 2 ==> e >= 0;\nloop invariant i6: s == 2 ==> e <= 1;\nloop invariant i7: s == 3 ==> e >= 1;\nloop invariant i8: s == 3 ==> e <= 2;\nloop invariant i9: s == 4 ==> e >= 2;\nloop invariant i10: s == 4 ==> e <= 3;\n\nloop invariant i12: s == 5 ==> e <= 3;\nloop invariant i13: s == 2 ==> e ==> s;\nloop invariant i14: s == 3 ==> e ==> s;\nloop invariant i15: s == 4 ==> e ==> s;\nloop invariant i16: s == 5 ==> e ==> s;\nloop invariant i17: s == 2 ==> e <= s;\nloop invariant i18: s == 3 ==> e <= s;\nloop invariant i19: s == 4 ==> e <= s;\nloop invariant i20: s == 5 ==> e <= s;\nloop invariant i21: s == 2 ==> e <= 2;\nloop invariant i22: s == 3 ==> e <= 3;\nloop invariant i23: s == 4 ==> e <= 4;\nloop invariant i24: s == 5 ==> e <= 5;\nloop invariant i25: s == 2 ==> e == 0;\nloop invariant i26: s == 3 ==> e == 1;\nloop invariant i27: s == 4 ==> e == 2;\n\n\n\n\n\nloop invariant i33: 0 <= s <= 5;\nloop invariant i34: 0 <= e <= 2;\nloop invariant i35: e != 3;\n\n\nloop invariant i38: s != 4 || e == 2;\n\nloop invariant i40: s != 0 || e == 0;\nloop invariant i41: s != 1 || e == 0;\nloop invariant i42: s != 6 || e == 0;\nloop invariant i43: s != 7 || e == 0;\nloop invariant i44: s != 8 || e == 0;\nloop invariant i45: s != 9 || e == 0;\nloop invariant i46: s != 10 || e == 0;\nloop invariant i47: s != 11 || e == 0;\nloop invariant i48: s != 12 || e == 0;\nloop invariant i49: s != 13 || e == 0;\nloop invariant i50: s != 14 || e == 0;\nloop invariant i51: s != 15 || e == 0;\nloop invariant i52: s != 16 || e == 0;\nloop invariant i53: s != 17 || e == 0;\nloop invariant i54: s != 18 || e == 0;\nloop invariant i55: s != 19 || e == 0;\nloop invariant i56: s != 20 || e == 0;\nloop invariant i57: s != 21 || e == 0;\nloop invariant i58: s != 22 || e == 0;\nloop invariant i59: s != 23 || e == 0;\nloop invariant i60: s != 24 || e == 0;\nloop invariant i61: s != 25 || e == 0;\nloop invariant i62: s != 26 || e == 0;\nloop invariant i63: s != 27 || e == 0;\nloop invariant i64: s != 28 || e == 0;\nloop invariant i65: s != 29 || e == 0;\nloop invariant i66: s != 30 || e == 0;\nloop invariant i67: s != 31 || e == 0;\nloop invariant i68: s != 32 || e == 0;\nloop invariant i69: s != 33 || e == 0;\nloop invariant i70: s != 34 || e == 0;\nloop invariant i71: s != 35 || e == 0;\nloop invariant i72: s != 36 || e == 0;\nloop invariant i73: s != 37 || e == 0;\nloop invariant i74: s != 38 || e == 0;\nloop invariant i75: s != 39 || e == 0;\nloop invariant i76: s != 40 || e == 0;\nloop invariant i77: s != 41 || e == 0;\nloop invariant i78: s != 42 || e == 0;\nloop invariant i79: s != 43 || e == 0;\nloop invariant i80: s != 44 || e == 0;\nloop invariant i81: s != 45 || e == 0;\nloop invariant i82: s != 46 || e == 0;\nloop invariant i83: s != 47 || e == 0;\nloop invariant i84: s != 48 || e == 0;\nloop invariant i85: s != 49 || e == 0;\nloop invariant i86: s != 50 || e == 0;\nloop invariant i87: s != 51 || e == 0;\nloop invariant i88: s != 52 || e == 0;\nloop invariant i89: s != 53 || e == 0;\nloop invariant i90: s != 54 || e == 0;\nloop invariant i91: s != 55 || e == 0;\nloop invariant i92: s != 56 || e == 0;\nloop invariant i93: s != 57 || e == 0;\nloop invariant i94: s != 58 || e == 0;\nloop invariant i95: s != 59 || e == 0;\nloop invariant i96: s != 60 || e == 0;\nloop invariant i97: s != 61 || e == 0;\nloop invariant i98: s != 62 || e == 0;\nloop invariant i99: s != 63 || e == 0;\nloop invariant i100: s != 64 || e == 0;\nloop invariant i101: s != 65 || e == 0;\nloop invariant i102: s != 66 || e == 0;\nloop invariant i103: s != 67 || e == 0;\nloop invariant i104: s != 68 || e == 0;\nloop invariant i105: s != 69 || e == 0;\nloop invariant i106: s != 70 || e == 0;\nloop invariant i107: s != 71 || e == 0;\nloop invariant i108: s != 72 || e == 0;\nloop invariant i109: s != 73 || e == 0;\nloop invariant i110: s != 74 || e == 0;\nloop invariant i111: ( e <= 2 ) && ( s <= 5 ) && ( e >= 0 ) && ( s >= 0 );\nloop invariant i112: e <= s;\nloop invariant i113: e >= 0;\nloop invariant i114: s >= 2;\nloop invariant i115: (e == 0 ==> s == 2);\nloop invariant i116: (e == 1 ==> s == 3);\n\nloop invariant i118: (e == 3 ==> s == 5);\n\n\n\n\n\n\n\n\n\nloop invariant i128: 1 <= s <= 5;\nloop invariant i129: e == 1 ==> s == 3;\n\nloop invariant i131: e != 1 ==> s != 3;\nloop invariant i132: e != 2 ==> s != 5;\n\n\n\n\nloop invariant i137: s >= 1;\nloop invariant i138: s <= 5;\n\nloop invariant i140: e <= 2;\n\nloop invariant i142: s != 5 ==> e != 3;\n\nloop invariant i144: (s == 2 ==> e == 0);\nloop invariant i145: (s == 3 ==> e == 1);\nloop invariant i146: (s == 4 ==> e == 2);\nloop invariant i147: (s == 5 ==> !(e == 3));\nloop invariant i148: e <= 3;\nloop invariant i149: !(s == 5 && e == 3);\n\nloop invariant i151: !(s == 4 && e == 3);\n\nloop invariant i153: !(s == 3 && e == 3);\nloop invariant i154: !(s == 2 && e == 2);\nloop invariant i155: !( e == 3 );\n\n\nloop invariant i158: !(s == 5 && e == 1);\nloop invariant i159: !(s == 5 && e == 0);\nloop invariant i160: !(s == 5 && e == 4);\nloop invariant i161: !(s == 5 && e == 5);\nloop invariant i162: (s == 2) ==> (e == 0);\nloop invariant i163: (s == 3) ==> (e == 1);\nloop invariant i164: (s == 4) ==> (e == 2);\n\n\n\n\n\n*/\nwhile (unknown()) {\n    if (s == 2){\n      if (e ==0) e=1;\n      s = 3;\n    }\n    else if (s == 3){\n      if (e ==1) e=2;\n      s=4;\n    }\n    else if (s == 4){\n      {;\n//@ assert(!( e == 3 ));\n}\n\n      s=5;\n    }\n  }\n  \nreturn;\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c"
        ],
        "failure": [],
        "skipped": [],
        "total": 13,
        "success_count": 13,
        "failure_count": 0,
        "success_rate": 1.0
    }
}