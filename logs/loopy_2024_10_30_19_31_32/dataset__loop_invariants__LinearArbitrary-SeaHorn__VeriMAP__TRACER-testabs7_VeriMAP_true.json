{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nint main(int n){\n  int i;\n\n  i=0;n=10;\n  while (i < n){ i++; }\n\n  {;\n//@ assert(!( i>10 ));\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant i = n-1;\n*/\n```",
            "```\n/*@\nloop invariant i >= 0;\nloop invariant i <= 10;\nloop invariant i <= 10 ==> !(i > 10);\nloop invariant i >= 0 ==> !(i < 0);\nloop invariant i >= 0 ==> !(i < 0) ==> i == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant i < n ==> i < 10;\nloop invariant i < n ==> !(i > 10);\nloop invariant i >= n ==> i >= 10;\nloop invariant i >= n ==> !(i < 10);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant i == n;\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
            "```\n/*@\nloop invariant x = i;\nloop invariant 0 <= i <= 10;\nloop invariant i >= 0;\nloop invariant i <= 10;\nloop invariant i == 0;\nloop invariant i == 1;\nloop invariant i == 2;\nloop invariant i == 3;\nloop invariant i == 4;\nloop invariant i == 5;\nloop invariant i == 6;\nloop invariant i == 7;\nloop invariant i == 8;\nloop invariant i == 9;\nloop invariant i == 10;\nloop invariant i == 11;\nloop invariant i == 12;\nloop invariant i == 13;\nloop invariant i == 14;\nloop invariant i == 15;\nloop invariant i == 16;\nloop invariant i == 17;\nloop invariant i == 18;\nloop invariant i == 19;\nloop invariant i == 20;\nloop invariant i == 21;\nloop invariant i == 22;\nloop invariant i == 23;\nloop invariant i == 24;\nloop invariant i == 25;\nloop invariant i == 26;\nloop invariant i == 27;\nloop invariant i == 28;\nloop invariant i == 29;\nloop invariant i == 30;\nloop invariant i == 31;\nloop invariant i == 32;\nloop invariant i == 33;\nloop invariant i == 34;\nloop invariant i == 35;\nloop invariant i == 36;\nloop invariant i == 37;\nloop invariant i == 38;\nloop invariant i == 39;\nloop invariant i == 40;\nloop invariant i == 41;\nloop invariant i == 42;\nloop invariant i == 43;\nloop invariant i == 44;\nloop invariant i == 45;\nloop invariant i == 46;\nloop invariant i == 47;\nloop invariant i == 48;\nloop invariant i == 49;\nloop invariant i == 50;\nloop invariant i == 51;\nloop invariant i == 52;\nloop invariant i == 53;\nloop invariant i == 54;\nloop invariant i == 55;\nloop invariant i == 56;\nloop invariant i == 57;\nloop invariant i == 58;\nloop invariant i == 59;\nloop invariant i == 60;\nloop invariant i == 61;\nloop invariant i == 62;\nloop invariant i == 63;\nloop invariant i == 64;\nloop invariant i == 65;\nloop invariant i == 66;\nloop invariant i == 67;\nloop invariant i == 68;\nloop invariant i == 69;\nloop invariant i == 70;\nloop invariant i == 71;\nloop invariant i == 72;\nloop invariant i == 73;\nloop invariant i == 74;\nloop invariant i == 75;\nloop invariant i == 76;\nloop invariant i == 77;\nloop invariant i == 78;\nloop invariant i == 79;\nloop invariant i == 80;\nloop invariant i == 81;\nloop invariant i == 82;\nloop invariant i == 83;\nloop invariant i == 84;\nloop invariant i == 85;\nloop invariant i == 86;\nloop invariant i == 87;\nloop invariant i == 88;\nloop invariant i == 89;\nloop invariant i == 90;\nloop invariant i == 91;\nloop invariant i == 92;\nloop invariant i == 93;\nloop invariant i == 94;\nloop invariant i == 95;\nloop invariant i == 96;\nloop invariant i == 97;\nloop invariant i == 98;\nloop invariant i == 99;\n*/\n```",
            "```\n/*@\nloop invariant i >= 0;\nloop invariant i <= 10;\nloop invariant !(i > 10) ==> (i == 10);\nloop invariant i == 10 ==> i >= 10;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= n;\nloop invariant 0 <= i <= n;\nloop invariant i == n;\nloop invariant n == 10;\nloop invariant n == 10 ==> i == n ==> i > 10;\nloop invariant n == 10 ==> i == n ==> ((n > 10) ==> (i > 10));\nloop invariant n == 10 ==> i == n ==> ((n <= 10) ==> (i <= 10));\nloop invariant n == 10 ==> i == n ==> ((i > 10) ==> (i > 10));\nloop invariant n == 10 ==> i == n ==> ((i <= 10) ==> (i <= 10));\nloop invariant n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n <= 10;\nloop invariant 0 <= i <= n;\nloop invariant i < n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant i <= n ==> n > 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant n >= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant n >= 10;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n; loop invariant i >= 0; loop invariant i <= n; loop invariant i < n; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i >= 0; loop invariant i <= n; loop invariant i < n; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= n;\nloop invariant i >= 1;\nloop invariant i <= n - 1;\nloop invariant i <= 10;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant 1 <= n <= 10;\nloop invariant i == n;\nloop invariant n <= 10;\nloop invariant i <= n;\nloop invariant n >= 1;\nloop invariant i >= 1;\nloop invariant i == n && 1 <= i <= n && 1 <= n <= 10 && n <= 10 && i <= n && n >= 1 && i >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant i >= 0;\nloop invariant n == 10;\nloop invariant i >= n;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant i = n-1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nint main(int n){\n  int i;\n\n  i=0;n=10;\n  /*@\n\n*/\nwhile (i < n){ i++; }\n\n  {;\n//@ assert(!( i>10 ));\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant i >= 0;\nloop invariant i <= 10;\nloop invariant i <= 10 ==> !(i > 10);\nloop invariant i >= 0 ==> !(i < 0);\nloop invariant i >= 0 ==> !(i < 0) ==> i == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nint main(int n){\n  int i;\n\n  i=0;n=10;\n  /*@\nloop invariant i1: i >= 0;\n\nloop invariant i3: i <= 10 ==> !(i > 10);\nloop invariant i4: i >= 0 ==> !(i < 0);\n\n*/\nwhile (i < n){ i++; }\n\n  {;\n//@ assert(!( i>10 ));\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant i < n ==> i < 10;\nloop invariant i < n ==> !(i > 10);\nloop invariant i >= n ==> i >= 10;\nloop invariant i >= n ==> !(i < 10);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nint main(int n){\n  int i;\n\n  i=0;n=10;\n  /*@\nloop invariant i1: 0 <= i <= n;\n\n\n\n\n*/\nwhile (i < n){ i++; }\n\n  {;\n//@ assert(!( i>10 ));\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant i == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nint main(int n){\n  int i;\n\n  i=0;n=10;\n  /*@\n\n\n*/\nwhile (i < n){ i++; }\n\n  {;\n//@ assert(!( i>10 ));\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 158,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nint main(int n){\n  int i;\n\n  i=0;n=10;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (i < n){ i++; }\n\n  {;\n//@ assert(!( i>10 ));\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 104,
                "annotations": "```\n/*@\nloop invariant x = i;\nloop invariant 0 <= i <= 10;\nloop invariant i >= 0;\nloop invariant i <= 10;\nloop invariant i == 0;\nloop invariant i == 1;\nloop invariant i == 2;\nloop invariant i == 3;\nloop invariant i == 4;\nloop invariant i == 5;\nloop invariant i == 6;\nloop invariant i == 7;\nloop invariant i == 8;\nloop invariant i == 9;\nloop invariant i == 10;\nloop invariant i == 11;\nloop invariant i == 12;\nloop invariant i == 13;\nloop invariant i == 14;\nloop invariant i == 15;\nloop invariant i == 16;\nloop invariant i == 17;\nloop invariant i == 18;\nloop invariant i == 19;\nloop invariant i == 20;\nloop invariant i == 21;\nloop invariant i == 22;\nloop invariant i == 23;\nloop invariant i == 24;\nloop invariant i == 25;\nloop invariant i == 26;\nloop invariant i == 27;\nloop invariant i == 28;\nloop invariant i == 29;\nloop invariant i == 30;\nloop invariant i == 31;\nloop invariant i == 32;\nloop invariant i == 33;\nloop invariant i == 34;\nloop invariant i == 35;\nloop invariant i == 36;\nloop invariant i == 37;\nloop invariant i == 38;\nloop invariant i == 39;\nloop invariant i == 40;\nloop invariant i == 41;\nloop invariant i == 42;\nloop invariant i == 43;\nloop invariant i == 44;\nloop invariant i == 45;\nloop invariant i == 46;\nloop invariant i == 47;\nloop invariant i == 48;\nloop invariant i == 49;\nloop invariant i == 50;\nloop invariant i == 51;\nloop invariant i == 52;\nloop invariant i == 53;\nloop invariant i == 54;\nloop invariant i == 55;\nloop invariant i == 56;\nloop invariant i == 57;\nloop invariant i == 58;\nloop invariant i == 59;\nloop invariant i == 60;\nloop invariant i == 61;\nloop invariant i == 62;\nloop invariant i == 63;\nloop invariant i == 64;\nloop invariant i == 65;\nloop invariant i == 66;\nloop invariant i == 67;\nloop invariant i == 68;\nloop invariant i == 69;\nloop invariant i == 70;\nloop invariant i == 71;\nloop invariant i == 72;\nloop invariant i == 73;\nloop invariant i == 74;\nloop invariant i == 75;\nloop invariant i == 76;\nloop invariant i == 77;\nloop invariant i == 78;\nloop invariant i == 79;\nloop invariant i == 80;\nloop invariant i == 81;\nloop invariant i == 82;\nloop invariant i == 83;\nloop invariant i == 84;\nloop invariant i == 85;\nloop invariant i == 86;\nloop invariant i == 87;\nloop invariant i == 88;\nloop invariant i == 89;\nloop invariant i == 90;\nloop invariant i == 91;\nloop invariant i == 92;\nloop invariant i == 93;\nloop invariant i == 94;\nloop invariant i == 95;\nloop invariant i == 96;\nloop invariant i == 97;\nloop invariant i == 98;\nloop invariant i == 99;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nint main(int n){\n  int i;\n\n  i=0;n=10;\n  /*@\n\n\nloop invariant i3: i >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (i < n){ i++; }\n\n  {;\n//@ assert(!( i>10 ));\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant i >= 0;\nloop invariant i <= 10;\nloop invariant !(i > 10) ==> (i == 10);\nloop invariant i == 10 ==> i >= 10;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nint main(int n){\n  int i;\n\n  i=0;n=10;\n  /*@\nloop invariant i1: i >= 0;\n\n\nloop invariant i4: i == 10 ==> i >= 10;\n*/\nwhile (i < n){ i++; }\n\n  {;\n//@ assert(!( i>10 ));\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= n;\nloop invariant 0 <= i <= n;\nloop invariant i == n;\nloop invariant n == 10;\nloop invariant n == 10 ==> i == n ==> i > 10;\nloop invariant n == 10 ==> i == n ==> ((n > 10) ==> (i > 10));\nloop invariant n == 10 ==> i == n ==> ((n <= 10) ==> (i <= 10));\nloop invariant n == 10 ==> i == n ==> ((i > 10) ==> (i > 10));\nloop invariant n == 10 ==> i == n ==> ((i <= 10) ==> (i <= 10));\nloop invariant n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nint main(int n){\n  int i;\n\n  i=0;n=10;\n  /*@\nloop invariant i1: 1 <= n;\nloop invariant i2: 0 <= i <= n;\n\nloop invariant i4: n == 10;\n\nloop invariant i6: n == 10 ==> i == n ==> ((n > 10) ==> (i > 10));\nloop invariant i7: n == 10 ==> i == n ==> ((n <= 10) ==> (i <= 10));\nloop invariant i8: n == 10 ==> i == n ==> ((i > 10) ==> (i > 10));\nloop invariant i9: n == 10 ==> i == n ==> ((i <= 10) ==> (i <= 10));\nloop invariant i10: n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant i11: n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant i12: n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant i13: n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant i14: n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant i15: n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant i16: n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant i17: n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant i18: n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant i19: n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant i20: n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant i21: n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant i22: n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant i23: n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\n*/\nwhile (i < n){ i++; }\n\n  {;\n//@ assert(!( i>10 ));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= n <= 10;\nloop invariant 0 <= i <= n;\nloop invariant i < n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nint main(int n){\n  int i;\n\n  i=0;n=10;\n  /*@\nloop invariant i1: 0 <= n <= 10;\nloop invariant i2: 0 <= i <= n;\n\n*/\nwhile (i < n){ i++; }\n\n  {;\n//@ assert(!( i>10 ));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant i <= n ==> n > 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\nloop invariant i <= 0 ==> n <= 0;\nloop invariant i >= n ==> n < 0;\nloop invariant i <= n ==> n >= 0;\nloop invariant i >= 0 ==> n >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nint main(int n){\n  int i;\n\n  i=0;n=10;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: i <= n ==> n > 0;\n\n\nloop invariant i5: i >= 0 ==> n >= 0;\nloop invariant i6: i <= n ==> n >= 0;\n*/\nwhile (i < n){ i++; }\n\n  {;\n//@ assert(!( i>10 ));\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant n >= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant n >= 10;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\nloop invariant i <= n;\nloop invariant i <= 10;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nint main(int n){\n  int i;\n\n  i=0;n=10;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: n >= 10;\nloop invariant i3: i <= n;\n\n*/\nwhile (i < n){ i++; }\n\n  {;\n//@ assert(!( i>10 ));\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n; loop invariant i >= 0; loop invariant i <= n; loop invariant i < n; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i >= 0; loop invariant i <= n; loop invariant i < n; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nint main(int n){\n  int i;\n\n  i=0;n=10;\n  /*@\nloop invariant i1: 0 <= i <= n; loop invariant i >= 0; loop invariant i <= n; loop invariant i < n; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i >= 0; loop invariant i <= n; loop invariant i < n; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10;\n*/\nwhile (i < n){ i++; }\n\n  {;\n//@ assert(!( i>10 ));\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= n;\nloop invariant i >= 1;\nloop invariant i <= n - 1;\nloop invariant i <= 10;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant 1 <= i <= n;\nloop invariant i >= 1;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant n >= 0;\nloop invariant i <= 10;\nloop invariant i >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nint main(int n){\n  int i;\n\n  i=0;n=10;\n  /*@\n\nloop invariant i2: i >= 0;\nloop invariant i3: n >= 0;\nloop invariant i4: i <= n;\n\n\n\n*/\nwhile (i < n){ i++; }\n\n  {;\n//@ assert(!( i>10 ));\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant 1 <= n <= 10;\nloop invariant i == n;\nloop invariant n <= 10;\nloop invariant i <= n;\nloop invariant n >= 1;\nloop invariant i >= 1;\nloop invariant i == n && 1 <= i <= n && 1 <= n <= 10 && n <= 10 && i <= n && n >= 1 && i >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nint main(int n){\n  int i;\n\n  i=0;n=10;\n  /*@\n\nloop invariant i2: 1 <= n <= 10;\n\nloop invariant i4: n <= 10;\nloop invariant i5: i <= n;\nloop invariant i6: n >= 1;\n\n\n*/\nwhile (i < n){ i++; }\n\n  {;\n//@ assert(!( i>10 ));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant i >= 0;\nloop invariant n == 10;\nloop invariant i >= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nint main(int n){\n  int i;\n\n  i=0;n=10;\n  /*@\nloop invariant i1: 0 <= i <= 10;\nloop invariant i2: i >= 0;\nloop invariant i3: n == 10;\n\n*/\nwhile (i < n){ i++; }\n\n  {;\n//@ assert(!( i>10 ));\n}\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 13: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nint main(int n){\n  int i;\n\n  i=0;n=10;\n  /*@\nloop invariant i1: i = n-1;\nloop invariant i2: i >= 0;\nloop invariant i3: i <= 10;\nloop invariant i4: i <= 10 ==> !(i > 10);\nloop invariant i5: i >= 0 ==> !(i < 0);\nloop invariant i6: i >= 0 ==> !(i < 0) ==> i == 0;\nloop invariant i7: 0 <= i <= n;\nloop invariant i8: i < n ==> i < 10;\nloop invariant i9: i < n ==> !(i > 10);\nloop invariant i10: i >= n ==> i >= 10;\nloop invariant i11: i >= n ==> !(i < 10);\nloop invariant i12: 0 <= i <= 10;\nloop invariant i13: i == n;\nloop invariant i14: i1;\nloop invariant i15: i2;\nloop invariant i16: i3;\nloop invariant i17: i4;\nloop invariant i18: i5;\nloop invariant i19: i6;\nloop invariant i20: i7;\nloop invariant i21: i8;\nloop invariant i22: i9;\nloop invariant i23: i10;\nloop invariant i24: i11;\nloop invariant i25: i12;\nloop invariant i26: i13;\nloop invariant i27: i14;\nloop invariant i28: i15;\nloop invariant i29: i16;\nloop invariant i30: i17;\nloop invariant i31: i18;\nloop invariant i32: i19;\nloop invariant i33: i20;\nloop invariant i34: i21;\nloop invariant i35: i22;\nloop invariant i36: i23;\nloop invariant i37: i24;\nloop invariant i38: i25;\nloop invariant i39: i26;\nloop invariant i40: i27;\nloop invariant i41: i28;\nloop invariant i42: i29;\nloop invariant i43: i30;\nloop invariant i44: i31;\nloop invariant i45: i32;\nloop invariant i46: i33;\nloop invariant i47: i34;\nloop invariant i48: i35;\nloop invariant i49: i36;\nloop invariant i50: i37;\nloop invariant i51: i38;\nloop invariant i52: i39;\nloop invariant i53: i40;\nloop invariant i54: i41;\nloop invariant i55: i42;\nloop invariant i56: i43;\nloop invariant i57: i44;\nloop invariant i58: i45;\nloop invariant i59: i46;\nloop invariant i60: i47;\nloop invariant i61: i48;\nloop invariant i62: i49;\nloop invariant i63: i50;\nloop invariant i64: i51;\nloop invariant i65: i52;\nloop invariant i66: i53;\nloop invariant i67: i54;\nloop invariant i68: i55;\nloop invariant i69: i56;\nloop invariant i70: i57;\nloop invariant i71: i58;\nloop invariant i72: i59;\nloop invariant i73: i60;\nloop invariant i74: i61;\nloop invariant i75: i62;\nloop invariant i76: i63;\nloop invariant i77: i64;\nloop invariant i78: i65;\nloop invariant i79: i66;\nloop invariant i80: i67;\nloop invariant i81: i68;\nloop invariant i82: i69;\nloop invariant i83: i70;\nloop invariant i84: i71;\nloop invariant i85: i72;\nloop invariant i86: i73;\nloop invariant i87: i74;\nloop invariant i88: i75;\nloop invariant i89: i76;\nloop invariant i90: i77;\nloop invariant i91: i78;\nloop invariant i92: i79;\nloop invariant i93: i80;\nloop invariant i94: i81;\nloop invariant i95: i82;\nloop invariant i96: i83;\nloop invariant i97: i84;\nloop invariant i98: i85;\nloop invariant i99: i86;\nloop invariant i100: i87;\nloop invariant i101: i88;\nloop invariant i102: i89;\nloop invariant i103: i90;\nloop invariant i104: i91;\nloop invariant i105: i92;\nloop invariant i106: i93;\nloop invariant i107: i94;\nloop invariant i108: i95;\nloop invariant i109: i96;\nloop invariant i110: i97;\nloop invariant i111: i98;\nloop invariant i112: i99;\nloop invariant i113: i100;\nloop invariant i114: i101;\nloop invariant i115: i102;\nloop invariant i116: i103;\nloop invariant i117: i104;\nloop invariant i118: i105;\nloop invariant i119: i106;\nloop invariant i120: i107;\nloop invariant i121: i108;\nloop invariant i122: i109;\nloop invariant i123: i110;\nloop invariant i124: i111;\nloop invariant i125: i112;\nloop invariant i126: i113;\nloop invariant i127: i114;\nloop invariant i128: i115;\nloop invariant i129: i116;\nloop invariant i130: i117;\nloop invariant i131: i118;\nloop invariant i132: i119;\nloop invariant i133: i120;\nloop invariant i134: i121;\nloop invariant i135: i122;\nloop invariant i136: i123;\nloop invariant i137: i124;\nloop invariant i138: i125;\nloop invariant i139: i126;\nloop invariant i140: i127;\nloop invariant i141: i128;\nloop invariant i142: i129;\nloop invariant i143: i130;\nloop invariant i144: i131;\nloop invariant i145: i132;\nloop invariant i146: i133;\nloop invariant i147: i134;\nloop invariant i148: i135;\nloop invariant i149: i136;\nloop invariant i150: i137;\nloop invariant i151: i138;\nloop invariant i152: i139;\nloop invariant i153: i140;\nloop invariant i154: i141;\nloop invariant i155: i142;\nloop invariant i156: i143;\nloop invariant i157: i144;\nloop invariant i158: i145;\nloop invariant i159: i146;\nloop invariant i160: i147;\nloop invariant i161: i148;\nloop invariant i162: i149;\nloop invariant i163: i150;\nloop invariant i164: i151;\nloop invariant i165: i152;\nloop invariant i166: i153;\nloop invariant i167: i154;\nloop invariant i168: i155;\nloop invariant i169: i156;\nloop invariant i170: i157;\nloop invariant i171: i158;\nloop invariant i172: x = i;\nloop invariant i173: i == 0;\nloop invariant i174: i == 1;\nloop invariant i175: i == 2;\nloop invariant i176: i == 3;\nloop invariant i177: i == 4;\nloop invariant i178: i == 5;\nloop invariant i179: i == 6;\nloop invariant i180: i == 7;\nloop invariant i181: i == 8;\nloop invariant i182: i == 9;\nloop invariant i183: i == 10;\nloop invariant i184: i == 11;\nloop invariant i185: i == 12;\nloop invariant i186: i == 13;\nloop invariant i187: i == 14;\nloop invariant i188: i == 15;\nloop invariant i189: i == 16;\nloop invariant i190: i == 17;\nloop invariant i191: i == 18;\nloop invariant i192: i == 19;\nloop invariant i193: i == 20;\nloop invariant i194: i == 21;\nloop invariant i195: i == 22;\nloop invariant i196: i == 23;\nloop invariant i197: i == 24;\nloop invariant i198: i == 25;\nloop invariant i199: i == 26;\nloop invariant i200: i == 27;\nloop invariant i201: i == 28;\nloop invariant i202: i == 29;\nloop invariant i203: i == 30;\nloop invariant i204: i == 31;\nloop invariant i205: i == 32;\nloop invariant i206: i == 33;\nloop invariant i207: i == 34;\nloop invariant i208: i == 35;\nloop invariant i209: i == 36;\nloop invariant i210: i == 37;\nloop invariant i211: i == 38;\nloop invariant i212: i == 39;\nloop invariant i213: i == 40;\nloop invariant i214: i == 41;\nloop invariant i215: i == 42;\nloop invariant i216: i == 43;\nloop invariant i217: i == 44;\nloop invariant i218: i == 45;\nloop invariant i219: i == 46;\nloop invariant i220: i == 47;\nloop invariant i221: i == 48;\nloop invariant i222: i == 49;\nloop invariant i223: i == 50;\nloop invariant i224: i == 51;\nloop invariant i225: i == 52;\nloop invariant i226: i == 53;\nloop invariant i227: i == 54;\nloop invariant i228: i == 55;\nloop invariant i229: i == 56;\nloop invariant i230: i == 57;\nloop invariant i231: i == 58;\nloop invariant i232: i == 59;\nloop invariant i233: i == 60;\nloop invariant i234: i == 61;\nloop invariant i235: i == 62;\nloop invariant i236: i == 63;\nloop invariant i237: i == 64;\nloop invariant i238: i == 65;\nloop invariant i239: i == 66;\nloop invariant i240: i == 67;\nloop invariant i241: i == 68;\nloop invariant i242: i == 69;\nloop invariant i243: i == 70;\nloop invariant i244: i == 71;\nloop invariant i245: i == 72;\nloop invariant i246: i == 73;\nloop invariant i247: i == 74;\nloop invariant i248: i == 75;\nloop invariant i249: i == 76;\nloop invariant i250: i == 77;\nloop invariant i251: i == 78;\nloop invariant i252: i == 79;\nloop invariant i253: i == 80;\nloop invariant i254: i == 81;\nloop invariant i255: i == 82;\nloop invariant i256: i == 83;\nloop invariant i257: i == 84;\nloop invariant i258: i == 85;\nloop invariant i259: i == 86;\nloop invariant i260: i == 87;\nloop invariant i261: i == 88;\nloop invariant i262: i == 89;\nloop invariant i263: i == 90;\nloop invariant i264: i == 91;\nloop invariant i265: i == 92;\nloop invariant i266: i == 93;\nloop invariant i267: i == 94;\nloop invariant i268: i == 95;\nloop invariant i269: i == 96;\nloop invariant i270: i == 97;\nloop invariant i271: i == 98;\nloop invariant i272: i == 99;\nloop invariant i273: !(i > 10) ==> (i == 10);\nloop invariant i274: i == 10 ==> i >= 10;\nloop invariant i275: 1 <= n;\nloop invariant i276: n == 10;\nloop invariant i277: n == 10 ==> i == n ==> i > 10;\nloop invariant i278: n == 10 ==> i == n ==> ((n > 10) ==> (i > 10));\nloop invariant i279: n == 10 ==> i == n ==> ((n <= 10) ==> (i <= 10));\nloop invariant i280: n == 10 ==> i == n ==> ((i > 10) ==> (i > 10));\nloop invariant i281: n == 10 ==> i == n ==> ((i <= 10) ==> (i <= 10));\nloop invariant i282: n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant i283: n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant i284: n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant i285: n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant i286: n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant i287: n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant i288: n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant i289: n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant i290: n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant i291: n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant i292: n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant i293: n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant i294: n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant i295: n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant i296: 0 <= n <= 10;\nloop invariant i297: i < n;\nloop invariant i298: i <= n ==> n > 0;\nloop invariant i299: i <= 0 ==> n <= 0;\nloop invariant i300: i >= n ==> n < 0;\nloop invariant i301: i >= 0 ==> n >= 0;\nloop invariant i302: i <= n ==> n >= 0;\nloop invariant i303: n >= 10;\nloop invariant i304: i <= n;\nloop invariant i305: 0 <= i <= n; loop invariant i >= 0; loop invariant i <= n; loop invariant i < n; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i >= 0; loop invariant i <= n; loop invariant i < n; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10;\nloop invariant i306: 1 <= i <= n;\nloop invariant i307: n >= 0;\nloop invariant i308: i >= 1;\nloop invariant i309: i <= n - 1;\nloop invariant i310: 1 <= n <= 10;\nloop invariant i311: n <= 10;\nloop invariant i312: n >= 1;\nloop invariant i313: i == n && 1 <= i <= n && 1 <= n <= 10 && n <= 10 && i <= n && n >= 1 && i >= 1;\nloop invariant i314: i >= n;\n*/\nwhile (i < n){ i++; }\n\n  {;\n//@ assert(!( i>10 ));\n}\n\n}",
        "combined_annotation_num_solver_calls": 264,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid errorFn() {ERROR: goto ERROR;}\nint main(int n){\n  int i;\n\n  i=0;n=10;\n  /*@\n\nloop invariant i2: i >= 0;\nloop invariant i3: i <= 10;\nloop invariant i4: i <= 10 ==> !(i > 10);\nloop invariant i5: i >= 0 ==> !(i < 0);\nloop invariant i6: i >= 0 ==> !(i < 0) ==> i == 0;\nloop invariant i7: 0 <= i <= n;\nloop invariant i8: i < n ==> i < 10;\nloop invariant i9: i < n ==> !(i > 10);\nloop invariant i10: i >= n ==> i >= 10;\nloop invariant i11: i >= n ==> !(i < 10);\nloop invariant i12: 0 <= i <= 10;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i173: i == 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i274: i == 10 ==> i >= 10;\nloop invariant i275: 1 <= n;\nloop invariant i276: n == 10;\nloop invariant i277: n == 10 ==> i == n ==> i > 10;\nloop invariant i278: n == 10 ==> i == n ==> ((n > 10) ==> (i > 10));\nloop invariant i279: n == 10 ==> i == n ==> ((n <= 10) ==> (i <= 10));\nloop invariant i280: n == 10 ==> i == n ==> ((i > 10) ==> (i > 10));\nloop invariant i281: n == 10 ==> i == n ==> ((i <= 10) ==> (i <= 10));\nloop invariant i282: n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant i283: n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant i284: n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant i285: n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant i286: n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant i287: n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant i288: n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant i289: n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant i290: n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant i291: n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant i292: n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant i293: n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant i294: n == 10 ==> i == n ==> ((i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10));\nloop invariant i295: n == 10 ==> i == n ==> ((i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10) ==> (i > 10) ==> (i <= 10));\nloop invariant i296: 0 <= n <= 10;\nloop invariant i297: i < n;\nloop invariant i298: i <= n ==> n > 0;\n\nloop invariant i300: i >= n ==> n < 0;\nloop invariant i301: i >= 0 ==> n >= 0;\nloop invariant i302: i <= n ==> n >= 0;\nloop invariant i303: n >= 10;\nloop invariant i304: i <= n;\nloop invariant i305: 0 <= i <= n; loop invariant i >= 0; loop invariant i <= n; loop invariant i < n; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i >= 0; loop invariant i <= n; loop invariant i < n; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10; loop invariant n == 10; loop invariant n == 10; loop invariant i == n; loop invariant n >= 0; loop invariant n <= 10;\nloop invariant i306: 1 <= i <= n;\nloop invariant i307: n >= 0;\nloop invariant i308: i >= 1;\nloop invariant i309: i <= n - 1;\nloop invariant i310: 1 <= n <= 10;\nloop invariant i311: n <= 10;\nloop invariant i312: n >= 1;\nloop invariant i313: i == n && 1 <= i <= n && 1 <= n <= 10 && n <= 10 && i <= n && n >= 1 && i >= 1;\nloop invariant i314: i >= n;\n*/\nwhile (i < n){ i++; }\n\n  {;\n//@ assert(!( i>10 ));\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c"
        ],
        "failure": [],
        "skipped": [],
        "total": 10,
        "success_count": 10,
        "failure_count": 0,
        "success_rate": 1.0
    }
}