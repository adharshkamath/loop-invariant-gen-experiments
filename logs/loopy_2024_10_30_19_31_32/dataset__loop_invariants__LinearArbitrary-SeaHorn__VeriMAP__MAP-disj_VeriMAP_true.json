{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n   int x, y;\n\n   x = 0;\n   y = 50;\n\n  while( x < 100 ) {\n    if( x < 50 ) {\n      x = x+1;\n    } else {\n      x = x+1;\n      y = y+1;\n    }\n  }\n\n  if( y > 100 || y < 100 )\n    goto ERROR;\n\nreturn;\n\n{ { ERROR: {; \n//@ assert(\\false);\n}\n}\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 50;\nloop invariant (x >= 0) ==> (x < 50 ==> x == y - 1) && (x >= 50 ==> x == y - 1 && y == x - 1);\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant y <= 50;\nloop invariant x < 100 ==> y <= 100;\nloop invariant x >= 50 ==> y >= 50;\nloop invariant x >= 50 ==> x - y <= 50;\nloop invariant x >= 50 ==> y - x <= 50;\nloop invariant x >= 50 ==> x - y <= 50 ==> y <= 100;\nloop invariant x >= 50 ==> y - x <= 50 ==> x <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> y <= 100 ==> x <= 100;\nloop invariant x >= 50 ==> y - x <= 50 ==> x <= 100 ==> y <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x <= y;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y <= x + 1;\nloop invariant y >= x - 1;\nloop invariant x <= y + 100;\nloop invariant y <= x + 100;\nloop invariant x <= y + 101;\nloop invariant y <= x + 101;\nloop invariant x <= y + 102;\nloop invariant y <= x + 102;\nloop invariant x <= y + 103;\nloop invariant y <= x + 103;\nloop invariant x <= y + 104;\nloop invariant y <= x + 104;\nloop invariant x <= y + 105;\nloop invariant y <= x + 105;\nloop invariant x <= y + 106;\nloop invariant y <= x + 106;\nloop invariant x <= y + 107;\nloop invariant y <= x + 107;\nloop invariant x <= y + 108;\nloop invariant y <= x + 108;\nloop invariant x <= y + 109;\nloop invariant y <= x + 109;\nloop invariant x <= y + 110;\nloop invariant y <= x + 110;\nloop invariant x <= y + 111;\nloop invariant y <= x + 111;\nloop invariant x <= y + 112;\nloop invariant y <= x + 112;\nloop invariant x <= y + 113;\nloop invariant y <= x + 113;\nloop invariant x <= y + 114;\nloop invariant y <= x + 114;\nloop invariant x <= y + 115;\nloop invariant y <= x + 115;\nloop invariant x <= y + 116;\nloop invariant y <= x + 116;\nloop invariant x <= y + 117;\nloop invariant y <= x + 117;\nloop invariant x <= y + 118;\nloop invariant y <= x + 118;\nloop invariant x <= y + 119;\nloop invariant y <= x + 119;\nloop invariant x <= y + 120;\nloop invariant y <= x + 120;\nloop invariant x <= y + 121;\nloop invariant y <= x + 121;\nloop invariant x <= y + 122;\nloop invariant y <= x + 122;\nloop invariant x <= y + 123;\nloop invariant y <= x + 123;\nloop invariant x <= y + 124;\nloop invariant y <= x + 124;\nloop invariant x <= y + 125;\nloop invariant y <= x + 125;\nloop invariant x <= y + 126;\nloop invariant y <= x + 126;\nloop invariant x <= y + 127;\nloop invariant y <= x + 127;\nloop invariant x <= y + 128;\nloop invariant y <= x + 128;\nloop invariant x <= y + 129;\nloop invariant y <= x + 129;\nloop invariant x <= y + 130;\nloop invariant y <= x + 130;\nloop invariant x <= y + 131;\nloop invariant y <= x + 131;\nloop invariant x <= y + 132;\nloop invariant y <= x + 132;\nloop invariant x <= y + 133;\nloop invariant y <= x + 133;\nloop invariant x <= y + 134;\nloop invariant y <= x + 134;\nloop invariant x <= y + 135;\nloop invariant y <= x + 135;\nloop invariant x <= y + 136;\nloop invariant y <= x + 136;\nloop invariant x <= y + 137;\nloop invariant y <= x + 137;\nloop invariant x <= y + 138;\nloop invariant y <= x + 138;\nloop invariant x <= y + 139;\nloop invariant y <= x + 139;\nloop invariant x <= y + 140;\nloop invariant y <= x + 140;\nloop invariant x <= y + 141;\nloop invariant y <= x + 141;\nloop invariant x <= y + 142;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 60;\nloop invariant x <= y;\nloop invariant (x - y) <= 0;\nloop invariant (y - x) >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 150;\nloop invariant x < 50 ==> x == y - 50;\nloop invariant x >= 50 ==> x == y - 50 + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 50;\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 150;\nloop invariant (x < 50 ==> y = 50);\nloop invariant (x >= 50 ==> y = 50 + (x - 50));\nloop invariant x < 100 ==> x < 50 ==> y = 50;\nloop invariant x < 100 ==> x >= 50 ==> y = 50 + (x - 50);\nloop invariant x >= 100 ==> y = 50 + (x - 50);\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x < 100;\nloop invariant 50 <= y <= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100; loop invariant 50 <= y <= 150; loop invariant (x < 50) ==> (y == 50); loop invariant (x >= 50) ==> (y >= 50); loop invariant x + y <= 150;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant x < 50 ==> y == 50;\nloop invariant x >= 50 ==> y >= 50;\nloop invariant x >= 50 ==> y <= x;\nloop invariant x >= 50 ==> y == x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant x + y <= 150;\nloop invariant (x < 50) ==> (y == 50);\nloop invariant (x >= 50) ==> (y == x);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x == 100) ==> (y == 100);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant x >= y ==> x = 100;\nloop invariant x < 50 ==> x = 50;\nloop invariant x >= 50 ==> y = 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 101;\nloop invariant x >= y;\nloop invariant (y >= 50) ==> (x == y);\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 101;\nloop invariant x >= y;\nloop invariant (y >= 50) ==> (x == y);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 50;\nloop invariant (x >= 0) ==> (x < 50 ==> x == y - 1) && (x >= 50 ==> x == y - 1 && y == x - 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n   int x, y;\n\n   x = 0;\n   y = 50;\n\n  /*@\nloop invariant i1: 0 <= x <= 100;\n\n\n*/\nwhile( x < 100 ) {\n    if( x < 50 ) {\n      x = x+1;\n    } else {\n      x = x+1;\n      y = y+1;\n    }\n  }\n\n  if( y > 100 || y < 100 )\n    goto ERROR;\n\nreturn;\n\n{ { ERROR: {; \n//@ assert(\\false);\n}\n}\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant y <= 50;\nloop invariant x < 100 ==> y <= 100;\nloop invariant x >= 50 ==> y >= 50;\nloop invariant x >= 50 ==> x - y <= 50;\nloop invariant x >= 50 ==> y - x <= 50;\nloop invariant x >= 50 ==> x - y <= 50 ==> y <= 100;\nloop invariant x >= 50 ==> y - x <= 50 ==> x <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> y <= 100 ==> x <= 100;\nloop invariant x >= 50 ==> y - x <= 50 ==> x <= 100 ==> y <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n   int x, y;\n\n   x = 0;\n   y = 50;\n\n  /*@\nloop invariant i1: x >= 0;\n\n\n\n\n\n\nloop invariant i8: x >= 50 ==> y - x <= 50 ==> x <= 100;\nloop invariant i9: x >= 50 ==> x - y <= 50 ==> y <= 100 ==> x <= 100;\n\nloop invariant i11: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant i12: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant i13: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant i14: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant i15: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant i16: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant i17: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant i18: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant i19: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant i20: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant i21: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\n*/\nwhile( x < 100 ) {\n    if( x < 50 ) {\n      x = x+1;\n    } else {\n      x = x+1;\n      y = y+1;\n    }\n  }\n\n  if( y > 100 || y < 100 )\n    goto ERROR;\n\nreturn;\n\n{ { ERROR: {; \n//@ assert(\\false);\n}\n}\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x <= y;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y <= x + 1;\nloop invariant y >= x - 1;\nloop invariant x <= y + 100;\nloop invariant y <= x + 100;\nloop invariant x <= y + 101;\nloop invariant y <= x + 101;\nloop invariant x <= y + 102;\nloop invariant y <= x + 102;\nloop invariant x <= y + 103;\nloop invariant y <= x + 103;\nloop invariant x <= y + 104;\nloop invariant y <= x + 104;\nloop invariant x <= y + 105;\nloop invariant y <= x + 105;\nloop invariant x <= y + 106;\nloop invariant y <= x + 106;\nloop invariant x <= y + 107;\nloop invariant y <= x + 107;\nloop invariant x <= y + 108;\nloop invariant y <= x + 108;\nloop invariant x <= y + 109;\nloop invariant y <= x + 109;\nloop invariant x <= y + 110;\nloop invariant y <= x + 110;\nloop invariant x <= y + 111;\nloop invariant y <= x + 111;\nloop invariant x <= y + 112;\nloop invariant y <= x + 112;\nloop invariant x <= y + 113;\nloop invariant y <= x + 113;\nloop invariant x <= y + 114;\nloop invariant y <= x + 114;\nloop invariant x <= y + 115;\nloop invariant y <= x + 115;\nloop invariant x <= y + 116;\nloop invariant y <= x + 116;\nloop invariant x <= y + 117;\nloop invariant y <= x + 117;\nloop invariant x <= y + 118;\nloop invariant y <= x + 118;\nloop invariant x <= y + 119;\nloop invariant y <= x + 119;\nloop invariant x <= y + 120;\nloop invariant y <= x + 120;\nloop invariant x <= y + 121;\nloop invariant y <= x + 121;\nloop invariant x <= y + 122;\nloop invariant y <= x + 122;\nloop invariant x <= y + 123;\nloop invariant y <= x + 123;\nloop invariant x <= y + 124;\nloop invariant y <= x + 124;\nloop invariant x <= y + 125;\nloop invariant y <= x + 125;\nloop invariant x <= y + 126;\nloop invariant y <= x + 126;\nloop invariant x <= y + 127;\nloop invariant y <= x + 127;\nloop invariant x <= y + 128;\nloop invariant y <= x + 128;\nloop invariant x <= y + 129;\nloop invariant y <= x + 129;\nloop invariant x <= y + 130;\nloop invariant y <= x + 130;\nloop invariant x <= y + 131;\nloop invariant y <= x + 131;\nloop invariant x <= y + 132;\nloop invariant y <= x + 132;\nloop invariant x <= y + 133;\nloop invariant y <= x + 133;\nloop invariant x <= y + 134;\nloop invariant y <= x + 134;\nloop invariant x <= y + 135;\nloop invariant y <= x + 135;\nloop invariant x <= y + 136;\nloop invariant y <= x + 136;\nloop invariant x <= y + 137;\nloop invariant y <= x + 137;\nloop invariant x <= y + 138;\nloop invariant y <= x + 138;\nloop invariant x <= y + 139;\nloop invariant y <= x + 139;\nloop invariant x <= y + 140;\nloop invariant y <= x + 140;\nloop invariant x <= y + 141;\nloop invariant y <= x + 141;\nloop invariant x <= y + 142;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n   int x, y;\n\n   x = 0;\n   y = 50;\n\n  /*@\nloop invariant i1: 0 <= x;\nloop invariant i2: 0 <= y;\n\nloop invariant i4: x <= 100;\n\n\n\nloop invariant i8: x <= y + 100;\nloop invariant i9: y <= x + 100;\nloop invariant i10: x <= y + 101;\nloop invariant i11: y <= x + 101;\nloop invariant i12: x <= y + 102;\nloop invariant i13: y <= x + 102;\nloop invariant i14: x <= y + 103;\nloop invariant i15: y <= x + 103;\nloop invariant i16: x <= y + 104;\nloop invariant i17: y <= x + 104;\nloop invariant i18: x <= y + 105;\nloop invariant i19: y <= x + 105;\nloop invariant i20: x <= y + 106;\nloop invariant i21: y <= x + 106;\nloop invariant i22: x <= y + 107;\nloop invariant i23: y <= x + 107;\nloop invariant i24: x <= y + 108;\nloop invariant i25: y <= x + 108;\nloop invariant i26: x <= y + 109;\nloop invariant i27: y <= x + 109;\nloop invariant i28: x <= y + 110;\nloop invariant i29: y <= x + 110;\nloop invariant i30: x <= y + 111;\nloop invariant i31: y <= x + 111;\nloop invariant i32: x <= y + 112;\nloop invariant i33: y <= x + 112;\nloop invariant i34: x <= y + 113;\nloop invariant i35: y <= x + 113;\nloop invariant i36: x <= y + 114;\nloop invariant i37: y <= x + 114;\nloop invariant i38: x <= y + 115;\nloop invariant i39: y <= x + 115;\nloop invariant i40: x <= y + 116;\nloop invariant i41: y <= x + 116;\nloop invariant i42: x <= y + 117;\nloop invariant i43: y <= x + 117;\nloop invariant i44: x <= y + 118;\nloop invariant i45: y <= x + 118;\nloop invariant i46: x <= y + 119;\nloop invariant i47: y <= x + 119;\nloop invariant i48: x <= y + 120;\nloop invariant i49: y <= x + 120;\nloop invariant i50: x <= y + 121;\nloop invariant i51: y <= x + 121;\nloop invariant i52: x <= y + 122;\nloop invariant i53: y <= x + 122;\nloop invariant i54: x <= y + 123;\nloop invariant i55: y <= x + 123;\nloop invariant i56: x <= y + 124;\nloop invariant i57: y <= x + 124;\nloop invariant i58: x <= y + 125;\nloop invariant i59: y <= x + 125;\nloop invariant i60: x <= y + 126;\nloop invariant i61: y <= x + 126;\nloop invariant i62: x <= y + 127;\nloop invariant i63: y <= x + 127;\nloop invariant i64: x <= y + 128;\nloop invariant i65: y <= x + 128;\nloop invariant i66: x <= y + 129;\nloop invariant i67: y <= x + 129;\nloop invariant i68: x <= y + 130;\nloop invariant i69: y <= x + 130;\nloop invariant i70: x <= y + 131;\nloop invariant i71: y <= x + 131;\nloop invariant i72: x <= y + 132;\nloop invariant i73: y <= x + 132;\nloop invariant i74: x <= y + 133;\nloop invariant i75: y <= x + 133;\nloop invariant i76: x <= y + 134;\nloop invariant i77: y <= x + 134;\nloop invariant i78: x <= y + 135;\nloop invariant i79: y <= x + 135;\nloop invariant i80: x <= y + 136;\nloop invariant i81: y <= x + 136;\nloop invariant i82: x <= y + 137;\nloop invariant i83: y <= x + 137;\nloop invariant i84: x <= y + 138;\nloop invariant i85: y <= x + 138;\nloop invariant i86: x <= y + 139;\nloop invariant i87: y <= x + 139;\nloop invariant i88: x <= y + 140;\nloop invariant i89: y <= x + 140;\nloop invariant i90: x <= y + 141;\nloop invariant i91: y <= x + 141;\nloop invariant i92: x <= y + 142;\n*/\nwhile( x < 100 ) {\n    if( x < 50 ) {\n      x = x+1;\n    } else {\n      x = x+1;\n      y = y+1;\n    }\n  }\n\n  if( y > 100 || y < 100 )\n    goto ERROR;\n\nreturn;\n\n{ { ERROR: {; \n//@ assert(\\false);\n}\n}\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 60;\nloop invariant x <= y;\nloop invariant (x - y) <= 0;\nloop invariant (y - x) >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n   int x, y;\n\n   x = 0;\n   y = 50;\n\n  /*@\nloop invariant i1: 0 <= x <= 100;\n\n\n\n\n*/\nwhile( x < 100 ) {\n    if( x < 50 ) {\n      x = x+1;\n    } else {\n      x = x+1;\n      y = y+1;\n    }\n  }\n\n  if( y > 100 || y < 100 )\n    goto ERROR;\n\nreturn;\n\n{ { ERROR: {; \n//@ assert(\\false);\n}\n}\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n   int x, y;\n\n   x = 0;\n   y = 50;\n\n  /*@\nloop invariant i1: 0 <= x <= 100;\n\n*/\nwhile( x < 100 ) {\n    if( x < 50 ) {\n      x = x+1;\n    } else {\n      x = x+1;\n      y = y+1;\n    }\n  }\n\n  if( y > 100 || y < 100 )\n    goto ERROR;\n\nreturn;\n\n{ { ERROR: {; \n//@ assert(\\false);\n}\n}\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 150;\nloop invariant x < 50 ==> x == y - 50;\nloop invariant x >= 50 ==> x == y - 50 + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n   int x, y;\n\n   x = 0;\n   y = 50;\n\n  /*@\nloop invariant i1: 0 <= x <= 100;\n\n\n\n*/\nwhile( x < 100 ) {\n    if( x < 50 ) {\n      x = x+1;\n    } else {\n      x = x+1;\n      y = y+1;\n    }\n  }\n\n  if( y > 100 || y < 100 )\n    goto ERROR;\n\nreturn;\n\n{ { ERROR: {; \n//@ assert(\\false);\n}\n}\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 50;\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\nloop invariant (x < 50 ==> x == 0);\nloop invariant (x >= 50 ==> x == 50);\nloop invariant (x < 50 ==> y == 50);\nloop invariant (x >= 50 ==> y == 50);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n   int x, y;\n\n   x = 0;\n   y = 50;\n\n  /*@\nloop invariant i1: 0 <= x <= 100;\n\nloop invariant i3: (x < 50 ==> y == 50);\n\n\n\n*/\nwhile( x < 100 ) {\n    if( x < 50 ) {\n      x = x+1;\n    } else {\n      x = x+1;\n      y = y+1;\n    }\n  }\n\n  if( y > 100 || y < 100 )\n    goto ERROR;\n\nreturn;\n\n{ { ERROR: {; \n//@ assert(\\false);\n}\n}\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 150;\nloop invariant (x < 50 ==> y = 50);\nloop invariant (x >= 50 ==> y = 50 + (x - 50));\nloop invariant x < 100 ==> x < 50 ==> y = 50;\nloop invariant x < 100 ==> x >= 50 ==> y = 50 + (x - 50);\nloop invariant x >= 100 ==> y = 50 + (x - 50);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n   int x, y;\n\n   x = 0;\n   y = 50;\n\n  /*@\nloop invariant i1: 0 <= x <= 100;\n\n\n\n\n\n\n*/\nwhile( x < 100 ) {\n    if( x < 50 ) {\n      x = x+1;\n    } else {\n      x = x+1;\n      y = y+1;\n    }\n  }\n\n  if( y > 100 || y < 100 )\n    goto ERROR;\n\nreturn;\n\n{ { ERROR: {; \n//@ assert(\\false);\n}\n}\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n   int x, y;\n\n   x = 0;\n   y = 50;\n\n  /*@\n\n*/\nwhile( x < 100 ) {\n    if( x < 50 ) {\n      x = x+1;\n    } else {\n      x = x+1;\n      y = y+1;\n    }\n  }\n\n  if( y > 100 || y < 100 )\n    goto ERROR;\n\nreturn;\n\n{ { ERROR: {; \n//@ assert(\\false);\n}\n}\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x < 100;\nloop invariant 50 <= y <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n   int x, y;\n\n   x = 0;\n   y = 50;\n\n  /*@\n\n\n*/\nwhile( x < 100 ) {\n    if( x < 50 ) {\n      x = x+1;\n    } else {\n      x = x+1;\n      y = y+1;\n    }\n  }\n\n  if( y > 100 || y < 100 )\n    goto ERROR;\n\nreturn;\n\n{ { ERROR: {; \n//@ assert(\\false);\n}\n}\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100; loop invariant 50 <= y <= 150; loop invariant (x < 50) ==> (y == 50); loop invariant (x >= 50) ==> (y >= 50); loop invariant x + y <= 150;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n   int x, y;\n\n   x = 0;\n   y = 50;\n\n  /*@\nloop invariant i1: 0 <= x <= 100; loop invariant 50 <= y <= 150; loop invariant (x < 50) ==> (y == 50); loop invariant (x >= 50) ==> (y >= 50); loop invariant x + y <= 150;\n*/\nwhile( x < 100 ) {\n    if( x < 50 ) {\n      x = x+1;\n    } else {\n      x = x+1;\n      y = y+1;\n    }\n  }\n\n  if( y > 100 || y < 100 )\n    goto ERROR;\n\nreturn;\n\n{ { ERROR: {; \n//@ assert(\\false);\n}\n}\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant x < 50 ==> y == 50;\nloop invariant x >= 50 ==> y >= 50;\nloop invariant x >= 50 ==> y <= x;\nloop invariant x >= 50 ==> y == x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n   int x, y;\n\n   x = 0;\n   y = 50;\n\n  /*@\nloop invariant i1: 0 <= x <= 100;\nloop invariant i2: 50 <= y <= 100;\nloop invariant i3: x < 50 ==> y == 50;\nloop invariant i4: x >= 50 ==> y >= 50;\nloop invariant i5: x >= 50 ==> y <= x;\nloop invariant i6: x >= 50 ==> y == x;\n*/\nwhile( x < 100 ) {\n    if( x < 50 ) {\n      x = x+1;\n    } else {\n      x = x+1;\n      y = y+1;\n    }\n  }\n\n  if( y > 100 || y < 100 )\n    goto ERROR;\n\nreturn;\n\n{ { ERROR: {; \n//@ assert(\\false);\n}\n}\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant x + y <= 150;\nloop invariant (x < 50) ==> (y == 50);\nloop invariant (x >= 50) ==> (y == x);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x == 100) ==> (y == 100);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n   int x, y;\n\n   x = 0;\n   y = 50;\n\n  /*@\nloop invariant i1: 0 <= x <= 100;\nloop invariant i2: 50 <= y <= 100;\n\nloop invariant i4: (x < 50) ==> (y == 50);\nloop invariant i5: (x >= 50) ==> (y == x);\nloop invariant i6: (x == 100) ==> (y == 100);\n*/\nwhile( x < 100 ) {\n    if( x < 50 ) {\n      x = x+1;\n    } else {\n      x = x+1;\n      y = y+1;\n    }\n  }\n\n  if( y > 100 || y < 100 )\n    goto ERROR;\n\nreturn;\n\n{ { ERROR: {; \n//@ assert(\\false);\n}\n}\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant x >= y ==> x = 100;\nloop invariant x < 50 ==> x = 50;\nloop invariant x >= 50 ==> y = 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n   int x, y;\n\n   x = 0;\n   y = 50;\n\n  /*@\nloop invariant i1: 0 <= x <= 100;\n\n\n\n\n*/\nwhile( x < 100 ) {\n    if( x < 50 ) {\n      x = x+1;\n    } else {\n      x = x+1;\n      y = y+1;\n    }\n  }\n\n  if( y > 100 || y < 100 )\n    goto ERROR;\n\nreturn;\n\n{ { ERROR: {; \n//@ assert(\\false);\n}\n}\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 101;\nloop invariant x >= y;\nloop invariant (y >= 50) ==> (x == y);\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 101;\nloop invariant x >= y;\nloop invariant (y >= 50) ==> (x == y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n   int x, y;\n\n   x = 0;\n   y = 50;\n\n  /*@\nloop invariant i1: 0 <= x <= 100;\n\n\n\n*/\nwhile( x < 100 ) {\n    if( x < 50 ) {\n      x = x+1;\n    } else {\n      x = x+1;\n      y = y+1;\n    }\n  }\n\n  if( y > 100 || y < 100 )\n    goto ERROR;\n\nreturn;\n\n{ { ERROR: {; \n//@ assert(\\false);\n}\n}\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 141: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n   int x, y;\n\n   x = 0;\n   y = 50;\n\n  /*@\nloop invariant i1: 0 <= x <= 100;\nloop invariant i2: 0 <= y <= 50;\nloop invariant i3: (x >= 0) ==> (x < 50 ==> x == y - 1) && (x >= 50 ==> x == y - 1 && y == x - 1);\nloop invariant i4: x >= 0;\nloop invariant i5: y <= 50;\nloop invariant i6: x < 100 ==> y <= 100;\nloop invariant i7: x >= 50 ==> y >= 50;\nloop invariant i8: x >= 50 ==> x - y <= 50;\nloop invariant i9: x >= 50 ==> y - x <= 50;\nloop invariant i10: x >= 50 ==> x - y <= 50 ==> y <= 100;\nloop invariant i11: x >= 50 ==> y - x <= 50 ==> x <= 100;\nloop invariant i12: x >= 50 ==> x - y <= 50 ==> y <= 100 ==> x <= 100;\nloop invariant i13: x >= 50 ==> y - x <= 50 ==> x <= 100 ==> y <= 100;\nloop invariant i14: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant i15: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant i16: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant i17: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant i18: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant i19: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant i20: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant i21: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant i22: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant i23: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant i24: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant i25: 0 <= x;\nloop invariant i26: 0 <= y;\nloop invariant i27: x <= y;\nloop invariant i28: x <= 100;\nloop invariant i29: y <= 100;\nloop invariant i30: y <= x + 1;\nloop invariant i31: y >= x - 1;\nloop invariant i32: x <= y + 100;\nloop invariant i33: y <= x + 100;\nloop invariant i34: x <= y + 101;\nloop invariant i35: y <= x + 101;\nloop invariant i36: x <= y + 102;\nloop invariant i37: y <= x + 102;\nloop invariant i38: x <= y + 103;\nloop invariant i39: y <= x + 103;\nloop invariant i40: x <= y + 104;\nloop invariant i41: y <= x + 104;\nloop invariant i42: x <= y + 105;\nloop invariant i43: y <= x + 105;\nloop invariant i44: x <= y + 106;\nloop invariant i45: y <= x + 106;\nloop invariant i46: x <= y + 107;\nloop invariant i47: y <= x + 107;\nloop invariant i48: x <= y + 108;\nloop invariant i49: y <= x + 108;\nloop invariant i50: x <= y + 109;\nloop invariant i51: y <= x + 109;\nloop invariant i52: x <= y + 110;\nloop invariant i53: y <= x + 110;\nloop invariant i54: x <= y + 111;\nloop invariant i55: y <= x + 111;\nloop invariant i56: x <= y + 112;\nloop invariant i57: y <= x + 112;\nloop invariant i58: x <= y + 113;\nloop invariant i59: y <= x + 113;\nloop invariant i60: x <= y + 114;\nloop invariant i61: y <= x + 114;\nloop invariant i62: x <= y + 115;\nloop invariant i63: y <= x + 115;\nloop invariant i64: x <= y + 116;\nloop invariant i65: y <= x + 116;\nloop invariant i66: x <= y + 117;\nloop invariant i67: y <= x + 117;\nloop invariant i68: x <= y + 118;\nloop invariant i69: y <= x + 118;\nloop invariant i70: x <= y + 119;\nloop invariant i71: y <= x + 119;\nloop invariant i72: x <= y + 120;\nloop invariant i73: y <= x + 120;\nloop invariant i74: x <= y + 121;\nloop invariant i75: y <= x + 121;\nloop invariant i76: x <= y + 122;\nloop invariant i77: y <= x + 122;\nloop invariant i78: x <= y + 123;\nloop invariant i79: y <= x + 123;\nloop invariant i80: x <= y + 124;\nloop invariant i81: y <= x + 124;\nloop invariant i82: x <= y + 125;\nloop invariant i83: y <= x + 125;\nloop invariant i84: x <= y + 126;\nloop invariant i85: y <= x + 126;\nloop invariant i86: x <= y + 127;\nloop invariant i87: y <= x + 127;\nloop invariant i88: x <= y + 128;\nloop invariant i89: y <= x + 128;\nloop invariant i90: x <= y + 129;\nloop invariant i91: y <= x + 129;\nloop invariant i92: x <= y + 130;\nloop invariant i93: y <= x + 130;\nloop invariant i94: x <= y + 131;\nloop invariant i95: y <= x + 131;\nloop invariant i96: x <= y + 132;\nloop invariant i97: y <= x + 132;\nloop invariant i98: x <= y + 133;\nloop invariant i99: y <= x + 133;\nloop invariant i100: x <= y + 134;\nloop invariant i101: y <= x + 134;\nloop invariant i102: x <= y + 135;\nloop invariant i103: y <= x + 135;\nloop invariant i104: x <= y + 136;\nloop invariant i105: y <= x + 136;\nloop invariant i106: x <= y + 137;\nloop invariant i107: y <= x + 137;\nloop invariant i108: x <= y + 138;\nloop invariant i109: y <= x + 138;\nloop invariant i110: x <= y + 139;\nloop invariant i111: y <= x + 139;\nloop invariant i112: x <= y + 140;\nloop invariant i113: y <= x + 140;\nloop invariant i114: x <= y + 141;\nloop invariant i115: y <= x + 141;\nloop invariant i116: x <= y + 142;\nloop invariant i117: 50 <= y <= 60;\nloop invariant i118: (x - y) <= 0;\nloop invariant i119: (y - x) >= 0;\nloop invariant i120: 50 <= y <= 100;\nloop invariant i121: 50 <= y <= 150;\nloop invariant i122: x < 50 ==> x == y - 50;\nloop invariant i123: x >= 50 ==> x == y - 50 + 1;\nloop invariant i124: (x < 50 ==> y == 50);\nloop invariant i125: (x >= 50 ==> y == 50);\nloop invariant i126: (x < 50 ==> x == 0);\nloop invariant i127: (x >= 50 ==> x == 50);\nloop invariant i128: (x < 50 ==> y = 50);\nloop invariant i129: (x >= 50 ==> y = 50 + (x - 50));\nloop invariant i130: x < 100 ==> x < 50 ==> y = 50;\nloop invariant i131: x < 100 ==> x >= 50 ==> y = 50 + (x - 50);\nloop invariant i132: x >= 100 ==> y = 50 + (x - 50);\nloop invariant i133: 0 <= x < 100;\nloop invariant i134: 0 <= x <= 100; loop invariant 50 <= y <= 150; loop invariant (x < 50) ==> (y == 50); loop invariant (x >= 50) ==> (y >= 50); loop invariant x + y <= 150;\nloop invariant i135: x < 50 ==> y == 50;\nloop invariant i136: x >= 50 ==> y <= x;\nloop invariant i137: x >= 50 ==> y == x;\nloop invariant i138: x + y <= 150;\nloop invariant i139: (x < 50) ==> (y == 50);\nloop invariant i140: (x >= 50) ==> (y == x);\nloop invariant i141: (x == 100) ==> (y == 100);\nloop invariant i142: x >= y ==> x = 100;\nloop invariant i143: x < 50 ==> x = 50;\nloop invariant i144: x >= 50 ==> y = 100;\nloop invariant i145: 50 <= y <= 101;\nloop invariant i146: x >= y;\nloop invariant i147: (y >= 50) ==> (x == y);\n*/\nwhile( x < 100 ) {\n    if( x < 50 ) {\n      x = x+1;\n    } else {\n      x = x+1;\n      y = y+1;\n    }\n  }\n\n  if( y > 100 || y < 100 )\n    goto ERROR;\n\nreturn;\n\n{ { ERROR: {; \n//@ assert(\\false);\n}\n}\n}\n\n}",
        "combined_annotation_num_solver_calls": 22,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n   int x, y;\n\n   x = 0;\n   y = 50;\n\n  /*@\nloop invariant i1: 0 <= x <= 100;\n\n\nloop invariant i4: x >= 0;\n\nloop invariant i6: x < 100 ==> y <= 100;\nloop invariant i7: x >= 50 ==> y >= 50;\nloop invariant i8: x >= 50 ==> x - y <= 50;\nloop invariant i9: x >= 50 ==> y - x <= 50;\nloop invariant i10: x >= 50 ==> x - y <= 50 ==> y <= 100;\nloop invariant i11: x >= 50 ==> y - x <= 50 ==> x <= 100;\nloop invariant i12: x >= 50 ==> x - y <= 50 ==> y <= 100 ==> x <= 100;\nloop invariant i13: x >= 50 ==> y - x <= 50 ==> x <= 100 ==> y <= 100;\nloop invariant i14: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant i15: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant i16: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant i17: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant i18: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant i19: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant i20: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant i21: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant i22: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant i23: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100;\nloop invariant i24: x >= 50 ==> x - y <= 50 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100 ==> y <= 100 ==> x <= 100;\nloop invariant i25: 0 <= x;\nloop invariant i26: 0 <= y;\nloop invariant i27: x <= y;\nloop invariant i28: x <= 100;\nloop invariant i29: y <= 100;\n\nloop invariant i31: y >= x - 1;\nloop invariant i32: x <= y + 100;\nloop invariant i33: y <= x + 100;\nloop invariant i34: x <= y + 101;\nloop invariant i35: y <= x + 101;\nloop invariant i36: x <= y + 102;\nloop invariant i37: y <= x + 102;\nloop invariant i38: x <= y + 103;\nloop invariant i39: y <= x + 103;\nloop invariant i40: x <= y + 104;\nloop invariant i41: y <= x + 104;\nloop invariant i42: x <= y + 105;\nloop invariant i43: y <= x + 105;\nloop invariant i44: x <= y + 106;\nloop invariant i45: y <= x + 106;\nloop invariant i46: x <= y + 107;\nloop invariant i47: y <= x + 107;\nloop invariant i48: x <= y + 108;\nloop invariant i49: y <= x + 108;\nloop invariant i50: x <= y + 109;\nloop invariant i51: y <= x + 109;\nloop invariant i52: x <= y + 110;\nloop invariant i53: y <= x + 110;\nloop invariant i54: x <= y + 111;\nloop invariant i55: y <= x + 111;\nloop invariant i56: x <= y + 112;\nloop invariant i57: y <= x + 112;\nloop invariant i58: x <= y + 113;\nloop invariant i59: y <= x + 113;\nloop invariant i60: x <= y + 114;\nloop invariant i61: y <= x + 114;\nloop invariant i62: x <= y + 115;\nloop invariant i63: y <= x + 115;\nloop invariant i64: x <= y + 116;\nloop invariant i65: y <= x + 116;\nloop invariant i66: x <= y + 117;\nloop invariant i67: y <= x + 117;\nloop invariant i68: x <= y + 118;\nloop invariant i69: y <= x + 118;\nloop invariant i70: x <= y + 119;\nloop invariant i71: y <= x + 119;\nloop invariant i72: x <= y + 120;\nloop invariant i73: y <= x + 120;\nloop invariant i74: x <= y + 121;\nloop invariant i75: y <= x + 121;\nloop invariant i76: x <= y + 122;\nloop invariant i77: y <= x + 122;\nloop invariant i78: x <= y + 123;\nloop invariant i79: y <= x + 123;\nloop invariant i80: x <= y + 124;\nloop invariant i81: y <= x + 124;\nloop invariant i82: x <= y + 125;\nloop invariant i83: y <= x + 125;\nloop invariant i84: x <= y + 126;\nloop invariant i85: y <= x + 126;\nloop invariant i86: x <= y + 127;\nloop invariant i87: y <= x + 127;\nloop invariant i88: x <= y + 128;\nloop invariant i89: y <= x + 128;\nloop invariant i90: x <= y + 129;\nloop invariant i91: y <= x + 129;\nloop invariant i92: x <= y + 130;\nloop invariant i93: y <= x + 130;\nloop invariant i94: x <= y + 131;\nloop invariant i95: y <= x + 131;\nloop invariant i96: x <= y + 132;\nloop invariant i97: y <= x + 132;\nloop invariant i98: x <= y + 133;\nloop invariant i99: y <= x + 133;\nloop invariant i100: x <= y + 134;\nloop invariant i101: y <= x + 134;\nloop invariant i102: x <= y + 135;\nloop invariant i103: y <= x + 135;\nloop invariant i104: x <= y + 136;\nloop invariant i105: y <= x + 136;\nloop invariant i106: x <= y + 137;\nloop invariant i107: y <= x + 137;\nloop invariant i108: x <= y + 138;\nloop invariant i109: y <= x + 138;\nloop invariant i110: x <= y + 139;\nloop invariant i111: y <= x + 139;\nloop invariant i112: x <= y + 140;\nloop invariant i113: y <= x + 140;\nloop invariant i114: x <= y + 141;\nloop invariant i115: y <= x + 141;\nloop invariant i116: x <= y + 142;\n\nloop invariant i118: (x - y) <= 0;\nloop invariant i119: (y - x) >= 0;\nloop invariant i120: 50 <= y <= 100;\nloop invariant i121: 50 <= y <= 150;\n\n\nloop invariant i124: (x < 50 ==> y == 50);\n\n\n\n\n\n\n\n\nloop invariant i133: 0 <= x < 100;\nloop invariant i134: 0 <= x <= 100; loop invariant 50 <= y <= 150; loop invariant (x < 50) ==> (y == 50); loop invariant (x >= 50) ==> (y >= 50); loop invariant x + y <= 150;\nloop invariant i135: x < 50 ==> y == 50;\nloop invariant i136: x >= 50 ==> y <= x;\nloop invariant i137: x >= 50 ==> y == x;\nloop invariant i138: x + y <= 150;\nloop invariant i139: (x < 50) ==> (y == 50);\nloop invariant i140: (x >= 50) ==> (y == x);\nloop invariant i141: (x == 100) ==> (y == 100);\n\n\n\nloop invariant i145: 50 <= y <= 101;\n\n\n*/\nwhile( x < 100 ) {\n    if( x < 50 ) {\n      x = x+1;\n    } else {\n      x = x+1;\n      y = y+1;\n    }\n  }\n\n  if( y > 100 || y < 100 )\n    goto ERROR;\n\nreturn;\n\n{ { ERROR: {; \n//@ assert(\\false);\n}\n}\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c"
        ],
        "failure": [],
        "skipped": [],
        "total": 2,
        "success_count": 2,
        "failure_count": 0,
        "success_rate": 1.0
    }
}