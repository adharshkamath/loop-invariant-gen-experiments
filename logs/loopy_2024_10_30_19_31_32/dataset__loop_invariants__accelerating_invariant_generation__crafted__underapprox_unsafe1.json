{
    "logs": {
        "file": "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_unsafe1.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  while (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 64;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 64;\nloop invariant y = 2^x;\nloop invariant x >= 0;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x <= 6;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 64;\nloop invariant y = 2^x;\nloop invariant y != 12 ==> x != 3;\nloop invariant y != 24 ==> x != 4;\nloop invariant y != 48 ==> x != 5;\nloop invariant y != 96 ==> x != 6;\nloop invariant y != 192 ==> x != 7;\nloop invariant y != 384 ==> x != 8;\nloop invariant y != 768 ==> x != 9;\nloop invariant y != 1536 ==> x != 10;\nloop invariant y != 3072 ==> x != 11;\nloop invariant y != 6144 ==> x != 12;\nloop invariant y != 12288 ==> x != 13;\nloop invariant y != 24576 ==> x != 14;\nloop invariant y != 49152 ==> x != 15;\nloop invariant y != 98304 ==> x != 16;\nloop invariant y != 196608 ==> x != 17;\nloop invariant y != 393216 ==> x != 18;\nloop invariant y != 786432 ==> x != 19;\nloop invariant y != 1572864 ==> x != 20;\nloop invariant y != 3145728 ==> x != 21;\nloop invariant y != 6291456 ==> x != 22;\nloop invariant y != 12582912 ==> x != 23;\nloop invariant y != 25165824 ==> x != 24;\nloop invariant y != 50331648 ==> x != 25;\nloop invariant y != 100663296 ==> x != 26;\nloop invariant y != 201326592 ==> x != 27;\nloop invariant y != 402653184 ==> x != 28;\nloop invariant y != 805306368 ==> x != 29;\nloop invariant y != 1610612736 ==> x != 30;\nloop invariant y != 3221225472 ==> x != 31;\nloop invariant y != 6442450944 ==> x != 32;\nloop invariant y != 12884901888 ==> x != 33;\nloop invariant y != 25769803776 ==> x != 34;\nloop invariant y != 51539607552 ==> x != 35;\nloop invariant y != 103079215104 ==> x != 36;\nloop invariant y != 206158430208 ==> x != 37;\nloop invariant y != 412316860416 ==> x != 38;\nloop invariant y != 824633720832 ==> x != 39;\nloop invariant y != 1649267441664 ==> x != 40;\nloop invariant y != 3298534883328 ==> x != 41;\nloop invariant y != 6597069766656 ==> x != 42;\nloop invariant y != 13194139533312 ==> x != 43;\nloop invariant y != 26388279066624 ==> x != 44;\nloop invariant y != 52776558133248 ==> x != 45;\nloop invariant y != 105553116266496 ==> x != 46;\nloop invariant y != 211106232532992 ==> x != 47;\nloop invariant y != 422212465065984 ==> x != 48;\nloop invariant y != 844424930131968 ==> x != 49;\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x < 7;\nloop invariant 1 <= y <= 64;\nloop invariant y == 2^x;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 6; loop invariant y >= 64; loop invariant x <= y / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 128;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant y >= 2^x;\nloop invariant y <= 2^(x+1);\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y > 1;\nloop invariant y <= 128;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y > 1;\nloop invariant y <= 128;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 128;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 2^x <= y <= 2^(x+1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 64;\nloop invariant y == (1 << x);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant y == (2 ^ x);\nloop invariant x >= 0;\nloop invariant y >= 1;\nloop invariant y == (2 ^ x);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 128;\nloop invariant x <= y/2;\nloop invariant y <= 2^x;\nloop invariant x + 1 == x';\nloop invariant y * 2 == y';\nloop invariant x' == x + 1 ==> 0 <= x' <= 6;\nloop invariant y' == y * 2 ==> 1 <= y' <= 128;\nloop invariant x' == x + 1 ==> x' <= y'/2;\nloop invariant y' == y * 2 ==> y' <= 2^x';\nloop invariant x == x' ==> x' == x;\nloop invariant y == y' ==> y' == y;\nloop invariant x == x' ==> 0 <= x <= 6;\nloop invariant y == y' ==> 1 <= y <= 128;\nloop invariant x == x' ==> x <= y'/2;\nloop invariant y == y' ==> y <= 2^x';\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 5;\nloop invariant 1 <= y <= 64;\nloop invariant y == (1 << x);\nloop invariant y != 12 ==> x >= 6;\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 64;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 64;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 64;\nloop invariant y = 2^x;\nloop invariant x >= 0;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x <= 6;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y = 2^x;\nloop invariant y >= 1;\nloop invariant y <= 64;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\n\n\nloop invariant i4: x >= 0;\n\n\nloop invariant i7: x <= 6;\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 64;\nloop invariant y = 2^x;\nloop invariant y != 12 ==> x != 3;\nloop invariant y != 24 ==> x != 4;\nloop invariant y != 48 ==> x != 5;\nloop invariant y != 96 ==> x != 6;\nloop invariant y != 192 ==> x != 7;\nloop invariant y != 384 ==> x != 8;\nloop invariant y != 768 ==> x != 9;\nloop invariant y != 1536 ==> x != 10;\nloop invariant y != 3072 ==> x != 11;\nloop invariant y != 6144 ==> x != 12;\nloop invariant y != 12288 ==> x != 13;\nloop invariant y != 24576 ==> x != 14;\nloop invariant y != 49152 ==> x != 15;\nloop invariant y != 98304 ==> x != 16;\nloop invariant y != 196608 ==> x != 17;\nloop invariant y != 393216 ==> x != 18;\nloop invariant y != 786432 ==> x != 19;\nloop invariant y != 1572864 ==> x != 20;\nloop invariant y != 3145728 ==> x != 21;\nloop invariant y != 6291456 ==> x != 22;\nloop invariant y != 12582912 ==> x != 23;\nloop invariant y != 25165824 ==> x != 24;\nloop invariant y != 50331648 ==> x != 25;\nloop invariant y != 100663296 ==> x != 26;\nloop invariant y != 201326592 ==> x != 27;\nloop invariant y != 402653184 ==> x != 28;\nloop invariant y != 805306368 ==> x != 29;\nloop invariant y != 1610612736 ==> x != 30;\nloop invariant y != 3221225472 ==> x != 31;\nloop invariant y != 6442450944 ==> x != 32;\nloop invariant y != 12884901888 ==> x != 33;\nloop invariant y != 25769803776 ==> x != 34;\nloop invariant y != 51539607552 ==> x != 35;\nloop invariant y != 103079215104 ==> x != 36;\nloop invariant y != 206158430208 ==> x != 37;\nloop invariant y != 412316860416 ==> x != 38;\nloop invariant y != 824633720832 ==> x != 39;\nloop invariant y != 1649267441664 ==> x != 40;\nloop invariant y != 3298534883328 ==> x != 41;\nloop invariant y != 6597069766656 ==> x != 42;\nloop invariant y != 13194139533312 ==> x != 43;\nloop invariant y != 26388279066624 ==> x != 44;\nloop invariant y != 52776558133248 ==> x != 45;\nloop invariant y != 105553116266496 ==> x != 46;\nloop invariant y != 211106232532992 ==> x != 47;\nloop invariant y != 422212465065984 ==> x != 48;\nloop invariant y != 844424930131968 ==> x != 49;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\n\n\n\n\n\n\nloop invariant i8: y != 192 ==> x != 7;\nloop invariant i9: y != 384 ==> x != 8;\nloop invariant i10: y != 768 ==> x != 9;\nloop invariant i11: y != 1536 ==> x != 10;\nloop invariant i12: y != 3072 ==> x != 11;\nloop invariant i13: y != 6144 ==> x != 12;\nloop invariant i14: y != 12288 ==> x != 13;\nloop invariant i15: y != 24576 ==> x != 14;\nloop invariant i16: y != 49152 ==> x != 15;\nloop invariant i17: y != 98304 ==> x != 16;\nloop invariant i18: y != 196608 ==> x != 17;\nloop invariant i19: y != 393216 ==> x != 18;\nloop invariant i20: y != 786432 ==> x != 19;\nloop invariant i21: y != 1572864 ==> x != 20;\nloop invariant i22: y != 3145728 ==> x != 21;\nloop invariant i23: y != 6291456 ==> x != 22;\nloop invariant i24: y != 12582912 ==> x != 23;\nloop invariant i25: y != 25165824 ==> x != 24;\nloop invariant i26: y != 50331648 ==> x != 25;\nloop invariant i27: y != 100663296 ==> x != 26;\nloop invariant i28: y != 201326592 ==> x != 27;\nloop invariant i29: y != 402653184 ==> x != 28;\nloop invariant i30: y != 805306368 ==> x != 29;\nloop invariant i31: y != 1610612736 ==> x != 30;\nloop invariant i32: y != 3221225472 ==> x != 31;\nloop invariant i33: y != 6442450944 ==> x != 32;\nloop invariant i34: y != 12884901888 ==> x != 33;\nloop invariant i35: y != 25769803776 ==> x != 34;\nloop invariant i36: y != 51539607552 ==> x != 35;\nloop invariant i37: y != 103079215104 ==> x != 36;\nloop invariant i38: y != 206158430208 ==> x != 37;\nloop invariant i39: y != 412316860416 ==> x != 38;\nloop invariant i40: y != 824633720832 ==> x != 39;\nloop invariant i41: y != 1649267441664 ==> x != 40;\nloop invariant i42: y != 3298534883328 ==> x != 41;\nloop invariant i43: y != 6597069766656 ==> x != 42;\nloop invariant i44: y != 13194139533312 ==> x != 43;\nloop invariant i45: y != 26388279066624 ==> x != 44;\nloop invariant i46: y != 52776558133248 ==> x != 45;\nloop invariant i47: y != 105553116266496 ==> x != 46;\nloop invariant i48: y != 211106232532992 ==> x != 47;\nloop invariant i49: y != 422212465065984 ==> x != 48;\nloop invariant i50: y != 844424930131968 ==> x != 49;\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 158,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x < 7;\nloop invariant 1 <= y <= 64;\nloop invariant y == 2^x;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x < 7;\n\n\nloop invariant i4: x >= 0;\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6; loop invariant y >= 64; loop invariant x <= y / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6; loop invariant y >= 64; loop invariant x <= y / 2;\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 128;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant y >= 2^x;\nloop invariant y <= 2^(x+1);\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y > 1;\nloop invariant y <= 128;\nloop invariant x >= 0;\nloop invariant x <= 6;\nloop invariant y > 1;\nloop invariant y <= 128;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\n\n\nloop invariant i4: x >= 0;\nloop invariant i5: x <= 6;\n\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 128;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 2^x <= y <= 2^(x+1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 64;\nloop invariant y == (1 << x);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\n\nloop invariant i3: y == (1 << x);\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant y == (2 ^ x);\nloop invariant x >= 0;\nloop invariant y >= 1;\nloop invariant y == (2 ^ x);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\n\nloop invariant i3: x >= 0;\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 128;\nloop invariant x <= y/2;\nloop invariant y <= 2^x;\nloop invariant x + 1 == x';\nloop invariant y * 2 == y';\nloop invariant x' == x + 1 ==> 0 <= x' <= 6;\nloop invariant y' == y * 2 ==> 1 <= y' <= 128;\nloop invariant x' == x + 1 ==> x' <= y'/2;\nloop invariant y' == y * 2 ==> y' <= 2^x';\nloop invariant x == x' ==> x' == x;\nloop invariant y == y' ==> y' == y;\nloop invariant x == x' ==> 0 <= x <= 6;\nloop invariant y == y' ==> 1 <= y <= 128;\nloop invariant x == x' ==> x <= y'/2;\nloop invariant y == y' ==> y <= 2^x';\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\nloop invariant i2: 1 <= y <= 128;\nloop invariant i3: x <= y/2;\nloop invariant i4: y <= 2^x;\n\nloop invariant i6: y * 2 == y';\nloop invariant i7: x' == x + 1 ==> 0 <= x' <= 6;\nloop invariant i8: y' == y * 2 ==> 1 <= y' <= 128;\nloop invariant i9: x' == x + 1 ==> x' <= y'/2;\nloop invariant i10: y' == y * 2 ==> y' <= 2^x';\nloop invariant i11: x == x' ==> x' == x;\nloop invariant i12: y == y' ==> y' == y;\nloop invariant i13: x == x' ==> 0 <= x <= 6;\nloop invariant i14: y == y' ==> 1 <= y <= 128;\nloop invariant i15: x == x' ==> x <= y'/2;\nloop invariant i16: y == y' ==> y <= 2^x';\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 5;\nloop invariant 1 <= y <= 64;\nloop invariant y == (1 << x);\nloop invariant y != 12 ==> x >= 6;\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\nloop invariant y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\n\n\nloop invariant i3: y == (1 << x);\n\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 64;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 14: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\nloop invariant i2: 1 <= y <= 64;\nloop invariant i3: y = 2^x;\nloop invariant i4: x >= 0;\nloop invariant i5: y >= 1;\nloop invariant i6: y <= 64;\nloop invariant i7: x <= 6;\nloop invariant i8: y != 12 ==> x != 3;\nloop invariant i9: y != 24 ==> x != 4;\nloop invariant i10: y != 48 ==> x != 5;\nloop invariant i11: y != 96 ==> x != 6;\nloop invariant i12: y != 192 ==> x != 7;\nloop invariant i13: y != 384 ==> x != 8;\nloop invariant i14: y != 768 ==> x != 9;\nloop invariant i15: y != 1536 ==> x != 10;\nloop invariant i16: y != 3072 ==> x != 11;\nloop invariant i17: y != 6144 ==> x != 12;\nloop invariant i18: y != 12288 ==> x != 13;\nloop invariant i19: y != 24576 ==> x != 14;\nloop invariant i20: y != 49152 ==> x != 15;\nloop invariant i21: y != 98304 ==> x != 16;\nloop invariant i22: y != 196608 ==> x != 17;\nloop invariant i23: y != 393216 ==> x != 18;\nloop invariant i24: y != 786432 ==> x != 19;\nloop invariant i25: y != 1572864 ==> x != 20;\nloop invariant i26: y != 3145728 ==> x != 21;\nloop invariant i27: y != 6291456 ==> x != 22;\nloop invariant i28: y != 12582912 ==> x != 23;\nloop invariant i29: y != 25165824 ==> x != 24;\nloop invariant i30: y != 50331648 ==> x != 25;\nloop invariant i31: y != 100663296 ==> x != 26;\nloop invariant i32: y != 201326592 ==> x != 27;\nloop invariant i33: y != 402653184 ==> x != 28;\nloop invariant i34: y != 805306368 ==> x != 29;\nloop invariant i35: y != 1610612736 ==> x != 30;\nloop invariant i36: y != 3221225472 ==> x != 31;\nloop invariant i37: y != 6442450944 ==> x != 32;\nloop invariant i38: y != 12884901888 ==> x != 33;\nloop invariant i39: y != 25769803776 ==> x != 34;\nloop invariant i40: y != 51539607552 ==> x != 35;\nloop invariant i41: y != 103079215104 ==> x != 36;\nloop invariant i42: y != 206158430208 ==> x != 37;\nloop invariant i43: y != 412316860416 ==> x != 38;\nloop invariant i44: y != 824633720832 ==> x != 39;\nloop invariant i45: y != 1649267441664 ==> x != 40;\nloop invariant i46: y != 3298534883328 ==> x != 41;\nloop invariant i47: y != 6597069766656 ==> x != 42;\nloop invariant i48: y != 13194139533312 ==> x != 43;\nloop invariant i49: y != 26388279066624 ==> x != 44;\nloop invariant i50: y != 52776558133248 ==> x != 45;\nloop invariant i51: y != 105553116266496 ==> x != 46;\nloop invariant i52: y != 211106232532992 ==> x != 47;\nloop invariant i53: y != 422212465065984 ==> x != 48;\nloop invariant i54: y != 844424930131968 ==> x != 49;\nloop invariant i55: i1;\nloop invariant i56: i2;\nloop invariant i57: i3;\nloop invariant i58: i4;\nloop invariant i59: i5;\nloop invariant i60: i6;\nloop invariant i61: i7;\nloop invariant i62: i8;\nloop invariant i63: i9;\nloop invariant i64: i10;\nloop invariant i65: i11;\nloop invariant i66: i12;\nloop invariant i67: i13;\nloop invariant i68: i14;\nloop invariant i69: i15;\nloop invariant i70: i16;\nloop invariant i71: i17;\nloop invariant i72: i18;\nloop invariant i73: i19;\nloop invariant i74: i20;\nloop invariant i75: i21;\nloop invariant i76: i22;\nloop invariant i77: i23;\nloop invariant i78: i24;\nloop invariant i79: i25;\nloop invariant i80: i26;\nloop invariant i81: i27;\nloop invariant i82: i28;\nloop invariant i83: i29;\nloop invariant i84: i30;\nloop invariant i85: i31;\nloop invariant i86: i32;\nloop invariant i87: i33;\nloop invariant i88: i34;\nloop invariant i89: i35;\nloop invariant i90: i36;\nloop invariant i91: i37;\nloop invariant i92: i38;\nloop invariant i93: i39;\nloop invariant i94: i40;\nloop invariant i95: i41;\nloop invariant i96: i42;\nloop invariant i97: i43;\nloop invariant i98: i44;\nloop invariant i99: i45;\nloop invariant i100: i46;\nloop invariant i101: i47;\nloop invariant i102: i48;\nloop invariant i103: i49;\nloop invariant i104: i50;\nloop invariant i105: i51;\nloop invariant i106: i52;\nloop invariant i107: i53;\nloop invariant i108: i54;\nloop invariant i109: i55;\nloop invariant i110: i56;\nloop invariant i111: i57;\nloop invariant i112: i58;\nloop invariant i113: i59;\nloop invariant i114: i60;\nloop invariant i115: i61;\nloop invariant i116: i62;\nloop invariant i117: i63;\nloop invariant i118: i64;\nloop invariant i119: i65;\nloop invariant i120: i66;\nloop invariant i121: i67;\nloop invariant i122: i68;\nloop invariant i123: i69;\nloop invariant i124: i70;\nloop invariant i125: i71;\nloop invariant i126: i72;\nloop invariant i127: i73;\nloop invariant i128: i74;\nloop invariant i129: i75;\nloop invariant i130: i76;\nloop invariant i131: i77;\nloop invariant i132: i78;\nloop invariant i133: i79;\nloop invariant i134: i80;\nloop invariant i135: i81;\nloop invariant i136: i82;\nloop invariant i137: i83;\nloop invariant i138: i84;\nloop invariant i139: i85;\nloop invariant i140: i86;\nloop invariant i141: i87;\nloop invariant i142: i88;\nloop invariant i143: i89;\nloop invariant i144: i90;\nloop invariant i145: i91;\nloop invariant i146: i92;\nloop invariant i147: i93;\nloop invariant i148: i94;\nloop invariant i149: i95;\nloop invariant i150: i96;\nloop invariant i151: i97;\nloop invariant i152: i98;\nloop invariant i153: i99;\nloop invariant i154: i100;\nloop invariant i155: i101;\nloop invariant i156: i102;\nloop invariant i157: i103;\nloop invariant i158: i104;\nloop invariant i159: i105;\nloop invariant i160: i106;\nloop invariant i161: i107;\nloop invariant i162: i108;\nloop invariant i163: i109;\nloop invariant i164: i110;\nloop invariant i165: i111;\nloop invariant i166: i112;\nloop invariant i167: i113;\nloop invariant i168: i114;\nloop invariant i169: i115;\nloop invariant i170: i116;\nloop invariant i171: i117;\nloop invariant i172: i118;\nloop invariant i173: i119;\nloop invariant i174: i120;\nloop invariant i175: i121;\nloop invariant i176: i122;\nloop invariant i177: i123;\nloop invariant i178: i124;\nloop invariant i179: i125;\nloop invariant i180: i126;\nloop invariant i181: i127;\nloop invariant i182: i128;\nloop invariant i183: i129;\nloop invariant i184: i130;\nloop invariant i185: i131;\nloop invariant i186: i132;\nloop invariant i187: i133;\nloop invariant i188: i134;\nloop invariant i189: i135;\nloop invariant i190: i136;\nloop invariant i191: i137;\nloop invariant i192: i138;\nloop invariant i193: i139;\nloop invariant i194: i140;\nloop invariant i195: i141;\nloop invariant i196: i142;\nloop invariant i197: i143;\nloop invariant i198: i144;\nloop invariant i199: i145;\nloop invariant i200: i146;\nloop invariant i201: i147;\nloop invariant i202: i148;\nloop invariant i203: i149;\nloop invariant i204: i150;\nloop invariant i205: i151;\nloop invariant i206: i152;\nloop invariant i207: i153;\nloop invariant i208: i154;\nloop invariant i209: i155;\nloop invariant i210: i156;\nloop invariant i211: i157;\nloop invariant i212: i158;\nloop invariant i213: 0 <= x < 7;\nloop invariant i214: y == 2^x;\nloop invariant i215: 0 <= x <= 6; loop invariant y >= 64; loop invariant x <= y / 2;\nloop invariant i216: 1 <= y <= 128;\nloop invariant i217: y >= 2^x;\nloop invariant i218: y <= 2^(x+1);\nloop invariant i219: y > 1;\nloop invariant i220: y <= 128;\nloop invariant i221: 2^x <= y <= 2^(x+1);\nloop invariant i222: y == (1 << x);\nloop invariant i223: y == (2 ^ x);\nloop invariant i224: x <= y/2;\nloop invariant i225: y <= 2^x;\nloop invariant i226: x + 1 == x';\nloop invariant i227: y * 2 == y';\nloop invariant i228: x' == x + 1 ==> 0 <= x' <= 6;\nloop invariant i229: y' == y * 2 ==> 1 <= y' <= 128;\nloop invariant i230: x' == x + 1 ==> x' <= y'/2;\nloop invariant i231: y' == y * 2 ==> y' <= 2^x';\nloop invariant i232: x == x' ==> x' == x;\nloop invariant i233: y == y' ==> y' == y;\nloop invariant i234: x == x' ==> 0 <= x <= 6;\nloop invariant i235: y == y' ==> 1 <= y <= 128;\nloop invariant i236: x == x' ==> x <= y'/2;\nloop invariant i237: y == y' ==> y <= 2^x';\nloop invariant i238: 0 <= x <= 5;\nloop invariant i239: y != 12 ==> x >= 6;\nloop invariant i240: y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
        "combined_annotation_num_solver_calls": 4,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\nloop invariant i2: 1 <= y <= 64;\n\nloop invariant i4: x >= 0;\nloop invariant i5: y >= 1;\nloop invariant i6: y <= 64;\nloop invariant i7: x <= 6;\nloop invariant i8: y != 12 ==> x != 3;\nloop invariant i9: y != 24 ==> x != 4;\nloop invariant i10: y != 48 ==> x != 5;\nloop invariant i11: y != 96 ==> x != 6;\nloop invariant i12: y != 192 ==> x != 7;\nloop invariant i13: y != 384 ==> x != 8;\nloop invariant i14: y != 768 ==> x != 9;\nloop invariant i15: y != 1536 ==> x != 10;\nloop invariant i16: y != 3072 ==> x != 11;\nloop invariant i17: y != 6144 ==> x != 12;\nloop invariant i18: y != 12288 ==> x != 13;\nloop invariant i19: y != 24576 ==> x != 14;\nloop invariant i20: y != 49152 ==> x != 15;\nloop invariant i21: y != 98304 ==> x != 16;\nloop invariant i22: y != 196608 ==> x != 17;\nloop invariant i23: y != 393216 ==> x != 18;\nloop invariant i24: y != 786432 ==> x != 19;\nloop invariant i25: y != 1572864 ==> x != 20;\nloop invariant i26: y != 3145728 ==> x != 21;\nloop invariant i27: y != 6291456 ==> x != 22;\nloop invariant i28: y != 12582912 ==> x != 23;\nloop invariant i29: y != 25165824 ==> x != 24;\nloop invariant i30: y != 50331648 ==> x != 25;\nloop invariant i31: y != 100663296 ==> x != 26;\nloop invariant i32: y != 201326592 ==> x != 27;\nloop invariant i33: y != 402653184 ==> x != 28;\nloop invariant i34: y != 805306368 ==> x != 29;\nloop invariant i35: y != 1610612736 ==> x != 30;\nloop invariant i36: y != 3221225472 ==> x != 31;\nloop invariant i37: y != 6442450944 ==> x != 32;\nloop invariant i38: y != 12884901888 ==> x != 33;\nloop invariant i39: y != 25769803776 ==> x != 34;\nloop invariant i40: y != 51539607552 ==> x != 35;\nloop invariant i41: y != 103079215104 ==> x != 36;\nloop invariant i42: y != 206158430208 ==> x != 37;\nloop invariant i43: y != 412316860416 ==> x != 38;\nloop invariant i44: y != 824633720832 ==> x != 39;\nloop invariant i45: y != 1649267441664 ==> x != 40;\nloop invariant i46: y != 3298534883328 ==> x != 41;\nloop invariant i47: y != 6597069766656 ==> x != 42;\nloop invariant i48: y != 13194139533312 ==> x != 43;\nloop invariant i49: y != 26388279066624 ==> x != 44;\nloop invariant i50: y != 52776558133248 ==> x != 45;\nloop invariant i51: y != 105553116266496 ==> x != 46;\nloop invariant i52: y != 211106232532992 ==> x != 47;\nloop invariant i53: y != 422212465065984 ==> x != 48;\nloop invariant i54: y != 844424930131968 ==> x != 49;\nloop invariant i55: i1;\nloop invariant i56: i2;\nloop invariant i57: i3;\nloop invariant i58: i4;\nloop invariant i59: i5;\nloop invariant i60: i6;\nloop invariant i61: i7;\nloop invariant i62: i8;\nloop invariant i63: i9;\nloop invariant i64: i10;\nloop invariant i65: i11;\nloop invariant i66: i12;\nloop invariant i67: i13;\nloop invariant i68: i14;\nloop invariant i69: i15;\nloop invariant i70: i16;\nloop invariant i71: i17;\nloop invariant i72: i18;\nloop invariant i73: i19;\nloop invariant i74: i20;\nloop invariant i75: i21;\nloop invariant i76: i22;\nloop invariant i77: i23;\nloop invariant i78: i24;\nloop invariant i79: i25;\nloop invariant i80: i26;\nloop invariant i81: i27;\nloop invariant i82: i28;\nloop invariant i83: i29;\nloop invariant i84: i30;\nloop invariant i85: i31;\nloop invariant i86: i32;\nloop invariant i87: i33;\nloop invariant i88: i34;\nloop invariant i89: i35;\nloop invariant i90: i36;\nloop invariant i91: i37;\nloop invariant i92: i38;\nloop invariant i93: i39;\nloop invariant i94: i40;\nloop invariant i95: i41;\nloop invariant i96: i42;\nloop invariant i97: i43;\nloop invariant i98: i44;\nloop invariant i99: i45;\nloop invariant i100: i46;\nloop invariant i101: i47;\nloop invariant i102: i48;\nloop invariant i103: i49;\nloop invariant i104: i50;\nloop invariant i105: i51;\nloop invariant i106: i52;\nloop invariant i107: i53;\nloop invariant i108: i54;\nloop invariant i109: i55;\nloop invariant i110: i56;\nloop invariant i111: i57;\nloop invariant i112: i58;\nloop invariant i113: i59;\nloop invariant i114: i60;\nloop invariant i115: i61;\nloop invariant i116: i62;\nloop invariant i117: i63;\nloop invariant i118: i64;\nloop invariant i119: i65;\nloop invariant i120: i66;\nloop invariant i121: i67;\nloop invariant i122: i68;\nloop invariant i123: i69;\nloop invariant i124: i70;\nloop invariant i125: i71;\nloop invariant i126: i72;\nloop invariant i127: i73;\nloop invariant i128: i74;\nloop invariant i129: i75;\nloop invariant i130: i76;\nloop invariant i131: i77;\nloop invariant i132: i78;\nloop invariant i133: i79;\nloop invariant i134: i80;\nloop invariant i135: i81;\nloop invariant i136: i82;\nloop invariant i137: i83;\nloop invariant i138: i84;\nloop invariant i139: i85;\nloop invariant i140: i86;\nloop invariant i141: i87;\nloop invariant i142: i88;\nloop invariant i143: i89;\nloop invariant i144: i90;\nloop invariant i145: i91;\nloop invariant i146: i92;\nloop invariant i147: i93;\nloop invariant i148: i94;\nloop invariant i149: i95;\nloop invariant i150: i96;\nloop invariant i151: i97;\nloop invariant i152: i98;\nloop invariant i153: i99;\nloop invariant i154: i100;\nloop invariant i155: i101;\nloop invariant i156: i102;\nloop invariant i157: i103;\nloop invariant i158: i104;\nloop invariant i159: i105;\nloop invariant i160: i106;\nloop invariant i161: i107;\nloop invariant i162: i108;\nloop invariant i163: i109;\nloop invariant i164: i110;\nloop invariant i165: i111;\nloop invariant i166: i112;\nloop invariant i167: i113;\nloop invariant i168: i114;\nloop invariant i169: i115;\nloop invariant i170: i116;\nloop invariant i171: i117;\nloop invariant i172: i118;\nloop invariant i173: i119;\nloop invariant i174: i120;\nloop invariant i175: i121;\nloop invariant i176: i122;\nloop invariant i177: i123;\nloop invariant i178: i124;\nloop invariant i179: i125;\nloop invariant i180: i126;\nloop invariant i181: i127;\nloop invariant i182: i128;\nloop invariant i183: i129;\nloop invariant i184: i130;\nloop invariant i185: i131;\nloop invariant i186: i132;\nloop invariant i187: i133;\nloop invariant i188: i134;\nloop invariant i189: i135;\nloop invariant i190: i136;\nloop invariant i191: i137;\nloop invariant i192: i138;\nloop invariant i193: i139;\nloop invariant i194: i140;\nloop invariant i195: i141;\nloop invariant i196: i142;\nloop invariant i197: i143;\nloop invariant i198: i144;\nloop invariant i199: i145;\nloop invariant i200: i146;\nloop invariant i201: i147;\nloop invariant i202: i148;\nloop invariant i203: i149;\nloop invariant i204: i150;\nloop invariant i205: i151;\nloop invariant i206: i152;\nloop invariant i207: i153;\nloop invariant i208: i154;\nloop invariant i209: i155;\nloop invariant i210: i156;\nloop invariant i211: i157;\nloop invariant i212: i158;\nloop invariant i213: 0 <= x < 7;\nloop invariant i214: y == 2^x;\nloop invariant i215: 0 <= x <= 6; loop invariant y >= 64; loop invariant x <= y / 2;\nloop invariant i216: 1 <= y <= 128;\nloop invariant i217: y >= 2^x;\nloop invariant i218: y <= 2^(x+1);\nloop invariant i219: y > 1;\nloop invariant i220: y <= 128;\nloop invariant i221: 2^x <= y <= 2^(x+1);\nloop invariant i222: y == (1 << x);\nloop invariant i223: y == (2 ^ x);\nloop invariant i224: x <= y/2;\nloop invariant i225: y <= 2^x;\n\nloop invariant i227: y * 2 == y';\nloop invariant i228: x' == x + 1 ==> 0 <= x' <= 6;\nloop invariant i229: y' == y * 2 ==> 1 <= y' <= 128;\nloop invariant i230: x' == x + 1 ==> x' <= y'/2;\nloop invariant i231: y' == y * 2 ==> y' <= 2^x';\nloop invariant i232: x == x' ==> x' == x;\nloop invariant i233: y == y' ==> y' == y;\nloop invariant i234: x == x' ==> 0 <= x <= 6;\nloop invariant i235: y == y' ==> 1 <= y <= 128;\nloop invariant i236: x == x' ==> x <= y'/2;\nloop invariant i237: y == y' ==> y <= 2^x';\nloop invariant i238: 0 <= x <= 5;\nloop invariant i239: y != 12 ==> x >= 6;\nloop invariant i240: y == 12 ==> (x < 6 ==> y == 1) && (x >= 6 ==> y != 1);\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/popl.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/07.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/39.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv_simp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/xy10.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/const_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe3.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe4.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_unsafe1.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/05.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/37.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/pldi082_unbounded.c"
        ],
        "skipped": [],
        "total": 145,
        "success_count": 117,
        "failure_count": 28,
        "success_rate": 0.8068965517241379
    }
}