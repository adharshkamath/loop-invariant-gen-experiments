{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  for(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= x <= n * (n - 1) / 2;\nloop invariant 0 <= y <= n * (n - 1) / 2;\nloop invariant x >= y;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n; loop invariant x == 0; loop invariant y == 0; loop invariant n == unknown_int(); loop invariant n > 0; loop invariant x == 0 ==> i <= n; loop invariant i <= n ==> x == 0; loop invariant y == 0 ==> i <= n; loop invariant i <= n ==> y == 0; loop invariant x == 0 ==> y == 0; loop invariant y == 0 ==> x == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\nloop invariant 0 <= i <= n;\nloop invariant x == 0 ==> i > 0;\nloop invariant y == 0 ==> i > 0;\nloop invariant x == 0 ==> i <= n;\nloop invariant y == 0 ==> i <= n;\nloop invariant x == 0 ==> i > 0 ==> x == 0;\nloop invariant y == 0 ==> i > 0 ==> x == 0;\nloop invariant x == 0 ==> i <= n ==> x == 0;\nloop invariant y == 0 ==> i <= n ==> x == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n <= 2147483647;\nloop invariant (unknown_int() > 0) ==> (unknown_int() <= 2147483647);\nloop invariant i >= 0;\nloop invariant i < 2147483647;\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (i == 0);\nloop invariant (i == 0) ==> (i < 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant i == 0 ==> x == 0;\nloop invariant i > 0 ==> y > 0 && x <= y;\nloop invariant i == n ==> x > 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == y;\nloop invariant 0 <= y <= x;\nloop invariant i < n ==> x != 0;\nloop invariant i == n ==> x == 0;\nloop invariant i < n ==> y == 0;\nloop invariant i == n ==> y != 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == i;\nloop invariant y == i;\n*/\n```",
            "```\n/*@\nloop invariant y = 0;\nloop invariant i = 0;\nloop invariant x = 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant n > 0;\nloop invariant i <= n;\nloop invariant i <= (n - 1);\nloop invariant i < n;\nloop invariant i <= (n - 1);\nloop invariant i < n;\nloop invariant y = 0;\nloop invariant i = 0;\nloop invariant x = 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant n > 0;\nloop invariant i <= n;\nloop invariant i <= (n - 1);\nloop invariant i < n;\nloop invariant i <= (n - 1);\nloop invariant i < n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i;\nloop invariant i <= 4294967295;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\nloop invariant i <= n;\nloop invariant i <= 4294967295 ==> i == n;\nloop invariant x == 0 ==> y == 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= x <= n * (n - 1) / 2;\nloop invariant 0 <= y <= n * (n - 1) / 2;\nloop invariant x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: 0 <= x <= n * (n - 1) / 2;\nloop invariant i3: 0 <= y <= n * (n - 1) / 2;\nloop invariant i4: x >= y;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: x <= y;\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n; loop invariant x == 0; loop invariant y == 0; loop invariant n == unknown_int(); loop invariant n > 0; loop invariant x == 0 ==> i <= n; loop invariant i <= n ==> x == 0; loop invariant y == 0 ==> i <= n; loop invariant i <= n ==> y == 0; loop invariant x == 0 ==> y == 0; loop invariant y == 0 ==> x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= i;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\nloop invariant 0 <= i <= n;\nloop invariant x == 0 ==> i > 0;\nloop invariant y == 0 ==> i > 0;\nloop invariant x == 0 ==> i <= n;\nloop invariant y == 0 ==> i <= n;\nloop invariant x == 0 ==> i > 0 ==> x == 0;\nloop invariant y == 0 ==> i > 0 ==> x == 0;\nloop invariant x == 0 ==> i <= n ==> x == 0;\nloop invariant y == 0 ==> i <= n ==> x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\nloop invariant i1: 0 <= i;\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: n > 0;\n\n\n\n\n\nloop invariant i10: x == 0 ==> i > 0 ==> x == 0;\nloop invariant i11: y == 0 ==> i > 0 ==> x == 0;\nloop invariant i12: x == 0 ==> i <= n ==> x == 0;\nloop invariant i13: y == 0 ==> i <= n ==> x == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= n <= 2147483647;\nloop invariant (unknown_int() > 0) ==> (unknown_int() <= 2147483647);\nloop invariant i >= 0;\nloop invariant i < 2147483647;\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (i == 0);\nloop invariant (i == 0) ==> (i < 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\nloop invariant (i == 0) ==> (n <= 2147483647);\nloop invariant (i == 0) ==> (x == 0);\nloop invariant (i == 0) ==> (y == 0);\nloop invariant (i == 0) ==> (n > 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\nloop invariant i1: 0 <= n <= 2147483647;\n\nloop invariant i3: i >= 0;\n\nloop invariant i5: (i == 0) ==> (x == 0);\n\n\nloop invariant i8: (i == 0) ==> (n <= 2147483647);\nloop invariant i9: (i == 0) ==> (i == 0);\nloop invariant i10: (i == 0) ==> (i < 2147483647);\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant i == 0 ==> x == 0;\nloop invariant i > 0 ==> y > 0 && x <= y;\nloop invariant i == n ==> x > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: i == 0 ==> x == 0;\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == y;\nloop invariant 0 <= y <= x;\nloop invariant i < n ==> x != 0;\nloop invariant i == n ==> x == 0;\nloop invariant i < n ==> y == 0;\nloop invariant i == n ==> y != 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x == y;\nloop invariant i3: 0 <= y <= x;\n\nloop invariant i5: i == n ==> x == 0;\nloop invariant i6: i < n ==> y == 0;\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == i;\nloop invariant y == i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant y = 0;\nloop invariant i = 0;\nloop invariant x = 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant n > 0;\nloop invariant i <= n;\nloop invariant i <= (n - 1);\nloop invariant i < n;\nloop invariant i <= (n - 1);\nloop invariant i < n;\nloop invariant y = 0;\nloop invariant i = 0;\nloop invariant x = 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant n > 0;\nloop invariant i <= n;\nloop invariant i <= (n - 1);\nloop invariant i < n;\nloop invariant i <= (n - 1);\nloop invariant i < n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\n\n\nloop invariant i4: x >= 0;\nloop invariant i5: y >= 0;\nloop invariant i6: i >= 0;\nloop invariant i7: n > 0;\n\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant i >= 0;\nloop invariant i <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: x <= y;\nloop invariant i5: i >= 0;\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x >= 0;\nloop invariant i3: y >= 0;\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i;\nloop invariant i <= 4294967295;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\nloop invariant i <= n;\nloop invariant i <= 4294967295 ==> i == n;\nloop invariant x == 0 ==> y == 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\nloop invariant i1: 0 <= i;\nloop invariant i2: i <= 4294967295;\nloop invariant i3: x == 0;\nloop invariant i4: y == 0;\nloop invariant i5: n > 0;\n\n\nloop invariant i8: x == 0 ==> y == 0;\nloop invariant i9: i <= n ==> x == 0;\nloop invariant i10: i <= n ==> y == 0;\nloop invariant i11: i <= n ==> x == 0 ==> y == 0;\n\nloop invariant i13: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i14: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\nloop invariant i15: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i16: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i17: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\nloop invariant i18: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i19: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i20: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\nloop invariant i21: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i22: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i23: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\nloop invariant i24: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i25: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i26: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 24: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: 0 <= x <= n * (n - 1) / 2;\nloop invariant i3: 0 <= y <= n * (n - 1) / 2;\nloop invariant i4: x >= y;\nloop invariant i5: 1 <= i <= n;\nloop invariant i6: x == 0;\nloop invariant i7: y == 0;\nloop invariant i8: x <= y;\nloop invariant i9: i == n;\nloop invariant i10: 0 <= i <= n; loop invariant x == 0; loop invariant y == 0; loop invariant n == unknown_int(); loop invariant n > 0; loop invariant x == 0 ==> i <= n; loop invariant i <= n ==> x == 0; loop invariant y == 0 ==> i <= n; loop invariant i <= n ==> y == 0; loop invariant x == 0 ==> y == 0; loop invariant y == 0 ==> x == 0;\nloop invariant i11: 0 <= i;\nloop invariant i12: n > 0;\nloop invariant i13: x == 0 ==> i > 0;\nloop invariant i14: y == 0 ==> i > 0;\nloop invariant i15: x == 0 ==> i <= n;\nloop invariant i16: y == 0 ==> i <= n;\nloop invariant i17: x == 0 ==> i > 0 ==> x == 0;\nloop invariant i18: y == 0 ==> i > 0 ==> x == 0;\nloop invariant i19: x == 0 ==> i <= n ==> x == 0;\nloop invariant i20: y == 0 ==> i <= n ==> x == 0;\nloop invariant i21: 0 <= n <= 2147483647;\nloop invariant i22: (unknown_int() > 0) ==> (unknown_int() <= 2147483647);\nloop invariant i23: i >= 0;\nloop invariant i24: i < 2147483647;\nloop invariant i25: (i == 0) ==> (x == 0);\nloop invariant i26: (i == 0) ==> (y == 0);\nloop invariant i27: (i == 0) ==> (n > 0);\nloop invariant i28: (i == 0) ==> (n <= 2147483647);\nloop invariant i29: (i == 0) ==> (i == 0);\nloop invariant i30: (i == 0) ==> (i < 2147483647);\nloop invariant i31: i == 0 ==> x == 0;\nloop invariant i32: i > 0 ==> y > 0 && x <= y;\nloop invariant i33: i == n ==> x > 0;\nloop invariant i34: x == y;\nloop invariant i35: 0 <= y <= x;\nloop invariant i36: i < n ==> x != 0;\nloop invariant i37: i == n ==> x == 0;\nloop invariant i38: i < n ==> y == 0;\nloop invariant i39: i == n ==> y != 0;\nloop invariant i40: i <= n;\nloop invariant i41: x == i;\nloop invariant i42: y == i;\nloop invariant i43: y = 0;\nloop invariant i44: i = 0;\nloop invariant i45: x = 0;\nloop invariant i46: x >= 0;\nloop invariant i47: y >= 0;\nloop invariant i48: i <= (n - 1);\nloop invariant i49: i < n;\nloop invariant i50: i <= 4294967295;\nloop invariant i51: i <= 4294967295 ==> i == n;\nloop invariant i52: x == 0 ==> y == 0;\nloop invariant i53: i <= n ==> x == 0;\nloop invariant i54: i <= n ==> y == 0;\nloop invariant i55: i <= n ==> x == 0 ==> y == 0;\nloop invariant i56: i <= n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i57: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i58: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\nloop invariant i59: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i60: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i61: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\nloop invariant i62: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i63: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i64: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\nloop invariant i65: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i66: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i67: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\nloop invariant i68: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i69: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i70: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
        "combined_annotation_num_solver_calls": 22,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: 0 <= x <= n * (n - 1) / 2;\nloop invariant i3: 0 <= y <= n * (n - 1) / 2;\nloop invariant i4: x >= y;\n\nloop invariant i6: x == 0;\nloop invariant i7: y == 0;\nloop invariant i8: x <= y;\n\n\nloop invariant i11: 0 <= i;\nloop invariant i12: n > 0;\n\n\n\n\nloop invariant i17: x == 0 ==> i > 0 ==> x == 0;\nloop invariant i18: y == 0 ==> i > 0 ==> x == 0;\nloop invariant i19: x == 0 ==> i <= n ==> x == 0;\nloop invariant i20: y == 0 ==> i <= n ==> x == 0;\nloop invariant i21: 0 <= n <= 2147483647;\n\nloop invariant i23: i >= 0;\n\nloop invariant i25: (i == 0) ==> (x == 0);\nloop invariant i26: (i == 0) ==> (y == 0);\nloop invariant i27: (i == 0) ==> (n > 0);\nloop invariant i28: (i == 0) ==> (n <= 2147483647);\nloop invariant i29: (i == 0) ==> (i == 0);\nloop invariant i30: (i == 0) ==> (i < 2147483647);\nloop invariant i31: i == 0 ==> x == 0;\n\n\nloop invariant i34: x == y;\nloop invariant i35: 0 <= y <= x;\n\nloop invariant i37: i == n ==> x == 0;\nloop invariant i38: i < n ==> y == 0;\n\n\n\n\n\n\n\nloop invariant i46: x >= 0;\nloop invariant i47: y >= 0;\n\n\nloop invariant i50: i <= 4294967295;\n\nloop invariant i52: x == 0 ==> y == 0;\nloop invariant i53: i <= n ==> x == 0;\nloop invariant i54: i <= n ==> y == 0;\nloop invariant i55: i <= n ==> x == 0 ==> y == 0;\n\nloop invariant i57: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i58: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\nloop invariant i59: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i60: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i61: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\nloop invariant i62: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i63: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i64: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\nloop invariant i65: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i66: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i67: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\nloop invariant i68: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n;\nloop invariant i69: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0;\nloop invariant i70: i <= n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0 ==> i == n ==> x == 0 ==> y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c"
        ],
        "skipped": [],
        "total": 62,
        "success_count": 52,
        "failure_count": 10,
        "success_rate": 0.8387096774193549
    }
}