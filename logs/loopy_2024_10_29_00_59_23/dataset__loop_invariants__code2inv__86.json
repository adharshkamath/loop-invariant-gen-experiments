{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/86.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (x = -50);\n  \n  while ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant y >= 0;\nloop invariant x >= -50;\nloop invariant x + y >= -50 + y;\nloop invariant x + y <= -50 + y + y;\nloop invariant x + y <= -50 + 2*y;\nloop invariant x + y <= -50 + 2*y + y;\nloop invariant x + y <= -50 + 3*y;\nloop invariant x + y <= -50 + 3*y + y;\nloop invariant x + y <= -50 + 4*y;\nloop invariant x + y <= -50 + 4*y + y;\nloop invariant x + y <= -50 + 5*y;\nloop invariant x + y <= -50 + 5*y + y;\nloop invariant x + y <= -50 + 6*y;\nloop invariant x + y <= -50 + 6*y + y;\nloop invariant x + y <= -50 + 7*y;\nloop invariant x + y <= -50 + 7*y + y;\nloop invariant x + y <= -50 + 8*y;\nloop invariant x + y <= -50 + 8*y + y;\nloop invariant x + y <= -50 + 9*y;\nloop invariant x + y <= -50 + 9*y + y;\nloop invariant x + y <= -50 + 10*y;\nloop invariant x + y <= -50 + 10*y + y;\nloop invariant x + y <= -50 + 11*y;\nloop invariant x + y <= -50 + 11*y + y;\nloop invariant x + y <= -50 + 12*y;\nloop invariant x + y <= -50 + 12*y + y;\nloop invariant x + y <= -50 + 13*y;\nloop invariant x + y <= -50 + 13*y + y;\nloop invariant x + y <= -50 + 14*y;\nloop invariant x + y <= -50 + 14*y + y;\nloop invariant x + y <= -50 + 15*y;\nloop invariant x + y <= -50 + 15*y + y;\nloop invariant x + y <= -50 + 16*y;\nloop invariant x + y <= -50 + 16*y + y;\nloop invariant x + y <= -50 + 17*y;\nloop invariant x + y <= -50 + 17*y + y;\nloop invariant x + y <= -50 + 18*y;\nloop invariant x + y <= -50 + 18*y + y;\nloop invariant x + y <= -50 + 19*y;\nloop invariant x + y <= -50 + 19*y + y;\nloop invariant x + y <= -50 + 20*y;\nloop invariant x + y <= -50 + 20*y + y;\nloop invariant x + y <= -50 + 21*y;\nloop invariant x + y <= -50 + 21*y + y;\nloop invariant x + y <= -50 + 22*y;\nloop invariant x + y <= -50 + 22*y + y;\nloop invariant x + y <= -50 + 23*y;\nloop invariant x + y <= -50 + 23*y + y;\nloop invariant x + y <= -50 + 24*y;\nloop invariant x + y <= -50 + 24*y + y;\nloop invariant x + y <= -50 + 25*y;\nloop invariant x + y <= -50 + 25*y + y;\nloop invariant x + y <= -50 + 26*y;\nloop invariant x + y <= -50 + 26*y + y;\nloop invariant x + y <= -50 + 27*y;\nloop invariant x + y <= -50 + 27*y + y;\nloop invariant x + y <= -50 + 28*y;\nloop invariant x + y <= -50 + 28*y + y;\nloop invariant x + y <= -50 + 29*y;\nloop invariant x + y <= -50 + 29*y + y;\nloop invariant x + y <= -50 + 30*y;\nloop invariant x + y <= -50 + 30*y + y;\nloop invariant x + y <= -50 + 31*y;\nloop invariant x + y <= -50 + 31*y + y;\nloop invariant x + y <= -50 + 32*y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y;\nloop invariant y <= 100000;\nloop invariant -50 <= x;\nloop invariant x <= 50 + y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 50;\nloop invariant x <= y;\nloop invariant x >= -50;\nloop invariant x < y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= -50;\nloop invariant x >= y;\nloop invariant x <= 0;\nloop invariant x + y >= y;\nloop invariant x + y <= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y;\nloop invariant x >= (x + y) ==> x >= -50;\nloop invariant x >= (x + y) ==> y >= 0;\nloop invariant x >= (x + y) ==> x + y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= -50;\nloop invariant y >= 1;\nloop invariant y <= 0;\nloop invariant x <= y;\nloop invariant x + y >= 0;\nloop invariant x + y <= 0;\n*/\n```",
            "```\n/*@\nloop invariant x >= -50;\nloop invariant y >= 0;\nloop invariant x < 0;\nloop invariant y < 100000;\nloop invariant x <= y;\nloop invariant x >= -50 + y;\nloop invariant y >= 0 + y;\nloop invariant y <= 100000 - y;\nloop invariant x <= y - y;\nloop invariant x >= -50 + y - y;\nloop invariant y >= 0 + y - y;\nloop invariant y <= 100000 - y + y;\nloop invariant x <= y - y + y;\nloop invariant x >= -50 + y - y + y;\nloop invariant y >= 0 + y - y + y;\nloop invariant y <= 100000 - y + y - y;\nloop invariant x <= y - y + y - y;\nloop invariant x >= -50 + y - y + y - y;\nloop invariant y >= 0 + y - y + y - y;\nloop invariant y <= 100000 - y + y - y + y;\nloop invariant x <= y - y + y - y + y;\nloop invariant x >= -50 + y - y + y - y + y;\nloop invariant y >= 0 + y - y + y - y + y;\nloop invariant y <= 100000 - y + y - y + y - y;\nloop invariant x <= y - y + y - y + y - y;\nloop invariant x >= -50 + y - y + y - y + y - y;\nloop invariant y >= 0 + y - y + y - y + y - y;\nloop invariant y <= 100000 - y + y - y + y - y + y;\nloop invariant x <= y - y + y - y + y - y + y;\nloop invariant x >= -50 + y - y + y - y + y - y + y;\nloop invariant y >= 0 + y - y + y - y + y - y + y;\nloop invariant y <= 100000 - y + y - y + y - y + y - y;\nloop invariant x <= y - y + y - y + y - y + y - y;\nloop invariant x >= -50 + y - y + y - y + y - y + y - y;\nloop invariant y >= 0 + y - y + y - y + y - y + y - y;\nloop invariant y <= 100000 - y + y - y + y - y + y - y + y;\nloop invariant x <= y - y + y - y + y - y + y - y + y;\nloop invariant x >= -50 + y - y + y - y + y - y + y - y + y;\nloop invariant y >= 0 + y - y + y - y + y - y + y - y + y;\nloop invariant y <= 100000 - y + y - y + y - y + y - y + y - y;\nloop invariant x <= y - y + y - y + y - y + y - y + y - y;\nloop invariant x >= -50 + y - y + y - y + y - y + y - y + y - y;\nloop invariant y >= 0 + y - y + y - y + y - y + y - y + y - y;\nloop invariant y <= 100000 - y + y - y + y - y + y - y + y - y + y;\nloop invariant x <= y - y + y - y + y - y + y - y + y - y + y;\nloop invariant x >= -50 + y - y + y - y + y - y + y - y + y - y + y;\nloop invariant y >= 0 + y - y + y - y + y - y + y - y + y - y + y;\nloop invariant y <= 100000 - y + y - y + y - y + y - y + y - y + y - y;\nloop invariant x <= y - y + y - y + y - y + y - y + y - y + y - y;\nloop invariant x >= -50 + y - y + y - y + y - y + y - y + y - y + y - y;\nloop invariant y >= 0 + y - y + y - y + y - y + y - y + y - y + y - y;\n*/\n```",
            "```\n/*@\nloop invariant y >= 0;\nloop invariant x <= 0;\nloop invariant x + y >= -50;\nloop invariant y <= -x - 50;\nloop invariant x + y >= -50 ==> (y > 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= -50;\nloop invariant x >= (x + y);\nloop invariant y >= 1;\nloop invariant x >= -50;\nloop invariant y >= x;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 0;\nloop invariant y >= 0;\nloop invariant y <= 100000;\nloop invariant x >= -50;\nloop invariant x <= 50;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 65,
                "annotations": "```\n/*@\nloop invariant y >= 0;\nloop invariant x >= -50;\nloop invariant x + y >= -50 + y;\nloop invariant x + y <= -50 + y + y;\nloop invariant x + y <= -50 + 2*y;\nloop invariant x + y <= -50 + 2*y + y;\nloop invariant x + y <= -50 + 3*y;\nloop invariant x + y <= -50 + 3*y + y;\nloop invariant x + y <= -50 + 4*y;\nloop invariant x + y <= -50 + 4*y + y;\nloop invariant x + y <= -50 + 5*y;\nloop invariant x + y <= -50 + 5*y + y;\nloop invariant x + y <= -50 + 6*y;\nloop invariant x + y <= -50 + 6*y + y;\nloop invariant x + y <= -50 + 7*y;\nloop invariant x + y <= -50 + 7*y + y;\nloop invariant x + y <= -50 + 8*y;\nloop invariant x + y <= -50 + 8*y + y;\nloop invariant x + y <= -50 + 9*y;\nloop invariant x + y <= -50 + 9*y + y;\nloop invariant x + y <= -50 + 10*y;\nloop invariant x + y <= -50 + 10*y + y;\nloop invariant x + y <= -50 + 11*y;\nloop invariant x + y <= -50 + 11*y + y;\nloop invariant x + y <= -50 + 12*y;\nloop invariant x + y <= -50 + 12*y + y;\nloop invariant x + y <= -50 + 13*y;\nloop invariant x + y <= -50 + 13*y + y;\nloop invariant x + y <= -50 + 14*y;\nloop invariant x + y <= -50 + 14*y + y;\nloop invariant x + y <= -50 + 15*y;\nloop invariant x + y <= -50 + 15*y + y;\nloop invariant x + y <= -50 + 16*y;\nloop invariant x + y <= -50 + 16*y + y;\nloop invariant x + y <= -50 + 17*y;\nloop invariant x + y <= -50 + 17*y + y;\nloop invariant x + y <= -50 + 18*y;\nloop invariant x + y <= -50 + 18*y + y;\nloop invariant x + y <= -50 + 19*y;\nloop invariant x + y <= -50 + 19*y + y;\nloop invariant x + y <= -50 + 20*y;\nloop invariant x + y <= -50 + 20*y + y;\nloop invariant x + y <= -50 + 21*y;\nloop invariant x + y <= -50 + 21*y + y;\nloop invariant x + y <= -50 + 22*y;\nloop invariant x + y <= -50 + 22*y + y;\nloop invariant x + y <= -50 + 23*y;\nloop invariant x + y <= -50 + 23*y + y;\nloop invariant x + y <= -50 + 24*y;\nloop invariant x + y <= -50 + 24*y + y;\nloop invariant x + y <= -50 + 25*y;\nloop invariant x + y <= -50 + 25*y + y;\nloop invariant x + y <= -50 + 26*y;\nloop invariant x + y <= -50 + 26*y + y;\nloop invariant x + y <= -50 + 27*y;\nloop invariant x + y <= -50 + 27*y + y;\nloop invariant x + y <= -50 + 28*y;\nloop invariant x + y <= -50 + 28*y + y;\nloop invariant x + y <= -50 + 29*y;\nloop invariant x + y <= -50 + 29*y + y;\nloop invariant x + y <= -50 + 30*y;\nloop invariant x + y <= -50 + 30*y + y;\nloop invariant x + y <= -50 + 31*y;\nloop invariant x + y <= -50 + 31*y + y;\nloop invariant x + y <= -50 + 32*y;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant y >= 0 is preserved but not established.\nloop invariant x >= -50 is partially proven to be inductive.\nloop invariant x + y >= -50 + y is partially proven to be inductive.\nloop invariant x + y <= -50 + y + y is established but not preserved.\nloop invariant x + y <= -50 + 2*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 2*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 3*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 3*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 4*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 4*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 5*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 5*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 6*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 6*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 7*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 7*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 8*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 8*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 9*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 9*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 10*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 10*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 11*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 11*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 12*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 12*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 13*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 13*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 14*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 14*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 15*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 15*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 16*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 16*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 17*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 17*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 18*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 18*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 19*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 19*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 20*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 20*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 21*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 21*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 22*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 22*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 23*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 23*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 24*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 24*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 25*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 25*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 26*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 26*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 27*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 27*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 28*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 28*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 29*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 29*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 30*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 30*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 31*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 31*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 32*y is partially proven to be inductive.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (x = -50);\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= y <= 100000 is preserved but not established.\nloop invariant x >= (1 + (y - 1) * y / 2) is preserved but not established.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (x = -50);\n  \n  /*@\n\n\n*/\nwhile ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y;\nloop invariant y <= 100000;\nloop invariant -50 <= x;\nloop invariant x <= 50 + y;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= y is preserved but not established.\nloop invariant y <= 100000 is neither established nor preserved.\nloop invariant -50 <= x is partially proven to be inductive.\nloop invariant x <= 50 + y is partially proven to be inductive.\nAssertion y > 0: Unproven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (x = -50);\n  \n  /*@\n\n\n\n\n*/\nwhile ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 50;\nloop invariant x <= y;\nloop invariant x >= -50;\nloop invariant x < y;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= y <= 50 is neither established nor preserved.\nloop invariant x <= y is partially proven to be inductive.\nloop invariant x >= -50 is partially proven to be inductive.\nloop invariant x < y is partially proven to be inductive.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (x = -50);\n  \n  /*@\n\n\n\n\n*/\nwhile ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= -50;\nloop invariant x >= y;\nloop invariant x <= 0;\nloop invariant x + y >= y;\nloop invariant x + y <= 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= y <= -50 is preserved but not established.\nloop invariant x >= y is partially proven to be inductive.\nloop invariant x <= 0 is partially proven to be inductive.\nloop invariant x + y >= y is partially proven to be inductive.\nloop invariant x + y <= 0 is partially proven to be inductive.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (x = -50);\n  \n  /*@\n\n\n\n\n\n*/\nwhile ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= y <= 100000 is preserved but not established.\nloop invariant x >= (1 + (y - 1) * y / 2) is preserved but not established.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (x = -50);\n  \n  /*@\n\n\n*/\nwhile ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\nloop invariant ( y <= 100 );\nloop invariant ( x <= -50 );\nloop invariant ( y < 100 );\nloop invariant ( x >= -50 );\nloop invariant ( y >= 0 );\nloop invariant ( x < 0 );\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant ( x >= -50 ) is partially proven to be inductive.\nloop invariant ( y >= 0 ) is preserved but not established.\nloop invariant ( x < 0 ) is established but not preserved.\nloop invariant ( y <= 100 ) is preserved but not established.\nloop invariant ( x <= -50 ) is established but not preserved.\nloop invariant ( y < 100 ) is preserved but not established.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (x = -50);\n  \n  /*@\n\n\n\n\n\n\n*/\nwhile ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= y;\nloop invariant x >= (x + y) ==> x >= -50;\nloop invariant x >= (x + y) ==> y >= 0;\nloop invariant x >= (x + y) ==> x + y >= 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= y is preserved but not established.\nloop invariant x >= (x + y) ==> x >= -50 is partially proven to be inductive.\nloop invariant x >= (x + y) ==> y >= 0 is partially proven to be inductive.\nloop invariant x >= (x + y) ==> x + y >= 0 is preserved but not established.\nAssertion y > 0: Unproven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (x = -50);\n  \n  /*@\n\n\n\n\n*/\nwhile ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= -50;\nloop invariant y >= 1;\nloop invariant y <= 0;\nloop invariant x <= y;\nloop invariant x + y >= 0;\nloop invariant x + y <= 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= y <= 100000 is preserved but not established.\nloop invariant x >= (1 + (y - 1) * y / 2) is preserved but not established.\nloop invariant x >= -50 is partially proven to be inductive.\nloop invariant y >= 1 is partially proven to be inductive.\nloop invariant y <= 0 is partially proven to be inductive.\nloop invariant x <= y is partially proven to be inductive.\nloop invariant x + y >= 0 is partially proven to be inductive.\nloop invariant x + y <= 0 is partially proven to be inductive.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (x = -50);\n  \n  /*@\n\n\n\n\n\n\n\n\n*/\nwhile ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 16,
                "annotations": "```\n/*@\nloop invariant x >= -50;\nloop invariant y >= 0;\nloop invariant x < 0;\nloop invariant y < 100000;\nloop invariant x <= y;\nloop invariant x >= -50 + y;\nloop invariant y >= 0 + y;\nloop invariant y <= 100000 - y;\nloop invariant x <= y - y;\nloop invariant x >= -50 + y - y;\nloop invariant y >= 0 + y - y;\nloop invariant y <= 100000 - y + y;\nloop invariant x <= y - y + y;\nloop invariant x >= -50 + y - y + y;\nloop invariant y >= 0 + y - y + y;\nloop invariant y <= 100000 - y + y - y;\nloop invariant x <= y - y + y - y;\nloop invariant x >= -50 + y - y + y - y;\nloop invariant y >= 0 + y - y + y - y;\nloop invariant y <= 100000 - y + y - y + y;\nloop invariant x <= y - y + y - y + y;\nloop invariant x >= -50 + y - y + y - y + y;\nloop invariant y >= 0 + y - y + y - y + y;\nloop invariant y <= 100000 - y + y - y + y - y;\nloop invariant x <= y - y + y - y + y - y;\nloop invariant x >= -50 + y - y + y - y + y - y;\nloop invariant y >= 0 + y - y + y - y + y - y;\nloop invariant y <= 100000 - y + y - y + y - y + y;\nloop invariant x <= y - y + y - y + y - y + y;\nloop invariant x >= -50 + y - y + y - y + y - y + y;\nloop invariant y >= 0 + y - y + y - y + y - y + y;\nloop invariant y <= 100000 - y + y - y + y - y + y - y;\nloop invariant x <= y - y + y - y + y - y + y - y;\nloop invariant x >= -50 + y - y + y - y + y - y + y - y;\nloop invariant y >= 0 + y - y + y - y + y - y + y - y;\nloop invariant y <= 100000 - y + y - y + y - y + y - y + y;\nloop invariant x <= y - y + y - y + y - y + y - y + y;\nloop invariant x >= -50 + y - y + y - y + y - y + y - y + y;\nloop invariant y >= 0 + y - y + y - y + y - y + y - y + y;\nloop invariant y <= 100000 - y + y - y + y - y + y - y + y - y;\nloop invariant x <= y - y + y - y + y - y + y - y + y - y;\nloop invariant x >= -50 + y - y + y - y + y - y + y - y + y - y;\nloop invariant y >= 0 + y - y + y - y + y - y + y - y + y - y;\nloop invariant y <= 100000 - y + y - y + y - y + y - y + y - y + y;\nloop invariant x <= y - y + y - y + y - y + y - y + y - y + y;\nloop invariant x >= -50 + y - y + y - y + y - y + y - y + y - y + y;\nloop invariant y >= 0 + y - y + y - y + y - y + y - y + y - y + y;\nloop invariant y <= 100000 - y + y - y + y - y + y - y + y - y + y - y;\nloop invariant x <= y - y + y - y + y - y + y - y + y - y + y - y;\nloop invariant x >= -50 + y - y + y - y + y - y + y - y + y - y + y - y;\nloop invariant y >= 0 + y - y + y - y + y - y + y - y + y - y + y - y;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant x >= -50 is partially proven to be inductive.\nloop invariant y >= 0 is preserved but not established.\nloop invariant x < 0 is established but not preserved.\nloop invariant y < 100000 is preserved but not established.\nloop invariant x <= y is partially proven to be inductive.\nloop invariant x >= -50 + y is neither established nor preserved.\nloop invariant y >= 0 + y is partially proven to be inductive.\nloop invariant y <= 100000 - y is partially proven to be inductive.\nloop invariant x <= y - y is partially proven to be inductive.\nloop invariant x >= -50 + y - y is partially proven to be inductive.\nloop invariant y >= 0 + y - y is partially proven to be inductive.\nloop invariant y <= 100000 - y + y is partially proven to be inductive.\nloop invariant x <= y - y + y is partially proven to be inductive.\nloop invariant x >= -50 + y - y + y is partially proven to be inductive.\nloop invariant y >= 0 + y - y + y is partially proven to be inductive.\nloop invariant y <= 100000 - y + y - y is partially proven to be inductive.\nloop invariant x <= y - y + y - y is partially proven to be inductive.\nloop invariant x >= -50 + y - y + y - y is partially proven to be inductive.\nloop invariant y >= 0 + y - y + y - y is partially proven to be inductive.\nloop invariant y <= 100000 - y + y - y + y is partially proven to be inductive.\nloop invariant x <= y - y + y - y + y is partially proven to be inductive.\nloop invariant x >= -50 + y - y + y - y + y is partially proven to be inductive.\nloop invariant y >= 0 + y - y + y - y + y is partially proven to be inductive.\nloop invariant y <= 100000 - y + y - y + y - y is partially proven to be inductive.\nloop invariant x <= y - y + y - y + y - y is partially proven to be inductive.\nloop invariant x >= -50 + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant y >= 0 + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant y <= 100000 - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant x <= y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant x >= -50 + y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant y >= 0 + y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant y <= 100000 - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant x <= y - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant x >= -50 + y - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant y >= 0 + y - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant y <= 100000 - y + y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant x <= y - y + y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant x >= -50 + y - y + y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant y >= 0 + y - y + y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant y <= 100000 - y + y - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant x <= y - y + y - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant x >= -50 + y - y + y - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant y >= 0 + y - y + y - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant y <= 100000 - y + y - y + y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant x <= y - y + y - y + y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant x >= -50 + y - y + y - y + y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant y >= 0 + y - y + y - y + y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant y <= 100000 - y + y - y + y - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant x <= y - y + y - y + y - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant x >= -50 + y - y + y - y + y - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant y >= 0 + y - y + y - y + y - y + y - y + y - y + y - y is partially proven to be inductive.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (x = -50);\n  \n  /*@\n\n\n\n\n\n\nloop invariant i7: y >= 0 + y;\n\n\n\n\n\n\n\nloop invariant i15: y >= 0 + y - y + y;\n\n\n\n\n\n\n\nloop invariant i23: y >= 0 + y - y + y - y + y;\n\n\n\n\n\n\n\nloop invariant i31: y >= 0 + y - y + y - y + y - y + y;\n\n\n\n\n\n\n\nloop invariant i39: y >= 0 + y - y + y - y + y - y + y - y + y;\n\n\n\n\n\n\n\nloop invariant i47: y >= 0 + y - y + y - y + y - y + y - y + y - y + y;\n\n\n\n\n*/\nwhile ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant y >= 0;\nloop invariant x <= 0;\nloop invariant x + y >= -50;\nloop invariant y <= -x - 50;\nloop invariant x + y >= -50 ==> (y > 0);\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant y >= 0 is preserved but not established.\nloop invariant x <= 0 is partially proven to be inductive.\nloop invariant x + y >= -50 is partially proven to be inductive.\nloop invariant y <= -x - 50 is preserved but not established.\nloop invariant x + y >= -50 ==> (y > 0) is preserved but not established.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (x = -50);\n  \n  /*@\n\n\n\n\n\n*/\nwhile ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= -50;\nloop invariant x >= (x + y);\nloop invariant y >= 1;\nloop invariant x >= -50;\nloop invariant y >= x;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\nloop invariant y >= 1;\nloop invariant y <= -50;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= y <= -50 is preserved but not established.\nloop invariant x >= (x + y) is partially proven to be inductive.\nloop invariant y >= 1 is partially proven to be inductive.\nloop invariant x >= -50 is partially proven to be inductive.\nloop invariant y >= x is partially proven to be inductive.\nloop invariant y <= -50 is partially proven to be inductive.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (x = -50);\n  \n  /*@\n\n\n\n\n\n\n*/\nwhile ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 1 <= x <= 0 is preserved but not established.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (x = -50);\n  \n  /*@\n\n*/\nwhile ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= y <= 100000 is preserved but not established.\nloop invariant x >= (1 + (y - 1) * y / 2) is preserved but not established.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (x = -50);\n  \n  /*@\n\n\n*/\nwhile ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 0;\nloop invariant y >= 0;\nloop invariant y <= 100000;\nloop invariant x >= -50;\nloop invariant x <= 50;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\nloop invariant x <= -50 + (y - 1) * y / 2;\nloop invariant x >= -50 + (y - 1) * y / 2;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= x <= 0 is preserved but not established.\nloop invariant y >= 0 is partially proven to be inductive.\nloop invariant y <= 100000 is partially proven to be inductive.\nloop invariant x >= -50 is partially proven to be inductive.\nloop invariant x <= 50 is partially proven to be inductive.\nloop invariant x >= -50 + (y - 1) * y / 2 is partially proven to be inductive.\nloop invariant x <= -50 + (y - 1) * y / 2 is partially proven to be inductive.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (x = -50);\n  \n  /*@\n\n\n\n\n\n\nloop invariant i7: x <= -50 + (y - 1) * y / 2;\n*/\nwhile ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "loop invariant y >= 0 is preserved but not established.\nloop invariant x >= -50 is partially proven to be inductive.\nloop invariant x + y >= -50 + y is partially proven to be inductive.\nloop invariant x + y <= -50 + y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 2*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 2*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 3*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 3*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 4*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 4*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 5*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 5*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 6*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 6*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 7*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 7*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 8*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 8*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 9*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 9*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 10*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 10*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 11*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 11*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 12*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 12*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 13*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 13*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 14*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 14*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 15*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 15*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 16*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 16*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 17*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 17*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 18*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 18*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 19*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 19*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 20*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 20*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 21*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 21*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 22*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 22*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 23*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 23*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 24*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 24*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 25*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 25*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 26*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 26*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 27*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 27*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 28*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 28*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 29*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 29*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 30*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 30*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 31*y is partially proven to be inductive.\nloop invariant x + y <= -50 + 31*y + y is partially proven to be inductive.\nloop invariant x + y <= -50 + 32*y is partially proven to be inductive.\nloop invariant 0 <= y <= 100000 is preserved but not established.\nloop invariant x >= (1 + (y - 1) * y / 2) is preserved but not established.\nloop invariant 0 <= y is partially proven to be inductive.\nloop invariant y <= 100000 is partially proven to be inductive.\nloop invariant -50 <= x is partially proven to be inductive.\nloop invariant x <= 50 + y is partially proven to be inductive.\nloop invariant 0 <= y <= 50 is partially proven to be inductive.\nloop invariant x <= y is partially proven to be inductive.\nloop invariant x < y is partially proven to be inductive.\nloop invariant 0 <= y <= -50 is partially proven to be inductive.\nloop invariant x >= y is partially proven to be inductive.\nloop invariant x <= 0 is partially proven to be inductive.\nloop invariant x + y >= y is partially proven to be inductive.\nloop invariant x + y <= 0 is partially proven to be inductive.\nloop invariant ( x >= -50 ) is partially proven to be inductive.\nloop invariant ( y >= 0 ) is partially proven to be inductive.\nloop invariant ( x < 0 ) is partially proven to be inductive.\nloop invariant ( y <= 100 ) is partially proven to be inductive.\nloop invariant ( x <= -50 ) is partially proven to be inductive.\nloop invariant ( y < 100 ) is partially proven to be inductive.\nloop invariant x >= (x + y) ==> x >= -50 is partially proven to be inductive.\nloop invariant x >= (x + y) ==> y >= 0 is partially proven to be inductive.\nloop invariant x >= (x + y) ==> x + y >= 0 is partially proven to be inductive.\nloop invariant y >= 1 is partially proven to be inductive.\nloop invariant y <= 0 is partially proven to be inductive.\nloop invariant x + y >= 0 is partially proven to be inductive.\nloop invariant x < 0 is partially proven to be inductive.\nloop invariant y < 100000 is partially proven to be inductive.\nloop invariant x >= -50 + y is partially proven to be inductive.\nloop invariant y >= 0 + y is partially proven to be inductive.\nloop invariant y <= 100000 - y is partially proven to be inductive.\nloop invariant x <= y - y is partially proven to be inductive.\nloop invariant x >= -50 + y - y is partially proven to be inductive.\nloop invariant y >= 0 + y - y is partially proven to be inductive.\nloop invariant y <= 100000 - y + y is partially proven to be inductive.\nloop invariant x <= y - y + y is partially proven to be inductive.\nloop invariant x >= -50 + y - y + y is partially proven to be inductive.\nloop invariant y >= 0 + y - y + y is partially proven to be inductive.\nloop invariant y <= 100000 - y + y - y is partially proven to be inductive.\nloop invariant x <= y - y + y - y is partially proven to be inductive.\nloop invariant x >= -50 + y - y + y - y is partially proven to be inductive.\nloop invariant y >= 0 + y - y + y - y is partially proven to be inductive.\nloop invariant y <= 100000 - y + y - y + y is partially proven to be inductive.\nloop invariant x <= y - y + y - y + y is partially proven to be inductive.\nloop invariant x >= -50 + y - y + y - y + y is partially proven to be inductive.\nloop invariant y >= 0 + y - y + y - y + y is partially proven to be inductive.\nloop invariant y <= 100000 - y + y - y + y - y is partially proven to be inductive.\nloop invariant x <= y - y + y - y + y - y is partially proven to be inductive.\nloop invariant x >= -50 + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant y >= 0 + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant y <= 100000 - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant x <= y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant x >= -50 + y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant y >= 0 + y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant y <= 100000 - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant x <= y - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant x >= -50 + y - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant y >= 0 + y - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant y <= 100000 - y + y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant x <= y - y + y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant x >= -50 + y - y + y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant y >= 0 + y - y + y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant y <= 100000 - y + y - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant x <= y - y + y - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant x >= -50 + y - y + y - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant y >= 0 + y - y + y - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant y <= 100000 - y + y - y + y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant x <= y - y + y - y + y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant x >= -50 + y - y + y - y + y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant y >= 0 + y - y + y - y + y - y + y - y + y - y + y is partially proven to be inductive.\nloop invariant y <= 100000 - y + y - y + y - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant x <= y - y + y - y + y - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant x >= -50 + y - y + y - y + y - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant y >= 0 + y - y + y - y + y - y + y - y + y - y + y - y is partially proven to be inductive.\nloop invariant x + y >= -50 is partially proven to be inductive.\nloop invariant y <= -x - 50 is partially proven to be inductive.\nloop invariant x + y >= -50 ==> (y > 0) is partially proven to be inductive.\nloop invariant x >= (x + y) is partially proven to be inductive.\nloop invariant y >= x is partially proven to be inductive.\nloop invariant y <= -50 is partially proven to be inductive.\nloop invariant 1 <= x <= 0 is partially proven to be inductive.\nloop invariant 0 <= x <= 0 is partially proven to be inductive.\nloop invariant x <= 50 is partially proven to be inductive.\nloop invariant x >= -50 + (y - 1) * y / 2 is partially proven to be inductive.\nloop invariant x <= -50 + (y - 1) * y / 2 is partially proven to be inductive.\nAssertion y > 0: Partially proven",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (x = -50);\n  \n  /*@\nloop invariant i1: y >= 0;\nloop invariant i2: x >= -50;\nloop invariant i3: x + y >= -50 + y;\nloop invariant i4: x + y <= -50 + y + y;\nloop invariant i5: x + y <= -50 + 2*y;\nloop invariant i6: x + y <= -50 + 2*y + y;\nloop invariant i7: x + y <= -50 + 3*y;\nloop invariant i8: x + y <= -50 + 3*y + y;\nloop invariant i9: x + y <= -50 + 4*y;\nloop invariant i10: x + y <= -50 + 4*y + y;\nloop invariant i11: x + y <= -50 + 5*y;\nloop invariant i12: x + y <= -50 + 5*y + y;\nloop invariant i13: x + y <= -50 + 6*y;\nloop invariant i14: x + y <= -50 + 6*y + y;\nloop invariant i15: x + y <= -50 + 7*y;\nloop invariant i16: x + y <= -50 + 7*y + y;\nloop invariant i17: x + y <= -50 + 8*y;\nloop invariant i18: x + y <= -50 + 8*y + y;\nloop invariant i19: x + y <= -50 + 9*y;\nloop invariant i20: x + y <= -50 + 9*y + y;\nloop invariant i21: x + y <= -50 + 10*y;\nloop invariant i22: x + y <= -50 + 10*y + y;\nloop invariant i23: x + y <= -50 + 11*y;\nloop invariant i24: x + y <= -50 + 11*y + y;\nloop invariant i25: x + y <= -50 + 12*y;\nloop invariant i26: x + y <= -50 + 12*y + y;\nloop invariant i27: x + y <= -50 + 13*y;\nloop invariant i28: x + y <= -50 + 13*y + y;\nloop invariant i29: x + y <= -50 + 14*y;\nloop invariant i30: x + y <= -50 + 14*y + y;\nloop invariant i31: x + y <= -50 + 15*y;\nloop invariant i32: x + y <= -50 + 15*y + y;\nloop invariant i33: x + y <= -50 + 16*y;\nloop invariant i34: x + y <= -50 + 16*y + y;\nloop invariant i35: x + y <= -50 + 17*y;\nloop invariant i36: x + y <= -50 + 17*y + y;\nloop invariant i37: x + y <= -50 + 18*y;\nloop invariant i38: x + y <= -50 + 18*y + y;\nloop invariant i39: x + y <= -50 + 19*y;\nloop invariant i40: x + y <= -50 + 19*y + y;\nloop invariant i41: x + y <= -50 + 20*y;\nloop invariant i42: x + y <= -50 + 20*y + y;\nloop invariant i43: x + y <= -50 + 21*y;\nloop invariant i44: x + y <= -50 + 21*y + y;\nloop invariant i45: x + y <= -50 + 22*y;\nloop invariant i46: x + y <= -50 + 22*y + y;\nloop invariant i47: x + y <= -50 + 23*y;\nloop invariant i48: x + y <= -50 + 23*y + y;\nloop invariant i49: x + y <= -50 + 24*y;\nloop invariant i50: x + y <= -50 + 24*y + y;\nloop invariant i51: x + y <= -50 + 25*y;\nloop invariant i52: x + y <= -50 + 25*y + y;\nloop invariant i53: x + y <= -50 + 26*y;\nloop invariant i54: x + y <= -50 + 26*y + y;\nloop invariant i55: x + y <= -50 + 27*y;\nloop invariant i56: x + y <= -50 + 27*y + y;\nloop invariant i57: x + y <= -50 + 28*y;\nloop invariant i58: x + y <= -50 + 28*y + y;\nloop invariant i59: x + y <= -50 + 29*y;\nloop invariant i60: x + y <= -50 + 29*y + y;\nloop invariant i61: x + y <= -50 + 30*y;\nloop invariant i62: x + y <= -50 + 30*y + y;\nloop invariant i63: x + y <= -50 + 31*y;\nloop invariant i64: x + y <= -50 + 31*y + y;\nloop invariant i65: x + y <= -50 + 32*y;\nloop invariant i66: 0 <= y <= 100000;\nloop invariant i67: x >= (1 + (y - 1) * y / 2);\nloop invariant i68: 0 <= y;\nloop invariant i69: y <= 100000;\nloop invariant i70: -50 <= x;\nloop invariant i71: x <= 50 + y;\nloop invariant i72: 0 <= y <= 50;\nloop invariant i73: x <= y;\nloop invariant i74: x < y;\nloop invariant i75: 0 <= y <= -50;\nloop invariant i76: x >= y;\nloop invariant i77: x <= 0;\nloop invariant i78: x + y >= y;\nloop invariant i79: x + y <= 0;\nloop invariant i80: ( x >= -50 );\nloop invariant i81: ( y >= 0 );\nloop invariant i82: ( x < 0 );\nloop invariant i83: ( y <= 100 );\nloop invariant i84: ( x <= -50 );\nloop invariant i85: ( y < 100 );\nloop invariant i86: x >= (x + y) ==> x >= -50;\nloop invariant i87: x >= (x + y) ==> y >= 0;\nloop invariant i88: x >= (x + y) ==> x + y >= 0;\nloop invariant i89: y >= 1;\nloop invariant i90: y <= 0;\nloop invariant i91: x + y >= 0;\nloop invariant i92: x < 0;\nloop invariant i93: y < 100000;\nloop invariant i94: x >= -50 + y;\nloop invariant i95: y >= 0 + y;\nloop invariant i96: y <= 100000 - y;\nloop invariant i97: x <= y - y;\nloop invariant i98: x >= -50 + y - y;\nloop invariant i99: y >= 0 + y - y;\nloop invariant i100: y <= 100000 - y + y;\nloop invariant i101: x <= y - y + y;\nloop invariant i102: x >= -50 + y - y + y;\nloop invariant i103: y >= 0 + y - y + y;\nloop invariant i104: y <= 100000 - y + y - y;\nloop invariant i105: x <= y - y + y - y;\nloop invariant i106: x >= -50 + y - y + y - y;\nloop invariant i107: y >= 0 + y - y + y - y;\nloop invariant i108: y <= 100000 - y + y - y + y;\nloop invariant i109: x <= y - y + y - y + y;\nloop invariant i110: x >= -50 + y - y + y - y + y;\nloop invariant i111: y >= 0 + y - y + y - y + y;\nloop invariant i112: y <= 100000 - y + y - y + y - y;\nloop invariant i113: x <= y - y + y - y + y - y;\nloop invariant i114: x >= -50 + y - y + y - y + y - y;\nloop invariant i115: y >= 0 + y - y + y - y + y - y;\nloop invariant i116: y <= 100000 - y + y - y + y - y + y;\nloop invariant i117: x <= y - y + y - y + y - y + y;\nloop invariant i118: x >= -50 + y - y + y - y + y - y + y;\nloop invariant i119: y >= 0 + y - y + y - y + y - y + y;\nloop invariant i120: y <= 100000 - y + y - y + y - y + y - y;\nloop invariant i121: x <= y - y + y - y + y - y + y - y;\nloop invariant i122: x >= -50 + y - y + y - y + y - y + y - y;\nloop invariant i123: y >= 0 + y - y + y - y + y - y + y - y;\nloop invariant i124: y <= 100000 - y + y - y + y - y + y - y + y;\nloop invariant i125: x <= y - y + y - y + y - y + y - y + y;\nloop invariant i126: x >= -50 + y - y + y - y + y - y + y - y + y;\nloop invariant i127: y >= 0 + y - y + y - y + y - y + y - y + y;\nloop invariant i128: y <= 100000 - y + y - y + y - y + y - y + y - y;\nloop invariant i129: x <= y - y + y - y + y - y + y - y + y - y;\nloop invariant i130: x >= -50 + y - y + y - y + y - y + y - y + y - y;\nloop invariant i131: y >= 0 + y - y + y - y + y - y + y - y + y - y;\nloop invariant i132: y <= 100000 - y + y - y + y - y + y - y + y - y + y;\nloop invariant i133: x <= y - y + y - y + y - y + y - y + y - y + y;\nloop invariant i134: x >= -50 + y - y + y - y + y - y + y - y + y - y + y;\nloop invariant i135: y >= 0 + y - y + y - y + y - y + y - y + y - y + y;\nloop invariant i136: y <= 100000 - y + y - y + y - y + y - y + y - y + y - y;\nloop invariant i137: x <= y - y + y - y + y - y + y - y + y - y + y - y;\nloop invariant i138: x >= -50 + y - y + y - y + y - y + y - y + y - y + y - y;\nloop invariant i139: y >= 0 + y - y + y - y + y - y + y - y + y - y + y - y;\nloop invariant i140: x + y >= -50;\nloop invariant i141: y <= -x - 50;\nloop invariant i142: x + y >= -50 ==> (y > 0);\nloop invariant i143: x >= (x + y);\nloop invariant i144: y >= x;\nloop invariant i145: y <= -50;\nloop invariant i146: 1 <= x <= 0;\nloop invariant i147: 0 <= x <= 0;\nloop invariant i148: x <= 50;\nloop invariant i149: x >= -50 + (y - 1) * y / 2;\nloop invariant i150: x <= -50 + (y - 1) * y / 2;\n*/\nwhile ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 86,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (x = -50);\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i95: y >= 0 + y;\n\n\n\n\n\n\n\nloop invariant i103: y >= 0 + y - y + y;\n\n\n\n\n\n\n\nloop invariant i111: y >= 0 + y - y + y - y + y;\n\n\n\n\n\n\n\nloop invariant i119: y >= 0 + y - y + y - y + y - y + y;\n\n\n\n\n\n\n\nloop invariant i127: y >= 0 + y - y + y - y + y - y + y - y + y;\n\n\n\n\n\n\n\nloop invariant i135: y >= 0 + y - y + y - y + y - y + y - y + y - y + y;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i150: x <= -50 + (y - 1) * y / 2;\n*/\nwhile ((x < 0)) {\n    {\n    (x  = (x + y));\n    (y  = (y + 1));\n    }\n\n  }\n  \n{;\n//@ assert( (y > 0) );\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_nondet_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum01_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04n.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/85.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/ex2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/42.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/diamond_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/odd.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/even.c",
            "../dataset/loop_invariants/code2inv/24.c",
            "../dataset/loop_invariants/code2inv/130.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/diamond_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/overflow_safe1.c",
            "../dataset/loop_invariants/code2inv/113.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/ddlm2013_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/MADWiFi-encode_ie_ok.c",
            "../dataset/loop_invariants/code2inv/69.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/half.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04n.v.c",
            "../dataset/loop_invariants/code2inv/101.c",
            "../dataset/loop_invariants/code2inv/86.c"
        ],
        "skipped": [],
        "total": 22,
        "success_count": 4,
        "failure_count": 18,
        "success_rate": 0.18181818181818182
    }
}