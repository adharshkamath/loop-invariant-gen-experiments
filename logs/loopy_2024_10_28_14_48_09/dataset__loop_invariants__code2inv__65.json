{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/65.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    while (x <= 100) {\n        y = 100 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y >= 0);\n}\n\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 1 <= x <= 100;\nloop invariant 0 <= y <= 100;\nloop invariant x + y == 101;\nloop invariant x * y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 100 - x;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y == 100 - x;\nloop invariant y >= 0;\nloop invariant y <= 100;\nloop invariant x + y == 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y == 100 - x;\nloop invariant x + y == 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 100;\nloop invariant y = 100 - x;\nloop invariant x + y = 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 101;\nloop invariant y = 100 - x;\nloop invariant (x <= 100 ==> y >= 0);\nloop invariant (x <= 100 ==> x + 1 <= 101);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\n*/\n```",
            "```\n/*@\nloop invariant x > 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant y <= 99;\nloop invariant y > 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 100;\nloop invariant y == 100 - x;\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 100;\nloop invariant y == 100 - x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant x <= 100 ==> y >= 0;\nloop invariant x <= 100 ==> y = 100 - x;\nloop invariant x <= 100 ==> x >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 100;\nloop invariant 0 <= y <= 100;\nloop invariant y = 100 - x;\nloop invariant x + y <= 100;\nloop invariant x - y <= 100;\nloop invariant x - y + y = x;\nloop invariant x + y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant x + y <= 100;\nloop invariant 1 <= x + y <= 100;\nloop invariant 0 <= x + y <= 100;\nloop invariant x - y >= 0;\nloop invariant x - y + y = x;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 100;\nloop invariant y = 100 - x;\nloop invariant y <= 100 - 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant x >= 1;\nloop invariant x + 1 <= 100;\nloop invariant x + 1 >= 2;\nloop invariant 100 - (x + 1) = y;\nloop invariant 100 - 1 <= y;\nloop invariant 100 - 100 <= y;\nloop invariant 0 <= y;\nloop invariant y <= 100 - 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant x >= 1;\nloop invariant x + 1 <= 100;\nloop invariant x + 1 >= 2;\nloop invariant 100 - (x + 1) = y;\nloop invariant 100 - 1 <= y;\nloop invariant 100 - 100 <= y;\nloop invariant 0 <= y;\nloop invariant y <= 100 - 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant x >= 1;\nloop invariant x + 1 <= 100;\nloop invariant x + 1 >= 2;\nloop invariant 100 - (x + 1) = y;\nloop invariant 100 - 1 <= y;\nloop invariant 100 - 100 <= y;\nloop invariant 0 <= y;\nloop invariant y <= 100 - 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant x >= 1;\nloop invariant x + 1 <= 100;\nloop invariant x + 1 >= 2;\nloop invariant 100 - (x + 1) = y;\nloop invariant 100 - 1 <= y;\nloop invariant 100 - 100 <= y;\nloop invariant 0 <= y;\nloop invariant y <= 100 - 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant x >= 1;\nloop invariant x + 1 <= 100;\nloop invariant x + 1 >= 2;\nloop invariant 100 - (x + 1) = y;\nloop invariant 100 - 1 <= y;\nloop invariant 100 - 100 <= y;\nloop invariant 0 <= y;\nloop invariant y <= 100 - 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant x >= 1;\nloop invariant x + 1 <= 100;\nloop invariant x + 1 >= 2;\nloop invariant 100 - (x + 1) = y;\nloop invariant 100 - 1 <= y;\nloop invariant 100 - 100 <= y;\nloop invariant 0 <= y;\nloop invariant y <= 100 - 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant x >= 1;\nloop invariant x + 1 <= 100;\nloop invariant x + 1 >= 2;\nloop invariant 100 - (x + 1) = y;\nloop invariant 100 - 1 <= y;\nloop invariant 100 - 100 <= y;\nloop invariant 0 <= y;\nloop invariant y <= 100 - 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant x >= 1;\nloop invariant x + 1 <= 100;\nloop invariant x + 1 >= 2;\nloop invariant 100 - (x + 1) = y;\nloop invariant 100 - 1 <= y;\nloop invariant 100 - 100 <= y;\nloop invariant 0 <= y;\nloop invariant y <= 100 - 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant x >= 1;\nloop invariant x + 1 <= 100;\nloop invariant x + 1 >= 2;\nloop invariant 100 - (x + 1) = y;\nloop invariant 100 - 1 <= y;\nloop invariant 100 - 100 <= y;\nloop invariant 0 <= y;\nloop invariant y <= 100 - 1;\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant y = 100 - x;\nloop invariant y >= 0;\nloop invariant y <= 100;\nloop invariant x >= 1;\nloop invariant x <= 100;\nloop invariant x + y = 100;\nloop invariant y = 100 - x ==> x + y = 100;\nloop invariant x <= 100 ==> y >= 0;\nloop invariant x >= 1 ==> y <= 100;\nloop invariant y >= 0 ==> x <= 100;\nloop invariant y <= 100 ==> x >= 1;\nloop invariant x + y = 100 ==> x <= 100;\nloop invariant x + y = 100 ==> y >= 0;\nloop invariant x <= 100 ==> y >= 0;\nloop invariant y >= 0 ==> x <= 100;\nloop invariant x + y = 100 ==> y <= 100;\nloop invariant y <= 100 ==> x + y = 100;\nloop invariant x <= 100 ==> y >= 0;\nloop invariant x <= 100 ==> y <= 100;\nloop invariant x >= 1 ==> y >= 0;\nloop invariant x >= 1 ==> y <= 100;\nloop invariant x + y = 100 ==> y >= 0;\nloop invariant x + y = 100 ==> y <= 100;\nloop invariant y >= 0 ==> x <= 100;\nloop invariant y <= 100 ==> x >= 1;\nloop invariant y >= 0 ==> x + y = 100;\nloop invariant y <= 100 ==> x + y = 100;\nloop invariant x + y = 100 ==> y >= 0;\nloop invariant x + y = 100 ==> y <= 100;\nloop invariant x <= 100 ==> y >= 0;\nloop invariant x <= 100 ==> y <= 100;\nloop invariant x >= 1 ==> y >= 0;\nloop invariant x >= 1 ==> y <= 100;\nloop invariant y >= 0 ==> x <= 100;\nloop invariant y <= 100 ==> x >= 1;\nloop invariant y >= 0 ==> x + y = 100;\nloop invariant y <= 100 ==> x + y = 100;\nloop invariant x + y = 100 ==> y >= 0;\nloop invariant x + y = 100 ==> y <= 100;\nloop invariant x <= 100 ==> y >= 0;\nloop invariant x <= 100 ==> y <= 100;\nloop invariant x >= 1 ==> y >= 0;\nloop invariant x >= 1 ==> y <= 100;\nloop invariant y >= 0 ==> x <= 100;\nloop invariant y <= 100 ==> x >= 1;\nloop invariant y >= 0 ==> x + y = 100;\nloop invariant y <= 100 ==> x + y = 100;\nloop invariant x + y = 100 ==> y >= 0;\nloop invariant x + y = 100 ==> y <= 100;\nloop invariant x <= 100 ==> y >= 0;\nloop invariant x <= 100 ==> y <= 100;\nloop invariant x >= 1 ==> y >= 0;\nloop invariant x >= 1 ==> y <= 100;\nloop invariant y >= 0 ==> x <= 100;\nloop invariant y <= 100 ==> x >= 1;\nloop invariant y >= 0 ==> x + y = 100;\nloop invariant y <= 100 ==> x + y = 100;\nloop invariant x + y = 100 ==> y >= 0;\nloop invariant x + y = 100 ==> y <= 100;\nloop invariant x <= 100 ==> y >= 0;\nloop invariant x <= 100 ==> y <= 100;\nloop invariant x >= 1 ==> y >= 0;\nloop invariant x >= 1 ==> y <= 100;\nloop invariant y >= 0 ==> x <= 100;\nloop invariant y <= 100 ==> x >= 1;\nloop invariant y >= 0 ==> x + y = 100;\nloop invariant y <= 100 ==> x + y = 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 100;\nloop invariant x + y == 101;\nloop invariant x > 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 101;\nloop invariant y == 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 100;\nloop invariant 0 <= y <= 100;\nloop invariant x + y == 101;\nloop invariant x * y == 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 1 <= x <= 100 is partially proven to be inductive.\nloop invariant 0 <= y <= 100 is preserved but not established.\nloop invariant x + y == 101 is preserved but not established.\nloop invariant x * y == 0 is preserved but not established.\nAssertion y >= 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n*/\nwhile (x <= 100) {\n        y = 100 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= x <= 100 is established but not preserved.\nAssertion y >= 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n*/\nwhile (x <= 100) {\n        y = 100 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 100 - x;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant y = 100 - x;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 14: Assignment operators not allowed in annotations.",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n\n*/\nwhile (x <= 100) {\n        y = 100 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y == 100 - x;\nloop invariant y >= 0;\nloop invariant y <= 100;\nloop invariant x + y == 100;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant y == 100 - x;\nloop invariant x + y == 100;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= y <= 100 is preserved but not established.\nloop invariant x >= 0 is partially proven to be inductive.\nloop invariant x <= 100 is established but not preserved.\nloop invariant y == 100 - x is neither established nor preserved.\nloop invariant y >= 0 is partially proven to be inductive.\nloop invariant y <= 100 is partially proven to be inductive.\nloop invariant x + y == 100 is partially proven to be inductive.\nAssertion y >= 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\nloop invariant i2: x >= 0;\n\n\n\n\n\n*/\nwhile (x <= 100) {\n        y = 100 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 100;\nloop invariant y = 100 - x;\nloop invariant x + y = 100;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 14: Assignment operators not allowed in annotations.",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n*/\nwhile (x <= 100) {\n        y = 100 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 101;\nloop invariant y = 100 - x;\nloop invariant (x <= 100 ==> y >= 0);\nloop invariant (x <= 100 ==> x + 1 <= 101);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 13: Assignment operators not allowed in annotations.",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\nloop invariant i1: 0 <= x <= 101;\n\n\nloop invariant i4: (x <= 100 ==> x + 1 <= 101);\nloop invariant i5: (x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant i6: (x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant i7: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant i8: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant i9: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant i10: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant i11: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant i12: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant i13: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant i14: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant i15: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant i16: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant i17: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant i18: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant i19: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant i20: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant i21: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\n*/\nwhile (x <= 100) {\n        y = 100 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x > 0;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant y <= 99;\nloop invariant y > 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 13: Assignment operators not allowed in annotations.",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\nloop invariant i1: x > 0;\n\n\nloop invariant i4: x >= 1;\n\n\n\n*/\nwhile (x <= 100) {\n        y = 100 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 100;\nloop invariant y == 100 - x;\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 100;\nloop invariant y == 100 - x;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= x <= 100 is established but not preserved.\nloop invariant 0 <= y <= 100 is preserved but not established.\nloop invariant y == 100 - x is neither established nor preserved.\nAssertion y >= 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n*/\nwhile (x <= 100) {\n        y = 100 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant y = 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\nloop invariant x <= 100 ==> y >= 0;\nloop invariant x <= 100 ==> y = 100 - x;\nloop invariant x <= 100 ==> x >= 1;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 13: Assignment operators not allowed in annotations.",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n\n\nloop invariant i7: x <= 100 ==> x >= 1;\n*/\nwhile (x <= 100) {\n        y = 100 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 100;\nloop invariant 0 <= y <= 100;\nloop invariant y = 100 - x;\nloop invariant x + y <= 100;\nloop invariant x - y <= 100;\nloop invariant x - y + y = x;\nloop invariant x + y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant x + y <= 100;\nloop invariant 1 <= x + y <= 100;\nloop invariant 0 <= x + y <= 100;\nloop invariant x - y >= 0;\nloop invariant x - y + y = x;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y <= 100;\nloop invariant x + y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 14: Assignment operators not allowed in annotations.",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n\n\n\n\nloop invariant i9: x >= 1;\n\n\n\n*/\nwhile (x <= 100) {\n        y = 100 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 100;\nloop invariant y = 100 - x;\nloop invariant y <= 100 - 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant x >= 1;\nloop invariant x + 1 <= 100;\nloop invariant x + 1 >= 2;\nloop invariant 100 - (x + 1) = y;\nloop invariant 100 - 1 <= y;\nloop invariant 100 - 100 <= y;\nloop invariant 0 <= y;\nloop invariant y <= 100 - 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant x >= 1;\nloop invariant x + 1 <= 100;\nloop invariant x + 1 >= 2;\nloop invariant 100 - (x + 1) = y;\nloop invariant 100 - 1 <= y;\nloop invariant 100 - 100 <= y;\nloop invariant 0 <= y;\nloop invariant y <= 100 - 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant x >= 1;\nloop invariant x + 1 <= 100;\nloop invariant x + 1 >= 2;\nloop invariant 100 - (x + 1) = y;\nloop invariant 100 - 1 <= y;\nloop invariant 100 - 100 <= y;\nloop invariant 0 <= y;\nloop invariant y <= 100 - 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant x >= 1;\nloop invariant x + 1 <= 100;\nloop invariant x + 1 >= 2;\nloop invariant 100 - (x + 1) = y;\nloop invariant 100 - 1 <= y;\nloop invariant 100 - 100 <= y;\nloop invariant 0 <= y;\nloop invariant y <= 100 - 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant x >= 1;\nloop invariant x + 1 <= 100;\nloop invariant x + 1 >= 2;\nloop invariant 100 - (x + 1) = y;\nloop invariant 100 - 1 <= y;\nloop invariant 100 - 100 <= y;\nloop invariant 0 <= y;\nloop invariant y <= 100 - 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant x >= 1;\nloop invariant x + 1 <= 100;\nloop invariant x + 1 >= 2;\nloop invariant 100 - (x + 1) = y;\nloop invariant 100 - 1 <= y;\nloop invariant 100 - 100 <= y;\nloop invariant 0 <= y;\nloop invariant y <= 100 - 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant x >= 1;\nloop invariant x + 1 <= 100;\nloop invariant x + 1 >= 2;\nloop invariant 100 - (x + 1) = y;\nloop invariant 100 - 1 <= y;\nloop invariant 100 - 100 <= y;\nloop invariant 0 <= y;\nloop invariant y <= 100 - 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant x >= 1;\nloop invariant x + 1 <= 100;\nloop invariant x + 1 >= 2;\nloop invariant 100 - (x + 1) = y;\nloop invariant 100 - 1 <= y;\nloop invariant 100 - 100 <= y;\nloop invariant 0 <= y;\nloop invariant y <= 100 - 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant x >= 1;\nloop invariant x + 1 <= 100;\nloop invariant x + 1 >= 2;\nloop invariant 100 - (x + 1) = y;\nloop invariant 100 - 1 <= y;\nloop invariant 100 - 100 <= y;\nloop invariant 0 <= y;\nloop invariant y <= 100 - 1;\nloop invariant y >= 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 13: Assignment operators not allowed in annotations.",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n\nloop invariant i6: x >= 1;\n\nloop invariant i8: x + 1 >= 2;\n\n\n\n\n*/\nwhile (x <= 100) {\n        y = 100 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 13,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant y = 100 - x;\nloop invariant y >= 0;\nloop invariant y <= 100;\nloop invariant x >= 1;\nloop invariant x <= 100;\nloop invariant x + y = 100;\nloop invariant y = 100 - x ==> x + y = 100;\nloop invariant x <= 100 ==> y >= 0;\nloop invariant x >= 1 ==> y <= 100;\nloop invariant y >= 0 ==> x <= 100;\nloop invariant y <= 100 ==> x >= 1;\nloop invariant x + y = 100 ==> x <= 100;\nloop invariant x + y = 100 ==> y >= 0;\nloop invariant x <= 100 ==> y >= 0;\nloop invariant y >= 0 ==> x <= 100;\nloop invariant x + y = 100 ==> y <= 100;\nloop invariant y <= 100 ==> x + y = 100;\nloop invariant x <= 100 ==> y >= 0;\nloop invariant x <= 100 ==> y <= 100;\nloop invariant x >= 1 ==> y >= 0;\nloop invariant x >= 1 ==> y <= 100;\nloop invariant x + y = 100 ==> y >= 0;\nloop invariant x + y = 100 ==> y <= 100;\nloop invariant y >= 0 ==> x <= 100;\nloop invariant y <= 100 ==> x >= 1;\nloop invariant y >= 0 ==> x + y = 100;\nloop invariant y <= 100 ==> x + y = 100;\nloop invariant x + y = 100 ==> y >= 0;\nloop invariant x + y = 100 ==> y <= 100;\nloop invariant x <= 100 ==> y >= 0;\nloop invariant x <= 100 ==> y <= 100;\nloop invariant x >= 1 ==> y >= 0;\nloop invariant x >= 1 ==> y <= 100;\nloop invariant y >= 0 ==> x <= 100;\nloop invariant y <= 100 ==> x >= 1;\nloop invariant y >= 0 ==> x + y = 100;\nloop invariant y <= 100 ==> x + y = 100;\nloop invariant x + y = 100 ==> y >= 0;\nloop invariant x + y = 100 ==> y <= 100;\nloop invariant x <= 100 ==> y >= 0;\nloop invariant x <= 100 ==> y <= 100;\nloop invariant x >= 1 ==> y >= 0;\nloop invariant x >= 1 ==> y <= 100;\nloop invariant y >= 0 ==> x <= 100;\nloop invariant y <= 100 ==> x >= 1;\nloop invariant y >= 0 ==> x + y = 100;\nloop invariant y <= 100 ==> x + y = 100;\nloop invariant x + y = 100 ==> y >= 0;\nloop invariant x + y = 100 ==> y <= 100;\nloop invariant x <= 100 ==> y >= 0;\nloop invariant x <= 100 ==> y <= 100;\nloop invariant x >= 1 ==> y >= 0;\nloop invariant x >= 1 ==> y <= 100;\nloop invariant y >= 0 ==> x <= 100;\nloop invariant y <= 100 ==> x >= 1;\nloop invariant y >= 0 ==> x + y = 100;\nloop invariant y <= 100 ==> x + y = 100;\nloop invariant x + y = 100 ==> y >= 0;\nloop invariant x + y = 100 ==> y <= 100;\nloop invariant x <= 100 ==> y >= 0;\nloop invariant x <= 100 ==> y <= 100;\nloop invariant x >= 1 ==> y >= 0;\nloop invariant x >= 1 ==> y <= 100;\nloop invariant y >= 0 ==> x <= 100;\nloop invariant y <= 100 ==> x >= 1;\nloop invariant y >= 0 ==> x + y = 100;\nloop invariant y <= 100 ==> x + y = 100;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 13: Assignment operators not allowed in annotations.",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\nloop invariant i5: x >= 1;\n\n\n\n\n\n\nloop invariant i12: y <= 100 ==> x >= 1;\n\n\n\n\n\n\n\n*/\nwhile (x <= 100) {\n        y = 100 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 100;\nloop invariant x + y == 101;\nloop invariant x > 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= x <= 100 is established but not preserved.\nloop invariant 0 <= y <= 100 is preserved but not established.\nloop invariant x + y == 101 is preserved but not established.\nloop invariant x > 0 is partially proven to be inductive.\nAssertion y >= 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\nloop invariant i4: x > 0;\n*/\nwhile (x <= 100) {\n        y = 100 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x + y = 101;\nloop invariant x >= 1;\nloop invariant y >= 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 14: Assignment operators not allowed in annotations.",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\nloop invariant i4: x >= 1;\n\n\n\n*/\nwhile (x <= 100) {\n        y = 100 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 101;\nloop invariant y == 100 - x;\nloop invariant x <= 100;\nloop invariant y >= 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= x <= 101 is partially proven to be inductive.\nloop invariant y == 100 - x is neither established nor preserved.\nloop invariant x <= 100 is partially proven to be inductive.\nloop invariant y >= 0 is partially proven to be inductive.\nAssertion y >= 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\nloop invariant i1: 0 <= x <= 101;\n\n\n\n*/\nwhile (x <= 100) {\n        y = 100 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 18: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\nloop invariant i1: 1 <= x <= 100;\nloop invariant i2: 0 <= y <= 100;\nloop invariant i3: x + y == 101;\nloop invariant i4: x * y == 0;\nloop invariant i5: 0 <= x <= 100;\nloop invariant i6: 0 <= y <= 100 - x;\nloop invariant i7: y = 100 - x;\nloop invariant i8: x <= 100;\nloop invariant i9: y >= 0;\nloop invariant i10: x >= 0;\nloop invariant i11: y == 100 - x;\nloop invariant i12: y <= 100;\nloop invariant i13: x + y == 100;\nloop invariant i14: x + y = 100;\nloop invariant i15: 0 <= x <= 101;\nloop invariant i16: (x <= 100 ==> y >= 0);\nloop invariant i17: (x <= 100 ==> x + 1 <= 101);\nloop invariant i18: (x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant i19: (x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant i20: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant i21: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant i22: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant i23: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant i24: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant i25: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant i26: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant i27: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant i28: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant i29: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant i30: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant i31: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant i32: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant i33: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant i34: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant i35: x > 0;\nloop invariant i36: x >= 1;\nloop invariant i37: y <= 99;\nloop invariant i38: y > 0;\nloop invariant i39: x <= 100 ==> y >= 0;\nloop invariant i40: x <= 100 ==> y = 100 - x;\nloop invariant i41: x <= 100 ==> x >= 1;\nloop invariant i42: x + y <= 100;\nloop invariant i43: x - y <= 100;\nloop invariant i44: x - y + y = x;\nloop invariant i45: x + y >= 0;\nloop invariant i46: 1 <= x + y <= 100;\nloop invariant i47: 0 <= x + y <= 100;\nloop invariant i48: x - y >= 0;\nloop invariant i49: y <= 100 - 1;\nloop invariant i50: x + 1 <= 100;\nloop invariant i51: x + 1 >= 2;\nloop invariant i52: 100 - (x + 1) = y;\nloop invariant i53: 100 - 1 <= y;\nloop invariant i54: 100 - 100 <= y;\nloop invariant i55: 0 <= y;\nloop invariant i56: y = 100 - x ==> x + y = 100;\nloop invariant i57: x >= 1 ==> y <= 100;\nloop invariant i58: y >= 0 ==> x <= 100;\nloop invariant i59: y <= 100 ==> x >= 1;\nloop invariant i60: x + y = 100 ==> x <= 100;\nloop invariant i61: x + y = 100 ==> y >= 0;\nloop invariant i62: x + y = 100 ==> y <= 100;\nloop invariant i63: y <= 100 ==> x + y = 100;\nloop invariant i64: x <= 100 ==> y <= 100;\nloop invariant i65: x >= 1 ==> y >= 0;\nloop invariant i66: y >= 0 ==> x + y = 100;\nloop invariant i67: x + y = 101;\n*/\nwhile (x <= 100) {\n        y = 100 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y >= 0);\n}\n\n}",
        "combined_annotation_num_solver_calls": 25,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n\n\n\n\n\nloop invariant i10: x >= 0;\n\n\n\n\nloop invariant i15: 0 <= x <= 101;\n\nloop invariant i17: (x <= 100 ==> x + 1 <= 101);\nloop invariant i18: (x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant i19: (x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant i20: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant i21: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant i22: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant i23: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant i24: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant i25: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant i26: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant i27: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant i28: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant i29: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant i30: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant i31: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant i32: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0);\nloop invariant i33: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 101);\nloop invariant i34: (x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100 ==> y >= 0 ==> x <= 100);\nloop invariant i35: x > 0;\nloop invariant i36: x >= 1;\n\n\n\n\nloop invariant i41: x <= 100 ==> x >= 1;\n\n\n\n\n\n\n\n\n\nloop invariant i51: x + 1 >= 2;\n\n\n\n\n\n\n\nloop invariant i59: y <= 100 ==> x >= 1;\n\n\n\n\n\n\n\n\n*/\nwhile (x <= 100) {\n        y = 100 - x;\n        x = x +1;\n    }\n\n    {;\n//@ assert(y >= 0);\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [],
        "failure": [
            "../dataset/loop_invariants/code2inv/65.c"
        ],
        "skipped": [],
        "total": 1,
        "success_count": 0,
        "failure_count": 1,
        "success_rate": 0.0
    }
}