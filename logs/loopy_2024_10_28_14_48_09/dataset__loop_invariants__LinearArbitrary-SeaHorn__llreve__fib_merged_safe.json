{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/fib_merged_safe.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nvoid main() {\n\tint n = unknown();\n  int f1 = 0;   \n  int f2 = 1;  \n  int g1 = 1, g2 = 1;\n  int h1 = 0, h2 = 0;\n\n  while((n > 0)) {\n    h1 = f1 + g1;\n    f1 = g1;\n    g1 = h1;\n    n --;\n\n    h2 = f2 + g2;\n    f2 = g2;\n    g2 = h2;\n\n\t{;\n//@ assert(h2==h1+f1);\n}\n\n  }\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= n <= 100000; loop invariant 0 <= f1 <= 100000; loop invariant 0 <= f2 <= 100000; loop invariant 0 <= g1 <= 100000; loop invariant 0 <= g2 <= 100000; loop invariant 0 <= h1 <= 100000; loop invariant 0 <= h2 <= 100000; loop invariant h1 == f1 + g1; loop invariant h2 == f2 + g2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n;\nloop invariant f2 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant f1 == g1 - h1;\nloop invariant f2 == g2 - h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant f1 == g1 - h1;\nloop invariant f2 == g2 - h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n <= unknown();\nloop invariant f1 == g2;\nloop invariant f2 == g1;\nloop invariant f1 == h1 - g1;\nloop invariant f2 == h2 - g2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n <= unknown();\nloop invariant f1 <= f2 <= g2;\nloop invariant h1 <= h2 <= g1+f1;\nloop invariant h2 = h1+f1 ==> h1 <= h2 <= g1+f1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n;\nloop invariant 0 <= f1 <= f2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 == f1 + g1;\nloop invariant g2 == f2 + g2;\nloop invariant (n > 0) ==> (h2 == h1 + f1);\nloop invariant (n > 0) ==> (h2 >= h1 + f1);\nloop invariant (n > 0) ==> (h2 <= h1 + f1);\nloop invariant (n > 0) ==> (h1 <= h2);\nloop invariant (n > 0) ==> (f1 <= f2);\nloop invariant (n > 0) ==> (g1 == f1 + g1);\nloop invariant (n > 0) ==> (g2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 == f1 + g1);\nloop invariant (n > 0) ==> (h2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 <= h2);\nloop invariant (n > 0) ==> (f1 <= f2);\nloop invariant (n > 0) ==> (g1 == f1 + g1);\nloop invariant (n > 0) ==> (g2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 == f1 + g1);\nloop invariant (n > 0) ==> (h2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 <= h2);\nloop invariant (n > 0) ==> (f1 <= f2);\nloop invariant (n > 0) ==> (g1 == f1 + g1);\nloop invariant (n > 0) ==> (g2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 == f1 + g1);\nloop invariant (n > 0) ==> (h2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 <= h2);\nloop invariant (n > 0) ==> (f1 <= f2);\nloop invariant (n > 0) ==> (g1 == f1 + g1);\nloop invariant (n > 0) ==> (g2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 == f1 + g1);\nloop invariant (n > 0) ==> (h2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 <= h2);\nloop invariant (n > 0) ==> (f1 <= f2);\nloop invariant (n > 0) ==> (g1 == f1 + g1);\nloop invariant (n > 0) ==> (g2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 == f1 + g1);\nloop invariant (n > 0) ==> (h2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 <= h2);\nloop invariant (n > 0) ==> (f1 <= f2);\nloop invariant (n > 0) ==> (g1 == f1 + g1);\nloop invariant (n > 0) ==> (g2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 == f1 + g1);\nloop invariant (n > 0) ==> (h2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 <= h2);\nloop invariant (n > 0) ==> (f1 <= f2);\nloop invariant (n > 0) ==> (g1 == f1 + g1);\nloop invariant (n > 0) ==> (g2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 == f1 + g1);\nloop invariant (n > 0) ==> (h2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 <= h2);\nloop invariant (n > 0) ==> (f1 <= f2);\nloop invariant (n > 0) ==> (g1 == f1 + g1);\nloop invariant (n > 0) ==> (g2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 == f1 + g1);\nloop invariant (n > 0) ==> (h2 == f2 + g2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n <= 100000;\nloop invariant f1 >= 0;\nloop invariant f2 >= 0;\nloop invariant g1 >= 0;\nloop invariant g2 >= 0;\nloop invariant h1 >= 0;\nloop invariant h2 >= 0;\nloop invariant h1 = f1 + g1;\nloop invariant h2 = f2 + g2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 + g1 <= f2 + g2;\nloop invariant f1 + g1 <= h2;\nloop invariant f2 + g2 <= h2;\nloop invariant f1 + g1 <= f1 + g1;\nloop invariant f2 + g2 <= f2 + g2;\nloop invariant f1 + g1 <= 100000;\nloop invariant f2 + g2 <= 100000;\nloop invariant h1 <= 100000;\nloop invariant h2 <= 100000;\nloop invariant f1 <= h1;\nloop invariant f2 <= h2;\nloop invariant g1 <= h1;\nloop invariant g2 <= h2;\nloop invariant f1 <= 100000;\nloop invariant f2 <= 100000;\nloop invariant g1 <= 100000;\nloop invariant g2 <= 100000;\nloop invariant h1 <= 100000;\nloop invariant h2 <= 100000;\nloop invariant f1 <= f1;\nloop invariant f2 <= f2;\nloop invariant g1 <= g1;\nloop invariant g2 <= g2;\nloop invariant h1 <= h1;\nloop invariant h2 <= h2;\nloop invariant f1 <= 100000;\nloop invariant f2 <= 100000;\nloop invariant g1 <= 100000;\nloop invariant g2 <= 100000;\nloop invariant h1 <= 100000;\nloop invariant h2 <= 100000;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 + g1 <= f2 + g2;\nloop invariant f1 + g1 <= h2;\nloop invariant f2 + g2 <= h2;\nloop invariant f1 + g1 <= 100000;\nloop invariant f2 + g2 <= 100000;\nloop invariant h1 <= 100000;\nloop invariant h2 <= 100000;\nloop invariant f1 <= h1;\nloop invariant f2 <= h2;\nloop invariant g1 <= h1;\nloop invariant g2 <= h2;\nloop invariant f1 <= 100000;\nloop invariant f2 <= 100000;\nloop invariant g1 <= 100000;\nloop invariant g2 <= 100000;\nloop invariant h1 <= 100000;\nloop invariant h2 <= 100000;\nloop invariant f1 <= f1;\nloop invariant f2 <= f2;\nloop invariant g1 <= g1;\nloop invariant g2 <= g2;\nloop invariant h1 <= h1;\nloop invariant h2 <= h2;\nloop invariant f1 <= 100000;\nloop invariant f2 <= 100000;\nloop invariant g1 <= 100000;\nloop invariant g2 <= 100000;\nloop invariant h1 <= 100000;\nloop invariant h2 <= 100000;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 + g1 <= f2 + g2;\nloop invariant f1 + g1 <= h2;\nloop invariant f2 + g2 <= h2;\nloop invariant f1 + g1 <= 100000;\nloop invariant f2 + g2 <= 100000;\nloop invariant h1 <= 100000;\nloop invariant h2 <= 100000;\nloop invariant f1 <= h1;\nloop invariant f2 <= h2;\nloop invariant g1 <= h1;\nloop invariant g2 <= h2;\nloop invariant f1 <= 100000;\nloop invariant f2 <= 100000;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n <= 32767;\nloop invariant f2 >= f1 >= 0;\nloop invariant g2 >= g1 >= 0;\nloop invariant h2 >= h1 >= 0;\nloop invariant h1 == h2 + f1;\nloop invariant h2 == h1 + f1;\nloop invariant f2 == g2 + f1;\nloop invariant g2 == h2 + g1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant f1 >= 0;\nloop invariant g1 >= 0;\nloop invariant h1 >= 0;\nloop invariant h2 >= 0;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n <= unknown();\nloop invariant (f1 + g1 == h1);\nloop invariant (f2 + g2 == h2);\nloop invariant (f1 <= f2);\nloop invariant (g1 <= g2);\nloop invariant (h1 <= h2);\nloop invariant (n >= 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= g1 <= g2 <= f2 <= f1 <= n <= 100000;\nloop invariant h2 == h1 + f1;\nloop invariant g1 + f1 == f2 + g2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= n <= 2147483647;\nloop invariant f1 >= 0;\nloop invariant f2 >= 0;\nloop invariant g1 >= 0;\nloop invariant g2 >= 0;\nloop invariant h1 >= f1;\nloop invariant h2 >= f2;\nloop invariant h1 >= g1;\nloop invariant h2 >= g2;\nloop invariant h1 >= f1 + g1;\nloop invariant h2 >= f2 + g2;\nloop invariant h1 <= f1 + g1;\nloop invariant h2 <= f2 + g2;\nloop invariant h1 <= f1 + g1 + 1;\nloop invariant h2 <= f2 + g2 + 1;\nloop invariant h1 >= f1 + g1 - 1;\nloop invariant h2 >= f2 + g2 - 1;\nloop invariant h1 <= f1 + g1 + 2;\nloop invariant h2 <= f2 + g2 + 2;\nloop invariant h1 >= f1 + g1 - 2;\nloop invariant h2 >= f2 + g2 - 2;\nloop invariant h1 <= f1 + g1 + 3;\nloop invariant h2 <= f2 + g2 + 3;\nloop invariant h1 >= f1 + g1 - 3;\nloop invariant h2 >= f2 + g2 - 3;\nloop invariant h1 <= f1 + g1 + 4;\nloop invariant h2 <= f2 + g2 + 4;\nloop invariant h1 >= f1 + g1 - 4;\nloop invariant h2 >= f2 + g2 - 4;\nloop invariant h1 <= f1 + g1 + 5;\nloop invariant h2 <= f2 + g2 + 5;\nloop invariant h1 >= f1 + g1 - 5;\nloop invariant h2 >= f2 + g2 - 5;\nloop invariant h1 <= f1 + g1 + 6;\nloop invariant h2 <= f2 + g2 + 6;\nloop invariant h1 >= f1 + g1 - 6;\nloop invariant h2 >= f2 + g2 - 6;\nloop invariant h1 <= f1 + g1 + 7;\nloop invariant h2 <= f2 + g2 + 7;\nloop invariant h1 >= f1 + g1 - 7;\nloop invariant h2 >= f2 + g2 - 7;\nloop invariant h1 <= f1 + g1 + 8;\nloop invariant h2 <= f2 + g2 + 8;\nloop invariant h1 >= f1 + g1 - 8;\nloop invariant h2 >= f2 + g2 - 8;\nloop invariant h1 <= f1 + g1 + 9;\nloop invariant h2 <= f2 + g2 + 9;\nloop invariant h1 >= f1 + g1 - 9;\nloop invariant h2 >= f2 + g2 - 9;\nloop invariant h1 <= f1 + g1 + 10;\nloop invariant h2 <= f2 + g2 + 10;\nloop invariant h1 >= f1 + g1 - 10;\nloop invariant h2 >= f2 + g2 - 10;\nloop invariant h1 <= f1 + g1 + 11;\nloop invariant h2 <= f2 + g2 + 11;\nloop invariant h1 >= f1 + g1 - 11;\nloop invariant h2 >= f2 + g2 - 11;\nloop invariant h1 <= f1 + g1 + 12;\nloop invariant h2 <= f2 + g2 + 12;\nloop invariant h1 >= f1 + g1 - 12;\nloop invariant h2 >= f2 + g2 - 12;\nloop invariant h1 <= f1 + g1 + 13;\nloop invariant h2 <= f2 + g2 + 13;\nloop invariant h1 >= f1 + g1 - 13;\nloop invariant h2 >= f2 + g2 - 13;\nloop invariant h1 <= f1 + g1 + 14;\nloop invariant h2 <= f2 + g2 + 14;\nloop invariant h1 >= f1 + g1 - 14;\nloop invariant h2 >= f2 + g2 - 14;\nloop invariant h1 <= f1 + g1 + 15;\nloop invariant h2 <= f2 + g2 + 15;\nloop invariant h1 >= f1 + g1 - 15;\nloop invariant h2 >= f2 + g2 - 15;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= f1 <= 1;\nloop invariant 0 <= f2 <= 1;\nloop invariant 0 <= g1 <= 2;\nloop invariant 0 <= g2 <= 2;\nloop invariant 0 <= h1 <= 3;\nloop invariant 0 <= h2 <= 3;\nloop invariant f1 + g1 <= h1;\nloop invariant f2 + g2 <= h2;\nloop invariant f1 + g1 >= h1 - 1;\nloop invariant f2 + g2 >= h2 - 1;\nloop invariant f1 + g1 <= h1 + 1;\nloop invariant f2 + g2 <= h2 + 1;\nloop invariant f1 + g1 >= h1 - 2;\nloop invariant f2 + g2 >= h2 - 2;\nloop invariant f1 + g1 <= h1 + 2;\nloop invariant f2 + g2 <= h2 + 2;\nloop invariant f1 + g1 >= h1 - 3;\nloop invariant f2 + g2 >= h2 - 3;\nloop invariant f1 + g1 <= h1 + 3;\nloop invariant f2 + g2 <= h2 + 3;\nloop invariant f1 + g1 >= h1 - 4;\nloop invariant f2 + g2 >= h2 - 4;\nloop invariant f1 + g1 <= h1 + 4;\nloop invariant f2 + g2 <= h2 + 4;\nloop invariant f1 + g1 >= h1 - 5;\nloop invariant f2 + g2 >= h2 - 5;\nloop invariant f1 + g1 <= h1 + 5;\nloop invariant f2 + g2 <= h2 + 5;\nloop invariant f1 + g1 >= h1 - 6;\nloop invariant f2 + g2 >= h2 - 6;\nloop invariant f1 + g1 <= h1 + 6;\nloop invariant f2 + g2 <= h2 + 6;\nloop invariant f1 + g1 >= h1 - 7;\nloop invariant f2 + g2 >= h2 - 7;\nloop invariant f1 + g1 <= h1 + 7;\nloop invariant f2 + g2 <= h2 + 7;\nloop invariant f1 + g1 >= h1 - 8;\nloop invariant f2 + g2 >= h2 - 8;\nloop invariant f1 + g1 <= h1 + 8;\nloop invariant f2 + g2 <= h2 + 8;\nloop invariant f1 + g1 >= h1 - 9;\nloop invariant f2 + g2 >= h2 - 9;\nloop invariant f1 + g1 <= h1 + 9;\nloop invariant f2 + g2 <= h2 + 9;\nloop invariant f1 + g1 >= h1 - 10;\nloop invariant f2 + g2 >= h2 - 10;\nloop invariant f1 + g1 <= h1 + 10;\nloop invariant f2 + g2 <= h2 + 10;\nloop invariant f1 + g1 >= h1 - 11;\nloop invariant f2 + g2 >= h2 - 11;\nloop invariant f1 + g1 <= h1 + 11;\nloop invariant f2 + g2 <= h2 + 11;\nloop invariant f1 + g1 >= h1 - 12;\nloop invariant f2 + g2 >= h2 - 12;\nloop invariant f1 + g1 <= h1 + 12;\nloop invariant f2 + g2 <= h2 + 12;\nloop invariant f1 + g1 >= h1 - 13;\nloop invariant f2 + g2 >= h2 - 13;\nloop invariant f1 + g1 <= h1 + 13;\nloop invariant f2 + g2 <= h2 + 13;\nloop invariant f1 + g1 >= h1 - 14;\nloop invariant f2 + g2 >= h2 - 14;\nloop invariant f1 + g1 <= h1 + 14;\nloop invariant f2 + g2 <= h2 + 14;\nloop invariant f1 + g1 >= h1 - 15;\nloop invariant f2 + g2 >= h2 - 15;\nloop invariant f1 + g1 <= h1 + 15;\nloop invariant f2 + g2 <= h2 + 15;\nloop invariant f1 + g1 >= h1 - 16;\nloop invariant f2 + g2 >= h2 - 16;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= f1 <= f2;\nloop invariant f1 + f2 == g1 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n <= 100000;\nloop invariant f1 >= f2;\nloop invariant g1 >= g2;\nloop invariant h1 >= h2;\nloop invariant (f1 == g1 - 1) ==> (h1 == f1 + g1);\nloop invariant (f1 == g1 - 1) ==> (h2 == f2 + g2);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n <= 100;\nloop invariant 0 <= f1 <= 10;\nloop invariant 0 <= f2 <= 10;\nloop invariant 0 <= g1 <= 10;\nloop invariant 0 <= g2 <= 10;\nloop invariant 0 <= h1 <= 10;\nloop invariant 0 <= h2 <= 10;\nloop invariant h1 == h2 + f1;\nloop invariant h2 == h2 + f2;\nloop invariant h1 + h2 == f1 + g1;\nloop invariant h2 + h2 == f2 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n;\nloop invariant 0 <= f1;\nloop invariant 0 <= f2;\nloop invariant 0 <= g1;\nloop invariant 0 <= g2;\nloop invariant 0 <= h1;\nloop invariant 0 <= h2;\nloop invariant f1 <= g1;\nloop invariant f2 <= g2;\nloop invariant h1 <= h2;\nloop invariant 0 <= h1 + f1;\nloop invariant 0 <= h2 + f2;\nloop invariant 0 <= h1 + f1 + h2 + f2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= n <= 100000; loop invariant 0 <= f1 <= 100000; loop invariant 0 <= f2 <= 100000; loop invariant 0 <= g1 <= 100000; loop invariant 0 <= g2 <= 100000; loop invariant 0 <= h1 <= 100000; loop invariant 0 <= h2 <= 100000; loop invariant h1 == f1 + g1; loop invariant h2 == f2 + g2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= n <= 100000; loop invariant 0 <= f1 <= 100000; loop invariant 0 <= f2 <= 100000; loop invariant 0 <= g1 <= 100000; loop invariant 0 <= g2 <= 100000; loop invariant 0 <= h1 <= 100000; loop invariant 0 <= h2 <= 100000; loop invariant h1 == f1 + g1; loop invariant h2 == f2 + g2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2 is preserved but not established.\nAssertion h2 == h1 + f1: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nvoid main() {\n\tint n = unknown();\n  int f1 = 0;   \n  int f2 = 1;  \n  int g1 = 1, g2 = 1;\n  int h1 = 0, h2 = 0;\n\n  /*@\n\n*/\nwhile((n > 0)) {\n    h1 = f1 + g1;\n    f1 = g1;\n    g1 = h1;\n    n --;\n\n    h2 = f2 + g2;\n    f2 = g2;\n    g2 = h2;\n\n\t{;\n//@ assert(h2==h1+f1);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= n;\nloop invariant f2 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant f1 == g1 - h1;\nloop invariant f2 == g2 - h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant f1 == g1 - h1;\nloop invariant f2 == g2 - h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= n is preserved but not established.\nloop invariant f2 == 1 is partially proven to be inductive.\nloop invariant g2 == 1 is partially proven to be inductive.\nloop invariant h1 == f1 + g1 is preserved but not established.\nloop invariant h2 == f2 + g2 is partially proven to be inductive.\nloop invariant f1 == g1 - h1 is partially proven to be inductive.\nloop invariant f2 == g2 - h2 is partially proven to be inductive.\nAssertion h2 == h1 + f1: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nvoid main() {\n\tint n = unknown();\n  int f1 = 0;   \n  int f2 = 1;  \n  int g1 = 1, g2 = 1;\n  int h1 = 0, h2 = 0;\n\n  /*@\n\n\n\n\n\n\n\n*/\nwhile((n > 0)) {\n    h1 = f1 + g1;\n    f1 = g1;\n    g1 = h1;\n    n --;\n\n    h2 = f2 + g2;\n    f2 = g2;\n    g2 = h2;\n\n\t{;\n//@ assert(h2==h1+f1);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 10,
                "annotations": "```\n/*@\nloop invariant 0 <= n <= unknown();\nloop invariant f1 == g2;\nloop invariant f2 == g1;\nloop invariant f1 == h1 - g1;\nloop invariant f2 == h2 - g2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant g1 == 1;\nloop invariant g2 == 1;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 17: unexpected token ')'",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nvoid main() {\n\tint n = unknown();\n  int f1 = 0;   \n  int f2 = 1;  \n  int g1 = 1, g2 = 1;\n  int h1 = 0, h2 = 0;\n\n  /*@\n\n\nloop invariant i3: f2 == g1;\n\n\n\n\n\n\n*/\nwhile((n > 0)) {\n    h1 = f1 + g1;\n    f1 = g1;\n    g1 = h1;\n    n --;\n\n    h2 = f2 + g2;\n    f2 = g2;\n    g2 = h2;\n\n\t{;\n//@ assert(h2==h1+f1);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= n <= unknown();\nloop invariant f1 <= f2 <= g2;\nloop invariant h1 <= h2 <= g1+f1;\nloop invariant h2 = h1+f1 ==> h1 <= h2 <= g1+f1;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 17: unexpected token ')'",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nvoid main() {\n\tint n = unknown();\n  int f1 = 0;   \n  int f2 = 1;  \n  int g1 = 1, g2 = 1;\n  int h1 = 0, h2 = 0;\n\n  /*@\n\n\n\n\n*/\nwhile((n > 0)) {\n    h1 = f1 + g1;\n    f1 = g1;\n    g1 = h1;\n    n --;\n\n    h2 = f2 + g2;\n    f2 = g2;\n    g2 = h2;\n\n\t{;\n//@ assert(h2==h1+f1);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= n;\nloop invariant 0 <= f1 <= f2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 == f1 + g1;\nloop invariant g2 == f2 + g2;\nloop invariant (n > 0) ==> (h2 == h1 + f1);\nloop invariant (n > 0) ==> (h2 >= h1 + f1);\nloop invariant (n > 0) ==> (h2 <= h1 + f1);\nloop invariant (n > 0) ==> (h1 <= h2);\nloop invariant (n > 0) ==> (f1 <= f2);\nloop invariant (n > 0) ==> (g1 == f1 + g1);\nloop invariant (n > 0) ==> (g2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 == f1 + g1);\nloop invariant (n > 0) ==> (h2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 <= h2);\nloop invariant (n > 0) ==> (f1 <= f2);\nloop invariant (n > 0) ==> (g1 == f1 + g1);\nloop invariant (n > 0) ==> (g2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 == f1 + g1);\nloop invariant (n > 0) ==> (h2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 <= h2);\nloop invariant (n > 0) ==> (f1 <= f2);\nloop invariant (n > 0) ==> (g1 == f1 + g1);\nloop invariant (n > 0) ==> (g2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 == f1 + g1);\nloop invariant (n > 0) ==> (h2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 <= h2);\nloop invariant (n > 0) ==> (f1 <= f2);\nloop invariant (n > 0) ==> (g1 == f1 + g1);\nloop invariant (n > 0) ==> (g2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 == f1 + g1);\nloop invariant (n > 0) ==> (h2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 <= h2);\nloop invariant (n > 0) ==> (f1 <= f2);\nloop invariant (n > 0) ==> (g1 == f1 + g1);\nloop invariant (n > 0) ==> (g2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 == f1 + g1);\nloop invariant (n > 0) ==> (h2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 <= h2);\nloop invariant (n > 0) ==> (f1 <= f2);\nloop invariant (n > 0) ==> (g1 == f1 + g1);\nloop invariant (n > 0) ==> (g2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 == f1 + g1);\nloop invariant (n > 0) ==> (h2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 <= h2);\nloop invariant (n > 0) ==> (f1 <= f2);\nloop invariant (n > 0) ==> (g1 == f1 + g1);\nloop invariant (n > 0) ==> (g2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 == f1 + g1);\nloop invariant (n > 0) ==> (h2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 <= h2);\nloop invariant (n > 0) ==> (f1 <= f2);\nloop invariant (n > 0) ==> (g1 == f1 + g1);\nloop invariant (n > 0) ==> (g2 == f2 + g2);\nloop invariant (n > 0) ==> (h1 == f1 + g1);\nloop invariant (n > 0) ==> (h2 == f2 + g2);\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= n is preserved but not established.\nloop invariant 0 <= f1 <= f2 is partially proven to be inductive.\nloop invariant h1 == f1 + g1 is preserved but not established.\nloop invariant h2 == f2 + g2 is partially proven to be inductive.\nloop invariant h1 <= h2 is partially proven to be inductive.\nloop invariant f1 <= f2 is partially proven to be inductive.\nloop invariant g1 == f1 + g1 is partially proven to be inductive.\nloop invariant g2 == f2 + g2 is partially proven to be inductive.\nloop invariant (n > 0) ==> (h2 == h1 + f1) is partially proven to be inductive.\nloop invariant (n > 0) ==> (h2 >= h1 + f1) is partially proven to be inductive.\nloop invariant (n > 0) ==> (h2 <= h1 + f1) is partially proven to be inductive.\nloop invariant (n > 0) ==> (h1 <= h2) is partially proven to be inductive.\nloop invariant (n > 0) ==> (f1 <= f2) is partially proven to be inductive.\nloop invariant (n > 0) ==> (g1 == f1 + g1) is partially proven to be inductive.\nloop invariant (n > 0) ==> (g2 == f2 + g2) is partially proven to be inductive.\nloop invariant (n > 0) ==> (h1 == f1 + g1) is partially proven to be inductive.\nloop invariant (n > 0) ==> (h2 == f2 + g2) is partially proven to be inductive.\nAssertion h2 == h1 + f1: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nvoid main() {\n\tint n = unknown();\n  int f1 = 0;   \n  int f2 = 1;  \n  int g1 = 1, g2 = 1;\n  int h1 = 0, h2 = 0;\n\n  /*@\n\n\n\n\n\n\n\n\nloop invariant i9: (n > 0) ==> (h2 == h1 + f1);\nloop invariant i10: (n > 0) ==> (h2 >= h1 + f1);\nloop invariant i11: (n > 0) ==> (h2 <= h1 + f1);\n\n\n\n\n\n\n*/\nwhile((n > 0)) {\n    h1 = f1 + g1;\n    f1 = g1;\n    g1 = h1;\n    n --;\n\n    h2 = f2 + g2;\n    f2 = g2;\n    g2 = h2;\n\n\t{;\n//@ assert(h2==h1+f1);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 14,
                "annotations": "```\n/*@\nloop invariant 0 <= n <= 100000;\nloop invariant f1 >= 0;\nloop invariant f2 >= 0;\nloop invariant g1 >= 0;\nloop invariant g2 >= 0;\nloop invariant h1 >= 0;\nloop invariant h2 >= 0;\nloop invariant h1 = f1 + g1;\nloop invariant h2 = f2 + g2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 + g1 <= f2 + g2;\nloop invariant f1 + g1 <= h2;\nloop invariant f2 + g2 <= h2;\nloop invariant f1 + g1 <= f1 + g1;\nloop invariant f2 + g2 <= f2 + g2;\nloop invariant f1 + g1 <= 100000;\nloop invariant f2 + g2 <= 100000;\nloop invariant h1 <= 100000;\nloop invariant h2 <= 100000;\nloop invariant f1 <= h1;\nloop invariant f2 <= h2;\nloop invariant g1 <= h1;\nloop invariant g2 <= h2;\nloop invariant f1 <= 100000;\nloop invariant f2 <= 100000;\nloop invariant g1 <= 100000;\nloop invariant g2 <= 100000;\nloop invariant h1 <= 100000;\nloop invariant h2 <= 100000;\nloop invariant f1 <= f1;\nloop invariant f2 <= f2;\nloop invariant g1 <= g1;\nloop invariant g2 <= g2;\nloop invariant h1 <= h1;\nloop invariant h2 <= h2;\nloop invariant f1 <= 100000;\nloop invariant f2 <= 100000;\nloop invariant g1 <= 100000;\nloop invariant g2 <= 100000;\nloop invariant h1 <= 100000;\nloop invariant h2 <= 100000;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 + g1 <= f2 + g2;\nloop invariant f1 + g1 <= h2;\nloop invariant f2 + g2 <= h2;\nloop invariant f1 + g1 <= 100000;\nloop invariant f2 + g2 <= 100000;\nloop invariant h1 <= 100000;\nloop invariant h2 <= 100000;\nloop invariant f1 <= h1;\nloop invariant f2 <= h2;\nloop invariant g1 <= h1;\nloop invariant g2 <= h2;\nloop invariant f1 <= 100000;\nloop invariant f2 <= 100000;\nloop invariant g1 <= 100000;\nloop invariant g2 <= 100000;\nloop invariant h1 <= 100000;\nloop invariant h2 <= 100000;\nloop invariant f1 <= f1;\nloop invariant f2 <= f2;\nloop invariant g1 <= g1;\nloop invariant g2 <= g2;\nloop invariant h1 <= h1;\nloop invariant h2 <= h2;\nloop invariant f1 <= 100000;\nloop invariant f2 <= 100000;\nloop invariant g1 <= 100000;\nloop invariant g2 <= 100000;\nloop invariant h1 <= 100000;\nloop invariant h2 <= 100000;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 + g1 <= f2 + g2;\nloop invariant f1 + g1 <= h2;\nloop invariant f2 + g2 <= h2;\nloop invariant f1 + g1 <= 100000;\nloop invariant f2 + g2 <= 100000;\nloop invariant h1 <= 100000;\nloop invariant h2 <= 100000;\nloop invariant f1 <= h1;\nloop invariant f2 <= h2;\nloop invariant g1 <= h1;\nloop invariant g2 <= h2;\nloop invariant f1 <= 100000;\nloop invariant f2 <= 100000;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 24: Assignment operators not allowed in annotations.",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nvoid main() {\n\tint n = unknown();\n  int f1 = 0;   \n  int f2 = 1;  \n  int g1 = 1, g2 = 1;\n  int h1 = 0, h2 = 0;\n\n  /*@\n\nloop invariant i2: f1 >= 0;\nloop invariant i3: f2 >= 0;\nloop invariant i4: g1 >= 0;\nloop invariant i5: g2 >= 0;\nloop invariant i6: h1 >= 0;\nloop invariant i7: h2 >= 0;\n\n\nloop invariant i10: f1 <= f2;\nloop invariant i11: g1 <= g2;\nloop invariant i12: h1 <= h2;\nloop invariant i13: f1 + g1 <= f2 + g2;\n\n\nloop invariant i16: f1 + g1 <= f1 + g1;\nloop invariant i17: f2 + g2 <= f2 + g2;\n\n\n\n\nloop invariant i22: f1 <= h1;\n\n\n\n\n\n\n\nloop invariant i30: f1 <= f1;\nloop invariant i31: f2 <= f2;\nloop invariant i32: g1 <= g1;\nloop invariant i33: g2 <= g2;\nloop invariant i34: h1 <= h1;\nloop invariant i35: h2 <= h2;\n*/\nwhile((n > 0)) {\n    h1 = f1 + g1;\n    f1 = g1;\n    g1 = h1;\n    n --;\n\n    h2 = f2 + g2;\n    f2 = g2;\n    g2 = h2;\n\n\t{;\n//@ assert(h2==h1+f1);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= n <= 32767;\nloop invariant f2 >= f1 >= 0;\nloop invariant g2 >= g1 >= 0;\nloop invariant h2 >= h1 >= 0;\nloop invariant h1 == h2 + f1;\nloop invariant h2 == h1 + f1;\nloop invariant f2 == g2 + f1;\nloop invariant g2 == h2 + g1;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant f1 >= 0;\nloop invariant g1 >= 0;\nloop invariant h1 >= 0;\nloop invariant h2 >= 0;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\nloop invariant g1 <= g2;\nloop invariant h1 <= h2;\nloop invariant f1 <= g1;\nloop invariant g1 <= h1;\nloop invariant f1 <= h2;\nloop invariant g1 <= h2;\nloop invariant f1 <= f2;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= n <= 32767 is preserved but not established.\nloop invariant f2 >= f1 >= 0 is partially proven to be inductive.\nloop invariant g2 >= g1 >= 0 is partially proven to be inductive.\nloop invariant h2 >= h1 >= 0 is partially proven to be inductive.\nloop invariant h1 == h2 + f1 is partially proven to be inductive.\nloop invariant h2 == h1 + f1 is partially proven to be inductive.\nloop invariant f2 == g2 + f1 is partially proven to be inductive.\nloop invariant g2 == h2 + g1 is partially proven to be inductive.\nloop invariant h1 == f1 + g1 is preserved but not established.\nloop invariant h2 == f2 + g2 is partially proven to be inductive.\nloop invariant f1 >= 0 is partially proven to be inductive.\nloop invariant g1 >= 0 is partially proven to be inductive.\nloop invariant h1 >= 0 is partially proven to be inductive.\nloop invariant h2 >= 0 is partially proven to be inductive.\nloop invariant f1 <= f2 is partially proven to be inductive.\nloop invariant g1 <= g2 is partially proven to be inductive.\nloop invariant h1 <= h2 is partially proven to be inductive.\nloop invariant f1 <= g1 is partially proven to be inductive.\nloop invariant g1 <= h1 is partially proven to be inductive.\nloop invariant f1 <= h2 is partially proven to be inductive.\nloop invariant g1 <= h2 is partially proven to be inductive.\nAssertion h2 == h1 + f1: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nvoid main() {\n\tint n = unknown();\n  int f1 = 0;   \n  int f2 = 1;  \n  int g1 = 1, g2 = 1;\n  int h1 = 0, h2 = 0;\n\n  /*@\n\nloop invariant i2: f2 >= f1 >= 0;\nloop invariant i3: g2 >= g1 >= 0;\nloop invariant i4: h2 >= h1 >= 0;\n\nloop invariant i6: h2 == h1 + f1;\n\n\n\n\nloop invariant i11: f1 >= 0;\nloop invariant i12: g1 >= 0;\nloop invariant i13: h1 >= 0;\nloop invariant i14: h2 >= 0;\nloop invariant i15: f1 <= f2;\nloop invariant i16: g1 <= g2;\nloop invariant i17: h1 <= h2;\nloop invariant i18: f1 <= g1;\n\nloop invariant i20: f1 <= h2;\n\n*/\nwhile((n > 0)) {\n    h1 = f1 + g1;\n    f1 = g1;\n    g1 = h1;\n    n --;\n\n    h2 = f2 + g2;\n    f2 = g2;\n    g2 = h2;\n\n\t{;\n//@ assert(h2==h1+f1);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= n <= unknown();\nloop invariant (f1 + g1 == h1);\nloop invariant (f2 + g2 == h2);\nloop invariant (f1 <= f2);\nloop invariant (g1 <= g2);\nloop invariant (h1 <= h2);\nloop invariant (n >= 0);\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 17: unexpected token ')'",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nvoid main() {\n\tint n = unknown();\n  int f1 = 0;   \n  int f2 = 1;  \n  int g1 = 1, g2 = 1;\n  int h1 = 0, h2 = 0;\n\n  /*@\n\n\n\nloop invariant i4: (f1 <= f2);\nloop invariant i5: (g1 <= g2);\nloop invariant i6: (h1 <= h2);\n\n*/\nwhile((n > 0)) {\n    h1 = f1 + g1;\n    f1 = g1;\n    g1 = h1;\n    n --;\n\n    h2 = f2 + g2;\n    f2 = g2;\n    g2 = h2;\n\n\t{;\n//@ assert(h2==h1+f1);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= g1 <= g2 <= f2 <= f1 <= n <= 100000;\nloop invariant h2 == h1 + f1;\nloop invariant g1 + f1 == f2 + g2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= g1 <= g2 <= f2 <= f1 <= n <= 100000 is preserved but not established.\nloop invariant h2 == h1 + f1 is partially proven to be inductive.\nloop invariant g1 + f1 == f2 + g2 is partially proven to be inductive.\nloop invariant h1 == f1 + g1 is partially proven to be inductive.\nloop invariant h2 == f2 + g2 is partially proven to be inductive.\nAssertion h2 == h1 + f1: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nvoid main() {\n\tint n = unknown();\n  int f1 = 0;   \n  int f2 = 1;  \n  int g1 = 1, g2 = 1;\n  int h1 = 0, h2 = 0;\n\n  /*@\n\nloop invariant i2: h2 == h1 + f1;\n\n\n\n*/\nwhile((n > 0)) {\n    h1 = f1 + g1;\n    f1 = g1;\n    g1 = h1;\n    n --;\n\n    h2 = f2 + g2;\n    f2 = g2;\n    g2 = h2;\n\n\t{;\n//@ assert(h2==h1+f1);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 23,
                "annotations": "```\n/*@\nloop invariant 1 <= n <= 2147483647;\nloop invariant f1 >= 0;\nloop invariant f2 >= 0;\nloop invariant g1 >= 0;\nloop invariant g2 >= 0;\nloop invariant h1 >= f1;\nloop invariant h2 >= f2;\nloop invariant h1 >= g1;\nloop invariant h2 >= g2;\nloop invariant h1 >= f1 + g1;\nloop invariant h2 >= f2 + g2;\nloop invariant h1 <= f1 + g1;\nloop invariant h2 <= f2 + g2;\nloop invariant h1 <= f1 + g1 + 1;\nloop invariant h2 <= f2 + g2 + 1;\nloop invariant h1 >= f1 + g1 - 1;\nloop invariant h2 >= f2 + g2 - 1;\nloop invariant h1 <= f1 + g1 + 2;\nloop invariant h2 <= f2 + g2 + 2;\nloop invariant h1 >= f1 + g1 - 2;\nloop invariant h2 >= f2 + g2 - 2;\nloop invariant h1 <= f1 + g1 + 3;\nloop invariant h2 <= f2 + g2 + 3;\nloop invariant h1 >= f1 + g1 - 3;\nloop invariant h2 >= f2 + g2 - 3;\nloop invariant h1 <= f1 + g1 + 4;\nloop invariant h2 <= f2 + g2 + 4;\nloop invariant h1 >= f1 + g1 - 4;\nloop invariant h2 >= f2 + g2 - 4;\nloop invariant h1 <= f1 + g1 + 5;\nloop invariant h2 <= f2 + g2 + 5;\nloop invariant h1 >= f1 + g1 - 5;\nloop invariant h2 >= f2 + g2 - 5;\nloop invariant h1 <= f1 + g1 + 6;\nloop invariant h2 <= f2 + g2 + 6;\nloop invariant h1 >= f1 + g1 - 6;\nloop invariant h2 >= f2 + g2 - 6;\nloop invariant h1 <= f1 + g1 + 7;\nloop invariant h2 <= f2 + g2 + 7;\nloop invariant h1 >= f1 + g1 - 7;\nloop invariant h2 >= f2 + g2 - 7;\nloop invariant h1 <= f1 + g1 + 8;\nloop invariant h2 <= f2 + g2 + 8;\nloop invariant h1 >= f1 + g1 - 8;\nloop invariant h2 >= f2 + g2 - 8;\nloop invariant h1 <= f1 + g1 + 9;\nloop invariant h2 <= f2 + g2 + 9;\nloop invariant h1 >= f1 + g1 - 9;\nloop invariant h2 >= f2 + g2 - 9;\nloop invariant h1 <= f1 + g1 + 10;\nloop invariant h2 <= f2 + g2 + 10;\nloop invariant h1 >= f1 + g1 - 10;\nloop invariant h2 >= f2 + g2 - 10;\nloop invariant h1 <= f1 + g1 + 11;\nloop invariant h2 <= f2 + g2 + 11;\nloop invariant h1 >= f1 + g1 - 11;\nloop invariant h2 >= f2 + g2 - 11;\nloop invariant h1 <= f1 + g1 + 12;\nloop invariant h2 <= f2 + g2 + 12;\nloop invariant h1 >= f1 + g1 - 12;\nloop invariant h2 >= f2 + g2 - 12;\nloop invariant h1 <= f1 + g1 + 13;\nloop invariant h2 <= f2 + g2 + 13;\nloop invariant h1 >= f1 + g1 - 13;\nloop invariant h2 >= f2 + g2 - 13;\nloop invariant h1 <= f1 + g1 + 14;\nloop invariant h2 <= f2 + g2 + 14;\nloop invariant h1 >= f1 + g1 - 14;\nloop invariant h2 >= f2 + g2 - 14;\nloop invariant h1 <= f1 + g1 + 15;\nloop invariant h2 <= f2 + g2 + 15;\nloop invariant h1 >= f1 + g1 - 15;\nloop invariant h2 >= f2 + g2 - 15;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 1 <= n <= 2147483647 is preserved but not established.\nloop invariant f1 >= 0 is partially proven to be inductive.\nloop invariant f2 >= 0 is partially proven to be inductive.\nloop invariant g1 >= 0 is partially proven to be inductive.\nloop invariant g2 >= 0 is partially proven to be inductive.\nloop invariant h1 >= f1 is partially proven to be inductive.\nloop invariant h2 >= f2 is preserved but not established.\nloop invariant h1 >= g1 is partially proven to be inductive.\nloop invariant h2 >= g2 is partially proven to be inductive.\nloop invariant h1 >= f1 + g1 is partially proven to be inductive.\nloop invariant h2 >= f2 + g2 is partially proven to be inductive.\nloop invariant h1 <= f1 + g1 is partially proven to be inductive.\nloop invariant h2 <= f2 + g2 is partially proven to be inductive.\nloop invariant h1 <= f1 + g1 + 1 is partially proven to be inductive.\nloop invariant h2 <= f2 + g2 + 1 is partially proven to be inductive.\nloop invariant h1 >= f1 + g1 - 1 is partially proven to be inductive.\nloop invariant h2 >= f2 + g2 - 1 is partially proven to be inductive.\nloop invariant h1 <= f1 + g1 + 2 is partially proven to be inductive.\nloop invariant h2 <= f2 + g2 + 2 is partially proven to be inductive.\nloop invariant h1 >= f1 + g1 - 2 is partially proven to be inductive.\nloop invariant h2 >= f2 + g2 - 2 is partially proven to be inductive.\nloop invariant h1 <= f1 + g1 + 3 is partially proven to be inductive.\nloop invariant h2 <= f2 + g2 + 3 is partially proven to be inductive.\nloop invariant h1 >= f1 + g1 - 3 is partially proven to be inductive.\nloop invariant h2 >= f2 + g2 - 3 is partially proven to be inductive.\nloop invariant h1 <= f1 + g1 + 4 is partially proven to be inductive.\nloop invariant h2 <= f2 + g2 + 4 is partially proven to be inductive.\nloop invariant h1 >= f1 + g1 - 4 is partially proven to be inductive.\nloop invariant h2 >= f2 + g2 - 4 is partially proven to be inductive.\nloop invariant h1 <= f1 + g1 + 5 is partially proven to be inductive.\nloop invariant h2 <= f2 + g2 + 5 is partially proven to be inductive.\nloop invariant h1 >= f1 + g1 - 5 is partially proven to be inductive.\nloop invariant h2 >= f2 + g2 - 5 is partially proven to be inductive.\nloop invariant h1 <= f1 + g1 + 6 is partially proven to be inductive.\nloop invariant h2 <= f2 + g2 + 6 is partially proven to be inductive.\nloop invariant h1 >= f1 + g1 - 6 is partially proven to be inductive.\nloop invariant h2 >= f2 + g2 - 6 is partially proven to be inductive.\nloop invariant h1 <= f1 + g1 + 7 is partially proven to be inductive.\nloop invariant h2 <= f2 + g2 + 7 is partially proven to be inductive.\nloop invariant h1 >= f1 + g1 - 7 is partially proven to be inductive.\nloop invariant h2 >= f2 + g2 - 7 is partially proven to be inductive.\nloop invariant h1 <= f1 + g1 + 8 is partially proven to be inductive.\nloop invariant h2 <= f2 + g2 + 8 is partially proven to be inductive.\nloop invariant h1 >= f1 + g1 - 8 is partially proven to be inductive.\nloop invariant h2 >= f2 + g2 - 8 is partially proven to be inductive.\nloop invariant h1 <= f1 + g1 + 9 is partially proven to be inductive.\nloop invariant h2 <= f2 + g2 + 9 is partially proven to be inductive.\nloop invariant h1 >= f1 + g1 - 9 is partially proven to be inductive.\nloop invariant h2 >= f2 + g2 - 9 is partially proven to be inductive.\nloop invariant h1 <= f1 + g1 + 10 is partially proven to be inductive.\nloop invariant h2 <= f2 + g2 + 10 is partially proven to be inductive.\nloop invariant h1 >= f1 + g1 - 10 is partially proven to be inductive.\nloop invariant h2 >= f2 + g2 - 10 is partially proven to be inductive.\nloop invariant h1 <= f1 + g1 + 11 is partially proven to be inductive.\nloop invariant h2 <= f2 + g2 + 11 is partially proven to be inductive.\nloop invariant h1 >= f1 + g1 - 11 is partially proven to be inductive.\nloop invariant h2 >= f2 + g2 - 11 is partially proven to be inductive.\nloop invariant h1 <= f1 + g1 + 12 is partially proven to be inductive.\nloop invariant h2 <= f2 + g2 + 12 is partially proven to be inductive.\nloop invariant h1 >= f1 + g1 - 12 is partially proven to be inductive.\nloop invariant h2 >= f2 + g2 - 12 is partially proven to be inductive.\nloop invariant h1 <= f1 + g1 + 13 is partially proven to be inductive.\nloop invariant h2 <= f2 + g2 + 13 is partially proven to be inductive.\nloop invariant h1 >= f1 + g1 - 13 is partially proven to be inductive.\nloop invariant h2 >= f2 + g2 - 13 is partially proven to be inductive.\nloop invariant h1 <= f1 + g1 + 14 is partially proven to be inductive.\nloop invariant h2 <= f2 + g2 + 14 is partially proven to be inductive.\nloop invariant h1 >= f1 + g1 - 14 is partially proven to be inductive.\nloop invariant h2 >= f2 + g2 - 14 is partially proven to be inductive.\nloop invariant h1 <= f1 + g1 + 15 is partially proven to be inductive.\nloop invariant h2 <= f2 + g2 + 15 is partially proven to be inductive.\nloop invariant h1 >= f1 + g1 - 15 is partially proven to be inductive.\nloop invariant h2 >= f2 + g2 - 15 is partially proven to be inductive.\nAssertion h2 == h1 + f1: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nvoid main() {\n\tint n = unknown();\n  int f1 = 0;   \n  int f2 = 1;  \n  int g1 = 1, g2 = 1;\n  int h1 = 0, h2 = 0;\n\n  /*@\n\nloop invariant i2: f1 >= 0;\nloop invariant i3: f2 >= 0;\nloop invariant i4: g1 >= 0;\nloop invariant i5: g2 >= 0;\nloop invariant i6: h1 >= f1;\n\n\n\n\n\nloop invariant i12: h1 <= f1 + g1;\nloop invariant i13: h2 <= f2 + g2;\nloop invariant i14: h1 <= f1 + g1 + 1;\nloop invariant i15: h2 <= f2 + g2 + 1;\n\n\nloop invariant i18: h1 <= f1 + g1 + 2;\nloop invariant i19: h2 <= f2 + g2 + 2;\n\n\nloop invariant i22: h1 <= f1 + g1 + 3;\nloop invariant i23: h2 <= f2 + g2 + 3;\n\n\nloop invariant i26: h1 <= f1 + g1 + 4;\nloop invariant i27: h2 <= f2 + g2 + 4;\n\n\nloop invariant i30: h1 <= f1 + g1 + 5;\nloop invariant i31: h2 <= f2 + g2 + 5;\n\n\nloop invariant i34: h1 <= f1 + g1 + 6;\nloop invariant i35: h2 <= f2 + g2 + 6;\n\n\nloop invariant i38: h1 <= f1 + g1 + 7;\nloop invariant i39: h2 <= f2 + g2 + 7;\n\n\nloop invariant i42: h1 <= f1 + g1 + 8;\nloop invariant i43: h2 <= f2 + g2 + 8;\n\n\nloop invariant i46: h1 <= f1 + g1 + 9;\nloop invariant i47: h2 <= f2 + g2 + 9;\n\n\nloop invariant i50: h1 <= f1 + g1 + 10;\nloop invariant i51: h2 <= f2 + g2 + 10;\n\n\nloop invariant i54: h1 <= f1 + g1 + 11;\nloop invariant i55: h2 <= f2 + g2 + 11;\n\n\nloop invariant i58: h1 <= f1 + g1 + 12;\nloop invariant i59: h2 <= f2 + g2 + 12;\n\n\nloop invariant i62: h1 <= f1 + g1 + 13;\nloop invariant i63: h2 <= f2 + g2 + 13;\n\n\nloop invariant i66: h1 <= f1 + g1 + 14;\nloop invariant i67: h2 <= f2 + g2 + 14;\n\n\nloop invariant i70: h1 <= f1 + g1 + 15;\nloop invariant i71: h2 <= f2 + g2 + 15;\n\n\n*/\nwhile((n > 0)) {\n    h1 = f1 + g1;\n    f1 = g1;\n    g1 = h1;\n    n --;\n\n    h2 = f2 + g2;\n    f2 = g2;\n    g2 = h2;\n\n\t{;\n//@ assert(h2==h1+f1);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 23,
                "annotations": "```\n/*@\nloop invariant 0 <= f1 <= 1;\nloop invariant 0 <= f2 <= 1;\nloop invariant 0 <= g1 <= 2;\nloop invariant 0 <= g2 <= 2;\nloop invariant 0 <= h1 <= 3;\nloop invariant 0 <= h2 <= 3;\nloop invariant f1 + g1 <= h1;\nloop invariant f2 + g2 <= h2;\nloop invariant f1 + g1 >= h1 - 1;\nloop invariant f2 + g2 >= h2 - 1;\nloop invariant f1 + g1 <= h1 + 1;\nloop invariant f2 + g2 <= h2 + 1;\nloop invariant f1 + g1 >= h1 - 2;\nloop invariant f2 + g2 >= h2 - 2;\nloop invariant f1 + g1 <= h1 + 2;\nloop invariant f2 + g2 <= h2 + 2;\nloop invariant f1 + g1 >= h1 - 3;\nloop invariant f2 + g2 >= h2 - 3;\nloop invariant f1 + g1 <= h1 + 3;\nloop invariant f2 + g2 <= h2 + 3;\nloop invariant f1 + g1 >= h1 - 4;\nloop invariant f2 + g2 >= h2 - 4;\nloop invariant f1 + g1 <= h1 + 4;\nloop invariant f2 + g2 <= h2 + 4;\nloop invariant f1 + g1 >= h1 - 5;\nloop invariant f2 + g2 >= h2 - 5;\nloop invariant f1 + g1 <= h1 + 5;\nloop invariant f2 + g2 <= h2 + 5;\nloop invariant f1 + g1 >= h1 - 6;\nloop invariant f2 + g2 >= h2 - 6;\nloop invariant f1 + g1 <= h1 + 6;\nloop invariant f2 + g2 <= h2 + 6;\nloop invariant f1 + g1 >= h1 - 7;\nloop invariant f2 + g2 >= h2 - 7;\nloop invariant f1 + g1 <= h1 + 7;\nloop invariant f2 + g2 <= h2 + 7;\nloop invariant f1 + g1 >= h1 - 8;\nloop invariant f2 + g2 >= h2 - 8;\nloop invariant f1 + g1 <= h1 + 8;\nloop invariant f2 + g2 <= h2 + 8;\nloop invariant f1 + g1 >= h1 - 9;\nloop invariant f2 + g2 >= h2 - 9;\nloop invariant f1 + g1 <= h1 + 9;\nloop invariant f2 + g2 <= h2 + 9;\nloop invariant f1 + g1 >= h1 - 10;\nloop invariant f2 + g2 >= h2 - 10;\nloop invariant f1 + g1 <= h1 + 10;\nloop invariant f2 + g2 <= h2 + 10;\nloop invariant f1 + g1 >= h1 - 11;\nloop invariant f2 + g2 >= h2 - 11;\nloop invariant f1 + g1 <= h1 + 11;\nloop invariant f2 + g2 <= h2 + 11;\nloop invariant f1 + g1 >= h1 - 12;\nloop invariant f2 + g2 >= h2 - 12;\nloop invariant f1 + g1 <= h1 + 12;\nloop invariant f2 + g2 <= h2 + 12;\nloop invariant f1 + g1 >= h1 - 13;\nloop invariant f2 + g2 >= h2 - 13;\nloop invariant f1 + g1 <= h1 + 13;\nloop invariant f2 + g2 <= h2 + 13;\nloop invariant f1 + g1 >= h1 - 14;\nloop invariant f2 + g2 >= h2 - 14;\nloop invariant f1 + g1 <= h1 + 14;\nloop invariant f2 + g2 <= h2 + 14;\nloop invariant f1 + g1 >= h1 - 15;\nloop invariant f2 + g2 >= h2 - 15;\nloop invariant f1 + g1 <= h1 + 15;\nloop invariant f2 + g2 <= h2 + 15;\nloop invariant f1 + g1 >= h1 - 16;\nloop invariant f2 + g2 >= h2 - 16;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= f1 <= 1 is partially proven to be inductive.\nloop invariant 0 <= f2 <= 1 is partially proven to be inductive.\nloop invariant 0 <= g1 <= 2 is partially proven to be inductive.\nloop invariant 0 <= g2 <= 2 is partially proven to be inductive.\nloop invariant 0 <= h1 <= 3 is partially proven to be inductive.\nloop invariant 0 <= h2 <= 3 is partially proven to be inductive.\nloop invariant f1 + g1 <= h1 is preserved but not established.\nloop invariant f2 + g2 <= h2 is partially proven to be inductive.\nloop invariant f1 + g1 >= h1 - 1 is partially proven to be inductive.\nloop invariant f2 + g2 >= h2 - 1 is partially proven to be inductive.\nloop invariant f1 + g1 <= h1 + 1 is partially proven to be inductive.\nloop invariant f2 + g2 <= h2 + 1 is partially proven to be inductive.\nloop invariant f1 + g1 >= h1 - 2 is partially proven to be inductive.\nloop invariant f2 + g2 >= h2 - 2 is partially proven to be inductive.\nloop invariant f1 + g1 <= h1 + 2 is partially proven to be inductive.\nloop invariant f2 + g2 <= h2 + 2 is partially proven to be inductive.\nloop invariant f1 + g1 >= h1 - 3 is partially proven to be inductive.\nloop invariant f2 + g2 >= h2 - 3 is partially proven to be inductive.\nloop invariant f1 + g1 <= h1 + 3 is partially proven to be inductive.\nloop invariant f2 + g2 <= h2 + 3 is partially proven to be inductive.\nloop invariant f1 + g1 >= h1 - 4 is partially proven to be inductive.\nloop invariant f2 + g2 >= h2 - 4 is partially proven to be inductive.\nloop invariant f1 + g1 <= h1 + 4 is partially proven to be inductive.\nloop invariant f2 + g2 <= h2 + 4 is partially proven to be inductive.\nloop invariant f1 + g1 >= h1 - 5 is partially proven to be inductive.\nloop invariant f2 + g2 >= h2 - 5 is partially proven to be inductive.\nloop invariant f1 + g1 <= h1 + 5 is partially proven to be inductive.\nloop invariant f2 + g2 <= h2 + 5 is partially proven to be inductive.\nloop invariant f1 + g1 >= h1 - 6 is partially proven to be inductive.\nloop invariant f2 + g2 >= h2 - 6 is partially proven to be inductive.\nloop invariant f1 + g1 <= h1 + 6 is partially proven to be inductive.\nloop invariant f2 + g2 <= h2 + 6 is partially proven to be inductive.\nloop invariant f1 + g1 >= h1 - 7 is partially proven to be inductive.\nloop invariant f2 + g2 >= h2 - 7 is partially proven to be inductive.\nloop invariant f1 + g1 <= h1 + 7 is partially proven to be inductive.\nloop invariant f2 + g2 <= h2 + 7 is partially proven to be inductive.\nloop invariant f1 + g1 >= h1 - 8 is partially proven to be inductive.\nloop invariant f2 + g2 >= h2 - 8 is partially proven to be inductive.\nloop invariant f1 + g1 <= h1 + 8 is partially proven to be inductive.\nloop invariant f2 + g2 <= h2 + 8 is partially proven to be inductive.\nloop invariant f1 + g1 >= h1 - 9 is partially proven to be inductive.\nloop invariant f2 + g2 >= h2 - 9 is partially proven to be inductive.\nloop invariant f1 + g1 <= h1 + 9 is partially proven to be inductive.\nloop invariant f2 + g2 <= h2 + 9 is partially proven to be inductive.\nloop invariant f1 + g1 >= h1 - 10 is partially proven to be inductive.\nloop invariant f2 + g2 >= h2 - 10 is partially proven to be inductive.\nloop invariant f1 + g1 <= h1 + 10 is partially proven to be inductive.\nloop invariant f2 + g2 <= h2 + 10 is partially proven to be inductive.\nloop invariant f1 + g1 >= h1 - 11 is partially proven to be inductive.\nloop invariant f2 + g2 >= h2 - 11 is partially proven to be inductive.\nloop invariant f1 + g1 <= h1 + 11 is partially proven to be inductive.\nloop invariant f2 + g2 <= h2 + 11 is partially proven to be inductive.\nloop invariant f1 + g1 >= h1 - 12 is partially proven to be inductive.\nloop invariant f2 + g2 >= h2 - 12 is partially proven to be inductive.\nloop invariant f1 + g1 <= h1 + 12 is partially proven to be inductive.\nloop invariant f2 + g2 <= h2 + 12 is partially proven to be inductive.\nloop invariant f1 + g1 >= h1 - 13 is partially proven to be inductive.\nloop invariant f2 + g2 >= h2 - 13 is partially proven to be inductive.\nloop invariant f1 + g1 <= h1 + 13 is partially proven to be inductive.\nloop invariant f2 + g2 <= h2 + 13 is partially proven to be inductive.\nloop invariant f1 + g1 >= h1 - 14 is partially proven to be inductive.\nloop invariant f2 + g2 >= h2 - 14 is partially proven to be inductive.\nloop invariant f1 + g1 <= h1 + 14 is partially proven to be inductive.\nloop invariant f2 + g2 <= h2 + 14 is partially proven to be inductive.\nloop invariant f1 + g1 >= h1 - 15 is partially proven to be inductive.\nloop invariant f2 + g2 >= h2 - 15 is partially proven to be inductive.\nloop invariant f1 + g1 <= h1 + 15 is partially proven to be inductive.\nloop invariant f2 + g2 <= h2 + 15 is partially proven to be inductive.\nloop invariant f1 + g1 >= h1 - 16 is partially proven to be inductive.\nloop invariant f2 + g2 >= h2 - 16 is partially proven to be inductive.\nAssertion h2 == h1 + f1: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nvoid main() {\n\tint n = unknown();\n  int f1 = 0;   \n  int f2 = 1;  \n  int g1 = 1, g2 = 1;\n  int h1 = 0, h2 = 0;\n\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile((n > 0)) {\n    h1 = f1 + g1;\n    f1 = g1;\n    g1 = h1;\n    n --;\n\n    h2 = f2 + g2;\n    f2 = g2;\n    g2 = h2;\n\n\t{;\n//@ assert(h2==h1+f1);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= f1 <= f2;\nloop invariant f1 + f2 == g1 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\nloop invariant h1 == f1 + g1;\nloop invariant h2 == f2 + g2;\nloop invariant h1 <= h2;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= f1 <= f2 is partially proven to be inductive.\nloop invariant f1 + f2 == g1 + g2 is preserved but not established.\nloop invariant h1 <= h2 is partially proven to be inductive.\nloop invariant h1 == f1 + g1 is partially proven to be inductive.\nloop invariant h2 == f2 + g2 is partially proven to be inductive.\nAssertion h2 == h1 + f1: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nvoid main() {\n\tint n = unknown();\n  int f1 = 0;   \n  int f2 = 1;  \n  int g1 = 1, g2 = 1;\n  int h1 = 0, h2 = 0;\n\n  /*@\n\n\n\n\n\n*/\nwhile((n > 0)) {\n    h1 = f1 + g1;\n    f1 = g1;\n    g1 = h1;\n    n --;\n\n    h2 = f2 + g2;\n    f2 = g2;\n    g2 = h2;\n\n\t{;\n//@ assert(h2==h1+f1);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= n <= 100000;\nloop invariant f1 >= f2;\nloop invariant g1 >= g2;\nloop invariant h1 >= h2;\nloop invariant (f1 == g1 - 1) ==> (h1 == f1 + g1);\nloop invariant (f1 == g1 - 1) ==> (h2 == f2 + g2);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1);\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= n <= 100000 is preserved but not established.\nloop invariant f1 >= f2 is preserved but not established.\nloop invariant g1 >= g2 is partially proven to be inductive.\nloop invariant h1 >= h2 is partially proven to be inductive.\nloop invariant (f1 == g1 - 1) ==> (h1 == f1 + g1) is partially proven to be inductive.\nloop invariant (f1 == g1 - 1) ==> (h2 == f2 + g2) is partially proven to be inductive.\nloop invariant (f1 == g1 - 1) ==> (f1 == g1 - 1) is partially proven to be inductive.\nloop invariant (f1 == g1 - 1) ==> (f2 == g2 - 1) is partially proven to be inductive.\nAssertion h2 == h1 + f1: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nvoid main() {\n\tint n = unknown();\n  int f1 = 0;   \n  int f2 = 1;  \n  int g1 = 1, g2 = 1;\n  int h1 = 0, h2 = 0;\n\n  /*@\n\n\n\n\n\n\nloop invariant i7: (f1 == g1 - 1) ==> (f1 == g1 - 1);\n\n*/\nwhile((n > 0)) {\n    h1 = f1 + g1;\n    f1 = g1;\n    g1 = h1;\n    n --;\n\n    h2 = f2 + g2;\n    f2 = g2;\n    g2 = h2;\n\n\t{;\n//@ assert(h2==h1+f1);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 10,
                "annotations": "```\n/*@\nloop invariant 0 <= n <= 100;\nloop invariant 0 <= f1 <= 10;\nloop invariant 0 <= f2 <= 10;\nloop invariant 0 <= g1 <= 10;\nloop invariant 0 <= g2 <= 10;\nloop invariant 0 <= h1 <= 10;\nloop invariant 0 <= h2 <= 10;\nloop invariant h1 == h2 + f1;\nloop invariant h2 == h2 + f2;\nloop invariant h1 + h2 == f1 + g1;\nloop invariant h2 + h2 == f2 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\nloop invariant h1 + h2 == f1 + f2;\nloop invariant h1 + h2 == g1 + f2;\nloop invariant h1 + h2 == f1 + g2;\nloop invariant h1 + h2 == g1 + g2;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= n <= 100 is preserved but not established.\nloop invariant 0 <= f1 <= 10 is partially proven to be inductive.\nloop invariant 0 <= f2 <= 10 is partially proven to be inductive.\nloop invariant 0 <= g1 <= 10 is partially proven to be inductive.\nloop invariant 0 <= g2 <= 10 is partially proven to be inductive.\nloop invariant 0 <= h1 <= 10 is partially proven to be inductive.\nloop invariant 0 <= h2 <= 10 is partially proven to be inductive.\nloop invariant h1 == h2 + f1 is partially proven to be inductive.\nloop invariant h2 == h2 + f2 is preserved but not established.\nloop invariant h1 + h2 == f1 + g1 is partially proven to be inductive.\nloop invariant h2 + h2 == f2 + g2 is partially proven to be inductive.\nloop invariant h1 + h2 == g1 + g2 is partially proven to be inductive.\nloop invariant h1 + h2 == f1 + f2 is partially proven to be inductive.\nloop invariant h1 + h2 == g1 + f2 is partially proven to be inductive.\nloop invariant h1 + h2 == f1 + g2 is partially proven to be inductive.\nAssertion h2 == h1 + f1: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nvoid main() {\n\tint n = unknown();\n  int f1 = 0;   \n  int f2 = 1;  \n  int g1 = 1, g2 = 1;\n  int h1 = 0, h2 = 0;\n\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile((n > 0)) {\n    h1 = f1 + g1;\n    f1 = g1;\n    g1 = h1;\n    n --;\n\n    h2 = f2 + g2;\n    f2 = g2;\n    g2 = h2;\n\n\t{;\n//@ assert(h2==h1+f1);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= n;\nloop invariant 0 <= f1;\nloop invariant 0 <= f2;\nloop invariant 0 <= g1;\nloop invariant 0 <= g2;\nloop invariant 0 <= h1;\nloop invariant 0 <= h2;\nloop invariant f1 <= g1;\nloop invariant f2 <= g2;\nloop invariant h1 <= h2;\nloop invariant 0 <= h1 + f1;\nloop invariant 0 <= h2 + f2;\nloop invariant 0 <= h1 + f1 + h2 + f2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= n is preserved but not established.\nloop invariant 0 <= f1 is partially proven to be inductive.\nloop invariant 0 <= f2 is partially proven to be inductive.\nloop invariant 0 <= g1 is partially proven to be inductive.\nloop invariant 0 <= g2 is partially proven to be inductive.\nloop invariant 0 <= h1 is partially proven to be inductive.\nloop invariant 0 <= h2 is partially proven to be inductive.\nloop invariant f1 <= g1 is partially proven to be inductive.\nloop invariant f2 <= g2 is partially proven to be inductive.\nloop invariant h1 <= h2 is partially proven to be inductive.\nloop invariant 0 <= h1 + f1 is partially proven to be inductive.\nloop invariant 0 <= h2 + f2 is partially proven to be inductive.\nloop invariant 0 <= h1 + f1 + h2 + f2 is partially proven to be inductive.\nloop invariant h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2 is partially proven to be inductive.\nAssertion h2 == h1 + f1: Unproven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nvoid main() {\n\tint n = unknown();\n  int f1 = 0;   \n  int f2 = 1;  \n  int g1 = 1, g2 = 1;\n  int h1 = 0, h2 = 0;\n\n  /*@\n\nloop invariant i2: 0 <= f1;\nloop invariant i3: 0 <= f2;\nloop invariant i4: 0 <= g1;\nloop invariant i5: 0 <= g2;\nloop invariant i6: 0 <= h1;\nloop invariant i7: 0 <= h2;\nloop invariant i8: f1 <= g1;\nloop invariant i9: f2 <= g2;\nloop invariant i10: h1 <= h2;\nloop invariant i11: 0 <= h1 + f1;\nloop invariant i12: 0 <= h2 + f2;\nloop invariant i13: 0 <= h1 + f1 + h2 + f2;\nloop invariant i14: h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\n*/\nwhile((n > 0)) {\n    h1 = f1 + g1;\n    f1 = g1;\n    g1 = h1;\n    n --;\n\n    h2 = f2 + g2;\n    f2 = g2;\n    g2 = h2;\n\n\t{;\n//@ assert(h2==h1+f1);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 25: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nvoid main() {\n\tint n = unknown();\n  int f1 = 0;   \n  int f2 = 1;  \n  int g1 = 1, g2 = 1;\n  int h1 = 0, h2 = 0;\n\n  /*@\nloop invariant i1: 0 <= n <= 100000; loop invariant 0 <= f1 <= 100000; loop invariant 0 <= f2 <= 100000; loop invariant 0 <= g1 <= 100000; loop invariant 0 <= g2 <= 100000; loop invariant 0 <= h1 <= 100000; loop invariant 0 <= h2 <= 100000; loop invariant h1 == f1 + g1; loop invariant h2 == f2 + g2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2; loop invariant f1 == g1 - h1; loop invariant f2 == g2 - h2;\nloop invariant i2: 0 <= n;\nloop invariant i3: f2 == 1;\nloop invariant i4: g2 == 1;\nloop invariant i5: h1 == f1 + g1;\nloop invariant i6: h2 == f2 + g2;\nloop invariant i7: f1 == g1 - h1;\nloop invariant i8: f2 == g2 - h2;\nloop invariant i9: 0 <= n <= unknown();\nloop invariant i10: f1 == g2;\nloop invariant i11: f2 == g1;\nloop invariant i12: f1 == h1 - g1;\nloop invariant i13: f2 == h2 - g2;\nloop invariant i14: g1 == 1;\nloop invariant i15: f1 <= f2 <= g2;\nloop invariant i16: h1 <= h2 <= g1+f1;\nloop invariant i17: h2 = h1+f1 ==> h1 <= h2 <= g1+f1;\nloop invariant i18: 0 <= f1 <= f2;\nloop invariant i19: h1 <= h2;\nloop invariant i20: f1 <= f2;\nloop invariant i21: g1 == f1 + g1;\nloop invariant i22: g2 == f2 + g2;\nloop invariant i23: (n > 0) ==> (h2 == h1 + f1);\nloop invariant i24: (n > 0) ==> (h2 >= h1 + f1);\nloop invariant i25: (n > 0) ==> (h2 <= h1 + f1);\nloop invariant i26: (n > 0) ==> (h1 <= h2);\nloop invariant i27: (n > 0) ==> (f1 <= f2);\nloop invariant i28: (n > 0) ==> (g1 == f1 + g1);\nloop invariant i29: (n > 0) ==> (g2 == f2 + g2);\nloop invariant i30: (n > 0) ==> (h1 == f1 + g1);\nloop invariant i31: (n > 0) ==> (h2 == f2 + g2);\nloop invariant i32: 0 <= n <= 100000;\nloop invariant i33: f1 >= 0;\nloop invariant i34: f2 >= 0;\nloop invariant i35: g1 >= 0;\nloop invariant i36: g2 >= 0;\nloop invariant i37: h1 >= 0;\nloop invariant i38: h2 >= 0;\nloop invariant i39: h1 = f1 + g1;\nloop invariant i40: h2 = f2 + g2;\nloop invariant i41: g1 <= g2;\nloop invariant i42: f1 + g1 <= f2 + g2;\nloop invariant i43: f1 + g1 <= h2;\nloop invariant i44: f2 + g2 <= h2;\nloop invariant i45: f1 + g1 <= f1 + g1;\nloop invariant i46: f2 + g2 <= f2 + g2;\nloop invariant i47: f1 + g1 <= 100000;\nloop invariant i48: f2 + g2 <= 100000;\nloop invariant i49: h1 <= 100000;\nloop invariant i50: h2 <= 100000;\nloop invariant i51: f1 <= h1;\nloop invariant i52: f2 <= h2;\nloop invariant i53: g1 <= h1;\nloop invariant i54: g2 <= h2;\nloop invariant i55: f1 <= 100000;\nloop invariant i56: f2 <= 100000;\nloop invariant i57: g1 <= 100000;\nloop invariant i58: g2 <= 100000;\nloop invariant i59: f1 <= f1;\nloop invariant i60: f2 <= f2;\nloop invariant i61: g1 <= g1;\nloop invariant i62: g2 <= g2;\nloop invariant i63: h1 <= h1;\nloop invariant i64: h2 <= h2;\nloop invariant i65: 0 <= n <= 32767;\nloop invariant i66: f2 >= f1 >= 0;\nloop invariant i67: g2 >= g1 >= 0;\nloop invariant i68: h2 >= h1 >= 0;\nloop invariant i69: h1 == h2 + f1;\nloop invariant i70: h2 == h1 + f1;\nloop invariant i71: f2 == g2 + f1;\nloop invariant i72: g2 == h2 + g1;\nloop invariant i73: f1 <= g1;\nloop invariant i74: f1 <= h2;\nloop invariant i75: g1 <= h2;\nloop invariant i76: (f1 + g1 == h1);\nloop invariant i77: (f2 + g2 == h2);\nloop invariant i78: (f1 <= f2);\nloop invariant i79: (g1 <= g2);\nloop invariant i80: (h1 <= h2);\nloop invariant i81: (n >= 0);\nloop invariant i82: 0 <= g1 <= g2 <= f2 <= f1 <= n <= 100000;\nloop invariant i83: g1 + f1 == f2 + g2;\nloop invariant i84: 1 <= n <= 2147483647;\nloop invariant i85: h1 >= f1;\nloop invariant i86: h2 >= f2;\nloop invariant i87: h1 >= g1;\nloop invariant i88: h2 >= g2;\nloop invariant i89: h1 >= f1 + g1;\nloop invariant i90: h2 >= f2 + g2;\nloop invariant i91: h1 <= f1 + g1;\nloop invariant i92: h2 <= f2 + g2;\nloop invariant i93: h1 <= f1 + g1 + 1;\nloop invariant i94: h2 <= f2 + g2 + 1;\nloop invariant i95: h1 >= f1 + g1 - 1;\nloop invariant i96: h2 >= f2 + g2 - 1;\nloop invariant i97: h1 <= f1 + g1 + 2;\nloop invariant i98: h2 <= f2 + g2 + 2;\nloop invariant i99: h1 >= f1 + g1 - 2;\nloop invariant i100: h2 >= f2 + g2 - 2;\nloop invariant i101: h1 <= f1 + g1 + 3;\nloop invariant i102: h2 <= f2 + g2 + 3;\nloop invariant i103: h1 >= f1 + g1 - 3;\nloop invariant i104: h2 >= f2 + g2 - 3;\nloop invariant i105: h1 <= f1 + g1 + 4;\nloop invariant i106: h2 <= f2 + g2 + 4;\nloop invariant i107: h1 >= f1 + g1 - 4;\nloop invariant i108: h2 >= f2 + g2 - 4;\nloop invariant i109: h1 <= f1 + g1 + 5;\nloop invariant i110: h2 <= f2 + g2 + 5;\nloop invariant i111: h1 >= f1 + g1 - 5;\nloop invariant i112: h2 >= f2 + g2 - 5;\nloop invariant i113: h1 <= f1 + g1 + 6;\nloop invariant i114: h2 <= f2 + g2 + 6;\nloop invariant i115: h1 >= f1 + g1 - 6;\nloop invariant i116: h2 >= f2 + g2 - 6;\nloop invariant i117: h1 <= f1 + g1 + 7;\nloop invariant i118: h2 <= f2 + g2 + 7;\nloop invariant i119: h1 >= f1 + g1 - 7;\nloop invariant i120: h2 >= f2 + g2 - 7;\nloop invariant i121: h1 <= f1 + g1 + 8;\nloop invariant i122: h2 <= f2 + g2 + 8;\nloop invariant i123: h1 >= f1 + g1 - 8;\nloop invariant i124: h2 >= f2 + g2 - 8;\nloop invariant i125: h1 <= f1 + g1 + 9;\nloop invariant i126: h2 <= f2 + g2 + 9;\nloop invariant i127: h1 >= f1 + g1 - 9;\nloop invariant i128: h2 >= f2 + g2 - 9;\nloop invariant i129: h1 <= f1 + g1 + 10;\nloop invariant i130: h2 <= f2 + g2 + 10;\nloop invariant i131: h1 >= f1 + g1 - 10;\nloop invariant i132: h2 >= f2 + g2 - 10;\nloop invariant i133: h1 <= f1 + g1 + 11;\nloop invariant i134: h2 <= f2 + g2 + 11;\nloop invariant i135: h1 >= f1 + g1 - 11;\nloop invariant i136: h2 >= f2 + g2 - 11;\nloop invariant i137: h1 <= f1 + g1 + 12;\nloop invariant i138: h2 <= f2 + g2 + 12;\nloop invariant i139: h1 >= f1 + g1 - 12;\nloop invariant i140: h2 >= f2 + g2 - 12;\nloop invariant i141: h1 <= f1 + g1 + 13;\nloop invariant i142: h2 <= f2 + g2 + 13;\nloop invariant i143: h1 >= f1 + g1 - 13;\nloop invariant i144: h2 >= f2 + g2 - 13;\nloop invariant i145: h1 <= f1 + g1 + 14;\nloop invariant i146: h2 <= f2 + g2 + 14;\nloop invariant i147: h1 >= f1 + g1 - 14;\nloop invariant i148: h2 >= f2 + g2 - 14;\nloop invariant i149: h1 <= f1 + g1 + 15;\nloop invariant i150: h2 <= f2 + g2 + 15;\nloop invariant i151: h1 >= f1 + g1 - 15;\nloop invariant i152: h2 >= f2 + g2 - 15;\nloop invariant i153: 0 <= f1 <= 1;\nloop invariant i154: 0 <= f2 <= 1;\nloop invariant i155: 0 <= g1 <= 2;\nloop invariant i156: 0 <= g2 <= 2;\nloop invariant i157: 0 <= h1 <= 3;\nloop invariant i158: 0 <= h2 <= 3;\nloop invariant i159: f1 + g1 <= h1;\nloop invariant i160: f1 + g1 >= h1 - 1;\nloop invariant i161: f2 + g2 >= h2 - 1;\nloop invariant i162: f1 + g1 <= h1 + 1;\nloop invariant i163: f2 + g2 <= h2 + 1;\nloop invariant i164: f1 + g1 >= h1 - 2;\nloop invariant i165: f2 + g2 >= h2 - 2;\nloop invariant i166: f1 + g1 <= h1 + 2;\nloop invariant i167: f2 + g2 <= h2 + 2;\nloop invariant i168: f1 + g1 >= h1 - 3;\nloop invariant i169: f2 + g2 >= h2 - 3;\nloop invariant i170: f1 + g1 <= h1 + 3;\nloop invariant i171: f2 + g2 <= h2 + 3;\nloop invariant i172: f1 + g1 >= h1 - 4;\nloop invariant i173: f2 + g2 >= h2 - 4;\nloop invariant i174: f1 + g1 <= h1 + 4;\nloop invariant i175: f2 + g2 <= h2 + 4;\nloop invariant i176: f1 + g1 >= h1 - 5;\nloop invariant i177: f2 + g2 >= h2 - 5;\nloop invariant i178: f1 + g1 <= h1 + 5;\nloop invariant i179: f2 + g2 <= h2 + 5;\nloop invariant i180: f1 + g1 >= h1 - 6;\nloop invariant i181: f2 + g2 >= h2 - 6;\nloop invariant i182: f1 + g1 <= h1 + 6;\nloop invariant i183: f2 + g2 <= h2 + 6;\nloop invariant i184: f1 + g1 >= h1 - 7;\nloop invariant i185: f2 + g2 >= h2 - 7;\nloop invariant i186: f1 + g1 <= h1 + 7;\nloop invariant i187: f2 + g2 <= h2 + 7;\nloop invariant i188: f1 + g1 >= h1 - 8;\nloop invariant i189: f2 + g2 >= h2 - 8;\nloop invariant i190: f1 + g1 <= h1 + 8;\nloop invariant i191: f2 + g2 <= h2 + 8;\nloop invariant i192: f1 + g1 >= h1 - 9;\nloop invariant i193: f2 + g2 >= h2 - 9;\nloop invariant i194: f1 + g1 <= h1 + 9;\nloop invariant i195: f2 + g2 <= h2 + 9;\nloop invariant i196: f1 + g1 >= h1 - 10;\nloop invariant i197: f2 + g2 >= h2 - 10;\nloop invariant i198: f1 + g1 <= h1 + 10;\nloop invariant i199: f2 + g2 <= h2 + 10;\nloop invariant i200: f1 + g1 >= h1 - 11;\nloop invariant i201: f2 + g2 >= h2 - 11;\nloop invariant i202: f1 + g1 <= h1 + 11;\nloop invariant i203: f2 + g2 <= h2 + 11;\nloop invariant i204: f1 + g1 >= h1 - 12;\nloop invariant i205: f2 + g2 >= h2 - 12;\nloop invariant i206: f1 + g1 <= h1 + 12;\nloop invariant i207: f2 + g2 <= h2 + 12;\nloop invariant i208: f1 + g1 >= h1 - 13;\nloop invariant i209: f2 + g2 >= h2 - 13;\nloop invariant i210: f1 + g1 <= h1 + 13;\nloop invariant i211: f2 + g2 <= h2 + 13;\nloop invariant i212: f1 + g1 >= h1 - 14;\nloop invariant i213: f2 + g2 >= h2 - 14;\nloop invariant i214: f1 + g1 <= h1 + 14;\nloop invariant i215: f2 + g2 <= h2 + 14;\nloop invariant i216: f1 + g1 >= h1 - 15;\nloop invariant i217: f2 + g2 >= h2 - 15;\nloop invariant i218: f1 + g1 <= h1 + 15;\nloop invariant i219: f2 + g2 <= h2 + 15;\nloop invariant i220: f1 + g1 >= h1 - 16;\nloop invariant i221: f2 + g2 >= h2 - 16;\nloop invariant i222: f1 + f2 == g1 + g2;\nloop invariant i223: f1 >= f2;\nloop invariant i224: g1 >= g2;\nloop invariant i225: h1 >= h2;\nloop invariant i226: (f1 == g1 - 1) ==> (h1 == f1 + g1);\nloop invariant i227: (f1 == g1 - 1) ==> (h2 == f2 + g2);\nloop invariant i228: (f1 == g1 - 1) ==> (f1 == g1 - 1);\nloop invariant i229: (f1 == g1 - 1) ==> (f2 == g2 - 1);\nloop invariant i230: 0 <= n <= 100;\nloop invariant i231: 0 <= f1 <= 10;\nloop invariant i232: 0 <= f2 <= 10;\nloop invariant i233: 0 <= g1 <= 10;\nloop invariant i234: 0 <= g2 <= 10;\nloop invariant i235: 0 <= h1 <= 10;\nloop invariant i236: 0 <= h2 <= 10;\nloop invariant i237: h2 == h2 + f2;\nloop invariant i238: h1 + h2 == f1 + g1;\nloop invariant i239: h2 + h2 == f2 + g2;\nloop invariant i240: h1 + h2 == g1 + g2;\nloop invariant i241: h1 + h2 == f1 + f2;\nloop invariant i242: h1 + h2 == g1 + f2;\nloop invariant i243: h1 + h2 == f1 + g2;\nloop invariant i244: 0 <= f1;\nloop invariant i245: 0 <= f2;\nloop invariant i246: 0 <= g1;\nloop invariant i247: 0 <= g2;\nloop invariant i248: 0 <= h1;\nloop invariant i249: 0 <= h2;\nloop invariant i250: f2 <= g2;\nloop invariant i251: 0 <= h1 + f1;\nloop invariant i252: 0 <= h2 + f2;\nloop invariant i253: 0 <= h1 + f1 + h2 + f2;\nloop invariant i254: h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\n*/\nwhile((n > 0)) {\n    h1 = f1 + g1;\n    f1 = g1;\n    g1 = h1;\n    n --;\n\n    h2 = f2 + g2;\n    f2 = g2;\n    g2 = h2;\n\n\t{;\n//@ assert(h2==h1+f1);\n}\n\n  }\n}",
        "combined_annotation_num_solver_calls": 82,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nvoid main() {\n\tint n = unknown();\n  int f1 = 0;   \n  int f2 = 1;  \n  int g1 = 1, g2 = 1;\n  int h1 = 0, h2 = 0;\n\n  /*@\n\n\n\n\n\n\n\n\n\n\nloop invariant i11: f2 == g1;\n\n\n\nloop invariant i15: f1 <= f2 <= g2;\nloop invariant i16: h1 <= h2 <= g1+f1;\n\nloop invariant i18: 0 <= f1 <= f2;\nloop invariant i19: h1 <= h2;\nloop invariant i20: f1 <= f2;\n\n\nloop invariant i23: (n > 0) ==> (h2 == h1 + f1);\nloop invariant i24: (n > 0) ==> (h2 >= h1 + f1);\nloop invariant i25: (n > 0) ==> (h2 <= h1 + f1);\nloop invariant i26: (n > 0) ==> (h1 <= h2);\nloop invariant i27: (n > 0) ==> (f1 <= f2);\n\n\n\n\n\nloop invariant i33: f1 >= 0;\nloop invariant i34: f2 >= 0;\nloop invariant i35: g1 >= 0;\nloop invariant i36: g2 >= 0;\nloop invariant i37: h1 >= 0;\nloop invariant i38: h2 >= 0;\n\n\nloop invariant i41: g1 <= g2;\nloop invariant i42: f1 + g1 <= f2 + g2;\n\n\nloop invariant i45: f1 + g1 <= f1 + g1;\nloop invariant i46: f2 + g2 <= f2 + g2;\n\n\n\n\nloop invariant i51: f1 <= h1;\n\n\n\n\n\n\n\nloop invariant i59: f1 <= f1;\nloop invariant i60: f2 <= f2;\nloop invariant i61: g1 <= g1;\nloop invariant i62: g2 <= g2;\nloop invariant i63: h1 <= h1;\nloop invariant i64: h2 <= h2;\n\nloop invariant i66: f2 >= f1 >= 0;\nloop invariant i67: g2 >= g1 >= 0;\nloop invariant i68: h2 >= h1 >= 0;\n\nloop invariant i70: h2 == h1 + f1;\n\n\nloop invariant i73: f1 <= g1;\nloop invariant i74: f1 <= h2;\n\n\n\nloop invariant i78: (f1 <= f2);\nloop invariant i79: (g1 <= g2);\nloop invariant i80: (h1 <= h2);\n\n\n\n\nloop invariant i85: h1 >= f1;\n\n\n\n\n\nloop invariant i91: h1 <= f1 + g1;\nloop invariant i92: h2 <= f2 + g2;\nloop invariant i93: h1 <= f1 + g1 + 1;\nloop invariant i94: h2 <= f2 + g2 + 1;\n\n\nloop invariant i97: h1 <= f1 + g1 + 2;\nloop invariant i98: h2 <= f2 + g2 + 2;\n\n\nloop invariant i101: h1 <= f1 + g1 + 3;\nloop invariant i102: h2 <= f2 + g2 + 3;\n\n\nloop invariant i105: h1 <= f1 + g1 + 4;\nloop invariant i106: h2 <= f2 + g2 + 4;\n\n\nloop invariant i109: h1 <= f1 + g1 + 5;\nloop invariant i110: h2 <= f2 + g2 + 5;\n\n\nloop invariant i113: h1 <= f1 + g1 + 6;\nloop invariant i114: h2 <= f2 + g2 + 6;\n\n\nloop invariant i117: h1 <= f1 + g1 + 7;\nloop invariant i118: h2 <= f2 + g2 + 7;\n\n\nloop invariant i121: h1 <= f1 + g1 + 8;\nloop invariant i122: h2 <= f2 + g2 + 8;\n\n\nloop invariant i125: h1 <= f1 + g1 + 9;\nloop invariant i126: h2 <= f2 + g2 + 9;\n\n\nloop invariant i129: h1 <= f1 + g1 + 10;\nloop invariant i130: h2 <= f2 + g2 + 10;\n\n\nloop invariant i133: h1 <= f1 + g1 + 11;\nloop invariant i134: h2 <= f2 + g2 + 11;\n\n\nloop invariant i137: h1 <= f1 + g1 + 12;\nloop invariant i138: h2 <= f2 + g2 + 12;\n\n\nloop invariant i141: h1 <= f1 + g1 + 13;\nloop invariant i142: h2 <= f2 + g2 + 13;\n\n\nloop invariant i145: h1 <= f1 + g1 + 14;\nloop invariant i146: h2 <= f2 + g2 + 14;\n\n\nloop invariant i149: h1 <= f1 + g1 + 15;\nloop invariant i150: h2 <= f2 + g2 + 15;\n\n\n\n\n\n\n\n\n\nloop invariant i160: f1 + g1 >= h1 - 1;\nloop invariant i161: f2 + g2 >= h2 - 1;\n\n\nloop invariant i164: f1 + g1 >= h1 - 2;\nloop invariant i165: f2 + g2 >= h2 - 2;\n\n\nloop invariant i168: f1 + g1 >= h1 - 3;\nloop invariant i169: f2 + g2 >= h2 - 3;\n\n\nloop invariant i172: f1 + g1 >= h1 - 4;\nloop invariant i173: f2 + g2 >= h2 - 4;\n\n\nloop invariant i176: f1 + g1 >= h1 - 5;\nloop invariant i177: f2 + g2 >= h2 - 5;\n\n\nloop invariant i180: f1 + g1 >= h1 - 6;\nloop invariant i181: f2 + g2 >= h2 - 6;\n\n\nloop invariant i184: f1 + g1 >= h1 - 7;\nloop invariant i185: f2 + g2 >= h2 - 7;\n\n\nloop invariant i188: f1 + g1 >= h1 - 8;\nloop invariant i189: f2 + g2 >= h2 - 8;\n\n\nloop invariant i192: f1 + g1 >= h1 - 9;\nloop invariant i193: f2 + g2 >= h2 - 9;\n\n\nloop invariant i196: f1 + g1 >= h1 - 10;\nloop invariant i197: f2 + g2 >= h2 - 10;\n\n\nloop invariant i200: f1 + g1 >= h1 - 11;\nloop invariant i201: f2 + g2 >= h2 - 11;\n\n\nloop invariant i204: f1 + g1 >= h1 - 12;\nloop invariant i205: f2 + g2 >= h2 - 12;\n\n\nloop invariant i208: f1 + g1 >= h1 - 13;\nloop invariant i209: f2 + g2 >= h2 - 13;\n\n\nloop invariant i212: f1 + g1 >= h1 - 14;\nloop invariant i213: f2 + g2 >= h2 - 14;\n\n\nloop invariant i216: f1 + g1 >= h1 - 15;\nloop invariant i217: f2 + g2 >= h2 - 15;\n\n\nloop invariant i220: f1 + g1 >= h1 - 16;\nloop invariant i221: f2 + g2 >= h2 - 16;\n\n\n\n\n\n\nloop invariant i228: (f1 == g1 - 1) ==> (f1 == g1 - 1);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i244: 0 <= f1;\nloop invariant i245: 0 <= f2;\nloop invariant i246: 0 <= g1;\nloop invariant i247: 0 <= g2;\nloop invariant i248: 0 <= h1;\nloop invariant i249: 0 <= h2;\nloop invariant i250: f2 <= g2;\nloop invariant i251: 0 <= h1 + f1;\nloop invariant i252: 0 <= h2 + f2;\nloop invariant i253: 0 <= h1 + f1 + h2 + f2;\nloop invariant i254: h1 + f1 + h2 + f2 <= h2 + f2 + g1 + g2;\n*/\nwhile((n > 0)) {\n    h1 = f1 + g1;\n    f1 = g1;\n    g1 = h1;\n    n --;\n\n    h2 = f2 + g2;\n    f2 = g2;\n    g2 = h2;\n\n\t{;\n//@ assert(h2==h1+f1);\n}\n\n  }\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop9_VeriMAP_true.c",
            "../dataset/loop_invariants/code2inv/111.c",
            "../dataset/loop_invariants/sv-benchmarks/loops/sum01-2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/cars.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/65.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/04.c",
            "../dataset/loop_invariants/code2inv/17.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gsv2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/diamond_2-2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/diamond_safe2.c",
            "../dataset/loop_invariants/sv-benchmarks/loops/sum03-2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/fib_merged_safe.c"
        ],
        "skipped": [],
        "total": 13,
        "success_count": 4,
        "failure_count": 9,
        "success_rate": 0.3076923076923077
    }
}