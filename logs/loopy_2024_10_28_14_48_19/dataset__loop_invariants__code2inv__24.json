{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/24.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  \n  (i = 1);\n  (j = 10);\n  \n  while ((j >= i)) {\n    {\n    (i  = (i + 2));\n    (j  = (j - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (j == 6) );\n}\n\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= i <= j <= 10;\nloop invariant i % 2 == 1;\nloop invariant i + j == 11;\nloop invariant j >= 6;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= 9;\nloop invariant j <= 10;\nloop invariant 0 <= i <= j <= 10;\nloop invariant i % 2 == 1;\nloop invariant i + j == 11;\nloop invariant j >= 6;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= 9;\nloop invariant j <= 10;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j; loop invariant i % 2 == 1; loop invariant j % 2 == 0; loop invariant j >= i;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= 10;\nloop invariant 1 <= j <= 10;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i + j <= 11;\nloop invariant i >= 2;\nloop invariant j >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= 10;\nloop invariant 1 <= i <= 10;\nloop invariant i <= j;\nloop invariant j >= i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 11;loop invariant 0 <= j <= 10;loop invariant i <= j + 1;loop invariant (i <= j + 1) ==> (j >= i);loop invariant (j >= i) ==> (i <= j + 1);loop invariant i <= j + 1;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant 1 <= j <= 10;\nloop invariant i >= j + 1;\nloop invariant i <= j + 1;\nloop invariant j >= i - 1;\nloop invariant j <= i - 1;\nloop invariant i + j >= 11;\nloop invariant i + j <= 11;\nloop invariant i * j >= 10;\nloop invariant i * j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant 1 <= j <= 10;\nloop invariant (j >= i) ==> (j <= 9);\nloop invariant j >= i ==> (i <= 9);\nloop invariant j >= i ==> (i >= 1);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= j + 1;\nloop invariant i % 2 == 1;\nloop invariant j >= i;\nloop invariant i * j >= (i - 1) * (j + 1) / 2;\nloop invariant i * j <= (i + 1) * (j - 1) / 2;\nloop invariant i * j == (i + 1) * (j - 1) / 2;\n*/\n```",
            "```\n/*@\nloop invariant j - i >= -1;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j >= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= 11;\nloop invariant j <= 9;\nloop invariant i >= 2;\nloop invariant j >= 8;\nloop invariant i <= 13;\nloop invariant j <= 7;\nloop invariant i >= 3;\nloop invariant j >= 6;\nloop invariant i <= 15;\nloop invariant j <= 5;\nloop invariant i >= 4;\nloop invariant j >= 4;\nloop invariant i <= 17;\nloop invariant j <= 3;\nloop invariant i >= 5;\nloop invariant j >= 2;\nloop invariant i <= 19;\nloop invariant j <= 1;\nloop invariant i >= 6;\nloop invariant j >= 0;\nloop invariant i <= 21;\nloop invariant j <= -1;\nloop invariant j - i >= -1;\nloop invariant i <= j;\nloop invariant i >= 3;\nloop invariant j >= 8;\nloop invariant i <= 13;\nloop invariant j <= 7;\nloop invariant i >= 4;\nloop invariant j >= 6;\nloop invariant i <= 15;\nloop invariant j <= 5;\nloop invariant i >= 5;\nloop invariant j >= 4;\nloop invariant i <= 17;\nloop invariant j <= 3;\nloop invariant i >= 6;\nloop invariant j >= 2;\nloop invariant i <= 19;\nloop invariant j <= 1;\nloop invariant i >= 7;\nloop invariant j >= 0;\nloop invariant i <= 21;\nloop invariant j <= -1;\nloop invariant j - i >= -1;\nloop invariant i <= j;\nloop invariant i >= 5;\nloop invariant j >= 6;\nloop invariant i <= 15;\nloop invariant j <= 5;\nloop invariant i >= 6;\nloop invariant j >= 4;\nloop invariant i <= 17;\nloop invariant j <= 3;\nloop invariant i >= 7;\nloop invariant j >= 2;\nloop invariant i <= 19;\nloop invariant j <= 1;\nloop invariant i >= 8;\nloop invariant j >= 0;\nloop invariant i <= 21;\nloop invariant j <= -1;\nloop invariant j - i >= -1;\nloop invariant i <= j;\nloop invariant i >= 7;\nloop invariant j >= 4;\nloop invariant i <= 17;\nloop invariant j <= 3;\nloop invariant i >= 8;\nloop invariant j >= 2;\nloop invariant i <= 19;\nloop invariant j <= 1;\nloop invariant i >= 9;\nloop invariant j >= 0;\nloop invariant i <= 21;\nloop invariant j <= -1;\nloop invariant j - i >= -1;\nloop invariant i <= j;\nloop invariant i >= 9;\nloop invariant j >= 2;\nloop invariant i <= 19;\nloop invariant j <= 1;\nloop invariant i >= 10;\nloop invariant j >= 0;\nloop invariant i <= 21;\nloop invariant j <= -1;\nloop invariant j - i >= -1;\nloop invariant i <= j;\nloop invariant i >= 10;\nloop invariant j >= 0;\nloop invariant i <= 21;\nloop invariant j <= -1;\nloop invariant j - i >= -1;\nloop invariant i <= j;\nloop invariant i >= 11;\nloop invariant j <= -1;\nloop invariant i <= 21;\nloop invariant j - i >= -1;\nloop invariant i <= j;\nloop invariant i >= 12;\nloop invariant j <= -1;\nloop invariant i <= 21;\nloop invariant j - i >= -1;\nloop invariant i <= j;\nloop invariant i >= 13;\nloop invariant j <= -1;\nloop invariant i <= 21;\nloop invariant j - i >= -1;\nloop invariant i <= j;\nloop invariant i >= 14;\nloop invariant j <= -1;\nloop invariant i <= 21;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= 10;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i >= 1;\nloop invariant j >= 0;\nloop invariant j <= 10;\nloop invariant i >= 1;\nloop invariant j >= 0;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= 10;\nloop invariant 1 <= j <= 9;\nloop invariant j >= i;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant j - i <= 9;\nloop invariant j - i >= 1;\nloop invariant j - i == 10 - i/2;\nloop invariant i/2 + j/2 == 10;\nloop invariant i + j <= 20;\nloop invariant i + j >= 11;\nloop invariant i + j == 20 - (i - 1)/2;\nloop invariant i + j == 11 + (j - 1)/2;\nloop invariant i + j == 11 + 10 - i/2;\nloop invariant i + j == 21 - i/2;\nloop invariant i + j == 21 - (i - 1)/2;\nloop invariant i + j == 20 + (j - 1)/2;\nloop invariant i + j == 20 + 10 - i/2;\nloop invariant i + j == 30 - i/2;\nloop invariant i + j == 30 - (i - 1)/2;\nloop invariant i + j == 21 + (j - 1)/2;\nloop invariant i + j == 21 + 10 - i/2;\nloop invariant i + j == 31 - i/2;\nloop invariant i + j == 31 - (i - 1)/2;\nloop invariant i + j == 22 + (j - 1)/2;\nloop invariant i + j == 22 + 10 - i/2;\nloop invariant i + j == 32 - i/2;\nloop invariant i + j == 32 - (i - 1)/2;\nloop invariant i + j == 23 + (j - 1)/2;\nloop invariant i + j == 23 + 10 - i/2;\nloop invariant i + j == 33 - i/2;\nloop invariant i + j == 33 - (i - 1)/2;\nloop invariant i + j == 24 + (j - 1)/2;\nloop invariant i + j == 24 + 10 - i/2;\nloop invariant i + j == 34 - i/2;\nloop invariant i + j == 34 - (i - 1)/2;\nloop invariant i + j == 25 + (j - 1)/2;\nloop invariant i + j == 25 + 10 - i/2;\nloop invariant i + j == 35 - i/2;\nloop invariant i + j == 35 - (i - 1)/2;\nloop invariant i + j == 26 + (j - 1)/2;\nloop invariant i + j == 26 + 10 - i/2;\nloop invariant i + j == 36 - i/2;\nloop invariant i + j == 36 - (i - 1)/2;\nloop invariant i + j == 27 + (j - 1)/2;\nloop invariant i + j == 27 + 10 - i/2;\nloop invariant i + j == 37 - i/2;\nloop invariant i + j == 37 - (i - 1)/2;\nloop invariant i + j == 28 + (j - 1)/2;\nloop invariant i + j == 28 + 10 - i/2;\nloop invariant i + j == 38 - i/2;\nloop invariant i + j == 38 - (i - 1)/2;\nloop invariant i + j == 29 + (j - 1)/2;\nloop invariant i + j == 29 + 10 - i/2;\nloop invariant i + j == 39 - i/2;\nloop invariant i + j == 39 - (i - 1)/2;\nloop invariant i + j == 30 + (j - 1)/2;\nloop invariant i + j == 30 + 10 - i/2;\nloop invariant i + j == 40 - i/2;\nloop invariant i + j == 40 - (i - 1)/2;\nloop invariant i + j == 31 + (j - 1)/2;\nloop invariant i + j == 31 + 10 - i/2;\nloop invariant i + j == 41 - i/2;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant 1 <= j <= 10;\nloop invariant i >= 1;\nloop invariant j >= i;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 10;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\n*/\n```",
            "```\n/*@\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\n*/\n```",
            "```\n/*@\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i = i + 2;\nloop invariant j = j - 1;\nloop invariant j < i;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j <= 10;\nloop invariant i % 2 == 1;\nloop invariant i + j == 11;\nloop invariant j >= 6;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= 9;\nloop invariant j <= 10;\nloop invariant 0 <= i <= j <= 10;\nloop invariant i % 2 == 1;\nloop invariant i + j == 11;\nloop invariant j >= 6;\nloop invariant i >= 1;\nloop invariant j >= 1;\nloop invariant i <= 9;\nloop invariant j <= 10;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= i <= j <= 10 is established but not preserved.\nloop invariant i % 2 == 1 is partially proven to be inductive.\nloop invariant i + j == 11 is established but not preserved.\nloop invariant j >= 6 is partially proven to be inductive.\nloop invariant i >= 1 is partially proven to be inductive.\nloop invariant j >= 1 is partially proven to be inductive.\nloop invariant i <= 9 is partially proven to be inductive.\nloop invariant j <= 10 is partially proven to be inductive.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  \n  (i = 1);\n  (j = 10);\n  \n  /*@\n\nloop invariant i2: i % 2 == 1;\n\n\nloop invariant i5: i >= 1;\n\n\nloop invariant i8: j <= 10;\n*/\nwhile ((j >= i)) {\n    {\n    (i  = (i + 2));\n    (j  = (j - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (j == 6) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j; loop invariant i % 2 == 1; loop invariant j % 2 == 0; loop invariant j >= i;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= i <= j; loop invariant i % 2 == 1; loop invariant j % 2 == 0; loop invariant j >= i is established but not preserved.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  \n  (i = 1);\n  (j = 10);\n  \n  /*@\n\n*/\nwhile ((j >= i)) {\n    {\n    (i  = (i + 2));\n    (j  = (j - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (j == 6) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= 10;\nloop invariant 1 <= j <= 10;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i + j <= 11;\nloop invariant i >= 2;\nloop invariant j >= 1;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 1 <= i <= 10 is partially proven to be inductive.\nloop invariant 1 <= j <= 10 is partially proven to be inductive.\nloop invariant i % 2 == 0 is preserved but not established.\nloop invariant j % 2 == 1 is partially proven to be inductive.\nloop invariant i + j <= 11 is partially proven to be inductive.\nloop invariant i >= 2 is partially proven to be inductive.\nloop invariant j >= 1 is partially proven to be inductive.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  \n  (i = 1);\n  (j = 10);\n  \n  /*@\n\n\n\n\n\n\n\n*/\nwhile ((j >= i)) {\n    {\n    (i  = (i + 2));\n    (j  = (j - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (j == 6) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= 10;\nloop invariant 1 <= i <= 10;\nloop invariant i <= j;\nloop invariant j >= i;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= j <= 10 is partially proven to be inductive.\nloop invariant 1 <= i <= 10 is established but not preserved.\nloop invariant i <= j is established but not preserved.\nloop invariant j >= i is partially proven to be inductive.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  \n  (i = 1);\n  (j = 10);\n  \n  /*@\n\n\n\n\n*/\nwhile ((j >= i)) {\n    {\n    (i  = (i + 2));\n    (j  = (j - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (j == 6) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 11;loop invariant 0 <= j <= 10;loop invariant i <= j + 1;loop invariant (i <= j + 1) ==> (j >= i);loop invariant (j >= i) ==> (i <= j + 1);loop invariant i <= j + 1;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= i <= 11;loop invariant 0 <= j <= 10;loop invariant i <= j + 1;loop invariant (i <= j + 1) ==> (j >= i);loop invariant (j >= i) ==> (i <= j + 1);loop invariant i <= j + 1;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i is established but not preserved.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  \n  (i = 1);\n  (j = 10);\n  \n  /*@\n\n*/\nwhile ((j >= i)) {\n    {\n    (i  = (i + 2));\n    (j  = (j - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (j == 6) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 10,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant 1 <= j <= 10;\nloop invariant i >= j + 1;\nloop invariant i <= j + 1;\nloop invariant j >= i - 1;\nloop invariant j <= i - 1;\nloop invariant i + j >= 11;\nloop invariant i + j <= 11;\nloop invariant i * j >= 10;\nloop invariant i * j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= i <= 10 is partially proven to be inductive.\nloop invariant 1 <= j <= 10 is partially proven to be inductive.\nloop invariant i >= j + 1 is preserved but not established.\nloop invariant i <= j + 1 is partially proven to be inductive.\nloop invariant j >= i - 1 is partially proven to be inductive.\nloop invariant j <= i - 1 is partially proven to be inductive.\nloop invariant i + j >= 11 is partially proven to be inductive.\nloop invariant i + j <= 11 is partially proven to be inductive.\nloop invariant i * j >= 10 is partially proven to be inductive.\nloop invariant i * j <= 10 is partially proven to be inductive.\nloop invariant i % 2 == 1 is partially proven to be inductive.\nloop invariant j % 2 == 0 is partially proven to be inductive.\nloop invariant i % 2 == 0 is partially proven to be inductive.\nloop invariant j % 2 == 1 is partially proven to be inductive.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  \n  (i = 1);\n  (j = 10);\n  \n  /*@\n\nloop invariant i2: 1 <= j <= 10;\n\n\n\n\nloop invariant i7: i + j >= 11;\n\nloop invariant i9: i * j >= 10;\n\nloop invariant i11: i % 2 == 1;\n\n\n\n*/\nwhile ((j >= i)) {\n    {\n    (i  = (i + 2));\n    (j  = (j - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (j == 6) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant 1 <= j <= 10;\nloop invariant (j >= i) ==> (j <= 9);\nloop invariant j >= i ==> (i <= 9);\nloop invariant j >= i ==> (i >= 1);\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= i <= 10 is partially proven to be inductive.\nloop invariant 1 <= j <= 10 is partially proven to be inductive.\nloop invariant (j >= i) ==> (j <= 9) is preserved but not established.\nloop invariant j >= i ==> (i <= 9) is partially proven to be inductive.\nloop invariant j >= i ==> (i >= 1) is partially proven to be inductive.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  \n  (i = 1);\n  (j = 10);\n  \n  /*@\n\n\n\n\nloop invariant i5: j >= i ==> (i >= 1);\n*/\nwhile ((j >= i)) {\n    {\n    (i  = (i + 2));\n    (j  = (j - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (j == 6) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= j + 1;\nloop invariant i % 2 == 1;\nloop invariant j >= i;\nloop invariant i * j >= (i - 1) * (j + 1) / 2;\nloop invariant i * j <= (i + 1) * (j - 1) / 2;\nloop invariant i * j == (i + 1) * (j - 1) / 2;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 1 <= i <= j + 1 is partially proven to be inductive.\nloop invariant i % 2 == 1 is partially proven to be inductive.\nloop invariant j >= i is partially proven to be inductive.\nloop invariant i * j >= (i - 1) * (j + 1) / 2 is partially proven to be inductive.\nloop invariant i * j <= (i + 1) * (j - 1) / 2 is preserved but not established.\nloop invariant i * j == (i + 1) * (j - 1) / 2 is partially proven to be inductive.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  \n  (i = 1);\n  (j = 10);\n  \n  /*@\n\nloop invariant i2: i % 2 == 1;\n\n\n\n\n*/\nwhile ((j >= i)) {\n    {\n    (i  = (i + 2));\n    (j  = (j - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (j == 6) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 28,
                "annotations": "```\n/*@\nloop invariant j - i >= -1;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j >= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= 11;\nloop invariant j <= 9;\nloop invariant i >= 2;\nloop invariant j >= 8;\nloop invariant i <= 13;\nloop invariant j <= 7;\nloop invariant i >= 3;\nloop invariant j >= 6;\nloop invariant i <= 15;\nloop invariant j <= 5;\nloop invariant i >= 4;\nloop invariant j >= 4;\nloop invariant i <= 17;\nloop invariant j <= 3;\nloop invariant i >= 5;\nloop invariant j >= 2;\nloop invariant i <= 19;\nloop invariant j <= 1;\nloop invariant i >= 6;\nloop invariant j >= 0;\nloop invariant i <= 21;\nloop invariant j <= -1;\nloop invariant j - i >= -1;\nloop invariant i <= j;\nloop invariant i >= 3;\nloop invariant j >= 8;\nloop invariant i <= 13;\nloop invariant j <= 7;\nloop invariant i >= 4;\nloop invariant j >= 6;\nloop invariant i <= 15;\nloop invariant j <= 5;\nloop invariant i >= 5;\nloop invariant j >= 4;\nloop invariant i <= 17;\nloop invariant j <= 3;\nloop invariant i >= 6;\nloop invariant j >= 2;\nloop invariant i <= 19;\nloop invariant j <= 1;\nloop invariant i >= 7;\nloop invariant j >= 0;\nloop invariant i <= 21;\nloop invariant j <= -1;\nloop invariant j - i >= -1;\nloop invariant i <= j;\nloop invariant i >= 5;\nloop invariant j >= 6;\nloop invariant i <= 15;\nloop invariant j <= 5;\nloop invariant i >= 6;\nloop invariant j >= 4;\nloop invariant i <= 17;\nloop invariant j <= 3;\nloop invariant i >= 7;\nloop invariant j >= 2;\nloop invariant i <= 19;\nloop invariant j <= 1;\nloop invariant i >= 8;\nloop invariant j >= 0;\nloop invariant i <= 21;\nloop invariant j <= -1;\nloop invariant j - i >= -1;\nloop invariant i <= j;\nloop invariant i >= 7;\nloop invariant j >= 4;\nloop invariant i <= 17;\nloop invariant j <= 3;\nloop invariant i >= 8;\nloop invariant j >= 2;\nloop invariant i <= 19;\nloop invariant j <= 1;\nloop invariant i >= 9;\nloop invariant j >= 0;\nloop invariant i <= 21;\nloop invariant j <= -1;\nloop invariant j - i >= -1;\nloop invariant i <= j;\nloop invariant i >= 9;\nloop invariant j >= 2;\nloop invariant i <= 19;\nloop invariant j <= 1;\nloop invariant i >= 10;\nloop invariant j >= 0;\nloop invariant i <= 21;\nloop invariant j <= -1;\nloop invariant j - i >= -1;\nloop invariant i <= j;\nloop invariant i >= 10;\nloop invariant j >= 0;\nloop invariant i <= 21;\nloop invariant j <= -1;\nloop invariant j - i >= -1;\nloop invariant i <= j;\nloop invariant i >= 11;\nloop invariant j <= -1;\nloop invariant i <= 21;\nloop invariant j - i >= -1;\nloop invariant i <= j;\nloop invariant i >= 12;\nloop invariant j <= -1;\nloop invariant i <= 21;\nloop invariant j - i >= -1;\nloop invariant i <= j;\nloop invariant i >= 13;\nloop invariant j <= -1;\nloop invariant i <= 21;\nloop invariant j - i >= -1;\nloop invariant i <= j;\nloop invariant i >= 14;\nloop invariant j <= -1;\nloop invariant i <= 21;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant j - i >= -1 is partially proven to be inductive.\nloop invariant i <= j is partially proven to be inductive.\nloop invariant i >= 1 is partially proven to be inductive.\nloop invariant j >= 10 is partially proven to be inductive.\nloop invariant i % 2 == 1 is partially proven to be inductive.\nloop invariant j % 2 == 0 is partially proven to be inductive.\nloop invariant i <= 11 is partially proven to be inductive.\nloop invariant j <= 9 is preserved but not established.\nloop invariant i >= 2 is partially proven to be inductive.\nloop invariant j >= 8 is partially proven to be inductive.\nloop invariant i <= 13 is partially proven to be inductive.\nloop invariant j <= 7 is partially proven to be inductive.\nloop invariant i >= 3 is partially proven to be inductive.\nloop invariant j >= 6 is partially proven to be inductive.\nloop invariant i <= 15 is partially proven to be inductive.\nloop invariant j <= 5 is partially proven to be inductive.\nloop invariant i >= 4 is partially proven to be inductive.\nloop invariant j >= 4 is partially proven to be inductive.\nloop invariant i <= 17 is partially proven to be inductive.\nloop invariant j <= 3 is partially proven to be inductive.\nloop invariant i >= 5 is partially proven to be inductive.\nloop invariant j >= 2 is partially proven to be inductive.\nloop invariant i <= 19 is partially proven to be inductive.\nloop invariant j <= 1 is partially proven to be inductive.\nloop invariant i >= 6 is partially proven to be inductive.\nloop invariant j >= 0 is partially proven to be inductive.\nloop invariant i <= 21 is partially proven to be inductive.\nloop invariant j <= -1 is partially proven to be inductive.\nloop invariant i >= 7 is partially proven to be inductive.\nloop invariant i >= 8 is partially proven to be inductive.\nloop invariant i >= 9 is partially proven to be inductive.\nloop invariant i >= 10 is partially proven to be inductive.\nloop invariant i >= 11 is partially proven to be inductive.\nloop invariant i >= 12 is partially proven to be inductive.\nloop invariant i >= 13 is partially proven to be inductive.\nloop invariant i >= 14 is partially proven to be inductive.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  \n  (i = 1);\n  (j = 10);\n  \n  /*@\n\n\nloop invariant i3: i >= 1;\n\nloop invariant i5: i % 2 == 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i26: j >= 0;\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((j >= i)) {\n    {\n    (i  = (i + 2));\n    (j  = (j - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (j == 6) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= 10;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i >= 1;\nloop invariant j >= 0;\nloop invariant j <= 10;\nloop invariant i >= 1;\nloop invariant j >= 0;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\nloop invariant i >= j;\nloop invariant j >= i;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= j <= 10 is partially proven to be inductive.\nloop invariant i >= 1 is partially proven to be inductive.\nloop invariant j <= 10 is partially proven to be inductive.\nloop invariant j >= 0 is partially proven to be inductive.\nloop invariant i >= j is preserved but not established.\nloop invariant j >= i is partially proven to be inductive.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  \n  (i = 1);\n  (j = 10);\n  \n  /*@\nloop invariant i1: 0 <= j <= 10;\nloop invariant i2: i >= 1;\nloop invariant i3: j <= 10;\nloop invariant i4: j >= 0;\n\n\n*/\nwhile ((j >= i)) {\n    {\n    (i  = (i + 2));\n    (j  = (j - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (j == 6) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 59,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= 10;\nloop invariant 1 <= j <= 9;\nloop invariant j >= i;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant j - i <= 9;\nloop invariant j - i >= 1;\nloop invariant j - i == 10 - i/2;\nloop invariant i/2 + j/2 == 10;\nloop invariant i + j <= 20;\nloop invariant i + j >= 11;\nloop invariant i + j == 20 - (i - 1)/2;\nloop invariant i + j == 11 + (j - 1)/2;\nloop invariant i + j == 11 + 10 - i/2;\nloop invariant i + j == 21 - i/2;\nloop invariant i + j == 21 - (i - 1)/2;\nloop invariant i + j == 20 + (j - 1)/2;\nloop invariant i + j == 20 + 10 - i/2;\nloop invariant i + j == 30 - i/2;\nloop invariant i + j == 30 - (i - 1)/2;\nloop invariant i + j == 21 + (j - 1)/2;\nloop invariant i + j == 21 + 10 - i/2;\nloop invariant i + j == 31 - i/2;\nloop invariant i + j == 31 - (i - 1)/2;\nloop invariant i + j == 22 + (j - 1)/2;\nloop invariant i + j == 22 + 10 - i/2;\nloop invariant i + j == 32 - i/2;\nloop invariant i + j == 32 - (i - 1)/2;\nloop invariant i + j == 23 + (j - 1)/2;\nloop invariant i + j == 23 + 10 - i/2;\nloop invariant i + j == 33 - i/2;\nloop invariant i + j == 33 - (i - 1)/2;\nloop invariant i + j == 24 + (j - 1)/2;\nloop invariant i + j == 24 + 10 - i/2;\nloop invariant i + j == 34 - i/2;\nloop invariant i + j == 34 - (i - 1)/2;\nloop invariant i + j == 25 + (j - 1)/2;\nloop invariant i + j == 25 + 10 - i/2;\nloop invariant i + j == 35 - i/2;\nloop invariant i + j == 35 - (i - 1)/2;\nloop invariant i + j == 26 + (j - 1)/2;\nloop invariant i + j == 26 + 10 - i/2;\nloop invariant i + j == 36 - i/2;\nloop invariant i + j == 36 - (i - 1)/2;\nloop invariant i + j == 27 + (j - 1)/2;\nloop invariant i + j == 27 + 10 - i/2;\nloop invariant i + j == 37 - i/2;\nloop invariant i + j == 37 - (i - 1)/2;\nloop invariant i + j == 28 + (j - 1)/2;\nloop invariant i + j == 28 + 10 - i/2;\nloop invariant i + j == 38 - i/2;\nloop invariant i + j == 38 - (i - 1)/2;\nloop invariant i + j == 29 + (j - 1)/2;\nloop invariant i + j == 29 + 10 - i/2;\nloop invariant i + j == 39 - i/2;\nloop invariant i + j == 39 - (i - 1)/2;\nloop invariant i + j == 30 + (j - 1)/2;\nloop invariant i + j == 30 + 10 - i/2;\nloop invariant i + j == 40 - i/2;\nloop invariant i + j == 40 - (i - 1)/2;\nloop invariant i + j == 31 + (j - 1)/2;\nloop invariant i + j == 31 + 10 - i/2;\nloop invariant i + j == 41 - i/2;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 1 <= i <= 10 is partially proven to be inductive.\nloop invariant 1 <= j <= 9 is preserved but not established.\nloop invariant j >= i is partially proven to be inductive.\nloop invariant i % 2 == 1 is partially proven to be inductive.\nloop invariant j % 2 == 0 is partially proven to be inductive.\nloop invariant j - i <= 9 is partially proven to be inductive.\nloop invariant j - i >= 1 is partially proven to be inductive.\nloop invariant j - i == 10 - i/2 is partially proven to be inductive.\nloop invariant i/2 + j/2 == 10 is partially proven to be inductive.\nloop invariant i + j <= 20 is partially proven to be inductive.\nloop invariant i + j >= 11 is partially proven to be inductive.\nloop invariant i + j == 20 - (i - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 11 + (j - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 11 + 10 - i/2 is partially proven to be inductive.\nloop invariant i + j == 21 - i/2 is partially proven to be inductive.\nloop invariant i + j == 21 - (i - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 20 + (j - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 20 + 10 - i/2 is partially proven to be inductive.\nloop invariant i + j == 30 - i/2 is partially proven to be inductive.\nloop invariant i + j == 30 - (i - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 21 + (j - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 21 + 10 - i/2 is partially proven to be inductive.\nloop invariant i + j == 31 - i/2 is partially proven to be inductive.\nloop invariant i + j == 31 - (i - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 22 + (j - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 22 + 10 - i/2 is partially proven to be inductive.\nloop invariant i + j == 32 - i/2 is partially proven to be inductive.\nloop invariant i + j == 32 - (i - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 23 + (j - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 23 + 10 - i/2 is partially proven to be inductive.\nloop invariant i + j == 33 - i/2 is partially proven to be inductive.\nloop invariant i + j == 33 - (i - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 24 + (j - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 24 + 10 - i/2 is partially proven to be inductive.\nloop invariant i + j == 34 - i/2 is partially proven to be inductive.\nloop invariant i + j == 34 - (i - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 25 + (j - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 25 + 10 - i/2 is partially proven to be inductive.\nloop invariant i + j == 35 - i/2 is partially proven to be inductive.\nloop invariant i + j == 35 - (i - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 26 + (j - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 26 + 10 - i/2 is partially proven to be inductive.\nloop invariant i + j == 36 - i/2 is partially proven to be inductive.\nloop invariant i + j == 36 - (i - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 27 + (j - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 27 + 10 - i/2 is partially proven to be inductive.\nloop invariant i + j == 37 - i/2 is partially proven to be inductive.\nloop invariant i + j == 37 - (i - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 28 + (j - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 28 + 10 - i/2 is partially proven to be inductive.\nloop invariant i + j == 38 - i/2 is partially proven to be inductive.\nloop invariant i + j == 38 - (i - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 29 + (j - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 29 + 10 - i/2 is partially proven to be inductive.\nloop invariant i + j == 39 - i/2 is partially proven to be inductive.\nloop invariant i + j == 39 - (i - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 30 + (j - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 30 + 10 - i/2 is partially proven to be inductive.\nloop invariant i + j == 40 - i/2 is partially proven to be inductive.\nloop invariant i + j == 40 - (i - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 31 + (j - 1)/2 is partially proven to be inductive.\nloop invariant i + j == 31 + 10 - i/2 is partially proven to be inductive.\nloop invariant i + j == 41 - i/2 is partially proven to be inductive.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  \n  (i = 1);\n  (j = 10);\n  \n  /*@\n\n\n\nloop invariant i4: i % 2 == 1;\n\nloop invariant i6: j - i <= 9;\n\n\n\n\nloop invariant i11: i + j >= 11;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((j >= i)) {\n    {\n    (i  = (i + 2));\n    (j  = (j - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (j == 6) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\n\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 16: unexpected token ''",
                "houdini_error": "No annotations found"
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant 1 <= j <= 10;\nloop invariant i >= 1;\nloop invariant j >= i;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 10;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\nloop invariant i - j <= 9;\nloop invariant i * j >= 10;\nloop invariant i / j <= 1;\nloop invariant i % j >= 0;\nloop invariant j % i >= 0;\nloop invariant i + j >= 11;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= i <= j is established but not preserved.\nloop invariant 1 <= j <= 10 is partially proven to be inductive.\nloop invariant i >= 1 is partially proven to be inductive.\nloop invariant j >= i is partially proven to be inductive.\nloop invariant i + j >= 11 is partially proven to be inductive.\nloop invariant i - j <= 9 is partially proven to be inductive.\nloop invariant i * j >= 10 is partially proven to be inductive.\nloop invariant i / j <= 1 is partially proven to be inductive.\nloop invariant i % j >= 0 is partially proven to be inductive.\nloop invariant j % i >= 0 is partially proven to be inductive.\nloop invariant i + j >= 10 is partially proven to be inductive.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  \n  (i = 1);\n  (j = 10);\n  \n  /*@\n\nloop invariant i2: 1 <= j <= 10;\nloop invariant i3: i >= 1;\n\nloop invariant i5: i + j >= 11;\nloop invariant i6: i - j <= 9;\nloop invariant i7: i * j >= 10;\nloop invariant i8: i / j <= 1;\nloop invariant i9: i % j >= 0;\nloop invariant i10: j % i >= 0;\nloop invariant i11: i + j >= 10;\n*/\nwhile ((j >= i)) {\n    {\n    (i  = (i + 2));\n    (j  = (j - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (j == 6) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i <= j;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant i <= j is established but not preserved.\nloop invariant i >= 1 is partially proven to be inductive.\nloop invariant j <= 10 is partially proven to be inductive.\nloop invariant i % 2 == 1 is partially proven to be inductive.\nloop invariant j % 2 == 0 is established but not preserved.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  \n  (i = 1);\n  (j = 10);\n  \n  /*@\n\nloop invariant i2: i >= 1;\nloop invariant i3: j <= 10;\nloop invariant i4: i % 2 == 1;\n\n*/\nwhile ((j >= i)) {\n    {\n    (i  = (i + 2));\n    (j  = (j - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (j == 6) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i = i + 2;\nloop invariant j = j - 1;\nloop invariant j < i;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 20: Assignment operators not allowed in annotations.",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  \n  (i = 1);\n  (j = 10);\n  \n  /*@\nloop invariant i1: i >= 0;\n\nloop invariant i3: i % 2 == 1;\n\n\n\n\n*/\nwhile ((j >= i)) {\n    {\n    (i  = (i + 2));\n    (j  = (j - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (j == 6) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 147: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  \n  (i = 1);\n  (j = 10);\n  \n  /*@\nloop invariant i1: 0 <= i <= j <= 10;\nloop invariant i2: i % 2 == 1;\nloop invariant i3: i + j == 11;\nloop invariant i4: j >= 6;\nloop invariant i5: i >= 1;\nloop invariant i6: j >= 1;\nloop invariant i7: i <= 9;\nloop invariant i8: j <= 10;\nloop invariant i9: 0 <= i <= j; loop invariant i % 2 == 1; loop invariant j % 2 == 0; loop invariant j >= i;\nloop invariant i10: 1 <= i <= 10;\nloop invariant i11: 1 <= j <= 10;\nloop invariant i12: i % 2 == 0;\nloop invariant i13: j % 2 == 1;\nloop invariant i14: i + j <= 11;\nloop invariant i15: i >= 2;\nloop invariant i16: 0 <= j <= 10;\nloop invariant i17: i <= j;\nloop invariant i18: j >= i;\nloop invariant i19: 0 <= i <= 11;loop invariant 0 <= j <= 10;loop invariant i <= j + 1;loop invariant (i <= j + 1) ==> (j >= i);loop invariant (j >= i) ==> (i <= j + 1);loop invariant i <= j + 1;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;\nloop invariant i20: 0 <= i <= 10;\nloop invariant i21: i >= j + 1;\nloop invariant i22: i <= j + 1;\nloop invariant i23: j >= i - 1;\nloop invariant i24: j <= i - 1;\nloop invariant i25: i + j >= 11;\nloop invariant i26: i * j >= 10;\nloop invariant i27: i * j <= 10;\nloop invariant i28: j % 2 == 0;\nloop invariant i29: (j >= i) ==> (j <= 9);\nloop invariant i30: j >= i ==> (i <= 9);\nloop invariant i31: j >= i ==> (i >= 1);\nloop invariant i32: 1 <= i <= j + 1;\nloop invariant i33: i * j >= (i - 1) * (j + 1) / 2;\nloop invariant i34: i * j <= (i + 1) * (j - 1) / 2;\nloop invariant i35: i * j == (i + 1) * (j - 1) / 2;\nloop invariant i36: j - i >= -1;\nloop invariant i37: j >= 10;\nloop invariant i38: i <= 11;\nloop invariant i39: j <= 9;\nloop invariant i40: j >= 8;\nloop invariant i41: i <= 13;\nloop invariant i42: j <= 7;\nloop invariant i43: i >= 3;\nloop invariant i44: i <= 15;\nloop invariant i45: j <= 5;\nloop invariant i46: i >= 4;\nloop invariant i47: j >= 4;\nloop invariant i48: i <= 17;\nloop invariant i49: j <= 3;\nloop invariant i50: i >= 5;\nloop invariant i51: j >= 2;\nloop invariant i52: i <= 19;\nloop invariant i53: j <= 1;\nloop invariant i54: i >= 6;\nloop invariant i55: j >= 0;\nloop invariant i56: i <= 21;\nloop invariant i57: j <= -1;\nloop invariant i58: i >= 7;\nloop invariant i59: i >= 8;\nloop invariant i60: i >= 9;\nloop invariant i61: i >= 10;\nloop invariant i62: i >= 11;\nloop invariant i63: i >= 12;\nloop invariant i64: i >= 13;\nloop invariant i65: i >= 14;\nloop invariant i66: i >= j;\nloop invariant i67: 1 <= j <= 9;\nloop invariant i68: j - i <= 9;\nloop invariant i69: j - i >= 1;\nloop invariant i70: j - i == 10 - i/2;\nloop invariant i71: i/2 + j/2 == 10;\nloop invariant i72: i + j <= 20;\nloop invariant i73: i + j == 20 - (i - 1)/2;\nloop invariant i74: i + j == 11 + (j - 1)/2;\nloop invariant i75: i + j == 11 + 10 - i/2;\nloop invariant i76: i + j == 21 - i/2;\nloop invariant i77: i + j == 21 - (i - 1)/2;\nloop invariant i78: i + j == 20 + (j - 1)/2;\nloop invariant i79: i + j == 20 + 10 - i/2;\nloop invariant i80: i + j == 30 - i/2;\nloop invariant i81: i + j == 30 - (i - 1)/2;\nloop invariant i82: i + j == 21 + (j - 1)/2;\nloop invariant i83: i + j == 21 + 10 - i/2;\nloop invariant i84: i + j == 31 - i/2;\nloop invariant i85: i + j == 31 - (i - 1)/2;\nloop invariant i86: i + j == 22 + (j - 1)/2;\nloop invariant i87: i + j == 22 + 10 - i/2;\nloop invariant i88: i + j == 32 - i/2;\nloop invariant i89: i + j == 32 - (i - 1)/2;\nloop invariant i90: i + j == 23 + (j - 1)/2;\nloop invariant i91: i + j == 23 + 10 - i/2;\nloop invariant i92: i + j == 33 - i/2;\nloop invariant i93: i + j == 33 - (i - 1)/2;\nloop invariant i94: i + j == 24 + (j - 1)/2;\nloop invariant i95: i + j == 24 + 10 - i/2;\nloop invariant i96: i + j == 34 - i/2;\nloop invariant i97: i + j == 34 - (i - 1)/2;\nloop invariant i98: i + j == 25 + (j - 1)/2;\nloop invariant i99: i + j == 25 + 10 - i/2;\nloop invariant i100: i + j == 35 - i/2;\nloop invariant i101: i + j == 35 - (i - 1)/2;\nloop invariant i102: i + j == 26 + (j - 1)/2;\nloop invariant i103: i + j == 26 + 10 - i/2;\nloop invariant i104: i + j == 36 - i/2;\nloop invariant i105: i + j == 36 - (i - 1)/2;\nloop invariant i106: i + j == 27 + (j - 1)/2;\nloop invariant i107: i + j == 27 + 10 - i/2;\nloop invariant i108: i + j == 37 - i/2;\nloop invariant i109: i + j == 37 - (i - 1)/2;\nloop invariant i110: i + j == 28 + (j - 1)/2;\nloop invariant i111: i + j == 28 + 10 - i/2;\nloop invariant i112: i + j == 38 - i/2;\nloop invariant i113: i + j == 38 - (i - 1)/2;\nloop invariant i114: i + j == 29 + (j - 1)/2;\nloop invariant i115: i + j == 29 + 10 - i/2;\nloop invariant i116: i + j == 39 - i/2;\nloop invariant i117: i + j == 39 - (i - 1)/2;\nloop invariant i118: i + j == 30 + (j - 1)/2;\nloop invariant i119: i + j == 30 + 10 - i/2;\nloop invariant i120: i + j == 40 - i/2;\nloop invariant i121: i + j == 40 - (i - 1)/2;\nloop invariant i122: i + j == 31 + (j - 1)/2;\nloop invariant i123: i + j == 31 + 10 - i/2;\nloop invariant i124: i + j == 41 - i/2;\nloop invariant i125: 0 <= i <= j;\nloop invariant i126: i - j <= 9;\nloop invariant i127: i / j <= 1;\nloop invariant i128: i % j >= 0;\nloop invariant i129: j % i >= 0;\nloop invariant i130: i + j >= 10;\nloop invariant i131: i >= 0;\nloop invariant i132: i = i + 2;\nloop invariant i133: j = j - 1;\nloop invariant i134: j < i;\n*/\nwhile ((j >= i)) {\n    {\n    (i  = (i + 2));\n    (j  = (j - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (j == 6) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 88,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  \n  (i = 1);\n  (j = 10);\n  \n  /*@\nloop invariant i1: 0 <= i <= j <= 10;\nloop invariant i2: i % 2 == 1;\n\nloop invariant i4: j >= 6;\nloop invariant i5: i >= 1;\nloop invariant i6: j >= 1;\nloop invariant i7: i <= 9;\nloop invariant i8: j <= 10;\nloop invariant i9: 0 <= i <= j; loop invariant i % 2 == 1; loop invariant j % 2 == 0; loop invariant j >= i;\nloop invariant i10: 1 <= i <= 10;\nloop invariant i11: 1 <= j <= 10;\n\n\nloop invariant i14: i + j <= 11;\n\nloop invariant i16: 0 <= j <= 10;\nloop invariant i17: i <= j;\nloop invariant i18: j >= i;\nloop invariant i19: 0 <= i <= 11;loop invariant 0 <= j <= 10;loop invariant i <= j + 1;loop invariant (i <= j + 1) ==> (j >= i);loop invariant (j >= i) ==> (i <= j + 1);loop invariant i <= j + 1;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;loop invariant j >= i;\nloop invariant i20: 0 <= i <= 10;\n\nloop invariant i22: i <= j + 1;\nloop invariant i23: j >= i - 1;\n\nloop invariant i25: i + j >= 11;\nloop invariant i26: i * j >= 10;\nloop invariant i27: i * j <= 10;\nloop invariant i28: j % 2 == 0;\n\nloop invariant i30: j >= i ==> (i <= 9);\nloop invariant i31: j >= i ==> (i >= 1);\nloop invariant i32: 1 <= i <= j + 1;\nloop invariant i33: i * j >= (i - 1) * (j + 1) / 2;\n\n\nloop invariant i36: j - i >= -1;\nloop invariant i37: j >= 10;\nloop invariant i38: i <= 11;\n\nloop invariant i40: j >= 8;\nloop invariant i41: i <= 13;\n\n\nloop invariant i44: i <= 15;\n\n\nloop invariant i47: j >= 4;\nloop invariant i48: i <= 17;\n\n\nloop invariant i51: j >= 2;\nloop invariant i52: i <= 19;\n\n\nloop invariant i55: j >= 0;\nloop invariant i56: i <= 21;\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i68: j - i <= 9;\nloop invariant i69: j - i >= 1;\n\n\nloop invariant i72: i + j <= 20;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i125: 0 <= i <= j;\nloop invariant i126: i - j <= 9;\nloop invariant i127: i / j <= 1;\nloop invariant i128: i % j >= 0;\nloop invariant i129: j % i >= 0;\nloop invariant i130: i + j >= 10;\nloop invariant i131: i >= 0;\n\n\n\n*/\nwhile ((j >= i)) {\n    {\n    (i  = (i + 2));\n    (j  = (j - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (j == 6) );\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/MADWiFi-encode_ie_ok.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/fig2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007b_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/code2inv/33.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark24_conjunctive.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/20.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/MADWiFi-encode_ie_ok_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/vnew2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/bin-suffix-5.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cggmp2005_true-unreach-call.c",
            "../dataset/loop_invariants/code2inv/84.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.v.c",
            "../dataset/loop_invariants/code2inv/70.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/21.c",
            "../dataset/loop_invariants/code2inv/66.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/MADWiFi-encode_ie_ok.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/overflow_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/mod4.c",
            "../dataset/loop_invariants/code2inv/28.c",
            "../dataset/loop_invariants/code2inv/122.c",
            "../dataset/loop_invariants/code2inv/85.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/ex2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/42.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/diamond_1-1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_nondet_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/odd.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/even.c",
            "../dataset/loop_invariants/code2inv/24.c"
        ],
        "skipped": [],
        "total": 28,
        "success_count": 6,
        "failure_count": 22,
        "success_rate": 0.21428571428571427
    }
}