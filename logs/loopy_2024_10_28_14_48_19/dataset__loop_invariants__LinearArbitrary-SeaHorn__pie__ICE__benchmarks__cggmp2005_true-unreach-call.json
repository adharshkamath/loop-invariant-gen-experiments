{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cggmp2005_true-unreach-call.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    while (j >= i) {\n\ti = i + 2;\n\tj = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 1 <= i <= 10;\nloop invariant 1 <= j <= 9;\nloop invariant i == 1 + 2 * (j - i + 1);\nloop invariant j == 10 - (i - 1) / 2;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\n*/\n```",
            "```\n/*@\nloop invariant i = 1;\nloop invariant j = 10;\nloop invariant k = 0;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= 0;\nloop invariant i <= 19;\nloop invariant i >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 11;\nloop invariant 0 <= j <= 9;\nloop invariant 1 <= i <= j;\nloop invariant i + j == 10;\nloop invariant i * i + j * j == 100;\nloop invariant i * i + j * j == 100 ==> i * i + j * j == 100;\nloop invariant i + j == 10 ==> i + j == 10;\nloop invariant i * i + j * j == 100 ==> i * i + j * j == 100;\nloop invariant i + j == 10 ==> i + j == 10;\nloop invariant i <= j ==> i <= j;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant j <= 10;\nloop invariant i % 2 == 0;\nloop invariant i >= j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j <= 10; loop invariant i % 2 == 0; loop invariant j % 2 == 0; loop invariant i + j <= 20; loop invariant i <= j; loop invariant i + j == 10 + j - i; loop invariant i + j == 10 + j - i - 1; loop invariant i + j == 10 + j - i - 2; loop invariant i + j == 10 + j - i - 3; loop invariant i + j == 10 + j - i - 4; loop invariant i + j == 10 + j - i - 5; loop invariant i + j == 10 + j - i - 6; loop invariant i + j == 10 + j - i - 7; loop invariant i + j == 10 + j - i - 8; loop invariant i + j == 10 + j - i - 9; loop invariant i + j == 10 + j - i - 10; loop invariant i + j == 10 + j - i - 11; loop invariant i + j == 10 + j - i - 12; loop invariant i + j == 10 + j - i - 13; loop invariant i + j == 10 + j - i - 14; loop invariant i + j == 10 + j - i - 15; loop invariant i + j == 10 + j - i - 16; loop invariant i + j == 10 + j - i - 17; loop invariant i + j == 10 + j - i - 18; loop invariant i + j == 10 + j - i - 19; loop invariant i + j == 10 + j - i - 20; loop invariant i + j == 10 + j - i - 21; loop invariant i + j == 10 + j - i - 22; loop invariant i + j == 10 + j - i - 23; loop invariant i + j == 10 + j - i - 24; loop invariant i + j == 10 + j - i - 25; loop invariant i + j == 10 + j - i - 26; loop invariant i + j == 10 + j - i - 27; loop invariant i + j == 10 + j - i - 28; loop invariant i + j == 10 + j - i - 29; loop invariant i + j == 10 + j - i - 30; loop invariant i + j == 10 + j - i - 31; loop invariant i + j == 10 + j - i - 32; loop invariant i + j == 10 + j - i - 33; loop invariant i + j == 10 + j - i - 34; loop invariant i + j == 10 + j - i - 35; loop invariant i + j == 10 + j - i - 36; loop invariant i + j == 10 + j - i - 37; loop invariant i + j == 10 + j - i - 38; loop invariant i + j == 10 + j - i - 39; loop invariant i + j == 10 + j - i - 40; loop invariant i + j == 10 + j - i - 41; loop invariant i + j == 10 + j - i - 42; loop invariant i + j == 10 + j - i - 43; loop invariant i + j == 10 + j - i - 44; loop invariant i + j == 10 + j - i - 45; loop invariant i + j == 10 + j - i - 46; loop invariant i + j == 10 + j - i - 47; loop invariant i + j == 10 + j - i - 48; loop invariant i + j == 10 + j - i - 49; loop invariant i + j == 10 + j - i - 50; loop invariant i + j == 10 + j - i - 51; loop invariant i + j == 10 + j - i - 52;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant j >= i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant 0 <= j <= 10;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= 10;\nloop invariant 0 <= i <= 11;\nloop invariant i <= j;\nloop invariant (i % 2 == 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant -10 <= j <= 10;\nloop invariant i > j;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\n*/\n```",
            "```\n/*@\nloop invariant i >= 1;\nloop invariant j >= i;\nloop invariant j <= 10;\nloop invariant i <= j;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i + j == 11;\nloop invariant i - j == 1;\nloop invariant i + j == 11;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i == 1 + 2 * (10 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= j + 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\n*/\n```",
            "```\n/*@\nloop invariant j >= i;\nloop invariant i % 2 == 1;\nloop invariant i >= 1;\nloop invariant j >= -1;\nloop invariant j >= i;\nloop invariant j % 2 == -1;\nloop invariant i <= 9;\nloop invariant j <= 10;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 11;\nloop invariant j <= 9;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 12;\nloop invariant j <= 8;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 13;\nloop invariant j <= 7;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 14;\nloop invariant j <= 6;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 15;\nloop invariant j <= 5;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 16;\nloop invariant j <= 4;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 17;\nloop invariant j <= 3;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 18;\nloop invariant j <= 2;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 19;\nloop invariant j <= 1;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 20;\nloop invariant j <= 0;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 21;\nloop invariant j <= -1;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 22;\nloop invariant j <= -2;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 23;\nloop invariant j <= -3;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 24;\nloop invariant j <= -4;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 25;\nloop invariant j <= -5;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 26;\nloop invariant j <= -6;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 27;\nloop invariant j <= -7;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 28;\nloop invariant j <= -8;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 29;\nloop invariant j <= -9;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 30;\nloop invariant j <= -10;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 31;\nloop invariant j <= -11;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 32;\nloop invariant j <= -12;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 33;\nloop invariant j <= -13;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 34;\nloop invariant j <= -14;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 35;\nloop invariant j <= -15;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 36;\nloop invariant j <= -16;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\n*/\n```",
            "```\n/*@\n\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= 10;\nloop invariant 1 <= j <= 9;\nloop invariant i == 1 + 2 * (j - i + 1);\nloop invariant j == 10 - (i - 1) / 2;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\nloop invariant i >= j;\nloop invariant i + j == 11;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 1 <= i <= 10 is partially proven to be inductive.\nloop invariant 1 <= j <= 9 is preserved but not established.\nloop invariant i == 1 + 2 * (j - i + 1) is partially proven to be inductive.\nloop invariant j == 10 - (i - 1) / 2 is partially proven to be inductive.\nloop invariant i + j == 11 is partially proven to be inductive.\nloop invariant i >= j is partially proven to be inductive.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\nloop invariant i1: 1 <= i <= 10;\n\n\nloop invariant i4: j == 10 - (i - 1) / 2;\n\n\n*/\nwhile (j >= i) {\n\ti = i + 2;\n\tj = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant i = 1;\nloop invariant j = 10;\nloop invariant k = 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 12: Assignment operators not allowed in annotations.",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n\n\n*/\nwhile (j >= i) {\n\ti = i + 2;\n\tj = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\n\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 12: unexpected token ''",
                "houdini_error": "No annotations found"
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j >= 0;\nloop invariant i <= 19;\nloop invariant i >= 1;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant i >= 1 is inductive.\nloop invariant j <= 10 is inductive.\nloop invariant j >= 0 is inductive.\nloop invariant i <= 19 is inductive.\nAssertion j == 6: Unproven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\nloop invariant i1: i >= 1;\nloop invariant i2: j <= 10;\nloop invariant i3: j >= 0;\nloop invariant i4: i <= 19;\n*/\nwhile (j >= i) {\n\ti = i + 2;\n\tj = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 11;\nloop invariant 0 <= j <= 9;\nloop invariant 1 <= i <= j;\nloop invariant i + j == 10;\nloop invariant i * i + j * j == 100;\nloop invariant i * i + j * j == 100 ==> i * i + j * j == 100;\nloop invariant i + j == 10 ==> i + j == 10;\nloop invariant i * i + j * j == 100 ==> i * i + j * j == 100;\nloop invariant i + j == 10 ==> i + j == 10;\nloop invariant i <= j ==> i <= j;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\nloop invariant i == 1 ==> i == 1;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= i <= 11 is partially proven to be inductive.\nloop invariant 0 <= j <= 9 is preserved but not established.\nloop invariant 1 <= i <= j is partially proven to be inductive.\nloop invariant i + j == 10 is partially proven to be inductive.\nloop invariant i * i + j * j == 100 is partially proven to be inductive.\nloop invariant i * i + j * j == 100 ==> i * i + j * j == 100 is partially proven to be inductive.\nloop invariant i + j == 10 ==> i + j == 10 is partially proven to be inductive.\nloop invariant i <= j ==> i <= j is partially proven to be inductive.\nloop invariant i == 1 ==> i == 1 is partially proven to be inductive.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n\n\n\n\nloop invariant i6: i * i + j * j == 100 ==> i * i + j * j == 100;\nloop invariant i7: i + j == 10 ==> i + j == 10;\nloop invariant i8: i <= j ==> i <= j;\nloop invariant i9: i == 1 ==> i == 1;\n*/\nwhile (j >= i) {\n\ti = i + 2;\n\tj = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant j <= 10;\nloop invariant i % 2 == 0;\nloop invariant i >= j;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= i <= 10 is partially proven to be inductive.\nloop invariant j <= 10 is partially proven to be inductive.\nloop invariant i % 2 == 0 is preserved but not established.\nloop invariant i >= j is partially proven to be inductive.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\nloop invariant i2: j <= 10;\n\n\n*/\nwhile (j >= i) {\n\ti = i + 2;\n\tj = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j <= 10; loop invariant i % 2 == 0; loop invariant j % 2 == 0; loop invariant i + j <= 20; loop invariant i <= j; loop invariant i + j == 10 + j - i; loop invariant i + j == 10 + j - i - 1; loop invariant i + j == 10 + j - i - 2; loop invariant i + j == 10 + j - i - 3; loop invariant i + j == 10 + j - i - 4; loop invariant i + j == 10 + j - i - 5; loop invariant i + j == 10 + j - i - 6; loop invariant i + j == 10 + j - i - 7; loop invariant i + j == 10 + j - i - 8; loop invariant i + j == 10 + j - i - 9; loop invariant i + j == 10 + j - i - 10; loop invariant i + j == 10 + j - i - 11; loop invariant i + j == 10 + j - i - 12; loop invariant i + j == 10 + j - i - 13; loop invariant i + j == 10 + j - i - 14; loop invariant i + j == 10 + j - i - 15; loop invariant i + j == 10 + j - i - 16; loop invariant i + j == 10 + j - i - 17; loop invariant i + j == 10 + j - i - 18; loop invariant i + j == 10 + j - i - 19; loop invariant i + j == 10 + j - i - 20; loop invariant i + j == 10 + j - i - 21; loop invariant i + j == 10 + j - i - 22; loop invariant i + j == 10 + j - i - 23; loop invariant i + j == 10 + j - i - 24; loop invariant i + j == 10 + j - i - 25; loop invariant i + j == 10 + j - i - 26; loop invariant i + j == 10 + j - i - 27; loop invariant i + j == 10 + j - i - 28; loop invariant i + j == 10 + j - i - 29; loop invariant i + j == 10 + j - i - 30; loop invariant i + j == 10 + j - i - 31; loop invariant i + j == 10 + j - i - 32; loop invariant i + j == 10 + j - i - 33; loop invariant i + j == 10 + j - i - 34; loop invariant i + j == 10 + j - i - 35; loop invariant i + j == 10 + j - i - 36; loop invariant i + j == 10 + j - i - 37; loop invariant i + j == 10 + j - i - 38; loop invariant i + j == 10 + j - i - 39; loop invariant i + j == 10 + j - i - 40; loop invariant i + j == 10 + j - i - 41; loop invariant i + j == 10 + j - i - 42; loop invariant i + j == 10 + j - i - 43; loop invariant i + j == 10 + j - i - 44; loop invariant i + j == 10 + j - i - 45; loop invariant i + j == 10 + j - i - 46; loop invariant i + j == 10 + j - i - 47; loop invariant i + j == 10 + j - i - 48; loop invariant i + j == 10 + j - i - 49; loop invariant i + j == 10 + j - i - 50; loop invariant i + j == 10 + j - i - 51; loop invariant i + j == 10 + j - i - 52;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= i <= j <= 10; loop invariant i % 2 == 0; loop invariant j % 2 == 0; loop invariant i + j <= 20; loop invariant i <= j; loop invariant i + j == 10 + j - i; loop invariant i + j == 10 + j - i - 1; loop invariant i + j == 10 + j - i - 2; loop invariant i + j == 10 + j - i - 3; loop invariant i + j == 10 + j - i - 4; loop invariant i + j == 10 + j - i - 5; loop invariant i + j == 10 + j - i - 6; loop invariant i + j == 10 + j - i - 7; loop invariant i + j == 10 + j - i - 8; loop invariant i + j == 10 + j - i - 9; loop invariant i + j == 10 + j - i - 10; loop invariant i + j == 10 + j - i - 11; loop invariant i + j == 10 + j - i - 12; loop invariant i + j == 10 + j - i - 13; loop invariant i + j == 10 + j - i - 14; loop invariant i + j == 10 + j - i - 15; loop invariant i + j == 10 + j - i - 16; loop invariant i + j == 10 + j - i - 17; loop invariant i + j == 10 + j - i - 18; loop invariant i + j == 10 + j - i - 19; loop invariant i + j == 10 + j - i - 20; loop invariant i + j == 10 + j - i - 21; loop invariant i + j == 10 + j - i - 22; loop invariant i + j == 10 + j - i - 23; loop invariant i + j == 10 + j - i - 24; loop invariant i + j == 10 + j - i - 25; loop invariant i + j == 10 + j - i - 26; loop invariant i + j == 10 + j - i - 27; loop invariant i + j == 10 + j - i - 28; loop invariant i + j == 10 + j - i - 29; loop invariant i + j == 10 + j - i - 30; loop invariant i + j == 10 + j - i - 31; loop invariant i + j == 10 + j - i - 32; loop invariant i + j == 10 + j - i - 33; loop invariant i + j == 10 + j - i - 34; loop invariant i + j == 10 + j - i - 35; loop invariant i + j == 10 + j - i - 36; loop invariant i + j == 10 + j - i - 37; loop invariant i + j == 10 + j - i - 38; loop invariant i + j == 10 + j - i - 39; loop invariant i + j == 10 + j - i - 40; loop invariant i + j == 10 + j - i - 41; loop invariant i + j == 10 + j - i - 42; loop invariant i + j == 10 + j - i - 43; loop invariant i + j == 10 + j - i - 44; loop invariant i + j == 10 + j - i - 45; loop invariant i + j == 10 + j - i - 46; loop invariant i + j == 10 + j - i - 47; loop invariant i + j == 10 + j - i - 48; loop invariant i + j == 10 + j - i - 49; loop invariant i + j == 10 + j - i - 50; loop invariant i + j == 10 + j - i - 51; loop invariant i + j == 10 + j - i - 52 is partially proven to be inductive.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\nloop invariant i1: 0 <= i <= j <= 10; loop invariant i % 2 == 0; loop invariant j % 2 == 0; loop invariant i + j <= 20; loop invariant i <= j; loop invariant i + j == 10 + j - i; loop invariant i + j == 10 + j - i - 1; loop invariant i + j == 10 + j - i - 2; loop invariant i + j == 10 + j - i - 3; loop invariant i + j == 10 + j - i - 4; loop invariant i + j == 10 + j - i - 5; loop invariant i + j == 10 + j - i - 6; loop invariant i + j == 10 + j - i - 7; loop invariant i + j == 10 + j - i - 8; loop invariant i + j == 10 + j - i - 9; loop invariant i + j == 10 + j - i - 10; loop invariant i + j == 10 + j - i - 11; loop invariant i + j == 10 + j - i - 12; loop invariant i + j == 10 + j - i - 13; loop invariant i + j == 10 + j - i - 14; loop invariant i + j == 10 + j - i - 15; loop invariant i + j == 10 + j - i - 16; loop invariant i + j == 10 + j - i - 17; loop invariant i + j == 10 + j - i - 18; loop invariant i + j == 10 + j - i - 19; loop invariant i + j == 10 + j - i - 20; loop invariant i + j == 10 + j - i - 21; loop invariant i + j == 10 + j - i - 22; loop invariant i + j == 10 + j - i - 23; loop invariant i + j == 10 + j - i - 24; loop invariant i + j == 10 + j - i - 25; loop invariant i + j == 10 + j - i - 26; loop invariant i + j == 10 + j - i - 27; loop invariant i + j == 10 + j - i - 28; loop invariant i + j == 10 + j - i - 29; loop invariant i + j == 10 + j - i - 30; loop invariant i + j == 10 + j - i - 31; loop invariant i + j == 10 + j - i - 32; loop invariant i + j == 10 + j - i - 33; loop invariant i + j == 10 + j - i - 34; loop invariant i + j == 10 + j - i - 35; loop invariant i + j == 10 + j - i - 36; loop invariant i + j == 10 + j - i - 37; loop invariant i + j == 10 + j - i - 38; loop invariant i + j == 10 + j - i - 39; loop invariant i + j == 10 + j - i - 40; loop invariant i + j == 10 + j - i - 41; loop invariant i + j == 10 + j - i - 42; loop invariant i + j == 10 + j - i - 43; loop invariant i + j == 10 + j - i - 44; loop invariant i + j == 10 + j - i - 45; loop invariant i + j == 10 + j - i - 46; loop invariant i + j == 10 + j - i - 47; loop invariant i + j == 10 + j - i - 48; loop invariant i + j == 10 + j - i - 49; loop invariant i + j == 10 + j - i - 50; loop invariant i + j == 10 + j - i - 51; loop invariant i + j == 10 + j - i - 52;\n*/\nwhile (j >= i) {\n\ti = i + 2;\n\tj = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant j >= i;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= i <= j is established but not preserved.\nloop invariant i % 2 == 1 is partially proven to be inductive.\nloop invariant j % 2 == 0 is established but not preserved.\nloop invariant j >= i is partially proven to be inductive.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\nloop invariant i2: i % 2 == 1;\n\n\n*/\nwhile (j >= i) {\n\ti = i + 2;\n\tj = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant 0 <= j <= 10;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant j >= i;\nloop invariant i <= 10;\nloop invariant j >= 0;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= i <= 10 is established but not preserved.\nloop invariant 0 <= j <= 10 is partially proven to be inductive.\nloop invariant i % 2 == 1 is partially proven to be inductive.\nloop invariant i <= j is established but not preserved.\nloop invariant j >= i is partially proven to be inductive.\nloop invariant i <= 10 is partially proven to be inductive.\nloop invariant j >= 0 is partially proven to be inductive.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\nloop invariant i2: 0 <= j <= 10;\nloop invariant i3: i % 2 == 1;\n\n\n\nloop invariant i7: j >= 0;\n*/\nwhile (j >= i) {\n\ti = i + 2;\n\tj = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= 10;\nloop invariant 0 <= i <= 11;\nloop invariant i <= j;\nloop invariant (i % 2 == 1);\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= j <= 10 is partially proven to be inductive.\nloop invariant 0 <= i <= 11 is partially proven to be inductive.\nloop invariant i <= j is established but not preserved.\nloop invariant (i % 2 == 1) is partially proven to be inductive.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\nloop invariant i1: 0 <= j <= 10;\nloop invariant i2: 0 <= i <= 11;\n\nloop invariant i4: (i % 2 == 1);\n*/\nwhile (j >= i) {\n\ti = i + 2;\n\tj = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant -10 <= j <= 10;\nloop invariant i > j;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= i <= 10 is partially proven to be inductive.\nloop invariant -10 <= j <= 10 is partially proven to be inductive.\nloop invariant i > j is preserved but not established.\nloop invariant i % 2 == 0 is partially proven to be inductive.\nloop invariant j % 2 == 1 is partially proven to be inductive.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n\n\n\n\n*/\nwhile (j >= i) {\n\ti = i + 2;\n\tj = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant i >= 1;\nloop invariant j >= i;\nloop invariant j <= 10;\nloop invariant i <= j;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i + j == 11;\nloop invariant i - j == 1;\nloop invariant i + j == 11;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i == 1 + 2 * (10 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\nloop invariant i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant j == 10 - (10 - j) / 2 * 2;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant i >= 1 is partially proven to be inductive.\nloop invariant j >= i is partially proven to be inductive.\nloop invariant j <= 10 is partially proven to be inductive.\nloop invariant i <= j is partially proven to be inductive.\nloop invariant i % 2 == 1 is partially proven to be inductive.\nloop invariant j % 2 == 0 is partially proven to be inductive.\nloop invariant i + j == 11 is partially proven to be inductive.\nloop invariant i - j == 1 is preserved but not established.\nloop invariant i == 1 + 2 * (10 - j) / 2 is partially proven to be inductive.\nloop invariant j == 10 - (10 - j) / 2 * 2 is partially proven to be inductive.\nloop invariant i == 1 + (10 - j) * (11 - j) / 2 is partially proven to be inductive.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\nloop invariant i1: i >= 1;\n\nloop invariant i3: j <= 10;\n\nloop invariant i5: i % 2 == 1;\n\n\n\n\n\n\n*/\nwhile (j >= i) {\n\ti = i + 2;\n\tj = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= j + 1;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 1 <= i <= j + 1 is established but not preserved.\nloop invariant i % 2 == 1 is partially proven to be inductive.\nloop invariant j % 2 == 0 is established but not preserved.\nAssertion j == 6: Unproven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\nloop invariant i2: i % 2 == 1;\n\n*/\nwhile (j >= i) {\n\ti = i + 2;\n\tj = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 32,
                "annotations": "```\n/*@\nloop invariant j >= i;\nloop invariant i % 2 == 1;\nloop invariant i >= 1;\nloop invariant j >= -1;\nloop invariant j >= i;\nloop invariant j % 2 == -1;\nloop invariant i <= 9;\nloop invariant j <= 10;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 11;\nloop invariant j <= 9;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 12;\nloop invariant j <= 8;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 13;\nloop invariant j <= 7;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 14;\nloop invariant j <= 6;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 15;\nloop invariant j <= 5;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 16;\nloop invariant j <= 4;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 17;\nloop invariant j <= 3;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 18;\nloop invariant j <= 2;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 19;\nloop invariant j <= 1;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 20;\nloop invariant j <= 0;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 21;\nloop invariant j <= -1;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 22;\nloop invariant j <= -2;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 23;\nloop invariant j <= -3;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 24;\nloop invariant j <= -4;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 25;\nloop invariant j <= -5;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 26;\nloop invariant j <= -6;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 27;\nloop invariant j <= -7;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 28;\nloop invariant j <= -8;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 29;\nloop invariant j <= -9;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 30;\nloop invariant j <= -10;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 31;\nloop invariant j <= -11;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 32;\nloop invariant j <= -12;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 33;\nloop invariant j <= -13;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 34;\nloop invariant j <= -14;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 35;\nloop invariant j <= -15;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\nloop invariant i <= 36;\nloop invariant j <= -16;\nloop invariant i <= j;\nloop invariant i >= -1;\nloop invariant j >= 1;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant j >= i is partially proven to be inductive.\nloop invariant i % 2 == 1 is partially proven to be inductive.\nloop invariant i >= 1 is partially proven to be inductive.\nloop invariant j >= -1 is partially proven to be inductive.\nloop invariant j % 2 == -1 is preserved but not established.\nloop invariant i <= 9 is partially proven to be inductive.\nloop invariant j <= 10 is partially proven to be inductive.\nloop invariant i <= j is partially proven to be inductive.\nloop invariant i >= -1 is partially proven to be inductive.\nloop invariant j >= 1 is partially proven to be inductive.\nloop invariant i <= 11 is partially proven to be inductive.\nloop invariant j <= 9 is partially proven to be inductive.\nloop invariant i <= 12 is partially proven to be inductive.\nloop invariant j <= 8 is partially proven to be inductive.\nloop invariant i <= 13 is partially proven to be inductive.\nloop invariant j <= 7 is partially proven to be inductive.\nloop invariant i <= 14 is partially proven to be inductive.\nloop invariant j <= 6 is partially proven to be inductive.\nloop invariant i <= 15 is partially proven to be inductive.\nloop invariant j <= 5 is partially proven to be inductive.\nloop invariant i <= 16 is partially proven to be inductive.\nloop invariant j <= 4 is partially proven to be inductive.\nloop invariant i <= 17 is partially proven to be inductive.\nloop invariant j <= 3 is partially proven to be inductive.\nloop invariant i <= 18 is partially proven to be inductive.\nloop invariant j <= 2 is partially proven to be inductive.\nloop invariant i <= 19 is partially proven to be inductive.\nloop invariant j <= 1 is partially proven to be inductive.\nloop invariant i <= 20 is partially proven to be inductive.\nloop invariant j <= 0 is partially proven to be inductive.\nloop invariant i <= 21 is partially proven to be inductive.\nloop invariant j <= -1 is partially proven to be inductive.\nloop invariant i <= 22 is partially proven to be inductive.\nloop invariant j <= -2 is partially proven to be inductive.\nloop invariant i <= 23 is partially proven to be inductive.\nloop invariant j <= -3 is partially proven to be inductive.\nloop invariant i <= 24 is partially proven to be inductive.\nloop invariant j <= -4 is partially proven to be inductive.\nloop invariant i <= 25 is partially proven to be inductive.\nloop invariant j <= -5 is partially proven to be inductive.\nloop invariant i <= 26 is partially proven to be inductive.\nloop invariant j <= -6 is partially proven to be inductive.\nloop invariant i <= 27 is partially proven to be inductive.\nloop invariant j <= -7 is partially proven to be inductive.\nloop invariant i <= 28 is partially proven to be inductive.\nloop invariant j <= -8 is partially proven to be inductive.\nloop invariant i <= 29 is partially proven to be inductive.\nloop invariant j <= -9 is partially proven to be inductive.\nloop invariant i <= 30 is partially proven to be inductive.\nloop invariant j <= -10 is partially proven to be inductive.\nloop invariant i <= 31 is partially proven to be inductive.\nloop invariant j <= -11 is partially proven to be inductive.\nloop invariant i <= 32 is partially proven to be inductive.\nloop invariant j <= -12 is partially proven to be inductive.\nloop invariant i <= 33 is partially proven to be inductive.\nloop invariant j <= -13 is partially proven to be inductive.\nloop invariant i <= 34 is partially proven to be inductive.\nloop invariant j <= -14 is partially proven to be inductive.\nloop invariant i <= 35 is partially proven to be inductive.\nloop invariant j <= -15 is partially proven to be inductive.\nloop invariant i <= 36 is partially proven to be inductive.\nloop invariant j <= -16 is partially proven to be inductive.\nAssertion j == 6: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\nloop invariant i2: i % 2 == 1;\nloop invariant i3: i >= 1;\nloop invariant i4: j >= -1;\n\n\nloop invariant i7: j <= 10;\n\nloop invariant i9: i >= -1;\n\nloop invariant i11: i <= 11;\n\nloop invariant i13: i <= 12;\n\nloop invariant i15: i <= 13;\n\nloop invariant i17: i <= 14;\n\nloop invariant i19: i <= 15;\n\nloop invariant i21: i <= 16;\n\nloop invariant i23: i <= 17;\n\nloop invariant i25: i <= 18;\n\nloop invariant i27: i <= 19;\n\nloop invariant i29: i <= 20;\n\nloop invariant i31: i <= 21;\n\nloop invariant i33: i <= 22;\n\nloop invariant i35: i <= 23;\n\nloop invariant i37: i <= 24;\n\nloop invariant i39: i <= 25;\n\nloop invariant i41: i <= 26;\n\nloop invariant i43: i <= 27;\n\nloop invariant i45: i <= 28;\n\nloop invariant i47: i <= 29;\n\nloop invariant i49: i <= 30;\n\nloop invariant i51: i <= 31;\n\nloop invariant i53: i <= 32;\n\nloop invariant i55: i <= 33;\n\nloop invariant i57: i <= 34;\n\nloop invariant i59: i <= 35;\n\nloop invariant i61: i <= 36;\n\n*/\nwhile (j >= i) {\n\ti = i + 2;\n\tj = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\n\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 12: unexpected token ''",
                "houdini_error": "No annotations found"
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 18: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\nloop invariant i1: 1 <= i <= 10;\nloop invariant i2: 1 <= j <= 9;\nloop invariant i3: i == 1 + 2 * (j - i + 1);\nloop invariant i4: j == 10 - (i - 1) / 2;\nloop invariant i5: i + j == 11;\nloop invariant i6: i >= j;\nloop invariant i7: i = 1;\nloop invariant i8: j = 10;\nloop invariant i9: k = 0;\nloop invariant i10: i >= 1;\nloop invariant i11: j <= 10;\nloop invariant i12: j >= 0;\nloop invariant i13: i <= 19;\nloop invariant i14: 0 <= i <= 11;\nloop invariant i15: 0 <= j <= 9;\nloop invariant i16: 1 <= i <= j;\nloop invariant i17: i + j == 10;\nloop invariant i18: i * i + j * j == 100;\nloop invariant i19: i * i + j * j == 100 ==> i * i + j * j == 100;\nloop invariant i20: i + j == 10 ==> i + j == 10;\nloop invariant i21: i <= j ==> i <= j;\nloop invariant i22: i == 1 ==> i == 1;\nloop invariant i23: 0 <= i <= 10;\nloop invariant i24: i % 2 == 0;\nloop invariant i25: 0 <= i <= j <= 10; loop invariant i % 2 == 0; loop invariant j % 2 == 0; loop invariant i + j <= 20; loop invariant i <= j; loop invariant i + j == 10 + j - i; loop invariant i + j == 10 + j - i - 1; loop invariant i + j == 10 + j - i - 2; loop invariant i + j == 10 + j - i - 3; loop invariant i + j == 10 + j - i - 4; loop invariant i + j == 10 + j - i - 5; loop invariant i + j == 10 + j - i - 6; loop invariant i + j == 10 + j - i - 7; loop invariant i + j == 10 + j - i - 8; loop invariant i + j == 10 + j - i - 9; loop invariant i + j == 10 + j - i - 10; loop invariant i + j == 10 + j - i - 11; loop invariant i + j == 10 + j - i - 12; loop invariant i + j == 10 + j - i - 13; loop invariant i + j == 10 + j - i - 14; loop invariant i + j == 10 + j - i - 15; loop invariant i + j == 10 + j - i - 16; loop invariant i + j == 10 + j - i - 17; loop invariant i + j == 10 + j - i - 18; loop invariant i + j == 10 + j - i - 19; loop invariant i + j == 10 + j - i - 20; loop invariant i + j == 10 + j - i - 21; loop invariant i + j == 10 + j - i - 22; loop invariant i + j == 10 + j - i - 23; loop invariant i + j == 10 + j - i - 24; loop invariant i + j == 10 + j - i - 25; loop invariant i + j == 10 + j - i - 26; loop invariant i + j == 10 + j - i - 27; loop invariant i + j == 10 + j - i - 28; loop invariant i + j == 10 + j - i - 29; loop invariant i + j == 10 + j - i - 30; loop invariant i + j == 10 + j - i - 31; loop invariant i + j == 10 + j - i - 32; loop invariant i + j == 10 + j - i - 33; loop invariant i + j == 10 + j - i - 34; loop invariant i + j == 10 + j - i - 35; loop invariant i + j == 10 + j - i - 36; loop invariant i + j == 10 + j - i - 37; loop invariant i + j == 10 + j - i - 38; loop invariant i + j == 10 + j - i - 39; loop invariant i + j == 10 + j - i - 40; loop invariant i + j == 10 + j - i - 41; loop invariant i + j == 10 + j - i - 42; loop invariant i + j == 10 + j - i - 43; loop invariant i + j == 10 + j - i - 44; loop invariant i + j == 10 + j - i - 45; loop invariant i + j == 10 + j - i - 46; loop invariant i + j == 10 + j - i - 47; loop invariant i + j == 10 + j - i - 48; loop invariant i + j == 10 + j - i - 49; loop invariant i + j == 10 + j - i - 50; loop invariant i + j == 10 + j - i - 51; loop invariant i + j == 10 + j - i - 52;\nloop invariant i26: 0 <= i <= j;\nloop invariant i27: i % 2 == 1;\nloop invariant i28: j % 2 == 0;\nloop invariant i29: j >= i;\nloop invariant i30: 0 <= j <= 10;\nloop invariant i31: i <= j;\nloop invariant i32: i <= 10;\nloop invariant i33: (i % 2 == 1);\nloop invariant i34: -10 <= j <= 10;\nloop invariant i35: i > j;\nloop invariant i36: j % 2 == 1;\nloop invariant i37: i - j == 1;\nloop invariant i38: i == 1 + 2 * (10 - j) / 2;\nloop invariant i39: j == 10 - (10 - j) / 2 * 2;\nloop invariant i40: i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant i41: 1 <= i <= j + 1;\nloop invariant i42: j >= -1;\nloop invariant i43: j % 2 == -1;\nloop invariant i44: i <= 9;\nloop invariant i45: i >= -1;\nloop invariant i46: j >= 1;\nloop invariant i47: i <= 11;\nloop invariant i48: j <= 9;\nloop invariant i49: i <= 12;\nloop invariant i50: j <= 8;\nloop invariant i51: i <= 13;\nloop invariant i52: j <= 7;\nloop invariant i53: i <= 14;\nloop invariant i54: j <= 6;\nloop invariant i55: i <= 15;\nloop invariant i56: j <= 5;\nloop invariant i57: i <= 16;\nloop invariant i58: j <= 4;\nloop invariant i59: i <= 17;\nloop invariant i60: j <= 3;\nloop invariant i61: i <= 18;\nloop invariant i62: j <= 2;\nloop invariant i63: j <= 1;\nloop invariant i64: i <= 20;\nloop invariant i65: j <= 0;\nloop invariant i66: i <= 21;\nloop invariant i67: j <= -1;\nloop invariant i68: i <= 22;\nloop invariant i69: j <= -2;\nloop invariant i70: i <= 23;\nloop invariant i71: j <= -3;\nloop invariant i72: i <= 24;\nloop invariant i73: j <= -4;\nloop invariant i74: i <= 25;\nloop invariant i75: j <= -5;\nloop invariant i76: i <= 26;\nloop invariant i77: j <= -6;\nloop invariant i78: i <= 27;\nloop invariant i79: j <= -7;\nloop invariant i80: i <= 28;\nloop invariant i81: j <= -8;\nloop invariant i82: i <= 29;\nloop invariant i83: j <= -9;\nloop invariant i84: i <= 30;\nloop invariant i85: j <= -10;\nloop invariant i86: i <= 31;\nloop invariant i87: j <= -11;\nloop invariant i88: i <= 32;\nloop invariant i89: j <= -12;\nloop invariant i90: i <= 33;\nloop invariant i91: j <= -13;\nloop invariant i92: i <= 34;\nloop invariant i93: j <= -14;\nloop invariant i94: i <= 35;\nloop invariant i95: j <= -15;\nloop invariant i96: i <= 36;\nloop invariant i97: j <= -16;\n*/\nwhile (j >= i) {\n\ti = i + 2;\n\tj = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n}",
        "combined_annotation_num_solver_calls": 12,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nvoid main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\nloop invariant i1: 1 <= i <= 10;\n\n\nloop invariant i4: j == 10 - (i - 1) / 2;\nloop invariant i5: i + j == 11;\n\n\n\n\nloop invariant i10: i >= 1;\nloop invariant i11: j <= 10;\nloop invariant i12: j >= 0;\nloop invariant i13: i <= 19;\nloop invariant i14: 0 <= i <= 11;\n\nloop invariant i16: 1 <= i <= j;\n\n\nloop invariant i19: i * i + j * j == 100 ==> i * i + j * j == 100;\nloop invariant i20: i + j == 10 ==> i + j == 10;\nloop invariant i21: i <= j ==> i <= j;\nloop invariant i22: i == 1 ==> i == 1;\nloop invariant i23: 0 <= i <= 10;\n\nloop invariant i25: 0 <= i <= j <= 10; loop invariant i % 2 == 0; loop invariant j % 2 == 0; loop invariant i + j <= 20; loop invariant i <= j; loop invariant i + j == 10 + j - i; loop invariant i + j == 10 + j - i - 1; loop invariant i + j == 10 + j - i - 2; loop invariant i + j == 10 + j - i - 3; loop invariant i + j == 10 + j - i - 4; loop invariant i + j == 10 + j - i - 5; loop invariant i + j == 10 + j - i - 6; loop invariant i + j == 10 + j - i - 7; loop invariant i + j == 10 + j - i - 8; loop invariant i + j == 10 + j - i - 9; loop invariant i + j == 10 + j - i - 10; loop invariant i + j == 10 + j - i - 11; loop invariant i + j == 10 + j - i - 12; loop invariant i + j == 10 + j - i - 13; loop invariant i + j == 10 + j - i - 14; loop invariant i + j == 10 + j - i - 15; loop invariant i + j == 10 + j - i - 16; loop invariant i + j == 10 + j - i - 17; loop invariant i + j == 10 + j - i - 18; loop invariant i + j == 10 + j - i - 19; loop invariant i + j == 10 + j - i - 20; loop invariant i + j == 10 + j - i - 21; loop invariant i + j == 10 + j - i - 22; loop invariant i + j == 10 + j - i - 23; loop invariant i + j == 10 + j - i - 24; loop invariant i + j == 10 + j - i - 25; loop invariant i + j == 10 + j - i - 26; loop invariant i + j == 10 + j - i - 27; loop invariant i + j == 10 + j - i - 28; loop invariant i + j == 10 + j - i - 29; loop invariant i + j == 10 + j - i - 30; loop invariant i + j == 10 + j - i - 31; loop invariant i + j == 10 + j - i - 32; loop invariant i + j == 10 + j - i - 33; loop invariant i + j == 10 + j - i - 34; loop invariant i + j == 10 + j - i - 35; loop invariant i + j == 10 + j - i - 36; loop invariant i + j == 10 + j - i - 37; loop invariant i + j == 10 + j - i - 38; loop invariant i + j == 10 + j - i - 39; loop invariant i + j == 10 + j - i - 40; loop invariant i + j == 10 + j - i - 41; loop invariant i + j == 10 + j - i - 42; loop invariant i + j == 10 + j - i - 43; loop invariant i + j == 10 + j - i - 44; loop invariant i + j == 10 + j - i - 45; loop invariant i + j == 10 + j - i - 46; loop invariant i + j == 10 + j - i - 47; loop invariant i + j == 10 + j - i - 48; loop invariant i + j == 10 + j - i - 49; loop invariant i + j == 10 + j - i - 50; loop invariant i + j == 10 + j - i - 51; loop invariant i + j == 10 + j - i - 52;\nloop invariant i26: 0 <= i <= j;\nloop invariant i27: i % 2 == 1;\nloop invariant i28: j % 2 == 0;\nloop invariant i29: j >= i;\nloop invariant i30: 0 <= j <= 10;\nloop invariant i31: i <= j;\nloop invariant i32: i <= 10;\nloop invariant i33: (i % 2 == 1);\nloop invariant i34: -10 <= j <= 10;\nloop invariant i35: i > j;\nloop invariant i36: j % 2 == 1;\nloop invariant i37: i - j == 1;\nloop invariant i38: i == 1 + 2 * (10 - j) / 2;\nloop invariant i39: j == 10 - (10 - j) / 2 * 2;\nloop invariant i40: i == 1 + (10 - j) * (11 - j) / 2;\nloop invariant i41: 1 <= i <= j + 1;\nloop invariant i42: j >= -1;\nloop invariant i43: j % 2 == -1;\nloop invariant i44: i <= 9;\nloop invariant i45: i >= -1;\nloop invariant i46: j >= 1;\nloop invariant i47: i <= 11;\nloop invariant i48: j <= 9;\nloop invariant i49: i <= 12;\nloop invariant i50: j <= 8;\nloop invariant i51: i <= 13;\nloop invariant i52: j <= 7;\nloop invariant i53: i <= 14;\nloop invariant i54: j <= 6;\nloop invariant i55: i <= 15;\nloop invariant i56: j <= 5;\nloop invariant i57: i <= 16;\nloop invariant i58: j <= 4;\nloop invariant i59: i <= 17;\nloop invariant i60: j <= 3;\nloop invariant i61: i <= 18;\nloop invariant i62: j <= 2;\nloop invariant i63: j <= 1;\nloop invariant i64: i <= 20;\nloop invariant i65: j <= 0;\nloop invariant i66: i <= 21;\nloop invariant i67: j <= -1;\nloop invariant i68: i <= 22;\nloop invariant i69: j <= -2;\nloop invariant i70: i <= 23;\nloop invariant i71: j <= -3;\nloop invariant i72: i <= 24;\nloop invariant i73: j <= -4;\nloop invariant i74: i <= 25;\nloop invariant i75: j <= -5;\nloop invariant i76: i <= 26;\nloop invariant i77: j <= -6;\nloop invariant i78: i <= 27;\nloop invariant i79: j <= -7;\nloop invariant i80: i <= 28;\nloop invariant i81: j <= -8;\nloop invariant i82: i <= 29;\nloop invariant i83: j <= -9;\nloop invariant i84: i <= 30;\nloop invariant i85: j <= -10;\nloop invariant i86: i <= 31;\nloop invariant i87: j <= -11;\nloop invariant i88: i <= 32;\nloop invariant i89: j <= -12;\nloop invariant i90: i <= 33;\nloop invariant i91: j <= -13;\nloop invariant i92: i <= 34;\nloop invariant i93: j <= -14;\nloop invariant i94: i <= 35;\nloop invariant i95: j <= -15;\nloop invariant i96: i <= 36;\nloop invariant i97: j <= -16;\n*/\nwhile (j >= i) {\n\ti = i + 2;\n\tj = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/MADWiFi-encode_ie_ok.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/fig2.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/MADWiFi-encode_ie_ok_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/vnew2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/bin-suffix-5.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cggmp2005_true-unreach-call.c"
        ],
        "skipped": [],
        "total": 6,
        "success_count": 2,
        "failure_count": 4,
        "success_rate": 0.3333333333333333
    }
}