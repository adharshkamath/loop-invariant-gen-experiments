{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n  int  x=0;\n\n  while(1)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n\n  {;\n//@ assert(x!=0);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= 1;\nloop invariant x == 0;\nloop invariant x == 0 ==> 1;\nloop invariant x == 0 ==> x == 0;\nloop invariant 0 <= x <= 1;\nloop invariant x == 0;\nloop invariant x == 0 ==> 1;\nloop invariant x == 0 ==> x == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant x == 0;\nloop invariant x != 0 ==> false;\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 1;\nloop invariant x%2==0;\nloop invariant x%3==0;\nloop invariant x%5==0;\nloop invariant x%7==0;\nloop invariant x%11==0;\nloop invariant x%13==0;\nloop invariant x%17==0;\nloop invariant x%19==0;\nloop invariant x%23==0;\nloop invariant x%29==0;\nloop invariant x%31==0;\nloop invariant x%37==0;\nloop invariant x%41==0;\nloop invariant x%43==0;\nloop invariant x%47==0;\nloop invariant x%53==0;\nloop invariant x%59==0;\nloop invariant x%61==0;\nloop invariant x%67==0;\nloop invariant x%71==0;\nloop invariant x%73==0;\nloop invariant x%79==0;\nloop invariant x%83==0;\nloop invariant x%89==0;\nloop invariant x%97==0;\nloop invariant x%101==0;\nloop invariant x%103==0;\nloop invariant x%107==0;\nloop invariant x%109==0;\nloop invariant x%113==0;\nloop invariant x%127==0;\nloop invariant x%131==0;\nloop invariant x%137==0;\nloop invariant x%139==0;\nloop invariant x%149==0;\nloop invariant x%151==0;\nloop invariant x%157==0;\nloop invariant x%163==0;\nloop invariant x%167==0;\nloop invariant x%173==0;\nloop invariant x%179==0;\nloop invariant x%181==0;\nloop invariant x%191==0;\nloop invariant x%193==0;\nloop invariant x%197==0;\nloop invariant x%199==0;\nloop invariant x%211==0;\nloop invariant x%223==0;\nloop invariant x%227==0;\nloop invariant x%229==0;\nloop invariant x%233==0;\nloop invariant x%239==0;\nloop invariant x%241==0;\nloop invariant x%251==0;\nloop invariant x%257==0;\nloop invariant x%263==0;\nloop invariant x%269==0;\nloop invariant x%271==0;\nloop invariant x%277==0;\nloop invariant x%281==0;\nloop invariant x%283==0;\nloop invariant x%293==0;\nloop invariant x%307==0;\nloop invariant x%311==0;\nloop invariant x%313==0;\nloop invariant x%317==0;\nloop invariant x%331==0;\nloop invariant x%337==0;\nloop invariant x%347==0;\nloop invariant x%349==0;\nloop invariant x%353==0;\nloop invariant x%359==0;\nloop invariant x%367==0;\nloop invariant x%373==0;\nloop invariant x%379==0;\nloop invariant x%383==0;\nloop invariant x%389==0;\nloop invariant x%397==0;\nloop invariant x%401==0;\nloop invariant x%409==0;\nloop invariant x%419==0;\nloop invariant x%421==0;\nloop invariant x%431==0;\nloop invariant x%433==0;\nloop invariant x%439==0;\nloop invariant x%443==0;\nloop invariant x%449==0;\nloop invariant x%457==0;\nloop invariant x%461==0;\nloop invariant x%463==0;\nloop invariant x%467==0;\nloop invariant x%479==0;\nloop invariant x%487==0;\nloop invariant x%491==0;\nloop invariant x%499==0;\nloop invariant x%503==0;\nloop invariant x%509==0;\nloop invariant x%521==0;\nloop invariant x%523==0;\nloop invariant x%541==0;\nloop invariant x%547==0;\n*/\n```",
            "```\n/*@\nloop invariant 1. x == 0;\nloop invariant x <= 0;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 >= 0;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant x == 0;\n*/\n```",
            "```\n/*@\nloop invariant x == 0;\nloop invariant !((i1 <= 100000) && (i2 >= 100001));\nloop invariant 0 <= i1 <= 100000;\nloop invariant i2 == i1 + 1;\nloop invariant i3 == i4 + i1;\nloop invariant i5 == i6 + i2;\nloop invariant i7 == i8 * i9;\nloop invariant i10 == i11 * i12;\nloop invariant i13 == i14 * i15;\nloop invariant i16 == i17 * i18;\nloop invariant i19 == i20 * i21;\nloop invariant i22 == i23 * i24;\nloop invariant i25 == i26 * i27;\nloop invariant i28 == i29 * i30;\nloop invariant i31 == i32 * i33;\nloop invariant i34 == i35 * i36;\nloop invariant i37 == i38 * i39;\nloop invariant i40 == i41 * i42;\nloop invariant i43 == i44 * i45;\nloop invariant i46 == i47 * i48;\nloop invariant i49 == i50 * i51;\nloop invariant i52 == i53 * i54;\nloop invariant i55 == i56 * i57;\nloop invariant i58 == i59 * i60;\nloop invariant i61 == i62 * i63;\nloop invariant i64 == i65 * i66;\nloop invariant i67 == i68 * i69;\nloop invariant i70 == i71 * i72;\nloop invariant i73 == i74 * i75;\nloop invariant i76 == i77 * i78;\nloop invariant i79 == i80 * i81;\nloop invariant i82 == i83 * i84;\nloop invariant i85 == i86 * i87;\nloop invariant i88 == i89 * i90;\nloop invariant i91 == i92 * i93;\nloop invariant i94 == i95 * i96;\nloop invariant i97 == i98 * i99;\nloop invariant i100 == i101 * i102;\nloop invariant i103 == i104 * i105;\nloop invariant i106 == i107 * i108;\nloop invariant i109 == i110 * i111;\nloop invariant i112 == i113 * i114;\nloop invariant i115 == i116 * i117;\nloop invariant i118 == i119 * i120;\nloop invariant i121 == i122 * i123;\nloop invariant i124 == i125 * i126;\nloop invariant i127 == i128 * i129;\nloop invariant i130 == i131 * i132;\nloop invariant i133 == i134 * i135;\nloop invariant i136 == i137 * i138;\nloop invariant i139 == i140 * i141;\nloop invariant i142 == i143 * i144;\nloop invariant i145 == i146 * i147;\nloop invariant i148 == i149 * i150;\nloop invariant i151 == i152 * i153;\nloop invariant i154 == i155 * i156;\nloop invariant i157 == i158 * i159;\nloop invariant i160 == i161 * i162;\nloop invariant i163 == i164 * i165;\nloop invariant i166 == i167 * i168;\nloop invariant i169 == i170 * i171;\nloop invariant i172 == i173 * i174;\nloop invariant i175 == i176 * i177;\nloop invariant i178 == i179 * i180;\nloop invariant i181 == i182 * i183;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x == 0 ==> x == i;\nloop invariant x == 0 ==> x == 0;\nloop invariant x == 0 ==> x == x;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 0;\nloop invariant x == 0;\n*/\n```",
            "```\n/*@\nloop invariant x == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 1;\nloop invariant x == 0;\nloop invariant x == 0 ==> 1;\nloop invariant x == 0 ==> x == 0;\nloop invariant 0 <= x <= 1;\nloop invariant x == 0;\nloop invariant x == 0 ==> 1;\nloop invariant x == 0 ==> x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n  int  x=0;\n\n  /*@\nloop invariant i1: 0 <= x <= 1;\nloop invariant i2: x == 0;\nloop invariant i3: x == 0 ==> 1;\nloop invariant i4: x == 0 ==> x == 0;\n*/\nwhile(1)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == 0;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n  int  x=0;\n\n  /*@\nloop invariant i1: 0 <= x;\nloop invariant i2: x == 0;\nloop invariant i3: x >= 0;\nloop invariant i4: x <= 0;\n*/\nwhile(1)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 1;\nloop invariant x == 0;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n  int  x=0;\n\n  /*@\nloop invariant i1: 0 <= x <= 1;\nloop invariant i2: x >= 0;\nloop invariant i3: x <= 1;\nloop invariant i4: x == 0;\n\n*/\nwhile(1)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant x == 0;\nloop invariant x != 0 ==> false;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n  int  x=0;\n\n  /*@\nloop invariant i1: x == 0;\n\n*/\nwhile(1)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n  int  x=0;\n\n  /*@\n\n\n\n\n\n\n*/\nwhile(1)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n  int  x=0;\n\n  /*@\n\nloop invariant i2: x <= 1;\nloop invariant i3: x == 0;\n\nloop invariant i5: x >= 0;\n*/\nwhile(1)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 1;\nloop invariant x%2==0;\nloop invariant x%3==0;\nloop invariant x%5==0;\nloop invariant x%7==0;\nloop invariant x%11==0;\nloop invariant x%13==0;\nloop invariant x%17==0;\nloop invariant x%19==0;\nloop invariant x%23==0;\nloop invariant x%29==0;\nloop invariant x%31==0;\nloop invariant x%37==0;\nloop invariant x%41==0;\nloop invariant x%43==0;\nloop invariant x%47==0;\nloop invariant x%53==0;\nloop invariant x%59==0;\nloop invariant x%61==0;\nloop invariant x%67==0;\nloop invariant x%71==0;\nloop invariant x%73==0;\nloop invariant x%79==0;\nloop invariant x%83==0;\nloop invariant x%89==0;\nloop invariant x%97==0;\nloop invariant x%101==0;\nloop invariant x%103==0;\nloop invariant x%107==0;\nloop invariant x%109==0;\nloop invariant x%113==0;\nloop invariant x%127==0;\nloop invariant x%131==0;\nloop invariant x%137==0;\nloop invariant x%139==0;\nloop invariant x%149==0;\nloop invariant x%151==0;\nloop invariant x%157==0;\nloop invariant x%163==0;\nloop invariant x%167==0;\nloop invariant x%173==0;\nloop invariant x%179==0;\nloop invariant x%181==0;\nloop invariant x%191==0;\nloop invariant x%193==0;\nloop invariant x%197==0;\nloop invariant x%199==0;\nloop invariant x%211==0;\nloop invariant x%223==0;\nloop invariant x%227==0;\nloop invariant x%229==0;\nloop invariant x%233==0;\nloop invariant x%239==0;\nloop invariant x%241==0;\nloop invariant x%251==0;\nloop invariant x%257==0;\nloop invariant x%263==0;\nloop invariant x%269==0;\nloop invariant x%271==0;\nloop invariant x%277==0;\nloop invariant x%281==0;\nloop invariant x%283==0;\nloop invariant x%293==0;\nloop invariant x%307==0;\nloop invariant x%311==0;\nloop invariant x%313==0;\nloop invariant x%317==0;\nloop invariant x%331==0;\nloop invariant x%337==0;\nloop invariant x%347==0;\nloop invariant x%349==0;\nloop invariant x%353==0;\nloop invariant x%359==0;\nloop invariant x%367==0;\nloop invariant x%373==0;\nloop invariant x%379==0;\nloop invariant x%383==0;\nloop invariant x%389==0;\nloop invariant x%397==0;\nloop invariant x%401==0;\nloop invariant x%409==0;\nloop invariant x%419==0;\nloop invariant x%421==0;\nloop invariant x%431==0;\nloop invariant x%433==0;\nloop invariant x%439==0;\nloop invariant x%443==0;\nloop invariant x%449==0;\nloop invariant x%457==0;\nloop invariant x%461==0;\nloop invariant x%463==0;\nloop invariant x%467==0;\nloop invariant x%479==0;\nloop invariant x%487==0;\nloop invariant x%491==0;\nloop invariant x%499==0;\nloop invariant x%503==0;\nloop invariant x%509==0;\nloop invariant x%521==0;\nloop invariant x%523==0;\nloop invariant x%541==0;\nloop invariant x%547==0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n  int  x=0;\n\n  /*@\n\nloop invariant i2: x%2==0;\nloop invariant i3: x%3==0;\nloop invariant i4: x%5==0;\nloop invariant i5: x%7==0;\nloop invariant i6: x%11==0;\nloop invariant i7: x%13==0;\nloop invariant i8: x%17==0;\nloop invariant i9: x%19==0;\nloop invariant i10: x%23==0;\nloop invariant i11: x%29==0;\nloop invariant i12: x%31==0;\nloop invariant i13: x%37==0;\nloop invariant i14: x%41==0;\nloop invariant i15: x%43==0;\nloop invariant i16: x%47==0;\nloop invariant i17: x%53==0;\nloop invariant i18: x%59==0;\nloop invariant i19: x%61==0;\nloop invariant i20: x%67==0;\nloop invariant i21: x%71==0;\nloop invariant i22: x%73==0;\nloop invariant i23: x%79==0;\nloop invariant i24: x%83==0;\nloop invariant i25: x%89==0;\nloop invariant i26: x%97==0;\nloop invariant i27: x%101==0;\nloop invariant i28: x%103==0;\nloop invariant i29: x%107==0;\nloop invariant i30: x%109==0;\nloop invariant i31: x%113==0;\nloop invariant i32: x%127==0;\nloop invariant i33: x%131==0;\nloop invariant i34: x%137==0;\nloop invariant i35: x%139==0;\nloop invariant i36: x%149==0;\nloop invariant i37: x%151==0;\nloop invariant i38: x%157==0;\nloop invariant i39: x%163==0;\nloop invariant i40: x%167==0;\nloop invariant i41: x%173==0;\nloop invariant i42: x%179==0;\nloop invariant i43: x%181==0;\nloop invariant i44: x%191==0;\nloop invariant i45: x%193==0;\nloop invariant i46: x%197==0;\nloop invariant i47: x%199==0;\nloop invariant i48: x%211==0;\nloop invariant i49: x%223==0;\nloop invariant i50: x%227==0;\nloop invariant i51: x%229==0;\nloop invariant i52: x%233==0;\nloop invariant i53: x%239==0;\nloop invariant i54: x%241==0;\nloop invariant i55: x%251==0;\nloop invariant i56: x%257==0;\nloop invariant i57: x%263==0;\nloop invariant i58: x%269==0;\nloop invariant i59: x%271==0;\nloop invariant i60: x%277==0;\nloop invariant i61: x%281==0;\nloop invariant i62: x%283==0;\nloop invariant i63: x%293==0;\nloop invariant i64: x%307==0;\nloop invariant i65: x%311==0;\nloop invariant i66: x%313==0;\nloop invariant i67: x%317==0;\nloop invariant i68: x%331==0;\nloop invariant i69: x%337==0;\nloop invariant i70: x%347==0;\nloop invariant i71: x%349==0;\nloop invariant i72: x%353==0;\nloop invariant i73: x%359==0;\nloop invariant i74: x%367==0;\nloop invariant i75: x%373==0;\nloop invariant i76: x%379==0;\nloop invariant i77: x%383==0;\nloop invariant i78: x%389==0;\nloop invariant i79: x%397==0;\nloop invariant i80: x%401==0;\nloop invariant i81: x%409==0;\nloop invariant i82: x%419==0;\nloop invariant i83: x%421==0;\nloop invariant i84: x%431==0;\nloop invariant i85: x%433==0;\nloop invariant i86: x%439==0;\nloop invariant i87: x%443==0;\nloop invariant i88: x%449==0;\nloop invariant i89: x%457==0;\nloop invariant i90: x%461==0;\nloop invariant i91: x%463==0;\nloop invariant i92: x%467==0;\nloop invariant i93: x%479==0;\nloop invariant i94: x%487==0;\nloop invariant i95: x%491==0;\nloop invariant i96: x%499==0;\nloop invariant i97: x%503==0;\nloop invariant i98: x%509==0;\nloop invariant i99: x%521==0;\nloop invariant i100: x%523==0;\nloop invariant i101: x%541==0;\nloop invariant i102: x%547==0;\n*/\nwhile(1)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1. x == 0;\nloop invariant x <= 0;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n  int  x=0;\n\n  /*@\n\nloop invariant i2: x <= 0;\nloop invariant i3: x >= 0;\nloop invariant i4: x == 0;\n*/\nwhile(1)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 >= 0;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n  int  x=0;\n\n  /*@\nloop invariant i1: 0 >= 0;\nloop invariant i2: x >= 0;\n*/\nwhile(1)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n  int  x=0;\n\n  /*@\nloop invariant i1: 0 <= x;\nloop invariant i2: x == 0;\n*/\nwhile(1)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 64,
                "annotations": "```\n/*@\nloop invariant x == 0;\nloop invariant !((i1 <= 100000) && (i2 >= 100001));\nloop invariant 0 <= i1 <= 100000;\nloop invariant i2 == i1 + 1;\nloop invariant i3 == i4 + i1;\nloop invariant i5 == i6 + i2;\nloop invariant i7 == i8 * i9;\nloop invariant i10 == i11 * i12;\nloop invariant i13 == i14 * i15;\nloop invariant i16 == i17 * i18;\nloop invariant i19 == i20 * i21;\nloop invariant i22 == i23 * i24;\nloop invariant i25 == i26 * i27;\nloop invariant i28 == i29 * i30;\nloop invariant i31 == i32 * i33;\nloop invariant i34 == i35 * i36;\nloop invariant i37 == i38 * i39;\nloop invariant i40 == i41 * i42;\nloop invariant i43 == i44 * i45;\nloop invariant i46 == i47 * i48;\nloop invariant i49 == i50 * i51;\nloop invariant i52 == i53 * i54;\nloop invariant i55 == i56 * i57;\nloop invariant i58 == i59 * i60;\nloop invariant i61 == i62 * i63;\nloop invariant i64 == i65 * i66;\nloop invariant i67 == i68 * i69;\nloop invariant i70 == i71 * i72;\nloop invariant i73 == i74 * i75;\nloop invariant i76 == i77 * i78;\nloop invariant i79 == i80 * i81;\nloop invariant i82 == i83 * i84;\nloop invariant i85 == i86 * i87;\nloop invariant i88 == i89 * i90;\nloop invariant i91 == i92 * i93;\nloop invariant i94 == i95 * i96;\nloop invariant i97 == i98 * i99;\nloop invariant i100 == i101 * i102;\nloop invariant i103 == i104 * i105;\nloop invariant i106 == i107 * i108;\nloop invariant i109 == i110 * i111;\nloop invariant i112 == i113 * i114;\nloop invariant i115 == i116 * i117;\nloop invariant i118 == i119 * i120;\nloop invariant i121 == i122 * i123;\nloop invariant i124 == i125 * i126;\nloop invariant i127 == i128 * i129;\nloop invariant i130 == i131 * i132;\nloop invariant i133 == i134 * i135;\nloop invariant i136 == i137 * i138;\nloop invariant i139 == i140 * i141;\nloop invariant i142 == i143 * i144;\nloop invariant i145 == i146 * i147;\nloop invariant i148 == i149 * i150;\nloop invariant i151 == i152 * i153;\nloop invariant i154 == i155 * i156;\nloop invariant i157 == i158 * i159;\nloop invariant i160 == i161 * i162;\nloop invariant i163 == i164 * i165;\nloop invariant i166 == i167 * i168;\nloop invariant i169 == i170 * i171;\nloop invariant i172 == i173 * i174;\nloop invariant i175 == i176 * i177;\nloop invariant i178 == i179 * i180;\nloop invariant i181 == i182 * i183;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n  int  x=0;\n\n  /*@\nloop invariant i1: x == 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(1)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x == 0 ==> x == i;\nloop invariant x == 0 ==> x == 0;\nloop invariant x == 0 ==> x == x;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\nloop invariant x == 0 ==> x == false;\nloop invariant x == 0 ==> x == true;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n  int  x=0;\n\n  /*@\n\n\nloop invariant i3: x == 0 ==> x == 0;\nloop invariant i4: x == 0 ==> x == x;\n\n\n*/\nwhile(1)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 0;\nloop invariant x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n  int  x=0;\n\n  /*@\nloop invariant i1: 0 <= x <= 0;\nloop invariant i2: x == 0;\n*/\nwhile(1)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n  int  x=0;\n\n  /*@\nloop invariant i1: x == 0;\n*/\nwhile(1)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant x <= 1;\nloop invariant x == 0;\nloop invariant x == 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n  int  x=0;\n\n  /*@\nloop invariant i1: 0 <= x;\nloop invariant i2: x <= 1;\nloop invariant i3: x == 0;\n\n*/\nwhile(1)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 130: unexpected token 'x'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n  int  x=0;\n\n  /*@\nloop invariant i1: 0 <= x <= 1;\nloop invariant i2: x == 0;\nloop invariant i3: x == 0 ==> 1;\nloop invariant i4: x == 0 ==> x == 0;\nloop invariant i5: 0 <= x;\nloop invariant i6: x >= 0;\nloop invariant i7: x <= 0;\nloop invariant i8: x <= 1;\nloop invariant i9: x == 1;\nloop invariant i10: x != 0 ==> false;\nloop invariant i11: i1;\nloop invariant i12: i2;\nloop invariant i13: i3;\nloop invariant i14: i4;\nloop invariant i15: i5;\nloop invariant i16: i6;\nloop invariant i17: 1 <= x;\nloop invariant i18: 1 <= x <= 1;\nloop invariant i19: x%2==0;\nloop invariant i20: x%3==0;\nloop invariant i21: x%5==0;\nloop invariant i22: x%7==0;\nloop invariant i23: x%11==0;\nloop invariant i24: x%13==0;\nloop invariant i25: x%17==0;\nloop invariant i26: x%19==0;\nloop invariant i27: x%23==0;\nloop invariant i28: x%29==0;\nloop invariant i29: x%31==0;\nloop invariant i30: x%37==0;\nloop invariant i31: x%41==0;\nloop invariant i32: x%43==0;\nloop invariant i33: x%47==0;\nloop invariant i34: x%53==0;\nloop invariant i35: x%59==0;\nloop invariant i36: x%61==0;\nloop invariant i37: x%67==0;\nloop invariant i38: x%71==0;\nloop invariant i39: x%73==0;\nloop invariant i40: x%79==0;\nloop invariant i41: x%83==0;\nloop invariant i42: x%89==0;\nloop invariant i43: x%97==0;\nloop invariant i44: x%101==0;\nloop invariant i45: x%103==0;\nloop invariant i46: x%107==0;\nloop invariant i47: x%109==0;\nloop invariant i48: x%113==0;\nloop invariant i49: x%127==0;\nloop invariant i50: x%131==0;\nloop invariant i51: x%137==0;\nloop invariant i52: x%139==0;\nloop invariant i53: x%149==0;\nloop invariant i54: x%151==0;\nloop invariant i55: x%157==0;\nloop invariant i56: x%163==0;\nloop invariant i57: x%167==0;\nloop invariant i58: x%173==0;\nloop invariant i59: x%179==0;\nloop invariant i60: x%181==0;\nloop invariant i61: x%191==0;\nloop invariant i62: x%193==0;\nloop invariant i63: x%197==0;\nloop invariant i64: x%199==0;\nloop invariant i65: x%211==0;\nloop invariant i66: x%223==0;\nloop invariant i67: x%227==0;\nloop invariant i68: x%229==0;\nloop invariant i69: x%233==0;\nloop invariant i70: x%239==0;\nloop invariant i71: x%241==0;\nloop invariant i72: x%251==0;\nloop invariant i73: x%257==0;\nloop invariant i74: x%263==0;\nloop invariant i75: x%269==0;\nloop invariant i76: x%271==0;\nloop invariant i77: x%277==0;\nloop invariant i78: x%281==0;\nloop invariant i79: x%283==0;\nloop invariant i80: x%293==0;\nloop invariant i81: x%307==0;\nloop invariant i82: x%311==0;\nloop invariant i83: x%313==0;\nloop invariant i84: x%317==0;\nloop invariant i85: x%331==0;\nloop invariant i86: x%337==0;\nloop invariant i87: x%347==0;\nloop invariant i88: x%349==0;\nloop invariant i89: x%353==0;\nloop invariant i90: x%359==0;\nloop invariant i91: x%367==0;\nloop invariant i92: x%373==0;\nloop invariant i93: x%379==0;\nloop invariant i94: x%383==0;\nloop invariant i95: x%389==0;\nloop invariant i96: x%397==0;\nloop invariant i97: x%401==0;\nloop invariant i98: x%409==0;\nloop invariant i99: x%419==0;\nloop invariant i100: x%421==0;\nloop invariant i101: x%431==0;\nloop invariant i102: x%433==0;\nloop invariant i103: x%439==0;\nloop invariant i104: x%443==0;\nloop invariant i105: x%449==0;\nloop invariant i106: x%457==0;\nloop invariant i107: x%461==0;\nloop invariant i108: x%463==0;\nloop invariant i109: x%467==0;\nloop invariant i110: x%479==0;\nloop invariant i111: x%487==0;\nloop invariant i112: x%491==0;\nloop invariant i113: x%499==0;\nloop invariant i114: x%503==0;\nloop invariant i115: x%509==0;\nloop invariant i116: x%521==0;\nloop invariant i117: x%523==0;\nloop invariant i118: x%541==0;\nloop invariant i119: x%547==0;\nloop invariant i120: 1. x == 0;\nloop invariant i121: 0 >= 0;\nloop invariant i122: !((i1 <= 100000) && (i2 >= 100001));\nloop invariant i123: 0 <= i1 <= 100000;\nloop invariant i124: i2 == i1 + 1;\nloop invariant i125: i3 == i4 + i1;\nloop invariant i126: i5 == i6 + i2;\nloop invariant i127: i7 == i8 * i9;\nloop invariant i128: i10 == i11 * i12;\nloop invariant i129: i13 == i14 * i15;\nloop invariant i130: i16 == i17 * i18;\nloop invariant i131: i19 == i20 * i21;\nloop invariant i132: i22 == i23 * i24;\nloop invariant i133: i25 == i26 * i27;\nloop invariant i134: i28 == i29 * i30;\nloop invariant i135: i31 == i32 * i33;\nloop invariant i136: i34 == i35 * i36;\nloop invariant i137: i37 == i38 * i39;\nloop invariant i138: i40 == i41 * i42;\nloop invariant i139: i43 == i44 * i45;\nloop invariant i140: i46 == i47 * i48;\nloop invariant i141: i49 == i50 * i51;\nloop invariant i142: i52 == i53 * i54;\nloop invariant i143: i55 == i56 * i57;\nloop invariant i144: i58 == i59 * i60;\nloop invariant i145: i61 == i62 * i63;\nloop invariant i146: i64 == i65 * i66;\nloop invariant i147: i67 == i68 * i69;\nloop invariant i148: i70 == i71 * i72;\nloop invariant i149: i73 == i74 * i75;\nloop invariant i150: i76 == i77 * i78;\nloop invariant i151: i79 == i80 * i81;\nloop invariant i152: i82 == i83 * i84;\nloop invariant i153: i85 == i86 * i87;\nloop invariant i154: i88 == i89 * i90;\nloop invariant i155: i91 == i92 * i93;\nloop invariant i156: i94 == i95 * i96;\nloop invariant i157: i97 == i98 * i99;\nloop invariant i158: i100 == i101 * i102;\nloop invariant i159: i103 == i104 * i105;\nloop invariant i160: i106 == i107 * i108;\nloop invariant i161: i109 == i110 * i111;\nloop invariant i162: i112 == i113 * i114;\nloop invariant i163: i115 == i116 * i117;\nloop invariant i164: i118 == i119 * i120;\nloop invariant i165: i121 == i122 * i123;\nloop invariant i166: i124 == i125 * i126;\nloop invariant i167: i127 == i128 * i129;\nloop invariant i168: i130 == i131 * i132;\nloop invariant i169: i133 == i134 * i135;\nloop invariant i170: i136 == i137 * i138;\nloop invariant i171: i139 == i140 * i141;\nloop invariant i172: i142 == i143 * i144;\nloop invariant i173: i145 == i146 * i147;\nloop invariant i174: i148 == i149 * i150;\nloop invariant i175: i151 == i152 * i153;\nloop invariant i176: i154 == i155 * i156;\nloop invariant i177: i157 == i158 * i159;\nloop invariant i178: i160 == i161 * i162;\nloop invariant i179: i163 == i164 * i165;\nloop invariant i180: i166 == i167 * i168;\nloop invariant i181: i169 == i170 * i171;\nloop invariant i182: i172 == i173 * i174;\nloop invariant i183: i175 == i176 * i177;\nloop invariant i184: i178 == i179 * i180;\nloop invariant i185: i181 == i182 * i183;\nloop invariant i186: 0 <= x <= n;\nloop invariant i187: x == 0 ==> x == i;\nloop invariant i188: x == 0 ==> x == x;\nloop invariant i189: x == 0 ==> x == true;\nloop invariant i190: x == 0 ==> x == false;\nloop invariant i191: 0 <= x <= 0;\n*/\nwhile(1)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n\n  {;\n//@ assert(x!=0);\n}\n\n}",
        "combined_annotation_num_solver_calls": 80,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n  int  x=0;\n\n  /*@\nloop invariant i1: 0 <= x <= 1;\nloop invariant i2: x == 0;\nloop invariant i3: x == 0 ==> 1;\nloop invariant i4: x == 0 ==> x == 0;\nloop invariant i5: 0 <= x;\nloop invariant i6: x >= 0;\nloop invariant i7: x <= 0;\nloop invariant i8: x <= 1;\n\n\n\n\n\n\n\n\n\n\nloop invariant i19: x%2==0;\nloop invariant i20: x%3==0;\nloop invariant i21: x%5==0;\nloop invariant i22: x%7==0;\nloop invariant i23: x%11==0;\nloop invariant i24: x%13==0;\nloop invariant i25: x%17==0;\nloop invariant i26: x%19==0;\nloop invariant i27: x%23==0;\nloop invariant i28: x%29==0;\nloop invariant i29: x%31==0;\nloop invariant i30: x%37==0;\nloop invariant i31: x%41==0;\nloop invariant i32: x%43==0;\nloop invariant i33: x%47==0;\nloop invariant i34: x%53==0;\nloop invariant i35: x%59==0;\nloop invariant i36: x%61==0;\nloop invariant i37: x%67==0;\nloop invariant i38: x%71==0;\nloop invariant i39: x%73==0;\nloop invariant i40: x%79==0;\nloop invariant i41: x%83==0;\nloop invariant i42: x%89==0;\nloop invariant i43: x%97==0;\nloop invariant i44: x%101==0;\nloop invariant i45: x%103==0;\nloop invariant i46: x%107==0;\nloop invariant i47: x%109==0;\nloop invariant i48: x%113==0;\nloop invariant i49: x%127==0;\nloop invariant i50: x%131==0;\nloop invariant i51: x%137==0;\nloop invariant i52: x%139==0;\nloop invariant i53: x%149==0;\nloop invariant i54: x%151==0;\nloop invariant i55: x%157==0;\nloop invariant i56: x%163==0;\nloop invariant i57: x%167==0;\nloop invariant i58: x%173==0;\nloop invariant i59: x%179==0;\nloop invariant i60: x%181==0;\nloop invariant i61: x%191==0;\nloop invariant i62: x%193==0;\nloop invariant i63: x%197==0;\nloop invariant i64: x%199==0;\nloop invariant i65: x%211==0;\nloop invariant i66: x%223==0;\nloop invariant i67: x%227==0;\nloop invariant i68: x%229==0;\nloop invariant i69: x%233==0;\nloop invariant i70: x%239==0;\nloop invariant i71: x%241==0;\nloop invariant i72: x%251==0;\nloop invariant i73: x%257==0;\nloop invariant i74: x%263==0;\nloop invariant i75: x%269==0;\nloop invariant i76: x%271==0;\nloop invariant i77: x%277==0;\nloop invariant i78: x%281==0;\nloop invariant i79: x%283==0;\nloop invariant i80: x%293==0;\nloop invariant i81: x%307==0;\nloop invariant i82: x%311==0;\nloop invariant i83: x%313==0;\nloop invariant i84: x%317==0;\nloop invariant i85: x%331==0;\nloop invariant i86: x%337==0;\nloop invariant i87: x%347==0;\nloop invariant i88: x%349==0;\nloop invariant i89: x%353==0;\nloop invariant i90: x%359==0;\nloop invariant i91: x%367==0;\nloop invariant i92: x%373==0;\nloop invariant i93: x%379==0;\nloop invariant i94: x%383==0;\nloop invariant i95: x%389==0;\nloop invariant i96: x%397==0;\nloop invariant i97: x%401==0;\nloop invariant i98: x%409==0;\nloop invariant i99: x%419==0;\nloop invariant i100: x%421==0;\nloop invariant i101: x%431==0;\nloop invariant i102: x%433==0;\nloop invariant i103: x%439==0;\nloop invariant i104: x%443==0;\nloop invariant i105: x%449==0;\nloop invariant i106: x%457==0;\nloop invariant i107: x%461==0;\nloop invariant i108: x%463==0;\nloop invariant i109: x%467==0;\nloop invariant i110: x%479==0;\nloop invariant i111: x%487==0;\nloop invariant i112: x%491==0;\nloop invariant i113: x%499==0;\nloop invariant i114: x%503==0;\nloop invariant i115: x%509==0;\nloop invariant i116: x%521==0;\nloop invariant i117: x%523==0;\nloop invariant i118: x%541==0;\nloop invariant i119: x%547==0;\n\nloop invariant i121: 0 >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i188: x == 0 ==> x == x;\n\n\nloop invariant i191: 0 <= x <= 0;\n*/\nwhile(1)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n\n  {;\n//@ assert(x!=0);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c"
        ],
        "skipped": [],
        "total": 68,
        "success_count": 58,
        "failure_count": 10,
        "success_rate": 0.8529411764705882
    }
}