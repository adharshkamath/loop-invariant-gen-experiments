{
    "logs": {
        "file": "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1(){\n    int x; return x;\n}\n\nint unknown2(){\n    int x; return x;\n}\n\nint unknown3();\nint unknown4();\n\nint n, m;\n\nvoid main()\n{\n  n = unknown1();\n  m = unknown2();\n  int x=0; \n  int y;\n  y = m;\n  if(n < 0)\n    \nreturn;\n\n  if(m < 0)\n    \nreturn;\n\n  if(m > n-1)\n    \nreturn;\n\n  while(x<=n-1) {\n    x++;\n    if(x>=m+1) y++;\n    else if(x > m) \n\nreturn;\n\n    x = x;\n  }\n  if(x < n)\n    \nreturn;\n\n  if(y >= n+1)\n  {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant y >= m + 1;\nloop invariant n >= 1;\nloop invariant x >= 0;\nloop invariant n >= m;\nloop invariant m >= 0;\nloop invariant n >= y;\nloop invariant (x <= n - 1) ==> (y <= n);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n + 1);\nloop invariant (x <= n - 1) ==> (y >= m);\nloop invariant (x <= n - 1) ==> (y <= n - 1);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n + 1);\nloop invariant (x <= n - 1) ==> (y >= m);\nloop invariant (x <= n - 1) ==> (y <= n - 1);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n + 1);\nloop invariant (x <= n - 1) ==> (y >= m);\nloop invariant (x <= n - 1) ==> (y <= n - 1);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n + 1);\nloop invariant (x <= n - 1) ==> (y >= m);\nloop invariant (x <= n - 1) ==> (y <= n - 1);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n + 1);\nloop invariant (x <= n - 1) ==> (y >= m);\nloop invariant (x <= n - 1) ==> (y <= n - 1);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n + 1);\nloop invariant (x <= n - 1) ==> (y >= m);\nloop invariant (x <= n - 1) ==> (y <= n - 1);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n + 1);\nloop invariant (x <= n - 1) ==> (y >= m);\nloop invariant (x <= n - 1) ==> (y <= n - 1);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n + 1);\nloop invariant (x <= n - 1) ==> (y >= m);\nloop invariant (x <= n - 1) ==> (y <= n - 1);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n + 1);\nloop invariant (x <= n - 1) ==> (y >= m);\nloop invariant (x <= n - 1) ==> (y <= n - 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= m <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y <= x;\nloop invariant (x <= m ==> y = m);\nloop invariant (x > m ==> y = m+1);\nloop invariant x >= m;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= n;\nloop invariant x >= m;\nloop invariant x <= n;\nloop invariant y >= m;\nloop invariant y <= n;\nloop invariant x + y = m;\nloop invariant y + 1 = m;\nloop invariant x = n - y;\nloop invariant x = n - y + 1;\nloop invariant x = n - y - 1;\nloop invariant x = n - y + 2;\nloop invariant x = n - y - 2;\nloop invariant x = n - y + 3;\nloop invariant x = n - y - 3;\nloop invariant x = n - y + 4;\nloop invariant x = n - y - 4;\nloop invariant x = n - y + 5;\nloop invariant x = n - y - 5;\nloop invariant x = n - y + 6;\nloop invariant x = n - y - 6;\nloop invariant x = n - y + 7;\nloop invariant x = n - y - 7;\nloop invariant x = n - y + 8;\nloop invariant x = n - y - 8;\nloop invariant x = n - y + 9;\nloop invariant x = n - y - 9;\nloop invariant x = n - y + 10;\nloop invariant x = n - y - 10;\nloop invariant x = n - y + 11;\nloop invariant x = n - y - 11;\nloop invariant x = n - y + 12;\nloop invariant x = n - y - 12;\nloop invariant x = n - y + 13;\nloop invariant x = n - y - 13;\nloop invariant x = n - y + 14;\nloop invariant x = n - y - 14;\nloop invariant x = n - y + 15;\nloop invariant x = n - y - 15;\nloop invariant x = n - y + 16;\nloop invariant x = n - y - 16;\nloop invariant x = n - y + 17;\nloop invariant x = n - y - 17;\nloop invariant x = n - y + 18;\nloop invariant x = n - y - 18;\nloop invariant x = n - y + 19;\nloop invariant x = n - y - 19;\nloop invariant x = n - y + 20;\nloop invariant x = n - y - 20;\nloop invariant x = n - y + 21;\nloop invariant x = n - y - 21;\nloop invariant x = n - y + 22;\nloop invariant x = n - y - 22;\nloop invariant x = n - y + 23;\nloop invariant x = n - y - 23;\nloop invariant x = n - y + 24;\nloop invariant x = n - y - 24;\nloop invariant x = n - y + 25;\nloop invariant x = n - y - 25;\nloop invariant x = n - y + 26;\nloop invariant x = n - y - 26;\nloop invariant x = n - y + 27;\nloop invariant x = n - y - 27;\nloop invariant x = n - y + 28;\nloop invariant x = n - y - 28;\nloop invariant x = n - y + 29;\nloop invariant x = n - y - 29;\nloop invariant x = n - y + 30;\nloop invariant x = n - y - 30;\nloop invariant x = n - y + 31;\nloop invariant x = n - y - 31;\nloop invariant x = n - y + 32;\nloop invariant x = n - y - 32;\nloop invariant x = n - y + 33;\nloop invariant x = n - y - 33;\nloop invariant x = n - y + 34;\nloop invariant x = n - y - 34;\nloop invariant x = n - y + 35;\nloop invariant x = n - y - 35;\nloop invariant x = n - y + 36;\nloop invariant x = n - y - 36;\nloop invariant x = n - y + 37;\nloop invariant x = n - y - 37;\nloop invariant x = n - y + 38;\nloop invariant x = n - y - 38;\nloop invariant x = n - y + 39;\nloop invariant x = n - y - 39;\nloop invariant x = n - y + 40;\nloop invariant x = n - y - 40;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant m <= y <= n;\nloop invariant x >= m;\nloop invariant x <= n;\n*/\n```",
            "```\n/*@\nloop invariant ( ( ( ( x == 0 ) && ( y == m ) ) && ( x <= n ) ) && ( y <= n ) ) && ( y >= 0 ) ) ==> ( ( ( x == n ) && ( y == n + 1 ) ) || ( ( x == n ) && ( y == m ) ) || ( ( x == m + 1 ) && ( y == m ) ) );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= m <= n;\nloop invariant 0 <= x <= n;\nloop invariant y = m + x - n;\nloop invariant n + 1 <= y + x ==> x >= n;\nloop invariant y + x <= n ==> x < n;\nloop invariant n + 1 <= y + x ==> y >= n + 1;\nloop invariant y + x <= n ==> y < n + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x - 1 <= y <= n - 1;\nloop invariant x - m <= y - m <= n - m;\nloop invariant x - m <= y - m <= n - m ==> y == x - m + m;\nloop invariant x - m <= y - m <= n - m ==> y == x - m;\nloop invariant x - m <= y - m <= n - m ==> y == x - m ==> x >= m + 1;\nloop invariant x - m <= y - m <= n - m ==> y == x - m ==> x >= m + 1 ==> x == m + 1;\nloop invariant x - m <= y - m <= n - m ==> y == x - m ==> x >= m + 1 ==> x == m + 1 ==> x == m + 1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant 0 <= y <= m;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant 0 <= y <= m;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\n*/\n```",
            "```\n/*@\nloop invariant ( x = ( m + y ) );\nloop invariant ( y <= m );\nloop invariant ( y >= 0 );\nloop invariant ( x <= n );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant y >= m;\nloop invariant y <= n;\nloop invariant x <= n-1;\nloop invariant x >= 0;\nloop invariant x <= n-1 ==> y <= n-1;\nloop invariant x <= n-1 ==> y >= m;\nloop invariant x <= n-1 ==> y <= n-1 ==> y <= x;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m ==> x <= n-1;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x;\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y >= m;\nloop invariant y <= m+1;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant y >= m+1;\nloop invariant y <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant y >= m+1;\nloop invariant y <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x <= y <= n;\nloop invariant y <= n;\nloop invariant x <= m;\nloop invariant x > m ==> y > m;\nloop invariant x > m ==> x <= m + 1;\nloop invariant x > m ==> y >= m + 1;\nloop invariant y > m ==> y <= n;\nloop invariant x > m ==> y >= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n-1;\nloop invariant m <= y <= n;\nloop invariant x + y <= n;\nloop invariant m + x <= n;\nloop invariant x <= m;\nloop invariant x + y >= n;\nloop invariant x + y >= n + 1;\nloop invariant x + y >= n + 2;\nloop invariant x + y >= n + 3;\nloop invariant x + y >= n + 4;\nloop invariant x + y >= n + 5;\nloop invariant x + y >= n + 6;\nloop invariant x + y >= n + 7;\nloop invariant x + y >= n + 8;\nloop invariant x + y >= n + 9;\nloop invariant x + y >= n + 10;\nloop invariant x + y >= n + 11;\nloop invariant x + y >= n + 12;\nloop invariant x + y >= n + 13;\nloop invariant x + y >= n + 14;\nloop invariant x + y >= n + 15;\nloop invariant x + y >= n + 16;\nloop invariant x + y >= n + 17;\nloop invariant x + y >= n + 18;\nloop invariant x + y >= n + 19;\nloop invariant x + y >= n + 20;\nloop invariant x + y >= n + 21;\nloop invariant x + y >= n + 22;\nloop invariant x + y >= n + 23;\nloop invariant x + y >= n + 24;\nloop invariant x + y >= n + 25;\nloop invariant x + y >= n + 26;\nloop invariant x + y >= n + 27;\nloop invariant x + y >= n + 28;\nloop invariant x + y >= n + 29;\nloop invariant x + y >= n + 30;\nloop invariant x + y >= n + 31;\nloop invariant x + y >= n + 32;\nloop invariant x + y >= n + 33;\nloop invariant x + y >= n + 34;\nloop invariant x + y >= n + 35;\nloop invariant x + y >= n + 36;\nloop invariant x + y >= n + 37;\nloop invariant x + y >= n + 38;\nloop invariant x + y >= n + 39;\nloop invariant x + y >= n + 40;\nloop invariant x + y >= n + 41;\nloop invariant x + y >= n + 42;\nloop invariant x + y >= n + 43;\nloop invariant x + y >= n + 44;\nloop invariant x + y >= n + 45;\nloop invariant x + y >= n + 46;\nloop invariant x + y >= n + 47;\nloop invariant x + y >= n + 48;\nloop invariant x + y >= n + 49;\nloop invariant x + y >= n + 50;\nloop invariant x + y >= n + 51;\nloop invariant x + y >= n + 52;\nloop invariant x + y >= n + 53;\nloop invariant x + y >= n + 54;\nloop invariant x + y >= n + 55;\nloop invariant x + y >= n + 56;\nloop invariant x + y >= n + 57;\nloop invariant x + y >= n + 58;\nloop invariant x + y >= n + 59;\nloop invariant x + y >= n + 60;\nloop invariant x + y >= n + 61;\nloop invariant x + y >= n + 62;\nloop invariant x + y >= n + 63;\nloop invariant x + y >= n + 64;\nloop invariant x + y >= n + 65;\nloop invariant x + y >= n + 66;\nloop invariant x + y >= n + 67;\nloop invariant x + y >= n + 68;\nloop invariant x + y >= n + 69;\nloop invariant x + y >= n + 70;\nloop invariant x + y >= n + 71;\nloop invariant x + y >= n + 72;\nloop invariant x + y >= n + 73;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant y >= m && y <= n;\nloop invariant x >= m;\nloop invariant y <= x;\nloop invariant n >= m;\nloop invariant n >= 0;\nloop invariant m >= 0;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant y >= m + 1;\nloop invariant n >= 1;\nloop invariant x >= 0;\nloop invariant n >= m;\nloop invariant m >= 0;\nloop invariant n >= y;\nloop invariant (x <= n - 1) ==> (y <= n);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n + 1);\nloop invariant (x <= n - 1) ==> (y >= m);\nloop invariant (x <= n - 1) ==> (y <= n - 1);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n + 1);\nloop invariant (x <= n - 1) ==> (y >= m);\nloop invariant (x <= n - 1) ==> (y <= n - 1);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n + 1);\nloop invariant (x <= n - 1) ==> (y >= m);\nloop invariant (x <= n - 1) ==> (y <= n - 1);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n + 1);\nloop invariant (x <= n - 1) ==> (y >= m);\nloop invariant (x <= n - 1) ==> (y <= n - 1);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n + 1);\nloop invariant (x <= n - 1) ==> (y >= m);\nloop invariant (x <= n - 1) ==> (y <= n - 1);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n + 1);\nloop invariant (x <= n - 1) ==> (y >= m);\nloop invariant (x <= n - 1) ==> (y <= n - 1);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n + 1);\nloop invariant (x <= n - 1) ==> (y >= m);\nloop invariant (x <= n - 1) ==> (y <= n - 1);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n + 1);\nloop invariant (x <= n - 1) ==> (y >= m);\nloop invariant (x <= n - 1) ==> (y <= n - 1);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n);\nloop invariant (x <= n - 1) ==> (y >= m + 1);\nloop invariant (x <= n - 1) ==> (y <= n + 1);\nloop invariant (x <= n - 1) ==> (y >= m);\nloop invariant (x <= n - 1) ==> (y <= n - 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1(){\n    int x; return x;\n}\n\nint unknown2(){\n    int x; return x;\n}\n\nint unknown3();\nint unknown4();\n\nint n, m;\n\nvoid main()\n{\n  n = unknown1();\n  m = unknown2();\n  int x=0; \n  int y;\n  y = m;\n  if(n < 0)\n    \nreturn;\n\n  if(m < 0)\n    \nreturn;\n\n  if(m > n-1)\n    \nreturn;\n\n  /*@\n\nloop invariant i2: n >= 1;\nloop invariant i3: x >= 0;\nloop invariant i4: n >= m;\nloop invariant i5: m >= 0;\n\n\n\n\nloop invariant i10: (x <= n - 1) ==> (y >= m);\n\n*/\nwhile(x<=n-1) {\n    x++;\n    if(x>=m+1) y++;\n    else if(x > m) \n\nreturn;\n\n    x = x;\n  }\n  if(x < n)\n    \nreturn;\n\n  if(y >= n+1)\n  {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= m <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y <= x;\nloop invariant (x <= m ==> y = m);\nloop invariant (x > m ==> y = m+1);\nloop invariant x >= m;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1(){\n    int x; return x;\n}\n\nint unknown2(){\n    int x; return x;\n}\n\nint unknown3();\nint unknown4();\n\nint n, m;\n\nvoid main()\n{\n  n = unknown1();\n  m = unknown2();\n  int x=0; \n  int y;\n  y = m;\n  if(n < 0)\n    \nreturn;\n\n  if(m < 0)\n    \nreturn;\n\n  if(m > n-1)\n    \nreturn;\n\n  /*@\nloop invariant i1: 0 <= m <= n;\nloop invariant i2: x <= n;\n\n\n\n\n\n*/\nwhile(x<=n-1) {\n    x++;\n    if(x>=m+1) y++;\n    else if(x > m) \n\nreturn;\n\n    x = x;\n  }\n  if(x < n)\n    \nreturn;\n\n  if(y >= n+1)\n  {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 86,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= n;\nloop invariant x >= m;\nloop invariant x <= n;\nloop invariant y >= m;\nloop invariant y <= n;\nloop invariant x + y = m;\nloop invariant y + 1 = m;\nloop invariant x = n - y;\nloop invariant x = n - y + 1;\nloop invariant x = n - y - 1;\nloop invariant x = n - y + 2;\nloop invariant x = n - y - 2;\nloop invariant x = n - y + 3;\nloop invariant x = n - y - 3;\nloop invariant x = n - y + 4;\nloop invariant x = n - y - 4;\nloop invariant x = n - y + 5;\nloop invariant x = n - y - 5;\nloop invariant x = n - y + 6;\nloop invariant x = n - y - 6;\nloop invariant x = n - y + 7;\nloop invariant x = n - y - 7;\nloop invariant x = n - y + 8;\nloop invariant x = n - y - 8;\nloop invariant x = n - y + 9;\nloop invariant x = n - y - 9;\nloop invariant x = n - y + 10;\nloop invariant x = n - y - 10;\nloop invariant x = n - y + 11;\nloop invariant x = n - y - 11;\nloop invariant x = n - y + 12;\nloop invariant x = n - y - 12;\nloop invariant x = n - y + 13;\nloop invariant x = n - y - 13;\nloop invariant x = n - y + 14;\nloop invariant x = n - y - 14;\nloop invariant x = n - y + 15;\nloop invariant x = n - y - 15;\nloop invariant x = n - y + 16;\nloop invariant x = n - y - 16;\nloop invariant x = n - y + 17;\nloop invariant x = n - y - 17;\nloop invariant x = n - y + 18;\nloop invariant x = n - y - 18;\nloop invariant x = n - y + 19;\nloop invariant x = n - y - 19;\nloop invariant x = n - y + 20;\nloop invariant x = n - y - 20;\nloop invariant x = n - y + 21;\nloop invariant x = n - y - 21;\nloop invariant x = n - y + 22;\nloop invariant x = n - y - 22;\nloop invariant x = n - y + 23;\nloop invariant x = n - y - 23;\nloop invariant x = n - y + 24;\nloop invariant x = n - y - 24;\nloop invariant x = n - y + 25;\nloop invariant x = n - y - 25;\nloop invariant x = n - y + 26;\nloop invariant x = n - y - 26;\nloop invariant x = n - y + 27;\nloop invariant x = n - y - 27;\nloop invariant x = n - y + 28;\nloop invariant x = n - y - 28;\nloop invariant x = n - y + 29;\nloop invariant x = n - y - 29;\nloop invariant x = n - y + 30;\nloop invariant x = n - y - 30;\nloop invariant x = n - y + 31;\nloop invariant x = n - y - 31;\nloop invariant x = n - y + 32;\nloop invariant x = n - y - 32;\nloop invariant x = n - y + 33;\nloop invariant x = n - y - 33;\nloop invariant x = n - y + 34;\nloop invariant x = n - y - 34;\nloop invariant x = n - y + 35;\nloop invariant x = n - y - 35;\nloop invariant x = n - y + 36;\nloop invariant x = n - y - 36;\nloop invariant x = n - y + 37;\nloop invariant x = n - y - 37;\nloop invariant x = n - y + 38;\nloop invariant x = n - y - 38;\nloop invariant x = n - y + 39;\nloop invariant x = n - y - 39;\nloop invariant x = n - y + 40;\nloop invariant x = n - y - 40;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1(){\n    int x; return x;\n}\n\nint unknown2(){\n    int x; return x;\n}\n\nint unknown3();\nint unknown4();\n\nint n, m;\n\nvoid main()\n{\n  n = unknown1();\n  m = unknown2();\n  int x=0; \n  int y;\n  y = m;\n  if(n < 0)\n    \nreturn;\n\n  if(m < 0)\n    \nreturn;\n\n  if(m > n-1)\n    \nreturn;\n\n  /*@\n\n\nloop invariant i3: x <= n;\nloop invariant i4: y >= m;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x<=n-1) {\n    x++;\n    if(x>=m+1) y++;\n    else if(x > m) \n\nreturn;\n\n    x = x;\n  }\n  if(x < n)\n    \nreturn;\n\n  if(y >= n+1)\n  {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x >= y;\nloop invariant x <= n;\nloop invariant y <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1(){\n    int x; return x;\n}\n\nint unknown2(){\n    int x; return x;\n}\n\nint unknown3();\nint unknown4();\n\nint n, m;\n\nvoid main()\n{\n  n = unknown1();\n  m = unknown2();\n  int x=0; \n  int y;\n  y = m;\n  if(n < 0)\n    \nreturn;\n\n  if(m < 0)\n    \nreturn;\n\n  if(m > n-1)\n    \nreturn;\n\n  /*@\nloop invariant i1: 0 <= x <= n;\n\n\nloop invariant i4: x <= n;\n\n*/\nwhile(x<=n-1) {\n    x++;\n    if(x>=m+1) y++;\n    else if(x > m) \n\nreturn;\n\n    x = x;\n  }\n  if(x < n)\n    \nreturn;\n\n  if(y >= n+1)\n  {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant m <= y <= n;\nloop invariant x >= m;\nloop invariant x <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1(){\n    int x; return x;\n}\n\nint unknown2(){\n    int x; return x;\n}\n\nint unknown3();\nint unknown4();\n\nint n, m;\n\nvoid main()\n{\n  n = unknown1();\n  m = unknown2();\n  int x=0; \n  int y;\n  y = m;\n  if(n < 0)\n    \nreturn;\n\n  if(m < 0)\n    \nreturn;\n\n  if(m > n-1)\n    \nreturn;\n\n  /*@\nloop invariant i1: 0 <= x <= n;\n\n\nloop invariant i4: x <= n;\n*/\nwhile(x<=n-1) {\n    x++;\n    if(x>=m+1) y++;\n    else if(x > m) \n\nreturn;\n\n    x = x;\n  }\n  if(x < n)\n    \nreturn;\n\n  if(y >= n+1)\n  {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant ( ( ( ( x == 0 ) && ( y == m ) ) && ( x <= n ) ) && ( y <= n ) ) && ( y >= 0 ) ) ==> ( ( ( x == n ) && ( y == n + 1 ) ) || ( ( x == n ) && ( y == m ) ) || ( ( x == m + 1 ) && ( y == m ) ) );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1(){\n    int x; return x;\n}\n\nint unknown2(){\n    int x; return x;\n}\n\nint unknown3();\nint unknown4();\n\nint n, m;\n\nvoid main()\n{\n  n = unknown1();\n  m = unknown2();\n  int x=0; \n  int y;\n  y = m;\n  if(n < 0)\n    \nreturn;\n\n  if(m < 0)\n    \nreturn;\n\n  if(m > n-1)\n    \nreturn;\n\n  /*@\n\n*/\nwhile(x<=n-1) {\n    x++;\n    if(x>=m+1) y++;\n    else if(x > m) \n\nreturn;\n\n    x = x;\n  }\n  if(x < n)\n    \nreturn;\n\n  if(y >= n+1)\n  {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= m <= n;\nloop invariant 0 <= x <= n;\nloop invariant y = m + x - n;\nloop invariant n + 1 <= y + x ==> x >= n;\nloop invariant y + x <= n ==> x < n;\nloop invariant n + 1 <= y + x ==> y >= n + 1;\nloop invariant y + x <= n ==> y < n + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1(){\n    int x; return x;\n}\n\nint unknown2(){\n    int x; return x;\n}\n\nint unknown3();\nint unknown4();\n\nint n, m;\n\nvoid main()\n{\n  n = unknown1();\n  m = unknown2();\n  int x=0; \n  int y;\n  y = m;\n  if(n < 0)\n    \nreturn;\n\n  if(m < 0)\n    \nreturn;\n\n  if(m > n-1)\n    \nreturn;\n\n  /*@\nloop invariant i1: 0 <= m <= n;\nloop invariant i2: 0 <= x <= n;\n\n\n\n\nloop invariant i7: y + x <= n ==> y < n + 1;\n*/\nwhile(x<=n-1) {\n    x++;\n    if(x>=m+1) y++;\n    else if(x > m) \n\nreturn;\n\n    x = x;\n  }\n  if(x < n)\n    \nreturn;\n\n  if(y >= n+1)\n  {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x - 1 <= y <= n - 1;\nloop invariant x - m <= y - m <= n - m;\nloop invariant x - m <= y - m <= n - m ==> y == x - m + m;\nloop invariant x - m <= y - m <= n - m ==> y == x - m;\nloop invariant x - m <= y - m <= n - m ==> y == x - m ==> x >= m + 1;\nloop invariant x - m <= y - m <= n - m ==> y == x - m ==> x >= m + 1 ==> x == m + 1;\nloop invariant x - m <= y - m <= n - m ==> y == x - m ==> x >= m + 1 ==> x == m + 1 ==> x == m + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1(){\n    int x; return x;\n}\n\nint unknown2(){\n    int x; return x;\n}\n\nint unknown3();\nint unknown4();\n\nint n, m;\n\nvoid main()\n{\n  n = unknown1();\n  m = unknown2();\n  int x=0; \n  int y;\n  y = m;\n  if(n < 0)\n    \nreturn;\n\n  if(m < 0)\n    \nreturn;\n\n  if(m > n-1)\n    \nreturn;\n\n  /*@\nloop invariant i1: 0 <= x <= n;\n\n\n\n\n\n\nloop invariant i8: x - m <= y - m <= n - m ==> y == x - m ==> x >= m + 1 ==> x == m + 1 ==> x == m + 1;\n*/\nwhile(x<=n-1) {\n    x++;\n    if(x>=m+1) y++;\n    else if(x > m) \n\nreturn;\n\n    x = x;\n  }\n  if(x < n)\n    \nreturn;\n\n  if(y >= n+1)\n  {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant 0 <= y <= m;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant 0 <= y <= m;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x >= m;\nloop invariant y <= n;\nloop invariant x <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1(){\n    int x; return x;\n}\n\nint unknown2(){\n    int x; return x;\n}\n\nint unknown3();\nint unknown4();\n\nint n, m;\n\nvoid main()\n{\n  n = unknown1();\n  m = unknown2();\n  int x=0; \n  int y;\n  y = m;\n  if(n < 0)\n    \nreturn;\n\n  if(m < 0)\n    \nreturn;\n\n  if(m > n-1)\n    \nreturn;\n\n  /*@\n\n\nloop invariant i3: x <= n;\n\n\n*/\nwhile(x<=n-1) {\n    x++;\n    if(x>=m+1) y++;\n    else if(x > m) \n\nreturn;\n\n    x = x;\n  }\n  if(x < n)\n    \nreturn;\n\n  if(y >= n+1)\n  {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant ( x = ( m + y ) );\nloop invariant ( y <= m );\nloop invariant ( y >= 0 );\nloop invariant ( x <= n );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( x >= y );\nloop invariant ( x <= n - 1 );\nloop invariant ( x >= 0 );\nloop invariant ( y <= x );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1(){\n    int x; return x;\n}\n\nint unknown2(){\n    int x; return x;\n}\n\nint unknown3();\nint unknown4();\n\nint n, m;\n\nvoid main()\n{\n  n = unknown1();\n  m = unknown2();\n  int x=0; \n  int y;\n  y = m;\n  if(n < 0)\n    \nreturn;\n\n  if(m < 0)\n    \nreturn;\n\n  if(m > n-1)\n    \nreturn;\n\n  /*@\n\n\nloop invariant i3: ( y >= 0 );\nloop invariant i4: ( x <= n );\nloop invariant i5: ( x >= 0 );\n\n\n\n*/\nwhile(x<=n-1) {\n    x++;\n    if(x>=m+1) y++;\n    else if(x > m) \n\nreturn;\n\n    x = x;\n  }\n  if(x < n)\n    \nreturn;\n\n  if(y >= n+1)\n  {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant y >= m;\nloop invariant y <= n;\nloop invariant x <= n-1;\nloop invariant x >= 0;\nloop invariant x <= n-1 ==> y <= n-1;\nloop invariant x <= n-1 ==> y >= m;\nloop invariant x <= n-1 ==> y <= n-1 ==> y <= x;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m ==> x <= n-1;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1;\nloop invariant x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1(){\n    int x; return x;\n}\n\nint unknown2(){\n    int x; return x;\n}\n\nint unknown3();\nint unknown4();\n\nint n, m;\n\nvoid main()\n{\n  n = unknown1();\n  m = unknown2();\n  int x=0; \n  int y;\n  y = m;\n  if(n < 0)\n    \nreturn;\n\n  if(m < 0)\n    \nreturn;\n\n  if(m > n-1)\n    \nreturn;\n\n  /*@\nloop invariant i1: 0 <= x <= n;\nloop invariant i2: y >= m;\n\n\nloop invariant i5: x >= 0;\n\nloop invariant i7: x <= n-1 ==> y >= m;\n\n\nloop invariant i10: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m;\nloop invariant i11: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1;\nloop invariant i12: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n;\nloop invariant i13: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1;\nloop invariant i14: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m;\nloop invariant i15: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1;\nloop invariant i16: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n;\nloop invariant i17: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1;\nloop invariant i18: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x;\nloop invariant i19: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m;\nloop invariant i20: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m ==> x <= n-1;\nloop invariant i21: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n;\nloop invariant i22: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1;\nloop invariant i23: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x;\n*/\nwhile(x<=n-1) {\n    x++;\n    if(x>=m+1) y++;\n    else if(x > m) \n\nreturn;\n\n    x = x;\n  }\n  if(x < n)\n    \nreturn;\n\n  if(y >= n+1)\n  {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y >= m;\nloop invariant y <= m+1;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant y >= m+1;\nloop invariant y <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant y >= m+1;\nloop invariant y <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\nloop invariant x <= n;\nloop invariant x >= m+1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1(){\n    int x; return x;\n}\n\nint unknown2(){\n    int x; return x;\n}\n\nint unknown3();\nint unknown4();\n\nint n, m;\n\nvoid main()\n{\n  n = unknown1();\n  m = unknown2();\n  int x=0; \n  int y;\n  y = m;\n  if(n < 0)\n    \nreturn;\n\n  if(m < 0)\n    \nreturn;\n\n  if(m > n-1)\n    \nreturn;\n\n  /*@\nloop invariant i1: x >= 0;\nloop invariant i2: y >= 0;\nloop invariant i3: x <= n;\n\nloop invariant i5: y >= m;\n\n\n\n*/\nwhile(x<=n-1) {\n    x++;\n    if(x>=m+1) y++;\n    else if(x > m) \n\nreturn;\n\n    x = x;\n  }\n  if(x < n)\n    \nreturn;\n\n  if(y >= n+1)\n  {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x <= y <= n;\nloop invariant y <= n;\nloop invariant x <= m;\nloop invariant x > m ==> y > m;\nloop invariant x > m ==> x <= m + 1;\nloop invariant x > m ==> y >= m + 1;\nloop invariant y > m ==> y <= n;\nloop invariant x > m ==> y >= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1(){\n    int x; return x;\n}\n\nint unknown2(){\n    int x; return x;\n}\n\nint unknown3();\nint unknown4();\n\nint n, m;\n\nvoid main()\n{\n  n = unknown1();\n  m = unknown2();\n  int x=0; \n  int y;\n  y = m;\n  if(n < 0)\n    \nreturn;\n\n  if(m < 0)\n    \nreturn;\n\n  if(m > n-1)\n    \nreturn;\n\n  /*@\nloop invariant i1: 0 <= x <= n;\n\n\n\n\n\n\n\n\n*/\nwhile(x<=n-1) {\n    x++;\n    if(x>=m+1) y++;\n    else if(x > m) \n\nreturn;\n\n    x = x;\n  }\n  if(x < n)\n    \nreturn;\n\n  if(y >= n+1)\n  {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 76,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n-1;\nloop invariant m <= y <= n;\nloop invariant x + y <= n;\nloop invariant m + x <= n;\nloop invariant x <= m;\nloop invariant x + y >= n;\nloop invariant x + y >= n + 1;\nloop invariant x + y >= n + 2;\nloop invariant x + y >= n + 3;\nloop invariant x + y >= n + 4;\nloop invariant x + y >= n + 5;\nloop invariant x + y >= n + 6;\nloop invariant x + y >= n + 7;\nloop invariant x + y >= n + 8;\nloop invariant x + y >= n + 9;\nloop invariant x + y >= n + 10;\nloop invariant x + y >= n + 11;\nloop invariant x + y >= n + 12;\nloop invariant x + y >= n + 13;\nloop invariant x + y >= n + 14;\nloop invariant x + y >= n + 15;\nloop invariant x + y >= n + 16;\nloop invariant x + y >= n + 17;\nloop invariant x + y >= n + 18;\nloop invariant x + y >= n + 19;\nloop invariant x + y >= n + 20;\nloop invariant x + y >= n + 21;\nloop invariant x + y >= n + 22;\nloop invariant x + y >= n + 23;\nloop invariant x + y >= n + 24;\nloop invariant x + y >= n + 25;\nloop invariant x + y >= n + 26;\nloop invariant x + y >= n + 27;\nloop invariant x + y >= n + 28;\nloop invariant x + y >= n + 29;\nloop invariant x + y >= n + 30;\nloop invariant x + y >= n + 31;\nloop invariant x + y >= n + 32;\nloop invariant x + y >= n + 33;\nloop invariant x + y >= n + 34;\nloop invariant x + y >= n + 35;\nloop invariant x + y >= n + 36;\nloop invariant x + y >= n + 37;\nloop invariant x + y >= n + 38;\nloop invariant x + y >= n + 39;\nloop invariant x + y >= n + 40;\nloop invariant x + y >= n + 41;\nloop invariant x + y >= n + 42;\nloop invariant x + y >= n + 43;\nloop invariant x + y >= n + 44;\nloop invariant x + y >= n + 45;\nloop invariant x + y >= n + 46;\nloop invariant x + y >= n + 47;\nloop invariant x + y >= n + 48;\nloop invariant x + y >= n + 49;\nloop invariant x + y >= n + 50;\nloop invariant x + y >= n + 51;\nloop invariant x + y >= n + 52;\nloop invariant x + y >= n + 53;\nloop invariant x + y >= n + 54;\nloop invariant x + y >= n + 55;\nloop invariant x + y >= n + 56;\nloop invariant x + y >= n + 57;\nloop invariant x + y >= n + 58;\nloop invariant x + y >= n + 59;\nloop invariant x + y >= n + 60;\nloop invariant x + y >= n + 61;\nloop invariant x + y >= n + 62;\nloop invariant x + y >= n + 63;\nloop invariant x + y >= n + 64;\nloop invariant x + y >= n + 65;\nloop invariant x + y >= n + 66;\nloop invariant x + y >= n + 67;\nloop invariant x + y >= n + 68;\nloop invariant x + y >= n + 69;\nloop invariant x + y >= n + 70;\nloop invariant x + y >= n + 71;\nloop invariant x + y >= n + 72;\nloop invariant x + y >= n + 73;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1(){\n    int x; return x;\n}\n\nint unknown2(){\n    int x; return x;\n}\n\nint unknown3();\nint unknown4();\n\nint n, m;\n\nvoid main()\n{\n  n = unknown1();\n  m = unknown2();\n  int x=0; \n  int y;\n  y = m;\n  if(n < 0)\n    \nreturn;\n\n  if(m < 0)\n    \nreturn;\n\n  if(m > n-1)\n    \nreturn;\n\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x<=n-1) {\n    x++;\n    if(x>=m+1) y++;\n    else if(x > m) \n\nreturn;\n\n    x = x;\n  }\n  if(x < n)\n    \nreturn;\n\n  if(y >= n+1)\n  {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant y >= m && y <= n;\nloop invariant x >= m;\nloop invariant y <= x;\nloop invariant n >= m;\nloop invariant n >= 0;\nloop invariant m >= 0;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\nloop invariant n >= x;\nloop invariant m <= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1(){\n    int x; return x;\n}\n\nint unknown2(){\n    int x; return x;\n}\n\nint unknown3();\nint unknown4();\n\nint n, m;\n\nvoid main()\n{\n  n = unknown1();\n  m = unknown2();\n  int x=0; \n  int y;\n  y = m;\n  if(n < 0)\n    \nreturn;\n\n  if(m < 0)\n    \nreturn;\n\n  if(m > n-1)\n    \nreturn;\n\n  /*@\nloop invariant i1: 0 <= x <= n;\n\n\n\nloop invariant i5: n >= m;\nloop invariant i6: n >= 0;\nloop invariant i7: m >= 0;\nloop invariant i8: n >= x;\n\n*/\nwhile(x<=n-1) {\n    x++;\n    if(x>=m+1) y++;\n    else if(x > m) \n\nreturn;\n\n    x = x;\n  }\n  if(x < n)\n    \nreturn;\n\n  if(y >= n+1)\n  {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 55: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1(){\n    int x; return x;\n}\n\nint unknown2(){\n    int x; return x;\n}\n\nint unknown3();\nint unknown4();\n\nint n, m;\n\nvoid main()\n{\n  n = unknown1();\n  m = unknown2();\n  int x=0; \n  int y;\n  y = m;\n  if(n < 0)\n    \nreturn;\n\n  if(m < 0)\n    \nreturn;\n\n  if(m > n-1)\n    \nreturn;\n\n  /*@\nloop invariant i1: y >= m + 1;\nloop invariant i2: n >= 1;\nloop invariant i3: x >= 0;\nloop invariant i4: n >= m;\nloop invariant i5: m >= 0;\nloop invariant i6: n >= y;\nloop invariant i7: (x <= n - 1) ==> (y <= n);\nloop invariant i8: (x <= n - 1) ==> (y >= m + 1);\nloop invariant i9: (x <= n - 1) ==> (y <= n + 1);\nloop invariant i10: (x <= n - 1) ==> (y >= m);\nloop invariant i11: (x <= n - 1) ==> (y <= n - 1);\nloop invariant i12: 0 <= m <= n;\nloop invariant i13: x <= n;\nloop invariant i14: y <= n;\nloop invariant i15: y <= x;\nloop invariant i16: (x <= m ==> y = m);\nloop invariant i17: (x > m ==> y = m+1);\nloop invariant i18: x >= m;\nloop invariant i19: 0 <= y <= n;\nloop invariant i20: y >= m;\nloop invariant i21: x + y = m;\nloop invariant i22: y + 1 = m;\nloop invariant i23: x = n - y;\nloop invariant i24: x = n - y + 1;\nloop invariant i25: x = n - y - 1;\nloop invariant i26: x = n - y + 2;\nloop invariant i27: x = n - y - 2;\nloop invariant i28: x = n - y + 3;\nloop invariant i29: x = n - y - 3;\nloop invariant i30: x = n - y + 4;\nloop invariant i31: x = n - y - 4;\nloop invariant i32: x = n - y + 5;\nloop invariant i33: x = n - y - 5;\nloop invariant i34: x = n - y + 6;\nloop invariant i35: x = n - y - 6;\nloop invariant i36: x = n - y + 7;\nloop invariant i37: x = n - y - 7;\nloop invariant i38: x = n - y + 8;\nloop invariant i39: x = n - y - 8;\nloop invariant i40: x = n - y + 9;\nloop invariant i41: x = n - y - 9;\nloop invariant i42: x = n - y + 10;\nloop invariant i43: x = n - y - 10;\nloop invariant i44: x = n - y + 11;\nloop invariant i45: x = n - y - 11;\nloop invariant i46: x = n - y + 12;\nloop invariant i47: x = n - y - 12;\nloop invariant i48: x = n - y + 13;\nloop invariant i49: x = n - y - 13;\nloop invariant i50: x = n - y + 14;\nloop invariant i51: x = n - y - 14;\nloop invariant i52: x = n - y + 15;\nloop invariant i53: x = n - y - 15;\nloop invariant i54: x = n - y + 16;\nloop invariant i55: x = n - y - 16;\nloop invariant i56: x = n - y + 17;\nloop invariant i57: x = n - y - 17;\nloop invariant i58: x = n - y + 18;\nloop invariant i59: x = n - y - 18;\nloop invariant i60: x = n - y + 19;\nloop invariant i61: x = n - y - 19;\nloop invariant i62: x = n - y + 20;\nloop invariant i63: x = n - y - 20;\nloop invariant i64: x = n - y + 21;\nloop invariant i65: x = n - y - 21;\nloop invariant i66: x = n - y + 22;\nloop invariant i67: x = n - y - 22;\nloop invariant i68: x = n - y + 23;\nloop invariant i69: x = n - y - 23;\nloop invariant i70: x = n - y + 24;\nloop invariant i71: x = n - y - 24;\nloop invariant i72: x = n - y + 25;\nloop invariant i73: x = n - y - 25;\nloop invariant i74: x = n - y + 26;\nloop invariant i75: x = n - y - 26;\nloop invariant i76: x = n - y + 27;\nloop invariant i77: x = n - y - 27;\nloop invariant i78: x = n - y + 28;\nloop invariant i79: x = n - y - 28;\nloop invariant i80: x = n - y + 29;\nloop invariant i81: x = n - y - 29;\nloop invariant i82: x = n - y + 30;\nloop invariant i83: x = n - y - 30;\nloop invariant i84: x = n - y + 31;\nloop invariant i85: x = n - y - 31;\nloop invariant i86: x = n - y + 32;\nloop invariant i87: x = n - y - 32;\nloop invariant i88: x = n - y + 33;\nloop invariant i89: x = n - y - 33;\nloop invariant i90: x = n - y + 34;\nloop invariant i91: x = n - y - 34;\nloop invariant i92: x = n - y + 35;\nloop invariant i93: x = n - y - 35;\nloop invariant i94: x = n - y + 36;\nloop invariant i95: x = n - y - 36;\nloop invariant i96: x = n - y + 37;\nloop invariant i97: x = n - y - 37;\nloop invariant i98: x = n - y + 38;\nloop invariant i99: x = n - y - 38;\nloop invariant i100: x = n - y + 39;\nloop invariant i101: x = n - y - 39;\nloop invariant i102: x = n - y + 40;\nloop invariant i103: x = n - y - 40;\nloop invariant i104: 0 <= x <= n;\nloop invariant i105: x >= y;\nloop invariant i106: m <= y <= n;\nloop invariant i107: ( ( ( ( x == 0 ) && ( y == m ) ) && ( x <= n ) ) && ( y <= n ) ) && ( y >= 0 ) ) ==> ( ( ( x == n ) && ( y == n + 1 ) ) || ( ( x == n ) && ( y == m ) ) || ( ( x == m + 1 ) && ( y == m ) ) );\nloop invariant i108: y = m + x - n;\nloop invariant i109: n + 1 <= y + x ==> x >= n;\nloop invariant i110: y + x <= n ==> x < n;\nloop invariant i111: n + 1 <= y + x ==> y >= n + 1;\nloop invariant i112: y + x <= n ==> y < n + 1;\nloop invariant i113: x - 1 <= y <= n - 1;\nloop invariant i114: x - m <= y - m <= n - m;\nloop invariant i115: x - m <= y - m <= n - m ==> y == x - m + m;\nloop invariant i116: x - m <= y - m <= n - m ==> y == x - m;\nloop invariant i117: x - m <= y - m <= n - m ==> y == x - m ==> x >= m + 1;\nloop invariant i118: x - m <= y - m <= n - m ==> y == x - m ==> x >= m + 1 ==> x == m + 1;\nloop invariant i119: x - m <= y - m <= n - m ==> y == x - m ==> x >= m + 1 ==> x == m + 1 ==> x == m + 1;\nloop invariant i120: 1 <= x <= n;\nloop invariant i121: 0 <= y <= m;\nloop invariant i122: ( x = ( m + y ) );\nloop invariant i123: ( y <= m );\nloop invariant i124: ( y >= 0 );\nloop invariant i125: ( x <= n );\nloop invariant i126: ( x >= 0 );\nloop invariant i127: ( y <= x );\nloop invariant i128: ( x <= n - 1 );\nloop invariant i129: ( x >= y );\nloop invariant i130: x <= n-1;\nloop invariant i131: x <= n-1 ==> y <= n-1;\nloop invariant i132: x <= n-1 ==> y >= m;\nloop invariant i133: x <= n-1 ==> y <= n-1 ==> y <= x;\nloop invariant i134: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x;\nloop invariant i135: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m;\nloop invariant i136: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1;\nloop invariant i137: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n;\nloop invariant i138: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1;\nloop invariant i139: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m;\nloop invariant i140: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1;\nloop invariant i141: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n;\nloop invariant i142: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1;\nloop invariant i143: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x;\nloop invariant i144: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m;\nloop invariant i145: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m ==> x <= n-1;\nloop invariant i146: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n;\nloop invariant i147: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1;\nloop invariant i148: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x;\nloop invariant i149: y >= 0;\nloop invariant i150: y <= m+1;\nloop invariant i151: x >= m+1;\nloop invariant i152: y >= m+1;\nloop invariant i153: x <= y <= n;\nloop invariant i154: x <= m;\nloop invariant i155: x > m ==> y > m;\nloop invariant i156: x > m ==> x <= m + 1;\nloop invariant i157: x > m ==> y >= m + 1;\nloop invariant i158: y > m ==> y <= n;\nloop invariant i159: x > m ==> y >= n;\nloop invariant i160: 0 <= x <= n-1;\nloop invariant i161: x + y <= n;\nloop invariant i162: m + x <= n;\nloop invariant i163: x + y >= n;\nloop invariant i164: x + y >= n + 1;\nloop invariant i165: x + y >= n + 2;\nloop invariant i166: x + y >= n + 3;\nloop invariant i167: x + y >= n + 4;\nloop invariant i168: x + y >= n + 5;\nloop invariant i169: x + y >= n + 6;\nloop invariant i170: x + y >= n + 7;\nloop invariant i171: x + y >= n + 8;\nloop invariant i172: x + y >= n + 9;\nloop invariant i173: x + y >= n + 10;\nloop invariant i174: x + y >= n + 11;\nloop invariant i175: x + y >= n + 12;\nloop invariant i176: x + y >= n + 13;\nloop invariant i177: x + y >= n + 14;\nloop invariant i178: x + y >= n + 15;\nloop invariant i179: x + y >= n + 16;\nloop invariant i180: x + y >= n + 17;\nloop invariant i181: x + y >= n + 18;\nloop invariant i182: x + y >= n + 19;\nloop invariant i183: x + y >= n + 20;\nloop invariant i184: x + y >= n + 21;\nloop invariant i185: x + y >= n + 22;\nloop invariant i186: x + y >= n + 23;\nloop invariant i187: x + y >= n + 24;\nloop invariant i188: x + y >= n + 25;\nloop invariant i189: x + y >= n + 26;\nloop invariant i190: x + y >= n + 27;\nloop invariant i191: x + y >= n + 28;\nloop invariant i192: x + y >= n + 29;\nloop invariant i193: x + y >= n + 30;\nloop invariant i194: x + y >= n + 31;\nloop invariant i195: x + y >= n + 32;\nloop invariant i196: x + y >= n + 33;\nloop invariant i197: x + y >= n + 34;\nloop invariant i198: x + y >= n + 35;\nloop invariant i199: x + y >= n + 36;\nloop invariant i200: x + y >= n + 37;\nloop invariant i201: x + y >= n + 38;\nloop invariant i202: x + y >= n + 39;\nloop invariant i203: x + y >= n + 40;\nloop invariant i204: x + y >= n + 41;\nloop invariant i205: x + y >= n + 42;\nloop invariant i206: x + y >= n + 43;\nloop invariant i207: x + y >= n + 44;\nloop invariant i208: x + y >= n + 45;\nloop invariant i209: x + y >= n + 46;\nloop invariant i210: x + y >= n + 47;\nloop invariant i211: x + y >= n + 48;\nloop invariant i212: x + y >= n + 49;\nloop invariant i213: x + y >= n + 50;\nloop invariant i214: x + y >= n + 51;\nloop invariant i215: x + y >= n + 52;\nloop invariant i216: x + y >= n + 53;\nloop invariant i217: x + y >= n + 54;\nloop invariant i218: x + y >= n + 55;\nloop invariant i219: x + y >= n + 56;\nloop invariant i220: x + y >= n + 57;\nloop invariant i221: x + y >= n + 58;\nloop invariant i222: x + y >= n + 59;\nloop invariant i223: x + y >= n + 60;\nloop invariant i224: x + y >= n + 61;\nloop invariant i225: x + y >= n + 62;\nloop invariant i226: x + y >= n + 63;\nloop invariant i227: x + y >= n + 64;\nloop invariant i228: x + y >= n + 65;\nloop invariant i229: x + y >= n + 66;\nloop invariant i230: x + y >= n + 67;\nloop invariant i231: x + y >= n + 68;\nloop invariant i232: x + y >= n + 69;\nloop invariant i233: x + y >= n + 70;\nloop invariant i234: x + y >= n + 71;\nloop invariant i235: x + y >= n + 72;\nloop invariant i236: x + y >= n + 73;\nloop invariant i237: y >= m && y <= n;\nloop invariant i238: n >= 0;\nloop invariant i239: n >= x;\nloop invariant i240: m <= x;\n*/\nwhile(x<=n-1) {\n    x++;\n    if(x>=m+1) y++;\n    else if(x > m) \n\nreturn;\n\n    x = x;\n  }\n  if(x < n)\n    \nreturn;\n\n  if(y >= n+1)\n  {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n}",
        "combined_annotation_num_solver_calls": 183,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1(){\n    int x; return x;\n}\n\nint unknown2(){\n    int x; return x;\n}\n\nint unknown3();\nint unknown4();\n\nint n, m;\n\nvoid main()\n{\n  n = unknown1();\n  m = unknown2();\n  int x=0; \n  int y;\n  y = m;\n  if(n < 0)\n    \nreturn;\n\n  if(m < 0)\n    \nreturn;\n\n  if(m > n-1)\n    \nreturn;\n\n  /*@\n\nloop invariant i2: n >= 1;\nloop invariant i3: x >= 0;\nloop invariant i4: n >= m;\nloop invariant i5: m >= 0;\n\n\n\n\nloop invariant i10: (x <= n - 1) ==> (y >= m);\n\nloop invariant i12: 0 <= m <= n;\nloop invariant i13: x <= n;\n\n\n\n\n\n\nloop invariant i20: y >= m;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i104: 0 <= x <= n;\n\n\n\n\n\nloop invariant i110: y + x <= n ==> x < n;\n\nloop invariant i112: y + x <= n ==> y < n + 1;\n\n\n\n\n\n\nloop invariant i119: x - m <= y - m <= n - m ==> y == x - m ==> x >= m + 1 ==> x == m + 1 ==> x == m + 1;\n\n\n\n\nloop invariant i124: ( y >= 0 );\nloop invariant i125: ( x <= n );\nloop invariant i126: ( x >= 0 );\n\n\n\n\n\nloop invariant i132: x <= n-1 ==> y >= m;\n\n\nloop invariant i135: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m;\nloop invariant i136: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1;\nloop invariant i137: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n;\nloop invariant i138: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1;\nloop invariant i139: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m;\nloop invariant i140: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1;\nloop invariant i141: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n;\nloop invariant i142: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1;\nloop invariant i143: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x;\nloop invariant i144: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m;\nloop invariant i145: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m ==> x <= n-1;\nloop invariant i146: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n;\nloop invariant i147: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1;\nloop invariant i148: x <= n-1 ==> y >= m ==> y <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x ==> y >= m ==> x <= n-1 ==> y <= n ==> x <= n-1 ==> y <= x;\nloop invariant i149: y >= 0;\n\n\n\n\n\nloop invariant i155: x > m ==> y > m;\n\nloop invariant i157: x > m ==> y >= m + 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i238: n >= 0;\nloop invariant i239: n >= x;\n\n*/\nwhile(x<=n-1) {\n    x++;\n    if(x>=m+1) y++;\n    else if(x > m) \n\nreturn;\n\n    x = x;\n  }\n  if(x < n)\n    \nreturn;\n\n  if(y >= n+1)\n  {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/popl.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/05.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/07.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c"
        ],
        "skipped": [],
        "total": 129,
        "success_count": 106,
        "failure_count": 23,
        "success_rate": 0.8217054263565892
    }
}