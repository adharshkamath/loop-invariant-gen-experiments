{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  while( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= -50;\nloop invariant y > 0;\nloop invariant y >= 1;\nloop invariant x + y <= -50;\nloop invariant x + y >= -1000000;\nloop invariant x >= -50 + y * y / 2;\n*/\n```",
            "```\n/*@\nloop invariant y > 0;\nloop invariant x >= -50;\nloop invariant x < 0;\nloop invariant x + y >= -50;\nloop invariant y <= 100000;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 1 <= y <= 100000;\nloop invariant y <= 500000;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= y - 1;\nloop invariant x >= y;\nloop invariant x >= y + 1;\nloop invariant x >= y + 2;\nloop invariant x >= y + 3;\nloop invariant x >= y + 4;\nloop invariant x >= y + 5;\nloop invariant x >= y + 6;\nloop invariant x >= y + 7;\nloop invariant x >= y + 8;\nloop invariant x >= y + 9;\nloop invariant x >= y + 10;\nloop invariant x >= y + 11;\nloop invariant x >= y + 12;\nloop invariant x >= y + 13;\nloop invariant x >= y + 14;\nloop invariant x >= y + 15;\nloop invariant x >= y + 16;\nloop invariant x >= y + 17;\nloop invariant x >= y + 18;\nloop invariant x >= y + 19;\nloop invariant x >= y + 20;\nloop invariant x >= y + 21;\nloop invariant x >= y + 22;\nloop invariant x >= y + 23;\nloop invariant x >= y + 24;\nloop invariant x >= y + 25;\nloop invariant x >= y + 26;\nloop invariant x >= y + 27;\nloop invariant x >= y + 28;\nloop invariant x >= y + 29;\nloop invariant x >= y + 30;\nloop invariant x >= y + 31;\nloop invariant x >= y + 32;\nloop invariant x >= y + 33;\nloop invariant x >= y + 34;\nloop invariant x >= y + 35;\nloop invariant x >= y + 36;\nloop invariant x >= y + 37;\nloop invariant x >= y + 38;\nloop invariant x >= y + 39;\nloop invariant x >= y + 40;\nloop invariant x >= y + 41;\nloop invariant x >= y + 42;\nloop invariant x >= y + 43;\nloop invariant x >= y + 44;\nloop invariant x >= y + 45;\nloop invariant x >= y + 46;\nloop invariant x >= y + 47;\nloop invariant x >= y + 48;\nloop invariant x >= y + 49;\nloop invariant x >= y + 50;\nloop invariant x >= y + 51;\nloop invariant x >= y + 52;\nloop invariant x >= y + 53;\nloop invariant x >= y + 54;\nloop invariant x >= y + 55;\nloop invariant x >= y + 56;\nloop invariant x >= y + 57;\nloop invariant x >= y + 58;\nloop invariant x >= y + 59;\nloop invariant x >= y + 60;\nloop invariant x >= y + 61;\nloop invariant x >= y + 62;\nloop invariant x >= y + 63;\nloop invariant x >= y + 64;\nloop invariant x >= y + 65;\nloop invariant x >= y + 66;\nloop invariant x >= y + 67;\nloop invariant x >= y + 68;\nloop invariant x >= y + 69;\nloop invariant x >= y + 70;\nloop invariant x >= y + 71;\nloop invariant x >= y + 72;\nloop invariant x >= y + 73;\nloop invariant x >= y + 74;\nloop invariant x >= y + 75;\nloop invariant x >= y + 76;\nloop invariant x >= y + 77;\nloop invariant x >= y + 78;\nloop invariant x >= y + 79;\nloop invariant x >= y + 80;\nloop invariant x >= y + 81;\nloop invariant x >= y + 82;\nloop invariant x >= y + 83;\nloop invariant x >= y + 84;\nloop invariant x >= y + 85;\nloop invariant x >= y + 86;\nloop invariant x >= y + 87;\nloop invariant x >= y + 88;\nloop invariant x >= y + 89;\nloop invariant x >= y + 90;\nloop invariant x >= y + 91;\n*/\n```",
            "```\n/*@\nloop invariant -50 <= x <= 100000;\nloop invariant y >= 1;\nloop invariant x + y <= 100000;\nloop invariant x >= -50 + y - 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 50;\nloop invariant x >= -50;\nloop invariant x < 0 ==> y > 0;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x + y <= 100000;\nloop invariant x >= -50;\nloop invariant y >= 0;\nloop invariant x + y >= -50;\n*/\n```",
            "```\n/*@\nloop invariant x <= -50;\nloop invariant y > 0;\nloop invariant y <= 100000;\nloop invariant x >= (y - 1) * y / 2 - 50;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant y > 0;\nloop invariant x > 0;\nloop invariant x >= y;\nloop invariant x >= -50;\nloop invariant y >= 0;\nloop invariant x >= -(50 - y) * y / 2;\nloop invariant x >= -50 + y;\nloop invariant x >= -50 + y * (y - 1) / 2;\nloop invariant x >= -50 + y * (y - 1) / 2 + y;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y * (y + 4) / 2;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y * (y + 4) / 2 + y;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y * (y + 4) / 2 + y * (y + 5) / 2;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y * (y + 4) / 2 + y * (y + 5) / 2 + y;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y * (y + 4) / 2 + y * (y + 5) / 2 + y * (y + 6) / 2;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y * (y + 4) / 2 + y * (y + 5) / 2 + y * (y + 6) / 2 + y;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y * (y + 4) / 2 + y * (y + 5) / 2 + y * (y + 6) / 2 + y * (y + 7) / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= -50;\nloop invariant 0 <= y <= 100000;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\n*/\n```",
            "```\n/*@\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant x is greater than or equal to 0;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y;\nloop invariant -50 <= x;\nloop invariant x <= x+y;\nloop invariant y <= y+1;\nloop invariant x >= -50;\nloop invariant y >= 0;\nloop invariant x >= -50;\nloop invariant y >= 0;\nloop invariant x+y >= 0;\nloop invariant y >= 1;\nloop invariant x >= -50;\nloop invariant x+y >= 0;\nloop invariant y >= 1;\nloop invariant x+y <= x+1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= y <= 50;\nloop invariant x >= -50;\nloop invariant x < 0 ==> x+y >=0;\nloop invariant y > 0 ==> x+y < 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 1499999;\nloop invariant 1 <= y <= 1499999;\nloop invariant x + y >= 0;\nloop invariant x >= -50;\nloop invariant y >= 1;\nloop invariant y <= 1499999;\nloop invariant x <= 1499999;\nloop invariant x <= y + 1499998;\nloop invariant y <= x + 1499998;\nloop invariant x + y >= -49;\nloop invariant y - x >= 1;\nloop invariant y - x <= 1499998;\nloop invariant x - y <= -49;\nloop invariant x - y >= -1499999;\nloop invariant x + y >= 0;\nloop invariant x >= -50;\nloop invariant y >= 1;\nloop invariant y <= 1499999;\nloop invariant x <= 1499999;\nloop invariant x <= y + 1499998;\nloop invariant y <= x + 1499998;\nloop invariant x + y >= -49;\nloop invariant y - x >= 1;\nloop invariant y - x <= 1499998;\nloop invariant x - y <= -49;\nloop invariant x - y >= -1499999;\nloop invariant x + y >= 0;\nloop invariant x >= -50;\nloop invariant y >= 1;\nloop invariant y <= 1499999;\nloop invariant x <= 1499999;\nloop invariant x <= y + 1499998;\nloop invariant y <= x + 1499998;\nloop invariant x + y >= -49;\nloop invariant y - x >= 1;\nloop invariant y - x <= 1499998;\nloop invariant x - y <= -49;\nloop invariant x - y >= -1499999;\nloop invariant x + y >= 0;\nloop invariant x >= -50;\nloop invariant y >= 1;\nloop invariant y <= 1499999;\nloop invariant x <= 1499999;\nloop invariant x <= y + 1499998;\nloop invariant y <= x + 1499998;\nloop invariant x + y >= -49;\nloop invariant y - x >= 1;\nloop invariant y - x <= 1499998;\nloop invariant x - y <= -49;\nloop invariant x - y >= -1499999;\nloop invariant x + y >= 0;\nloop invariant x >= -50;\nloop invariant y >= 1;\nloop invariant y <= 1499999;\nloop invariant x <= 1499999;\nloop invariant x <= y + 1499998;\nloop invariant y <= x + 1499998;\nloop invariant x + y >= -49;\nloop invariant y - x >= 1;\nloop invariant y - x <= 1499998;\nloop invariant x - y <= -49;\nloop invariant x - y >= -1499999;\nloop invariant x + y >= 0;\nloop invariant x >= -50;\nloop invariant y >= 1;\nloop invariant y <= 1499999;\nloop invariant x <= 1499999;\nloop invariant x <= y + 1499998;\nloop invariant y <= x + 1499998;\nloop invariant x + y >= -49;\nloop invariant y - x >= 1;\nloop invariant y - x <= 1499998;\nloop invariant x - y <= -49;\nloop invariant x - y >= -1499999;\nloop invariant x + y >= 0;\nloop invariant x >= -50;\nloop invariant y >= 1;\nloop invariant y <= 1499999;\nloop invariant x <= 1499999;\nloop invariant x <= y + 1499998;\nloop invariant y <= x + 1499998;\nloop invariant x + y >= -49;\nloop invariant y - x >= 1;\nloop invariant y - x <= 1499998;\nloop invariant x - y <= -49;\n*/\n```",
            "```\n/*@\nloop invariant y > 0;\nloop invariant x >= -50;\nloop invariant y >= 1;\nloop invariant x + y * (y + 1) / 2 <= y * y;\nloop invariant x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2;\nloop invariant x < 0 ==> (x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2);\nloop invariant x < 0 ==> (x < 0);\nloop invariant x < 0 ==> (x + y * (y + 1) / 2 <= y * y);\nloop invariant x < 0 ==> (y > 0);\nloop invariant x < 0 ==> (y >= 1);\nloop invariant y > 0 ==> (y >= 1);\nloop invariant y > 0 ==> (x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2);\nloop invariant y > 0 ==> (x + y * (y + 1) / 2 <= y * y);\nloop invariant y > 0 ==> (x < 0);\nloop invariant y > 0 ==> (y >= 1);\nloop invariant x >= -50 ==> (x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2);\nloop invariant x >= -50 ==> (x + y * (y + 1) / 2 <= y * y);\nloop invariant x >= -50 ==> (y > 0);\nloop invariant x >= -50 ==> (y >= 1);\nloop invariant y >= 1 ==> (x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2);\nloop invariant y >= 1 ==> (x + y * (y + 1) / 2 <= y * y);\nloop invariant y >= 1 ==> (y > 0);\nloop invariant y >= 1 ==> (x >= -50);\nloop invariant x + y * (y + 1) / 2 <= y * y ==> (y > 0);\nloop invariant x + y * (y + 1) / 2 <= y * y ==> (y >= 1);\nloop invariant x + y * (y + 1) / 2 <= y * y ==> (x >= -50);\nloop invariant x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2 ==> (y > 0);\nloop invariant x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2 ==> (y >= 1);\nloop invariant x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2 ==> (x >= -50);\nloop invariant y > 0 ==> (x + y * (y + 1) / 2 <= y * y);\nloop invariant y > 0 ==> (x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2);\nloop invariant y > 0 ==> (y >= 1);\nloop invariant y > 0 ==> (x >= -50);\nloop invariant y >= 1 ==> (x + y * (y + 1) / 2 <= y * y);\nloop invariant y >= 1 ==> (x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2);\nloop invariant y >= 1 ==> (y > 0);\nloop invariant y >= 1 ==> (x >= -50);\nloop invariant x + y * (y + 1) / 2 <= y * y ==> (y > 0);\nloop invariant x + y * (y + 1) / 2 <= y * y ==> (y >= 1);\nloop invariant x + y * (y + 1) / 2 <= y * y ==> (x >= -50);\nloop invariant x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2 ==> (y > 0);\nloop invariant x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2 ==> (y >= 1);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= -50;\nloop invariant y > 0;\nloop invariant y >= 1;\nloop invariant x + y <= -50;\nloop invariant x + y >= -1000000;\nloop invariant x >= -50 + y * y / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant y > 0;\nloop invariant x >= -50;\nloop invariant x < 0;\nloop invariant x + y >= -50;\nloop invariant y <= 100000;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 1 <= y <= 100000;\nloop invariant y <= 500000;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= y - 1;\nloop invariant x >= y;\nloop invariant x >= y + 1;\nloop invariant x >= y + 2;\nloop invariant x >= y + 3;\nloop invariant x >= y + 4;\nloop invariant x >= y + 5;\nloop invariant x >= y + 6;\nloop invariant x >= y + 7;\nloop invariant x >= y + 8;\nloop invariant x >= y + 9;\nloop invariant x >= y + 10;\nloop invariant x >= y + 11;\nloop invariant x >= y + 12;\nloop invariant x >= y + 13;\nloop invariant x >= y + 14;\nloop invariant x >= y + 15;\nloop invariant x >= y + 16;\nloop invariant x >= y + 17;\nloop invariant x >= y + 18;\nloop invariant x >= y + 19;\nloop invariant x >= y + 20;\nloop invariant x >= y + 21;\nloop invariant x >= y + 22;\nloop invariant x >= y + 23;\nloop invariant x >= y + 24;\nloop invariant x >= y + 25;\nloop invariant x >= y + 26;\nloop invariant x >= y + 27;\nloop invariant x >= y + 28;\nloop invariant x >= y + 29;\nloop invariant x >= y + 30;\nloop invariant x >= y + 31;\nloop invariant x >= y + 32;\nloop invariant x >= y + 33;\nloop invariant x >= y + 34;\nloop invariant x >= y + 35;\nloop invariant x >= y + 36;\nloop invariant x >= y + 37;\nloop invariant x >= y + 38;\nloop invariant x >= y + 39;\nloop invariant x >= y + 40;\nloop invariant x >= y + 41;\nloop invariant x >= y + 42;\nloop invariant x >= y + 43;\nloop invariant x >= y + 44;\nloop invariant x >= y + 45;\nloop invariant x >= y + 46;\nloop invariant x >= y + 47;\nloop invariant x >= y + 48;\nloop invariant x >= y + 49;\nloop invariant x >= y + 50;\nloop invariant x >= y + 51;\nloop invariant x >= y + 52;\nloop invariant x >= y + 53;\nloop invariant x >= y + 54;\nloop invariant x >= y + 55;\nloop invariant x >= y + 56;\nloop invariant x >= y + 57;\nloop invariant x >= y + 58;\nloop invariant x >= y + 59;\nloop invariant x >= y + 60;\nloop invariant x >= y + 61;\nloop invariant x >= y + 62;\nloop invariant x >= y + 63;\nloop invariant x >= y + 64;\nloop invariant x >= y + 65;\nloop invariant x >= y + 66;\nloop invariant x >= y + 67;\nloop invariant x >= y + 68;\nloop invariant x >= y + 69;\nloop invariant x >= y + 70;\nloop invariant x >= y + 71;\nloop invariant x >= y + 72;\nloop invariant x >= y + 73;\nloop invariant x >= y + 74;\nloop invariant x >= y + 75;\nloop invariant x >= y + 76;\nloop invariant x >= y + 77;\nloop invariant x >= y + 78;\nloop invariant x >= y + 79;\nloop invariant x >= y + 80;\nloop invariant x >= y + 81;\nloop invariant x >= y + 82;\nloop invariant x >= y + 83;\nloop invariant x >= y + 84;\nloop invariant x >= y + 85;\nloop invariant x >= y + 86;\nloop invariant x >= y + 87;\nloop invariant x >= y + 88;\nloop invariant x >= y + 89;\nloop invariant x >= y + 90;\nloop invariant x >= y + 91;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant -50 <= x <= 100000;\nloop invariant y >= 1;\nloop invariant x + y <= 100000;\nloop invariant x >= -50 + y - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 50;\nloop invariant x >= -50;\nloop invariant x < 0 ==> y > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x + y <= 100000;\nloop invariant x >= -50;\nloop invariant y >= 0;\nloop invariant x + y >= -50;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant x <= -50;\nloop invariant y > 0;\nloop invariant y <= 100000;\nloop invariant x >= (y - 1) * y / 2 - 50;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 1 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant y > 0;\nloop invariant x > 0;\nloop invariant x >= y;\nloop invariant x >= -50;\nloop invariant y >= 0;\nloop invariant x >= -(50 - y) * y / 2;\nloop invariant x >= -50 + y;\nloop invariant x >= -50 + y * (y - 1) / 2;\nloop invariant x >= -50 + y * (y - 1) / 2 + y;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y * (y + 4) / 2;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y * (y + 4) / 2 + y;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y * (y + 4) / 2 + y * (y + 5) / 2;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y * (y + 4) / 2 + y * (y + 5) / 2 + y;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y * (y + 4) / 2 + y * (y + 5) / 2 + y * (y + 6) / 2;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y * (y + 4) / 2 + y * (y + 5) / 2 + y * (y + 6) / 2 + y;\nloop invariant x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y * (y + 4) / 2 + y * (y + 5) / 2 + y * (y + 6) / 2 + y * (y + 7) / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= -50;\nloop invariant 0 <= y <= 100000;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\nloop invariant x >= -50;\nloop invariant x <= -50;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant x is greater than or equal to 0;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is greater than 0;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\nloop invariant y is non-deterministic;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= y;\nloop invariant -50 <= x;\nloop invariant x <= x+y;\nloop invariant y <= y+1;\nloop invariant x >= -50;\nloop invariant y >= 0;\nloop invariant x >= -50;\nloop invariant y >= 0;\nloop invariant x+y >= 0;\nloop invariant y >= 1;\nloop invariant x >= -50;\nloop invariant x+y >= 0;\nloop invariant y >= 1;\nloop invariant x+y <= x+1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\nloop invariant i4: y <= y+1;\n\n\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= y <= 50;\nloop invariant x >= -50;\nloop invariant x < 0 ==> x+y >=0;\nloop invariant y > 0 ==> x+y < 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 1499999;\nloop invariant 1 <= y <= 1499999;\nloop invariant x + y >= 0;\nloop invariant x >= -50;\nloop invariant y >= 1;\nloop invariant y <= 1499999;\nloop invariant x <= 1499999;\nloop invariant x <= y + 1499998;\nloop invariant y <= x + 1499998;\nloop invariant x + y >= -49;\nloop invariant y - x >= 1;\nloop invariant y - x <= 1499998;\nloop invariant x - y <= -49;\nloop invariant x - y >= -1499999;\nloop invariant x + y >= 0;\nloop invariant x >= -50;\nloop invariant y >= 1;\nloop invariant y <= 1499999;\nloop invariant x <= 1499999;\nloop invariant x <= y + 1499998;\nloop invariant y <= x + 1499998;\nloop invariant x + y >= -49;\nloop invariant y - x >= 1;\nloop invariant y - x <= 1499998;\nloop invariant x - y <= -49;\nloop invariant x - y >= -1499999;\nloop invariant x + y >= 0;\nloop invariant x >= -50;\nloop invariant y >= 1;\nloop invariant y <= 1499999;\nloop invariant x <= 1499999;\nloop invariant x <= y + 1499998;\nloop invariant y <= x + 1499998;\nloop invariant x + y >= -49;\nloop invariant y - x >= 1;\nloop invariant y - x <= 1499998;\nloop invariant x - y <= -49;\nloop invariant x - y >= -1499999;\nloop invariant x + y >= 0;\nloop invariant x >= -50;\nloop invariant y >= 1;\nloop invariant y <= 1499999;\nloop invariant x <= 1499999;\nloop invariant x <= y + 1499998;\nloop invariant y <= x + 1499998;\nloop invariant x + y >= -49;\nloop invariant y - x >= 1;\nloop invariant y - x <= 1499998;\nloop invariant x - y <= -49;\nloop invariant x - y >= -1499999;\nloop invariant x + y >= 0;\nloop invariant x >= -50;\nloop invariant y >= 1;\nloop invariant y <= 1499999;\nloop invariant x <= 1499999;\nloop invariant x <= y + 1499998;\nloop invariant y <= x + 1499998;\nloop invariant x + y >= -49;\nloop invariant y - x >= 1;\nloop invariant y - x <= 1499998;\nloop invariant x - y <= -49;\nloop invariant x - y >= -1499999;\nloop invariant x + y >= 0;\nloop invariant x >= -50;\nloop invariant y >= 1;\nloop invariant y <= 1499999;\nloop invariant x <= 1499999;\nloop invariant x <= y + 1499998;\nloop invariant y <= x + 1499998;\nloop invariant x + y >= -49;\nloop invariant y - x >= 1;\nloop invariant y - x <= 1499998;\nloop invariant x - y <= -49;\nloop invariant x - y >= -1499999;\nloop invariant x + y >= 0;\nloop invariant x >= -50;\nloop invariant y >= 1;\nloop invariant y <= 1499999;\nloop invariant x <= 1499999;\nloop invariant x <= y + 1499998;\nloop invariant y <= x + 1499998;\nloop invariant x + y >= -49;\nloop invariant y - x >= 1;\nloop invariant y - x <= 1499998;\nloop invariant x - y <= -49;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 14,
                "annotations": "```\n/*@\nloop invariant y > 0;\nloop invariant x >= -50;\nloop invariant y >= 1;\nloop invariant x + y * (y + 1) / 2 <= y * y;\nloop invariant x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2;\nloop invariant x < 0 ==> (x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2);\nloop invariant x < 0 ==> (x < 0);\nloop invariant x < 0 ==> (x + y * (y + 1) / 2 <= y * y);\nloop invariant x < 0 ==> (y > 0);\nloop invariant x < 0 ==> (y >= 1);\nloop invariant y > 0 ==> (y >= 1);\nloop invariant y > 0 ==> (x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2);\nloop invariant y > 0 ==> (x + y * (y + 1) / 2 <= y * y);\nloop invariant y > 0 ==> (x < 0);\nloop invariant y > 0 ==> (y >= 1);\nloop invariant x >= -50 ==> (x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2);\nloop invariant x >= -50 ==> (x + y * (y + 1) / 2 <= y * y);\nloop invariant x >= -50 ==> (y > 0);\nloop invariant x >= -50 ==> (y >= 1);\nloop invariant y >= 1 ==> (x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2);\nloop invariant y >= 1 ==> (x + y * (y + 1) / 2 <= y * y);\nloop invariant y >= 1 ==> (y > 0);\nloop invariant y >= 1 ==> (x >= -50);\nloop invariant x + y * (y + 1) / 2 <= y * y ==> (y > 0);\nloop invariant x + y * (y + 1) / 2 <= y * y ==> (y >= 1);\nloop invariant x + y * (y + 1) / 2 <= y * y ==> (x >= -50);\nloop invariant x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2 ==> (y > 0);\nloop invariant x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2 ==> (y >= 1);\nloop invariant x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2 ==> (x >= -50);\nloop invariant y > 0 ==> (x + y * (y + 1) / 2 <= y * y);\nloop invariant y > 0 ==> (x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2);\nloop invariant y > 0 ==> (y >= 1);\nloop invariant y > 0 ==> (x >= -50);\nloop invariant y >= 1 ==> (x + y * (y + 1) / 2 <= y * y);\nloop invariant y >= 1 ==> (x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2);\nloop invariant y >= 1 ==> (y > 0);\nloop invariant y >= 1 ==> (x >= -50);\nloop invariant x + y * (y + 1) / 2 <= y * y ==> (y > 0);\nloop invariant x + y * (y + 1) / 2 <= y * y ==> (y >= 1);\nloop invariant x + y * (y + 1) / 2 <= y * y ==> (x >= -50);\nloop invariant x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2 ==> (y > 0);\nloop invariant x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2 ==> (y >= 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\nloop invariant i4: x + y * (y + 1) / 2 <= y * y;\n\n\nloop invariant i7: x < 0 ==> (x < 0);\nloop invariant i8: x < 0 ==> (x + y * (y + 1) / 2 <= y * y);\n\n\nloop invariant i11: y > 0 ==> (y >= 1);\n\nloop invariant i13: y > 0 ==> (x + y * (y + 1) / 2 <= y * y);\n\n\nloop invariant i16: x >= -50 ==> (x + y * (y + 1) / 2 <= y * y);\n\n\n\nloop invariant i20: y >= 1 ==> (x + y * (y + 1) / 2 <= y * y);\nloop invariant i21: y >= 1 ==> (y > 0);\n\n\n\n\n\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 153: unexpected token 'is'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\nloop invariant i1: 0 <= x <= -50;\nloop invariant i2: y > 0;\nloop invariant i3: y >= 1;\nloop invariant i4: x + y <= -50;\nloop invariant i5: x + y >= -1000000;\nloop invariant i6: x >= -50 + y * y / 2;\nloop invariant i7: x >= -50;\nloop invariant i8: x < 0;\nloop invariant i9: x + y >= -50;\nloop invariant i10: y <= 100000;\nloop invariant i11: 1 <= x <= 100000;\nloop invariant i12: x >= (1 + (y - 1) * y / 2);\nloop invariant i13: 1 <= y <= 100000;\nloop invariant i14: y <= 500000;\nloop invariant i15: y >= 0;\nloop invariant i16: x >= 0;\nloop invariant i17: x >= y - 1;\nloop invariant i18: x >= y;\nloop invariant i19: x >= y + 1;\nloop invariant i20: x >= y + 2;\nloop invariant i21: x >= y + 3;\nloop invariant i22: x >= y + 4;\nloop invariant i23: x >= y + 5;\nloop invariant i24: x >= y + 6;\nloop invariant i25: x >= y + 7;\nloop invariant i26: x >= y + 8;\nloop invariant i27: x >= y + 9;\nloop invariant i28: x >= y + 10;\nloop invariant i29: x >= y + 11;\nloop invariant i30: x >= y + 12;\nloop invariant i31: x >= y + 13;\nloop invariant i32: x >= y + 14;\nloop invariant i33: x >= y + 15;\nloop invariant i34: x >= y + 16;\nloop invariant i35: x >= y + 17;\nloop invariant i36: x >= y + 18;\nloop invariant i37: x >= y + 19;\nloop invariant i38: x >= y + 20;\nloop invariant i39: x >= y + 21;\nloop invariant i40: x >= y + 22;\nloop invariant i41: x >= y + 23;\nloop invariant i42: x >= y + 24;\nloop invariant i43: x >= y + 25;\nloop invariant i44: x >= y + 26;\nloop invariant i45: x >= y + 27;\nloop invariant i46: x >= y + 28;\nloop invariant i47: x >= y + 29;\nloop invariant i48: x >= y + 30;\nloop invariant i49: x >= y + 31;\nloop invariant i50: x >= y + 32;\nloop invariant i51: x >= y + 33;\nloop invariant i52: x >= y + 34;\nloop invariant i53: x >= y + 35;\nloop invariant i54: x >= y + 36;\nloop invariant i55: x >= y + 37;\nloop invariant i56: x >= y + 38;\nloop invariant i57: x >= y + 39;\nloop invariant i58: x >= y + 40;\nloop invariant i59: x >= y + 41;\nloop invariant i60: x >= y + 42;\nloop invariant i61: x >= y + 43;\nloop invariant i62: x >= y + 44;\nloop invariant i63: x >= y + 45;\nloop invariant i64: x >= y + 46;\nloop invariant i65: x >= y + 47;\nloop invariant i66: x >= y + 48;\nloop invariant i67: x >= y + 49;\nloop invariant i68: x >= y + 50;\nloop invariant i69: x >= y + 51;\nloop invariant i70: x >= y + 52;\nloop invariant i71: x >= y + 53;\nloop invariant i72: x >= y + 54;\nloop invariant i73: x >= y + 55;\nloop invariant i74: x >= y + 56;\nloop invariant i75: x >= y + 57;\nloop invariant i76: x >= y + 58;\nloop invariant i77: x >= y + 59;\nloop invariant i78: x >= y + 60;\nloop invariant i79: x >= y + 61;\nloop invariant i80: x >= y + 62;\nloop invariant i81: x >= y + 63;\nloop invariant i82: x >= y + 64;\nloop invariant i83: x >= y + 65;\nloop invariant i84: x >= y + 66;\nloop invariant i85: x >= y + 67;\nloop invariant i86: x >= y + 68;\nloop invariant i87: x >= y + 69;\nloop invariant i88: x >= y + 70;\nloop invariant i89: x >= y + 71;\nloop invariant i90: x >= y + 72;\nloop invariant i91: x >= y + 73;\nloop invariant i92: x >= y + 74;\nloop invariant i93: x >= y + 75;\nloop invariant i94: x >= y + 76;\nloop invariant i95: x >= y + 77;\nloop invariant i96: x >= y + 78;\nloop invariant i97: x >= y + 79;\nloop invariant i98: x >= y + 80;\nloop invariant i99: x >= y + 81;\nloop invariant i100: x >= y + 82;\nloop invariant i101: x >= y + 83;\nloop invariant i102: x >= y + 84;\nloop invariant i103: x >= y + 85;\nloop invariant i104: x >= y + 86;\nloop invariant i105: x >= y + 87;\nloop invariant i106: x >= y + 88;\nloop invariant i107: x >= y + 89;\nloop invariant i108: x >= y + 90;\nloop invariant i109: x >= y + 91;\nloop invariant i110: -50 <= x <= 100000;\nloop invariant i111: x + y <= 100000;\nloop invariant i112: x >= -50 + y - 1;\nloop invariant i113: 0 <= x <= 50;\nloop invariant i114: 0 <= y <= 50;\nloop invariant i115: x < 0 ==> y > 0;\nloop invariant i116: 0 <= x + y <= 100000;\nloop invariant i117: x <= -50;\nloop invariant i118: x >= (y - 1) * y / 2 - 50;\nloop invariant i119: x > 0;\nloop invariant i120: x >= -(50 - y) * y / 2;\nloop invariant i121: x >= -50 + y;\nloop invariant i122: x >= -50 + y * (y - 1) / 2;\nloop invariant i123: x >= -50 + y * (y - 1) / 2 + y;\nloop invariant i124: x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2;\nloop invariant i125: x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y;\nloop invariant i126: x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2;\nloop invariant i127: x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y;\nloop invariant i128: x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2;\nloop invariant i129: x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y;\nloop invariant i130: x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y * (y + 4) / 2;\nloop invariant i131: x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y * (y + 4) / 2 + y;\nloop invariant i132: x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y * (y + 4) / 2 + y * (y + 5) / 2;\nloop invariant i133: x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y * (y + 4) / 2 + y * (y + 5) / 2 + y;\nloop invariant i134: x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y * (y + 4) / 2 + y * (y + 5) / 2 + y * (y + 6) / 2;\nloop invariant i135: x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y * (y + 4) / 2 + y * (y + 5) / 2 + y * (y + 6) / 2 + y;\nloop invariant i136: x >= -50 + y * (y - 1) / 2 + y * (y + 1) / 2 + y * (y + 2) / 2 + y * (y + 3) / 2 + y * (y + 4) / 2 + y * (y + 5) / 2 + y * (y + 6) / 2 + y * (y + 7) / 2;\nloop invariant i137: 0 <= y <= 100000;\nloop invariant i138: y is greater than 0;\nloop invariant i139: y is non-deterministic;\nloop invariant i140: x is greater than or equal to 0;\nloop invariant i141: 0 <= y;\nloop invariant i142: -50 <= x;\nloop invariant i143: x <= x+y;\nloop invariant i144: y <= y+1;\nloop invariant i145: x+y >= 0;\nloop invariant i146: x+y <= x+1;\nloop invariant i147: 1 <= y <= 50;\nloop invariant i148: x < 0 ==> x+y >=0;\nloop invariant i149: y > 0 ==> x+y < 0;\nloop invariant i150: 0 <= x <= 1499999;\nloop invariant i151: 1 <= y <= 1499999;\nloop invariant i152: x + y >= 0;\nloop invariant i153: y <= 1499999;\nloop invariant i154: x <= 1499999;\nloop invariant i155: x <= y + 1499998;\nloop invariant i156: y <= x + 1499998;\nloop invariant i157: x + y >= -49;\nloop invariant i158: y - x >= 1;\nloop invariant i159: y - x <= 1499998;\nloop invariant i160: x - y <= -49;\nloop invariant i161: x - y >= -1499999;\nloop invariant i162: x + y * (y + 1) / 2 <= y * y;\nloop invariant i163: x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2;\nloop invariant i164: x < 0 ==> (x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2);\nloop invariant i165: x < 0 ==> (x < 0);\nloop invariant i166: x < 0 ==> (x + y * (y + 1) / 2 <= y * y);\nloop invariant i167: x < 0 ==> (y > 0);\nloop invariant i168: x < 0 ==> (y >= 1);\nloop invariant i169: y > 0 ==> (y >= 1);\nloop invariant i170: y > 0 ==> (x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2);\nloop invariant i171: y > 0 ==> (x + y * (y + 1) / 2 <= y * y);\nloop invariant i172: y > 0 ==> (x < 0);\nloop invariant i173: x >= -50 ==> (x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2);\nloop invariant i174: x >= -50 ==> (x + y * (y + 1) / 2 <= y * y);\nloop invariant i175: x >= -50 ==> (y > 0);\nloop invariant i176: x >= -50 ==> (y >= 1);\nloop invariant i177: y >= 1 ==> (x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2);\nloop invariant i178: y >= 1 ==> (x + y * (y + 1) / 2 <= y * y);\nloop invariant i179: y >= 1 ==> (y > 0);\nloop invariant i180: y >= 1 ==> (x >= -50);\nloop invariant i181: x + y * (y + 1) / 2 <= y * y ==> (y > 0);\nloop invariant i182: x + y * (y + 1) / 2 <= y * y ==> (y >= 1);\nloop invariant i183: x + y * (y + 1) / 2 <= y * y ==> (x >= -50);\nloop invariant i184: x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2 ==> (y > 0);\nloop invariant i185: x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2 ==> (y >= 1);\nloop invariant i186: x + y * (y + 1) / 2 >= -50 + y * (y - 1) / 2 ==> (x >= -50);\nloop invariant i187: y > 0 ==> (x >= -50);\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
        "combined_annotation_num_solver_calls": 35,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int x,y;\n  y = unknown();\n  x = -50;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i144: y <= y+1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i162: x + y * (y + 1) / 2 <= y * y;\n\n\nloop invariant i165: x < 0 ==> (x < 0);\nloop invariant i166: x < 0 ==> (x + y * (y + 1) / 2 <= y * y);\n\n\nloop invariant i169: y > 0 ==> (y >= 1);\n\nloop invariant i171: y > 0 ==> (x + y * (y + 1) / 2 <= y * y);\n\n\nloop invariant i174: x >= -50 ==> (x + y * (y + 1) / 2 <= y * y);\n\n\n\nloop invariant i178: y >= 1 ==> (x + y * (y + 1) / 2 <= y * y);\nloop invariant i179: y >= 1 ==> (y > 0);\n\n\n\n\n\n\n\n\n*/\nwhile( x < 0 ) {\n\tx = x+y;\n\ty++;\n  }\n  {;\n//@ assert(y>0);\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c"
        ],
        "skipped": [],
        "total": 30,
        "success_count": 28,
        "failure_count": 2,
        "success_rate": 0.9333333333333333
    }
}