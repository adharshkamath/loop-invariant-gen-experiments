{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n  j = unknown();\n  n = unknown();\n\n  if ( j<=n ) {\n  while ( j <= n ) {\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n  }\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant j <= n;\nloop invariant i >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i = 0;\nloop invariant k = 0;\nloop invariant j = i + k;\nloop invariant 0 <= j <= n;\nloop invariant i = 0;\nloop invariant k = 0;\nloop invariant j = i + k;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= k <= i;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i >= 0;\nloop invariant i == j - k;\nloop invariant k == 0;\nloop invariant j > i;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= k <= j <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant i >= k;\nloop invariant j >= k;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant i >= j;\nloop invariant k >= j;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= i <= 1;\nloop invariant i >= 0;\nloop invariant i <= 1;\nloop invariant j >= 0;\nloop invariant j <= n;\n*/\n```",
            "```\n/*@\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i = 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= j <= n;\nloop invariant 0 <= i <= j;\nloop invariant k >= 0;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant j <= n ==> j == i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 1;\nloop invariant 0 <= k <= 1;\nloop invariant j == unknown();\nloop invariant n == unknown();\nloop invariant j <= n;\nloop invariant j <= n ==> i == 0;\nloop invariant j <= n ==> k == 0;\nloop invariant j <= n ==> j == unknown();\nloop invariant j <= n ==> n == unknown();\nloop invariant j == unknown() ==> i == 0;\nloop invariant j == unknown() ==> k == 0;\nloop invariant j == unknown() ==> j == unknown();\nloop invariant j == unknown() ==> n == unknown();\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i >= 0;\nloop invariant i >= j;\nloop invariant k >= 0;\nloop invariant k <= i;\n*/\n```",
            "```\n/*@\nloop invariant i >= 0;\nloop invariant k = 0;\nloop invariant j > 0;\nloop invariant j <= n;\nloop invariant n >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant i <= j;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant i >= 0 ==> i <= j;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j;\nloop invariant j <= n;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant j <= n;\nloop invariant i >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n  j = unknown();\n  n = unknown();\n\n  if ( j<=n ) {\n  /*@\n\nloop invariant i2: i >= 0;\n*/\nwhile ( j <= n ) {\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n  }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i = 0;\nloop invariant k = 0;\nloop invariant j = i + k;\nloop invariant 0 <= j <= n;\nloop invariant i = 0;\nloop invariant k = 0;\nloop invariant j = i + k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n  j = unknown();\n  n = unknown();\n\n  if ( j<=n ) {\n  /*@\n\n\n\n\n*/\nwhile ( j <= n ) {\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= k <= i;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\nloop invariant j <= n;\nloop invariant k <= i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n  j = unknown();\n  n = unknown();\n\n  if ( j<=n ) {\n  /*@\n\n\n\nloop invariant i4: k <= i;\n*/\nwhile ( j <= n ) {\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i >= 0;\nloop invariant i == j - k;\nloop invariant k == 0;\nloop invariant j > i;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant j <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n  j = unknown();\n  n = unknown();\n\n  if ( j<=n ) {\n  /*@\n\nloop invariant i2: i >= 0;\n\nloop invariant i4: k == 0;\n\n\n\n\n*/\nwhile ( j <= n ) {\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n  }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= k <= j <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n  j = unknown();\n  n = unknown();\n\n  if ( j<=n ) {\n  /*@\n\n*/\nwhile ( j <= n ) {\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant i >= k;\nloop invariant j >= k;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant i >= j;\nloop invariant k >= j;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\nloop invariant i == n;\nloop invariant j == n;\nloop invariant k == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n  j = unknown();\n  n = unknown();\n\n  if ( j<=n ) {\n  /*@\n\n\nloop invariant i3: i >= 0;\n\n\nloop invariant i6: k >= 0;\n\nloop invariant i8: i >= k;\n\n\n\n\nloop invariant i13: i <= k;\n\n\n\n\n*/\nwhile ( j <= n ) {\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n  }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= i <= 1;\nloop invariant i >= 0;\nloop invariant i <= 1;\nloop invariant j >= 0;\nloop invariant j <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n  j = unknown();\n  n = unknown();\n\n  if ( j<=n ) {\n  /*@\n\nloop invariant i2: 0 <= i <= 1;\nloop invariant i3: i >= 0;\nloop invariant i4: i <= 1;\n\n\n*/\nwhile ( j <= n ) {\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n  }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant i = 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n  j = unknown();\n  n = unknown();\n\n  if ( j<=n ) {\n  /*@\n\n\n\n*/\nwhile ( j <= n ) {\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 1 <= j <= n;\nloop invariant 0 <= i <= j;\nloop invariant k >= 0;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\nloop invariant unknown() >= j;\nloop invariant unknown() <= n;\nloop invariant unknown() >= 0;\nloop invariant unknown() <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n  j = unknown();\n  n = unknown();\n\n  if ( j<=n ) {\n  /*@\n\n\nloop invariant i3: k >= 0;\n\n\n\n*/\nwhile ( j <= n ) {\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant j <= n ==> j == i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n  j = unknown();\n  n = unknown();\n\n  if ( j<=n ) {\n  /*@\n\nloop invariant i2: i == 0;\nloop invariant i3: k == 0;\n\n*/\nwhile ( j <= n ) {\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n  }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant j >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n  j = unknown();\n  n = unknown();\n\n  if ( j<=n ) {\n  /*@\n\n\n\nloop invariant i4: k >= 0;\n\nloop invariant i6: i >= 0;\n\n*/\nwhile ( j <= n ) {\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n  }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 1;\nloop invariant 0 <= k <= 1;\nloop invariant j == unknown();\nloop invariant n == unknown();\nloop invariant j <= n;\nloop invariant j <= n ==> i == 0;\nloop invariant j <= n ==> k == 0;\nloop invariant j <= n ==> j == unknown();\nloop invariant j <= n ==> n == unknown();\nloop invariant j == unknown() ==> i == 0;\nloop invariant j == unknown() ==> k == 0;\nloop invariant j == unknown() ==> j == unknown();\nloop invariant j == unknown() ==> n == unknown();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n  j = unknown();\n  n = unknown();\n\n  if ( j<=n ) {\n  /*@\nloop invariant i1: 0 <= i <= 1;\nloop invariant i2: 0 <= k <= 1;\n\n\n\nloop invariant i6: j <= n ==> i == 0;\nloop invariant i7: j <= n ==> k == 0;\n\n\n\n\n\n\n*/\nwhile ( j <= n ) {\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n  }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant i >= 0;\nloop invariant i >= j;\nloop invariant k >= 0;\nloop invariant k <= i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n  j = unknown();\n  n = unknown();\n\n  if ( j<=n ) {\n  /*@\n\nloop invariant i2: i >= 0;\n\nloop invariant i4: k >= 0;\nloop invariant i5: k <= i;\n*/\nwhile ( j <= n ) {\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n  }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant i >= 0;\nloop invariant k = 0;\nloop invariant j > 0;\nloop invariant j <= n;\nloop invariant n >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant i <= j;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant i >= 0 ==> i <= j;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\nloop invariant k >= 0 ==> k <= n;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant i >= 0 ==> i <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n  j = unknown();\n  n = unknown();\n\n  if ( j<=n ) {\n  /*@\nloop invariant i1: i >= 0;\n\n\n\n\n\n\nloop invariant i8: k >= 0;\n\n\n\nloop invariant i12: i >= 0 ==> i >= 0;\nloop invariant i13: k >= 0 ==> k >= 0;\n\n*/\nwhile ( j <= n ) {\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n  }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= j;\nloop invariant j <= n;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\nloop invariant k == 0;\nloop invariant n >= j;\nloop invariant i == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n  j = unknown();\n  n = unknown();\n\n  if ( j<=n ) {\n  /*@\n\n\nloop invariant i3: i == 0;\nloop invariant i4: k == 0;\n\n*/\nwhile ( j <= n ) {\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n  }\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 24: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n  j = unknown();\n  n = unknown();\n\n  if ( j<=n ) {\n  /*@\nloop invariant i1: j <= n;\nloop invariant i2: i >= 0;\nloop invariant i3: 0 <= j <= n;\nloop invariant i4: i = 0;\nloop invariant i5: k = 0;\nloop invariant i6: j = i + k;\nloop invariant i7: 1 <= k <= i;\nloop invariant i8: i <= n;\nloop invariant i9: k <= i;\nloop invariant i10: i == j - k;\nloop invariant i11: k == 0;\nloop invariant i12: j > i;\nloop invariant i13: j >= 0;\nloop invariant i14: j >= i;\nloop invariant i15: 0 <= i <= k <= j <= n;\nloop invariant i16: 0 <= i <= n;\nloop invariant i17: k >= 0;\nloop invariant i18: k <= n;\nloop invariant i19: i >= k;\nloop invariant i20: j >= k;\nloop invariant i21: i >= j;\nloop invariant i22: k >= j;\nloop invariant i23: i <= k;\nloop invariant i24: j <= k;\nloop invariant i25: i == n;\nloop invariant i26: j == n;\nloop invariant i27: k == n;\nloop invariant i28: 0 <= i <= 1;\nloop invariant i29: i <= 1;\nloop invariant i30: 1 <= j <= n;\nloop invariant i31: 0 <= i <= j;\nloop invariant i32: unknown() >= 0;\nloop invariant i33: unknown() <= n;\nloop invariant i34: unknown() >= j;\nloop invariant i35: i == 0;\nloop invariant i36: j <= n ==> j == i;\nloop invariant i37: 0 <= k <= 1;\nloop invariant i38: j == unknown();\nloop invariant i39: n == unknown();\nloop invariant i40: j <= n ==> i == 0;\nloop invariant i41: j <= n ==> k == 0;\nloop invariant i42: j <= n ==> j == unknown();\nloop invariant i43: j <= n ==> n == unknown();\nloop invariant i44: j == unknown() ==> i == 0;\nloop invariant i45: j == unknown() ==> k == 0;\nloop invariant i46: j == unknown() ==> j == unknown();\nloop invariant i47: j == unknown() ==> n == unknown();\nloop invariant i48: j > 0;\nloop invariant i49: n >= 0;\nloop invariant i50: i <= j;\nloop invariant i51: i >= 0 ==> i <= j;\nloop invariant i52: k >= 0 ==> k <= n;\nloop invariant i53: i >= 0 ==> i >= 0;\nloop invariant i54: k >= 0 ==> k >= 0;\nloop invariant i55: i >= 0 ==> i <= n;\nloop invariant i56: 0 <= j;\nloop invariant i57: n >= j;\n*/\nwhile ( j <= n ) {\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n  }\n}",
        "combined_annotation_num_solver_calls": 26,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nvoid main() {\n  int n,j,i,k;\n\n  i = 0;\n  k = 0;\n  j = unknown();\n  n = unknown();\n\n  if ( j<=n ) {\n  /*@\n\nloop invariant i2: i >= 0;\n\n\n\n\n\n\nloop invariant i9: k <= i;\n\nloop invariant i11: k == 0;\n\n\n\n\n\nloop invariant i17: k >= 0;\n\nloop invariant i19: i >= k;\n\n\n\nloop invariant i23: i <= k;\n\n\n\n\nloop invariant i28: 0 <= i <= 1;\nloop invariant i29: i <= 1;\n\n\n\n\n\nloop invariant i35: i == 0;\n\nloop invariant i37: 0 <= k <= 1;\n\n\nloop invariant i40: j <= n ==> i == 0;\nloop invariant i41: j <= n ==> k == 0;\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i53: i >= 0 ==> i >= 0;\nloop invariant i54: k >= 0 ==> k >= 0;\n\n\n\n*/\nwhile ( j <= n ) {\n    \n    j++;\n  }\n  {;\n//@ assert( i>= 0);\n}\n\n  }\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c"
        ],
        "skipped": [],
        "total": 39,
        "success_count": 36,
        "failure_count": 3,
        "success_rate": 0.9230769230769231
    }
}