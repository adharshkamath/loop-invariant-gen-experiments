{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  while (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= i <= x;\nloop invariant 0 <= t <= x;\nloop invariant if (unknown3()) then x > 0;\nloop invariant y = t + (x * i);\nloop invariant if (unknown3()) then y >= t + (x * i);\nloop invariant if (unknown3()) then y <= t + (x * i + x - 1);\nloop invariant if (unknown3()) then x > y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant x <= y;\nloop invariant y == t;\nloop invariant unknown3() ==> x <= y;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x <= y ==> y >= t;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant t >= 0;\nloop invariant unknown3() == true;\nloop invariant x >= y;\nloop invariant unknown3() ==> x >= 0;\nloop invariant unknown3() ==> y >= 0;\nloop invariant unknown3() ==> t >= 0;\nloop invariant unknown3() ==> x >= y;\nloop invariant unknown3() ==> t == y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y; loop invariant x >= 0; loop invariant y >= t; loop invariant y >= x; loop invariant y >= t || x <= t; loop invariant x >= y || x > 0; loop invariant y >= t || x <= t || x > 0; loop invariant y >= t || x > 0 || x <= t; loop invariant y >= t || x > 0 || x <= t || y >= x; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant true;\nloop invariant true;\nloop invariant y >= t;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= t;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= (1 + (i + 1) * (unknown3())) * unknown2() * unknown1();\nloop invariant y = (t + x * (i + 1));\nloop invariant i = (i + 1);\nloop invariant 0 <= i;\nloop invariant i <= (unknown3());\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant t >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown2() >= 0;\nloop invariant unknown3() >= 0;\nloop invariant x <= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y <= unknown2() * (t + x * (i + 1));\nloop invariant x <= y;\nloop invariant y >= x;\nloop invariant x >= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y >= unknown2() * (t + x * (i + 1));\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant t >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown2() >= 0;\nloop invariant unknown3() >= 0;\nloop invariant x <= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y <= unknown2() * (t + x * (i + 1));\nloop invariant x <= y;\nloop invariant y >= x;\nloop invariant x >= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y >= unknown2() * (t + x * (i + 1));\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant t >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown2() >= 0;\nloop invariant unknown3() >= 0;\nloop invariant x <= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y <= unknown2() * (t + x * (i + 1));\nloop invariant x <= y;\nloop invariant y >= x;\nloop invariant x >= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y >= unknown2() * (t + x * (i + 1));\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant t >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown2() >= 0;\nloop invariant unknown3() >= 0;\nloop invariant x <= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y <= unknown2() * (t + x * (i + 1));\nloop invariant x <= y;\nloop invariant y >= x;\nloop invariant x >= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y >= unknown2() * (t + x * (i + 1));\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant t >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown2() >= 0;\nloop invariant unknown3() >= 0;\nloop invariant x <= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y <= unknown2() * (t + x * (i + 1));\nloop invariant x <= y;\nloop invariant y >= x;\nloop invariant x >= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y >= unknown2() * (t + x * (i + 1));\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant t >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown2() >= 0;\nloop invariant unknown3() >= 0;\nloop invariant x <= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y <= unknown2() * (t + x * (i + 1));\nloop invariant x <= y;\nloop invariant y >= x;\nloop invariant x >= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y >= unknown2() * (t + x * (i + 1));\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant t >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown2() >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant i >= 0;\nloop invariant t == y;\nloop invariant y >= t;\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= t;\nloop invariant y >= x;\nloop invariant i >= 0;\n*/\n```",
            "```\n/*@\nloop invariant i1 <= i <= 1;\nloop invariant y >= 0;\nloop invariant y <= 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant y == 0 ==> x == 0;\nloop invariant x >= y ==> i1 <= x;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= i <= x;\nloop invariant 0 <= t <= x;\nloop invariant if (unknown3()) then x > 0;\nloop invariant y = t + (x * i);\nloop invariant if (unknown3()) then y >= t + (x * i);\nloop invariant if (unknown3()) then y <= t + (x * i + x - 1);\nloop invariant if (unknown3()) then x > y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x <= y;\nloop invariant y == t;\nloop invariant unknown3() ==> x <= y;\nloop invariant unknown3() ==> y >= t;\nloop invariant unknown3() ==> x <= y ==> y >= t;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n\n\n\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant t >= 0;\nloop invariant unknown3() == true;\nloop invariant x >= y;\nloop invariant unknown3() ==> x >= 0;\nloop invariant unknown3() ==> y >= 0;\nloop invariant unknown3() ==> t >= 0;\nloop invariant unknown3() ==> x >= y;\nloop invariant unknown3() ==> t == y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y; loop invariant x >= 0; loop invariant y >= t; loop invariant y >= x; loop invariant y >= t || x <= t; loop invariant x >= y || x > 0; loop invariant y >= t || x <= t || x > 0; loop invariant y >= t || x > 0 || x <= t; loop invariant y >= t || x > 0 || x <= t || y >= x; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant true;\nloop invariant true;\nloop invariant y >= t;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n\n\nloop invariant i4: y >= t;\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= t;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 14,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= (1 + (i + 1) * (unknown3())) * unknown2() * unknown1();\nloop invariant y = (t + x * (i + 1));\nloop invariant i = (i + 1);\nloop invariant 0 <= i;\nloop invariant i <= (unknown3());\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant t >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown2() >= 0;\nloop invariant unknown3() >= 0;\nloop invariant x <= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y <= unknown2() * (t + x * (i + 1));\nloop invariant x <= y;\nloop invariant y >= x;\nloop invariant x >= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y >= unknown2() * (t + x * (i + 1));\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant t >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown2() >= 0;\nloop invariant unknown3() >= 0;\nloop invariant x <= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y <= unknown2() * (t + x * (i + 1));\nloop invariant x <= y;\nloop invariant y >= x;\nloop invariant x >= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y >= unknown2() * (t + x * (i + 1));\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant t >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown2() >= 0;\nloop invariant unknown3() >= 0;\nloop invariant x <= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y <= unknown2() * (t + x * (i + 1));\nloop invariant x <= y;\nloop invariant y >= x;\nloop invariant x >= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y >= unknown2() * (t + x * (i + 1));\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant t >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown2() >= 0;\nloop invariant unknown3() >= 0;\nloop invariant x <= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y <= unknown2() * (t + x * (i + 1));\nloop invariant x <= y;\nloop invariant y >= x;\nloop invariant x >= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y >= unknown2() * (t + x * (i + 1));\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant t >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown2() >= 0;\nloop invariant unknown3() >= 0;\nloop invariant x <= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y <= unknown2() * (t + x * (i + 1));\nloop invariant x <= y;\nloop invariant y >= x;\nloop invariant x >= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y >= unknown2() * (t + x * (i + 1));\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant t >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown2() >= 0;\nloop invariant unknown3() >= 0;\nloop invariant x <= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y <= unknown2() * (t + x * (i + 1));\nloop invariant x <= y;\nloop invariant y >= x;\nloop invariant x >= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant y >= unknown2() * (t + x * (i + 1));\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant t >= 0;\nloop invariant unknown1() >= 0;\nloop invariant unknown2() >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n\n\nloop invariant i4: 0 <= i;\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant i >= 0;\nloop invariant t == y;\nloop invariant y >= t;\nloop invariant y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n\nloop invariant i3: i >= 0;\n\nloop invariant i5: y >= t;\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= t;\nloop invariant y >= x;\nloop invariant i >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n\nloop invariant i3: i >= 0;\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant i1 <= i <= 1;\nloop invariant y >= 0;\nloop invariant y <= 1;\nloop invariant x >= 0;\nloop invariant x <= 1;\nloop invariant y == 0 ==> x == 0;\nloop invariant x >= y ==> i1 <= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n\n\n\n\n\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 25: unexpected token '('",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\nloop invariant i1: 0 <= y <= 100000;\nloop invariant i2: x >= (1 + (y - 1) * y / 2);\nloop invariant i3: 0 <= i <= x;\nloop invariant i4: 0 <= t <= x;\nloop invariant i5: if (unknown3()) then x > 0;\nloop invariant i6: y = t + (x * i);\nloop invariant i7: if (unknown3()) then y >= t + (x * i);\nloop invariant i8: if (unknown3()) then y <= t + (x * i + x - 1);\nloop invariant i9: if (unknown3()) then x > y;\nloop invariant i10: x <= y;\nloop invariant i11: y == t;\nloop invariant i12: unknown3() ==> x <= y;\nloop invariant i13: unknown3() ==> y >= t;\nloop invariant i14: unknown3() ==> x <= y ==> y >= t;\nloop invariant i15: x >= 0;\nloop invariant i16: y >= 0;\nloop invariant i17: t >= 0;\nloop invariant i18: unknown3() == true;\nloop invariant i19: x >= y;\nloop invariant i20: unknown3() ==> x >= 0;\nloop invariant i21: unknown3() ==> y >= 0;\nloop invariant i22: unknown3() ==> t >= 0;\nloop invariant i23: unknown3() ==> x >= y;\nloop invariant i24: unknown3() ==> t == y;\nloop invariant i25: 0 <= y; loop invariant x >= 0; loop invariant y >= t; loop invariant y >= x; loop invariant y >= t || x <= t; loop invariant x >= y || x > 0; loop invariant y >= t || x <= t || x > 0; loop invariant y >= t || x > 0 || x <= t; loop invariant y >= t || x > 0 || x <= t || y >= x; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0; loop invariant y >= t || x > 0 || x <= t || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t || x >= y || y >= x || x >= y || y >= t || x > 0 || x <= t;\nloop invariant i26: true;\nloop invariant i27: y >= t;\nloop invariant i28: 0 <= y <= t;\nloop invariant i29: 0 <= x <= (1 + (i + 1) * (unknown3())) * unknown2() * unknown1();\nloop invariant i30: y = (t + x * (i + 1));\nloop invariant i31: i = (i + 1);\nloop invariant i32: 0 <= i;\nloop invariant i33: i <= (unknown3());\nloop invariant i34: unknown1() >= 0;\nloop invariant i35: unknown2() >= 0;\nloop invariant i36: unknown3() >= 0;\nloop invariant i37: x <= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant i38: y <= unknown2() * (t + x * (i + 1));\nloop invariant i39: y >= x;\nloop invariant i40: x >= unknown1() * unknown2() * (1 + (i + 1) * unknown3());\nloop invariant i41: y >= unknown2() * (t + x * (i + 1));\nloop invariant i42: i >= 0;\nloop invariant i43: t == y;\nloop invariant i44: i1 <= i <= 1;\nloop invariant i45: y <= 1;\nloop invariant i46: x <= 1;\nloop invariant i47: y == 0 ==> x == 0;\nloop invariant i48: x >= y ==> i1 <= x;\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
        "combined_annotation_num_solver_calls": 36,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\nextern int unknown2();\nextern int unknown3();\n\nint main()\n{\n  int x = unknown1();\n  int y = unknown2();\n  int i=0;\n  int t=y;\n   \n  if (x==y) return x;\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i27: y >= t;\n\n\n\n\nloop invariant i32: 0 <= i;\n\n\n\n\n\n\n\n\n\nloop invariant i42: i >= 0;\n\n\n\n\n\n\n*/\nwhile (unknown3()){\n    if (x > 0)   \n      y = y + x;\n  }\n   \n  {;\n//@ assert(y>=t);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c"
        ],
        "skipped": [],
        "total": 122,
        "success_count": 101,
        "failure_count": 21,
        "success_rate": 0.8278688524590164
    }
}