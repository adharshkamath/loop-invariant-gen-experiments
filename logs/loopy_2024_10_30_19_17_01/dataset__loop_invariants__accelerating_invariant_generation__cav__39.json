{
    "logs": {
        "file": "../dataset/loop_invariants/accelerating_invariant_generation/cav/39.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint __BLAST_NONDET;\nint MAXPATHLEN;\nint unknown(){\n    int x; return x;\n}\n\nint main()\n{\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  for (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      if(glob3_dc <= -1 || glob3_dc >= MAXPATHLEN + 1)\n      {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n      if (unknown()) goto END;\n    }\n END:  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 1 <= glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathbuf_off;\nloop invariant glob3_pathlim_off <= glob3_pathend_off + MAXPATHLEN;\nloop invariant glob3_pattern_off == 0;\nloop invariant glob3_pathbuf_off == buf_off;\nloop invariant glob3_pathend_off == buf_off;\nloop invariant glob3_pathlim_off == bound_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off == 0;\nloop invariant glob3_pathbuf_off == buf_off;\nloop invariant glob3_pathend_off == buf_off;\nloop invariant glob3_pathlim_off == bound_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off == 0;\nloop invariant glob3_pathbuf_off == buf_off;\nloop invariant glob3_pathend_off == buf_off;\nloop invariant glob3_pathlim_off == bound_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off == 0;\nloop invariant glob3_pathbuf_off == buf_off;\nloop invariant glob3_pathend_off == buf_off;\nloop invariant glob3_pathlim_off == bound_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off == 0;\nloop invariant glob3_pathbuf_off == buf_off;\nloop invariant glob3_pathend_off == buf_off;\nloop invariant glob3_pathlim_off == bound_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off == 0;\nloop invariant glob3_pathbuf_off == buf_off;\nloop invariant glob3_pathend_off == buf_off;\nloop invariant glob3_pathlim_off == bound_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= 0;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= 0;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= pattern_off <= MAXPATHLEN;\nloop invariant 0 <= buf_off <= bound_off;\nloop invariant glob3_pathbuf_off == buf_off;\nloop invariant glob3_pathend_off == buf_off;\nloop invariant glob3_pathlim_off == bound_off;\nloop invariant glob3_pattern_off == pattern_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc >= 1 - glob3_pattern_off;\nloop invariant glob3_dc <= MAXPATHLEN - glob3_pattern_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\n*/\n```",
            "```\n/*@\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathend_off;\n*/\n```",
            "```\n/*@\nloop invariant glob3_pathbuf_off + glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc + 1 <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 2;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 3;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 4;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 5;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 6;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 7;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 8;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 9;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 10;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 11;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 12;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 13;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 14;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 15;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 16;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 17;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 18;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 19;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 20;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 21;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 22;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 23;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 24;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 25;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 26;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 27;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 28;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 29;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 30;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 31;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 32;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 33;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 34;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 35;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 36;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 37;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 38;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 39;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 40;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 41;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 42;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 43;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off >= 0;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob3_pattern_off >= 0;\nloop invariant 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off >= 0;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob3_pattern_off >= 0;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= ( glob3_pathend_off + glob3_dc ) <= ( glob3_pathlim_off );\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc == 0 ==> glob3_pathend_off == glob3_pathbuf_off;\nloop invariant glob3_dc == 0 ==> glob3_pathlim_off == glob3_pathbuf_off + ( MAXPATHLEN + 1 ) - 1;\nloop invariant glob3_dc == 0 ==> glob3_pattern_off == glob3_pathbuf_off;\nloop invariant ! (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) ==> glob3_pathend_off == glob3_pathlim_off;\nloop invariant ! (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) ==> glob3_pathlim_off == glob3_pathlim_off;\nloop invariant ! (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) ==> glob3_pattern_off == glob3_pathend_off;\nloop invariant ! (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) ==> glob3_dc == glob3_pathlim_off - glob3_pathbuf_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant 0 <= glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathbuf_off == glob3_pathend_off + glob3_dc;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_dc > glob3_pathbuf_off - glob3_pathend_off;\nloop invariant glob3_pathbuf_off == glob3_pathend_off;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathbuf_off == glob3_pathend_off + glob3_dc;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_dc > glob3_pathbuf_off - glob3_pathend_off;\nloop invariant glob3_pathbuf_off == glob3_pathend_off;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathbuf_off == glob3_pathend_off + glob3_dc;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_dc > glob3_pathbuf_off - glob3_pathend_off;\nloop invariant glob3_pathbuf_off == glob3_pathend_off;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathbuf_off == glob3_pathend_off + glob3_dc;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_dc > glob3_pathbuf_off - glob3_pathend_off;\nloop invariant glob3_pathbuf_off == glob3_pathend_off;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathbuf_off == glob3_pathend_off + glob3_dc;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_dc > glob3_pathbuf_off - glob3_pathend_off;\nloop invariant glob3_pathbuf_off == glob3_pathend_off;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathbuf_off == glob3_pathend_off + glob3_dc;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_dc > glob3_pathbuf_off - glob3_pathend_off;\nloop invariant glob3_pathbuf_off == glob3_pathend_off;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathbuf_off == glob3_pathend_off + glob3_dc;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= buf_off <= MAXPATHLEN;\nloop invariant 0 <= pattern_off <= MAXPATHLEN;\nloop invariant 0 <= bound_off <= MAXPATHLEN;\nloop invariant 0 <= glob3_pathbuf_off <= MAXPATHLEN;\nloop invariant 0 <= glob3_pathend_off <= MAXPATHLEN;\nloop invariant 0 <= glob3_pathlim_off <= MAXPATHLEN;\nloop invariant 0 <= glob3_pattern_off <= MAXPATHLEN;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_dc;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off - 1;\nloop invariant glob3_pattern_off <= glob3_pathlim_off - 1;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 1 <= glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathbuf_off;\nloop invariant glob3_pathlim_off <= glob3_pathend_off + MAXPATHLEN;\nloop invariant glob3_pattern_off == 0;\nloop invariant glob3_pathbuf_off == buf_off;\nloop invariant glob3_pathend_off == buf_off;\nloop invariant glob3_pathlim_off == bound_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off == 0;\nloop invariant glob3_pathbuf_off == buf_off;\nloop invariant glob3_pathend_off == buf_off;\nloop invariant glob3_pathlim_off == bound_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off == 0;\nloop invariant glob3_pathbuf_off == buf_off;\nloop invariant glob3_pathend_off == buf_off;\nloop invariant glob3_pathlim_off == bound_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off == 0;\nloop invariant glob3_pathbuf_off == buf_off;\nloop invariant glob3_pathend_off == buf_off;\nloop invariant glob3_pathlim_off == bound_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off == 0;\nloop invariant glob3_pathbuf_off == buf_off;\nloop invariant glob3_pathend_off == buf_off;\nloop invariant glob3_pathlim_off == bound_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off == 0;\nloop invariant glob3_pathbuf_off == buf_off;\nloop invariant glob3_pathend_off == buf_off;\nloop invariant glob3_pathlim_off == bound_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint __BLAST_NONDET;\nint MAXPATHLEN;\nint unknown(){\n    int x; return x;\n}\n\nint main()\n{\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 1 <= glob3_dc <= MAXPATHLEN;\nloop invariant i2: glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i3: glob3_pathend_off <= glob3_pathbuf_off;\nloop invariant i4: glob3_pathlim_off <= glob3_pathend_off + MAXPATHLEN;\nloop invariant i5: glob3_pattern_off == 0;\nloop invariant i6: glob3_pathbuf_off == buf_off;\nloop invariant i7: glob3_pathend_off == buf_off;\nloop invariant i8: glob3_pathlim_off == bound_off;\nloop invariant i9: glob3_dc >= 0;\nloop invariant i10: glob3_dc <= MAXPATHLEN;\nloop invariant i11: glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant i12: glob3_pathend_off <= glob3_pathlim_off;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      if(glob3_dc <= -1 || glob3_dc >= MAXPATHLEN + 1)\n      {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n      if (unknown()) goto END;\n    }\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= 0;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= 0;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint __BLAST_NONDET;\nint MAXPATHLEN;\nint unknown(){\n    int x; return x;\n}\n\nint main()\n{\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i2: glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i3: glob3_pathend_off + glob3_dc >= 0;\nloop invariant i4: glob3_dc >= 0;\nloop invariant i5: glob3_dc <= MAXPATHLEN;\nloop invariant i6: glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant i7: glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant i8: glob3_pathend_off <= glob3_pathlim_off;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      if(glob3_dc <= -1 || glob3_dc >= MAXPATHLEN + 1)\n      {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n      if (unknown()) goto END;\n    }\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= pattern_off <= MAXPATHLEN;\nloop invariant 0 <= buf_off <= bound_off;\nloop invariant glob3_pathbuf_off == buf_off;\nloop invariant glob3_pathend_off == buf_off;\nloop invariant glob3_pathlim_off == bound_off;\nloop invariant glob3_pattern_off == pattern_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc >= 1 - glob3_pattern_off;\nloop invariant glob3_dc <= MAXPATHLEN - glob3_pattern_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint __BLAST_NONDET;\nint MAXPATHLEN;\nint unknown(){\n    int x; return x;\n}\n\nint main()\n{\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= pattern_off <= MAXPATHLEN;\nloop invariant i2: 0 <= buf_off <= bound_off;\nloop invariant i3: glob3_pathbuf_off == buf_off;\nloop invariant i4: glob3_pathend_off == buf_off;\nloop invariant i5: glob3_pathlim_off == bound_off;\nloop invariant i6: glob3_pattern_off == pattern_off;\nloop invariant i7: glob3_dc >= 0;\nloop invariant i8: glob3_dc <= MAXPATHLEN;\nloop invariant i9: glob3_dc >= 1 - glob3_pattern_off;\nloop invariant i10: glob3_dc <= MAXPATHLEN - glob3_pattern_off;\nloop invariant i11: glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant i12: glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      if(glob3_dc <= -1 || glob3_dc >= MAXPATHLEN + 1)\n      {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n      if (unknown()) goto END;\n    }\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint __BLAST_NONDET;\nint MAXPATHLEN;\nint unknown(){\n    int x; return x;\n}\n\nint main()\n{\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant i2: glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i3: glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i4: glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant i5: glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant i6: glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off - 1;\nloop invariant i7: glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc - 1;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      if(glob3_dc <= -1 || glob3_dc >= MAXPATHLEN + 1)\n      {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n      if (unknown()) goto END;\n    }\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint __BLAST_NONDET;\nint MAXPATHLEN;\nint unknown(){\n    int x; return x;\n}\n\nint main()\n{\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i2: glob3_dc >= 0;\nloop invariant i3: glob3_dc <= MAXPATHLEN;\nloop invariant i4: glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      if(glob3_dc <= -1 || glob3_dc >= MAXPATHLEN + 1)\n      {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n      if (unknown()) goto END;\n    }\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathend_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint __BLAST_NONDET;\nint MAXPATHLEN;\nint unknown(){\n    int x; return x;\n}\n\nint main()\n{\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i2: glob3_dc >= 0;\nloop invariant i3: glob3_dc <= MAXPATHLEN;\nloop invariant i4: glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i5: glob3_pathend_off + glob3_dc >= glob3_pathend_off;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      if(glob3_dc <= -1 || glob3_dc >= MAXPATHLEN + 1)\n      {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n      if (unknown()) goto END;\n    }\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant glob3_pathbuf_off + glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint __BLAST_NONDET;\nint MAXPATHLEN;\nint unknown(){\n    int x; return x;\n}\n\nint main()\n{\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: glob3_pathbuf_off + glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i2: glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i3: glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant i4: glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc;\nloop invariant i5: glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc;\nloop invariant i6: glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      if(glob3_dc <= -1 || glob3_dc >= MAXPATHLEN + 1)\n      {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n      if (unknown()) goto END;\n    }\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc + 1 <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 2;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 3;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 4;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 5;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 6;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 7;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 8;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 9;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 10;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 11;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 12;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 13;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 14;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 15;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 16;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 17;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 18;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 19;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 20;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 21;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 22;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 23;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 24;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 25;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 26;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 27;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 28;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 29;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 30;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 31;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 32;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 33;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 34;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 35;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 36;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 37;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 38;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 39;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 40;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 41;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 42;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 43;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint __BLAST_NONDET;\nint MAXPATHLEN;\nint unknown(){\n    int x; return x;\n}\n\nint main()\n{\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant i2: glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i3: glob3_pathend_off + glob3_dc + 1 <= glob3_pathlim_off;\nloop invariant i4: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 1;\nloop invariant i5: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 2;\nloop invariant i6: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 3;\nloop invariant i7: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 4;\nloop invariant i8: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 5;\nloop invariant i9: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 6;\nloop invariant i10: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 7;\nloop invariant i11: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 8;\nloop invariant i12: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 9;\nloop invariant i13: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 10;\nloop invariant i14: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 11;\nloop invariant i15: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 12;\nloop invariant i16: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 13;\nloop invariant i17: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 14;\nloop invariant i18: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 15;\nloop invariant i19: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 16;\nloop invariant i20: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 17;\nloop invariant i21: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 18;\nloop invariant i22: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 19;\nloop invariant i23: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 20;\nloop invariant i24: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 21;\nloop invariant i25: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 22;\nloop invariant i26: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 23;\nloop invariant i27: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 24;\nloop invariant i28: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 25;\nloop invariant i29: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 26;\nloop invariant i30: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 27;\nloop invariant i31: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 28;\nloop invariant i32: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 29;\nloop invariant i33: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 30;\nloop invariant i34: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 31;\nloop invariant i35: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 32;\nloop invariant i36: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 33;\nloop invariant i37: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 34;\nloop invariant i38: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 35;\nloop invariant i39: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 36;\nloop invariant i40: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 37;\nloop invariant i41: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 38;\nloop invariant i42: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 39;\nloop invariant i43: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 40;\nloop invariant i44: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 41;\nloop invariant i45: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 42;\nloop invariant i46: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 43;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      if(glob3_dc <= -1 || glob3_dc >= MAXPATHLEN + 1)\n      {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n      if (unknown()) goto END;\n    }\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant glob3_pattern_off <= glob3_pathend_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint __BLAST_NONDET;\nint MAXPATHLEN;\nint unknown(){\n    int x; return x;\n}\n\nint main()\n{\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i2: glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant i3: glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i4: glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant i5: glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i6: glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant i7: glob3_pattern_off <= glob3_pathend_off;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      if(glob3_dc <= -1 || glob3_dc >= MAXPATHLEN + 1)\n      {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n      if (unknown()) goto END;\n    }\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off >= 0;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob3_pattern_off >= 0;\nloop invariant 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off >= 0;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob3_pattern_off >= 0;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint __BLAST_NONDET;\nint MAXPATHLEN;\nint unknown(){\n    int x; return x;\n}\n\nint main()\n{\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant i2: glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i3: glob3_pathend_off >= 0;\nloop invariant i4: glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant i5: glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i6: glob3_pathlim_off <= MAXPATHLEN + 1;\nloop invariant i7: glob3_pattern_off >= 0;\nloop invariant i8: glob3_pathbuf_off <= glob3_pathlim_off;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      if(glob3_dc <= -1 || glob3_dc >= MAXPATHLEN + 1)\n      {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n      if (unknown()) goto END;\n    }\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= ( glob3_pathend_off + glob3_dc ) <= ( glob3_pathlim_off );\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc == 0 ==> glob3_pathend_off == glob3_pathbuf_off;\nloop invariant glob3_dc == 0 ==> glob3_pathlim_off == glob3_pathbuf_off + ( MAXPATHLEN + 1 ) - 1;\nloop invariant glob3_dc == 0 ==> glob3_pattern_off == glob3_pathbuf_off;\nloop invariant ! (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) ==> glob3_pathend_off == glob3_pathlim_off;\nloop invariant ! (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) ==> glob3_pathlim_off == glob3_pathlim_off;\nloop invariant ! (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) ==> glob3_pattern_off == glob3_pathend_off;\nloop invariant ! (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) ==> glob3_dc == glob3_pathlim_off - glob3_pathbuf_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint __BLAST_NONDET;\nint MAXPATHLEN;\nint unknown(){\n    int x; return x;\n}\n\nint main()\n{\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= ( glob3_pathend_off + glob3_dc ) <= ( glob3_pathlim_off );\nloop invariant i2: glob3_dc >= 0;\nloop invariant i3: glob3_dc <= MAXPATHLEN;\nloop invariant i4: glob3_dc == 0 ==> glob3_pathend_off == glob3_pathbuf_off;\nloop invariant i5: glob3_dc == 0 ==> glob3_pathlim_off == glob3_pathbuf_off + ( MAXPATHLEN + 1 ) - 1;\nloop invariant i6: glob3_dc == 0 ==> glob3_pattern_off == glob3_pathbuf_off;\nloop invariant i7: ! (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) ==> glob3_pathend_off == glob3_pathlim_off;\nloop invariant i8: ! (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) ==> glob3_pathlim_off == glob3_pathlim_off;\nloop invariant i9: ! (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) ==> glob3_pattern_off == glob3_pathend_off;\nloop invariant i10: ! (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) ==> glob3_dc == glob3_pathlim_off - glob3_pathbuf_off;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      if(glob3_dc <= -1 || glob3_dc >= MAXPATHLEN + 1)\n      {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n      if (unknown()) goto END;\n    }\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc < MAXPATHLEN + 1;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint __BLAST_NONDET;\nint MAXPATHLEN;\nint unknown(){\n    int x; return x;\n}\n\nint main()\n{\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i2: glob3_dc >= 0;\nloop invariant i3: glob3_dc < MAXPATHLEN + 1;\nloop invariant i4: glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i5: glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      if(glob3_dc <= -1 || glob3_dc >= MAXPATHLEN + 1)\n      {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n      if (unknown()) goto END;\n    }\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant 0 <= glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathbuf_off == glob3_pathend_off + glob3_dc;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_dc > glob3_pathbuf_off - glob3_pathend_off;\nloop invariant glob3_pathbuf_off == glob3_pathend_off;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathbuf_off == glob3_pathend_off + glob3_dc;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_dc > glob3_pathbuf_off - glob3_pathend_off;\nloop invariant glob3_pathbuf_off == glob3_pathend_off;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathbuf_off == glob3_pathend_off + glob3_dc;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_dc > glob3_pathbuf_off - glob3_pathend_off;\nloop invariant glob3_pathbuf_off == glob3_pathend_off;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathbuf_off == glob3_pathend_off + glob3_dc;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_dc > glob3_pathbuf_off - glob3_pathend_off;\nloop invariant glob3_pathbuf_off == glob3_pathend_off;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathbuf_off == glob3_pathend_off + glob3_dc;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_dc > glob3_pathbuf_off - glob3_pathend_off;\nloop invariant glob3_pathbuf_off == glob3_pathend_off;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathbuf_off == glob3_pathend_off + glob3_dc;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_dc > glob3_pathbuf_off - glob3_pathend_off;\nloop invariant glob3_pathbuf_off == glob3_pathend_off;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathbuf_off == glob3_pathend_off + glob3_dc;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint __BLAST_NONDET;\nint MAXPATHLEN;\nint unknown(){\n    int x; return x;\n}\n\nint main()\n{\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i2: 0 <= glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant i3: glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant i4: glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i5: glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant i6: glob3_dc >= 0;\nloop invariant i7: glob3_dc <= MAXPATHLEN;\nloop invariant i8: glob3_pathbuf_off == glob3_pathend_off + glob3_dc;\nloop invariant i9: glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant i10: glob3_dc > glob3_pathbuf_off - glob3_pathend_off;\nloop invariant i11: glob3_pathbuf_off == glob3_pathend_off;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      if(glob3_dc <= -1 || glob3_dc >= MAXPATHLEN + 1)\n      {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n      if (unknown()) goto END;\n    }\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint __BLAST_NONDET;\nint MAXPATHLEN;\nint unknown(){\n    int x; return x;\n}\n\nint main()\n{\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i2: glob3_dc >= 0;\nloop invariant i3: glob3_dc <= MAXPATHLEN;\nloop invariant i4: glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      if(glob3_dc <= -1 || glob3_dc >= MAXPATHLEN + 1)\n      {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n      if (unknown()) goto END;\n    }\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= buf_off <= MAXPATHLEN;\nloop invariant 0 <= pattern_off <= MAXPATHLEN;\nloop invariant 0 <= bound_off <= MAXPATHLEN;\nloop invariant 0 <= glob3_pathbuf_off <= MAXPATHLEN;\nloop invariant 0 <= glob3_pathend_off <= MAXPATHLEN;\nloop invariant 0 <= glob3_pathlim_off <= MAXPATHLEN;\nloop invariant 0 <= glob3_pattern_off <= MAXPATHLEN;\nloop invariant glob3_dc >= 0;\nloop invariant glob3_dc <= MAXPATHLEN;\nloop invariant glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pattern_off <= glob3_dc;\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant glob3_dc <= glob3_pathlim_off;\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off;\nloop invariant glob3_pathend_off <= glob3_pathlim_off - 1;\nloop invariant glob3_pattern_off <= glob3_pathlim_off - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint __BLAST_NONDET;\nint MAXPATHLEN;\nint unknown(){\n    int x; return x;\n}\n\nint main()\n{\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 0 <= buf_off <= MAXPATHLEN;\nloop invariant i2: 0 <= pattern_off <= MAXPATHLEN;\nloop invariant i3: 0 <= bound_off <= MAXPATHLEN;\nloop invariant i4: 0 <= glob3_pathbuf_off <= MAXPATHLEN;\nloop invariant i5: 0 <= glob3_pathend_off <= MAXPATHLEN;\nloop invariant i6: 0 <= glob3_pathlim_off <= MAXPATHLEN;\nloop invariant i7: 0 <= glob3_pattern_off <= MAXPATHLEN;\nloop invariant i8: glob3_dc >= 0;\nloop invariant i9: glob3_dc <= MAXPATHLEN;\nloop invariant i10: glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant i11: glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i12: glob3_pattern_off <= glob3_dc;\nloop invariant i13: glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant i14: glob3_dc <= glob3_pathlim_off;\nloop invariant i15: glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant i16: glob3_pathend_off <= glob3_pathlim_off - 1;\nloop invariant i17: glob3_pattern_off <= glob3_pathlim_off - 1;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      if(glob3_dc <= -1 || glob3_dc >= MAXPATHLEN + 1)\n      {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n      if (unknown()) goto END;\n    }\n END:  return 0;\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": true,
        "checker_message_for_combined_annotations": "loop invariant 1 <= glob3_dc <= MAXPATHLEN is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off is inductive.\nloop invariant glob3_pathend_off <= glob3_pathbuf_off is inductive.\nloop invariant glob3_pathlim_off <= glob3_pathend_off + MAXPATHLEN is inductive.\nloop invariant glob3_pattern_off == 0 is inductive.\nloop invariant glob3_pathbuf_off == buf_off is inductive.\nloop invariant glob3_pathend_off == buf_off is inductive.\nloop invariant glob3_pathlim_off == bound_off is inductive.\nloop invariant glob3_dc >= 0 is inductive.\nloop invariant glob3_dc <= MAXPATHLEN is inductive.\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off is inductive.\nloop invariant glob3_pathend_off <= glob3_pathlim_off is inductive.\nloop invariant 0 <= glob3_pathend_off <= glob3_pathlim_off is inductive.\nloop invariant glob3_pathend_off + glob3_dc >= 0 is inductive.\nloop invariant glob3_pathbuf_off <= glob3_pathend_off is inductive.\nloop invariant glob3_pathbuf_off <= glob3_pathlim_off is inductive.\nloop invariant 0 <= pattern_off <= MAXPATHLEN is inductive.\nloop invariant 0 <= buf_off <= bound_off is inductive.\nloop invariant glob3_pattern_off == pattern_off is inductive.\nloop invariant glob3_dc >= 1 - glob3_pattern_off is inductive.\nloop invariant glob3_dc <= MAXPATHLEN - glob3_pattern_off is inductive.\nloop invariant 0 <= glob3_dc <= MAXPATHLEN + 1 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off - 1 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc - 1 is inductive.\nloop invariant glob3_dc <= glob3_pathlim_off - glob3_pathend_off is inductive.\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathend_off is inductive.\nloop invariant glob3_pathbuf_off + glob3_pathend_off <= glob3_pathlim_off is inductive.\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc is inductive.\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc is inductive.\nloop invariant glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc is inductive.\nloop invariant glob3_pathend_off + glob3_dc + 1 <= glob3_pathlim_off is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 1 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 2 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 3 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 4 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 5 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 6 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 7 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 8 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 9 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 10 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 11 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 12 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 13 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 14 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 15 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 16 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 17 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 18 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 19 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 20 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 21 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 22 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 23 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 24 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 25 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 26 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 27 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 28 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 29 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 30 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 31 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 32 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 33 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 34 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 35 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 36 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 37 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 38 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 39 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 40 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 41 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 42 is inductive.\nloop invariant glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 43 is inductive.\nloop invariant glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1 is inductive.\nloop invariant glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off is inductive.\nloop invariant glob3_pathbuf_off <= glob3_pattern_off is inductive.\nloop invariant glob3_pattern_off <= glob3_pathend_off is inductive.\nloop invariant glob3_pathend_off >= 0 is inductive.\nloop invariant glob3_pathlim_off <= MAXPATHLEN + 1 is inductive.\nloop invariant glob3_pattern_off >= 0 is inductive.\nloop invariant 0 <= ( glob3_pathend_off + glob3_dc ) <= ( glob3_pathlim_off ) is inductive.\nloop invariant glob3_dc == 0 ==> glob3_pathend_off == glob3_pathbuf_off is inductive.\nloop invariant glob3_dc == 0 ==> glob3_pathlim_off == glob3_pathbuf_off + ( MAXPATHLEN + 1 ) - 1 is inductive.\nloop invariant glob3_dc == 0 ==> glob3_pattern_off == glob3_pathbuf_off is inductive.\nloop invariant ! (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) ==> glob3_pathend_off == glob3_pathlim_off is inductive.\nloop invariant ! (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) ==> glob3_pathlim_off == glob3_pathlim_off is inductive.\nloop invariant ! (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) ==> glob3_pattern_off == glob3_pathend_off is inductive.\nloop invariant ! (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) ==> glob3_dc == glob3_pathlim_off - glob3_pathbuf_off is inductive.\nloop invariant glob3_dc < MAXPATHLEN + 1 is inductive.\nloop invariant 0 <= glob3_pathbuf_off <= glob3_pathlim_off is inductive.\nloop invariant glob3_pattern_off <= glob3_pathbuf_off is inductive.\nloop invariant glob3_pathbuf_off == glob3_pathend_off + glob3_dc is inductive.\nloop invariant glob3_dc > glob3_pathbuf_off - glob3_pathend_off is inductive.\nloop invariant glob3_pathbuf_off == glob3_pathend_off is inductive.\nloop invariant 0 <= buf_off <= MAXPATHLEN is inductive.\nloop invariant 0 <= bound_off <= MAXPATHLEN is inductive.\nloop invariant 0 <= glob3_pathbuf_off <= MAXPATHLEN is inductive.\nloop invariant 0 <= glob3_pathend_off <= MAXPATHLEN is inductive.\nloop invariant 0 <= glob3_pathlim_off <= MAXPATHLEN is inductive.\nloop invariant 0 <= glob3_pattern_off <= MAXPATHLEN is inductive.\nloop invariant glob3_pattern_off <= glob3_dc is inductive.\nloop invariant glob3_dc <= glob3_pathlim_off is inductive.\nloop invariant glob3_pathend_off <= glob3_pathlim_off - 1 is inductive.\nloop invariant glob3_pattern_off <= glob3_pathlim_off - 1 is inductive.\nAssertion \\false: Valid",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint __BLAST_NONDET;\nint MAXPATHLEN;\nint unknown(){\n    int x; return x;\n}\n\nint main()\n{\n  \n  int buf_off;\n  int pattern_off;\n  int bound_off;\n\n  int glob3_pathbuf_off;\n  int glob3_pathend_off;\n  int glob3_pathlim_off;\n  int glob3_pattern_off;\n  int glob3_dc;\n\n  if(MAXPATHLEN > 0); else goto END;\n\n  buf_off = 0;\n  pattern_off = 0;\n\n  bound_off = 0 + (MAXPATHLEN + 1) - 1;\n\n  glob3_pathbuf_off = buf_off;\n  glob3_pathend_off = buf_off;\n  glob3_pathlim_off = bound_off;\n  glob3_pattern_off = pattern_off;\n\n  glob3_dc = 0;\n  /*@\nloop invariant i1: 1 <= glob3_dc <= MAXPATHLEN;\nloop invariant i2: glob3_pathend_off + glob3_dc <= glob3_pathlim_off;\nloop invariant i3: glob3_pathend_off <= glob3_pathbuf_off;\nloop invariant i4: glob3_pathlim_off <= glob3_pathend_off + MAXPATHLEN;\nloop invariant i5: glob3_pattern_off == 0;\nloop invariant i6: glob3_pathbuf_off == buf_off;\nloop invariant i7: glob3_pathend_off == buf_off;\nloop invariant i8: glob3_pathlim_off == bound_off;\nloop invariant i9: glob3_dc >= 0;\nloop invariant i10: glob3_dc <= MAXPATHLEN;\nloop invariant i11: glob3_pathend_off + glob3_dc >= glob3_pathbuf_off;\nloop invariant i12: glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i13: 0 <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i14: glob3_pathend_off + glob3_dc >= 0;\nloop invariant i15: glob3_pathbuf_off <= glob3_pathend_off;\nloop invariant i16: glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant i17: 0 <= pattern_off <= MAXPATHLEN;\nloop invariant i18: 0 <= buf_off <= bound_off;\nloop invariant i19: glob3_pattern_off == pattern_off;\nloop invariant i20: glob3_dc >= 1 - glob3_pattern_off;\nloop invariant i21: glob3_dc <= MAXPATHLEN - glob3_pattern_off;\nloop invariant i22: 0 <= glob3_dc <= MAXPATHLEN + 1;\nloop invariant i23: glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i24: glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant i25: glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc;\nloop invariant i26: glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_dc <= glob3_pathlim_off - glob3_pathend_off - 1;\nloop invariant i27: glob3_pathend_off + glob3_dc <= glob3_pathlim_off ==> glob3_pathend_off <= glob3_pathlim_off - glob3_dc - 1;\nloop invariant i28: glob3_dc <= glob3_pathlim_off - glob3_pathend_off;\nloop invariant i29: glob3_pathend_off + glob3_dc >= glob3_pathend_off;\nloop invariant i30: glob3_pathbuf_off + glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i31: glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc;\nloop invariant i32: glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc;\nloop invariant i33: glob3_pathend_off + glob3_dc >= glob3_pathbuf_off + glob3_dc - glob3_dc + glob3_dc;\nloop invariant i34: glob3_pathend_off + glob3_dc + 1 <= glob3_pathlim_off;\nloop invariant i35: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 1;\nloop invariant i36: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 2;\nloop invariant i37: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 3;\nloop invariant i38: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 4;\nloop invariant i39: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 5;\nloop invariant i40: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 6;\nloop invariant i41: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 7;\nloop invariant i42: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 8;\nloop invariant i43: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 9;\nloop invariant i44: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 10;\nloop invariant i45: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 11;\nloop invariant i46: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 12;\nloop invariant i47: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 13;\nloop invariant i48: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 14;\nloop invariant i49: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 15;\nloop invariant i50: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 16;\nloop invariant i51: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 17;\nloop invariant i52: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 18;\nloop invariant i53: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 19;\nloop invariant i54: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 20;\nloop invariant i55: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 21;\nloop invariant i56: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 22;\nloop invariant i57: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 23;\nloop invariant i58: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 24;\nloop invariant i59: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 25;\nloop invariant i60: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 26;\nloop invariant i61: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 27;\nloop invariant i62: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 28;\nloop invariant i63: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 29;\nloop invariant i64: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 30;\nloop invariant i65: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 31;\nloop invariant i66: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 32;\nloop invariant i67: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 33;\nloop invariant i68: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 34;\nloop invariant i69: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 35;\nloop invariant i70: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 36;\nloop invariant i71: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 37;\nloop invariant i72: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 38;\nloop invariant i73: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 39;\nloop invariant i74: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 40;\nloop invariant i75: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 41;\nloop invariant i76: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 42;\nloop invariant i77: glob3_pathend_off + glob3_dc <= glob3_pathlim_off - 43;\nloop invariant i78: glob3_dc >= 0 && glob3_dc <= MAXPATHLEN + 1;\nloop invariant i79: glob3_pathbuf_off <= glob3_pathend_off <= glob3_pathlim_off;\nloop invariant i80: glob3_pathbuf_off <= glob3_pattern_off;\nloop invariant i81: glob3_pattern_off <= glob3_pathend_off;\nloop invariant i82: glob3_pathend_off >= 0;\nloop invariant i83: glob3_pathlim_off <= MAXPATHLEN + 1;\nloop invariant i84: glob3_pattern_off >= 0;\nloop invariant i85: 0 <= ( glob3_pathend_off + glob3_dc ) <= ( glob3_pathlim_off );\nloop invariant i86: glob3_dc == 0 ==> glob3_pathend_off == glob3_pathbuf_off;\nloop invariant i87: glob3_dc == 0 ==> glob3_pathlim_off == glob3_pathbuf_off + ( MAXPATHLEN + 1 ) - 1;\nloop invariant i88: glob3_dc == 0 ==> glob3_pattern_off == glob3_pathbuf_off;\nloop invariant i89: ! (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) ==> glob3_pathend_off == glob3_pathlim_off;\nloop invariant i90: ! (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) ==> glob3_pathlim_off == glob3_pathlim_off;\nloop invariant i91: ! (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) ==> glob3_pattern_off == glob3_pathend_off;\nloop invariant i92: ! (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) ==> glob3_dc == glob3_pathlim_off - glob3_pathbuf_off;\nloop invariant i93: glob3_dc < MAXPATHLEN + 1;\nloop invariant i94: 0 <= glob3_pathbuf_off <= glob3_pathlim_off;\nloop invariant i95: glob3_pattern_off <= glob3_pathbuf_off;\nloop invariant i96: glob3_pathbuf_off == glob3_pathend_off + glob3_dc;\nloop invariant i97: glob3_dc > glob3_pathbuf_off - glob3_pathend_off;\nloop invariant i98: glob3_pathbuf_off == glob3_pathend_off;\nloop invariant i99: 0 <= buf_off <= MAXPATHLEN;\nloop invariant i100: 0 <= bound_off <= MAXPATHLEN;\nloop invariant i101: 0 <= glob3_pathbuf_off <= MAXPATHLEN;\nloop invariant i102: 0 <= glob3_pathend_off <= MAXPATHLEN;\nloop invariant i103: 0 <= glob3_pathlim_off <= MAXPATHLEN;\nloop invariant i104: 0 <= glob3_pattern_off <= MAXPATHLEN;\nloop invariant i105: glob3_pattern_off <= glob3_dc;\nloop invariant i106: glob3_dc <= glob3_pathlim_off;\nloop invariant i107: glob3_pathend_off <= glob3_pathlim_off - 1;\nloop invariant i108: glob3_pattern_off <= glob3_pathlim_off - 1;\n*/\nfor (;;)\n    if (glob3_pathend_off + glob3_dc >= glob3_pathlim_off) break;\n    else {\n      \n      glob3_dc++;\n      \n      if(glob3_dc <= -1 || glob3_dc >= MAXPATHLEN + 1)\n      {goto ERROR; { { ERROR: {; \n//@ assert(\\false);\n}\n}\n}}\n      if (unknown()) goto END;\n    }\n END:  return 0;\n}"
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/popl.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/05.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/07.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/37.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/39.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c"
        ],
        "skipped": [],
        "total": 131,
        "success_count": 108,
        "failure_count": 23,
        "success_rate": 0.8244274809160306
    }
}