{
    "logs": {
        "file": "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/for_infinite_loop_2_true.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  for(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant i <= n;\nloop invariant x == 0 ==> y == 0;\nloop invariant (i >= n) ==> (x != 0);\nloop invariant x == 0 ==> (y == 0) ==> (x == y);\nloop invariant x == 0 ==> (y == 0) ==> (x == y) ==> (x == y + i);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i) ==> (x == y + i - 1);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1) ==> (x == y + i - 1 + y);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y) ==> (x == y + i - 1 + y + x);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x) ==> (x == y + i - 1 + y + x + x);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x) ==> (x == y + i - 1 + y + x + x - x);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x) ==> (x == y + i - 1 + y + x + x - x - y);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y) ==> (x == y + i - 1 + y + x + x - x - y + y);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y) ==> (x == y + i - 1 + y + x + x - x - y + y - x);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x - y);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x - y) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x - y + y);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x >= 0;\nloop invariant y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant x=0;\nloop invariant 0 <= i <= n;\nloop invariant 1<=i<=n ==> x=0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 0 <= i <= n;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant n > 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x != 0;\nloop invariant y != 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant y == i;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\n*/\n```",
            "```\n/*@\nloop invariant y == 0;\nloop invariant i == 0;\nloop invariant x == 0;\nloop invariant y <= n;\nloop invariant n > 0;\nloop invariant i <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i < n ==> x == 0;\nloop invariant i >= n ==> x != 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i <= n;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i <= x + y;\nloop invariant i <= x + y + n;\nloop invariant i <= 2 * (x + y) + n;\nloop invariant i <= 3 * (x + y) + n;\nloop invariant i <= 4 * (x + y) + n;\nloop invariant i <= 5 * (x + y) + n;\nloop invariant i <= 6 * (x + y) + n;\nloop invariant i <= 7 * (x + y) + n;\nloop invariant i <= 8 * (x + y) + n;\nloop invariant i <= 9 * (x + y) + n;\nloop invariant i <= 10 * (x + y) + n;\nloop invariant i <= 11 * (x + y) + n;\nloop invariant i <= 12 * (x + y) + n;\nloop invariant i <= 13 * (x + y) + n;\nloop invariant i <= 14 * (x + y) + n;\nloop invariant i <= 15 * (x + y) + n;\nloop invariant i <= 16 * (x + y) + n;\nloop invariant i <= 17 * (x + y) + n;\nloop invariant i <= 18 * (x + y) + n;\nloop invariant i <= 19 * (x + y) + n;\nloop invariant i <= 20 * (x + y) + n;\nloop invariant i <= 21 * (x + y) + n;\nloop invariant i <= 22 * (x + y) + n;\nloop invariant i <= 23 * (x + y) + n;\nloop invariant i <= 24 * (x + y) + n;\nloop invariant i <= 25 * (x + y) + n;\nloop invariant i <= 26 * (x + y) + n;\nloop invariant i <= 27 * (x + y) + n;\nloop invariant i <= 28 * (x + y) + n;\nloop invariant i <= 29 * (x + y) + n;\nloop invariant i <= 30 * (x + y) + n;\nloop invariant i <= 31 * (x + y) + n;\nloop invariant i <= 32 * (x + y) + n;\nloop invariant i <= 33 * (x + y) + n;\nloop invariant i <= 34 * (x + y) + n;\nloop invariant i <= 35 * (x + y) + n;\nloop invariant i <= 36 * (x + y) + n;\nloop invariant i <= 37 * (x + y) + n;\nloop invariant i <= 38 * (x + y) + n;\nloop invariant i <= 39 * (x + y) + n;\nloop invariant i <= 40 * (x + y) + n;\nloop invariant i <= 41 * (x + y) + n;\nloop invariant i <= 42 * (x + y) + n;\nloop invariant i <= 43 * (x + y) + n;\nloop invariant i <= 44 * (x + y) + n;\nloop invariant i <= 45 * (x + y) + n;\nloop invariant i <= 46 * (x + y) + n;\nloop invariant i <= 47 * (x + y) + n;\nloop invariant i <= 48 * (x + y) + n;\nloop invariant i <= 49 * (x + y) + n;\nloop invariant i <= 50 * (x + y) + n;\nloop invariant i <= 51 * (x + y) + n;\nloop invariant i <= 52 * (x + y) + n;\nloop invariant i <= 53 * (x + y) + n;\nloop invariant i <= 54 * (x + y) + n;\nloop invariant i <= 55 * (x + y) + n;\nloop invariant i <= 56 * (x + y) + n;\nloop invariant i <= 57 * (x + y) + n;\nloop invariant i <= 58 * (x + y) + n;\nloop invariant i <= 59 * (x + y) + n;\nloop invariant i <= 60 * (x + y) + n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i < n ==> x == 0;\nloop invariant i >= n ==> x != 0;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant y = 0;\nloop invariant x = 0;\nloop invariant i = 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0 ==> i == 0;\nloop invariant y == 0 ==> i == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant i == n ==> x != 0;\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant i <= n;\nloop invariant x == 0 ==> y == 0;\nloop invariant (i >= n) ==> (x != 0);\nloop invariant x == 0 ==> (y == 0) ==> (x == y);\nloop invariant x == 0 ==> (y == 0) ==> (x == y) ==> (x == y + i);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i) ==> (x == y + i - 1);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1) ==> (x == y + i - 1 + y);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y) ==> (x == y + i - 1 + y + x);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x) ==> (x == y + i - 1 + y + x + x);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x) ==> (x == y + i - 1 + y + x + x - x);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x) ==> (x == y + i - 1 + y + x + x - x - y);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y) ==> (x == y + i - 1 + y + x + x - x - y + y);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y) ==> (x == y + i - 1 + y + x + x - x - y + y - x);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x - y);\nloop invariant x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x - y) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x - y + y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: x == 0 ==> y == 0;\n\nloop invariant i4: x == 0 ==> (y == 0) ==> (x == y);\n\n\nloop invariant i7: x == 0 ==> (y == 0) ==> (x == y + i - 1) ==> (x == y + i - 1 + y);\nloop invariant i8: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y) ==> (x == y + i - 1 + y + x);\nloop invariant i9: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x) ==> (x == y + i - 1 + y + x + x);\nloop invariant i10: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x) ==> (x == y + i - 1 + y + x + x - x);\nloop invariant i11: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x) ==> (x == y + i - 1 + y + x + x - x - y);\nloop invariant i12: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y) ==> (x == y + i - 1 + y + x + x - x - y + y);\nloop invariant i13: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y) ==> (x == y + i - 1 + y + x + x - x - y + y - x);\nloop invariant i14: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x);\nloop invariant i15: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y);\nloop invariant i16: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y);\nloop invariant i17: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x);\nloop invariant i18: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x);\nloop invariant i19: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x - y);\nloop invariant i20: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x - y) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x - y + y);\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x >= 0;\nloop invariant y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: x >= 0;\nloop invariant i3: y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant x=0;\nloop invariant 0 <= i <= n;\nloop invariant 1<=i<=n ==> x=0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\n\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 0 <= i <= n;\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i > n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\n\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant n > 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i == n;\nloop invariant x != 0;\nloop invariant y != 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\nloop invariant i1: 0 <= x;\nloop invariant i2: 0 <= y;\nloop invariant i3: n > 0;\nloop invariant i4: i >= 0;\n\nloop invariant i6: x == 0;\nloop invariant i7: y == 0;\n\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant y == i;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\nloop invariant x == i;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == n;\nloop invariant x == n;\nloop invariant i == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y >= 0;\nloop invariant i4: y <= n;\nloop invariant i5: x >= 0;\nloop invariant i6: x <= n;\nloop invariant i7: i >= 0;\n\n\n\n\n\n\nloop invariant i14: y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant y == 0;\nloop invariant i == 0;\nloop invariant x == 0;\nloop invariant y <= n;\nloop invariant n > 0;\nloop invariant i <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\nloop invariant i1: y == 0;\n\nloop invariant i3: x == 0;\nloop invariant i4: y <= n;\nloop invariant i5: n > 0;\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\n\nloop invariant i5: x >= 0;\nloop invariant i6: y >= 0;\nloop invariant i7: x + y >= 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i < n ==> x == 0;\nloop invariant i >= n ==> x != 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: i < n ==> x == 0;\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 34,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i <= n;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i <= x + y;\nloop invariant i <= x + y + n;\nloop invariant i <= 2 * (x + y) + n;\nloop invariant i <= 3 * (x + y) + n;\nloop invariant i <= 4 * (x + y) + n;\nloop invariant i <= 5 * (x + y) + n;\nloop invariant i <= 6 * (x + y) + n;\nloop invariant i <= 7 * (x + y) + n;\nloop invariant i <= 8 * (x + y) + n;\nloop invariant i <= 9 * (x + y) + n;\nloop invariant i <= 10 * (x + y) + n;\nloop invariant i <= 11 * (x + y) + n;\nloop invariant i <= 12 * (x + y) + n;\nloop invariant i <= 13 * (x + y) + n;\nloop invariant i <= 14 * (x + y) + n;\nloop invariant i <= 15 * (x + y) + n;\nloop invariant i <= 16 * (x + y) + n;\nloop invariant i <= 17 * (x + y) + n;\nloop invariant i <= 18 * (x + y) + n;\nloop invariant i <= 19 * (x + y) + n;\nloop invariant i <= 20 * (x + y) + n;\nloop invariant i <= 21 * (x + y) + n;\nloop invariant i <= 22 * (x + y) + n;\nloop invariant i <= 23 * (x + y) + n;\nloop invariant i <= 24 * (x + y) + n;\nloop invariant i <= 25 * (x + y) + n;\nloop invariant i <= 26 * (x + y) + n;\nloop invariant i <= 27 * (x + y) + n;\nloop invariant i <= 28 * (x + y) + n;\nloop invariant i <= 29 * (x + y) + n;\nloop invariant i <= 30 * (x + y) + n;\nloop invariant i <= 31 * (x + y) + n;\nloop invariant i <= 32 * (x + y) + n;\nloop invariant i <= 33 * (x + y) + n;\nloop invariant i <= 34 * (x + y) + n;\nloop invariant i <= 35 * (x + y) + n;\nloop invariant i <= 36 * (x + y) + n;\nloop invariant i <= 37 * (x + y) + n;\nloop invariant i <= 38 * (x + y) + n;\nloop invariant i <= 39 * (x + y) + n;\nloop invariant i <= 40 * (x + y) + n;\nloop invariant i <= 41 * (x + y) + n;\nloop invariant i <= 42 * (x + y) + n;\nloop invariant i <= 43 * (x + y) + n;\nloop invariant i <= 44 * (x + y) + n;\nloop invariant i <= 45 * (x + y) + n;\nloop invariant i <= 46 * (x + y) + n;\nloop invariant i <= 47 * (x + y) + n;\nloop invariant i <= 48 * (x + y) + n;\nloop invariant i <= 49 * (x + y) + n;\nloop invariant i <= 50 * (x + y) + n;\nloop invariant i <= 51 * (x + y) + n;\nloop invariant i <= 52 * (x + y) + n;\nloop invariant i <= 53 * (x + y) + n;\nloop invariant i <= 54 * (x + y) + n;\nloop invariant i <= 55 * (x + y) + n;\nloop invariant i <= 56 * (x + y) + n;\nloop invariant i <= 57 * (x + y) + n;\nloop invariant i <= 58 * (x + y) + n;\nloop invariant i <= 59 * (x + y) + n;\nloop invariant i <= 60 * (x + y) + n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: x <= i;\nloop invariant i3: y <= i;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i < n ==> x == 0;\nloop invariant i >= n ==> x != 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: i < n ==> x == 0;\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant y = 0;\nloop invariant x = 0;\nloop invariant i = 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0 ==> i == 0;\nloop invariant y == 0 ==> i == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant i == n ==> x != 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\n\n\nloop invariant i4: i >= 0;\n\n\n\nloop invariant i8: x == 0 ==> y == 0;\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 158,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 38: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\nloop invariant i1: i <= n;\nloop invariant i2: x == 0 ==> y == 0;\nloop invariant i3: (i >= n) ==> (x != 0);\nloop invariant i4: x == 0 ==> (y == 0) ==> (x == y);\nloop invariant i5: x == 0 ==> (y == 0) ==> (x == y) ==> (x == y + i);\nloop invariant i6: x == 0 ==> (y == 0) ==> (x == y + i) ==> (x == y + i - 1);\nloop invariant i7: x == 0 ==> (y == 0) ==> (x == y + i - 1) ==> (x == y + i - 1 + y);\nloop invariant i8: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y) ==> (x == y + i - 1 + y + x);\nloop invariant i9: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x) ==> (x == y + i - 1 + y + x + x);\nloop invariant i10: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x) ==> (x == y + i - 1 + y + x + x - x);\nloop invariant i11: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x) ==> (x == y + i - 1 + y + x + x - x - y);\nloop invariant i12: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y) ==> (x == y + i - 1 + y + x + x - x - y + y);\nloop invariant i13: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y) ==> (x == y + i - 1 + y + x + x - x - y + y - x);\nloop invariant i14: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x);\nloop invariant i15: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y);\nloop invariant i16: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y);\nloop invariant i17: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x);\nloop invariant i18: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x);\nloop invariant i19: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x - y);\nloop invariant i20: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x - y) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x - y + y);\nloop invariant i21: 0 <= i <= n;\nloop invariant i22: x >= 0;\nloop invariant i23: y == 0;\nloop invariant i24: 1 <= i <= n;\nloop invariant i25: x=0;\nloop invariant i26: 1<=i<=n ==> x=0;\nloop invariant i27: x == 0;\nloop invariant i28: i == n;\nloop invariant i29: i > n;\nloop invariant i30: 0 <= x;\nloop invariant i31: 0 <= y;\nloop invariant i32: n > 0;\nloop invariant i33: i >= 0;\nloop invariant i34: x != 0;\nloop invariant i35: y != 0;\nloop invariant i36: y >= 0;\nloop invariant i37: y <= n;\nloop invariant i38: x <= n;\nloop invariant i39: y == i;\nloop invariant i40: y == n;\nloop invariant i41: x == n;\nloop invariant i42: x == i;\nloop invariant i43: i == 0;\nloop invariant i44: x + y >= 0;\nloop invariant i45: i < n ==> x == 0;\nloop invariant i46: i >= n ==> x != 0;\nloop invariant i47: x <= i;\nloop invariant i48: y <= i;\nloop invariant i49: i <= x;\nloop invariant i50: i <= y;\nloop invariant i51: i <= x + y;\nloop invariant i52: i <= x + y + n;\nloop invariant i53: i <= 2 * (x + y) + n;\nloop invariant i54: i <= 3 * (x + y) + n;\nloop invariant i55: i <= 4 * (x + y) + n;\nloop invariant i56: i <= 5 * (x + y) + n;\nloop invariant i57: i <= 6 * (x + y) + n;\nloop invariant i58: i <= 7 * (x + y) + n;\nloop invariant i59: i <= 8 * (x + y) + n;\nloop invariant i60: i <= 9 * (x + y) + n;\nloop invariant i61: i <= 10 * (x + y) + n;\nloop invariant i62: i <= 11 * (x + y) + n;\nloop invariant i63: i <= 12 * (x + y) + n;\nloop invariant i64: i <= 13 * (x + y) + n;\nloop invariant i65: i <= 14 * (x + y) + n;\nloop invariant i66: i <= 15 * (x + y) + n;\nloop invariant i67: i <= 16 * (x + y) + n;\nloop invariant i68: i <= 17 * (x + y) + n;\nloop invariant i69: i <= 18 * (x + y) + n;\nloop invariant i70: i <= 19 * (x + y) + n;\nloop invariant i71: i <= 20 * (x + y) + n;\nloop invariant i72: i <= 21 * (x + y) + n;\nloop invariant i73: i <= 22 * (x + y) + n;\nloop invariant i74: i <= 23 * (x + y) + n;\nloop invariant i75: i <= 24 * (x + y) + n;\nloop invariant i76: i <= 25 * (x + y) + n;\nloop invariant i77: i <= 26 * (x + y) + n;\nloop invariant i78: i <= 27 * (x + y) + n;\nloop invariant i79: i <= 28 * (x + y) + n;\nloop invariant i80: i <= 29 * (x + y) + n;\nloop invariant i81: i <= 30 * (x + y) + n;\nloop invariant i82: i <= 31 * (x + y) + n;\nloop invariant i83: i <= 32 * (x + y) + n;\nloop invariant i84: i <= 33 * (x + y) + n;\nloop invariant i85: i <= 34 * (x + y) + n;\nloop invariant i86: i <= 35 * (x + y) + n;\nloop invariant i87: i <= 36 * (x + y) + n;\nloop invariant i88: i <= 37 * (x + y) + n;\nloop invariant i89: i <= 38 * (x + y) + n;\nloop invariant i90: i <= 39 * (x + y) + n;\nloop invariant i91: i <= 40 * (x + y) + n;\nloop invariant i92: i <= 41 * (x + y) + n;\nloop invariant i93: i <= 42 * (x + y) + n;\nloop invariant i94: i <= 43 * (x + y) + n;\nloop invariant i95: i <= 44 * (x + y) + n;\nloop invariant i96: i <= 45 * (x + y) + n;\nloop invariant i97: i <= 46 * (x + y) + n;\nloop invariant i98: i <= 47 * (x + y) + n;\nloop invariant i99: i <= 48 * (x + y) + n;\nloop invariant i100: i <= 49 * (x + y) + n;\nloop invariant i101: i <= 50 * (x + y) + n;\nloop invariant i102: i <= 51 * (x + y) + n;\nloop invariant i103: i <= 52 * (x + y) + n;\nloop invariant i104: i <= 53 * (x + y) + n;\nloop invariant i105: i <= 54 * (x + y) + n;\nloop invariant i106: i <= 55 * (x + y) + n;\nloop invariant i107: i <= 56 * (x + y) + n;\nloop invariant i108: i <= 57 * (x + y) + n;\nloop invariant i109: i <= 58 * (x + y) + n;\nloop invariant i110: i <= 59 * (x + y) + n;\nloop invariant i111: i <= 60 * (x + y) + n;\nloop invariant i112: y = 0;\nloop invariant i113: x = 0;\nloop invariant i114: i = 0;\nloop invariant i115: x == 0 ==> i == 0;\nloop invariant i116: y == 0 ==> i == 0;\nloop invariant i117: i == n ==> x != 0;\nloop invariant i118: i1;\nloop invariant i119: i2;\nloop invariant i120: i3;\nloop invariant i121: i4;\nloop invariant i122: i5;\nloop invariant i123: i6;\nloop invariant i124: i7;\nloop invariant i125: i8;\nloop invariant i126: i9;\nloop invariant i127: i10;\nloop invariant i128: i11;\nloop invariant i129: i12;\nloop invariant i130: i13;\nloop invariant i131: i14;\nloop invariant i132: i15;\nloop invariant i133: i16;\nloop invariant i134: i17;\nloop invariant i135: i18;\nloop invariant i136: i19;\nloop invariant i137: i20;\nloop invariant i138: i21;\nloop invariant i139: i22;\nloop invariant i140: i23;\nloop invariant i141: i24;\nloop invariant i142: i25;\nloop invariant i143: i26;\nloop invariant i144: i27;\nloop invariant i145: i28;\nloop invariant i146: i29;\nloop invariant i147: i30;\nloop invariant i148: i31;\nloop invariant i149: i32;\nloop invariant i150: i33;\nloop invariant i151: i34;\nloop invariant i152: i35;\nloop invariant i153: i36;\nloop invariant i154: i37;\nloop invariant i155: i38;\nloop invariant i156: i39;\nloop invariant i157: i40;\nloop invariant i158: i41;\nloop invariant i159: i42;\nloop invariant i160: i43;\nloop invariant i161: i44;\nloop invariant i162: i45;\nloop invariant i163: i46;\nloop invariant i164: i47;\nloop invariant i165: i48;\nloop invariant i166: i49;\nloop invariant i167: i50;\nloop invariant i168: i51;\nloop invariant i169: i52;\nloop invariant i170: i53;\nloop invariant i171: i54;\nloop invariant i172: i55;\nloop invariant i173: i56;\nloop invariant i174: i57;\nloop invariant i175: i58;\nloop invariant i176: i59;\nloop invariant i177: i60;\nloop invariant i178: i61;\nloop invariant i179: i62;\nloop invariant i180: i63;\nloop invariant i181: i64;\nloop invariant i182: i65;\nloop invariant i183: i66;\nloop invariant i184: i67;\nloop invariant i185: i68;\nloop invariant i186: i69;\nloop invariant i187: i70;\nloop invariant i188: i71;\nloop invariant i189: i72;\nloop invariant i190: i73;\nloop invariant i191: i74;\nloop invariant i192: i75;\nloop invariant i193: i76;\nloop invariant i194: i77;\nloop invariant i195: i78;\nloop invariant i196: i79;\nloop invariant i197: i80;\nloop invariant i198: i81;\nloop invariant i199: i82;\nloop invariant i200: i83;\nloop invariant i201: i84;\nloop invariant i202: i85;\nloop invariant i203: i86;\nloop invariant i204: i87;\nloop invariant i205: i88;\nloop invariant i206: i89;\nloop invariant i207: i90;\nloop invariant i208: i91;\nloop invariant i209: i92;\nloop invariant i210: i93;\nloop invariant i211: i94;\nloop invariant i212: i95;\nloop invariant i213: i96;\nloop invariant i214: i97;\nloop invariant i215: i98;\nloop invariant i216: i99;\nloop invariant i217: i100;\nloop invariant i218: i101;\nloop invariant i219: i102;\nloop invariant i220: i103;\nloop invariant i221: i104;\nloop invariant i222: i105;\nloop invariant i223: i106;\nloop invariant i224: i107;\nloop invariant i225: i108;\nloop invariant i226: i109;\nloop invariant i227: i110;\nloop invariant i228: i111;\nloop invariant i229: i112;\nloop invariant i230: i113;\nloop invariant i231: i114;\nloop invariant i232: i115;\nloop invariant i233: i116;\nloop invariant i234: i117;\nloop invariant i235: i118;\nloop invariant i236: i119;\nloop invariant i237: i120;\nloop invariant i238: i121;\nloop invariant i239: i122;\nloop invariant i240: i123;\nloop invariant i241: i124;\nloop invariant i242: i125;\nloop invariant i243: i126;\nloop invariant i244: i127;\nloop invariant i245: i128;\nloop invariant i246: i129;\nloop invariant i247: i130;\nloop invariant i248: i131;\nloop invariant i249: i132;\nloop invariant i250: i133;\nloop invariant i251: i134;\nloop invariant i252: i135;\nloop invariant i253: i136;\nloop invariant i254: i137;\nloop invariant i255: i138;\nloop invariant i256: i139;\nloop invariant i257: i140;\nloop invariant i258: i141;\nloop invariant i259: i142;\nloop invariant i260: i143;\nloop invariant i261: i144;\nloop invariant i262: i145;\nloop invariant i263: i146;\nloop invariant i264: i147;\nloop invariant i265: i148;\nloop invariant i266: i149;\nloop invariant i267: i150;\nloop invariant i268: i151;\nloop invariant i269: i152;\nloop invariant i270: i153;\nloop invariant i271: i154;\nloop invariant i272: i155;\nloop invariant i273: i156;\nloop invariant i274: i157;\nloop invariant i275: i158;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
        "combined_annotation_num_solver_calls": 244,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: x == 0 ==> y == 0;\n\nloop invariant i4: x == 0 ==> (y == 0) ==> (x == y);\n\n\nloop invariant i7: x == 0 ==> (y == 0) ==> (x == y + i - 1) ==> (x == y + i - 1 + y);\nloop invariant i8: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y) ==> (x == y + i - 1 + y + x);\nloop invariant i9: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x) ==> (x == y + i - 1 + y + x + x);\nloop invariant i10: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x) ==> (x == y + i - 1 + y + x + x - x);\nloop invariant i11: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x) ==> (x == y + i - 1 + y + x + x - x - y);\nloop invariant i12: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y) ==> (x == y + i - 1 + y + x + x - x - y + y);\nloop invariant i13: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y) ==> (x == y + i - 1 + y + x + x - x - y + y - x);\nloop invariant i14: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x);\nloop invariant i15: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y);\nloop invariant i16: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y);\nloop invariant i17: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x);\nloop invariant i18: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x);\nloop invariant i19: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x - y);\nloop invariant i20: x == 0 ==> (y == 0) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x - y) ==> (x == y + i - 1 + y + x + x - x - y + y - x + x - y + y - x + x - y + y);\n\nloop invariant i22: x >= 0;\nloop invariant i23: y == 0;\n\n\n\nloop invariant i27: x == 0;\n\n\nloop invariant i30: 0 <= x;\nloop invariant i31: 0 <= y;\nloop invariant i32: n > 0;\nloop invariant i33: i >= 0;\n\n\nloop invariant i36: y >= 0;\nloop invariant i37: y <= n;\nloop invariant i38: x <= n;\n\n\n\n\n\nloop invariant i44: x + y >= 0;\nloop invariant i45: i < n ==> x == 0;\n\nloop invariant i47: x <= i;\nloop invariant i48: y <= i;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/popl.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/05.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/07.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/37.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/39.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv_simp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/xy10.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/const_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe3.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe4.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbr.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbrprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bk-nat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bkley.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/efm.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/ex1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnatprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifo.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/seesaw.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/ken-imp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/rajamani_1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/simple.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/simple_if.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/up-nested.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/count_up_down_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/for_infinite_loop_1_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/for_infinite_loop_2_true.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/pldi082_unbounded.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_unsafe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-close-angle.c"
        ],
        "skipped": [],
        "total": 175,
        "success_count": 148,
        "failure_count": 27,
        "success_rate": 0.8457142857142858
    }
}