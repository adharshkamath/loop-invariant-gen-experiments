{
    "logs": {
        "file": "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/terminator_02_true.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  int x=unknown_int();\n  int y=unknown_int();\n  int z=unknown_int();\n  assume(x<100);\n  assume(z<100);\n  while(x<100 && 100<z) \n  {\n    _Bool tmp=unknown_bool();\n    if (tmp)\n   {\n     x++;\n   }\n   else\n   {\n     x--;\n     z--;\n   }\n  }                       \n    \n  {;\n//@ assert(x>=100 || z<=100);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 < x < 100;\nloop invariant 0 < z < 100;\nloop invariant x <= z;\nloop invariant x < 100 ==> x <= z;\nloop invariant x >= 100 ==> x >= 100;\nloop invariant z <= 100 ==> z <= 100;\nloop invariant x <= z ==> x <= z;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= z <= 100;\nloop invariant x <= z;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= z <= 100;\nloop invariant x >= 0 ==> x <= 100;\nloop invariant z >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant z < 100;\nloop invariant x <= z;\nloop invariant x + (z - 1) * z / 2 <= y + (z - 1) * z / 2;\nloop invariant z - 1 - (z - 1) * z / 2 >= y - (z - 1) * z / 2;\nloop invariant y - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 >= y - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= x + (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= z - 1 - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= y - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= z - 1 - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= y - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= z - 1 - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= y - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= z - 1 - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= y - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= z - 1 - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= y - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= z - 1 - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= y - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= z - 1 - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= y - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= z - 1 - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= y - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= z - 1 - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= y - (z - 1) * z / 2;\n*/\n```",
            "```\n/*@\nloop invariant x >= 100 ==> x >= 100;\nloop invariant z <= 100 ==> z <= 100;\nloop invariant x < 100 ==> x < 100;\nloop invariant z >= 100 ==> z >= 100;\nloop invariant !(x < 100 && z < 100) ==> !(x < 100 && z < 100);\nloop invariant x >= 100 ==> x >= z;\nloop invariant z <= 100 ==> x >= z;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100 and 100 <= z <= 100;\nloop invariant x >= z - 100;\nloop invariant x >= 100;\nloop invariant z <= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x >= z;\nloop invariant x >= z - 100 ==> x >= 100;\nloop invariant x >= z - 100 ==> z <= 100;\nloop invariant x >= z - 100 ==> x >= z;\nloop invariant x >= z - 100 ==> x >= z ==> x >= 100;\nloop invariant x >= z - 100 ==> x >= z ==> z <= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\n*/\n```",
            "```\n/*@\nloop invariant x <= 100;\nloop invariant 0 <= y <= 100;\nloop invariant 0 <= z <= 100;\nloop invariant x >= y;\nloop invariant x >= z;\nloop invariant x >= 100 ==> y <= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant 100 < z ==> x <= 100;\nloop invariant 100 < z ==> y <= 100;\nloop invariant 100 < z ==> z >= 100;\nloop invariant x >= 100 ==> x >= z;\nloop invariant x >= 100 ==> x >= y;\nloop invariant 100 < z ==> y <= z;\nloop invariant 100 < z ==> x <= z;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= z <= 100;\nloop invariant (x < 100 ==> z < 100);\nloop invariant (x < 100 ==> tmp ==> x < 101);\nloop invariant (x < 100 ==> !tmp ==> x < 99);\nloop invariant (x < 100 ==> z < 100 ==> z < 99);\nloop invariant (x < 100 ==> z < 100 ==> x < 100);\nloop invariant (x < 100 ==> z < 100 ==> z < 100);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= z <= 100;\nloop invariant x <= y <= z;\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant x < 100;\nloop invariant z < 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100 && x < z <= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= z <= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 99;\nloop invariant 0 <= z <= 99;\nloop invariant x <= 100;\nloop invariant z >= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= z <= 100;\nloop invariant x >= z;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= z <= 100;\nloop invariant x <= z;\nloop invariant x >= z - 1;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x > z;\nloop invariant x - 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 < x < 100;\nloop invariant 0 < z < 100;\nloop invariant x <= z;\nloop invariant x < 100 ==> x <= z;\nloop invariant x >= 100 ==> x >= 100;\nloop invariant z <= 100 ==> z <= 100;\nloop invariant x <= z ==> x <= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  int x=unknown_int();\n  int y=unknown_int();\n  int z=unknown_int();\n  assume(x<100);\n  assume(z<100);\n  /*@\n\n\n\n\nloop invariant i5: x >= 100 ==> x >= 100;\nloop invariant i6: z <= 100 ==> z <= 100;\nloop invariant i7: x <= z ==> x <= z;\n*/\nwhile(x<100 && 100<z) \n  {\n    _Bool tmp=unknown_bool();\n    if (tmp)\n   {\n     x++;\n   }\n   else\n   {\n     x--;\n     z--;\n   }\n  }                       \n    \n  {;\n//@ assert(x>=100 || z<=100);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= z <= 100;\nloop invariant x <= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  int x=unknown_int();\n  int y=unknown_int();\n  int z=unknown_int();\n  assume(x<100);\n  assume(z<100);\n  /*@\n\n\n\n*/\nwhile(x<100 && 100<z) \n  {\n    _Bool tmp=unknown_bool();\n    if (tmp)\n   {\n     x++;\n   }\n   else\n   {\n     x--;\n     z--;\n   }\n  }                       \n    \n  {;\n//@ assert(x>=100 || z<=100);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= z <= 100;\nloop invariant x >= 0 ==> x <= 100;\nloop invariant z >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\nloop invariant x >= 0 ==> z <= 100;\nloop invariant x >= 0 ==> z >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  int x=unknown_int();\n  int y=unknown_int();\n  int z=unknown_int();\n  assume(x<100);\n  assume(z<100);\n  /*@\n\n\nloop invariant i3: x >= 0 ==> x <= 100;\nloop invariant i4: z >= 0 ==> z <= 100;\n\nloop invariant i6: x >= 0 ==> z <= 100;\n*/\nwhile(x<100 && 100<z) \n  {\n    _Bool tmp=unknown_bool();\n    if (tmp)\n   {\n     x++;\n   }\n   else\n   {\n     x--;\n     z--;\n   }\n  }                       \n    \n  {;\n//@ assert(x>=100 || z<=100);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant z < 100;\nloop invariant x <= z;\nloop invariant x + (z - 1) * z / 2 <= y + (z - 1) * z / 2;\nloop invariant z - 1 - (z - 1) * z / 2 >= y - (z - 1) * z / 2;\nloop invariant y - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 >= y - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= x + (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= z - 1 - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= y - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= z - 1 - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= y - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= z - 1 - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= y - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= z - 1 - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= y - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= z - 1 - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= y - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= z - 1 - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= y - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= z - 1 - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= y - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= z - 1 - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= y - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= z - 1 - (z - 1) * z / 2;\nloop invariant x - (z - 1) * z / 2 <= y - (z - 1) * z / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  int x=unknown_int();\n  int y=unknown_int();\n  int z=unknown_int();\n  assume(x<100);\n  assume(z<100);\n  /*@\n\nloop invariant i2: z < 100;\n\n\n\n\n\nloop invariant i8: x - (z - 1) * z / 2 <= x + (z - 1) * z / 2;\n\n\nloop invariant i11: x - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\n*/\nwhile(x<100 && 100<z) \n  {\n    _Bool tmp=unknown_bool();\n    if (tmp)\n   {\n     x++;\n   }\n   else\n   {\n     x--;\n     z--;\n   }\n  }                       \n    \n  {;\n//@ assert(x>=100 || z<=100);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant x >= 100 ==> x >= 100;\nloop invariant z <= 100 ==> z <= 100;\nloop invariant x < 100 ==> x < 100;\nloop invariant z >= 100 ==> z >= 100;\nloop invariant !(x < 100 && z < 100) ==> !(x < 100 && z < 100);\nloop invariant x >= 100 ==> x >= z;\nloop invariant z <= 100 ==> x >= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  int x=unknown_int();\n  int y=unknown_int();\n  int z=unknown_int();\n  assume(x<100);\n  assume(z<100);\n  /*@\nloop invariant i1: x >= 100 ==> x >= 100;\nloop invariant i2: z <= 100 ==> z <= 100;\nloop invariant i3: x < 100 ==> x < 100;\nloop invariant i4: z >= 100 ==> z >= 100;\nloop invariant i5: !(x < 100 && z < 100) ==> !(x < 100 && z < 100);\n\n\n*/\nwhile(x<100 && 100<z) \n  {\n    _Bool tmp=unknown_bool();\n    if (tmp)\n   {\n     x++;\n   }\n   else\n   {\n     x--;\n     z--;\n   }\n  }                       \n    \n  {;\n//@ assert(x>=100 || z<=100);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 11,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100 and 100 <= z <= 100;\nloop invariant x >= z - 100;\nloop invariant x >= 100;\nloop invariant z <= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant x >= z;\nloop invariant x >= z - 100 ==> x >= 100;\nloop invariant x >= z - 100 ==> z <= 100;\nloop invariant x >= z - 100 ==> x >= z;\nloop invariant x >= z - 100 ==> x >= z ==> x >= 100;\nloop invariant x >= z - 100 ==> x >= z ==> z <= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  int x=unknown_int();\n  int y=unknown_int();\n  int z=unknown_int();\n  assume(x<100);\n  assume(z<100);\n  /*@\n\n\n\nloop invariant i4: z <= 100;\nloop invariant i5: x >= 100 ==> z <= 100;\n\n\nloop invariant i8: x >= z - 100 ==> z <= 100;\n\n\nloop invariant i11: x >= z - 100 ==> x >= z ==> z <= 100;\nloop invariant i12: x >= z - 100 ==> x >= z ==> x >= z;\n\nloop invariant i14: x >= z - 100 ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant i15: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z;\n\nloop invariant i17: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant i18: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\n\nloop invariant i20: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant i21: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\n\nloop invariant i23: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant i24: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\n\nloop invariant i26: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant i27: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\n\nloop invariant i29: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant i30: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\n\nloop invariant i32: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant i33: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\n*/\nwhile(x<100 && 100<z) \n  {\n    _Bool tmp=unknown_bool();\n    if (tmp)\n   {\n     x++;\n   }\n   else\n   {\n     x--;\n     z--;\n   }\n  }                       \n    \n  {;\n//@ assert(x>=100 || z<=100);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant x <= 100;\nloop invariant 0 <= y <= 100;\nloop invariant 0 <= z <= 100;\nloop invariant x >= y;\nloop invariant x >= z;\nloop invariant x >= 100 ==> y <= 100;\nloop invariant x >= 100 ==> z <= 100;\nloop invariant 100 < z ==> x <= 100;\nloop invariant 100 < z ==> y <= 100;\nloop invariant 100 < z ==> z >= 100;\nloop invariant x >= 100 ==> x >= z;\nloop invariant x >= 100 ==> x >= y;\nloop invariant 100 < z ==> y <= z;\nloop invariant 100 < z ==> x <= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  int x=unknown_int();\n  int y=unknown_int();\n  int z=unknown_int();\n  assume(x<100);\n  assume(z<100);\n  /*@\nloop invariant i1: x <= 100;\n\n\n\n\nloop invariant i6: x >= 100 ==> y <= 100;\n\nloop invariant i8: 100 < z ==> x <= 100;\nloop invariant i9: 100 < z ==> y <= 100;\nloop invariant i10: 100 < z ==> z >= 100;\n\nloop invariant i12: x >= 100 ==> x >= y;\nloop invariant i13: 100 < z ==> y <= z;\nloop invariant i14: 100 < z ==> x <= z;\n*/\nwhile(x<100 && 100<z) \n  {\n    _Bool tmp=unknown_bool();\n    if (tmp)\n   {\n     x++;\n   }\n   else\n   {\n     x--;\n     z--;\n   }\n  }                       \n    \n  {;\n//@ assert(x>=100 || z<=100);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= z <= 100;\nloop invariant (x < 100 ==> z < 100);\nloop invariant (x < 100 ==> tmp ==> x < 101);\nloop invariant (x < 100 ==> !tmp ==> x < 99);\nloop invariant (x < 100 ==> z < 100 ==> z < 99);\nloop invariant (x < 100 ==> z < 100 ==> x < 100);\nloop invariant (x < 100 ==> z < 100 ==> z < 100);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  int x=unknown_int();\n  int y=unknown_int();\n  int z=unknown_int();\n  assume(x<100);\n  assume(z<100);\n  /*@\n\n\nloop invariant i3: (x < 100 ==> z < 100);\n\n\n\nloop invariant i7: (x < 100 ==> z < 100 ==> x < 100);\nloop invariant i8: (x < 100 ==> z < 100 ==> z < 100);\n*/\nwhile(x<100 && 100<z) \n  {\n    _Bool tmp=unknown_bool();\n    if (tmp)\n   {\n     x++;\n   }\n   else\n   {\n     x--;\n     z--;\n   }\n  }                       \n    \n  {;\n//@ assert(x>=100 || z<=100);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= z <= 100;\nloop invariant x <= y <= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  int x=unknown_int();\n  int y=unknown_int();\n  int z=unknown_int();\n  assume(x<100);\n  assume(z<100);\n  /*@\n\n\n\n*/\nwhile(x<100 && 100<z) \n  {\n    _Bool tmp=unknown_bool();\n    if (tmp)\n   {\n     x++;\n   }\n   else\n   {\n     x--;\n     z--;\n   }\n  }                       \n    \n  {;\n//@ assert(x>=100 || z<=100);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant x < 100;\nloop invariant z < 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\nloop invariant x >= z;\nloop invariant x <= 100;\nloop invariant z <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  int x=unknown_int();\n  int y=unknown_int();\n  int z=unknown_int();\n  assume(x<100);\n  assume(z<100);\n  /*@\n\n\n\nloop invariant i4: x < 100;\nloop invariant i5: z < 100;\n\nloop invariant i7: x <= 100;\nloop invariant i8: z <= 100;\n*/\nwhile(x<100 && 100<z) \n  {\n    _Bool tmp=unknown_bool();\n    if (tmp)\n   {\n     x++;\n   }\n   else\n   {\n     x--;\n     z--;\n   }\n  }                       \n    \n  {;\n//@ assert(x>=100 || z<=100);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100 && x < z <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  int x=unknown_int();\n  int y=unknown_int();\n  int z=unknown_int();\n  assume(x<100);\n  assume(z<100);\n  /*@\n\n*/\nwhile(x<100 && 100<z) \n  {\n    _Bool tmp=unknown_bool();\n    if (tmp)\n   {\n     x++;\n   }\n   else\n   {\n     x--;\n     z--;\n   }\n  }                       \n    \n  {;\n//@ assert(x>=100 || z<=100);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= z <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  int x=unknown_int();\n  int y=unknown_int();\n  int z=unknown_int();\n  assume(x<100);\n  assume(z<100);\n  /*@\n\n\n*/\nwhile(x<100 && 100<z) \n  {\n    _Bool tmp=unknown_bool();\n    if (tmp)\n   {\n     x++;\n   }\n   else\n   {\n     x--;\n     z--;\n   }\n  }                       \n    \n  {;\n//@ assert(x>=100 || z<=100);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 99;\nloop invariant 0 <= z <= 99;\nloop invariant x <= 100;\nloop invariant z >= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  int x=unknown_int();\n  int y=unknown_int();\n  int z=unknown_int();\n  assume(x<100);\n  assume(z<100);\n  /*@\n\n\nloop invariant i3: x <= 100;\n\n*/\nwhile(x<100 && 100<z) \n  {\n    _Bool tmp=unknown_bool();\n    if (tmp)\n   {\n     x++;\n   }\n   else\n   {\n     x--;\n     z--;\n   }\n  }                       \n    \n  {;\n//@ assert(x>=100 || z<=100);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= z <= 100;\nloop invariant x >= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  int x=unknown_int();\n  int y=unknown_int();\n  int z=unknown_int();\n  assume(x<100);\n  assume(z<100);\n  /*@\n\n\n\n*/\nwhile(x<100 && 100<z) \n  {\n    _Bool tmp=unknown_bool();\n    if (tmp)\n   {\n     x++;\n   }\n   else\n   {\n     x--;\n     z--;\n   }\n  }                       \n    \n  {;\n//@ assert(x>=100 || z<=100);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 0 <= z <= 100;\nloop invariant x <= z;\nloop invariant x >= z - 1;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x > z;\nloop invariant x - 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x < z;\nloop invariant x - 1 >= z ==> x >= z;\nloop invariant x + 1 < z ==> x <= z - 1;\nloop invariant x - 1 >= z ==> x >= z + 1;\nloop invariant x + 1 < z ==> x <= z;\nloop invariant x - 1 >= z ==> x >= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  int x=unknown_int();\n  int y=unknown_int();\n  int z=unknown_int();\n  assume(x<100);\n  assume(z<100);\n  /*@\n\n\n\n\nloop invariant i5: x + 1 < z ==> x < z;\nloop invariant i6: x - 1 >= z ==> x > z;\n\nloop invariant i8: x - 1 >= z ==> x >= z;\nloop invariant i9: x + 1 < z ==> x <= z - 1;\nloop invariant i10: x - 1 >= z ==> x >= z + 1;\nloop invariant i11: x + 1 < z ==> x <= z;\n*/\nwhile(x<100 && 100<z) \n  {\n    _Bool tmp=unknown_bool();\n    if (tmp)\n   {\n     x++;\n   }\n   else\n   {\n     x--;\n     z--;\n   }\n  }                       \n    \n  {;\n//@ assert(x>=100 || z<=100);\n}\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 46: unexpected token 'and'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  int x=unknown_int();\n  int y=unknown_int();\n  int z=unknown_int();\n  assume(x<100);\n  assume(z<100);\n  /*@\nloop invariant i1: 0 < x < 100;\nloop invariant i2: 0 < z < 100;\nloop invariant i3: x <= z;\nloop invariant i4: x < 100 ==> x <= z;\nloop invariant i5: x >= 100 ==> x >= 100;\nloop invariant i6: z <= 100 ==> z <= 100;\nloop invariant i7: x <= z ==> x <= z;\nloop invariant i8: 0 <= x <= 100;\nloop invariant i9: 0 <= z <= 100;\nloop invariant i10: x >= 0 ==> x <= 100;\nloop invariant i11: z >= 0 ==> z <= 100;\nloop invariant i12: x >= 0 ==> z >= 0;\nloop invariant i13: x >= 0 ==> z <= 100;\nloop invariant i14: z < 100;\nloop invariant i15: x + (z - 1) * z / 2 <= y + (z - 1) * z / 2;\nloop invariant i16: z - 1 - (z - 1) * z / 2 >= y - (z - 1) * z / 2;\nloop invariant i17: y - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\nloop invariant i18: x - (z - 1) * z / 2 >= y - (z - 1) * z / 2;\nloop invariant i19: x - (z - 1) * z / 2 <= x + (z - 1) * z / 2;\nloop invariant i20: x - (z - 1) * z / 2 <= z - 1 - (z - 1) * z / 2;\nloop invariant i21: x - (z - 1) * z / 2 <= y - (z - 1) * z / 2;\nloop invariant i22: x - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\nloop invariant i23: x < 100 ==> x < 100;\nloop invariant i24: z >= 100 ==> z >= 100;\nloop invariant i25: !(x < 100 && z < 100) ==> !(x < 100 && z < 100);\nloop invariant i26: x >= 100 ==> x >= z;\nloop invariant i27: z <= 100 ==> x >= z;\nloop invariant i28: 0 <= x <= 100 and 100 <= z <= 100;\nloop invariant i29: x >= z - 100;\nloop invariant i30: x >= 100;\nloop invariant i31: z <= 100;\nloop invariant i32: x >= 100 ==> z <= 100;\nloop invariant i33: x >= z;\nloop invariant i34: x >= z - 100 ==> x >= 100;\nloop invariant i35: x >= z - 100 ==> z <= 100;\nloop invariant i36: x >= z - 100 ==> x >= z;\nloop invariant i37: x >= z - 100 ==> x >= z ==> x >= 100;\nloop invariant i38: x >= z - 100 ==> x >= z ==> z <= 100;\nloop invariant i39: x >= z - 100 ==> x >= z ==> x >= z;\nloop invariant i40: x >= z - 100 ==> x >= z ==> x >= z ==> x >= 100;\nloop invariant i41: x >= z - 100 ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant i42: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z;\nloop invariant i43: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= 100;\nloop invariant i44: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant i45: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\nloop invariant i46: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= 100;\nloop invariant i47: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant i48: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\nloop invariant i49: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= 100;\nloop invariant i50: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant i51: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\nloop invariant i52: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= 100;\nloop invariant i53: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant i54: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\nloop invariant i55: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= 100;\nloop invariant i56: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant i57: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\nloop invariant i58: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= 100;\nloop invariant i59: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant i60: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\nloop invariant i61: x <= 100;\nloop invariant i62: 0 <= y <= 100;\nloop invariant i63: x >= y;\nloop invariant i64: x >= 100 ==> y <= 100;\nloop invariant i65: 100 < z ==> x <= 100;\nloop invariant i66: 100 < z ==> y <= 100;\nloop invariant i67: 100 < z ==> z >= 100;\nloop invariant i68: x >= 100 ==> x >= y;\nloop invariant i69: 100 < z ==> y <= z;\nloop invariant i70: 100 < z ==> x <= z;\nloop invariant i71: (x < 100 ==> z < 100);\nloop invariant i72: (x < 100 ==> tmp ==> x < 101);\nloop invariant i73: (x < 100 ==> !tmp ==> x < 99);\nloop invariant i74: (x < 100 ==> z < 100 ==> z < 99);\nloop invariant i75: (x < 100 ==> z < 100 ==> x < 100);\nloop invariant i76: (x < 100 ==> z < 100 ==> z < 100);\nloop invariant i77: x <= y <= z;\nloop invariant i78: x >= 0;\nloop invariant i79: y >= 0;\nloop invariant i80: z >= 0;\nloop invariant i81: x < 100;\nloop invariant i82: 0 <= x <= 100 && x < z <= 100;\nloop invariant i83: 0 <= x <= 99;\nloop invariant i84: 0 <= z <= 99;\nloop invariant i85: z >= 100;\nloop invariant i86: x >= z - 1;\nloop invariant i87: x + 1 < z ==> x < z;\nloop invariant i88: x - 1 >= z ==> x > z;\nloop invariant i89: x - 1 < z ==> x < z;\nloop invariant i90: x - 1 >= z ==> x >= z;\nloop invariant i91: x + 1 < z ==> x <= z - 1;\nloop invariant i92: x - 1 >= z ==> x >= z + 1;\nloop invariant i93: x + 1 < z ==> x <= z;\n*/\nwhile(x<100 && 100<z) \n  {\n    _Bool tmp=unknown_bool();\n    if (tmp)\n   {\n     x++;\n   }\n   else\n   {\n     x--;\n     z--;\n   }\n  }                       \n    \n  {;\n//@ assert(x>=100 || z<=100);\n}\n\n}",
        "combined_annotation_num_solver_calls": 16,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  int x=unknown_int();\n  int y=unknown_int();\n  int z=unknown_int();\n  assume(x<100);\n  assume(z<100);\n  /*@\n\n\n\n\nloop invariant i5: x >= 100 ==> x >= 100;\nloop invariant i6: z <= 100 ==> z <= 100;\nloop invariant i7: x <= z ==> x <= z;\n\n\nloop invariant i10: x >= 0 ==> x <= 100;\nloop invariant i11: z >= 0 ==> z <= 100;\n\nloop invariant i13: x >= 0 ==> z <= 100;\nloop invariant i14: z < 100;\n\n\n\n\nloop invariant i19: x - (z - 1) * z / 2 <= x + (z - 1) * z / 2;\n\n\nloop invariant i22: x - (z - 1) * z / 2 <= x - (z - 1) * z / 2;\nloop invariant i23: x < 100 ==> x < 100;\nloop invariant i24: z >= 100 ==> z >= 100;\nloop invariant i25: !(x < 100 && z < 100) ==> !(x < 100 && z < 100);\nloop invariant i26: x >= 100 ==> x >= z;\n\n\n\n\nloop invariant i31: z <= 100;\nloop invariant i32: x >= 100 ==> z <= 100;\n\n\nloop invariant i35: x >= z - 100 ==> z <= 100;\n\n\nloop invariant i38: x >= z - 100 ==> x >= z ==> z <= 100;\nloop invariant i39: x >= z - 100 ==> x >= z ==> x >= z;\n\nloop invariant i41: x >= z - 100 ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant i42: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z;\n\nloop invariant i44: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant i45: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\n\nloop invariant i47: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant i48: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\n\nloop invariant i50: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant i51: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\n\nloop invariant i53: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant i54: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\n\nloop invariant i56: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant i57: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\n\nloop invariant i59: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> z <= 100;\nloop invariant i60: x >= z - 100 ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z ==> x >= z;\nloop invariant i61: x <= 100;\n\n\nloop invariant i64: x >= 100 ==> y <= 100;\nloop invariant i65: 100 < z ==> x <= 100;\nloop invariant i66: 100 < z ==> y <= 100;\nloop invariant i67: 100 < z ==> z >= 100;\nloop invariant i68: x >= 100 ==> x >= y;\nloop invariant i69: 100 < z ==> y <= z;\nloop invariant i70: 100 < z ==> x <= z;\nloop invariant i71: (x < 100 ==> z < 100);\n\n\n\nloop invariant i75: (x < 100 ==> z < 100 ==> x < 100);\nloop invariant i76: (x < 100 ==> z < 100 ==> z < 100);\n\n\n\n\nloop invariant i81: x < 100;\n\n\n\n\n\nloop invariant i87: x + 1 < z ==> x < z;\nloop invariant i88: x - 1 >= z ==> x > z;\n\nloop invariant i90: x - 1 >= z ==> x >= z;\nloop invariant i91: x + 1 < z ==> x <= z - 1;\nloop invariant i92: x - 1 >= z ==> x >= z + 1;\nloop invariant i93: x + 1 < z ==> x <= z;\n*/\nwhile(x<100 && 100<z) \n  {\n    _Bool tmp=unknown_bool();\n    if (tmp)\n   {\n     x++;\n   }\n   else\n   {\n     x--;\n     z--;\n   }\n  }                       \n    \n  {;\n//@ assert(x>=100 || z<=100);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/popl.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/05.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/07.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/37.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/39.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv_simp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/xy10.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/const_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe3.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe4.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbr.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbrprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bk-nat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bkley.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/efm.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/ex1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnatprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifo.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/seesaw.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/ken-imp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/rajamani_1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/simple.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/simple_if.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/up-nested.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/count_up_down_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/for_infinite_loop_1_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/for_infinite_loop_2_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/sum03_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/sum04_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/terminator_02_true.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/pldi082_unbounded.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_unsafe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/sum01_true.c"
        ],
        "skipped": [],
        "total": 179,
        "success_count": 151,
        "failure_count": 28,
        "success_rate": 0.8435754189944135
    }
}