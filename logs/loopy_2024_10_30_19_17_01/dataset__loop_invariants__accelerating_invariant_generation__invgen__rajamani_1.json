{
    "logs": {
        "file": "../dataset/loop_invariants/accelerating_invariant_generation/invgen/rajamani_1.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  while ( __BLAST_NONDET ){\n    if ( __BLAST_NONDET ) {\n      x++; y = y+100;\n    } else if  ( __BLAST_NONDET ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant z >= 10 * x;\nloop invariant w >= x;\nloop invariant x >= 4 ==> y > 2;\nloop invariant x < 4 ==> x == 0;\nloop invariant y <= 10 * w;\nloop invariant z <= 10 * x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= z <= 10000;\nloop invariant 0 <= w <= 10000;\nloop invariant x < 4 ==> y < 100;\nloop invariant x >= 4 ==> y >= 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000; loop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 4;\nloop invariant 0 <= y <= 2;\nloop invariant 4 <= z <= 100 * x;\nloop invariant 0 <= w <= 10000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant y >= 10 * w;\nloop invariant z >= 100 * x;\nloop invariant w >= x;\nloop invariant y == -y ==> x >= 4;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y;\nloop invariant x <= y / 4;\nloop invariant z <= y;\nloop invariant w <= y / 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 9;\nloop invariant 0 <= y <= 1000;\nloop invariant 0 <= w <= 100;\nloop invariant 0 <= z <= 1000;\nloop invariant x < 4 ==> y > 2;\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant z >= 10 * w;\nloop invariant ( __BLAST_NONDET ==> (x >= 0 && y >= 100 * (x + 1) && z >= 10 * (x + 1)) );\nloop invariant ( (__BLAST_NONDET == false && x >= 4) ==> (x >= 4 && y >= 100 * (x + 1) && z >= 10 * (x + 1)) );\nloop invariant ( (__BLAST_NONDET == false && y > 10 * w) ==> (y >= 100 * x && z >= 10 * (x + 1)) );\nloop invariant ( (__BLAST_NONDET == false && y <= 10 * w) ==> (y >= 0 && z >= 10 * w) );\nloop invariant (x >= 4 ==> (y > 2) );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100;\nloop invariant x >= 0;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x <= 100;\nloop invariant y <= 10*w;\nloop invariant z <= 100*w;\nloop invariant x < w || y > 10*w || z < 100*x;\nloop invariant x < 4 || y <= 10*w || z < 100*x;\nloop invariant y > 10*w || z > 100*x;\nloop invariant x < 4 || y <= 10*w || z > 100*x;\nloop invariant x < 4 || y > 10*w || z > 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z > 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant x == 0 ==> y = 0;\nloop invariant x == 1 ==> y = 100;\nloop invariant x == 2 ==> y = 200;\nloop invariant x == 3 ==> y = 300;\nloop invariant x == 4 ==> y = 400;\nloop invariant y == 400 ==> x >= 4;\nloop invariant 0 <= z <= 100*x;\nloop invariant 0 <= w <= z/10;\nloop invariant y > 10*w ==> y = -y;\nloop invariant y <= 10*w ==> y = y;\nloop invariant y > 2 ==> x >= 4;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 4;\nloop invariant 0 <= y <= 10*x;\nloop invariant 0 <= z <= 10*w;\nloop invariant 0 <= w <= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant z >= (1 + (y - 1) * y / 2);\nloop invariant w >= (1 + (y - 1) * y / 2);\nloop invariant x >= 4 ==> y > 2;\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= w <= z;\nloop invariant 0 <= x <= 4;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 1000;\nloop invariant 0 <= z <= 1000;\nloop invariant 0 <= w <= 1000;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 0 ==> z == 0;\nloop invariant x == 0 ==> w == 0;\nloop invariant x >= 4 ==> x == 4;\nloop invariant x >= 4 ==> y > 2;\nloop invariant x >= 4 ==> z > 400;\nloop invariant x >= 4 ==> w > 400;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100000;\nloop invariant y >= 0;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant 100*y >= 10*w;\nloop invariant x >= 4 ==> y > 2;\nloop invariant 0 <= x <= 100000;\nloop invariant y >= 0;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant 100*y >= 10*w;\nloop invariant y > 2;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant z >= 10 * x;\nloop invariant w >= x;\nloop invariant x >= 4 ==> y > 2;\nloop invariant x < 4 ==> x == 0;\nloop invariant y <= 10 * w;\nloop invariant z <= 10 * x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\nloop invariant i3: z >= 10 * x;\nloop invariant i4: w >= x;\n\n\n\nloop invariant i8: z <= 10 * x;\n*/\nwhile ( __BLAST_NONDET ){\n    if ( __BLAST_NONDET ) {\n      x++; y = y+100;\n    } else if  ( __BLAST_NONDET ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= z <= 10000;\nloop invariant 0 <= w <= 10000;\nloop invariant x < 4 ==> y < 100;\nloop invariant x >= 4 ==> y >= 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\n\n\n\n\n*/\nwhile ( __BLAST_NONDET ){\n    if ( __BLAST_NONDET ) {\n      x++; y = y+100;\n    } else if  ( __BLAST_NONDET ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000; loop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\nloop invariant i1: 0 <= y <= 100000; loop invariant x >= (1 + (y - 1) * y / 2);\n*/\nwhile ( __BLAST_NONDET ){\n    if ( __BLAST_NONDET ) {\n      x++; y = y+100;\n    } else if  ( __BLAST_NONDET ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 4;\nloop invariant 0 <= y <= 2;\nloop invariant 4 <= z <= 100 * x;\nloop invariant 0 <= w <= 10000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant y >= 10 * w;\nloop invariant z >= 100 * x;\nloop invariant w >= x;\nloop invariant y == -y ==> x >= 4;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\n\n\n\nloop invariant i6: y >= 10 * w;\n\nloop invariant i8: w >= x;\n\n*/\nwhile ( __BLAST_NONDET ){\n    if ( __BLAST_NONDET ) {\n      x++; y = y+100;\n    } else if  ( __BLAST_NONDET ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= y;\nloop invariant x <= y / 4;\nloop invariant z <= y;\nloop invariant w <= y / 100;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant y >= 100 * x;\nloop invariant w <= y / 100;\nloop invariant z <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\nloop invariant i1: 0 <= y;\nloop invariant i2: x <= y / 4;\nloop invariant i3: z <= y;\nloop invariant i4: w <= y / 100;\nloop invariant i5: x >= 0;\nloop invariant i6: y >= 0;\nloop invariant i7: z >= 0;\nloop invariant i8: w >= 0;\nloop invariant i9: y >= 100 * x;\n*/\nwhile ( __BLAST_NONDET ){\n    if ( __BLAST_NONDET ) {\n      x++; y = y+100;\n    } else if  ( __BLAST_NONDET ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 9;\nloop invariant 0 <= y <= 1000;\nloop invariant 0 <= w <= 100;\nloop invariant 0 <= z <= 1000;\nloop invariant x < 4 ==> y > 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\n\n\n\n*/\nwhile ( __BLAST_NONDET ){\n    if ( __BLAST_NONDET ) {\n      x++; y = y+100;\n    } else if  ( __BLAST_NONDET ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant w >= 0;\nloop invariant z >= 10 * w;\nloop invariant ( __BLAST_NONDET ==> (x >= 0 && y >= 100 * (x + 1) && z >= 10 * (x + 1)) );\nloop invariant ( (__BLAST_NONDET == false && x >= 4) ==> (x >= 4 && y >= 100 * (x + 1) && z >= 10 * (x + 1)) );\nloop invariant ( (__BLAST_NONDET == false && y > 10 * w) ==> (y >= 100 * x && z >= 10 * (x + 1)) );\nloop invariant ( (__BLAST_NONDET == false && y <= 10 * w) ==> (y >= 0 && z >= 10 * w) );\nloop invariant (x >= 4 ==> (y > 2) );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\nloop invariant i1: x >= 0;\nloop invariant i2: y >= 0;\nloop invariant i3: z >= 0;\nloop invariant i4: w >= 0;\nloop invariant i5: z >= 10 * w;\nloop invariant i6: ( __BLAST_NONDET ==> (x >= 0 && y >= 100 * (x + 1) && z >= 10 * (x + 1)) );\n\n\n\nloop invariant i10: (x >= 4 ==> (y > 2) );\n*/\nwhile ( __BLAST_NONDET ){\n    if ( __BLAST_NONDET ) {\n      x++; y = y+100;\n    } else if  ( __BLAST_NONDET ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100;\nloop invariant x >= 0;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant x <= 100;\nloop invariant y <= 10*w;\nloop invariant z <= 100*w;\nloop invariant x < w || y > 10*w || z < 100*x;\nloop invariant x < 4 || y <= 10*w || z < 100*x;\nloop invariant y > 10*w || z > 100*x;\nloop invariant x < 4 || y <= 10*w || z > 100*x;\nloop invariant x < 4 || y > 10*w || z > 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z > 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\nloop invariant x < 4 || y > 10*w || z <= 100*x;\nloop invariant x < 4 || y <= 10*w || z <= 100*x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\nloop invariant i2: x >= 0;\nloop invariant i3: w >= 0;\nloop invariant i4: z >= 0;\n\n\nloop invariant i7: z <= 100*w;\n\n\n\n\n\n\n\n*/\nwhile ( __BLAST_NONDET ){\n    if ( __BLAST_NONDET ) {\n      x++; y = y+100;\n    } else if  ( __BLAST_NONDET ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 10,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant x == 0 ==> y = 0;\nloop invariant x == 1 ==> y = 100;\nloop invariant x == 2 ==> y = 200;\nloop invariant x == 3 ==> y = 300;\nloop invariant x == 4 ==> y = 400;\nloop invariant y == 400 ==> x >= 4;\nloop invariant 0 <= z <= 100*x;\nloop invariant 0 <= w <= z/10;\nloop invariant y > 10*w ==> y = -y;\nloop invariant y <= 10*w ==> y = y;\nloop invariant y > 2 ==> x >= 4;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\n\n\n\n\n\nloop invariant i8: 0 <= z <= 100*x;\nloop invariant i9: 0 <= w <= z/10;\n\n\n\n*/\nwhile ( __BLAST_NONDET ){\n    if ( __BLAST_NONDET ) {\n      x++; y = y+100;\n    } else if  ( __BLAST_NONDET ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 4;\nloop invariant 0 <= y <= 10*x;\nloop invariant 0 <= z <= 10*w;\nloop invariant 0 <= w <= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\nloop invariant i3: 0 <= z <= 10*w;\n\n*/\nwhile ( __BLAST_NONDET ){\n    if ( __BLAST_NONDET ) {\n      x++; y = y+100;\n    } else if  ( __BLAST_NONDET ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant z >= (1 + (y - 1) * y / 2);\nloop invariant w >= (1 + (y - 1) * y / 2);\nloop invariant x >= 4 ==> y > 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\n\n\n\n*/\nwhile ( __BLAST_NONDET ){\n    if ( __BLAST_NONDET ) {\n      x++; y = y+100;\n    } else if  ( __BLAST_NONDET ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 158,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ( __BLAST_NONDET ){\n    if ( __BLAST_NONDET ) {\n      x++; y = y+100;\n    } else if  ( __BLAST_NONDET ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= w <= z;\nloop invariant 0 <= x <= 4;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\nloop invariant -z <= w <= z;\nloop invariant -z <= x <= z;\nloop invariant -z <= y <= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\nloop invariant i1: 0 <= w <= z;\n\n\nloop invariant i4: -z <= w <= z;\nloop invariant i5: -z <= x <= z;\n*/\nwhile ( __BLAST_NONDET ){\n    if ( __BLAST_NONDET ) {\n      x++; y = y+100;\n    } else if  ( __BLAST_NONDET ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 1000;\nloop invariant 0 <= z <= 1000;\nloop invariant 0 <= w <= 1000;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 0 ==> z == 0;\nloop invariant x == 0 ==> w == 0;\nloop invariant x >= 4 ==> x == 4;\nloop invariant x >= 4 ==> y > 2;\nloop invariant x >= 4 ==> z > 400;\nloop invariant x >= 4 ==> w > 400;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\nloop invariant x < 4 ==> w == 0;\nloop invariant x < 4 ==> y == 0;\nloop invariant x < 4 ==> z == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ( __BLAST_NONDET ){\n    if ( __BLAST_NONDET ) {\n      x++; y = y+100;\n    } else if  ( __BLAST_NONDET ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100000;\nloop invariant y >= 0;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant 100*y >= 10*w;\nloop invariant x >= 4 ==> y > 2;\nloop invariant 0 <= x <= 100000;\nloop invariant y >= 0;\nloop invariant w >= 0;\nloop invariant z >= 0;\nloop invariant 100*y >= 10*w;\nloop invariant y > 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\n\nloop invariant i2: y >= 0;\nloop invariant i3: w >= 0;\nloop invariant i4: z >= 0;\nloop invariant i5: 100*y >= 10*w;\nloop invariant i6: x >= 4 ==> y > 2;\n\n*/\nwhile ( __BLAST_NONDET ){\n    if ( __BLAST_NONDET ) {\n      x++; y = y+100;\n    } else if  ( __BLAST_NONDET ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 67: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\nloop invariant i1: 0 <= y <= 100000;\nloop invariant i2: x >= (1 + (y - 1) * y / 2);\nloop invariant i3: z >= 10 * x;\nloop invariant i4: w >= x;\nloop invariant i5: x >= 4 ==> y > 2;\nloop invariant i6: x < 4 ==> x == 0;\nloop invariant i7: y <= 10 * w;\nloop invariant i8: z <= 10 * x;\nloop invariant i9: 0 <= z <= 10000;\nloop invariant i10: 0 <= w <= 10000;\nloop invariant i11: x < 4 ==> y < 100;\nloop invariant i12: x >= 4 ==> y >= 2;\nloop invariant i13: 0 <= y <= 100000; loop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant i14: 1 <= x <= 4;\nloop invariant i15: 0 <= y <= 2;\nloop invariant i16: 4 <= z <= 100 * x;\nloop invariant i17: y >= 10 * w;\nloop invariant i18: z >= 100 * x;\nloop invariant i19: y == -y ==> x >= 4;\nloop invariant i20: 0 <= y;\nloop invariant i21: x <= y / 4;\nloop invariant i22: z <= y;\nloop invariant i23: w <= y / 100;\nloop invariant i24: x >= 0;\nloop invariant i25: y >= 0;\nloop invariant i26: z >= 0;\nloop invariant i27: w >= 0;\nloop invariant i28: y >= 100 * x;\nloop invariant i29: 1 <= x <= 9;\nloop invariant i30: 0 <= y <= 1000;\nloop invariant i31: 0 <= w <= 100;\nloop invariant i32: 0 <= z <= 1000;\nloop invariant i33: x < 4 ==> y > 2;\nloop invariant i34: z >= 10 * w;\nloop invariant i35: ( __BLAST_NONDET ==> (x >= 0 && y >= 100 * (x + 1) && z >= 10 * (x + 1)) );\nloop invariant i36: ( (__BLAST_NONDET == false && x >= 4) ==> (x >= 4 && y >= 100 * (x + 1) && z >= 10 * (x + 1)) );\nloop invariant i37: ( (__BLAST_NONDET == false && y > 10 * w) ==> (y >= 100 * x && z >= 10 * (x + 1)) );\nloop invariant i38: ( (__BLAST_NONDET == false && y <= 10 * w) ==> (y >= 0 && z >= 10 * w) );\nloop invariant i39: (x >= 4 ==> (y > 2) );\nloop invariant i40: 0 <= y <= 100;\nloop invariant i41: x <= 100;\nloop invariant i42: y <= 10*w;\nloop invariant i43: z <= 100*w;\nloop invariant i44: x < w || y > 10*w || z < 100*x;\nloop invariant i45: x < 4 || y <= 10*w || z < 100*x;\nloop invariant i46: y > 10*w || z > 100*x;\nloop invariant i47: x < 4 || y <= 10*w || z > 100*x;\nloop invariant i48: x < 4 || y > 10*w || z > 100*x;\nloop invariant i49: x < 4 || y <= 10*w || z <= 100*x;\nloop invariant i50: x < 4 || y > 10*w || z <= 100*x;\nloop invariant i51: 0 <= x <= 4;\nloop invariant i52: x == 0 ==> y = 0;\nloop invariant i53: x == 1 ==> y = 100;\nloop invariant i54: x == 2 ==> y = 200;\nloop invariant i55: x == 3 ==> y = 300;\nloop invariant i56: x == 4 ==> y = 400;\nloop invariant i57: y == 400 ==> x >= 4;\nloop invariant i58: 0 <= z <= 100*x;\nloop invariant i59: 0 <= w <= z/10;\nloop invariant i60: y > 10*w ==> y = -y;\nloop invariant i61: y <= 10*w ==> y = y;\nloop invariant i62: y > 2 ==> x >= 4;\nloop invariant i63: 0 <= y <= 10*x;\nloop invariant i64: 0 <= z <= 10*w;\nloop invariant i65: 0 <= w <= 1;\nloop invariant i66: z >= (1 + (y - 1) * y / 2);\nloop invariant i67: w >= (1 + (y - 1) * y / 2);\nloop invariant i68: i1;\nloop invariant i69: i2;\nloop invariant i70: i3;\nloop invariant i71: i4;\nloop invariant i72: i5;\nloop invariant i73: i6;\nloop invariant i74: i7;\nloop invariant i75: i8;\nloop invariant i76: i9;\nloop invariant i77: i10;\nloop invariant i78: i11;\nloop invariant i79: i12;\nloop invariant i80: i13;\nloop invariant i81: i14;\nloop invariant i82: i15;\nloop invariant i83: i16;\nloop invariant i84: i17;\nloop invariant i85: i18;\nloop invariant i86: i19;\nloop invariant i87: i20;\nloop invariant i88: i21;\nloop invariant i89: i22;\nloop invariant i90: i23;\nloop invariant i91: i24;\nloop invariant i92: i25;\nloop invariant i93: i26;\nloop invariant i94: i27;\nloop invariant i95: i28;\nloop invariant i96: i29;\nloop invariant i97: i30;\nloop invariant i98: i31;\nloop invariant i99: i32;\nloop invariant i100: i33;\nloop invariant i101: i34;\nloop invariant i102: i35;\nloop invariant i103: i36;\nloop invariant i104: i37;\nloop invariant i105: i38;\nloop invariant i106: i39;\nloop invariant i107: i40;\nloop invariant i108: i41;\nloop invariant i109: i42;\nloop invariant i110: i43;\nloop invariant i111: i44;\nloop invariant i112: i45;\nloop invariant i113: i46;\nloop invariant i114: i47;\nloop invariant i115: i48;\nloop invariant i116: i49;\nloop invariant i117: i50;\nloop invariant i118: i51;\nloop invariant i119: i52;\nloop invariant i120: i53;\nloop invariant i121: i54;\nloop invariant i122: i55;\nloop invariant i123: i56;\nloop invariant i124: i57;\nloop invariant i125: i58;\nloop invariant i126: i59;\nloop invariant i127: i60;\nloop invariant i128: i61;\nloop invariant i129: i62;\nloop invariant i130: i63;\nloop invariant i131: i64;\nloop invariant i132: i65;\nloop invariant i133: i66;\nloop invariant i134: i67;\nloop invariant i135: i68;\nloop invariant i136: i69;\nloop invariant i137: i70;\nloop invariant i138: i71;\nloop invariant i139: i72;\nloop invariant i140: i73;\nloop invariant i141: i74;\nloop invariant i142: i75;\nloop invariant i143: i76;\nloop invariant i144: i77;\nloop invariant i145: i78;\nloop invariant i146: i79;\nloop invariant i147: i80;\nloop invariant i148: i81;\nloop invariant i149: i82;\nloop invariant i150: i83;\nloop invariant i151: i84;\nloop invariant i152: i85;\nloop invariant i153: i86;\nloop invariant i154: i87;\nloop invariant i155: i88;\nloop invariant i156: i89;\nloop invariant i157: i90;\nloop invariant i158: i91;\nloop invariant i159: i92;\nloop invariant i160: i93;\nloop invariant i161: i94;\nloop invariant i162: i95;\nloop invariant i163: i96;\nloop invariant i164: i97;\nloop invariant i165: i98;\nloop invariant i166: i99;\nloop invariant i167: i100;\nloop invariant i168: i101;\nloop invariant i169: i102;\nloop invariant i170: i103;\nloop invariant i171: i104;\nloop invariant i172: i105;\nloop invariant i173: i106;\nloop invariant i174: i107;\nloop invariant i175: i108;\nloop invariant i176: i109;\nloop invariant i177: i110;\nloop invariant i178: i111;\nloop invariant i179: i112;\nloop invariant i180: i113;\nloop invariant i181: i114;\nloop invariant i182: i115;\nloop invariant i183: i116;\nloop invariant i184: i117;\nloop invariant i185: i118;\nloop invariant i186: i119;\nloop invariant i187: i120;\nloop invariant i188: i121;\nloop invariant i189: i122;\nloop invariant i190: i123;\nloop invariant i191: i124;\nloop invariant i192: i125;\nloop invariant i193: i126;\nloop invariant i194: i127;\nloop invariant i195: i128;\nloop invariant i196: i129;\nloop invariant i197: i130;\nloop invariant i198: i131;\nloop invariant i199: i132;\nloop invariant i200: i133;\nloop invariant i201: i134;\nloop invariant i202: i135;\nloop invariant i203: i136;\nloop invariant i204: i137;\nloop invariant i205: i138;\nloop invariant i206: i139;\nloop invariant i207: i140;\nloop invariant i208: i141;\nloop invariant i209: i142;\nloop invariant i210: i143;\nloop invariant i211: i144;\nloop invariant i212: i145;\nloop invariant i213: i146;\nloop invariant i214: i147;\nloop invariant i215: i148;\nloop invariant i216: i149;\nloop invariant i217: i150;\nloop invariant i218: i151;\nloop invariant i219: i152;\nloop invariant i220: i153;\nloop invariant i221: i154;\nloop invariant i222: i155;\nloop invariant i223: i156;\nloop invariant i224: i157;\nloop invariant i225: i158;\nloop invariant i226: 0 <= w <= z;\nloop invariant i227: -z <= y <= z;\nloop invariant i228: -z <= w <= z;\nloop invariant i229: -z <= x <= z;\nloop invariant i230: 0 <= w <= 1000;\nloop invariant i231: x == 0 ==> y == 0;\nloop invariant i232: x == 0 ==> z == 0;\nloop invariant i233: x == 0 ==> w == 0;\nloop invariant i234: x >= 4 ==> x == 4;\nloop invariant i235: x >= 4 ==> z > 400;\nloop invariant i236: x >= 4 ==> w > 400;\nloop invariant i237: x < 4 ==> y == 0;\nloop invariant i238: x < 4 ==> z == 0;\nloop invariant i239: x < 4 ==> w == 0;\nloop invariant i240: 0 <= x <= 100000;\nloop invariant i241: 100*y >= 10*w;\nloop invariant i242: y > 2;\n*/\nwhile ( __BLAST_NONDET ){\n    if ( __BLAST_NONDET ) {\n      x++; y = y+100;\n    } else if  ( __BLAST_NONDET ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
        "combined_annotation_num_solver_calls": 171,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint __BLAST_NONDET;\n\nint main(){\n  int x=0;\n  int y=0;\n  int z=0;\n  int w=0;\n\n  /*@\nloop invariant i1: 0 <= y <= 100000;\n\nloop invariant i3: z >= 10 * x;\nloop invariant i4: w >= x;\nloop invariant i5: x >= 4 ==> y > 2;\nloop invariant i6: x < 4 ==> x == 0;\nloop invariant i7: y <= 10 * w;\nloop invariant i8: z <= 10 * x;\nloop invariant i9: 0 <= z <= 10000;\nloop invariant i10: 0 <= w <= 10000;\nloop invariant i11: x < 4 ==> y < 100;\nloop invariant i12: x >= 4 ==> y >= 2;\nloop invariant i13: 0 <= y <= 100000; loop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant i14: 1 <= x <= 4;\nloop invariant i15: 0 <= y <= 2;\nloop invariant i16: 4 <= z <= 100 * x;\nloop invariant i17: y >= 10 * w;\nloop invariant i18: z >= 100 * x;\nloop invariant i19: y == -y ==> x >= 4;\nloop invariant i20: 0 <= y;\nloop invariant i21: x <= y / 4;\nloop invariant i22: z <= y;\nloop invariant i23: w <= y / 100;\nloop invariant i24: x >= 0;\nloop invariant i25: y >= 0;\nloop invariant i26: z >= 0;\nloop invariant i27: w >= 0;\nloop invariant i28: y >= 100 * x;\nloop invariant i29: 1 <= x <= 9;\nloop invariant i30: 0 <= y <= 1000;\nloop invariant i31: 0 <= w <= 100;\nloop invariant i32: 0 <= z <= 1000;\nloop invariant i33: x < 4 ==> y > 2;\nloop invariant i34: z >= 10 * w;\nloop invariant i35: ( __BLAST_NONDET ==> (x >= 0 && y >= 100 * (x + 1) && z >= 10 * (x + 1)) );\n\n\n\nloop invariant i39: (x >= 4 ==> (y > 2) );\nloop invariant i40: 0 <= y <= 100;\nloop invariant i41: x <= 100;\nloop invariant i42: y <= 10*w;\nloop invariant i43: z <= 100*w;\nloop invariant i44: x < w || y > 10*w || z < 100*x;\nloop invariant i45: x < 4 || y <= 10*w || z < 100*x;\nloop invariant i46: y > 10*w || z > 100*x;\nloop invariant i47: x < 4 || y <= 10*w || z > 100*x;\nloop invariant i48: x < 4 || y > 10*w || z > 100*x;\nloop invariant i49: x < 4 || y <= 10*w || z <= 100*x;\nloop invariant i50: x < 4 || y > 10*w || z <= 100*x;\nloop invariant i51: 0 <= x <= 4;\n\n\n\n\n\nloop invariant i57: y == 400 ==> x >= 4;\nloop invariant i58: 0 <= z <= 100*x;\nloop invariant i59: 0 <= w <= z/10;\n\n\nloop invariant i62: y > 2 ==> x >= 4;\nloop invariant i63: 0 <= y <= 10*x;\nloop invariant i64: 0 <= z <= 10*w;\nloop invariant i65: 0 <= w <= 1;\nloop invariant i66: z >= (1 + (y - 1) * y / 2);\nloop invariant i67: w >= (1 + (y - 1) * y / 2);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i226: 0 <= w <= z;\nloop invariant i227: -z <= y <= z;\nloop invariant i228: -z <= w <= z;\nloop invariant i229: -z <= x <= z;\nloop invariant i230: 0 <= w <= 1000;\nloop invariant i231: x == 0 ==> y == 0;\nloop invariant i232: x == 0 ==> z == 0;\nloop invariant i233: x == 0 ==> w == 0;\nloop invariant i234: x >= 4 ==> x == 4;\nloop invariant i235: x >= 4 ==> z > 400;\nloop invariant i236: x >= 4 ==> w > 400;\nloop invariant i237: x < 4 ==> y == 0;\nloop invariant i238: x < 4 ==> z == 0;\nloop invariant i239: x < 4 ==> w == 0;\nloop invariant i240: 0 <= x <= 100000;\nloop invariant i241: 100*y >= 10*w;\nloop invariant i242: y > 2;\n*/\nwhile ( __BLAST_NONDET ){\n    if ( __BLAST_NONDET ) {\n      x++; y = y+100;\n    } else if  ( __BLAST_NONDET ) {\n      if( x >= 4)\n\t{ x=x+1; y=y+1;}\n    } else if  ( y >10*w)\n      if (z>=100*x )\n      y = -y;\n    w=w+1; \n    z=z+10;\n  }\n  if ( x >=4 )\n    {;\n//@ assert(y>2);\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/popl.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/05.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/07.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/37.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/39.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv_simp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/xy10.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/const_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe3.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe4.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbr.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbrprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bk-nat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bkley.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/efm.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/ex1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnatprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifo.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/seesaw.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/ken-imp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/rajamani_1.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/pldi082_unbounded.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_unsafe1.c"
        ],
        "skipped": [],
        "total": 166,
        "success_count": 140,
        "failure_count": 26,
        "success_rate": 0.8433734939759037
    }
}