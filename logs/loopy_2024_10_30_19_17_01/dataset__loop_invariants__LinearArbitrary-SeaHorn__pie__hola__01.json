{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n while(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= y;\nloop invariant x <= 2 * y;\nloop invariant y <= 2 * x;\nloop invariant x <= 2 * y + 1;\nloop invariant y <= 2 * x + 1;\nloop invariant x <= 4 * y + 1;\nloop invariant y <= 4 * x + 1;\nloop invariant x <= 8 * y + 1;\nloop invariant y <= 8 * x + 1;\nloop invariant x <= 16 * y + 1;\nloop invariant y <= 16 * x + 1;\nloop invariant x <= 32 * y + 1;\nloop invariant y <= 32 * x + 1;\nloop invariant x <= 64 * y + 1;\nloop invariant y <= 64 * x + 1;\nloop invariant x <= 128 * y + 1;\nloop invariant y <= 128 * x + 1;\nloop invariant x <= 256 * y + 1;\nloop invariant y <= 256 * x + 1;\nloop invariant x <= 512 * y + 1;\nloop invariant y <= 512 * x + 1;\nloop invariant x <= 1024 * y + 1;\nloop invariant y <= 1024 * x + 1;\nloop invariant x <= 2048 * y + 1;\nloop invariant y <= 2048 * x + 1;\nloop invariant x <= 4096 * y + 1;\nloop invariant y <= 4096 * x + 1;\nloop invariant x <= 8192 * y + 1;\nloop invariant y <= 8192 * x + 1;\nloop invariant x <= 16384 * y + 1;\nloop invariant y <= 16384 * x + 1;\nloop invariant x <= 32768 * y + 1;\nloop invariant y <= 32768 * x + 1;\nloop invariant x <= 65536 * y + 1;\nloop invariant y <= 65536 * x + 1;\nloop invariant x <= 131072 * y + 1;\nloop invariant y <= 131072 * x + 1;\nloop invariant x <= 262144 * y + 1;\nloop invariant y <= 262144 * x + 1;\nloop invariant x <= 524288 * y + 1;\nloop invariant y <= 524288 * x + 1;\nloop invariant x <= 1048576 * y + 1;\nloop invariant y <= 1048576 * x + 1;\nloop invariant x <= 2097152 * y + 1;\nloop invariant y <= 2097152 * x + 1;\nloop invariant x <= 4194304 * y + 1;\nloop invariant y <= 4194304 * x + 1;\nloop invariant x <= 8388608 * y + 1;\nloop invariant y <= 8388608 * x + 1;\nloop invariant x <= 16777216 * y + 1;\nloop invariant y <= 16777216 * x + 1;\nloop invariant x <= 33554432 * y + 1;\nloop invariant y <= 33554432 * x + 1;\nloop invariant x <= 67108864 * y + 1;\nloop invariant y <= 67108864 * x + 1;\nloop invariant x <= 134217728 * y + 1;\nloop invariant y <= 134217728 * x + 1;\nloop invariant x <= 268435456 * y + 1;\nloop invariant y <= 268435456 * x + 1;\nloop invariant x <= 536870912 * y + 1;\nloop invariant y <= 536870912 * x + 1;\nloop invariant x <= 1073741824 * y + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 1;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x >= y;\n*/\n```",
            "```\n/*@\nloop invariant t1 == x;\nloop invariant t2 == y;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= y;\n*/\n```",
            "```\n/*@\nloop invariant y >= 1;\nloop invariant x >= y;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= y ==> y <= x;\nloop invariant x >= y ==> x >= 1;\nloop invariant y >= 1 ==> y >= 1;\nloop invariant y >= 1 ==> x >= y;\nloop invariant y >= 1 ==> x >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1;\nloop invariant x >= y ==> y <= x ==> x >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> x >= y;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> x >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y;\nloop invariant x >= y;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x;\nloop invariant x >= y;\nloop invariant y >= 1;\nloop invariant x >= y * y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant x >= y;\nloop invariant y >= 1;\nloop invariant unknown1() ==> (x >= y);\nloop invariant unknown1() ==> (y >= 1);\nloop invariant unknown1() ==> (x >= 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 2;\nloop invariant x = y;\nloop invariant x = 2 * y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant 0 <= t1;\nloop invariant 0 <= t2;\nloop invariant t1 <= x;\nloop invariant t2 <= y;\nloop invariant t1 == x - t2;\nloop invariant t2 == y - t1;\nloop invariant t1 == t2;\nloop invariant x == t1 + t2;\nloop invariant y == t1 + t2;\nloop invariant t1 == 0;\nloop invariant t2 == 0;\nloop invariant x == 1;\nloop invariant y == 1;\nloop invariant unknown1() ==> x >= y;\nloop invariant unknown1() ==> t1 >= t2;\nloop invariant unknown1() ==> t1 == 0;\nloop invariant unknown1() ==> t2 == 0;\nloop invariant unknown1() ==> x == 1;\nloop invariant unknown1() ==> y == 1;\nloop invariant unknown1() ==> unknown1() ==> x >= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 2;\nloop invariant x >= y;\nloop invariant x >= (y*y)/2;\nloop invariant x >= (3*y)/2;\nloop invariant x >= y + (y*y)/2;\nloop invariant x >= y + (y*y)/2 + (y*y*y)/6;\nloop invariant x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24;\nloop invariant x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120;\nloop invariant x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120 + (y*y*y*y*y*y)/720;\nloop invariant x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120 + (y*y*y*y*y*y)/720 + (y*y*y*y*y*y*y)/5040;\nloop invariant x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120 + (y*y*y*y*y*y)/720 + (y*y*y*y*y*y*y)/5040 + (y*y*y*y*y*y*y*y)/40320;\nloop invariant x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120 + (y*y*y*y*y*y)/720 + (y*y*y*y*y*y*y)/5040 + (y*y*y*y*y*y*y*y)/40320 + (y*y*y*y*y*y*y*y*y)/362880;\nloop invariant x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120 + (y*y*y*y*y*y)/720 + (y*y*y*y*y*y*y)/5040 + (y*y*y*y*y*y*y*y)/40320 + (y*y*y*y*y*y*y*y*y)/362880 + (y*y*y*y*y*y*y*y*y*y)/3628800;\nloop invariant x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120 + (y*y*y*y*y*y)/720 + (y*y*y*y*y*y*y)/5040 + (y*y*y*y*y*y*y*y)/40320 + (y*y*y*y*y*y*y*y*y)/362880 + (y*y*y*y*y*y*y*y*y*y)/3628800 + (y*y*y*y*y*y*y*y*y*y*y)/39916800;\nloop invariant x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120 + (y*y*y*y*y*y)/720 + (y*y*y*y*y*y*y)/5040 + (y*y*y*y*y*y*y*y)/40320 + (y*y*y*y*y*y*y*y*y)/362880 + (y*y*y*y*y*y*y*y*y*y)/3628800 + (y*y*y*y*y*y*y*y*y*y*y)/39916800 + (y*y*y*y*y*y*y*y*y*y*y*y)/479001600;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant y >= 1;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= y;\nloop invariant x <= 2 * y;\nloop invariant y <= 2 * x;\nloop invariant x <= 2 * y + 1;\nloop invariant y <= 2 * x + 1;\nloop invariant x <= 4 * y + 1;\nloop invariant y <= 4 * x + 1;\nloop invariant x <= 8 * y + 1;\nloop invariant y <= 8 * x + 1;\nloop invariant x <= 16 * y + 1;\nloop invariant y <= 16 * x + 1;\nloop invariant x <= 32 * y + 1;\nloop invariant y <= 32 * x + 1;\nloop invariant x <= 64 * y + 1;\nloop invariant y <= 64 * x + 1;\nloop invariant x <= 128 * y + 1;\nloop invariant y <= 128 * x + 1;\nloop invariant x <= 256 * y + 1;\nloop invariant y <= 256 * x + 1;\nloop invariant x <= 512 * y + 1;\nloop invariant y <= 512 * x + 1;\nloop invariant x <= 1024 * y + 1;\nloop invariant y <= 1024 * x + 1;\nloop invariant x <= 2048 * y + 1;\nloop invariant y <= 2048 * x + 1;\nloop invariant x <= 4096 * y + 1;\nloop invariant y <= 4096 * x + 1;\nloop invariant x <= 8192 * y + 1;\nloop invariant y <= 8192 * x + 1;\nloop invariant x <= 16384 * y + 1;\nloop invariant y <= 16384 * x + 1;\nloop invariant x <= 32768 * y + 1;\nloop invariant y <= 32768 * x + 1;\nloop invariant x <= 65536 * y + 1;\nloop invariant y <= 65536 * x + 1;\nloop invariant x <= 131072 * y + 1;\nloop invariant y <= 131072 * x + 1;\nloop invariant x <= 262144 * y + 1;\nloop invariant y <= 262144 * x + 1;\nloop invariant x <= 524288 * y + 1;\nloop invariant y <= 524288 * x + 1;\nloop invariant x <= 1048576 * y + 1;\nloop invariant y <= 1048576 * x + 1;\nloop invariant x <= 2097152 * y + 1;\nloop invariant y <= 2097152 * x + 1;\nloop invariant x <= 4194304 * y + 1;\nloop invariant y <= 4194304 * x + 1;\nloop invariant x <= 8388608 * y + 1;\nloop invariant y <= 8388608 * x + 1;\nloop invariant x <= 16777216 * y + 1;\nloop invariant y <= 16777216 * x + 1;\nloop invariant x <= 33554432 * y + 1;\nloop invariant y <= 33554432 * x + 1;\nloop invariant x <= 67108864 * y + 1;\nloop invariant y <= 67108864 * x + 1;\nloop invariant x <= 134217728 * y + 1;\nloop invariant y <= 134217728 * x + 1;\nloop invariant x <= 268435456 * y + 1;\nloop invariant y <= 268435456 * x + 1;\nloop invariant x <= 536870912 * y + 1;\nloop invariant y <= 536870912 * x + 1;\nloop invariant x <= 1073741824 * y + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\nloop invariant i1: x >= 1;\nloop invariant i2: y >= 1;\nloop invariant i3: x >= y;\nloop invariant i4: x <= 2 * y;\nloop invariant i5: y <= 2 * x;\nloop invariant i6: x <= 2 * y + 1;\nloop invariant i7: y <= 2 * x + 1;\nloop invariant i8: x <= 4 * y + 1;\nloop invariant i9: y <= 4 * x + 1;\nloop invariant i10: x <= 8 * y + 1;\nloop invariant i11: y <= 8 * x + 1;\nloop invariant i12: x <= 16 * y + 1;\nloop invariant i13: y <= 16 * x + 1;\nloop invariant i14: x <= 32 * y + 1;\nloop invariant i15: y <= 32 * x + 1;\nloop invariant i16: x <= 64 * y + 1;\nloop invariant i17: y <= 64 * x + 1;\nloop invariant i18: x <= 128 * y + 1;\nloop invariant i19: y <= 128 * x + 1;\nloop invariant i20: x <= 256 * y + 1;\nloop invariant i21: y <= 256 * x + 1;\nloop invariant i22: x <= 512 * y + 1;\nloop invariant i23: y <= 512 * x + 1;\nloop invariant i24: x <= 1024 * y + 1;\nloop invariant i25: y <= 1024 * x + 1;\nloop invariant i26: x <= 2048 * y + 1;\nloop invariant i27: y <= 2048 * x + 1;\nloop invariant i28: x <= 4096 * y + 1;\nloop invariant i29: y <= 4096 * x + 1;\nloop invariant i30: x <= 8192 * y + 1;\nloop invariant i31: y <= 8192 * x + 1;\nloop invariant i32: x <= 16384 * y + 1;\nloop invariant i33: y <= 16384 * x + 1;\nloop invariant i34: x <= 32768 * y + 1;\nloop invariant i35: y <= 32768 * x + 1;\nloop invariant i36: x <= 65536 * y + 1;\nloop invariant i37: y <= 65536 * x + 1;\nloop invariant i38: x <= 131072 * y + 1;\nloop invariant i39: y <= 131072 * x + 1;\nloop invariant i40: x <= 262144 * y + 1;\nloop invariant i41: y <= 262144 * x + 1;\nloop invariant i42: x <= 524288 * y + 1;\nloop invariant i43: y <= 524288 * x + 1;\nloop invariant i44: x <= 1048576 * y + 1;\nloop invariant i45: y <= 1048576 * x + 1;\nloop invariant i46: x <= 2097152 * y + 1;\nloop invariant i47: y <= 2097152 * x + 1;\nloop invariant i48: x <= 4194304 * y + 1;\nloop invariant i49: y <= 4194304 * x + 1;\nloop invariant i50: x <= 8388608 * y + 1;\nloop invariant i51: y <= 8388608 * x + 1;\nloop invariant i52: x <= 16777216 * y + 1;\nloop invariant i53: y <= 16777216 * x + 1;\nloop invariant i54: x <= 33554432 * y + 1;\nloop invariant i55: y <= 33554432 * x + 1;\nloop invariant i56: x <= 67108864 * y + 1;\nloop invariant i57: y <= 67108864 * x + 1;\nloop invariant i58: x <= 134217728 * y + 1;\nloop invariant i59: y <= 134217728 * x + 1;\nloop invariant i60: x <= 268435456 * y + 1;\nloop invariant i61: y <= 268435456 * x + 1;\nloop invariant i62: x <= 536870912 * y + 1;\nloop invariant i63: y <= 536870912 * x + 1;\nloop invariant i64: x <= 1073741824 * y + 1;\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 1;\nloop invariant x >= y;\nloop invariant x >= y;\nloop invariant x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\n\nloop invariant i2: x >= y;\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant t1 == x;\nloop invariant t2 == y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\n\n\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\n\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\nloop invariant i1: x >= 1;\nloop invariant i2: y >= 1;\nloop invariant i3: x >= y;\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant y >= 1;\nloop invariant x >= y;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= y ==> y <= x;\nloop invariant x >= y ==> x >= 1;\nloop invariant y >= 1 ==> y >= 1;\nloop invariant y >= 1 ==> x >= y;\nloop invariant y >= 1 ==> x >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1;\nloop invariant x >= y ==> y <= x ==> x >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> x >= y;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> x >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\nloop invariant i1: y >= 1;\nloop invariant i2: x >= y;\nloop invariant i3: x >= 1;\nloop invariant i4: x >= y ==> y <= x;\nloop invariant i5: x >= y ==> x >= 1;\nloop invariant i6: y >= 1 ==> y >= 1;\nloop invariant i7: y >= 1 ==> x >= y;\nloop invariant i8: y >= 1 ==> x >= 1;\nloop invariant i9: x >= y ==> y <= x ==> y >= 1;\nloop invariant i10: x >= y ==> y <= x ==> x >= 1;\nloop invariant i11: y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i12: y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i13: y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i14: x >= y ==> y <= x ==> y >= 1 ==> y >= 1;\nloop invariant i15: x >= y ==> y <= x ==> y >= 1 ==> x >= y;\nloop invariant i16: x >= y ==> y <= x ==> y >= 1 ==> x >= 1;\nloop invariant i17: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i18: y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i19: y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i20: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i21: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i22: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i23: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i24: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i25: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i26: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i27: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i28: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i29: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i30: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i31: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i32: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i33: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i34: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i35: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i36: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i37: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i38: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i39: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i40: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i41: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y;\nloop invariant x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\nloop invariant i1: 0 <= y;\nloop invariant i2: x >= y;\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= x;\nloop invariant x >= y;\nloop invariant y >= 1;\nloop invariant x >= y * y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\nloop invariant i1: 1 <= x;\nloop invariant i2: x >= y;\nloop invariant i3: y >= 1;\n\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\n\n\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant x >= y;\nloop invariant y >= 1;\nloop invariant unknown1() ==> (x >= y);\nloop invariant unknown1() ==> (y >= 1);\nloop invariant unknown1() ==> (x >= 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\nloop invariant i1: x >= y;\nloop invariant i2: y >= 1;\n\n\n\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 2;\nloop invariant x = y;\nloop invariant x = 2 * y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\n\n\n\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 21,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant 0 <= t1;\nloop invariant 0 <= t2;\nloop invariant t1 <= x;\nloop invariant t2 <= y;\nloop invariant t1 == x - t2;\nloop invariant t2 == y - t1;\nloop invariant t1 == t2;\nloop invariant x == t1 + t2;\nloop invariant y == t1 + t2;\nloop invariant t1 == 0;\nloop invariant t2 == 0;\nloop invariant x == 1;\nloop invariant y == 1;\nloop invariant unknown1() ==> x >= y;\nloop invariant unknown1() ==> t1 >= t2;\nloop invariant unknown1() ==> t1 == 0;\nloop invariant unknown1() ==> t2 == 0;\nloop invariant unknown1() ==> x == 1;\nloop invariant unknown1() ==> y == 1;\nloop invariant unknown1() ==> unknown1() ==> x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\nloop invariant i1: 0 <= x;\nloop invariant i2: 0 <= y;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 2;\nloop invariant x >= y;\nloop invariant x >= (y*y)/2;\nloop invariant x >= (3*y)/2;\nloop invariant x >= y + (y*y)/2;\nloop invariant x >= y + (y*y)/2 + (y*y*y)/6;\nloop invariant x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24;\nloop invariant x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120;\nloop invariant x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120 + (y*y*y*y*y*y)/720;\nloop invariant x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120 + (y*y*y*y*y*y)/720 + (y*y*y*y*y*y*y)/5040;\nloop invariant x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120 + (y*y*y*y*y*y)/720 + (y*y*y*y*y*y*y)/5040 + (y*y*y*y*y*y*y*y)/40320;\nloop invariant x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120 + (y*y*y*y*y*y)/720 + (y*y*y*y*y*y*y)/5040 + (y*y*y*y*y*y*y*y)/40320 + (y*y*y*y*y*y*y*y*y)/362880;\nloop invariant x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120 + (y*y*y*y*y*y)/720 + (y*y*y*y*y*y*y)/5040 + (y*y*y*y*y*y*y*y)/40320 + (y*y*y*y*y*y*y*y*y)/362880 + (y*y*y*y*y*y*y*y*y*y)/3628800;\nloop invariant x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120 + (y*y*y*y*y*y)/720 + (y*y*y*y*y*y*y)/5040 + (y*y*y*y*y*y*y*y)/40320 + (y*y*y*y*y*y*y*y*y)/362880 + (y*y*y*y*y*y*y*y*y*y)/3628800 + (y*y*y*y*y*y*y*y*y*y*y)/39916800;\nloop invariant x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120 + (y*y*y*y*y*y)/720 + (y*y*y*y*y*y*y)/5040 + (y*y*y*y*y*y*y*y)/40320 + (y*y*y*y*y*y*y*y*y)/362880 + (y*y*y*y*y*y*y*y*y*y)/3628800 + (y*y*y*y*y*y*y*y*y*y*y)/39916800 + (y*y*y*y*y*y*y*y*y*y*y*y)/479001600;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\n\nloop invariant i2: x >= y;\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant y >= 1;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\n\n\nloop invariant i3: y >= 1;\nloop invariant i4: x >= y;\nloop invariant i5: x >= 0;\nloop invariant i6: x >= 1;\nloop invariant i7: y >= 0;\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\n\n\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 123: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\nloop invariant i1: x >= 1;\nloop invariant i2: y >= 1;\nloop invariant i3: x >= y;\nloop invariant i4: x <= 2 * y;\nloop invariant i5: y <= 2 * x;\nloop invariant i6: x <= 2 * y + 1;\nloop invariant i7: y <= 2 * x + 1;\nloop invariant i8: x <= 4 * y + 1;\nloop invariant i9: y <= 4 * x + 1;\nloop invariant i10: x <= 8 * y + 1;\nloop invariant i11: y <= 8 * x + 1;\nloop invariant i12: x <= 16 * y + 1;\nloop invariant i13: y <= 16 * x + 1;\nloop invariant i14: x <= 32 * y + 1;\nloop invariant i15: y <= 32 * x + 1;\nloop invariant i16: x <= 64 * y + 1;\nloop invariant i17: y <= 64 * x + 1;\nloop invariant i18: x <= 128 * y + 1;\nloop invariant i19: y <= 128 * x + 1;\nloop invariant i20: x <= 256 * y + 1;\nloop invariant i21: y <= 256 * x + 1;\nloop invariant i22: x <= 512 * y + 1;\nloop invariant i23: y <= 512 * x + 1;\nloop invariant i24: x <= 1024 * y + 1;\nloop invariant i25: y <= 1024 * x + 1;\nloop invariant i26: x <= 2048 * y + 1;\nloop invariant i27: y <= 2048 * x + 1;\nloop invariant i28: x <= 4096 * y + 1;\nloop invariant i29: y <= 4096 * x + 1;\nloop invariant i30: x <= 8192 * y + 1;\nloop invariant i31: y <= 8192 * x + 1;\nloop invariant i32: x <= 16384 * y + 1;\nloop invariant i33: y <= 16384 * x + 1;\nloop invariant i34: x <= 32768 * y + 1;\nloop invariant i35: y <= 32768 * x + 1;\nloop invariant i36: x <= 65536 * y + 1;\nloop invariant i37: y <= 65536 * x + 1;\nloop invariant i38: x <= 131072 * y + 1;\nloop invariant i39: y <= 131072 * x + 1;\nloop invariant i40: x <= 262144 * y + 1;\nloop invariant i41: y <= 262144 * x + 1;\nloop invariant i42: x <= 524288 * y + 1;\nloop invariant i43: y <= 524288 * x + 1;\nloop invariant i44: x <= 1048576 * y + 1;\nloop invariant i45: y <= 1048576 * x + 1;\nloop invariant i46: x <= 2097152 * y + 1;\nloop invariant i47: y <= 2097152 * x + 1;\nloop invariant i48: x <= 4194304 * y + 1;\nloop invariant i49: y <= 4194304 * x + 1;\nloop invariant i50: x <= 8388608 * y + 1;\nloop invariant i51: y <= 8388608 * x + 1;\nloop invariant i52: x <= 16777216 * y + 1;\nloop invariant i53: y <= 16777216 * x + 1;\nloop invariant i54: x <= 33554432 * y + 1;\nloop invariant i55: y <= 33554432 * x + 1;\nloop invariant i56: x <= 67108864 * y + 1;\nloop invariant i57: y <= 67108864 * x + 1;\nloop invariant i58: x <= 134217728 * y + 1;\nloop invariant i59: y <= 134217728 * x + 1;\nloop invariant i60: x <= 268435456 * y + 1;\nloop invariant i61: y <= 268435456 * x + 1;\nloop invariant i62: x <= 536870912 * y + 1;\nloop invariant i63: y <= 536870912 * x + 1;\nloop invariant i64: x <= 1073741824 * y + 1;\nloop invariant i65: 0 <= y <= 1;\nloop invariant i66: t1 == x;\nloop invariant i67: t2 == y;\nloop invariant i68: x >= y ==> y <= x;\nloop invariant i69: x >= y ==> x >= 1;\nloop invariant i70: y >= 1 ==> y >= 1;\nloop invariant i71: y >= 1 ==> x >= y;\nloop invariant i72: y >= 1 ==> x >= 1;\nloop invariant i73: x >= y ==> y <= x ==> y >= 1;\nloop invariant i74: x >= y ==> y <= x ==> x >= 1;\nloop invariant i75: y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i76: y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i77: y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i78: x >= y ==> y <= x ==> y >= 1 ==> y >= 1;\nloop invariant i79: x >= y ==> y <= x ==> y >= 1 ==> x >= y;\nloop invariant i80: x >= y ==> y <= x ==> y >= 1 ==> x >= 1;\nloop invariant i81: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i82: y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i83: y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i84: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i85: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i86: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i87: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i88: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i89: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i90: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i91: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i92: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i93: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i94: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i95: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i96: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i97: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i98: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i99: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i100: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i101: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i102: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i103: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i104: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i105: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i106: 0 <= y;\nloop invariant i107: 1 <= x;\nloop invariant i108: x >= y * y;\nloop invariant i109: 0 <= y <= 100000;\nloop invariant i110: x >= (1 + (y - 1) * y / 2);\nloop invariant i111: unknown1() ==> (x >= y);\nloop invariant i112: unknown1() ==> (y >= 1);\nloop invariant i113: unknown1() ==> (x >= 1);\nloop invariant i114: 0 <= y <= 2;\nloop invariant i115: x = y;\nloop invariant i116: x = 2 * y;\nloop invariant i117: 0 <= x;\nloop invariant i118: 0 <= t1;\nloop invariant i119: 0 <= t2;\nloop invariant i120: t1 <= x;\nloop invariant i121: t2 <= y;\nloop invariant i122: t1 == x - t2;\nloop invariant i123: t2 == y - t1;\nloop invariant i124: t1 == t2;\nloop invariant i125: x == t1 + t2;\nloop invariant i126: y == t1 + t2;\nloop invariant i127: t1 == 0;\nloop invariant i128: t2 == 0;\nloop invariant i129: x == 1;\nloop invariant i130: y == 1;\nloop invariant i131: unknown1() ==> x >= y;\nloop invariant i132: unknown1() ==> t1 >= t2;\nloop invariant i133: unknown1() ==> t1 == 0;\nloop invariant i134: unknown1() ==> t2 == 0;\nloop invariant i135: unknown1() ==> x == 1;\nloop invariant i136: unknown1() ==> y == 1;\nloop invariant i137: unknown1() ==> unknown1() ==> x >= y;\nloop invariant i138: x >= (y*y)/2;\nloop invariant i139: x >= (3*y)/2;\nloop invariant i140: x >= y + (y*y)/2;\nloop invariant i141: x >= y + (y*y)/2 + (y*y*y)/6;\nloop invariant i142: x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24;\nloop invariant i143: x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120;\nloop invariant i144: x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120 + (y*y*y*y*y*y)/720;\nloop invariant i145: x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120 + (y*y*y*y*y*y)/720 + (y*y*y*y*y*y*y)/5040;\nloop invariant i146: x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120 + (y*y*y*y*y*y)/720 + (y*y*y*y*y*y*y)/5040 + (y*y*y*y*y*y*y*y)/40320;\nloop invariant i147: x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120 + (y*y*y*y*y*y)/720 + (y*y*y*y*y*y*y)/5040 + (y*y*y*y*y*y*y*y)/40320 + (y*y*y*y*y*y*y*y*y)/362880;\nloop invariant i148: x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120 + (y*y*y*y*y*y)/720 + (y*y*y*y*y*y*y)/5040 + (y*y*y*y*y*y*y*y)/40320 + (y*y*y*y*y*y*y*y*y)/362880 + (y*y*y*y*y*y*y*y*y*y)/3628800;\nloop invariant i149: x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120 + (y*y*y*y*y*y)/720 + (y*y*y*y*y*y*y)/5040 + (y*y*y*y*y*y*y*y)/40320 + (y*y*y*y*y*y*y*y*y)/362880 + (y*y*y*y*y*y*y*y*y*y)/3628800 + (y*y*y*y*y*y*y*y*y*y*y)/39916800;\nloop invariant i150: x >= y + (y*y)/2 + (y*y*y)/6 + (y*y*y*y)/24 + (y*y*y*y*y)/120 + (y*y*y*y*y*y)/720 + (y*y*y*y*y*y*y)/5040 + (y*y*y*y*y*y*y*y)/40320 + (y*y*y*y*y*y*y*y*y)/362880 + (y*y*y*y*y*y*y*y*y*y)/3628800 + (y*y*y*y*y*y*y*y*y*y*y)/39916800 + (y*y*y*y*y*y*y*y*y*y*y*y)/479001600;\nloop invariant i151: x >= 0;\nloop invariant i152: y >= 0;\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
        "combined_annotation_num_solver_calls": 43,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n int x=1; int y=1;\n /*@\nloop invariant i1: x >= 1;\nloop invariant i2: y >= 1;\nloop invariant i3: x >= y;\nloop invariant i4: x <= 2 * y;\nloop invariant i5: y <= 2 * x;\nloop invariant i6: x <= 2 * y + 1;\nloop invariant i7: y <= 2 * x + 1;\nloop invariant i8: x <= 4 * y + 1;\nloop invariant i9: y <= 4 * x + 1;\nloop invariant i10: x <= 8 * y + 1;\nloop invariant i11: y <= 8 * x + 1;\nloop invariant i12: x <= 16 * y + 1;\nloop invariant i13: y <= 16 * x + 1;\nloop invariant i14: x <= 32 * y + 1;\nloop invariant i15: y <= 32 * x + 1;\nloop invariant i16: x <= 64 * y + 1;\nloop invariant i17: y <= 64 * x + 1;\nloop invariant i18: x <= 128 * y + 1;\nloop invariant i19: y <= 128 * x + 1;\nloop invariant i20: x <= 256 * y + 1;\nloop invariant i21: y <= 256 * x + 1;\nloop invariant i22: x <= 512 * y + 1;\nloop invariant i23: y <= 512 * x + 1;\nloop invariant i24: x <= 1024 * y + 1;\nloop invariant i25: y <= 1024 * x + 1;\nloop invariant i26: x <= 2048 * y + 1;\nloop invariant i27: y <= 2048 * x + 1;\nloop invariant i28: x <= 4096 * y + 1;\nloop invariant i29: y <= 4096 * x + 1;\nloop invariant i30: x <= 8192 * y + 1;\nloop invariant i31: y <= 8192 * x + 1;\nloop invariant i32: x <= 16384 * y + 1;\nloop invariant i33: y <= 16384 * x + 1;\nloop invariant i34: x <= 32768 * y + 1;\nloop invariant i35: y <= 32768 * x + 1;\nloop invariant i36: x <= 65536 * y + 1;\nloop invariant i37: y <= 65536 * x + 1;\nloop invariant i38: x <= 131072 * y + 1;\nloop invariant i39: y <= 131072 * x + 1;\nloop invariant i40: x <= 262144 * y + 1;\nloop invariant i41: y <= 262144 * x + 1;\nloop invariant i42: x <= 524288 * y + 1;\nloop invariant i43: y <= 524288 * x + 1;\nloop invariant i44: x <= 1048576 * y + 1;\nloop invariant i45: y <= 1048576 * x + 1;\nloop invariant i46: x <= 2097152 * y + 1;\nloop invariant i47: y <= 2097152 * x + 1;\nloop invariant i48: x <= 4194304 * y + 1;\nloop invariant i49: y <= 4194304 * x + 1;\nloop invariant i50: x <= 8388608 * y + 1;\nloop invariant i51: y <= 8388608 * x + 1;\nloop invariant i52: x <= 16777216 * y + 1;\nloop invariant i53: y <= 16777216 * x + 1;\nloop invariant i54: x <= 33554432 * y + 1;\nloop invariant i55: y <= 33554432 * x + 1;\nloop invariant i56: x <= 67108864 * y + 1;\nloop invariant i57: y <= 67108864 * x + 1;\nloop invariant i58: x <= 134217728 * y + 1;\nloop invariant i59: y <= 134217728 * x + 1;\nloop invariant i60: x <= 268435456 * y + 1;\nloop invariant i61: y <= 268435456 * x + 1;\nloop invariant i62: x <= 536870912 * y + 1;\nloop invariant i63: y <= 536870912 * x + 1;\nloop invariant i64: x <= 1073741824 * y + 1;\n\n\n\nloop invariant i68: x >= y ==> y <= x;\nloop invariant i69: x >= y ==> x >= 1;\nloop invariant i70: y >= 1 ==> y >= 1;\nloop invariant i71: y >= 1 ==> x >= y;\nloop invariant i72: y >= 1 ==> x >= 1;\nloop invariant i73: x >= y ==> y <= x ==> y >= 1;\nloop invariant i74: x >= y ==> y <= x ==> x >= 1;\nloop invariant i75: y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i76: y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i77: y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i78: x >= y ==> y <= x ==> y >= 1 ==> y >= 1;\nloop invariant i79: x >= y ==> y <= x ==> y >= 1 ==> x >= y;\nloop invariant i80: x >= y ==> y <= x ==> y >= 1 ==> x >= 1;\nloop invariant i81: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i82: y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i83: y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i84: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i85: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i86: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i87: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i88: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i89: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i90: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i91: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i92: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i93: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i94: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i95: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i96: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i97: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i98: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i99: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i100: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i101: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i102: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i103: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= y;\nloop invariant i104: x >= y ==> y <= x ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> x >= 1;\nloop invariant i105: y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1 ==> y >= 1;\nloop invariant i106: 0 <= y;\nloop invariant i107: 1 <= x;\n\n\n\n\n\n\n\n\n\nloop invariant i117: 0 <= x;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i151: x >= 0;\nloop invariant i152: y >= 0;\n*/\nwhile(unknown1()) {\n   int t1 = x;\n   int t2 = y;\n   x = t1+ t2;\n   y = t1 + t2;\n }\n {;\n//@ assert(y>=1);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c"
        ],
        "skipped": [],
        "total": 101,
        "success_count": 86,
        "failure_count": 15,
        "success_rate": 0.8514851485148515
    }
}