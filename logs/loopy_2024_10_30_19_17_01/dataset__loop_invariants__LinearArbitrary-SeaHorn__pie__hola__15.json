{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1();\nint unknown2();\nint unknown3();\nint unknown4();\n\nint main() {\n\n  int n;\n  int i, k, j;\n\n  n = unknown1();\n  i = unknown1();\n  k = unknown1();\n  j = unknown1();\n\n  if (n > 0 && k > n) {\n  j = 0;\n  while( j < n ) {\n    j++;\n    k--;\n  } \n  {;\n//@ assert(k>=0);\n}\n\n  }\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k >= n - j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= n;\nloop invariant 0 <= j <= n;\nloop invariant k == (n - j);\nloop invariant (n > 0 && k > n) ==> (j == 0);\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\n*/\n```",
            "```\n/*@\nloop invariant j = i + n;\nloop invariant k = k - n;\nloop invariant i <= j <= n;\nloop invariant i <= k < 0;\nloop invariant k + j = i + n;\n*/\n```",
            "```\n/*@\nloop invariant ( j <= n ) ==> ( k >= 0 );\nloop invariant ( j <= n ) ==> ( k == (k + (n - j)) );\nloop invariant ( j <= n ) ==> ( k >= 0 ) ==> ( k == (k + (n - j)));\nloop invariant ( k >= 0 ) ==> ( k == (k + (n - j)));\nloop invariant ( k == (k + (n - j)) ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 );\nloop invariant ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( j <= n ) ==> ( k >= 0 ) ==> ( k == (k + (n - j)));\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k == (k + (n - j)));\nloop invariant ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k == (k + (n - j)));\nloop invariant ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant k >= n;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant k = j + n;\nloop invariant n > 0;\nloop invariant k > n;\nloop invariant i = unknown1();\nloop invariant k = unknown1();\nloop invariant j = unknown1();\nloop invariant unknown1() = unknown1();\nloop invariant unknown3() = unknown3();\nloop invariant unknown4() = unknown4();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\n*/\n```",
            "```\n/*@\nloop invariant ( j >= 0 ) ==> ( j < n );\nloop invariant ( j >= 0 ) ==> ( k >= n );\nloop invariant ( j >= 0 ) ==> ( j < n ) ==> ( k <= n - j );\nloop invariant ( j >= 0 ) ==> ( j < n ) ==> ( k >= 0 );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant k > j;\nloop invariant k >= 0;\nloop invariant k == k' ==> j == j' + 1;\nloop invariant k == k' + 1 ==> j == j' - 1;\nloop invariant j == j' ==> k == k' + 1;\nloop invariant j == j' + 1 ==> k == k';\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j <= n;\nloop invariant k >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n <= 100000;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= j <= n;\nloop invariant i + k == n;\nloop invariant j >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j >= 0;\nloop invariant j < n ==> k >= j;\nloop invariant j < n ==> k >= n;\nloop invariant j >= n ==> k >= j;\nloop invariant j >= n ==> k >= n;\nloop invariant j >= n ==> j <= n;\nloop invariant j >= n ==> k >= 0;\nloop invariant j >= n ==> j >= 0;\nloop invariant j >= n ==> k >= j ==> k >= 0;\nloop invariant j >= n ==> k >= j ==> j >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0;\nloop invariant j >= n ==> k >= j ==> j >= n ==> j >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> j >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> j >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> j >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j;\n*/\n```",
            "```\n/*@\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= n - j;\nloop invariant k <= n;\nloop invariant k >= k - (j - k);\nloop invariant k >= 0 ==> k <= n;\nloop invariant j >= 0 ==> j <= n;\nloop invariant j >= 0 ==> k >= n - j;\nloop invariant j >= 0 ==> k <= n;\nloop invariant j >= 0 ==> k >= k - (j - k);\nloop invariant j >= 0 ==> k >= 0;\nloop invariant j >= 0 ==> k <= n;\nloop invariant j >= 0 ==> k >= k - (j - k);\nloop invariant j >= 0 ==> k >= 0;\nloop invariant j >= 0 ==> k <= n;\nloop invariant j >= 0 ==> k >= k - (j - k);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant k >= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant j <= n;\nloop invariant j >= 0;\nloop invariant k >= n - j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1();\nint unknown2();\nint unknown3();\nint unknown4();\n\nint main() {\n\n  int n;\n  int i, k, j;\n\n  n = unknown1();\n  i = unknown1();\n  k = unknown1();\n  j = unknown1();\n\n  if (n > 0 && k > n) {\n  j = 0;\n  /*@\nloop invariant i1: j <= n;\nloop invariant i2: j >= 0;\nloop invariant i3: k >= n - j;\n*/\nwhile( j < n ) {\n    j++;\n    k--;\n  } \n  {;\n//@ assert(k>=0);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= n;\nloop invariant 0 <= j <= n;\nloop invariant k == (n - j);\nloop invariant (n > 0 && k > n) ==> (j == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1();\nint unknown2();\nint unknown3();\nint unknown4();\n\nint main() {\n\n  int n;\n  int i, k, j;\n\n  n = unknown1();\n  i = unknown1();\n  k = unknown1();\n  j = unknown1();\n\n  if (n > 0 && k > n) {\n  j = 0;\n  /*@\n\nloop invariant i2: 0 <= j <= n;\n\n\n*/\nwhile( j < n ) {\n    j++;\n    k--;\n  } \n  {;\n//@ assert(k>=0);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1();\nint unknown2();\nint unknown3();\nint unknown4();\n\nint main() {\n\n  int n;\n  int i, k, j;\n\n  n = unknown1();\n  i = unknown1();\n  k = unknown1();\n  j = unknown1();\n\n  if (n > 0 && k > n) {\n  j = 0;\n  /*@\n\n\n\n*/\nwhile( j < n ) {\n    j++;\n    k--;\n  } \n  {;\n//@ assert(k>=0);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant j = i + n;\nloop invariant k = k - n;\nloop invariant i <= j <= n;\nloop invariant i <= k < 0;\nloop invariant k + j = i + n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1();\nint unknown2();\nint unknown3();\nint unknown4();\n\nint main() {\n\n  int n;\n  int i, k, j;\n\n  n = unknown1();\n  i = unknown1();\n  k = unknown1();\n  j = unknown1();\n\n  if (n > 0 && k > n) {\n  j = 0;\n  /*@\n\n\n\n\n\n*/\nwhile( j < n ) {\n    j++;\n    k--;\n  } \n  {;\n//@ assert(k>=0);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant ( j <= n ) ==> ( k >= 0 );\nloop invariant ( j <= n ) ==> ( k == (k + (n - j)) );\nloop invariant ( j <= n ) ==> ( k >= 0 ) ==> ( k == (k + (n - j)));\nloop invariant ( k >= 0 ) ==> ( k == (k + (n - j)));\nloop invariant ( k == (k + (n - j)) ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 );\nloop invariant ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( j <= n ) ==> ( k >= 0 ) ==> ( k == (k + (n - j)));\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k == (k + (n - j)));\nloop invariant ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k == (k + (n - j)));\nloop invariant ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1();\nint unknown2();\nint unknown3();\nint unknown4();\n\nint main() {\n\n  int n;\n  int i, k, j;\n\n  n = unknown1();\n  i = unknown1();\n  k = unknown1();\n  j = unknown1();\n\n  if (n > 0 && k > n) {\n  j = 0;\n  /*@\n\n\n\n\n\nloop invariant i6: ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 );\nloop invariant i7: ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i8: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\n\nloop invariant i10: ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i11: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i12: ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i13: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i14: ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i15: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i16: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i17: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i18: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i19: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i20: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\n*/\nwhile( j < n ) {\n    j++;\n    k--;\n  } \n  {;\n//@ assert(k>=0);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant k >= n;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\nloop invariant k >= n - (n - j);\nloop invariant k >= n + (n - j);\nloop invariant k >= 0;\nloop invariant k <= k + (n - j);\nloop invariant k >= n + j;\nloop invariant k >= n - j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1();\nint unknown2();\nint unknown3();\nint unknown4();\n\nint main() {\n\n  int n;\n  int i, k, j;\n\n  n = unknown1();\n  i = unknown1();\n  k = unknown1();\n  j = unknown1();\n\n  if (n > 0 && k > n) {\n  j = 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\n\nloop invariant i3: k <= k + (n - j);\n\nloop invariant i5: k >= n - j;\n\n\nloop invariant i8: k >= 0;\n*/\nwhile( j < n ) {\n    j++;\n    k--;\n  } \n  {;\n//@ assert(k>=0);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 10,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant k = j + n;\nloop invariant n > 0;\nloop invariant k > n;\nloop invariant i = unknown1();\nloop invariant k = unknown1();\nloop invariant j = unknown1();\nloop invariant unknown1() = unknown1();\nloop invariant unknown3() = unknown3();\nloop invariant unknown4() = unknown4();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\nloop invariant unknown2() = unknown2();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1();\nint unknown2();\nint unknown3();\nint unknown4();\n\nint main() {\n\n  int n;\n  int i, k, j;\n\n  n = unknown1();\n  i = unknown1();\n  k = unknown1();\n  j = unknown1();\n\n  if (n > 0 && k > n) {\n  j = 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\n\nloop invariant i3: n > 0;\n\n\n\n\n\n\n\n\n*/\nwhile( j < n ) {\n    j++;\n    k--;\n  } \n  {;\n//@ assert(k>=0);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant ( j >= 0 ) ==> ( j < n );\nloop invariant ( j >= 0 ) ==> ( k >= n );\nloop invariant ( j >= 0 ) ==> ( j < n ) ==> ( k <= n - j );\nloop invariant ( j >= 0 ) ==> ( j < n ) ==> ( k >= 0 );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1();\nint unknown2();\nint unknown3();\nint unknown4();\n\nint main() {\n\n  int n;\n  int i, k, j;\n\n  n = unknown1();\n  i = unknown1();\n  k = unknown1();\n  j = unknown1();\n\n  if (n > 0 && k > n) {\n  j = 0;\n  /*@\n\n\n\n\n*/\nwhile( j < n ) {\n    j++;\n    k--;\n  } \n  {;\n//@ assert(k>=0);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant k > j;\nloop invariant k >= 0;\nloop invariant k == k' ==> j == j' + 1;\nloop invariant k == k' + 1 ==> j == j' - 1;\nloop invariant j == j' ==> k == k' + 1;\nloop invariant j == j' + 1 ==> k == k';\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1();\nint unknown2();\nint unknown3();\nint unknown4();\n\nint main() {\n\n  int n;\n  int i, k, j;\n\n  n = unknown1();\n  i = unknown1();\n  k = unknown1();\n  j = unknown1();\n\n  if (n > 0 && k > n) {\n  j = 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\nloop invariant i2: k > j;\nloop invariant i3: k >= 0;\nloop invariant i4: k == k' ==> j == j' + 1;\nloop invariant i5: k == k' + 1 ==> j == j' - 1;\nloop invariant i6: j == j' ==> k == k' + 1;\nloop invariant i7: j == j' + 1 ==> k == k';\n*/\nwhile( j < n ) {\n    j++;\n    k--;\n  } \n  {;\n//@ assert(k>=0);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j <= n;\nloop invariant k >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1();\nint unknown2();\nint unknown3();\nint unknown4();\n\nint main() {\n\n  int n;\n  int i, k, j;\n\n  n = unknown1();\n  i = unknown1();\n  k = unknown1();\n  j = unknown1();\n\n  if (n > 0 && k > n) {\n  j = 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\n\nloop invariant i3: j <= n;\n\n*/\nwhile( j < n ) {\n    j++;\n    k--;\n  } \n  {;\n//@ assert(k>=0);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= n <= 100000;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= j <= n;\nloop invariant i + k == n;\nloop invariant j >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1();\nint unknown2();\nint unknown3();\nint unknown4();\n\nint main() {\n\n  int n;\n  int i, k, j;\n\n  n = unknown1();\n  i = unknown1();\n  k = unknown1();\n  j = unknown1();\n\n  if (n > 0 && k > n) {\n  j = 0;\n  /*@\n\n\n\nloop invariant i4: 0 <= j <= n;\n\nloop invariant i6: j >= 0;\n*/\nwhile( j < n ) {\n    j++;\n    k--;\n  } \n  {;\n//@ assert(k>=0);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j >= 0;\nloop invariant j < n ==> k >= j;\nloop invariant j < n ==> k >= n;\nloop invariant j >= n ==> k >= j;\nloop invariant j >= n ==> k >= n;\nloop invariant j >= n ==> j <= n;\nloop invariant j >= n ==> k >= 0;\nloop invariant j >= n ==> j >= 0;\nloop invariant j >= n ==> k >= j ==> k >= 0;\nloop invariant j >= n ==> k >= j ==> j >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0;\nloop invariant j >= n ==> k >= j ==> j >= n ==> j >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> j >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> j >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> j >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0;\nloop invariant j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1();\nint unknown2();\nint unknown3();\nint unknown4();\n\nint main() {\n\n  int n;\n  int i, k, j;\n\n  n = unknown1();\n  i = unknown1();\n  k = unknown1();\n  j = unknown1();\n\n  if (n > 0 && k > n) {\n  j = 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\n\nloop invariant i3: j <= n;\n\n\n\nloop invariant i7: j >= 0;\n\n\n\n\nloop invariant i12: j >= n ==> j <= n;\n\nloop invariant i14: j >= n ==> j >= 0;\nloop invariant i15: j >= n ==> k >= j ==> k >= 0;\nloop invariant i16: j >= n ==> k >= j ==> j >= 0;\nloop invariant i17: j >= n ==> k >= j ==> k >= n ==> k >= 0;\nloop invariant i18: j >= n ==> k >= j ==> j >= n ==> j >= 0;\nloop invariant i19: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j;\nloop invariant i20: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> j >= 0;\nloop invariant i21: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0;\nloop invariant i22: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0;\nloop invariant i23: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> j >= 0;\nloop invariant i24: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j;\nloop invariant i25: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> j >= 0;\nloop invariant i26: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0;\nloop invariant i27: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0;\nloop invariant i28: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j;\nloop invariant i29: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0;\nloop invariant i30: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0;\nloop invariant i31: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j;\nloop invariant i32: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0;\nloop invariant i33: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0;\nloop invariant i34: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j;\n*/\nwhile( j < n ) {\n    j++;\n    k--;\n  } \n  {;\n//@ assert(k>=0);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= n - j;\nloop invariant k <= n;\nloop invariant k >= k - (j - k);\nloop invariant k >= 0 ==> k <= n;\nloop invariant j >= 0 ==> j <= n;\nloop invariant j >= 0 ==> k >= n - j;\nloop invariant j >= 0 ==> k <= n;\nloop invariant j >= 0 ==> k >= k - (j - k);\nloop invariant j >= 0 ==> k >= 0;\nloop invariant j >= 0 ==> k <= n;\nloop invariant j >= 0 ==> k >= k - (j - k);\nloop invariant j >= 0 ==> k >= 0;\nloop invariant j >= 0 ==> k <= n;\nloop invariant j >= 0 ==> k >= k - (j - k);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1();\nint unknown2();\nint unknown3();\nint unknown4();\n\nint main() {\n\n  int n;\n  int i, k, j;\n\n  n = unknown1();\n  i = unknown1();\n  k = unknown1();\n  j = unknown1();\n\n  if (n > 0 && k > n) {\n  j = 0;\n  /*@\nloop invariant i1: j >= 0;\nloop invariant i2: j <= n;\nloop invariant i3: k >= n - j;\n\n\n\nloop invariant i7: j >= 0 ==> j <= n;\nloop invariant i8: j >= 0 ==> k >= n - j;\n\n\nloop invariant i11: j >= 0 ==> k >= 0;\n*/\nwhile( j < n ) {\n    j++;\n    k--;\n  } \n  {;\n//@ assert(k>=0);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant k >= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1();\nint unknown2();\nint unknown3();\nint unknown4();\n\nint main() {\n\n  int n;\n  int i, k, j;\n\n  n = unknown1();\n  i = unknown1();\n  k = unknown1();\n  j = unknown1();\n\n  if (n > 0 && k > n) {\n  j = 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\n\n*/\nwhile( j < n ) {\n    j++;\n    k--;\n  } \n  {;\n//@ assert(k>=0);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\nloop invariant k == n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k >= n;\nloop invariant k >= j;\nloop invariant k >= 0;\nloop invariant j < n;\nloop invariant k < n;\nloop invariant k > n;\nloop invariant k > j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1();\nint unknown2();\nint unknown3();\nint unknown4();\n\nint main() {\n\n  int n;\n  int i, k, j;\n\n  n = unknown1();\n  i = unknown1();\n  k = unknown1();\n  j = unknown1();\n\n  if (n > 0 && k > n) {\n  j = 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\n\nloop invariant i3: j <= n;\n\n\n\n\n\n\n\n\n*/\nwhile( j < n ) {\n    j++;\n    k--;\n  } \n  {;\n//@ assert(k>=0);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 35: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1();\nint unknown2();\nint unknown3();\nint unknown4();\n\nint main() {\n\n  int n;\n  int i, k, j;\n\n  n = unknown1();\n  i = unknown1();\n  k = unknown1();\n  j = unknown1();\n\n  if (n > 0 && k > n) {\n  j = 0;\n  /*@\nloop invariant i1: j <= n;\nloop invariant i2: j >= 0;\nloop invariant i3: k >= n - j;\nloop invariant i4: 0 <= k <= n;\nloop invariant i5: 0 <= j <= n;\nloop invariant i6: k == (n - j);\nloop invariant i7: (n > 0 && k > n) ==> (j == 0);\nloop invariant i8: i1;\nloop invariant i9: i2;\nloop invariant i10: i3;\nloop invariant i11: j = i + n;\nloop invariant i12: k = k - n;\nloop invariant i13: i <= j <= n;\nloop invariant i14: i <= k < 0;\nloop invariant i15: k + j = i + n;\nloop invariant i16: ( j <= n ) ==> ( k >= 0 );\nloop invariant i17: ( j <= n ) ==> ( k == (k + (n - j)) );\nloop invariant i18: ( j <= n ) ==> ( k >= 0 ) ==> ( k == (k + (n - j)));\nloop invariant i19: ( k >= 0 ) ==> ( k == (k + (n - j)));\nloop invariant i20: ( k == (k + (n - j)) ) ==> ( k >= 0 );\nloop invariant i21: ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 );\nloop invariant i22: ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i23: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i24: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k == (k + (n - j)));\nloop invariant i25: ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i26: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i27: ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i28: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i29: ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i30: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i31: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i32: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i33: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i34: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i35: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i36: k >= n;\nloop invariant i37: k <= k + (n - j);\nloop invariant i38: k >= n + j;\nloop invariant i39: k >= n - (n - j);\nloop invariant i40: k >= n + (n - j);\nloop invariant i41: k >= 0;\nloop invariant i42: k = j + n;\nloop invariant i43: n > 0;\nloop invariant i44: k > n;\nloop invariant i45: i = unknown1();\nloop invariant i46: k = unknown1();\nloop invariant i47: j = unknown1();\nloop invariant i48: unknown1() = unknown1();\nloop invariant i49: unknown3() = unknown3();\nloop invariant i50: unknown4() = unknown4();\nloop invariant i51: unknown2() = unknown2();\nloop invariant i52: ( j >= 0 ) ==> ( j < n );\nloop invariant i53: ( j >= 0 ) ==> ( k >= n );\nloop invariant i54: ( j >= 0 ) ==> ( j < n ) ==> ( k <= n - j );\nloop invariant i55: ( j >= 0 ) ==> ( j < n ) ==> ( k >= 0 );\nloop invariant i56: k > j;\nloop invariant i57: k == k' ==> j == j' + 1;\nloop invariant i58: k == k' + 1 ==> j == j' - 1;\nloop invariant i59: j == j' ==> k == k' + 1;\nloop invariant i60: j == j' + 1 ==> k == k';\nloop invariant i61: 0 <= n <= 100000;\nloop invariant i62: 0 <= i <= n;\nloop invariant i63: i + k == n;\nloop invariant i64: k >= j;\nloop invariant i65: j < n ==> k >= j;\nloop invariant i66: j < n ==> k >= n;\nloop invariant i67: j >= n ==> k >= j;\nloop invariant i68: j >= n ==> k >= n;\nloop invariant i69: j >= n ==> j <= n;\nloop invariant i70: j >= n ==> k >= 0;\nloop invariant i71: j >= n ==> j >= 0;\nloop invariant i72: j >= n ==> k >= j ==> k >= 0;\nloop invariant i73: j >= n ==> k >= j ==> j >= 0;\nloop invariant i74: j >= n ==> k >= j ==> k >= n ==> k >= 0;\nloop invariant i75: j >= n ==> k >= j ==> j >= n ==> j >= 0;\nloop invariant i76: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j;\nloop invariant i77: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> j >= 0;\nloop invariant i78: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0;\nloop invariant i79: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0;\nloop invariant i80: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> j >= 0;\nloop invariant i81: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j;\nloop invariant i82: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> j >= 0;\nloop invariant i83: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0;\nloop invariant i84: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0;\nloop invariant i85: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j;\nloop invariant i86: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0;\nloop invariant i87: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0;\nloop invariant i88: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j;\nloop invariant i89: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0;\nloop invariant i90: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0;\nloop invariant i91: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j;\nloop invariant i92: k <= n;\nloop invariant i93: k >= k - (j - k);\nloop invariant i94: k >= 0 ==> k <= n;\nloop invariant i95: j >= 0 ==> j <= n;\nloop invariant i96: j >= 0 ==> k >= n - j;\nloop invariant i97: j >= 0 ==> k <= n;\nloop invariant i98: j >= 0 ==> k >= k - (j - k);\nloop invariant i99: j >= 0 ==> k >= 0;\nloop invariant i100: j < n;\nloop invariant i101: k < n;\nloop invariant i102: k == n;\n*/\nwhile( j < n ) {\n    j++;\n    k--;\n  } \n  {;\n//@ assert(k>=0);\n}\n\n  }\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 12,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint unknown1();\nint unknown2();\nint unknown3();\nint unknown4();\n\nint main() {\n\n  int n;\n  int i, k, j;\n\n  n = unknown1();\n  i = unknown1();\n  k = unknown1();\n  j = unknown1();\n\n  if (n > 0 && k > n) {\n  j = 0;\n  /*@\nloop invariant i1: j <= n;\nloop invariant i2: j >= 0;\nloop invariant i3: k >= n - j;\nloop invariant i4: 0 <= k <= n;\nloop invariant i5: 0 <= j <= n;\nloop invariant i6: k == (n - j);\nloop invariant i7: (n > 0 && k > n) ==> (j == 0);\nloop invariant i8: i1;\nloop invariant i9: i2;\nloop invariant i10: i3;\n\n\nloop invariant i13: i <= j <= n;\nloop invariant i14: i <= k < 0;\n\nloop invariant i16: ( j <= n ) ==> ( k >= 0 );\nloop invariant i17: ( j <= n ) ==> ( k == (k + (n - j)) );\nloop invariant i18: ( j <= n ) ==> ( k >= 0 ) ==> ( k == (k + (n - j)));\nloop invariant i19: ( k >= 0 ) ==> ( k == (k + (n - j)));\nloop invariant i20: ( k == (k + (n - j)) ) ==> ( k >= 0 );\nloop invariant i21: ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 );\nloop invariant i22: ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i23: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i24: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k == (k + (n - j)));\nloop invariant i25: ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i26: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i27: ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i28: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i29: ( k >= 0 ) ==> ( k == (k + (n - j)) ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i30: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i31: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i32: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i33: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i34: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i35: ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 ) ==> ( k >= 0 );\nloop invariant i36: k >= n;\nloop invariant i37: k <= k + (n - j);\nloop invariant i38: k >= n + j;\nloop invariant i39: k >= n - (n - j);\nloop invariant i40: k >= n + (n - j);\nloop invariant i41: k >= 0;\n\nloop invariant i43: n > 0;\nloop invariant i44: k > n;\n\n\n\n\n\n\n\nloop invariant i52: ( j >= 0 ) ==> ( j < n );\nloop invariant i53: ( j >= 0 ) ==> ( k >= n );\nloop invariant i54: ( j >= 0 ) ==> ( j < n ) ==> ( k <= n - j );\nloop invariant i55: ( j >= 0 ) ==> ( j < n ) ==> ( k >= 0 );\nloop invariant i56: k > j;\nloop invariant i57: k == k' ==> j == j' + 1;\nloop invariant i58: k == k' + 1 ==> j == j' - 1;\nloop invariant i59: j == j' ==> k == k' + 1;\nloop invariant i60: j == j' + 1 ==> k == k';\nloop invariant i61: 0 <= n <= 100000;\nloop invariant i62: 0 <= i <= n;\nloop invariant i63: i + k == n;\nloop invariant i64: k >= j;\nloop invariant i65: j < n ==> k >= j;\nloop invariant i66: j < n ==> k >= n;\nloop invariant i67: j >= n ==> k >= j;\nloop invariant i68: j >= n ==> k >= n;\nloop invariant i69: j >= n ==> j <= n;\nloop invariant i70: j >= n ==> k >= 0;\nloop invariant i71: j >= n ==> j >= 0;\nloop invariant i72: j >= n ==> k >= j ==> k >= 0;\nloop invariant i73: j >= n ==> k >= j ==> j >= 0;\nloop invariant i74: j >= n ==> k >= j ==> k >= n ==> k >= 0;\nloop invariant i75: j >= n ==> k >= j ==> j >= n ==> j >= 0;\nloop invariant i76: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j;\nloop invariant i77: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> j >= 0;\nloop invariant i78: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0;\nloop invariant i79: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0;\nloop invariant i80: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> j >= 0;\nloop invariant i81: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j;\nloop invariant i82: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> j >= 0;\nloop invariant i83: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0;\nloop invariant i84: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0;\nloop invariant i85: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j;\nloop invariant i86: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0;\nloop invariant i87: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0;\nloop invariant i88: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j;\nloop invariant i89: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0;\nloop invariant i90: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0;\nloop invariant i91: j >= n ==> k >= j ==> k >= n ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j ==> j >= 0 ==> k >= 0 ==> k >= j;\nloop invariant i92: k <= n;\nloop invariant i93: k >= k - (j - k);\nloop invariant i94: k >= 0 ==> k <= n;\nloop invariant i95: j >= 0 ==> j <= n;\nloop invariant i96: j >= 0 ==> k >= n - j;\nloop invariant i97: j >= 0 ==> k <= n;\nloop invariant i98: j >= 0 ==> k >= k - (j - k);\nloop invariant i99: j >= 0 ==> k >= 0;\nloop invariant i100: j < n;\nloop invariant i101: k < n;\nloop invariant i102: k == n;\n*/\nwhile( j < n ) {\n    j++;\n    k--;\n  } \n  {;\n//@ assert(k>=0);\n}\n\n  }\n  return 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c"
        ],
        "skipped": [],
        "total": 110,
        "success_count": 92,
        "failure_count": 18,
        "success_rate": 0.8363636363636363
    }
}