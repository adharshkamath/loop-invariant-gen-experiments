{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n    \tint x,y,N, v1, v2, v3;\n   \t\n   \tx=1;\n        N = unknown_int();\n   \twhile (x <= N){\n      \t\ty=N-x;\n\n\t\tif(y < 0 || y >= N)\n\t\t\t{;\n//@ assert(0 == 1);\n}\n\n      \t\tx++;\n\t\tv1 = v2;\n\t\tv2 = v3;\n\t\tv3 = v1;\n\t\n   \t}\n\n   \treturn 1;\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant y = N - x;\nloop invariant x <= N - x;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y < N;\nloop invariant x >= 1;\nloop invariant v1 == v2;\nloop invariant v2 == v3;\nloop invariant v3 == v1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant x + y == N;\nloop invariant v1 = v3;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x <= N - y;\nloop invariant v1 = v2;\nloop invariant v2 = v3;\nloop invariant v3 = v1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant y = N - x;\nloop invariant v1 = v2;\nloop invariant v2 = v3;\nloop invariant v3 = v1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant x+y == N;\nloop invariant x < N ==> y == N-x;\nloop invariant v1 == v2 ==> v2 == v3 ==> v3 == v1;\nloop invariant x > 1 ==> v1 == v3;\nloop invariant x < N ==> y >= 1;\nloop invariant x > 1 ==> y <= N-1;\nloop invariant x > 1 ==> v1 < v2;\nloop invariant x > 1 ==> v2 < v3;\nloop invariant x > 1 ==> v3 < v1;\nloop invariant x > 1 ==> y > 1;\nloop invariant x > 1 ==> v1 > 0;\nloop invariant x > 1 ==> v2 > 0;\nloop invariant x > 1 ==> v3 > 0;\nloop invariant x > 1 ==> y < N;\nloop invariant x > 1 ==> v1 < v2;\nloop invariant x > 1 ==> v2 < v3;\nloop invariant x > 1 ==> v3 < v1;\nloop invariant x > 1 ==> y > 1;\nloop invariant x > 1 ==> v1 > 0;\nloop invariant x > 1 ==> v2 > 0;\nloop invariant x > 1 ==> v3 > 0;\nloop invariant x > 1 ==> y < N;\nloop invariant x > 1 ==> v1 < v2;\nloop invariant x > 1 ==> v2 < v3;\nloop invariant x > 1 ==> v3 < v1;\nloop invariant x > 1 ==> y > 1;\nloop invariant x > 1 ==> v1 > 0;\nloop invariant x > 1 ==> v2 > 0;\nloop invariant x > 1 ==> v3 > 0;\nloop invariant x > 1 ==> y < N;\nloop invariant x > 1 ==> v1 < v2;\nloop invariant x > 1 ==> v2 < v3;\nloop invariant x > 1 ==> v3 < v1;\nloop invariant x > 1 ==> y > 1;\nloop invariant x > 1 ==> v1 > 0;\nloop invariant x > 1 ==> v2 > 0;\nloop invariant x > 1 ==> v3 > 0;\nloop invariant x > 1 ==> y < N;\nloop invariant x > 1 ==> v1 < v2;\nloop invariant x > 1 ==> v2 < v3;\nloop invariant x > 1 ==> v3 < v1;\nloop invariant x > 1 ==> y > 1;\nloop invariant x > 1 ==> v1 > 0;\nloop invariant x > 1 ==> v2 > 0;\nloop invariant x > 1 ==> v3 > 0;\nloop invariant x > 1 ==> y < N;\nloop invariant x > 1 ==> v1 < v2;\nloop invariant x > 1 ==> v2 < v3;\nloop invariant x > 1 ==> v3 < v1;\nloop invariant x > 1 ==> y > 1;\nloop invariant x > 1 ==> v1 > 0;\nloop invariant x > 1 ==> v2 > 0;\nloop invariant x > 1 ==> v3 > 0;\nloop invariant x > 1 ==> y < N;\nloop invariant x > 1 ==> v1 < v2;\nloop invariant x > 1 ==> v2 < v3;\nloop invariant x > 1 ==> v3 < v1;\nloop invariant x > 1 ==> y > 1;\nloop invariant x > 1 ==> v1 > 0;\nloop invariant x > 1 ==> v2 > 0;\nloop invariant x > 1 ==> v3 > 0;\nloop invariant x > 1 ==> y < N;\nloop invariant x > 1 ==> v1 < v2;\nloop invariant x > 1 ==> v2 < v3;\nloop invariant x > 1 ==> v3 < v1;\nloop invariant x > 1 ==> y > 1;\nloop invariant x > 1 ==> v1 > 0;\nloop invariant x > 1 ==> v2 > 0;\nloop invariant x > 1 ==> v3 > 0;\nloop invariant x > 1 ==> y < N;\nloop invariant x > 1 ==> v1 < v2;\nloop invariant x > 1 ==> v2 < v3;\nloop invariant x > 1 ==> v3 < v1;\nloop invariant x > 1 ==> y > 1;\nloop invariant x > 1 ==> v1 > 0;\nloop invariant x > 1 ==> v2 > 0;\nloop invariant x > 1 ==> v3 > 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant (x + y) == (v1 + v2 + v3);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= N;\nloop invariant 1 <= y <= N;\nloop invariant x + y = N + 1;\nloop invariant v1 = v2;\nloop invariant v2 = v3;\nloop invariant v3 = v1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant 1 <= y <= N;\nloop invariant v1 == v3;\nloop invariant v2 == v3 + v1;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant x + y == N;\nloop invariant y == N - x;\nloop invariant x == y + 1;\nloop invariant x <= N;\nloop invariant y >= 1;\nloop invariant y <= N;\nloop invariant v1 <= v2;\nloop invariant v2 <= v3;\nloop invariant v1 <= v3;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= N;\nloop invariant x >= 1;\nloop invariant y >= -x;\nloop invariant x <= N;\nloop invariant x > 0;\nloop invariant y <= N - x;\nloop invariant y < N - x + 1;\nloop invariant y >= 0;\nloop invariant y < N;\nloop invariant y <= N - x;\nloop invariant y >= x;\nloop invariant y < N;\nloop invariant y > -x;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant v1 <= v2;\nloop invariant v2 <= v3;\nloop invariant v3 <= v1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant x <= N;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y + 1;\nloop invariant x >= y - 1;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant y <= N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant y <= N;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= y + 1;\nloop invariant x >= y - 1;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= N;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= N;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant (x <= N);\nloop invariant (y <= N);\nloop invariant (x >= 1);\nloop invariant (y >= x);\nloop invariant (v1 == v3);\nloop invariant (v2 == v3);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant v1 <= v2;\nloop invariant v2 <= v3;\nloop invariant v3 <= x;\nloop invariant y >= 0;\nloop invariant x + y <= N;\nloop invariant x + y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= N;\nloop invariant 0 <= y <= N - x;\nloop invariant v1 <= v2 <= v3;\nloop invariant v1 <= v3 <= v2;\nloop invariant v2 <= v3 <= v1;\nloop invariant v1 == v2 || v2 == v3 || v3 == v1;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant y = N - x;\nloop invariant x <= N - x;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y < N;\nloop invariant x >= 1;\nloop invariant v1 == v2;\nloop invariant v2 == v3;\nloop invariant v3 == v1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n    \tint x,y,N, v1, v2, v3;\n   \t\n   \tx=1;\n        N = unknown_int();\n   \t/*@\n\n\n\n\n\n\nloop invariant i7: x >= 1;\n\n\n\n*/\nwhile (x <= N){\n      \t\ty=N-x;\n\n\t\tif(y < 0 || y >= N)\n\t\t\t{;\n//@ assert(0 == 1);\n}\n\n      \t\tx++;\n\t\tv1 = v2;\n\t\tv2 = v3;\n\t\tv3 = v1;\n\t\n   \t}\n\n   \treturn 1;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant x + y == N;\nloop invariant v1 = v3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n    \tint x,y,N, v1, v2, v3;\n   \t\n   \tx=1;\n        N = unknown_int();\n   \t/*@\n\n\n\n\n*/\nwhile (x <= N){\n      \t\ty=N-x;\n\n\t\tif(y < 0 || y >= N)\n\t\t\t{;\n//@ assert(0 == 1);\n}\n\n      \t\tx++;\n\t\tv1 = v2;\n\t\tv2 = v3;\n\t\tv3 = v1;\n\t\n   \t}\n\n   \treturn 1;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant x <= N - y;\nloop invariant v1 = v2;\nloop invariant v2 = v3;\nloop invariant v3 = v1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n    \tint x,y,N, v1, v2, v3;\n   \t\n   \tx=1;\n        N = unknown_int();\n   \t/*@\n\n\n\n\n\n*/\nwhile (x <= N){\n      \t\ty=N-x;\n\n\t\tif(y < 0 || y >= N)\n\t\t\t{;\n//@ assert(0 == 1);\n}\n\n      \t\tx++;\n\t\tv1 = v2;\n\t\tv2 = v3;\n\t\tv3 = v1;\n\t\n   \t}\n\n   \treturn 1;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant y = N - x;\nloop invariant v1 = v2;\nloop invariant v2 = v3;\nloop invariant v3 = v1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n    \tint x,y,N, v1, v2, v3;\n   \t\n   \tx=1;\n        N = unknown_int();\n   \t/*@\n\n\n\n\n\n\n*/\nwhile (x <= N){\n      \t\ty=N-x;\n\n\t\tif(y < 0 || y >= N)\n\t\t\t{;\n//@ assert(0 == 1);\n}\n\n      \t\tx++;\n\t\tv1 = v2;\n\t\tv2 = v3;\n\t\tv3 = v1;\n\t\n   \t}\n\n   \treturn 1;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant x+y == N;\nloop invariant x < N ==> y == N-x;\nloop invariant v1 == v2 ==> v2 == v3 ==> v3 == v1;\nloop invariant x > 1 ==> v1 == v3;\nloop invariant x < N ==> y >= 1;\nloop invariant x > 1 ==> y <= N-1;\nloop invariant x > 1 ==> v1 < v2;\nloop invariant x > 1 ==> v2 < v3;\nloop invariant x > 1 ==> v3 < v1;\nloop invariant x > 1 ==> y > 1;\nloop invariant x > 1 ==> v1 > 0;\nloop invariant x > 1 ==> v2 > 0;\nloop invariant x > 1 ==> v3 > 0;\nloop invariant x > 1 ==> y < N;\nloop invariant x > 1 ==> v1 < v2;\nloop invariant x > 1 ==> v2 < v3;\nloop invariant x > 1 ==> v3 < v1;\nloop invariant x > 1 ==> y > 1;\nloop invariant x > 1 ==> v1 > 0;\nloop invariant x > 1 ==> v2 > 0;\nloop invariant x > 1 ==> v3 > 0;\nloop invariant x > 1 ==> y < N;\nloop invariant x > 1 ==> v1 < v2;\nloop invariant x > 1 ==> v2 < v3;\nloop invariant x > 1 ==> v3 < v1;\nloop invariant x > 1 ==> y > 1;\nloop invariant x > 1 ==> v1 > 0;\nloop invariant x > 1 ==> v2 > 0;\nloop invariant x > 1 ==> v3 > 0;\nloop invariant x > 1 ==> y < N;\nloop invariant x > 1 ==> v1 < v2;\nloop invariant x > 1 ==> v2 < v3;\nloop invariant x > 1 ==> v3 < v1;\nloop invariant x > 1 ==> y > 1;\nloop invariant x > 1 ==> v1 > 0;\nloop invariant x > 1 ==> v2 > 0;\nloop invariant x > 1 ==> v3 > 0;\nloop invariant x > 1 ==> y < N;\nloop invariant x > 1 ==> v1 < v2;\nloop invariant x > 1 ==> v2 < v3;\nloop invariant x > 1 ==> v3 < v1;\nloop invariant x > 1 ==> y > 1;\nloop invariant x > 1 ==> v1 > 0;\nloop invariant x > 1 ==> v2 > 0;\nloop invariant x > 1 ==> v3 > 0;\nloop invariant x > 1 ==> y < N;\nloop invariant x > 1 ==> v1 < v2;\nloop invariant x > 1 ==> v2 < v3;\nloop invariant x > 1 ==> v3 < v1;\nloop invariant x > 1 ==> y > 1;\nloop invariant x > 1 ==> v1 > 0;\nloop invariant x > 1 ==> v2 > 0;\nloop invariant x > 1 ==> v3 > 0;\nloop invariant x > 1 ==> y < N;\nloop invariant x > 1 ==> v1 < v2;\nloop invariant x > 1 ==> v2 < v3;\nloop invariant x > 1 ==> v3 < v1;\nloop invariant x > 1 ==> y > 1;\nloop invariant x > 1 ==> v1 > 0;\nloop invariant x > 1 ==> v2 > 0;\nloop invariant x > 1 ==> v3 > 0;\nloop invariant x > 1 ==> y < N;\nloop invariant x > 1 ==> v1 < v2;\nloop invariant x > 1 ==> v2 < v3;\nloop invariant x > 1 ==> v3 < v1;\nloop invariant x > 1 ==> y > 1;\nloop invariant x > 1 ==> v1 > 0;\nloop invariant x > 1 ==> v2 > 0;\nloop invariant x > 1 ==> v3 > 0;\nloop invariant x > 1 ==> y < N;\nloop invariant x > 1 ==> v1 < v2;\nloop invariant x > 1 ==> v2 < v3;\nloop invariant x > 1 ==> v3 < v1;\nloop invariant x > 1 ==> y > 1;\nloop invariant x > 1 ==> v1 > 0;\nloop invariant x > 1 ==> v2 > 0;\nloop invariant x > 1 ==> v3 > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n    \tint x,y,N, v1, v2, v3;\n   \t\n   \tx=1;\n        N = unknown_int();\n   \t/*@\n\n\n\n\nloop invariant i5: v1 == v2 ==> v2 == v3 ==> v3 == v1;\nloop invariant i6: x > 1 ==> v1 == v3;\n\nloop invariant i8: x > 1 ==> y <= N-1;\n\n\n\n\n\n\n\nloop invariant i16: x > 1 ==> y < N;\n*/\nwhile (x <= N){\n      \t\ty=N-x;\n\n\t\tif(y < 0 || y >= N)\n\t\t\t{;\n//@ assert(0 == 1);\n}\n\n      \t\tx++;\n\t\tv1 = v2;\n\t\tv2 = v3;\n\t\tv3 = v1;\n\t\n   \t}\n\n   \treturn 1;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant (x + y) == (v1 + v2 + v3);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n    \tint x,y,N, v1, v2, v3;\n   \t\n   \tx=1;\n        N = unknown_int();\n   \t/*@\n\n\n\n*/\nwhile (x <= N){\n      \t\ty=N-x;\n\n\t\tif(y < 0 || y >= N)\n\t\t\t{;\n//@ assert(0 == 1);\n}\n\n      \t\tx++;\n\t\tv1 = v2;\n\t\tv2 = v3;\n\t\tv3 = v1;\n\t\n   \t}\n\n   \treturn 1;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= N;\nloop invariant 1 <= y <= N;\nloop invariant x + y = N + 1;\nloop invariant v1 = v2;\nloop invariant v2 = v3;\nloop invariant v3 = v1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n    \tint x,y,N, v1, v2, v3;\n   \t\n   \tx=1;\n        N = unknown_int();\n   \t/*@\n\n\n\n\n\n\n*/\nwhile (x <= N){\n      \t\ty=N-x;\n\n\t\tif(y < 0 || y >= N)\n\t\t\t{;\n//@ assert(0 == 1);\n}\n\n      \t\tx++;\n\t\tv1 = v2;\n\t\tv2 = v3;\n\t\tv3 = v1;\n\t\n   \t}\n\n   \treturn 1;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant 1 <= y <= N;\nloop invariant v1 == v3;\nloop invariant v2 == v3 + v1;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant x + y == N;\nloop invariant y == N - x;\nloop invariant x == y + 1;\nloop invariant x <= N;\nloop invariant y >= 1;\nloop invariant y <= N;\nloop invariant v1 <= v2;\nloop invariant v2 <= v3;\nloop invariant v1 <= v3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n    \tint x,y,N, v1, v2, v3;\n   \t\n   \tx=1;\n        N = unknown_int();\n   \t/*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (x <= N){\n      \t\ty=N-x;\n\n\t\tif(y < 0 || y >= N)\n\t\t\t{;\n//@ assert(0 == 1);\n}\n\n      \t\tx++;\n\t\tv1 = v2;\n\t\tv2 = v3;\n\t\tv3 = v1;\n\t\n   \t}\n\n   \treturn 1;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= N;\nloop invariant x >= 1;\nloop invariant y >= -x;\nloop invariant x <= N;\nloop invariant x > 0;\nloop invariant y <= N - x;\nloop invariant y < N - x + 1;\nloop invariant y >= 0;\nloop invariant y < N;\nloop invariant y <= N - x;\nloop invariant y >= x;\nloop invariant y < N;\nloop invariant y > -x;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant y < N - x;\nloop invariant y > 0;\nloop invariant y < N;\nloop invariant y > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n    \tint x,y,N, v1, v2, v3;\n   \t\n   \tx=1;\n        N = unknown_int();\n   \t/*@\n\nloop invariant i2: x >= 1;\n\n\nloop invariant i5: x > 0;\n\n\n\n\n\n\n\n\n\n*/\nwhile (x <= N){\n      \t\ty=N-x;\n\n\t\tif(y < 0 || y >= N)\n\t\t\t{;\n//@ assert(0 == 1);\n}\n\n      \t\tx++;\n\t\tv1 = v2;\n\t\tv2 = v3;\n\t\tv3 = v1;\n\t\n   \t}\n\n   \treturn 1;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant v1 <= v2;\nloop invariant v2 <= v3;\nloop invariant v3 <= v1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n    \tint x,y,N, v1, v2, v3;\n   \t\n   \tx=1;\n        N = unknown_int();\n   \t/*@\n\n\n\n\n\n*/\nwhile (x <= N){\n      \t\ty=N-x;\n\n\t\tif(y < 0 || y >= N)\n\t\t\t{;\n//@ assert(0 == 1);\n}\n\n      \t\tx++;\n\t\tv1 = v2;\n\t\tv2 = v3;\n\t\tv3 = v1;\n\t\n   \t}\n\n   \treturn 1;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant x <= N;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y + 1;\nloop invariant x >= y - 1;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y <= N;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant y <= N;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant y <= N;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x <= y + 1;\nloop invariant x >= y - 1;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\nloop invariant x <= N;\nloop invariant y >= 0;\nloop invariant y <= N;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n    \tint x,y,N, v1, v2, v3;\n   \t\n   \tx=1;\n        N = unknown_int();\n   \t/*@\n\n\n\n\nloop invariant i5: x >= 0;\n\n\n\n*/\nwhile (x <= N){\n      \t\ty=N-x;\n\n\t\tif(y < 0 || y >= N)\n\t\t\t{;\n//@ assert(0 == 1);\n}\n\n      \t\tx++;\n\t\tv1 = v2;\n\t\tv2 = v3;\n\t\tv3 = v1;\n\t\n   \t}\n\n   \treturn 1;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= N;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant v3 <= v2 <= v1;\nloop invariant v1 + v2 + v3 == 3;\nloop invariant 0 <= y <= N - x;\nloop invariant 0 <= x <= N;\nloop invariant 0 <= y <= N;\nloop invariant 0 <= v1 <= v2 <= v3;\nloop invariant v1 + v2 + v3 == 3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n    \tint x,y,N, v1, v2, v3;\n   \t\n   \tx=1;\n        N = unknown_int();\n   \t/*@\n\n\n\n\n\n\n\n*/\nwhile (x <= N){\n      \t\ty=N-x;\n\n\t\tif(y < 0 || y >= N)\n\t\t\t{;\n//@ assert(0 == 1);\n}\n\n      \t\tx++;\n\t\tv1 = v2;\n\t\tv2 = v3;\n\t\tv3 = v1;\n\t\n   \t}\n\n   \treturn 1;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= N;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant (x <= N);\nloop invariant (y <= N);\nloop invariant (x >= 1);\nloop invariant (y >= x);\nloop invariant (v1 == v3);\nloop invariant (v2 == v3);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n    \tint x,y,N, v1, v2, v3;\n   \t\n   \tx=1;\n        N = unknown_int();\n   \t/*@\n\n\n\n\nloop invariant i5: (x >= 1);\n\n\n\n*/\nwhile (x <= N){\n      \t\ty=N-x;\n\n\t\tif(y < 0 || y >= N)\n\t\t\t{;\n//@ assert(0 == 1);\n}\n\n      \t\tx++;\n\t\tv1 = v2;\n\t\tv2 = v3;\n\t\tv3 = v1;\n\t\n   \t}\n\n   \treturn 1;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= N;\nloop invariant v1 <= v2;\nloop invariant v2 <= v3;\nloop invariant v3 <= x;\nloop invariant y >= 0;\nloop invariant x + y <= N;\nloop invariant x + y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n    \tint x,y,N, v1, v2, v3;\n   \t\n   \tx=1;\n        N = unknown_int();\n   \t/*@\n\n\n\n\n\n\n\n*/\nwhile (x <= N){\n      \t\ty=N-x;\n\n\t\tif(y < 0 || y >= N)\n\t\t\t{;\n//@ assert(0 == 1);\n}\n\n      \t\tx++;\n\t\tv1 = v2;\n\t\tv2 = v3;\n\t\tv3 = v1;\n\t\n   \t}\n\n   \treturn 1;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= N;\nloop invariant 0 <= y <= N - x;\nloop invariant v1 <= v2 <= v3;\nloop invariant v1 <= v3 <= v2;\nloop invariant v2 <= v3 <= v1;\nloop invariant v1 == v2 || v2 == v3 || v3 == v1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n    \tint x,y,N, v1, v2, v3;\n   \t\n   \tx=1;\n        N = unknown_int();\n   \t/*@\n\n\n\n\n\n\n*/\nwhile (x <= N){\n      \t\ty=N-x;\n\n\t\tif(y < 0 || y >= N)\n\t\t\t{;\n//@ assert(0 == 1);\n}\n\n      \t\tx++;\n\t\tv1 = v2;\n\t\tv2 = v3;\n\t\tv3 = v1;\n\t\n   \t}\n\n   \treturn 1;\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 17: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n    \tint x,y,N, v1, v2, v3;\n   \t\n   \tx=1;\n        N = unknown_int();\n   \t/*@\nloop invariant i1: 0 <= x <= N;\nloop invariant i2: y = N - x;\nloop invariant i3: x <= N - x;\nloop invariant i4: x <= N;\nloop invariant i5: y >= 0;\nloop invariant i6: y < N;\nloop invariant i7: x >= 1;\nloop invariant i8: v1 == v2;\nloop invariant i9: v2 == v3;\nloop invariant i10: v3 == v1;\nloop invariant i11: 0 <= y <= N;\nloop invariant i12: x + y == N;\nloop invariant i13: v1 = v3;\nloop invariant i14: x <= N - y;\nloop invariant i15: v1 = v2;\nloop invariant i16: v2 = v3;\nloop invariant i17: v3 = v1;\nloop invariant i18: 1 <= x <= N;\nloop invariant i19: x+y == N;\nloop invariant i20: x < N ==> y == N-x;\nloop invariant i21: v1 == v2 ==> v2 == v3 ==> v3 == v1;\nloop invariant i22: x > 1 ==> v1 == v3;\nloop invariant i23: x < N ==> y >= 1;\nloop invariant i24: x > 1 ==> y <= N-1;\nloop invariant i25: x > 1 ==> v1 < v2;\nloop invariant i26: x > 1 ==> v2 < v3;\nloop invariant i27: x > 1 ==> v3 < v1;\nloop invariant i28: x > 1 ==> y > 1;\nloop invariant i29: x > 1 ==> v1 > 0;\nloop invariant i30: x > 1 ==> v2 > 0;\nloop invariant i31: x > 1 ==> v3 > 0;\nloop invariant i32: x > 1 ==> y < N;\nloop invariant i33: (x + y) == (v1 + v2 + v3);\nloop invariant i34: 1 <= y <= N;\nloop invariant i35: x + y = N + 1;\nloop invariant i36: v1 == v3;\nloop invariant i37: v2 == v3 + v1;\nloop invariant i38: v1 >= 0;\nloop invariant i39: v2 >= 0;\nloop invariant i40: v3 >= 0;\nloop invariant i41: y == N - x;\nloop invariant i42: x == y + 1;\nloop invariant i43: y >= 1;\nloop invariant i44: y <= N;\nloop invariant i45: v1 <= v2;\nloop invariant i46: v2 <= v3;\nloop invariant i47: v1 <= v3;\nloop invariant i48: y >= -x;\nloop invariant i49: x > 0;\nloop invariant i50: y <= N - x;\nloop invariant i51: y < N - x + 1;\nloop invariant i52: y >= x;\nloop invariant i53: y > -x;\nloop invariant i54: y < N - x;\nloop invariant i55: y > 0;\nloop invariant i56: v3 <= v1;\nloop invariant i57: x >= 0;\nloop invariant i58: x <= y + 1;\nloop invariant i59: x >= y - 1;\nloop invariant i60: v3 <= v2 <= v1;\nloop invariant i61: v1 + v2 + v3 == 3;\nloop invariant i62: 0 <= y <= N - x;\nloop invariant i63: 0 <= v1 <= v2 <= v3;\nloop invariant i64: x >= (1 + (y - 1) * y / 2);\nloop invariant i65: (x <= N);\nloop invariant i66: (y <= N);\nloop invariant i67: (x >= 1);\nloop invariant i68: (y >= x);\nloop invariant i69: (v1 == v3);\nloop invariant i70: (v2 == v3);\nloop invariant i71: v3 <= x;\nloop invariant i72: x + y <= N;\nloop invariant i73: x + y >= 0;\nloop invariant i74: v1 <= v2 <= v3;\nloop invariant i75: v1 <= v3 <= v2;\nloop invariant i76: v2 <= v3 <= v1;\nloop invariant i77: v1 == v2 || v2 == v3 || v3 == v1;\n*/\nwhile (x <= N){\n      \t\ty=N-x;\n\n\t\tif(y < 0 || y >= N)\n\t\t\t{;\n//@ assert(0 == 1);\n}\n\n      \t\tx++;\n\t\tv1 = v2;\n\t\tv2 = v3;\n\t\tv3 = v1;\n\t\n   \t}\n\n   \treturn 1;\n\n}",
        "combined_annotation_num_solver_calls": 15,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n    \tint x,y,N, v1, v2, v3;\n   \t\n   \tx=1;\n        N = unknown_int();\n   \t/*@\n\n\n\n\n\n\nloop invariant i7: x >= 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i21: v1 == v2 ==> v2 == v3 ==> v3 == v1;\nloop invariant i22: x > 1 ==> v1 == v3;\n\nloop invariant i24: x > 1 ==> y <= N-1;\n\n\n\n\n\n\n\nloop invariant i32: x > 1 ==> y < N;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i49: x > 0;\n\n\n\n\n\n\n\nloop invariant i57: x >= 0;\n\n\n\n\n\n\n\n\n\nloop invariant i67: (x >= 1);\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (x <= N){\n      \t\ty=N-x;\n\n\t\tif(y < 0 || y >= N)\n\t\t\t{;\n//@ assert(0 == 1);\n}\n\n      \t\tx++;\n\t\tv1 = v2;\n\t\tv2 = v3;\n\t\tv3 = v1;\n\t\n   \t}\n\n   \treturn 1;\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c"
        ],
        "skipped": [],
        "total": 75,
        "success_count": 65,
        "failure_count": 10,
        "success_rate": 0.8666666666666667
    }
}