{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  int v1, v2, v3;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  while(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant x1 >= d1;\nloop invariant x2 >= d2;\nloop invariant x3 >= d3;\nloop invariant x1 <= x1max;\nloop invariant x2 <= x2max;\nloop invariant x3 <= x3max;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant x1max >= 0;\nloop invariant x2max >= 0;\nloop invariant x3max >= 0;\nloop invariant x1max >= x1;\nloop invariant x2max >= x2;\nloop invariant x3max >= x3;\nloop invariant x1 <= x1max + 1;\nloop invariant x2 <= x2max + 1;\nloop invariant x3 <= x3max + 1;\nloop invariant d1 <= 1;\nloop invariant d2 <= 1;\nloop invariant d3 <= 1;\nloop invariant x1max >= x1 + d1;\nloop invariant x2max >= x2 + d2;\nloop invariant x3max >= x3 + d3;\n*/\n```",
            "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant (x1 > 0 ==> x1 >= d1);\nloop invariant (x2 > 0 ==> x2 >= d2);\nloop invariant (x3 > 0 ==> x3 >= d3);\nloop invariant (c1 ==> d1 == 1);\nloop invariant (c2 ==> d2 == 1);\nloop invariant (c1 ==> d3 == 1);\nloop invariant (c2 ==> d3 == 1);\nloop invariant (x1 == 0 ==> x1 == d1);\nloop invariant (x2 == 0 ==> x2 == d2);\nloop invariant (x3 == 0 ==> x3 == d3);\nloop invariant (x1 == 0 ==> x1 >= d1);\nloop invariant (x2 == 0 ==> x2 >= d2);\nloop invariant (x3 == 0 ==> x3 >= d3);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x1 <= 2147483647;\nloop invariant 1 <= x2 <= 2147483647;\nloop invariant 1 <= x3 <= 2147483647;\nloop invariant 1 <= d1 <= 2147483647;\nloop invariant 1 <= d2 <= 2147483647;\nloop invariant 1 <= d3 <= 2147483647;\nloop invariant v1 >= -2147483648;\nloop invariant v1 <= 2147483647;\nloop invariant v2 >= -2147483648;\nloop invariant v2 <= 2147483647;\nloop invariant v3 >= -2147483648;\nloop invariant v3 <= 2147483647;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant v1 >= -2147483648;\nloop invariant v1 <= 2147483647;\nloop invariant v2 >= -2147483648;\nloop invariant v2 <= 2147483647;\nloop invariant v3 >= -2147483648;\nloop invariant v3 <= 2147483647;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant (d1 <= x1) ==> (x1 >= d1);\nloop invariant (d2 <= x2) ==> (x2 >= d2);\nloop invariant (d3 <= x3) ==> (x3 >= d3);\nloop invariant (d1 <= x1) ==> (x1 >= d1);\nloop invariant (d2 <= x2) ==> (x2 >= d2);\nloop invariant (d3 <= x3) ==> (x3 >= d3);\nloop invariant (d1 <= x1) ==> (x1 >= d1);\nloop invariant (d2 <= x2) ==> (x2 >= d2);\nloop invariant (d3 <= x3) ==> (x3 >= d3);\nloop invariant (d1 <= x1) ==> (x1 >= d1);\nloop invariant (d2 <= x2) ==> (x2 >= d2);\nloop invariant (d3 <= x3) ==> (x3 >= d3);\nloop invariant (d1 <= x1) ==> (x1 >= d1);\nloop invariant (d2 <= x2) ==> (x2 >= d2);\nloop invariant (d3 <= x3) ==> (x3 >= d3);\nloop invariant (d1 <= x1) ==> (x1 >= d1);\nloop invariant (d2 <= x2) ==> (x2 >= d2);\nloop invariant (d3 <= x3) ==> (x3 >= d3);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= d1 <= x1;\nloop invariant 0 <= d2 <= x2;\nloop invariant 0 <= d3 <= x3;\nloop invariant c1 && c2 ==> v1 == 0;\nloop invariant c2 && !c1 ==> v1 == v2;\nloop invariant c1 && !c2 ==> v1 == v3;\nloop invariant !c1 && !c2 ==> v1 <= v2;\nloop invariant !c1 && !c2 ==> v1 <= v3;\nloop invariant !c1 && !c2 ==> v2 <= v3;\nloop invariant x1 <= x2 ==> x1 <= x3;\nloop invariant x1 <= x3 ==> x2 <= x3;\nloop invariant x2 <= x1 ==> x1 <= x3;\nloop invariant x2 <= x3 ==> x1 <= x3;\nloop invariant x3 <= x1 ==> x1 <= x2;\nloop invariant x3 <= x2 ==> x1 <= x2;\nloop invariant x1 <= x2 ==> x3 <= x2;\nloop invariant x1 <= x3 ==> x3 <= x2;\nloop invariant x2 <= x1 ==> x3 <= x1;\nloop invariant x2 <= x3 ==> x3 <= x1;\nloop invariant x3 <= x1 ==> x3 <= x2;\nloop invariant x3 <= x2 ==> x3 <= x1;\nloop invariant v1 <= x1;\nloop invariant v2 <= x2;\nloop invariant v3 <= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant 0 <= d1 <= x1;\nloop invariant 0 <= d2 <= x2;\nloop invariant 0 <= d3 <= x3;\nloop invariant c1 && c2 ==> v1 == 0;\nloop invariant c2 && !c1 ==> v1 == v2;\nloop invariant c1 && !c2 ==> v1 == v3;\nloop invariant !c1 && !c2 ==> v1 <= v2;\nloop invariant !c1 && !c2 ==> v1 <= v3;\nloop invariant !c1 && !c2 ==> v2 <= v3;\nloop invariant x1 <= x2 ==> x1 <= x3;\nloop invariant x1 <= x3 ==> x2 <= x3;\nloop invariant x2 <= x1 ==> x1 <= x3;\nloop invariant x2 <= x3 ==> x1 <= x3;\nloop invariant x3 <= x1 ==> x1 <= x2;\nloop invariant x3 <= x2 ==> x1 <= x2;\nloop invariant x1 <= x2 ==> x3 <= x2;\nloop invariant x1 <= x3 ==> x3 <= x2;\nloop invariant x2 <= x1 ==> x3 <= x1;\nloop invariant x2 <= x3 ==> x3 <= x1;\nloop invariant x3 <= x1 ==> x3 <= x2;\nloop invariant x3 <= x2 ==> x3 <= x1;\nloop invariant v1 <= x1;\nloop invariant v2 <= x2;\nloop invariant v3 <= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant 0 <= d1 <= x1;\nloop invariant 0 <= d2 <= x2;\nloop invariant 0 <= d3 <= x3;\nloop invariant c1 && c2 ==> v1 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x1 <= x1 + d1;\nloop invariant 1 <= x2 <= x2 + d2;\nloop invariant 1 <= x3 <= x3 + d3;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 - d1;\nloop invariant x3 >= x2 - d2;\nloop invariant x3 >= x1 - d1 - d2;\nloop invariant x3 >= 0 ==> x1 >= 0 && x2 >= 0;\nloop invariant x2 >= x1 ==> x1 >= 0;\nloop invariant x1 >= 0 ==> x2 >= 0;\nloop invariant x3 >= x1 ==> x2 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= 2147483647; loop invariant 0 <= x2 <= 2147483647; loop invariant 0 <= x3 <= 2147483647; loop invariant 0 <= d1 <= 2147483647; loop invariant 0 <= d2 <= 2147483647; loop invariant 0 <= d3 <= 2147483647; loop invariant 0 <= v1 <= 2147483647; loop invariant 0 <= v2 <= 2147483647; loop invariant 0 <= v3 <= 2147483647; loop invariant c1 == (_Bool)unknown_bool(); loop invariant c2 == (_Bool)unknown_bool(); loop invariant x1 >= 0; loop invariant x2 >= 0; loop invariant x3 >= 0; loop invariant d1 >= 0; loop invariant d2 >= 0; loop invariant d3 >= 0; loop invariant v1 >= 0; loop invariant v2 >= 0; loop invariant v3 >= 0; loop invariant c1 == (_Bool)unknown_bool(); loop invariant c2 == (_Bool)unknown_bool();\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x1 <= unknown_uint();\nloop invariant 1 <= x2 <= unknown_uint();\nloop invariant 1 <= x3 <= unknown_uint();\nloop invariant 0 <= d1 <= unknown_uint();\nloop invariant 0 <= d2 <= unknown_uint();\nloop invariant 0 <= d3 <= unknown_uint();\nloop invariant 0 <= v1 <= unknown_int();\nloop invariant 0 <= v2 <= unknown_int();\nloop invariant 0 <= v3 <= unknown_int();\nloop invariant unknown_bool() ==> (c1 == c1);\nloop invariant unknown_bool() ==> (c2 == c2);\nloop invariant x1 >= x2 ==> (x1 >= x2);\nloop invariant x1 >= x3 ==> (x1 >= x3);\nloop invariant x2 >= x3 ==> (x2 >= x3);\nloop invariant x1 >= d1 ==> (x1 >= d1);\nloop invariant x2 >= d2 ==> (x2 >= d2);\nloop invariant x3 >= d3 ==> (x3 >= d3);\nloop invariant (c1 && (x1 >= d1)) ==> (x1 >= x1 - d1);\nloop invariant (c2 && (x2 >= d2)) ==> (x2 >= x2 - d2);\nloop invariant ((!c1 && !c2) && (x3 >= d3)) ==> (x3 >= x3 - d3);\nloop invariant (x1 == 0) ==> (x1 == 0);\nloop invariant (x2 == 0) ==> (x2 == 0);\nloop invariant (x3 == 0) ==> (x3 == 0);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 && x1 <= 4294967295;\nloop invariant 0 <= x2 && x2 <= 4294967295;\nloop invariant 0 <= x3 && x3 <= 4294967295;\nloop invariant 0 <= d1 && d1 <= 4294967295;\nloop invariant 0 <= d2 && d2 <= 4294967295;\nloop invariant 0 <= d3 && d3 <= 4294967295;\nloop invariant 0 <= v1 && v1 <= 2147483647;\nloop invariant 0 <= v2 && v2 <= 2147483647;\nloop invariant 0 <= v3 && v3 <= 2147483647;\nloop invariant c1==unknown_bool();\nloop invariant c2==unknown_bool();\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant c1==unknown_bool();\nloop invariant c2==unknown_bool();\nloop invariant x1 <= 4294967295;\nloop invariant x2 <= 4294967295;\nloop invariant x3 <= 4294967295;\nloop invariant d1 <= 4294967295;\nloop invariant d2 <= 4294967295;\nloop invariant d3 <= 4294967295;\nloop invariant v1 <= 2147483647;\nloop invariant v2 <= 2147483647;\nloop invariant v3 <= 2147483647;\nloop invariant c1==unknown_bool();\nloop invariant c2==unknown_bool();\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= x1 + 1;\nloop invariant 0 <= x2 <= x2 + 1;\nloop invariant 0 <= x3 <= x3 + 1;\nloop invariant 0 <= d1 <= d1 + 1;\nloop invariant 0 <= d2 <= d2 + 1;\nloop invariant 0 <= d3 <= d3 + 1;\nloop invariant -1 <= v1 <= v1 + 1;\nloop invariant -1 <= v2 <= v2 + 1;\nloop invariant -1 <= v3 <= v3 + 1;\nloop invariant c1 == c1;\nloop invariant c2 == c2;\nloop invariant 0 <= x1 <= x1 + 1 ==> x1 <= x1;\nloop invariant 0 <= x2 <= x2 + 1 ==> x2 <= x2;\nloop invariant 0 <= x3 <= x3 + 1 ==> x3 <= x3;\nloop invariant 0 <= d1 <= d1 + 1 ==> d1 <= d1;\nloop invariant 0 <= d2 <= d2 + 1 ==> d2 <= d2;\nloop invariant 0 <= d3 <= d3 + 1 ==> d3 <= d3;\nloop invariant -1 <= v1 <= v1 + 1 ==> v1 <= v1;\nloop invariant -1 <= v2 <= v2 + 1 ==> v2 <= v2;\nloop invariant -1 <= v3 <= v3 + 1 ==> v3 <= v3;\nloop invariant c1 == c1 ==> c1 == c1;\nloop invariant c2 == c2 ==> c2 == c2;\nloop invariant 0 <= x1 <= x1 + 1 ==> x1 <= x1 + 1;\nloop invariant 0 <= x2 <= x2 + 1 ==> x2 <= x2 + 1;\nloop invariant 0 <= x3 <= x3 + 1 ==> x3 <= x3 + 1;\nloop invariant 0 <= d1 <= d1 + 1 ==> d1 <= d1 + 1;\nloop invariant 0 <= d2 <= d2 + 1 ==> d2 <= d2 + 1;\nloop invariant 0 <= d3 <= d3 + 1 ==> d3 <= d3 + 1;\nloop invariant -1 <= v1 <= v1 + 1 ==> v1 <= v1 + 1;\nloop invariant -1 <= v2 <= v2 + 1 ==> v2 <= v2 + 1;\nloop invariant -1 <= v3 <= v3 + 1 ==> v3 <= v3 + 1;\nloop invariant c1 == c1 ==> c1 == c1;\nloop invariant c2 == c2 ==> c2 == c2;\nloop invariant 0 <= x1 <= x1 + 1 ==> x1 <= x1 + 1;\nloop invariant 0 <= x2 <= x2 + 1 ==> x2 <= x2 + 1;\nloop invariant 0 <= x3 <= x3 + 1 ==> x3 <= x3 + 1;\nloop invariant 0 <= d1 <= d1 + 1 ==> d1 <= d1 + 1;\nloop invariant 0 <= d2 <= d2 + 1 ==> d2 <= d2 + 1;\nloop invariant 0 <= d3 <= d3 + 1 ==> d3 <= d3 + 1;\nloop invariant -1 <= v1 <= v1 + 1 ==> v1 <= v1 + 1;\nloop invariant -1 <= v2 <= v2 + 1 ==> v2 <= v2 + 1;\nloop invariant -1 <= v3 <= v3 + 1 ==> v3 <= v3 + 1;\nloop invariant c1 == c1 ==> c1 == c1;\nloop invariant c2 == c2 ==> c2 == c2;\nloop invariant 0 <= x1 <= x1 + 1 ==> x1 <= x1 + 1;\nloop invariant 0 <= x2 <= x2 + 1 ==> x2 <= x2 + 1;\nloop invariant 0 <= x3 <= x3 + 1 ==> x3 <= x3 + 1;\nloop invariant 0 <= d1 <= d1 + 1 ==> d1 <= d1 + 1;\nloop invariant 0 <= d2 <= d2 + 1 ==> d2 <= d2 + 1;\nloop invariant 0 <= d3 <= d3 + 1 ==> d3 <= d3 + 1;\nloop invariant -1 <= v1 <= v1 + 1 ==> v1 <= v1 + 1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 == 0 && x2 == 0 && x3 == 0;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> v1 == 0 && v2 == 0 && v3 == 0;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> c1 == 0 && c2 == 0;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> d1 == 0 && d2 == 0 && d3 == 0;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 == 0 && x2 == 0 && x3 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x1 <= unknown_uint();\nloop invariant 1 <= x2 <= unknown_uint();\nloop invariant 1 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 >= d1 * (1 + x3) / 3;\nloop invariant x2 >= d2 * (1 + x3) / 3;\nloop invariant x3 >= d3 * (1 + x3) / 3;\nloop invariant x1 >= d1 * (1 + x2) / 2;\nloop invariant x2 >= d2 * (1 + x1) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= 2147483647;\nloop invariant 0 <= x2 <= 2147483647;\nloop invariant 0 <= x3 <= 2147483647;\nloop invariant 0 <= d1 <= 2147483647;\nloop invariant 0 <= d2 <= 2147483647;\nloop invariant 0 <= d3 <= 2147483647;\nloop invariant c1 ==> ((x1 >= d1) && (x2 >= d2) && (x3 >= d3));\nloop invariant !c1 ==> ((x1 >= 0) && (x2 >= 0) && (x3 >= 0));\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= d1 * unknown_uint() && 0 <= x2 <= d2 * unknown_uint() && 0 <= x3 <= d3 * unknown_uint();\nloop invariant 0 <= x1 <= d1 * unknown_uint() && 0 <= x2 <= d2 * unknown_uint() && 0 <= x3 <= d3 * unknown_uint() && x1>0 && x2>0 && x3>0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= v1 <= 2147483647;\nloop invariant 0 <= v2 <= 2147483647;\nloop invariant 0 <= v3 <= 2147483647;\nloop invariant 0 <= d1 <= 2147483647;\nloop invariant 0 <= d2 <= 2147483647;\nloop invariant 0 <= d3 <= 2147483647;\nloop invariant 0 <= x1 <= 4294967295;\nloop invariant 0 <= x2 <= 4294967295;\nloop invariant 0 <= x3 <= 4294967295;\nloop invariant x1>=x2;\nloop invariant x1>=x3;\nloop invariant x2>=x3;\nloop invariant (x1 <= v1) ==> (x1 == v1);\nloop invariant (x2 <= v2) ==> (x2 == v2);\nloop invariant (x3 <= v3) ==> (x3 == v3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 == v1 && x2 == v2 && x3 == v3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 >= x2 && x1 >= x3 && x2 >= x3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 <= v1 && x2 <= v2 && x3 <= v3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 >= x2 && x1 >= x3 && x2 >= x3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 == v1 && x2 == v2 && x3 == v3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 >= x2 && x1 >= x3 && x2 >= x3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 == v1 && x2 == v2 && x3 == v3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 >= x2 && x1 >= x3 && x2 >= x3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 == v1 && x2 == v2 && x3 == v3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 >= x2 && x1 >= x3 && x2 >= x3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 == v1 && x2 == v2 && x3 == v3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 >= x2 && x1 >= x3 && x2 >= x3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 == v1 && x2 == v2 && x3 == v3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 >= x2 && x1 >= x3 && x2 >= x3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 == v1 && x2 == v2 && x3 == v3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 >= x2 && x1 >= x3 && x2 >= x3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 == v1 && x2 == v2 && x3 == v3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 >= x2 && x1 >= x3 && x2 >= x3);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x1 <= 4294967295;\nloop invariant 1 <= x2 <= 4294967295;\nloop invariant 1 <= x3 <= 4294967295;\nloop invariant 1 <= d1 <= 4294967295;\nloop invariant 1 <= d2 <= 4294967295;\nloop invariant 1 <= d3 <= 4294967295;\nloop invariant 0 <= v1 <= 2147483647;\nloop invariant 0 <= v2 <= 2147483647;\nloop invariant 0 <= v3 <= 2147483647;\nloop invariant c1 || c2;\nloop invariant c1 ==> x1>=d1;\nloop invariant c2 ==> x2>=d2;\nloop invariant !c1 ==> x3>=d3;\nloop invariant !c1 ==> x1<=x1+d1;\nloop invariant !c2 ==> x2<=x2+d2;\nloop invariant !c1 ==> x3<=x3+d3;\nloop invariant x1<=4294967295;\nloop invariant x2<=4294967295;\nloop invariant x3<=4294967295;\nloop invariant d1<=4294967295;\nloop invariant d2<=4294967295;\nloop invariant d3<=4294967295;\nloop invariant v1<=2147483647;\nloop invariant v2<=2147483647;\nloop invariant v3<=2147483647;\nloop invariant c1 || c2;\nloop invariant c1 ==> x1>=d1;\nloop invariant c2 ==> x2>=d2;\nloop invariant !c1 ==> x3>=d3;\nloop invariant !c1 ==> x1<=x1+d1;\nloop invariant !c2 ==> x2<=x2+d2;\nloop invariant !c1 ==> x3<=x3+d3;\nloop invariant x1<=4294967295;\nloop invariant x2<=4294967295;\nloop invariant x3<=4294967295;\nloop invariant d1<=4294967295;\nloop invariant d2<=4294967295;\nloop invariant d3<=4294967295;\nloop invariant v1<=2147483647;\nloop invariant v2<=2147483647;\nloop invariant v3<=2147483647;\nloop invariant c1 || c2;\nloop invariant c1 ==> x1>=d1;\nloop invariant c2 ==> x2>=d2;\nloop invariant !c1 ==> x3>=d3;\nloop invariant !c1 ==> x1<=x1+d1;\nloop invariant !c2 ==> x2<=x2+d2;\nloop invariant !c1 ==> x3<=x3+d3;\nloop invariant x1<=4294967295;\nloop invariant x2<=4294967295;\nloop invariant x3<=4294967295;\nloop invariant d1<=4294967295;\nloop invariant d2<=4294967295;\nloop invariant d3<=4294967295;\nloop invariant v1<=2147483647;\nloop invariant v2<=2147483647;\nloop invariant v3<=2147483647;\nloop invariant c1 || c2;\nloop invariant c1 ==> x1>=d1;\nloop invariant c2 ==> x2>=d2;\nloop invariant !c1 ==> x3>=d3;\nloop invariant !c1 ==> x1<=x1+d1;\nloop invariant !c2 ==> x2<=x2+d2;\nloop invariant !c1 ==> x3<=x3+d3;\nloop invariant x1<=4294967295;\nloop invariant x2<=4294967295;\nloop invariant x3<=4294967295;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 16,
                "annotations": "```\n/*@\nloop invariant x1 >= d1;\nloop invariant x2 >= d2;\nloop invariant x3 >= d3;\nloop invariant x1 <= x1max;\nloop invariant x2 <= x2max;\nloop invariant x3 <= x3max;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant x1max >= 0;\nloop invariant x2max >= 0;\nloop invariant x3max >= 0;\nloop invariant x1max >= x1;\nloop invariant x2max >= x2;\nloop invariant x3max >= x3;\nloop invariant x1 <= x1max + 1;\nloop invariant x2 <= x2max + 1;\nloop invariant x3 <= x3max + 1;\nloop invariant d1 <= 1;\nloop invariant d2 <= 1;\nloop invariant d3 <= 1;\nloop invariant x1max >= x1 + d1;\nloop invariant x2max >= x2 + d2;\nloop invariant x3max >= x3 + d3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  int v1, v2, v3;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\n\n\nloop invariant i7: d1 >= 0;\nloop invariant i8: d2 >= 0;\nloop invariant i9: d3 >= 0;\n\n\n\n\n\n\n\n\n\nloop invariant i19: d1 <= 1;\nloop invariant i20: d2 <= 1;\nloop invariant i21: d3 <= 1;\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant (x1 > 0 ==> x1 >= d1);\nloop invariant (x2 > 0 ==> x2 >= d2);\nloop invariant (x3 > 0 ==> x3 >= d3);\nloop invariant (c1 ==> d1 == 1);\nloop invariant (c2 ==> d2 == 1);\nloop invariant (c1 ==> d3 == 1);\nloop invariant (c2 ==> d3 == 1);\nloop invariant (x1 == 0 ==> x1 == d1);\nloop invariant (x2 == 0 ==> x2 == d2);\nloop invariant (x3 == 0 ==> x3 == d3);\nloop invariant (x1 == 0 ==> x1 >= d1);\nloop invariant (x2 == 0 ==> x2 >= d2);\nloop invariant (x3 == 0 ==> x3 >= d3);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  int v1, v2, v3;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: x1 >= 0;\nloop invariant i2: x2 >= 0;\nloop invariant i3: x3 >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x1 <= 2147483647;\nloop invariant 1 <= x2 <= 2147483647;\nloop invariant 1 <= x3 <= 2147483647;\nloop invariant 1 <= d1 <= 2147483647;\nloop invariant 1 <= d2 <= 2147483647;\nloop invariant 1 <= d3 <= 2147483647;\nloop invariant v1 >= -2147483648;\nloop invariant v1 <= 2147483647;\nloop invariant v2 >= -2147483648;\nloop invariant v2 <= 2147483647;\nloop invariant v3 >= -2147483648;\nloop invariant v3 <= 2147483647;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant v1 >= -2147483648;\nloop invariant v1 <= 2147483647;\nloop invariant v2 >= -2147483648;\nloop invariant v2 <= 2147483647;\nloop invariant v3 >= -2147483648;\nloop invariant v3 <= 2147483647;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant (d1 <= x1) ==> (x1 >= d1);\nloop invariant (d2 <= x2) ==> (x2 >= d2);\nloop invariant (d3 <= x3) ==> (x3 >= d3);\nloop invariant (d1 <= x1) ==> (x1 >= d1);\nloop invariant (d2 <= x2) ==> (x2 >= d2);\nloop invariant (d3 <= x3) ==> (x3 >= d3);\nloop invariant (d1 <= x1) ==> (x1 >= d1);\nloop invariant (d2 <= x2) ==> (x2 >= d2);\nloop invariant (d3 <= x3) ==> (x3 >= d3);\nloop invariant (d1 <= x1) ==> (x1 >= d1);\nloop invariant (d2 <= x2) ==> (x2 >= d2);\nloop invariant (d3 <= x3) ==> (x3 >= d3);\nloop invariant (d1 <= x1) ==> (x1 >= d1);\nloop invariant (d2 <= x2) ==> (x2 >= d2);\nloop invariant (d3 <= x3) ==> (x3 >= d3);\nloop invariant (d1 <= x1) ==> (x1 >= d1);\nloop invariant (d2 <= x2) ==> (x2 >= d2);\nloop invariant (d3 <= x3) ==> (x3 >= d3);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  int v1, v2, v3;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\nloop invariant i4: 1 <= d1 <= 2147483647;\nloop invariant i5: 1 <= d2 <= 2147483647;\nloop invariant i6: 1 <= d3 <= 2147483647;\nloop invariant i7: v1 >= -2147483648;\nloop invariant i8: v1 <= 2147483647;\nloop invariant i9: v2 >= -2147483648;\nloop invariant i10: v2 <= 2147483647;\nloop invariant i11: v3 >= -2147483648;\nloop invariant i12: v3 <= 2147483647;\n\n\nloop invariant i15: x1 >= 0;\nloop invariant i16: x2 >= 0;\nloop invariant i17: x3 >= 0;\nloop invariant i18: d1 >= 0;\nloop invariant i19: d2 >= 0;\nloop invariant i20: d3 >= 0;\nloop invariant i21: (d1 <= x1) ==> (x1 >= d1);\nloop invariant i22: (d2 <= x2) ==> (x2 >= d2);\nloop invariant i23: (d3 <= x3) ==> (x3 >= d3);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= d1 <= x1;\nloop invariant 0 <= d2 <= x2;\nloop invariant 0 <= d3 <= x3;\nloop invariant c1 && c2 ==> v1 == 0;\nloop invariant c2 && !c1 ==> v1 == v2;\nloop invariant c1 && !c2 ==> v1 == v3;\nloop invariant !c1 && !c2 ==> v1 <= v2;\nloop invariant !c1 && !c2 ==> v1 <= v3;\nloop invariant !c1 && !c2 ==> v2 <= v3;\nloop invariant x1 <= x2 ==> x1 <= x3;\nloop invariant x1 <= x3 ==> x2 <= x3;\nloop invariant x2 <= x1 ==> x1 <= x3;\nloop invariant x2 <= x3 ==> x1 <= x3;\nloop invariant x3 <= x1 ==> x1 <= x2;\nloop invariant x3 <= x2 ==> x1 <= x2;\nloop invariant x1 <= x2 ==> x3 <= x2;\nloop invariant x1 <= x3 ==> x3 <= x2;\nloop invariant x2 <= x1 ==> x3 <= x1;\nloop invariant x2 <= x3 ==> x3 <= x1;\nloop invariant x3 <= x1 ==> x3 <= x2;\nloop invariant x3 <= x2 ==> x3 <= x1;\nloop invariant v1 <= x1;\nloop invariant v2 <= x2;\nloop invariant v3 <= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant 0 <= d1 <= x1;\nloop invariant 0 <= d2 <= x2;\nloop invariant 0 <= d3 <= x3;\nloop invariant c1 && c2 ==> v1 == 0;\nloop invariant c2 && !c1 ==> v1 == v2;\nloop invariant c1 && !c2 ==> v1 == v3;\nloop invariant !c1 && !c2 ==> v1 <= v2;\nloop invariant !c1 && !c2 ==> v1 <= v3;\nloop invariant !c1 && !c2 ==> v2 <= v3;\nloop invariant x1 <= x2 ==> x1 <= x3;\nloop invariant x1 <= x3 ==> x2 <= x3;\nloop invariant x2 <= x1 ==> x1 <= x3;\nloop invariant x2 <= x3 ==> x1 <= x3;\nloop invariant x3 <= x1 ==> x1 <= x2;\nloop invariant x3 <= x2 ==> x1 <= x2;\nloop invariant x1 <= x2 ==> x3 <= x2;\nloop invariant x1 <= x3 ==> x3 <= x2;\nloop invariant x2 <= x1 ==> x3 <= x1;\nloop invariant x2 <= x3 ==> x3 <= x1;\nloop invariant x3 <= x1 ==> x3 <= x2;\nloop invariant x3 <= x2 ==> x3 <= x1;\nloop invariant v1 <= x1;\nloop invariant v2 <= x2;\nloop invariant v3 <= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant 0 <= d1 <= x1;\nloop invariant 0 <= d2 <= x2;\nloop invariant 0 <= d3 <= x3;\nloop invariant c1 && c2 ==> v1 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  int v1, v2, v3;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i25: x1 >= 0;\nloop invariant i26: x2 >= 0;\nloop invariant i27: x3 >= 0;\nloop invariant i28: d1 >= 0;\nloop invariant i29: d2 >= 0;\nloop invariant i30: d3 >= 0;\n\n\n\nloop invariant i34: c1 == 0 || c1 == 1;\nloop invariant i35: c2 == 0 || c2 == 1;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x1 <= x1 + d1;\nloop invariant 1 <= x2 <= x2 + d2;\nloop invariant 1 <= x3 <= x3 + d3;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 - d1;\nloop invariant x3 >= x2 - d2;\nloop invariant x3 >= x1 - d1 - d2;\nloop invariant x3 >= 0 ==> x1 >= 0 && x2 >= 0;\nloop invariant x2 >= x1 ==> x1 >= 0;\nloop invariant x1 >= 0 ==> x2 >= 0;\nloop invariant x3 >= x1 ==> x2 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant x1 >= 0 ==> x2 >= 0 && x3 >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  int v1, v2, v3;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\nloop invariant i4: x1 >= 0 && x2 >= 0 && x3 >= 0;\n\n\n\nloop invariant i8: x3 >= 0 ==> x1 >= 0 && x2 >= 0;\nloop invariant i9: x2 >= x1 ==> x1 >= 0;\nloop invariant i10: x1 >= 0 ==> x2 >= 0;\n\n\n\nloop invariant i14: x1 >= 0 ==> x2 >= 0 && x3 >= 0;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= 2147483647; loop invariant 0 <= x2 <= 2147483647; loop invariant 0 <= x3 <= 2147483647; loop invariant 0 <= d1 <= 2147483647; loop invariant 0 <= d2 <= 2147483647; loop invariant 0 <= d3 <= 2147483647; loop invariant 0 <= v1 <= 2147483647; loop invariant 0 <= v2 <= 2147483647; loop invariant 0 <= v3 <= 2147483647; loop invariant c1 == (_Bool)unknown_bool(); loop invariant c2 == (_Bool)unknown_bool(); loop invariant x1 >= 0; loop invariant x2 >= 0; loop invariant x3 >= 0; loop invariant d1 >= 0; loop invariant d2 >= 0; loop invariant d3 >= 0; loop invariant v1 >= 0; loop invariant v2 >= 0; loop invariant v3 >= 0; loop invariant c1 == (_Bool)unknown_bool(); loop invariant c2 == (_Bool)unknown_bool();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  int v1, v2, v3;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 11,
                "annotations": "```\n/*@\nloop invariant 1 <= x1 <= unknown_uint();\nloop invariant 1 <= x2 <= unknown_uint();\nloop invariant 1 <= x3 <= unknown_uint();\nloop invariant 0 <= d1 <= unknown_uint();\nloop invariant 0 <= d2 <= unknown_uint();\nloop invariant 0 <= d3 <= unknown_uint();\nloop invariant 0 <= v1 <= unknown_int();\nloop invariant 0 <= v2 <= unknown_int();\nloop invariant 0 <= v3 <= unknown_int();\nloop invariant unknown_bool() ==> (c1 == c1);\nloop invariant unknown_bool() ==> (c2 == c2);\nloop invariant x1 >= x2 ==> (x1 >= x2);\nloop invariant x1 >= x3 ==> (x1 >= x3);\nloop invariant x2 >= x3 ==> (x2 >= x3);\nloop invariant x1 >= d1 ==> (x1 >= d1);\nloop invariant x2 >= d2 ==> (x2 >= d2);\nloop invariant x3 >= d3 ==> (x3 >= d3);\nloop invariant (c1 && (x1 >= d1)) ==> (x1 >= x1 - d1);\nloop invariant (c2 && (x2 >= d2)) ==> (x2 >= x2 - d2);\nloop invariant ((!c1 && !c2) && (x3 >= d3)) ==> (x3 >= x3 - d3);\nloop invariant (x1 == 0) ==> (x1 == 0);\nloop invariant (x2 == 0) ==> (x2 == 0);\nloop invariant (x3 == 0) ==> (x3 == 0);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  int v1, v2, v3;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i12: x1 >= x2 ==> (x1 >= x2);\nloop invariant i13: x1 >= x3 ==> (x1 >= x3);\nloop invariant i14: x2 >= x3 ==> (x2 >= x3);\nloop invariant i15: x1 >= d1 ==> (x1 >= d1);\nloop invariant i16: x2 >= d2 ==> (x2 >= d2);\nloop invariant i17: x3 >= d3 ==> (x3 >= d3);\nloop invariant i18: (c1 && (x1 >= d1)) ==> (x1 >= x1 - d1);\nloop invariant i19: (c2 && (x2 >= d2)) ==> (x2 >= x2 - d2);\nloop invariant i20: ((!c1 && !c2) && (x3 >= d3)) ==> (x3 >= x3 - d3);\nloop invariant i21: (x1 == 0) ==> (x1 == 0);\nloop invariant i22: (x2 == 0) ==> (x2 == 0);\nloop invariant i23: (x3 == 0) ==> (x3 == 0);\nloop invariant i24: (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 && x1 <= 4294967295;\nloop invariant 0 <= x2 && x2 <= 4294967295;\nloop invariant 0 <= x3 && x3 <= 4294967295;\nloop invariant 0 <= d1 && d1 <= 4294967295;\nloop invariant 0 <= d2 && d2 <= 4294967295;\nloop invariant 0 <= d3 && d3 <= 4294967295;\nloop invariant 0 <= v1 && v1 <= 2147483647;\nloop invariant 0 <= v2 && v2 <= 2147483647;\nloop invariant 0 <= v3 && v3 <= 2147483647;\nloop invariant c1==unknown_bool();\nloop invariant c2==unknown_bool();\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant c1==unknown_bool();\nloop invariant c2==unknown_bool();\nloop invariant x1 <= 4294967295;\nloop invariant x2 <= 4294967295;\nloop invariant x3 <= 4294967295;\nloop invariant d1 <= 4294967295;\nloop invariant d2 <= 4294967295;\nloop invariant d3 <= 4294967295;\nloop invariant v1 <= 2147483647;\nloop invariant v2 <= 2147483647;\nloop invariant v3 <= 2147483647;\nloop invariant c1==unknown_bool();\nloop invariant c2==unknown_bool();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  int v1, v2, v3;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: 0 <= x1 && x1 <= 4294967295;\nloop invariant i2: 0 <= x2 && x2 <= 4294967295;\nloop invariant i3: 0 <= x3 && x3 <= 4294967295;\nloop invariant i4: 0 <= d1 && d1 <= 4294967295;\nloop invariant i5: 0 <= d2 && d2 <= 4294967295;\nloop invariant i6: 0 <= d3 && d3 <= 4294967295;\n\n\n\n\n\nloop invariant i12: x1 >= 0;\nloop invariant i13: x2 >= 0;\nloop invariant i14: x3 >= 0;\nloop invariant i15: d1 >= 0;\nloop invariant i16: d2 >= 0;\nloop invariant i17: d3 >= 0;\n\n\n\nloop invariant i21: x1 <= 4294967295;\nloop invariant i22: x2 <= 4294967295;\nloop invariant i23: x3 <= 4294967295;\nloop invariant i24: d1 <= 4294967295;\nloop invariant i25: d2 <= 4294967295;\nloop invariant i26: d3 <= 4294967295;\nloop invariant i27: v1 <= 2147483647;\nloop invariant i28: v2 <= 2147483647;\nloop invariant i29: v3 <= 2147483647;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= x1 + 1;\nloop invariant 0 <= x2 <= x2 + 1;\nloop invariant 0 <= x3 <= x3 + 1;\nloop invariant 0 <= d1 <= d1 + 1;\nloop invariant 0 <= d2 <= d2 + 1;\nloop invariant 0 <= d3 <= d3 + 1;\nloop invariant -1 <= v1 <= v1 + 1;\nloop invariant -1 <= v2 <= v2 + 1;\nloop invariant -1 <= v3 <= v3 + 1;\nloop invariant c1 == c1;\nloop invariant c2 == c2;\nloop invariant 0 <= x1 <= x1 + 1 ==> x1 <= x1;\nloop invariant 0 <= x2 <= x2 + 1 ==> x2 <= x2;\nloop invariant 0 <= x3 <= x3 + 1 ==> x3 <= x3;\nloop invariant 0 <= d1 <= d1 + 1 ==> d1 <= d1;\nloop invariant 0 <= d2 <= d2 + 1 ==> d2 <= d2;\nloop invariant 0 <= d3 <= d3 + 1 ==> d3 <= d3;\nloop invariant -1 <= v1 <= v1 + 1 ==> v1 <= v1;\nloop invariant -1 <= v2 <= v2 + 1 ==> v2 <= v2;\nloop invariant -1 <= v3 <= v3 + 1 ==> v3 <= v3;\nloop invariant c1 == c1 ==> c1 == c1;\nloop invariant c2 == c2 ==> c2 == c2;\nloop invariant 0 <= x1 <= x1 + 1 ==> x1 <= x1 + 1;\nloop invariant 0 <= x2 <= x2 + 1 ==> x2 <= x2 + 1;\nloop invariant 0 <= x3 <= x3 + 1 ==> x3 <= x3 + 1;\nloop invariant 0 <= d1 <= d1 + 1 ==> d1 <= d1 + 1;\nloop invariant 0 <= d2 <= d2 + 1 ==> d2 <= d2 + 1;\nloop invariant 0 <= d3 <= d3 + 1 ==> d3 <= d3 + 1;\nloop invariant -1 <= v1 <= v1 + 1 ==> v1 <= v1 + 1;\nloop invariant -1 <= v2 <= v2 + 1 ==> v2 <= v2 + 1;\nloop invariant -1 <= v3 <= v3 + 1 ==> v3 <= v3 + 1;\nloop invariant c1 == c1 ==> c1 == c1;\nloop invariant c2 == c2 ==> c2 == c2;\nloop invariant 0 <= x1 <= x1 + 1 ==> x1 <= x1 + 1;\nloop invariant 0 <= x2 <= x2 + 1 ==> x2 <= x2 + 1;\nloop invariant 0 <= x3 <= x3 + 1 ==> x3 <= x3 + 1;\nloop invariant 0 <= d1 <= d1 + 1 ==> d1 <= d1 + 1;\nloop invariant 0 <= d2 <= d2 + 1 ==> d2 <= d2 + 1;\nloop invariant 0 <= d3 <= d3 + 1 ==> d3 <= d3 + 1;\nloop invariant -1 <= v1 <= v1 + 1 ==> v1 <= v1 + 1;\nloop invariant -1 <= v2 <= v2 + 1 ==> v2 <= v2 + 1;\nloop invariant -1 <= v3 <= v3 + 1 ==> v3 <= v3 + 1;\nloop invariant c1 == c1 ==> c1 == c1;\nloop invariant c2 == c2 ==> c2 == c2;\nloop invariant 0 <= x1 <= x1 + 1 ==> x1 <= x1 + 1;\nloop invariant 0 <= x2 <= x2 + 1 ==> x2 <= x2 + 1;\nloop invariant 0 <= x3 <= x3 + 1 ==> x3 <= x3 + 1;\nloop invariant 0 <= d1 <= d1 + 1 ==> d1 <= d1 + 1;\nloop invariant 0 <= d2 <= d2 + 1 ==> d2 <= d2 + 1;\nloop invariant 0 <= d3 <= d3 + 1 ==> d3 <= d3 + 1;\nloop invariant -1 <= v1 <= v1 + 1 ==> v1 <= v1 + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  int v1, v2, v3;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: 0 <= x1 <= x1 + 1;\nloop invariant i2: 0 <= x2 <= x2 + 1;\nloop invariant i3: 0 <= x3 <= x3 + 1;\nloop invariant i4: 0 <= d1 <= d1 + 1;\nloop invariant i5: 0 <= d2 <= d2 + 1;\nloop invariant i6: 0 <= d3 <= d3 + 1;\n\n\n\nloop invariant i10: c1 == c1;\nloop invariant i11: c2 == c2;\nloop invariant i12: 0 <= x1 <= x1 + 1 ==> x1 <= x1;\nloop invariant i13: 0 <= x2 <= x2 + 1 ==> x2 <= x2;\nloop invariant i14: 0 <= x3 <= x3 + 1 ==> x3 <= x3;\nloop invariant i15: 0 <= d1 <= d1 + 1 ==> d1 <= d1;\nloop invariant i16: 0 <= d2 <= d2 + 1 ==> d2 <= d2;\nloop invariant i17: 0 <= d3 <= d3 + 1 ==> d3 <= d3;\nloop invariant i18: -1 <= v1 <= v1 + 1 ==> v1 <= v1;\nloop invariant i19: -1 <= v2 <= v2 + 1 ==> v2 <= v2;\nloop invariant i20: -1 <= v3 <= v3 + 1 ==> v3 <= v3;\nloop invariant i21: c1 == c1 ==> c1 == c1;\nloop invariant i22: c2 == c2 ==> c2 == c2;\nloop invariant i23: 0 <= x1 <= x1 + 1 ==> x1 <= x1 + 1;\nloop invariant i24: 0 <= x2 <= x2 + 1 ==> x2 <= x2 + 1;\nloop invariant i25: 0 <= x3 <= x3 + 1 ==> x3 <= x3 + 1;\nloop invariant i26: 0 <= d1 <= d1 + 1 ==> d1 <= d1 + 1;\nloop invariant i27: 0 <= d2 <= d2 + 1 ==> d2 <= d2 + 1;\nloop invariant i28: 0 <= d3 <= d3 + 1 ==> d3 <= d3 + 1;\nloop invariant i29: -1 <= v1 <= v1 + 1 ==> v1 <= v1 + 1;\nloop invariant i30: -1 <= v2 <= v2 + 1 ==> v2 <= v2 + 1;\nloop invariant i31: -1 <= v3 <= v3 + 1 ==> v3 <= v3 + 1;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 == 0 && x2 == 0 && x3 == 0;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> v1 == 0 && v2 == 0 && v3 == 0;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> c1 == 0 && c2 == 0;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> d1 == 0 && d2 == 0 && d3 == 0;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 == 0 && x2 == 0 && x3 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  int v1, v2, v3;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\nloop invariant i4: x1 >= 0;\nloop invariant i5: x2 >= 0;\nloop invariant i6: x3 >= 0;\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 12,
                "annotations": "```\n/*@\nloop invariant 1 <= x1 <= unknown_uint();\nloop invariant 1 <= x2 <= unknown_uint();\nloop invariant 1 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 >= d1 * (1 + x3) / 3;\nloop invariant x2 >= d2 * (1 + x3) / 3;\nloop invariant x3 >= d3 * (1 + x3) / 3;\nloop invariant x1 >= d1 * (1 + x2) / 2;\nloop invariant x2 >= d2 * (1 + x1) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\nloop invariant x3 >= d3 * (1 + x3) / 2;\nloop invariant x1 >= d1 * (1 + x1) / 2;\nloop invariant x2 >= d2 * (1 + x2) / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  int v1, v2, v3;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= 2147483647;\nloop invariant 0 <= x2 <= 2147483647;\nloop invariant 0 <= x3 <= 2147483647;\nloop invariant 0 <= d1 <= 2147483647;\nloop invariant 0 <= d2 <= 2147483647;\nloop invariant 0 <= d3 <= 2147483647;\nloop invariant c1 ==> ((x1 >= d1) && (x2 >= d2) && (x3 >= d3));\nloop invariant !c1 ==> ((x1 >= 0) && (x2 >= 0) && (x3 >= 0));\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x2 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  int v1, v2, v3;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\nloop invariant i4: 0 <= d1 <= 2147483647;\nloop invariant i5: 0 <= d2 <= 2147483647;\nloop invariant i6: 0 <= d3 <= 2147483647;\n\nloop invariant i8: !c1 ==> ((x1 >= 0) && (x2 >= 0) && (x3 >= 0));\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= d1 * unknown_uint() && 0 <= x2 <= d2 * unknown_uint() && 0 <= x3 <= d3 * unknown_uint();\nloop invariant 0 <= x1 <= d1 * unknown_uint() && 0 <= x2 <= d2 * unknown_uint() && 0 <= x3 <= d3 * unknown_uint() && x1>0 && x2>0 && x3>0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  int v1, v2, v3;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= v1 <= 2147483647;\nloop invariant 0 <= v2 <= 2147483647;\nloop invariant 0 <= v3 <= 2147483647;\nloop invariant 0 <= d1 <= 2147483647;\nloop invariant 0 <= d2 <= 2147483647;\nloop invariant 0 <= d3 <= 2147483647;\nloop invariant 0 <= x1 <= 4294967295;\nloop invariant 0 <= x2 <= 4294967295;\nloop invariant 0 <= x3 <= 4294967295;\nloop invariant x1>=x2;\nloop invariant x1>=x3;\nloop invariant x2>=x3;\nloop invariant (x1 <= v1) ==> (x1 == v1);\nloop invariant (x2 <= v2) ==> (x2 == v2);\nloop invariant (x3 <= v3) ==> (x3 == v3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 == v1 && x2 == v2 && x3 == v3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 >= x2 && x1 >= x3 && x2 >= x3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 <= v1 && x2 <= v2 && x3 <= v3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 >= x2 && x1 >= x3 && x2 >= x3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 == v1 && x2 == v2 && x3 == v3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 >= x2 && x1 >= x3 && x2 >= x3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 == v1 && x2 == v2 && x3 == v3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 >= x2 && x1 >= x3 && x2 >= x3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 == v1 && x2 == v2 && x3 == v3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 >= x2 && x1 >= x3 && x2 >= x3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 == v1 && x2 == v2 && x3 == v3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 >= x2 && x1 >= x3 && x2 >= x3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 == v1 && x2 == v2 && x3 == v3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 >= x2 && x1 >= x3 && x2 >= x3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 == v1 && x2 == v2 && x3 == v3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 >= x2 && x1 >= x3 && x2 >= x3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 == v1 && x2 == v2 && x3 == v3);\nloop invariant (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 >= x2 && x1 >= x3 && x2 >= x3);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  int v1, v2, v3;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\nloop invariant i4: 0 <= d1 <= 2147483647;\nloop invariant i5: 0 <= d2 <= 2147483647;\nloop invariant i6: 0 <= d3 <= 2147483647;\nloop invariant i7: 0 <= x1 <= 4294967295;\nloop invariant i8: 0 <= x2 <= 4294967295;\nloop invariant i9: 0 <= x3 <= 4294967295;\n\n\n\n\n\n\n\n\nloop invariant i18: (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 <= v1 && x2 <= v2 && x3 <= v3);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= x1 <= 4294967295;\nloop invariant 1 <= x2 <= 4294967295;\nloop invariant 1 <= x3 <= 4294967295;\nloop invariant 1 <= d1 <= 4294967295;\nloop invariant 1 <= d2 <= 4294967295;\nloop invariant 1 <= d3 <= 4294967295;\nloop invariant 0 <= v1 <= 2147483647;\nloop invariant 0 <= v2 <= 2147483647;\nloop invariant 0 <= v3 <= 2147483647;\nloop invariant c1 || c2;\nloop invariant c1 ==> x1>=d1;\nloop invariant c2 ==> x2>=d2;\nloop invariant !c1 ==> x3>=d3;\nloop invariant !c1 ==> x1<=x1+d1;\nloop invariant !c2 ==> x2<=x2+d2;\nloop invariant !c1 ==> x3<=x3+d3;\nloop invariant x1<=4294967295;\nloop invariant x2<=4294967295;\nloop invariant x3<=4294967295;\nloop invariant d1<=4294967295;\nloop invariant d2<=4294967295;\nloop invariant d3<=4294967295;\nloop invariant v1<=2147483647;\nloop invariant v2<=2147483647;\nloop invariant v3<=2147483647;\nloop invariant c1 || c2;\nloop invariant c1 ==> x1>=d1;\nloop invariant c2 ==> x2>=d2;\nloop invariant !c1 ==> x3>=d3;\nloop invariant !c1 ==> x1<=x1+d1;\nloop invariant !c2 ==> x2<=x2+d2;\nloop invariant !c1 ==> x3<=x3+d3;\nloop invariant x1<=4294967295;\nloop invariant x2<=4294967295;\nloop invariant x3<=4294967295;\nloop invariant d1<=4294967295;\nloop invariant d2<=4294967295;\nloop invariant d3<=4294967295;\nloop invariant v1<=2147483647;\nloop invariant v2<=2147483647;\nloop invariant v3<=2147483647;\nloop invariant c1 || c2;\nloop invariant c1 ==> x1>=d1;\nloop invariant c2 ==> x2>=d2;\nloop invariant !c1 ==> x3>=d3;\nloop invariant !c1 ==> x1<=x1+d1;\nloop invariant !c2 ==> x2<=x2+d2;\nloop invariant !c1 ==> x3<=x3+d3;\nloop invariant x1<=4294967295;\nloop invariant x2<=4294967295;\nloop invariant x3<=4294967295;\nloop invariant d1<=4294967295;\nloop invariant d2<=4294967295;\nloop invariant d3<=4294967295;\nloop invariant v1<=2147483647;\nloop invariant v2<=2147483647;\nloop invariant v3<=2147483647;\nloop invariant c1 || c2;\nloop invariant c1 ==> x1>=d1;\nloop invariant c2 ==> x2>=d2;\nloop invariant !c1 ==> x3>=d3;\nloop invariant !c1 ==> x1<=x1+d1;\nloop invariant !c2 ==> x2<=x2+d2;\nloop invariant !c1 ==> x3<=x3+d3;\nloop invariant x1<=4294967295;\nloop invariant x2<=4294967295;\nloop invariant x3<=4294967295;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  int v1, v2, v3;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\nloop invariant i4: 1 <= d1 <= 4294967295;\nloop invariant i5: 1 <= d2 <= 4294967295;\nloop invariant i6: 1 <= d3 <= 4294967295;\n\n\n\n\n\n\n\nloop invariant i14: !c1 ==> x1<=x1+d1;\nloop invariant i15: !c2 ==> x2<=x2+d2;\nloop invariant i16: !c1 ==> x3<=x3+d3;\nloop invariant i17: x1<=4294967295;\nloop invariant i18: x2<=4294967295;\nloop invariant i19: x3<=4294967295;\nloop invariant i20: d1<=4294967295;\nloop invariant i21: d2<=4294967295;\nloop invariant i22: d3<=4294967295;\nloop invariant i23: v1<=2147483647;\nloop invariant i24: v2<=2147483647;\nloop invariant i25: v3<=2147483647;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 73: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  int v1, v2, v3;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: x1 >= d1;\nloop invariant i2: x2 >= d2;\nloop invariant i3: x3 >= d3;\nloop invariant i4: x1 <= x1max;\nloop invariant i5: x2 <= x2max;\nloop invariant i6: x3 <= x3max;\nloop invariant i7: d1 >= 0;\nloop invariant i8: d2 >= 0;\nloop invariant i9: d3 >= 0;\nloop invariant i10: x1max >= 0;\nloop invariant i11: x2max >= 0;\nloop invariant i12: x3max >= 0;\nloop invariant i13: x1max >= x1;\nloop invariant i14: x2max >= x2;\nloop invariant i15: x3max >= x3;\nloop invariant i16: x1 <= x1max + 1;\nloop invariant i17: x2 <= x2max + 1;\nloop invariant i18: x3 <= x3max + 1;\nloop invariant i19: d1 <= 1;\nloop invariant i20: d2 <= 1;\nloop invariant i21: d3 <= 1;\nloop invariant i22: x1max >= x1 + d1;\nloop invariant i23: x2max >= x2 + d2;\nloop invariant i24: x3max >= x3 + d3;\nloop invariant i25: x1 >= 0;\nloop invariant i26: x2 >= 0;\nloop invariant i27: x3 >= 0;\nloop invariant i28: (x1 > 0 ==> x1 >= d1);\nloop invariant i29: (x2 > 0 ==> x2 >= d2);\nloop invariant i30: (x3 > 0 ==> x3 >= d3);\nloop invariant i31: (c1 ==> d1 == 1);\nloop invariant i32: (c2 ==> d2 == 1);\nloop invariant i33: (c1 ==> d3 == 1);\nloop invariant i34: (c2 ==> d3 == 1);\nloop invariant i35: (x1 == 0 ==> x1 == d1);\nloop invariant i36: (x2 == 0 ==> x2 == d2);\nloop invariant i37: (x3 == 0 ==> x3 == d3);\nloop invariant i38: (x1 == 0 ==> x1 >= d1);\nloop invariant i39: (x2 == 0 ==> x2 >= d2);\nloop invariant i40: (x3 == 0 ==> x3 >= d3);\nloop invariant i41: 1 <= x1 <= 2147483647;\nloop invariant i42: 1 <= x2 <= 2147483647;\nloop invariant i43: 1 <= x3 <= 2147483647;\nloop invariant i44: 1 <= d1 <= 2147483647;\nloop invariant i45: 1 <= d2 <= 2147483647;\nloop invariant i46: 1 <= d3 <= 2147483647;\nloop invariant i47: v1 >= -2147483648;\nloop invariant i48: v1 <= 2147483647;\nloop invariant i49: v2 >= -2147483648;\nloop invariant i50: v2 <= 2147483647;\nloop invariant i51: v3 >= -2147483648;\nloop invariant i52: v3 <= 2147483647;\nloop invariant i53: c1 == unknown_bool();\nloop invariant i54: c2 == unknown_bool();\nloop invariant i55: (d1 <= x1) ==> (x1 >= d1);\nloop invariant i56: (d2 <= x2) ==> (x2 >= d2);\nloop invariant i57: (d3 <= x3) ==> (x3 >= d3);\nloop invariant i58: 0 <= d1 <= x1;\nloop invariant i59: 0 <= d2 <= x2;\nloop invariant i60: 0 <= d3 <= x3;\nloop invariant i61: c1 && c2 ==> v1 == 0;\nloop invariant i62: c2 && !c1 ==> v1 == v2;\nloop invariant i63: c1 && !c2 ==> v1 == v3;\nloop invariant i64: !c1 && !c2 ==> v1 <= v2;\nloop invariant i65: !c1 && !c2 ==> v1 <= v3;\nloop invariant i66: !c1 && !c2 ==> v2 <= v3;\nloop invariant i67: x1 <= x2 ==> x1 <= x3;\nloop invariant i68: x1 <= x3 ==> x2 <= x3;\nloop invariant i69: x2 <= x1 ==> x1 <= x3;\nloop invariant i70: x2 <= x3 ==> x1 <= x3;\nloop invariant i71: x3 <= x1 ==> x1 <= x2;\nloop invariant i72: x3 <= x2 ==> x1 <= x2;\nloop invariant i73: x1 <= x2 ==> x3 <= x2;\nloop invariant i74: x1 <= x3 ==> x3 <= x2;\nloop invariant i75: x2 <= x1 ==> x3 <= x1;\nloop invariant i76: x2 <= x3 ==> x3 <= x1;\nloop invariant i77: x3 <= x1 ==> x3 <= x2;\nloop invariant i78: x3 <= x2 ==> x3 <= x1;\nloop invariant i79: v1 <= x1;\nloop invariant i80: v2 <= x2;\nloop invariant i81: v3 <= x3;\nloop invariant i82: v1 >= 0;\nloop invariant i83: v2 >= 0;\nloop invariant i84: v3 >= 0;\nloop invariant i85: c1 == 0 || c1 == 1;\nloop invariant i86: c2 == 0 || c2 == 1;\nloop invariant i87: 1 <= x1 <= x1 + d1;\nloop invariant i88: 1 <= x2 <= x2 + d2;\nloop invariant i89: 1 <= x3 <= x3 + d3;\nloop invariant i90: x1 >= 0 && x2 >= 0 && x3 >= 0;\nloop invariant i91: x2 >= x1 - d1;\nloop invariant i92: x3 >= x2 - d2;\nloop invariant i93: x3 >= x1 - d1 - d2;\nloop invariant i94: x3 >= 0 ==> x1 >= 0 && x2 >= 0;\nloop invariant i95: x2 >= x1 ==> x1 >= 0;\nloop invariant i96: x1 >= 0 ==> x2 >= 0;\nloop invariant i97: x3 >= x1 ==> x2 >= x1 - d1 - d2;\nloop invariant i98: x3 >= x2 ==> x1 >= x2 - d2;\nloop invariant i99: x2 >= x1 ==> x3 >= x1 - d1 - d2;\nloop invariant i100: x1 >= 0 ==> x2 >= 0 && x3 >= 0;\nloop invariant i101: 0 <= x1 <= 2147483647; loop invariant 0 <= x2 <= 2147483647; loop invariant 0 <= x3 <= 2147483647; loop invariant 0 <= d1 <= 2147483647; loop invariant 0 <= d2 <= 2147483647; loop invariant 0 <= d3 <= 2147483647; loop invariant 0 <= v1 <= 2147483647; loop invariant 0 <= v2 <= 2147483647; loop invariant 0 <= v3 <= 2147483647; loop invariant c1 == (_Bool)unknown_bool(); loop invariant c2 == (_Bool)unknown_bool(); loop invariant x1 >= 0; loop invariant x2 >= 0; loop invariant x3 >= 0; loop invariant d1 >= 0; loop invariant d2 >= 0; loop invariant d3 >= 0; loop invariant v1 >= 0; loop invariant v2 >= 0; loop invariant v3 >= 0; loop invariant c1 == (_Bool)unknown_bool(); loop invariant c2 == (_Bool)unknown_bool();\nloop invariant i102: 1 <= x1 <= unknown_uint();\nloop invariant i103: 1 <= x2 <= unknown_uint();\nloop invariant i104: 1 <= x3 <= unknown_uint();\nloop invariant i105: 0 <= d1 <= unknown_uint();\nloop invariant i106: 0 <= d2 <= unknown_uint();\nloop invariant i107: 0 <= d3 <= unknown_uint();\nloop invariant i108: 0 <= v1 <= unknown_int();\nloop invariant i109: 0 <= v2 <= unknown_int();\nloop invariant i110: 0 <= v3 <= unknown_int();\nloop invariant i111: unknown_bool() ==> (c1 == c1);\nloop invariant i112: unknown_bool() ==> (c2 == c2);\nloop invariant i113: x1 >= x2 ==> (x1 >= x2);\nloop invariant i114: x1 >= x3 ==> (x1 >= x3);\nloop invariant i115: x2 >= x3 ==> (x2 >= x3);\nloop invariant i116: x1 >= d1 ==> (x1 >= d1);\nloop invariant i117: x2 >= d2 ==> (x2 >= d2);\nloop invariant i118: x3 >= d3 ==> (x3 >= d3);\nloop invariant i119: (c1 && (x1 >= d1)) ==> (x1 >= x1 - d1);\nloop invariant i120: (c2 && (x2 >= d2)) ==> (x2 >= x2 - d2);\nloop invariant i121: ((!c1 && !c2) && (x3 >= d3)) ==> (x3 >= x3 - d3);\nloop invariant i122: (x1 == 0) ==> (x1 == 0);\nloop invariant i123: (x2 == 0) ==> (x2 == 0);\nloop invariant i124: (x3 == 0) ==> (x3 == 0);\nloop invariant i125: (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i126: 0 <= x1 && x1 <= 4294967295;\nloop invariant i127: 0 <= x2 && x2 <= 4294967295;\nloop invariant i128: 0 <= x3 && x3 <= 4294967295;\nloop invariant i129: 0 <= d1 && d1 <= 4294967295;\nloop invariant i130: 0 <= d2 && d2 <= 4294967295;\nloop invariant i131: 0 <= d3 && d3 <= 4294967295;\nloop invariant i132: 0 <= v1 && v1 <= 2147483647;\nloop invariant i133: 0 <= v2 && v2 <= 2147483647;\nloop invariant i134: 0 <= v3 && v3 <= 2147483647;\nloop invariant i135: c1==unknown_bool();\nloop invariant i136: c2==unknown_bool();\nloop invariant i137: x1 <= 4294967295;\nloop invariant i138: x2 <= 4294967295;\nloop invariant i139: x3 <= 4294967295;\nloop invariant i140: d1 <= 4294967295;\nloop invariant i141: d2 <= 4294967295;\nloop invariant i142: d3 <= 4294967295;\nloop invariant i143: 0 <= x1 <= x1 + 1;\nloop invariant i144: 0 <= x2 <= x2 + 1;\nloop invariant i145: 0 <= x3 <= x3 + 1;\nloop invariant i146: 0 <= d1 <= d1 + 1;\nloop invariant i147: 0 <= d2 <= d2 + 1;\nloop invariant i148: 0 <= d3 <= d3 + 1;\nloop invariant i149: -1 <= v1 <= v1 + 1;\nloop invariant i150: -1 <= v2 <= v2 + 1;\nloop invariant i151: -1 <= v3 <= v3 + 1;\nloop invariant i152: c1 == c1;\nloop invariant i153: c2 == c2;\nloop invariant i154: 0 <= x1 <= x1 + 1 ==> x1 <= x1;\nloop invariant i155: 0 <= x2 <= x2 + 1 ==> x2 <= x2;\nloop invariant i156: 0 <= x3 <= x3 + 1 ==> x3 <= x3;\nloop invariant i157: 0 <= d1 <= d1 + 1 ==> d1 <= d1;\nloop invariant i158: 0 <= d2 <= d2 + 1 ==> d2 <= d2;\nloop invariant i159: 0 <= d3 <= d3 + 1 ==> d3 <= d3;\nloop invariant i160: -1 <= v1 <= v1 + 1 ==> v1 <= v1;\nloop invariant i161: -1 <= v2 <= v2 + 1 ==> v2 <= v2;\nloop invariant i162: -1 <= v3 <= v3 + 1 ==> v3 <= v3;\nloop invariant i163: c1 == c1 ==> c1 == c1;\nloop invariant i164: c2 == c2 ==> c2 == c2;\nloop invariant i165: 0 <= x1 <= x1 + 1 ==> x1 <= x1 + 1;\nloop invariant i166: 0 <= x2 <= x2 + 1 ==> x2 <= x2 + 1;\nloop invariant i167: 0 <= x3 <= x3 + 1 ==> x3 <= x3 + 1;\nloop invariant i168: 0 <= d1 <= d1 + 1 ==> d1 <= d1 + 1;\nloop invariant i169: 0 <= d2 <= d2 + 1 ==> d2 <= d2 + 1;\nloop invariant i170: 0 <= d3 <= d3 + 1 ==> d3 <= d3 + 1;\nloop invariant i171: -1 <= v1 <= v1 + 1 ==> v1 <= v1 + 1;\nloop invariant i172: -1 <= v2 <= v2 + 1 ==> v2 <= v2 + 1;\nloop invariant i173: -1 <= v3 <= v3 + 1 ==> v3 <= v3 + 1;\nloop invariant i174: 1 <= d1 <= x1;\nloop invariant i175: 1 <= d2 <= x2;\nloop invariant i176: 1 <= d3 <= x3;\nloop invariant i177: x1 == 0 || x2 == 0 || x3 == 0 ==> x1 == 0 && x2 == 0 && x3 == 0;\nloop invariant i178: x1 == 0 || x2 == 0 || x3 == 0 ==> v1 == 0 && v2 == 0 && v3 == 0;\nloop invariant i179: x1 == 0 || x2 == 0 || x3 == 0 ==> c1 == 0 && c2 == 0;\nloop invariant i180: x1 == 0 || x2 == 0 || x3 == 0 ==> d1 == 0 && d2 == 0 && d3 == 0;\nloop invariant i181: 1 <= d1 <= unknown_uint();\nloop invariant i182: 1 <= d2 <= unknown_uint();\nloop invariant i183: 1 <= d3 <= unknown_uint();\nloop invariant i184: v1 == unknown_int();\nloop invariant i185: v2 == unknown_int();\nloop invariant i186: v3 == unknown_int();\nloop invariant i187: x1 >= d1 * (1 + x3) / 3;\nloop invariant i188: x2 >= d2 * (1 + x3) / 3;\nloop invariant i189: x3 >= d3 * (1 + x3) / 3;\nloop invariant i190: x1 >= d1 * (1 + x2) / 2;\nloop invariant i191: x2 >= d2 * (1 + x1) / 2;\nloop invariant i192: x1 >= d1 * (1 + x1) / 2;\nloop invariant i193: x2 >= d2 * (1 + x2) / 2;\nloop invariant i194: x3 >= d3 * (1 + x3) / 2;\nloop invariant i195: 0 <= x1 <= 2147483647;\nloop invariant i196: 0 <= x2 <= 2147483647;\nloop invariant i197: 0 <= x3 <= 2147483647;\nloop invariant i198: 0 <= d1 <= 2147483647;\nloop invariant i199: 0 <= d2 <= 2147483647;\nloop invariant i200: 0 <= d3 <= 2147483647;\nloop invariant i201: c1 ==> ((x1 >= d1) && (x2 >= d2) && (x3 >= d3));\nloop invariant i202: !c1 ==> ((x1 >= 0) && (x2 >= 0) && (x3 >= 0));\nloop invariant i203: (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant i204: (x1 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant i205: (x2 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant i206: (x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant i207: 0 <= x1 <= d1 * unknown_uint() && 0 <= x2 <= d2 * unknown_uint() && 0 <= x3 <= d3 * unknown_uint();\nloop invariant i208: 0 <= x1 <= d1 * unknown_uint() && 0 <= x2 <= d2 * unknown_uint() && 0 <= x3 <= d3 * unknown_uint() && x1>0 && x2>0 && x3>0;\nloop invariant i209: 0 <= v1 <= 2147483647;\nloop invariant i210: 0 <= v2 <= 2147483647;\nloop invariant i211: 0 <= v3 <= 2147483647;\nloop invariant i212: 0 <= x1 <= 4294967295;\nloop invariant i213: 0 <= x2 <= 4294967295;\nloop invariant i214: 0 <= x3 <= 4294967295;\nloop invariant i215: x1>=x2;\nloop invariant i216: x1>=x3;\nloop invariant i217: x2>=x3;\nloop invariant i218: (x1 <= v1) ==> (x1 == v1);\nloop invariant i219: (x2 <= v2) ==> (x2 == v2);\nloop invariant i220: (x3 <= v3) ==> (x3 == v3);\nloop invariant i221: (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 == v1 && x2 == v2 && x3 == v3);\nloop invariant i222: (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 >= x2 && x1 >= x3 && x2 >= x3);\nloop invariant i223: (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 <= v1 && x2 <= v2 && x3 <= v3);\nloop invariant i224: 1 <= x1 <= 4294967295;\nloop invariant i225: 1 <= x2 <= 4294967295;\nloop invariant i226: 1 <= x3 <= 4294967295;\nloop invariant i227: 1 <= d1 <= 4294967295;\nloop invariant i228: 1 <= d2 <= 4294967295;\nloop invariant i229: 1 <= d3 <= 4294967295;\nloop invariant i230: c1 || c2;\nloop invariant i231: c1 ==> x1>=d1;\nloop invariant i232: c2 ==> x2>=d2;\nloop invariant i233: !c1 ==> x3>=d3;\nloop invariant i234: !c1 ==> x1<=x1+d1;\nloop invariant i235: !c2 ==> x2<=x2+d2;\nloop invariant i236: !c1 ==> x3<=x3+d3;\nloop invariant i237: x1<=4294967295;\nloop invariant i238: x2<=4294967295;\nloop invariant i239: x3<=4294967295;\nloop invariant i240: d1<=4294967295;\nloop invariant i241: d2<=4294967295;\nloop invariant i242: d3<=4294967295;\nloop invariant i243: v1<=2147483647;\nloop invariant i244: v2<=2147483647;\nloop invariant i245: v3<=2147483647;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 51,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  int v1, v2, v3;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\n\n\nloop invariant i7: d1 >= 0;\nloop invariant i8: d2 >= 0;\nloop invariant i9: d3 >= 0;\n\n\n\n\n\n\n\n\n\nloop invariant i19: d1 <= 1;\nloop invariant i20: d2 <= 1;\nloop invariant i21: d3 <= 1;\n\n\n\nloop invariant i25: x1 >= 0;\nloop invariant i26: x2 >= 0;\nloop invariant i27: x3 >= 0;\nloop invariant i28: (x1 > 0 ==> x1 >= d1);\nloop invariant i29: (x2 > 0 ==> x2 >= d2);\nloop invariant i30: (x3 > 0 ==> x3 >= d3);\nloop invariant i31: (c1 ==> d1 == 1);\nloop invariant i32: (c2 ==> d2 == 1);\nloop invariant i33: (c1 ==> d3 == 1);\nloop invariant i34: (c2 ==> d3 == 1);\n\n\n\n\n\n\n\n\n\nloop invariant i44: 1 <= d1 <= 2147483647;\nloop invariant i45: 1 <= d2 <= 2147483647;\nloop invariant i46: 1 <= d3 <= 2147483647;\nloop invariant i47: v1 >= -2147483648;\nloop invariant i48: v1 <= 2147483647;\nloop invariant i49: v2 >= -2147483648;\nloop invariant i50: v2 <= 2147483647;\nloop invariant i51: v3 >= -2147483648;\nloop invariant i52: v3 <= 2147483647;\n\n\nloop invariant i55: (d1 <= x1) ==> (x1 >= d1);\nloop invariant i56: (d2 <= x2) ==> (x2 >= d2);\nloop invariant i57: (d3 <= x3) ==> (x3 >= d3);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i85: c1 == 0 || c1 == 1;\nloop invariant i86: c2 == 0 || c2 == 1;\n\n\n\nloop invariant i90: x1 >= 0 && x2 >= 0 && x3 >= 0;\n\n\n\nloop invariant i94: x3 >= 0 ==> x1 >= 0 && x2 >= 0;\nloop invariant i95: x2 >= x1 ==> x1 >= 0;\nloop invariant i96: x1 >= 0 ==> x2 >= 0;\n\n\n\nloop invariant i100: x1 >= 0 ==> x2 >= 0 && x3 >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i113: x1 >= x2 ==> (x1 >= x2);\nloop invariant i114: x1 >= x3 ==> (x1 >= x3);\nloop invariant i115: x2 >= x3 ==> (x2 >= x3);\nloop invariant i116: x1 >= d1 ==> (x1 >= d1);\nloop invariant i117: x2 >= d2 ==> (x2 >= d2);\nloop invariant i118: x3 >= d3 ==> (x3 >= d3);\nloop invariant i119: (c1 && (x1 >= d1)) ==> (x1 >= x1 - d1);\nloop invariant i120: (c2 && (x2 >= d2)) ==> (x2 >= x2 - d2);\nloop invariant i121: ((!c1 && !c2) && (x3 >= d3)) ==> (x3 >= x3 - d3);\nloop invariant i122: (x1 == 0) ==> (x1 == 0);\nloop invariant i123: (x2 == 0) ==> (x2 == 0);\nloop invariant i124: (x3 == 0) ==> (x3 == 0);\nloop invariant i125: (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i126: 0 <= x1 && x1 <= 4294967295;\nloop invariant i127: 0 <= x2 && x2 <= 4294967295;\nloop invariant i128: 0 <= x3 && x3 <= 4294967295;\nloop invariant i129: 0 <= d1 && d1 <= 4294967295;\nloop invariant i130: 0 <= d2 && d2 <= 4294967295;\nloop invariant i131: 0 <= d3 && d3 <= 4294967295;\n\n\n\n\n\nloop invariant i137: x1 <= 4294967295;\nloop invariant i138: x2 <= 4294967295;\nloop invariant i139: x3 <= 4294967295;\nloop invariant i140: d1 <= 4294967295;\nloop invariant i141: d2 <= 4294967295;\nloop invariant i142: d3 <= 4294967295;\nloop invariant i143: 0 <= x1 <= x1 + 1;\nloop invariant i144: 0 <= x2 <= x2 + 1;\nloop invariant i145: 0 <= x3 <= x3 + 1;\nloop invariant i146: 0 <= d1 <= d1 + 1;\nloop invariant i147: 0 <= d2 <= d2 + 1;\nloop invariant i148: 0 <= d3 <= d3 + 1;\n\n\n\nloop invariant i152: c1 == c1;\nloop invariant i153: c2 == c2;\nloop invariant i154: 0 <= x1 <= x1 + 1 ==> x1 <= x1;\nloop invariant i155: 0 <= x2 <= x2 + 1 ==> x2 <= x2;\nloop invariant i156: 0 <= x3 <= x3 + 1 ==> x3 <= x3;\nloop invariant i157: 0 <= d1 <= d1 + 1 ==> d1 <= d1;\nloop invariant i158: 0 <= d2 <= d2 + 1 ==> d2 <= d2;\nloop invariant i159: 0 <= d3 <= d3 + 1 ==> d3 <= d3;\nloop invariant i160: -1 <= v1 <= v1 + 1 ==> v1 <= v1;\nloop invariant i161: -1 <= v2 <= v2 + 1 ==> v2 <= v2;\nloop invariant i162: -1 <= v3 <= v3 + 1 ==> v3 <= v3;\nloop invariant i163: c1 == c1 ==> c1 == c1;\nloop invariant i164: c2 == c2 ==> c2 == c2;\nloop invariant i165: 0 <= x1 <= x1 + 1 ==> x1 <= x1 + 1;\nloop invariant i166: 0 <= x2 <= x2 + 1 ==> x2 <= x2 + 1;\nloop invariant i167: 0 <= x3 <= x3 + 1 ==> x3 <= x3 + 1;\nloop invariant i168: 0 <= d1 <= d1 + 1 ==> d1 <= d1 + 1;\nloop invariant i169: 0 <= d2 <= d2 + 1 ==> d2 <= d2 + 1;\nloop invariant i170: 0 <= d3 <= d3 + 1 ==> d3 <= d3 + 1;\nloop invariant i171: -1 <= v1 <= v1 + 1 ==> v1 <= v1 + 1;\nloop invariant i172: -1 <= v2 <= v2 + 1 ==> v2 <= v2 + 1;\nloop invariant i173: -1 <= v3 <= v3 + 1 ==> v3 <= v3 + 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i189: x3 >= d3 * (1 + x3) / 3;\n\n\nloop invariant i192: x1 >= d1 * (1 + x1) / 2;\nloop invariant i193: x2 >= d2 * (1 + x2) / 2;\nloop invariant i194: x3 >= d3 * (1 + x3) / 2;\n\n\n\nloop invariant i198: 0 <= d1 <= 2147483647;\nloop invariant i199: 0 <= d2 <= 2147483647;\nloop invariant i200: 0 <= d3 <= 2147483647;\n\nloop invariant i202: !c1 ==> ((x1 >= 0) && (x2 >= 0) && (x3 >= 0));\n\n\n\n\n\n\n\n\n\nloop invariant i212: 0 <= x1 <= 4294967295;\nloop invariant i213: 0 <= x2 <= 4294967295;\nloop invariant i214: 0 <= x3 <= 4294967295;\n\n\n\n\n\n\n\n\nloop invariant i223: (x1 <= v1 && x2 <= v2 && x3 <= v3) ==> (x1 <= v1 && x2 <= v2 && x3 <= v3);\n\n\n\nloop invariant i227: 1 <= d1 <= 4294967295;\nloop invariant i228: 1 <= d2 <= 4294967295;\nloop invariant i229: 1 <= d3 <= 4294967295;\n\n\n\n\nloop invariant i234: !c1 ==> x1<=x1+d1;\nloop invariant i235: !c2 ==> x2<=x2+d2;\nloop invariant i236: !c1 ==> x3<=x3+d3;\nloop invariant i237: x1<=4294967295;\nloop invariant i238: x2<=4294967295;\nloop invariant i239: x3<=4294967295;\nloop invariant i240: d1<=4294967295;\nloop invariant i241: d2<=4294967295;\nloop invariant i242: d3<=4294967295;\nloop invariant i243: v1<=2147483647;\nloop invariant i244: v2<=2147483647;\nloop invariant i245: v3<=2147483647;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n    v1 = unknown_int();\n    v2 = unknown_int();\n    v3 = unknown_int();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c"
        ],
        "skipped": [],
        "total": 96,
        "success_count": 82,
        "failure_count": 14,
        "success_rate": 0.8541666666666666
    }
}