{
    "logs": {
        "file": "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_unsafe1.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  while (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant y = 2^x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 128;\nloop invariant y = 2^x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 64;\nloop invariant x + 1 == y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant y == 2^x;\nloop invariant y != 12 ==> x != 3;\nloop invariant x != 6 ==> y != 65536;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 128;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 5;\nloop invariant 1 <= y <= 64;\nloop invariant y == 2^x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 2^x <= y <= 2^(x+1);\nloop invariant x + 1 <= 6 ==> y != 12;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 128;\nloop invariant y == 2^x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 5;\nloop invariant 1 <= y <= 32;\nloop invariant (x + 1) * y == (2 ** (x + 1));\nloop invariant x * y == 2 ** (x + 1) - 1;\nloop invariant !((x < 6) && (y == 12));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 5;\nloop invariant 1 <= y <= 64;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 64;\nloop invariant x <= y;\nloop invariant x >= 0;\nloop invariant y >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 2^x <= y <= 2^(x+1);\nloop invariant y == 2^(x+1);\nloop invariant x < 6 ==> y != 12;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant y = 2^x;\nloop invariant y != 12 ==> x < 6;\nloop invariant y != 12 ==> x >= 0;\nloop invariant y != 12 ==> y != 1;\nloop invariant y != 12 ==> y != 2;\nloop invariant y != 12 ==> y != 4;\nloop invariant y != 12 ==> y != 8;\nloop invariant y != 12 ==> y != 16;\nloop invariant y != 12 ==> y != 32;\nloop invariant y != 12 ==> y != 64;\nloop invariant y != 12 ==> y != 128;\nloop invariant y != 12 ==> y != 256;\nloop invariant y != 12 ==> y != 512;\nloop invariant y != 12 ==> y != 1024;\nloop invariant y != 12 ==> y != 2048;\nloop invariant y != 12 ==> y != 4096;\nloop invariant y != 12 ==> y != 8192;\nloop invariant y != 12 ==> y != 16384;\nloop invariant y != 12 ==> y != 32768;\nloop invariant y != 12 ==> y != 65536;\nloop invariant y != 12 ==> y != 131072;\nloop invariant y != 12 ==> y != 262144;\nloop invariant y != 12 ==> y != 524288;\nloop invariant y != 12 ==> y != 1048576;\nloop invariant y != 12 ==> y != 2097152;\nloop invariant y != 12 ==> y != 4194304;\nloop invariant y != 12 ==> y != 8388608;\nloop invariant y != 12 ==> y != 16777216;\nloop invariant y != 12 ==> y != 33554432;\nloop invariant y != 12 ==> y != 67108864;\nloop invariant y != 12 ==> y != 134217728;\nloop invariant y != 12 ==> y != 268435456;\nloop invariant y != 12 ==> y != 536870912;\nloop invariant y != 12 ==> y != 1073741824;\nloop invariant y != 12 ==> y != 2147483648;\nloop invariant y != 12 ==> y != 4294967296;\nloop invariant y != 12 ==> y != 8589934592;\nloop invariant y != 12 ==> y != 17179869184;\nloop invariant y != 12 ==> y != 34359738368;\nloop invariant y != 12 ==> y != 68719476736;\nloop invariant y != 12 ==> y != 137438953472;\nloop invariant y != 12 ==> y != 274877906944;\nloop invariant y != 12 ==> y != 549755813888;\nloop invariant y != 12 ==> y != 1099511627776;\nloop invariant y != 12 ==> y != 2199023255552;\nloop invariant y != 12 ==> y != 4398046511104;\nloop invariant y != 12 ==> y != 8796093022208;\nloop invariant y != 12 ==> y != 17592186044416;\nloop invariant y != 12 ==> y != 35184372088832;\nloop invariant y != 12 ==> y != 70368744177664;\nloop invariant y != 12 ==> y != 140737488355328;\n*/\n```",
            "```\n/*@\nloop invariant y = 2^x - 1;\nloop invariant 0 <= x <= 6;\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 5;\nloop invariant y = (1 << x);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant y = 2^x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 128;\nloop invariant y = 2^x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\n\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 64;\nloop invariant x + 1 == y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\n\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant y == 2^x;\nloop invariant y != 12 ==> x != 3;\nloop invariant x != 6 ==> y != 65536;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\n\n\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 128;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 5;\nloop invariant 1 <= y <= 64;\nloop invariant y == 2^x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\n\n\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 2^x <= y <= 2^(x+1);\nloop invariant x + 1 <= 6 ==> y != 12;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\n\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 128;\nloop invariant y == 2^x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\n\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 5;\nloop invariant 1 <= y <= 32;\nloop invariant (x + 1) * y == (2 ** (x + 1));\nloop invariant x * y == 2 ** (x + 1) - 1;\nloop invariant !((x < 6) && (y == 12));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\n\n\n\n\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 5;\nloop invariant 1 <= y <= 64;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\n\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 1 <= y <= 64;\nloop invariant x <= y;\nloop invariant x >= 0;\nloop invariant y >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\n\n\nloop invariant i4: x >= 0;\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant 2^x <= y <= 2^(x+1);\nloop invariant y == 2^(x+1);\nloop invariant x < 6 ==> y != 12;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\n\n\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 6;\nloop invariant y = 2^x;\nloop invariant y != 12 ==> x < 6;\nloop invariant y != 12 ==> x >= 0;\nloop invariant y != 12 ==> y != 1;\nloop invariant y != 12 ==> y != 2;\nloop invariant y != 12 ==> y != 4;\nloop invariant y != 12 ==> y != 8;\nloop invariant y != 12 ==> y != 16;\nloop invariant y != 12 ==> y != 32;\nloop invariant y != 12 ==> y != 64;\nloop invariant y != 12 ==> y != 128;\nloop invariant y != 12 ==> y != 256;\nloop invariant y != 12 ==> y != 512;\nloop invariant y != 12 ==> y != 1024;\nloop invariant y != 12 ==> y != 2048;\nloop invariant y != 12 ==> y != 4096;\nloop invariant y != 12 ==> y != 8192;\nloop invariant y != 12 ==> y != 16384;\nloop invariant y != 12 ==> y != 32768;\nloop invariant y != 12 ==> y != 65536;\nloop invariant y != 12 ==> y != 131072;\nloop invariant y != 12 ==> y != 262144;\nloop invariant y != 12 ==> y != 524288;\nloop invariant y != 12 ==> y != 1048576;\nloop invariant y != 12 ==> y != 2097152;\nloop invariant y != 12 ==> y != 4194304;\nloop invariant y != 12 ==> y != 8388608;\nloop invariant y != 12 ==> y != 16777216;\nloop invariant y != 12 ==> y != 33554432;\nloop invariant y != 12 ==> y != 67108864;\nloop invariant y != 12 ==> y != 134217728;\nloop invariant y != 12 ==> y != 268435456;\nloop invariant y != 12 ==> y != 536870912;\nloop invariant y != 12 ==> y != 1073741824;\nloop invariant y != 12 ==> y != 2147483648;\nloop invariant y != 12 ==> y != 4294967296;\nloop invariant y != 12 ==> y != 8589934592;\nloop invariant y != 12 ==> y != 17179869184;\nloop invariant y != 12 ==> y != 34359738368;\nloop invariant y != 12 ==> y != 68719476736;\nloop invariant y != 12 ==> y != 137438953472;\nloop invariant y != 12 ==> y != 274877906944;\nloop invariant y != 12 ==> y != 549755813888;\nloop invariant y != 12 ==> y != 1099511627776;\nloop invariant y != 12 ==> y != 2199023255552;\nloop invariant y != 12 ==> y != 4398046511104;\nloop invariant y != 12 ==> y != 8796093022208;\nloop invariant y != 12 ==> y != 17592186044416;\nloop invariant y != 12 ==> y != 35184372088832;\nloop invariant y != 12 ==> y != 70368744177664;\nloop invariant y != 12 ==> y != 140737488355328;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\n\n\nloop invariant i4: y != 12 ==> x >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i37: y != 12 ==> y != 4294967296;\nloop invariant i38: y != 12 ==> y != 8589934592;\nloop invariant i39: y != 12 ==> y != 17179869184;\nloop invariant i40: y != 12 ==> y != 34359738368;\nloop invariant i41: y != 12 ==> y != 68719476736;\nloop invariant i42: y != 12 ==> y != 137438953472;\nloop invariant i43: y != 12 ==> y != 274877906944;\nloop invariant i44: y != 12 ==> y != 549755813888;\nloop invariant i45: y != 12 ==> y != 1099511627776;\nloop invariant i46: y != 12 ==> y != 2199023255552;\nloop invariant i47: y != 12 ==> y != 4398046511104;\nloop invariant i48: y != 12 ==> y != 8796093022208;\nloop invariant i49: y != 12 ==> y != 17592186044416;\nloop invariant i50: y != 12 ==> y != 35184372088832;\nloop invariant i51: y != 12 ==> y != 70368744177664;\nloop invariant i52: y != 12 ==> y != 140737488355328;\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant y = 2^x - 1;\nloop invariant 0 <= x <= 6;\nloop invariant y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\n\nloop invariant i2: 0 <= x <= 6;\nloop invariant i3: y >= 0;\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 5;\nloop invariant y = (1 << x);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\n\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 13: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\nloop invariant i2: y = 2^x;\nloop invariant i3: 1 <= y <= 128;\nloop invariant i4: 1 <= y <= 64;\nloop invariant i5: x + 1 == y;\nloop invariant i6: y == 2^x;\nloop invariant i7: y != 12 ==> x != 3;\nloop invariant i8: x != 6 ==> y != 65536;\nloop invariant i9: 0 <= x <= 5;\nloop invariant i10: 2^x <= y <= 2^(x+1);\nloop invariant i11: x + 1 <= 6 ==> y != 12;\nloop invariant i12: 1 <= y <= 32;\nloop invariant i13: (x + 1) * y == (2 ** (x + 1));\nloop invariant i14: x * y == 2 ** (x + 1) - 1;\nloop invariant i15: !((x < 6) && (y == 12));\nloop invariant i16: x <= y;\nloop invariant i17: x >= 0;\nloop invariant i18: y >= 1;\nloop invariant i19: y == 2^(x+1);\nloop invariant i20: x < 6 ==> y != 12;\nloop invariant i21: y != 12 ==> x < 6;\nloop invariant i22: y != 12 ==> x >= 0;\nloop invariant i23: y != 12 ==> y != 1;\nloop invariant i24: y != 12 ==> y != 2;\nloop invariant i25: y != 12 ==> y != 4;\nloop invariant i26: y != 12 ==> y != 8;\nloop invariant i27: y != 12 ==> y != 16;\nloop invariant i28: y != 12 ==> y != 32;\nloop invariant i29: y != 12 ==> y != 64;\nloop invariant i30: y != 12 ==> y != 128;\nloop invariant i31: y != 12 ==> y != 256;\nloop invariant i32: y != 12 ==> y != 512;\nloop invariant i33: y != 12 ==> y != 1024;\nloop invariant i34: y != 12 ==> y != 2048;\nloop invariant i35: y != 12 ==> y != 4096;\nloop invariant i36: y != 12 ==> y != 8192;\nloop invariant i37: y != 12 ==> y != 16384;\nloop invariant i38: y != 12 ==> y != 32768;\nloop invariant i39: y != 12 ==> y != 65536;\nloop invariant i40: y != 12 ==> y != 131072;\nloop invariant i41: y != 12 ==> y != 262144;\nloop invariant i42: y != 12 ==> y != 524288;\nloop invariant i43: y != 12 ==> y != 1048576;\nloop invariant i44: y != 12 ==> y != 2097152;\nloop invariant i45: y != 12 ==> y != 4194304;\nloop invariant i46: y != 12 ==> y != 8388608;\nloop invariant i47: y != 12 ==> y != 16777216;\nloop invariant i48: y != 12 ==> y != 33554432;\nloop invariant i49: y != 12 ==> y != 67108864;\nloop invariant i50: y != 12 ==> y != 134217728;\nloop invariant i51: y != 12 ==> y != 268435456;\nloop invariant i52: y != 12 ==> y != 536870912;\nloop invariant i53: y != 12 ==> y != 1073741824;\nloop invariant i54: y != 12 ==> y != 2147483648;\nloop invariant i55: y != 12 ==> y != 4294967296;\nloop invariant i56: y != 12 ==> y != 8589934592;\nloop invariant i57: y != 12 ==> y != 17179869184;\nloop invariant i58: y != 12 ==> y != 34359738368;\nloop invariant i59: y != 12 ==> y != 68719476736;\nloop invariant i60: y != 12 ==> y != 137438953472;\nloop invariant i61: y != 12 ==> y != 274877906944;\nloop invariant i62: y != 12 ==> y != 549755813888;\nloop invariant i63: y != 12 ==> y != 1099511627776;\nloop invariant i64: y != 12 ==> y != 2199023255552;\nloop invariant i65: y != 12 ==> y != 4398046511104;\nloop invariant i66: y != 12 ==> y != 8796093022208;\nloop invariant i67: y != 12 ==> y != 17592186044416;\nloop invariant i68: y != 12 ==> y != 35184372088832;\nloop invariant i69: y != 12 ==> y != 70368744177664;\nloop invariant i70: y != 12 ==> y != 140737488355328;\nloop invariant i71: y = 2^x - 1;\nloop invariant i72: y >= 0;\nloop invariant i73: y = (1 << x);\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
        "combined_annotation_num_solver_calls": 17,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n  unsigned int y = 1;\n\n  /*@\nloop invariant i1: 0 <= x <= 6;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i17: x >= 0;\n\n\n\n\nloop invariant i22: y != 12 ==> x >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i55: y != 12 ==> y != 4294967296;\nloop invariant i56: y != 12 ==> y != 8589934592;\nloop invariant i57: y != 12 ==> y != 17179869184;\nloop invariant i58: y != 12 ==> y != 34359738368;\nloop invariant i59: y != 12 ==> y != 68719476736;\nloop invariant i60: y != 12 ==> y != 137438953472;\nloop invariant i61: y != 12 ==> y != 274877906944;\nloop invariant i62: y != 12 ==> y != 549755813888;\nloop invariant i63: y != 12 ==> y != 1099511627776;\nloop invariant i64: y != 12 ==> y != 2199023255552;\nloop invariant i65: y != 12 ==> y != 4398046511104;\nloop invariant i66: y != 12 ==> y != 8796093022208;\nloop invariant i67: y != 12 ==> y != 17592186044416;\nloop invariant i68: y != 12 ==> y != 35184372088832;\nloop invariant i69: y != 12 ==> y != 70368744177664;\nloop invariant i70: y != 12 ==> y != 140737488355328;\n\nloop invariant i72: y >= 0;\n\n*/\nwhile (x < 6) {\n    x++;\n    y *= 2;\n  }\n\n  {;\n//@ assert(y != 12);\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/popl.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/05.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/07.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/37.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/39.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv_simp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/xy10.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/const_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe3.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe4.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_safe2.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/pldi082_unbounded.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_unsafe1.c"
        ],
        "skipped": [],
        "total": 145,
        "success_count": 119,
        "failure_count": 26,
        "success_rate": 0.8206896551724138
    }
}