{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n       int x, y, flag;\n       x=0;\n       y=0;\n       flag=0;\n       while (flag < 1) {\n               if (x<=50)\n                       y=y+1;\n               else\n                       y=y-1;\n               \n               if (y<0) {\n                       flag=1;\n               }\n               if (flag < 1) {\n                       x=x+1;\n               }\n       }\n\n\t{;\n//@ assert(x<=102);\n}\n\n\t{;\n//@ assert(y<=51);\n}\n\n\treturn 0;\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= 102;\nloop invariant 0 <= y <= 51;\nloop invariant !flag ==> x <= 50;\nloop invariant flag ==> x > 50;\nloop invariant !flag ==> y >= 0;\nloop invariant flag ==> y < 0;\nloop invariant !flag ==> x < 50;\nloop invariant flag ==> x >= 50;\nloop invariant !flag ==> x < y;\nloop invariant flag ==> x >= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 51;\nloop invariant flag == (x <= 50);\nloop invariant flag == (y >= 0);\nloop invariant flag < 1 ==> x <= 102;\nloop invariant flag < 1 ==> y <= 51;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 51;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 50;\nloop invariant 0 <= y <= 50;\nloop invariant x <= 102;\nloop invariant y <= 51;\nloop invariant x <= 102 ==> x <= y;\nloop invariant y <= 51 ==> y <= x;\nloop invariant x <= 102 ==> flag == 0;\nloop invariant y <= 51 ==> flag == 0;\nloop invariant flag == 0 ==> x <= 102;\nloop invariant flag == 0 ==> y <= 51;\nloop invariant flag == 0 ==> x <= y;\nloop invariant flag == 0 ==> y <= x;\nloop invariant flag == 1 ==> x <= 102;\nloop invariant flag == 1 ==> y <= 51;\nloop invariant flag == 1 ==> x <= y;\nloop invariant flag == 1 ==> y <= x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 50;\nloop invariant flag == 0 || flag == 1;\nloop invariant (if (flag < 1) ==> x <= 102);\nloop invariant (if (flag < 1) ==> y <= 51);\nloop invariant (if (flag < 1) ==> flag == 0);\nloop invariant (if (flag < 1) ==> x + y <= 102);\nloop invariant (if (flag < 1) ==> x + y >= 0);\nloop invariant (if (flag < 1) ==> x + y == 102);\nloop invariant (if (flag < 1) ==> x == 102 - y);\nloop invariant (if (flag < 1) ==> x == 101 - y);\nloop invariant (if (flag < 1) ==> x == 100 - y);\nloop invariant (if (flag < 1) ==> x == 99 - y);\nloop invariant (if (flag < 1) ==> x == 98 - y);\nloop invariant (if (flag < 1) ==> x == 97 - y);\nloop invariant (if (flag < 1) ==> x == 96 - y);\nloop invariant (if (flag < 1) ==> x == 95 - y);\nloop invariant (if (flag < 1) ==> x == 94 - y);\nloop invariant (if (flag < 1) ==> x == 93 - y);\nloop invariant (if (flag < 1) ==> x == 92 - y);\nloop invariant (if (flag < 1) ==> x == 91 - y);\nloop invariant (if (flag < 1) ==> x == 90 - y);\nloop invariant (if (flag < 1) ==> x == 89 - y);\nloop invariant (if (flag < 1) ==> x == 88 - y);\nloop invariant (if (flag < 1) ==> x == 87 - y);\nloop invariant (if (flag < 1) ==> x == 86 - y);\nloop invariant (if (flag < 1) ==> x == 85 - y);\nloop invariant (if (flag < 1) ==> x == 84 - y);\nloop invariant (if (flag < 1) ==> x == 83 - y);\nloop invariant (if (flag < 1) ==> x == 82 - y);\nloop invariant (if (flag < 1) ==> x == 81 - y);\nloop invariant (if (flag < 1) ==> x == 80 - y);\nloop invariant (if (flag < 1) ==> x == 79 - y);\nloop invariant (if (flag < 1) ==> x == 78 - y);\nloop invariant (if (flag < 1) ==> x == 77 - y);\nloop invariant (if (flag < 1) ==> x == 76 - y);\nloop invariant (if (flag < 1) ==> x == 75 - y);\nloop invariant (if (flag < 1) ==> x == 74 - y);\nloop invariant (if (flag < 1) ==> x == 73 - y);\nloop invariant (if (flag < 1) ==> x == 72 - y);\nloop invariant (if (flag < 1) ==> x == 71 - y);\nloop invariant (if (flag < 1) ==> x == 70 - y);\nloop invariant (if (flag < 1) ==> x == 69 - y);\nloop invariant (if (flag < 1) ==> x == 68 - y);\nloop invariant (if (flag < 1) ==> x == 67 - y);\nloop invariant (if (flag < 1) ==> x == 66 - y);\nloop invariant (if (flag < 1) ==> x == 65 - y);\nloop invariant (if (flag < 1) ==> x == 64 - y);\nloop invariant (if (flag < 1) ==> x == 63 - y);\nloop invariant (if (flag < 1) ==> x == 62 - y);\nloop invariant (if (flag < 1) ==> x == 61 - y);\nloop invariant (if (flag < 1) ==> x == 60 - y);\nloop invariant (if (flag < 1) ==> x == 59 - y);\n*/\n```",
            "```\n/*@\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 51;\nloop invariant 0 <= flag <= 1;\nloop invariant (flag == 1) ==> (x <= 102);\nloop invariant (flag == 1) ==> (y <= 51);\nloop invariant (x <= 50) ==> (y >= 0);\nloop invariant (flag == 1) ==> (x >= 0);\nloop invariant (flag == 1) ==> (y >= 0);\nloop invariant (flag == 0) ==> (x >= 0);\nloop invariant (flag == 0) ==> (y >= 0);\nloop invariant (flag == 0) ==> (x <= 50);\nloop invariant (flag == 0) ==> (y <= 51);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 51;\nloop invariant x >= -51;\nloop invariant y >= -51;\nloop invariant flag == 0;\nloop invariant flag == 1 ==> x <= 102;\nloop invariant flag == 1 ==> y <= 51;\nloop invariant flag == 1 ==> x <= 102 ==> y <= 51;\nloop invariant flag == 1 ==> y <= 51 ==> x <= 102;\nloop invariant flag == 1 ==> x <= 102 ==> y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 51;\nloop invariant x <= 102;\nloop invariant y <= 51;\nloop invariant flag == 0 || flag == 1;\nloop invariant flag == 0 ==> x <= 50 && y == 0;\nloop invariant flag == 1 ==> x <= 102 && y <= 0;\nloop invariant flag == 0 ==> x <= 102 ==> x <= 50;\nloop invariant flag == 1 ==> x <= 102 ==> x <= 102;\nloop invariant flag == 0 ==> y <= 51 ==> y <= 0;\nloop invariant flag == 1 ==> y <= 51 ==> y <= 0;\nloop invariant flag == 0 ==> y <= 51 ==> y <= 51;\nloop invariant flag == 1 ==> y <= 51 ==> y <= 0;\nloop invariant flag == 0 ==> flag == 0;\nloop invariant flag == 1 ==> flag == 1;\nloop invariant flag == 0 ==> flag == 0 ==> flag == 0;\nloop invariant flag == 1 ==> flag == 1 ==> flag == 1;\nloop invariant flag == 0 ==> flag == 1 ==> flag == 0;\nloop invariant flag == 1 ==> flag == 0 ==> flag == 1;\nloop invariant flag == 0 ==> flag == 0 ==> flag == 0 ==> flag == 0;\nloop invariant flag == 1 ==> flag == 1 ==> flag == 1 ==> flag == 1;\nloop invariant flag == 0 ==> flag == 1 ==> flag == 0 ==> flag == 0;\nloop invariant flag == 1 ==> flag == 0 ==> flag == 1 ==> flag == 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 102;\nloop invariant 0 <= y <= 51;\nloop invariant flag == 0 || flag == 1;\nloop invariant x <= 102 ==> (flag == 0 ==> x <= 50) ==> y <= 51;\nloop invariant y <= 51 ==> (flag == 0 ==> y >= 0) ==> x <= 102;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\n*/\n```",
            "```\n/*@\nloop invariant ( x <= 50 ) ==> ( y <= 102 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 51;\nloop invariant x <= 102;\nloop invariant y <= 101;\nloop invariant flag == 0;\nloop invariant flag == 1;\nloop invariant flag == 0 ==> x == 51;\nloop invariant flag == 0 ==> y == -1;\nloop invariant flag == 1 ==> x == 102;\nloop invariant flag == 1 ==> y == 51;\nloop invariant flag == 0 ==> x <= y;\nloop invariant flag == 1 ==> x >= y;\nloop invariant flag == 0 ==> x + y <= 101;\nloop invariant flag == 1 ==> x + y >= 101;\nloop invariant flag == 0 ==> x + y <= 101 ==> x <= 50;\nloop invariant flag == 0 ==> x + y >= 101 ==> x >= 51;\nloop invariant flag == 1 ==> x + y <= 101 ==> x <= 101;\nloop invariant flag == 1 ==> x + y >= 101 ==> x >= 101;\nloop invariant flag == 0 ==> x + y <= 101 ==> y <= 50;\nloop invariant flag == 0 ==> x + y >= 101 ==> y >= 51;\nloop invariant flag == 1 ==> x + y <= 101 ==> y <= 100;\nloop invariant flag == 1 ==> x + y >= 101 ==> y >= 0;\nloop invariant flag == 0 ==> x + y <= 101 ==> x + y <= 102;\nloop invariant flag == 0 ==> x + y >= 101 ==> x + y >= 102;\nloop invariant flag == 1 ==> x + y <= 101 ==> x + y <= 152;\nloop invariant flag == 1 ==> x + y >= 101 ==> x + y >= 152;\nloop invariant flag == 0 ==> x + y <= 101 ==> x + y <= 102 ==> x <= 50;\nloop invariant flag == 0 ==> x + y >= 101 ==> x + y >= 102 ==> x >= 51;\nloop invariant flag == 1 ==> x + y <= 101 ==> x + y <= 152 ==> x <= 101;\nloop invariant flag == 1 ==> x + y >= 101 ==> x + y >= 152 ==> x >= 101;\nloop invariant flag == 0 ==> x + y <= 101 ==> x + y <= 102 ==> y <= 50;\nloop invariant flag == 0 ==> x + y >= 101 ==> x + y >= 102 ==> y >= 51;\nloop invariant flag == 1 ==> x + y <= 101 ==> x + y <= 152 ==> y <= 100;\nloop invariant flag == 1 ==> x + y >= 101 ==> x + y >= 152 ==> y >= 0;\nloop invariant flag == 0 ==> x + y <= 101 ==> x + y <= 102 ==> x + y <= 102;\nloop invariant flag == 0 ==> x + y >= 101 ==> x + y >= 102 ==> x + y >= 102;\nloop invariant flag == 1 ==> x + y <= 101 ==> x + y <= 152 ==> x + y <= 152;\nloop invariant flag == 1 ==> x + y >= 101 ==> x + y >= 152 ==> x + y >= 152;\nloop invariant flag == 0 ==> x + y <= 101 ==> x + y <= 102 ==> x + y <= 102 ==> x <= 50;\nloop invariant flag == 0 ==> x + y >= 101 ==> x + y >= 102 ==> x + y >= 102 ==> x >= 51;\nloop invariant flag == 1 ==> x + y <= 101 ==> x + y <= 152 ==> x + y <= 152 ==> x <= 101;\nloop invariant flag == 1 ==> x + y >= 101 ==> x + y >= 152 ==> x + y >= 152 ==> x >= 101;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= flag <= 1;\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 51;\nloop invariant flag ==> x <= 51;\nloop invariant !(flag ==> x <= 51) ==> x <= 51;\nloop invariant flag ==> y <= 52;\nloop invariant !(flag ==> y <= 52) ==> y <= 52;\nloop invariant flag ==> x <= 102;\nloop invariant !(flag ==> x <= 102) ==> x <= 102;\nloop invariant flag ==> y <= 53;\nloop invariant !(flag ==> y <= 53) ==> y <= 53;\nloop invariant flag ==> x <= 103;\nloop invariant !(flag ==> x <= 103) ==> x <= 103;\nloop invariant flag ==> y <= 54;\nloop invariant !(flag ==> y <= 54) ==> y <= 54;\nloop invariant flag ==> x <= 104;\nloop invariant !(flag ==> x <= 104) ==> x <= 104;\nloop invariant flag ==> y <= 55;\nloop invariant !(flag ==> y <= 55) ==> y <= 55;\nloop invariant flag ==> x <= 105;\nloop invariant !(flag ==> x <= 105) ==> x <= 105;\nloop invariant flag ==> y <= 56;\nloop invariant !(flag ==> y <= 56) ==> y <= 56;\nloop invariant flag ==> x <= 106;\nloop invariant !(flag ==> x <= 106) ==> x <= 106;\nloop invariant flag ==> y <= 57;\nloop invariant !(flag ==> y <= 57) ==> y <= 57;\nloop invariant flag ==> x <= 107;\nloop invariant !(flag ==> x <= 107) ==> x <= 107;\nloop invariant flag ==> y <= 58;\nloop invariant !(flag ==> y <= 58) ==> y <= 58;\nloop invariant flag ==> x <= 108;\nloop invariant !(flag ==> x <= 108) ==> x <= 108;\nloop invariant flag ==> y <= 59;\nloop invariant !(flag ==> y <= 59) ==> y <= 59;\nloop invariant flag ==> x <= 109;\nloop invariant !(flag ==> x <= 109) ==> x <= 109;\nloop invariant flag ==> y <= 60;\nloop invariant !(flag ==> y <= 60) ==> y <= 60;\nloop invariant flag ==> x <= 110;\nloop invariant !(flag ==> x <= 110) ==> x <= 110;\nloop invariant flag ==> y <= 61;\nloop invariant !(flag ==> y <= 61) ==> y <= 61;\nloop invariant flag ==> x <= 111;\nloop invariant !(flag ==> x <= 111) ==> x <= 111;\nloop invariant flag ==> y <= 62;\nloop invariant !(flag ==> y <= 62) ==> y <= 62;\nloop invariant flag ==> x <= 112;\nloop invariant !(flag ==> x <= 112) ==> x <= 112;\nloop invariant flag ==> y <= 63;\nloop invariant !(flag ==> y <= 63) ==> y <= 63;\nloop invariant flag ==> x <= 113;\nloop invariant !(flag ==> x <= 113) ==> x <= 113;\nloop invariant flag ==> y <= 64;\nloop invariant !(flag ==> y <= 64) ==> y <= 64;\nloop invariant flag ==> x <= 114;\nloop invariant !(flag ==> x <= 114) ==> x <= 114;\nloop invariant flag ==> y <= 65;\nloop invariant !(flag ==> y <= 65) ==> y <= 65;\nloop invariant flag ==> x <= 115;\nloop invariant !(flag ==> x <= 115) ==> x <= 115;\nloop invariant flag ==> y <= 66;\nloop invariant !(flag ==> y <= 66) ==> y <= 66;\nloop invariant flag ==> x <= 116;\nloop invariant !(flag ==> x <= 116) ==> x <= 116;\nloop invariant flag ==> y <= 67;\nloop invariant !(flag ==> y <= 67) ==> y <= 67;\nloop invariant flag ==> x <= 117;\n*/\n```",
            "```\n/*@\nloop invariant ( x <= 50 ) ==> ( x <= 102 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x > 50 ) ==> ( x <= 102 );\nloop invariant ( x > 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( x <= y );\nloop invariant ( x > 50 ) ==> ( x <= y );\nloop invariant ( x <= 50 ) ==> ( y >= 1 );\nloop invariant ( x > 50 ) ==> ( y >= 1 );\nloop invariant ( x <= 50 ) ==> ( x >= 0 );\nloop invariant ( x > 50 ) ==> ( x >= 0 );\nloop invariant ( x <= 50 ) ==> ( y >= 0 );\nloop invariant ( x > 50 ) ==> ( y >= 0 );\nloop invariant ( x <= 50 ) ==> ( y <= x );\nloop invariant ( x > 50 ) ==> ( y <= x );\nloop invariant ( x <= 50 ) ==> ( y >= x - 50 );\nloop invariant ( x > 50 ) ==> ( y >= x - 50 );\nloop invariant ( x <= 50 ) ==> ( x - y <= 50 );\nloop invariant ( x > 50 ) ==> ( x - y <= 50 );\nloop invariant ( x <= 50 ) ==> ( x - y >= 0 );\nloop invariant ( x > 50 ) ==> ( x - y >= 0 );\nloop invariant ( x <= 50 ) ==> ( x <= 102 );\nloop invariant ( x > 50 ) ==> ( x <= 102 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x > 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( x <= y );\nloop invariant ( x > 50 ) ==> ( x <= y );\nloop invariant ( x <= 50 ) ==> ( y >= 1 );\nloop invariant ( x > 50 ) ==> ( y >= 1 );\nloop invariant ( x <= 50 ) ==> ( x >= 0 );\nloop invariant ( x > 50 ) ==> ( x >= 0 );\nloop invariant ( x <= 50 ) ==> ( y >= 0 );\nloop invariant ( x > 50 ) ==> ( y >= 0 );\nloop invariant ( x <= 50 ) ==> ( y <= x );\nloop invariant ( x > 50 ) ==> ( y <= x );\nloop invariant ( x <= 50 ) ==> ( y >= x - 50 );\nloop invariant ( x > 50 ) ==> ( y >= x - 50 );\nloop invariant ( x <= 50 ) ==> ( x - y <= 50 );\nloop invariant ( x > 50 ) ==> ( x - y <= 50 );\nloop invariant ( x <= 50 ) ==> ( x - y >= 0 );\nloop invariant ( x > 50 ) ==> ( x - y >= 0 );\nloop invariant ( x <= 50 ) ==> ( x <= 102 );\nloop invariant ( x > 50 ) ==> ( x <= 102 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x > 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( x <= y );\nloop invariant ( x > 50 ) ==> ( x <= y );\nloop invariant ( x <= 50 ) ==> ( y >= 1 );\nloop invariant ( x > 50 ) ==> ( y >= 1 );\nloop invariant ( x <= 50 ) ==> ( x >= 0 );\nloop invariant ( x > 50 ) ==> ( x >= 0 );\nloop invariant ( x <= 50 ) ==> ( y >= 0 );\nloop invariant ( x > 50 ) ==> ( y >= 0 );\nloop invariant ( x <= 50 ) ==> ( y <= x );\nloop invariant ( x > 50 ) ==> ( y <= x );\nloop invariant ( x <= 50 ) ==> ( y >= x - 50 );\nloop invariant ( x > 50 ) ==> ( y >= x - 50 );\nloop invariant ( x <= 50 ) ==> ( x - y <= 50 );\nloop invariant ( x > 50 ) ==> ( x - y <= 50 );\nloop invariant ( x <= 50 ) ==> ( x - y >= 0 );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 51;\nloop invariant 0 <= x <= 102;\nloop invariant flag == 0 ==> x <= 50;\nloop invariant flag == 0 ==> y == x + 1;\nloop invariant flag == 1 ==> x <= 102;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 102;\nloop invariant 0 <= y <= 51;\nloop invariant !flag ==> x <= 50;\nloop invariant flag ==> x > 50;\nloop invariant !flag ==> y >= 0;\nloop invariant flag ==> y < 0;\nloop invariant !flag ==> x < 50;\nloop invariant flag ==> x >= 50;\nloop invariant !flag ==> x < y;\nloop invariant flag ==> x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n       int x, y, flag;\n       x=0;\n       y=0;\n       flag=0;\n       /*@\n\n\n\nloop invariant i4: flag ==> x > 50;\nloop invariant i5: !flag ==> y >= 0;\nloop invariant i6: flag ==> y < 0;\n\nloop invariant i8: flag ==> x >= 50;\n\nloop invariant i10: flag ==> x >= y;\n*/\nwhile (flag < 1) {\n               if (x<=50)\n                       y=y+1;\n               else\n                       y=y-1;\n               \n               if (y<0) {\n                       flag=1;\n               }\n               if (flag < 1) {\n                       x=x+1;\n               }\n       }\n\n\t{;\n//@ assert(x<=102);\n}\n\n\t{;\n//@ assert(y<=51);\n}\n\n\treturn 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 51;\nloop invariant flag == (x <= 50);\nloop invariant flag == (y >= 0);\nloop invariant flag < 1 ==> x <= 102;\nloop invariant flag < 1 ==> y <= 51;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\nloop invariant flag < 1 ==> y >= 0;\nloop invariant flag < 1 ==> x <= y;\nloop invariant flag < 1 ==> x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n       int x, y, flag;\n       x=0;\n       y=0;\n       flag=0;\n       /*@\n\n\n\n\n\n\nloop invariant i7: flag < 1 ==> x >= 0;\nloop invariant i8: flag < 1 ==> y >= 0;\n\n*/\nwhile (flag < 1) {\n               if (x<=50)\n                       y=y+1;\n               else\n                       y=y-1;\n               \n               if (y<0) {\n                       flag=1;\n               }\n               if (flag < 1) {\n                       x=x+1;\n               }\n       }\n\n\t{;\n//@ assert(x<=102);\n}\n\n\t{;\n//@ assert(y<=51);\n}\n\n\treturn 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 51;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n       int x, y, flag;\n       x=0;\n       y=0;\n       flag=0;\n       /*@\n\n\n*/\nwhile (flag < 1) {\n               if (x<=50)\n                       y=y+1;\n               else\n                       y=y-1;\n               \n               if (y<0) {\n                       flag=1;\n               }\n               if (flag < 1) {\n                       x=x+1;\n               }\n       }\n\n\t{;\n//@ assert(x<=102);\n}\n\n\t{;\n//@ assert(y<=51);\n}\n\n\treturn 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 50;\nloop invariant 0 <= y <= 50;\nloop invariant x <= 102;\nloop invariant y <= 51;\nloop invariant x <= 102 ==> x <= y;\nloop invariant y <= 51 ==> y <= x;\nloop invariant x <= 102 ==> flag == 0;\nloop invariant y <= 51 ==> flag == 0;\nloop invariant flag == 0 ==> x <= 102;\nloop invariant flag == 0 ==> y <= 51;\nloop invariant flag == 0 ==> x <= y;\nloop invariant flag == 0 ==> y <= x;\nloop invariant flag == 1 ==> x <= 102;\nloop invariant flag == 1 ==> y <= 51;\nloop invariant flag == 1 ==> x <= y;\nloop invariant flag == 1 ==> y <= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n       int x, y, flag;\n       x=0;\n       y=0;\n       flag=0;\n       /*@\n\n\n\n\n\n\n\n\n\nloop invariant i10: flag == 0 ==> y <= 51;\n\nloop invariant i12: flag == 0 ==> y <= x;\n\nloop invariant i14: flag == 1 ==> y <= 51;\n\n\n*/\nwhile (flag < 1) {\n               if (x<=50)\n                       y=y+1;\n               else\n                       y=y-1;\n               \n               if (y<0) {\n                       flag=1;\n               }\n               if (flag < 1) {\n                       x=x+1;\n               }\n       }\n\n\t{;\n//@ assert(x<=102);\n}\n\n\t{;\n//@ assert(y<=51);\n}\n\n\treturn 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 52,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 50;\nloop invariant flag == 0 || flag == 1;\nloop invariant (if (flag < 1) ==> x <= 102);\nloop invariant (if (flag < 1) ==> y <= 51);\nloop invariant (if (flag < 1) ==> flag == 0);\nloop invariant (if (flag < 1) ==> x + y <= 102);\nloop invariant (if (flag < 1) ==> x + y >= 0);\nloop invariant (if (flag < 1) ==> x + y == 102);\nloop invariant (if (flag < 1) ==> x == 102 - y);\nloop invariant (if (flag < 1) ==> x == 101 - y);\nloop invariant (if (flag < 1) ==> x == 100 - y);\nloop invariant (if (flag < 1) ==> x == 99 - y);\nloop invariant (if (flag < 1) ==> x == 98 - y);\nloop invariant (if (flag < 1) ==> x == 97 - y);\nloop invariant (if (flag < 1) ==> x == 96 - y);\nloop invariant (if (flag < 1) ==> x == 95 - y);\nloop invariant (if (flag < 1) ==> x == 94 - y);\nloop invariant (if (flag < 1) ==> x == 93 - y);\nloop invariant (if (flag < 1) ==> x == 92 - y);\nloop invariant (if (flag < 1) ==> x == 91 - y);\nloop invariant (if (flag < 1) ==> x == 90 - y);\nloop invariant (if (flag < 1) ==> x == 89 - y);\nloop invariant (if (flag < 1) ==> x == 88 - y);\nloop invariant (if (flag < 1) ==> x == 87 - y);\nloop invariant (if (flag < 1) ==> x == 86 - y);\nloop invariant (if (flag < 1) ==> x == 85 - y);\nloop invariant (if (flag < 1) ==> x == 84 - y);\nloop invariant (if (flag < 1) ==> x == 83 - y);\nloop invariant (if (flag < 1) ==> x == 82 - y);\nloop invariant (if (flag < 1) ==> x == 81 - y);\nloop invariant (if (flag < 1) ==> x == 80 - y);\nloop invariant (if (flag < 1) ==> x == 79 - y);\nloop invariant (if (flag < 1) ==> x == 78 - y);\nloop invariant (if (flag < 1) ==> x == 77 - y);\nloop invariant (if (flag < 1) ==> x == 76 - y);\nloop invariant (if (flag < 1) ==> x == 75 - y);\nloop invariant (if (flag < 1) ==> x == 74 - y);\nloop invariant (if (flag < 1) ==> x == 73 - y);\nloop invariant (if (flag < 1) ==> x == 72 - y);\nloop invariant (if (flag < 1) ==> x == 71 - y);\nloop invariant (if (flag < 1) ==> x == 70 - y);\nloop invariant (if (flag < 1) ==> x == 69 - y);\nloop invariant (if (flag < 1) ==> x == 68 - y);\nloop invariant (if (flag < 1) ==> x == 67 - y);\nloop invariant (if (flag < 1) ==> x == 66 - y);\nloop invariant (if (flag < 1) ==> x == 65 - y);\nloop invariant (if (flag < 1) ==> x == 64 - y);\nloop invariant (if (flag < 1) ==> x == 63 - y);\nloop invariant (if (flag < 1) ==> x == 62 - y);\nloop invariant (if (flag < 1) ==> x == 61 - y);\nloop invariant (if (flag < 1) ==> x == 60 - y);\nloop invariant (if (flag < 1) ==> x == 59 - y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n       int x, y, flag;\n       x=0;\n       y=0;\n       flag=0;\n       /*@\n\n\nloop invariant i3: flag == 0 || flag == 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (flag < 1) {\n               if (x<=50)\n                       y=y+1;\n               else\n                       y=y-1;\n               \n               if (y<0) {\n                       flag=1;\n               }\n               if (flag < 1) {\n                       x=x+1;\n               }\n       }\n\n\t{;\n//@ assert(x<=102);\n}\n\n\t{;\n//@ assert(y<=51);\n}\n\n\treturn 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\nloop invariant ( x <= 51 );\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= 51 );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n       int x, y, flag;\n       x=0;\n       y=0;\n       flag=0;\n       /*@\n\n\nloop invariant i3: ( x >= 0 );\n\n*/\nwhile (flag < 1) {\n               if (x<=50)\n                       y=y+1;\n               else\n                       y=y-1;\n               \n               if (y<0) {\n                       flag=1;\n               }\n               if (flag < 1) {\n                       x=x+1;\n               }\n       }\n\n\t{;\n//@ assert(x<=102);\n}\n\n\t{;\n//@ assert(y<=51);\n}\n\n\treturn 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 51;\nloop invariant 0 <= flag <= 1;\nloop invariant (flag == 1) ==> (x <= 102);\nloop invariant (flag == 1) ==> (y <= 51);\nloop invariant (x <= 50) ==> (y >= 0);\nloop invariant (flag == 1) ==> (x >= 0);\nloop invariant (flag == 1) ==> (y >= 0);\nloop invariant (flag == 0) ==> (x >= 0);\nloop invariant (flag == 0) ==> (y >= 0);\nloop invariant (flag == 0) ==> (x <= 50);\nloop invariant (flag == 0) ==> (y <= 51);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n       int x, y, flag;\n       x=0;\n       y=0;\n       flag=0;\n       /*@\n\n\nloop invariant i3: 0 <= flag <= 1;\n\nloop invariant i5: (flag == 1) ==> (y <= 51);\nloop invariant i6: (x <= 50) ==> (y >= 0);\nloop invariant i7: (flag == 1) ==> (x >= 0);\n\nloop invariant i9: (flag == 0) ==> (x >= 0);\nloop invariant i10: (flag == 0) ==> (y >= 0);\n\n\n*/\nwhile (flag < 1) {\n               if (x<=50)\n                       y=y+1;\n               else\n                       y=y-1;\n               \n               if (y<0) {\n                       flag=1;\n               }\n               if (flag < 1) {\n                       x=x+1;\n               }\n       }\n\n\t{;\n//@ assert(x<=102);\n}\n\n\t{;\n//@ assert(y<=51);\n}\n\n\treturn 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 51;\nloop invariant x >= -51;\nloop invariant y >= -51;\nloop invariant flag == 0;\nloop invariant flag == 1 ==> x <= 102;\nloop invariant flag == 1 ==> y <= 51;\nloop invariant flag == 1 ==> x <= 102 ==> y <= 51;\nloop invariant flag == 1 ==> y <= 51 ==> x <= 102;\nloop invariant flag == 1 ==> x <= 102 ==> y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n       int x, y, flag;\n       x=0;\n       y=0;\n       flag=0;\n       /*@\n\nloop invariant i2: x >= -51;\n\n\n\nloop invariant i6: flag == 1 ==> y <= 51;\nloop invariant i7: flag == 1 ==> x <= 102 ==> y <= 51;\n\n\n*/\nwhile (flag < 1) {\n               if (x<=50)\n                       y=y+1;\n               else\n                       y=y-1;\n               \n               if (y<0) {\n                       flag=1;\n               }\n               if (flag < 1) {\n                       x=x+1;\n               }\n       }\n\n\t{;\n//@ assert(x<=102);\n}\n\n\t{;\n//@ assert(y<=51);\n}\n\n\treturn 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 51;\nloop invariant x <= 102;\nloop invariant y <= 51;\nloop invariant flag == 0 || flag == 1;\nloop invariant flag == 0 ==> x <= 50 && y == 0;\nloop invariant flag == 1 ==> x <= 102 && y <= 0;\nloop invariant flag == 0 ==> x <= 102 ==> x <= 50;\nloop invariant flag == 1 ==> x <= 102 ==> x <= 102;\nloop invariant flag == 0 ==> y <= 51 ==> y <= 0;\nloop invariant flag == 1 ==> y <= 51 ==> y <= 0;\nloop invariant flag == 0 ==> y <= 51 ==> y <= 51;\nloop invariant flag == 1 ==> y <= 51 ==> y <= 0;\nloop invariant flag == 0 ==> flag == 0;\nloop invariant flag == 1 ==> flag == 1;\nloop invariant flag == 0 ==> flag == 0 ==> flag == 0;\nloop invariant flag == 1 ==> flag == 1 ==> flag == 1;\nloop invariant flag == 0 ==> flag == 1 ==> flag == 0;\nloop invariant flag == 1 ==> flag == 0 ==> flag == 1;\nloop invariant flag == 0 ==> flag == 0 ==> flag == 0 ==> flag == 0;\nloop invariant flag == 1 ==> flag == 1 ==> flag == 1 ==> flag == 1;\nloop invariant flag == 0 ==> flag == 1 ==> flag == 0 ==> flag == 0;\nloop invariant flag == 1 ==> flag == 0 ==> flag == 1 ==> flag == 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n       int x, y, flag;\n       x=0;\n       y=0;\n       flag=0;\n       /*@\n\n\n\n\nloop invariant i5: flag == 0 || flag == 1;\n\n\n\nloop invariant i9: flag == 1 ==> x <= 102 ==> x <= 102;\n\nloop invariant i11: flag == 1 ==> y <= 51 ==> y <= 0;\nloop invariant i12: flag == 0 ==> y <= 51 ==> y <= 51;\nloop invariant i13: flag == 0 ==> flag == 0;\nloop invariant i14: flag == 1 ==> flag == 1;\nloop invariant i15: flag == 0 ==> flag == 0 ==> flag == 0;\nloop invariant i16: flag == 1 ==> flag == 1 ==> flag == 1;\nloop invariant i17: flag == 0 ==> flag == 1 ==> flag == 0;\nloop invariant i18: flag == 1 ==> flag == 0 ==> flag == 1;\nloop invariant i19: flag == 0 ==> flag == 0 ==> flag == 0 ==> flag == 0;\nloop invariant i20: flag == 1 ==> flag == 1 ==> flag == 1 ==> flag == 1;\nloop invariant i21: flag == 0 ==> flag == 1 ==> flag == 0 ==> flag == 0;\nloop invariant i22: flag == 1 ==> flag == 0 ==> flag == 1 ==> flag == 1;\n*/\nwhile (flag < 1) {\n               if (x<=50)\n                       y=y+1;\n               else\n                       y=y-1;\n               \n               if (y<0) {\n                       flag=1;\n               }\n               if (flag < 1) {\n                       x=x+1;\n               }\n       }\n\n\t{;\n//@ assert(x<=102);\n}\n\n\t{;\n//@ assert(y<=51);\n}\n\n\treturn 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 102;\nloop invariant 0 <= y <= 51;\nloop invariant flag == 0 || flag == 1;\nloop invariant x <= 102 ==> (flag == 0 ==> x <= 50) ==> y <= 51;\nloop invariant y <= 51 ==> (flag == 0 ==> y >= 0) ==> x <= 102;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n       int x, y, flag;\n       x=0;\n       y=0;\n       flag=0;\n       /*@\n\n\nloop invariant i3: flag == 0 || flag == 1;\n\n\n\n\n*/\nwhile (flag < 1) {\n               if (x<=50)\n                       y=y+1;\n               else\n                       y=y-1;\n               \n               if (y<0) {\n                       flag=1;\n               }\n               if (flag < 1) {\n                       x=x+1;\n               }\n       }\n\n\t{;\n//@ assert(x<=102);\n}\n\n\t{;\n//@ assert(y<=51);\n}\n\n\treturn 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant ( x <= 50 ) ==> ( y <= 102 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n       int x, y, flag;\n       x=0;\n       y=0;\n       flag=0;\n       /*@\n\n\n*/\nwhile (flag < 1) {\n               if (x<=50)\n                       y=y+1;\n               else\n                       y=y-1;\n               \n               if (y<0) {\n                       flag=1;\n               }\n               if (flag < 1) {\n                       x=x+1;\n               }\n       }\n\n\t{;\n//@ assert(x<=102);\n}\n\n\t{;\n//@ assert(y<=51);\n}\n\n\treturn 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 12,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 51;\nloop invariant x <= 102;\nloop invariant y <= 101;\nloop invariant flag == 0;\nloop invariant flag == 1;\nloop invariant flag == 0 ==> x == 51;\nloop invariant flag == 0 ==> y == -1;\nloop invariant flag == 1 ==> x == 102;\nloop invariant flag == 1 ==> y == 51;\nloop invariant flag == 0 ==> x <= y;\nloop invariant flag == 1 ==> x >= y;\nloop invariant flag == 0 ==> x + y <= 101;\nloop invariant flag == 1 ==> x + y >= 101;\nloop invariant flag == 0 ==> x + y <= 101 ==> x <= 50;\nloop invariant flag == 0 ==> x + y >= 101 ==> x >= 51;\nloop invariant flag == 1 ==> x + y <= 101 ==> x <= 101;\nloop invariant flag == 1 ==> x + y >= 101 ==> x >= 101;\nloop invariant flag == 0 ==> x + y <= 101 ==> y <= 50;\nloop invariant flag == 0 ==> x + y >= 101 ==> y >= 51;\nloop invariant flag == 1 ==> x + y <= 101 ==> y <= 100;\nloop invariant flag == 1 ==> x + y >= 101 ==> y >= 0;\nloop invariant flag == 0 ==> x + y <= 101 ==> x + y <= 102;\nloop invariant flag == 0 ==> x + y >= 101 ==> x + y >= 102;\nloop invariant flag == 1 ==> x + y <= 101 ==> x + y <= 152;\nloop invariant flag == 1 ==> x + y >= 101 ==> x + y >= 152;\nloop invariant flag == 0 ==> x + y <= 101 ==> x + y <= 102 ==> x <= 50;\nloop invariant flag == 0 ==> x + y >= 101 ==> x + y >= 102 ==> x >= 51;\nloop invariant flag == 1 ==> x + y <= 101 ==> x + y <= 152 ==> x <= 101;\nloop invariant flag == 1 ==> x + y >= 101 ==> x + y >= 152 ==> x >= 101;\nloop invariant flag == 0 ==> x + y <= 101 ==> x + y <= 102 ==> y <= 50;\nloop invariant flag == 0 ==> x + y >= 101 ==> x + y >= 102 ==> y >= 51;\nloop invariant flag == 1 ==> x + y <= 101 ==> x + y <= 152 ==> y <= 100;\nloop invariant flag == 1 ==> x + y >= 101 ==> x + y >= 152 ==> y >= 0;\nloop invariant flag == 0 ==> x + y <= 101 ==> x + y <= 102 ==> x + y <= 102;\nloop invariant flag == 0 ==> x + y >= 101 ==> x + y >= 102 ==> x + y >= 102;\nloop invariant flag == 1 ==> x + y <= 101 ==> x + y <= 152 ==> x + y <= 152;\nloop invariant flag == 1 ==> x + y >= 101 ==> x + y >= 152 ==> x + y >= 152;\nloop invariant flag == 0 ==> x + y <= 101 ==> x + y <= 102 ==> x + y <= 102 ==> x <= 50;\nloop invariant flag == 0 ==> x + y >= 101 ==> x + y >= 102 ==> x + y >= 102 ==> x >= 51;\nloop invariant flag == 1 ==> x + y <= 101 ==> x + y <= 152 ==> x + y <= 152 ==> x <= 101;\nloop invariant flag == 1 ==> x + y >= 101 ==> x + y >= 152 ==> x + y >= 152 ==> x >= 101;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n       int x, y, flag;\n       x=0;\n       y=0;\n       flag=0;\n       /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i18: flag == 1 ==> x + y >= 101 ==> x >= 101;\n\n\nloop invariant i21: flag == 1 ==> x + y <= 101 ==> y <= 100;\n\nloop invariant i23: flag == 0 ==> x + y <= 101 ==> x + y <= 102;\n\nloop invariant i25: flag == 1 ==> x + y <= 101 ==> x + y <= 152;\n\n\n\n\nloop invariant i30: flag == 1 ==> x + y >= 101 ==> x + y >= 152 ==> x >= 101;\n\n\nloop invariant i33: flag == 1 ==> x + y <= 101 ==> x + y <= 152 ==> y <= 100;\n\nloop invariant i35: flag == 0 ==> x + y <= 101 ==> x + y <= 102 ==> x + y <= 102;\nloop invariant i36: flag == 0 ==> x + y >= 101 ==> x + y >= 102 ==> x + y >= 102;\nloop invariant i37: flag == 1 ==> x + y <= 101 ==> x + y <= 152 ==> x + y <= 152;\nloop invariant i38: flag == 1 ==> x + y >= 101 ==> x + y >= 152 ==> x + y >= 152;\n\n\n\nloop invariant i42: flag == 1 ==> x + y >= 101 ==> x + y >= 152 ==> x + y >= 152 ==> x >= 101;\n*/\nwhile (flag < 1) {\n               if (x<=50)\n                       y=y+1;\n               else\n                       y=y-1;\n               \n               if (y<0) {\n                       flag=1;\n               }\n               if (flag < 1) {\n                       x=x+1;\n               }\n       }\n\n\t{;\n//@ assert(x<=102);\n}\n\n\t{;\n//@ assert(y<=51);\n}\n\n\treturn 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 35,
                "annotations": "```\n/*@\nloop invariant 0 <= flag <= 1;\nloop invariant 0 <= x <= 50;\nloop invariant 0 <= y <= 51;\nloop invariant flag ==> x <= 51;\nloop invariant !(flag ==> x <= 51) ==> x <= 51;\nloop invariant flag ==> y <= 52;\nloop invariant !(flag ==> y <= 52) ==> y <= 52;\nloop invariant flag ==> x <= 102;\nloop invariant !(flag ==> x <= 102) ==> x <= 102;\nloop invariant flag ==> y <= 53;\nloop invariant !(flag ==> y <= 53) ==> y <= 53;\nloop invariant flag ==> x <= 103;\nloop invariant !(flag ==> x <= 103) ==> x <= 103;\nloop invariant flag ==> y <= 54;\nloop invariant !(flag ==> y <= 54) ==> y <= 54;\nloop invariant flag ==> x <= 104;\nloop invariant !(flag ==> x <= 104) ==> x <= 104;\nloop invariant flag ==> y <= 55;\nloop invariant !(flag ==> y <= 55) ==> y <= 55;\nloop invariant flag ==> x <= 105;\nloop invariant !(flag ==> x <= 105) ==> x <= 105;\nloop invariant flag ==> y <= 56;\nloop invariant !(flag ==> y <= 56) ==> y <= 56;\nloop invariant flag ==> x <= 106;\nloop invariant !(flag ==> x <= 106) ==> x <= 106;\nloop invariant flag ==> y <= 57;\nloop invariant !(flag ==> y <= 57) ==> y <= 57;\nloop invariant flag ==> x <= 107;\nloop invariant !(flag ==> x <= 107) ==> x <= 107;\nloop invariant flag ==> y <= 58;\nloop invariant !(flag ==> y <= 58) ==> y <= 58;\nloop invariant flag ==> x <= 108;\nloop invariant !(flag ==> x <= 108) ==> x <= 108;\nloop invariant flag ==> y <= 59;\nloop invariant !(flag ==> y <= 59) ==> y <= 59;\nloop invariant flag ==> x <= 109;\nloop invariant !(flag ==> x <= 109) ==> x <= 109;\nloop invariant flag ==> y <= 60;\nloop invariant !(flag ==> y <= 60) ==> y <= 60;\nloop invariant flag ==> x <= 110;\nloop invariant !(flag ==> x <= 110) ==> x <= 110;\nloop invariant flag ==> y <= 61;\nloop invariant !(flag ==> y <= 61) ==> y <= 61;\nloop invariant flag ==> x <= 111;\nloop invariant !(flag ==> x <= 111) ==> x <= 111;\nloop invariant flag ==> y <= 62;\nloop invariant !(flag ==> y <= 62) ==> y <= 62;\nloop invariant flag ==> x <= 112;\nloop invariant !(flag ==> x <= 112) ==> x <= 112;\nloop invariant flag ==> y <= 63;\nloop invariant !(flag ==> y <= 63) ==> y <= 63;\nloop invariant flag ==> x <= 113;\nloop invariant !(flag ==> x <= 113) ==> x <= 113;\nloop invariant flag ==> y <= 64;\nloop invariant !(flag ==> y <= 64) ==> y <= 64;\nloop invariant flag ==> x <= 114;\nloop invariant !(flag ==> x <= 114) ==> x <= 114;\nloop invariant flag ==> y <= 65;\nloop invariant !(flag ==> y <= 65) ==> y <= 65;\nloop invariant flag ==> x <= 115;\nloop invariant !(flag ==> x <= 115) ==> x <= 115;\nloop invariant flag ==> y <= 66;\nloop invariant !(flag ==> y <= 66) ==> y <= 66;\nloop invariant flag ==> x <= 116;\nloop invariant !(flag ==> x <= 116) ==> x <= 116;\nloop invariant flag ==> y <= 67;\nloop invariant !(flag ==> y <= 67) ==> y <= 67;\nloop invariant flag ==> x <= 117;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n       int x, y, flag;\n       x=0;\n       y=0;\n       flag=0;\n       /*@\nloop invariant i1: 0 <= flag <= 1;\n\n\n\n\nloop invariant i6: flag ==> y <= 52;\nloop invariant i7: !(flag ==> y <= 52) ==> y <= 52;\n\n\nloop invariant i10: flag ==> y <= 53;\nloop invariant i11: !(flag ==> y <= 53) ==> y <= 53;\n\n\nloop invariant i14: flag ==> y <= 54;\nloop invariant i15: !(flag ==> y <= 54) ==> y <= 54;\n\n\nloop invariant i18: flag ==> y <= 55;\nloop invariant i19: !(flag ==> y <= 55) ==> y <= 55;\n\n\nloop invariant i22: flag ==> y <= 56;\nloop invariant i23: !(flag ==> y <= 56) ==> y <= 56;\n\n\nloop invariant i26: flag ==> y <= 57;\nloop invariant i27: !(flag ==> y <= 57) ==> y <= 57;\n\n\nloop invariant i30: flag ==> y <= 58;\nloop invariant i31: !(flag ==> y <= 58) ==> y <= 58;\n\n\nloop invariant i34: flag ==> y <= 59;\nloop invariant i35: !(flag ==> y <= 59) ==> y <= 59;\n\n\nloop invariant i38: flag ==> y <= 60;\nloop invariant i39: !(flag ==> y <= 60) ==> y <= 60;\n\n\nloop invariant i42: flag ==> y <= 61;\nloop invariant i43: !(flag ==> y <= 61) ==> y <= 61;\n\n\nloop invariant i46: flag ==> y <= 62;\nloop invariant i47: !(flag ==> y <= 62) ==> y <= 62;\n\n\nloop invariant i50: flag ==> y <= 63;\nloop invariant i51: !(flag ==> y <= 63) ==> y <= 63;\n\n\nloop invariant i54: flag ==> y <= 64;\nloop invariant i55: !(flag ==> y <= 64) ==> y <= 64;\n\n\nloop invariant i58: flag ==> y <= 65;\nloop invariant i59: !(flag ==> y <= 65) ==> y <= 65;\n\n\nloop invariant i62: flag ==> y <= 66;\nloop invariant i63: !(flag ==> y <= 66) ==> y <= 66;\n\n\nloop invariant i66: flag ==> y <= 67;\nloop invariant i67: !(flag ==> y <= 67) ==> y <= 67;\n\n*/\nwhile (flag < 1) {\n               if (x<=50)\n                       y=y+1;\n               else\n                       y=y-1;\n               \n               if (y<0) {\n                       flag=1;\n               }\n               if (flag < 1) {\n                       x=x+1;\n               }\n       }\n\n\t{;\n//@ assert(x<=102);\n}\n\n\t{;\n//@ assert(y<=51);\n}\n\n\treturn 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant ( x <= 50 ) ==> ( x <= 102 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x > 50 ) ==> ( x <= 102 );\nloop invariant ( x > 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( x <= y );\nloop invariant ( x > 50 ) ==> ( x <= y );\nloop invariant ( x <= 50 ) ==> ( y >= 1 );\nloop invariant ( x > 50 ) ==> ( y >= 1 );\nloop invariant ( x <= 50 ) ==> ( x >= 0 );\nloop invariant ( x > 50 ) ==> ( x >= 0 );\nloop invariant ( x <= 50 ) ==> ( y >= 0 );\nloop invariant ( x > 50 ) ==> ( y >= 0 );\nloop invariant ( x <= 50 ) ==> ( y <= x );\nloop invariant ( x > 50 ) ==> ( y <= x );\nloop invariant ( x <= 50 ) ==> ( y >= x - 50 );\nloop invariant ( x > 50 ) ==> ( y >= x - 50 );\nloop invariant ( x <= 50 ) ==> ( x - y <= 50 );\nloop invariant ( x > 50 ) ==> ( x - y <= 50 );\nloop invariant ( x <= 50 ) ==> ( x - y >= 0 );\nloop invariant ( x > 50 ) ==> ( x - y >= 0 );\nloop invariant ( x <= 50 ) ==> ( x <= 102 );\nloop invariant ( x > 50 ) ==> ( x <= 102 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x > 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( x <= y );\nloop invariant ( x > 50 ) ==> ( x <= y );\nloop invariant ( x <= 50 ) ==> ( y >= 1 );\nloop invariant ( x > 50 ) ==> ( y >= 1 );\nloop invariant ( x <= 50 ) ==> ( x >= 0 );\nloop invariant ( x > 50 ) ==> ( x >= 0 );\nloop invariant ( x <= 50 ) ==> ( y >= 0 );\nloop invariant ( x > 50 ) ==> ( y >= 0 );\nloop invariant ( x <= 50 ) ==> ( y <= x );\nloop invariant ( x > 50 ) ==> ( y <= x );\nloop invariant ( x <= 50 ) ==> ( y >= x - 50 );\nloop invariant ( x > 50 ) ==> ( y >= x - 50 );\nloop invariant ( x <= 50 ) ==> ( x - y <= 50 );\nloop invariant ( x > 50 ) ==> ( x - y <= 50 );\nloop invariant ( x <= 50 ) ==> ( x - y >= 0 );\nloop invariant ( x > 50 ) ==> ( x - y >= 0 );\nloop invariant ( x <= 50 ) ==> ( x <= 102 );\nloop invariant ( x > 50 ) ==> ( x <= 102 );\nloop invariant ( x <= 50 ) ==> ( y <= 51 );\nloop invariant ( x > 50 ) ==> ( y <= 51 );\nloop invariant ( x <= 50 ) ==> ( x <= y );\nloop invariant ( x > 50 ) ==> ( x <= y );\nloop invariant ( x <= 50 ) ==> ( y >= 1 );\nloop invariant ( x > 50 ) ==> ( y >= 1 );\nloop invariant ( x <= 50 ) ==> ( x >= 0 );\nloop invariant ( x > 50 ) ==> ( x >= 0 );\nloop invariant ( x <= 50 ) ==> ( y >= 0 );\nloop invariant ( x > 50 ) ==> ( y >= 0 );\nloop invariant ( x <= 50 ) ==> ( y <= x );\nloop invariant ( x > 50 ) ==> ( y <= x );\nloop invariant ( x <= 50 ) ==> ( y >= x - 50 );\nloop invariant ( x > 50 ) ==> ( y >= x - 50 );\nloop invariant ( x <= 50 ) ==> ( x - y <= 50 );\nloop invariant ( x > 50 ) ==> ( x - y <= 50 );\nloop invariant ( x <= 50 ) ==> ( x - y >= 0 );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n       int x, y, flag;\n       x=0;\n       y=0;\n       flag=0;\n       /*@\nloop invariant i1: ( x <= 50 ) ==> ( x <= 102 );\nloop invariant i2: ( x <= 50 ) ==> ( y <= 51 );\n\nloop invariant i4: ( x > 50 ) ==> ( y <= 51 );\nloop invariant i5: ( x <= 50 ) ==> ( x <= y );\n\n\n\nloop invariant i9: ( x <= 50 ) ==> ( x >= 0 );\nloop invariant i10: ( x > 50 ) ==> ( x >= 0 );\nloop invariant i11: ( x <= 50 ) ==> ( y >= 0 );\n\nloop invariant i13: ( x <= 50 ) ==> ( y <= x );\nloop invariant i14: ( x > 50 ) ==> ( y <= x );\nloop invariant i15: ( x <= 50 ) ==> ( y >= x - 50 );\n\nloop invariant i17: ( x <= 50 ) ==> ( x - y <= 50 );\n\nloop invariant i19: ( x <= 50 ) ==> ( x - y >= 0 );\nloop invariant i20: ( x > 50 ) ==> ( x - y >= 0 );\n*/\nwhile (flag < 1) {\n               if (x<=50)\n                       y=y+1;\n               else\n                       y=y-1;\n               \n               if (y<0) {\n                       flag=1;\n               }\n               if (flag < 1) {\n                       x=x+1;\n               }\n       }\n\n\t{;\n//@ assert(x<=102);\n}\n\n\t{;\n//@ assert(y<=51);\n}\n\n\treturn 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 51;\nloop invariant 0 <= x <= 102;\nloop invariant flag == 0 ==> x <= 50;\nloop invariant flag == 0 ==> y == x + 1;\nloop invariant flag == 1 ==> x <= 102;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n       int x, y, flag;\n       x=0;\n       y=0;\n       flag=0;\n       /*@\n\n\n\n\n\n*/\nwhile (flag < 1) {\n               if (x<=50)\n                       y=y+1;\n               else\n                       y=y-1;\n               \n               if (y<0) {\n                       flag=1;\n               }\n               if (flag < 1) {\n                       x=x+1;\n               }\n       }\n\n\t{;\n//@ assert(x<=102);\n}\n\n\t{;\n//@ assert(y<=51);\n}\n\n\treturn 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 48: unexpected token '('",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n       int x, y, flag;\n       x=0;\n       y=0;\n       flag=0;\n       /*@\nloop invariant i1: 0 <= x <= 102;\nloop invariant i2: 0 <= y <= 51;\nloop invariant i3: !flag ==> x <= 50;\nloop invariant i4: flag ==> x > 50;\nloop invariant i5: !flag ==> y >= 0;\nloop invariant i6: flag ==> y < 0;\nloop invariant i7: !flag ==> x < 50;\nloop invariant i8: flag ==> x >= 50;\nloop invariant i9: !flag ==> x < y;\nloop invariant i10: flag ==> x >= y;\nloop invariant i11: 0 <= x <= 50;\nloop invariant i12: flag == (x <= 50);\nloop invariant i13: flag == (y >= 0);\nloop invariant i14: flag < 1 ==> x <= 102;\nloop invariant i15: flag < 1 ==> y <= 51;\nloop invariant i16: flag < 1 ==> x >= 0;\nloop invariant i17: flag < 1 ==> y >= 0;\nloop invariant i18: flag < 1 ==> x <= y;\nloop invariant i19: 1 <= x <= 50;\nloop invariant i20: 0 <= y <= 50;\nloop invariant i21: x <= 102;\nloop invariant i22: y <= 51;\nloop invariant i23: x <= 102 ==> x <= y;\nloop invariant i24: y <= 51 ==> y <= x;\nloop invariant i25: x <= 102 ==> flag == 0;\nloop invariant i26: y <= 51 ==> flag == 0;\nloop invariant i27: flag == 0 ==> x <= 102;\nloop invariant i28: flag == 0 ==> y <= 51;\nloop invariant i29: flag == 0 ==> x <= y;\nloop invariant i30: flag == 0 ==> y <= x;\nloop invariant i31: flag == 1 ==> x <= 102;\nloop invariant i32: flag == 1 ==> y <= 51;\nloop invariant i33: flag == 1 ==> x <= y;\nloop invariant i34: flag == 1 ==> y <= x;\nloop invariant i35: flag == 0 || flag == 1;\nloop invariant i36: (if (flag < 1) ==> x <= 102);\nloop invariant i37: (if (flag < 1) ==> y <= 51);\nloop invariant i38: (if (flag < 1) ==> flag == 0);\nloop invariant i39: (if (flag < 1) ==> x + y <= 102);\nloop invariant i40: (if (flag < 1) ==> x + y >= 0);\nloop invariant i41: (if (flag < 1) ==> x + y == 102);\nloop invariant i42: (if (flag < 1) ==> x == 102 - y);\nloop invariant i43: (if (flag < 1) ==> x == 101 - y);\nloop invariant i44: (if (flag < 1) ==> x == 100 - y);\nloop invariant i45: (if (flag < 1) ==> x == 99 - y);\nloop invariant i46: (if (flag < 1) ==> x == 98 - y);\nloop invariant i47: (if (flag < 1) ==> x == 97 - y);\nloop invariant i48: (if (flag < 1) ==> x == 96 - y);\nloop invariant i49: (if (flag < 1) ==> x == 95 - y);\nloop invariant i50: (if (flag < 1) ==> x == 94 - y);\nloop invariant i51: (if (flag < 1) ==> x == 93 - y);\nloop invariant i52: (if (flag < 1) ==> x == 92 - y);\nloop invariant i53: (if (flag < 1) ==> x == 91 - y);\nloop invariant i54: (if (flag < 1) ==> x == 90 - y);\nloop invariant i55: (if (flag < 1) ==> x == 89 - y);\nloop invariant i56: (if (flag < 1) ==> x == 88 - y);\nloop invariant i57: (if (flag < 1) ==> x == 87 - y);\nloop invariant i58: (if (flag < 1) ==> x == 86 - y);\nloop invariant i59: (if (flag < 1) ==> x == 85 - y);\nloop invariant i60: (if (flag < 1) ==> x == 84 - y);\nloop invariant i61: (if (flag < 1) ==> x == 83 - y);\nloop invariant i62: (if (flag < 1) ==> x == 82 - y);\nloop invariant i63: (if (flag < 1) ==> x == 81 - y);\nloop invariant i64: (if (flag < 1) ==> x == 80 - y);\nloop invariant i65: (if (flag < 1) ==> x == 79 - y);\nloop invariant i66: (if (flag < 1) ==> x == 78 - y);\nloop invariant i67: (if (flag < 1) ==> x == 77 - y);\nloop invariant i68: (if (flag < 1) ==> x == 76 - y);\nloop invariant i69: (if (flag < 1) ==> x == 75 - y);\nloop invariant i70: (if (flag < 1) ==> x == 74 - y);\nloop invariant i71: (if (flag < 1) ==> x == 73 - y);\nloop invariant i72: (if (flag < 1) ==> x == 72 - y);\nloop invariant i73: (if (flag < 1) ==> x == 71 - y);\nloop invariant i74: (if (flag < 1) ==> x == 70 - y);\nloop invariant i75: (if (flag < 1) ==> x == 69 - y);\nloop invariant i76: (if (flag < 1) ==> x == 68 - y);\nloop invariant i77: (if (flag < 1) ==> x == 67 - y);\nloop invariant i78: (if (flag < 1) ==> x == 66 - y);\nloop invariant i79: (if (flag < 1) ==> x == 65 - y);\nloop invariant i80: (if (flag < 1) ==> x == 64 - y);\nloop invariant i81: (if (flag < 1) ==> x == 63 - y);\nloop invariant i82: (if (flag < 1) ==> x == 62 - y);\nloop invariant i83: (if (flag < 1) ==> x == 61 - y);\nloop invariant i84: (if (flag < 1) ==> x == 60 - y);\nloop invariant i85: (if (flag < 1) ==> x == 59 - y);\nloop invariant i86: ( y <= 51 );\nloop invariant i87: ( x <= 51 );\nloop invariant i88: ( x >= 0 );\nloop invariant i89: ( y >= 0 );\nloop invariant i90: 0 <= flag <= 1;\nloop invariant i91: (flag == 1) ==> (x <= 102);\nloop invariant i92: (flag == 1) ==> (y <= 51);\nloop invariant i93: (x <= 50) ==> (y >= 0);\nloop invariant i94: (flag == 1) ==> (x >= 0);\nloop invariant i95: (flag == 1) ==> (y >= 0);\nloop invariant i96: (flag == 0) ==> (x >= 0);\nloop invariant i97: (flag == 0) ==> (y >= 0);\nloop invariant i98: (flag == 0) ==> (x <= 50);\nloop invariant i99: (flag == 0) ==> (y <= 51);\nloop invariant i100: x >= -51;\nloop invariant i101: y >= -51;\nloop invariant i102: flag == 0;\nloop invariant i103: flag == 1 ==> x <= 102 ==> y <= 51;\nloop invariant i104: flag == 1 ==> y <= 51 ==> x <= 102;\nloop invariant i105: flag == 1 ==> x <= 102 ==> y == 0;\nloop invariant i106: flag == 0 ==> x <= 50 && y == 0;\nloop invariant i107: flag == 1 ==> x <= 102 && y <= 0;\nloop invariant i108: flag == 0 ==> x <= 102 ==> x <= 50;\nloop invariant i109: flag == 1 ==> x <= 102 ==> x <= 102;\nloop invariant i110: flag == 0 ==> y <= 51 ==> y <= 0;\nloop invariant i111: flag == 1 ==> y <= 51 ==> y <= 0;\nloop invariant i112: flag == 0 ==> y <= 51 ==> y <= 51;\nloop invariant i113: flag == 0 ==> flag == 0;\nloop invariant i114: flag == 1 ==> flag == 1;\nloop invariant i115: flag == 0 ==> flag == 0 ==> flag == 0;\nloop invariant i116: flag == 1 ==> flag == 1 ==> flag == 1;\nloop invariant i117: flag == 0 ==> flag == 1 ==> flag == 0;\nloop invariant i118: flag == 1 ==> flag == 0 ==> flag == 1;\nloop invariant i119: flag == 0 ==> flag == 0 ==> flag == 0 ==> flag == 0;\nloop invariant i120: flag == 1 ==> flag == 1 ==> flag == 1 ==> flag == 1;\nloop invariant i121: flag == 0 ==> flag == 1 ==> flag == 0 ==> flag == 0;\nloop invariant i122: flag == 1 ==> flag == 0 ==> flag == 1 ==> flag == 1;\nloop invariant i123: x <= 102 ==> (flag == 0 ==> x <= 50) ==> y <= 51;\nloop invariant i124: y <= 51 ==> (flag == 0 ==> y >= 0) ==> x <= 102;\nloop invariant i125: x <= 102 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant i126: y <= 51 ==> (flag == 1 ==> y < 0) ==> x <= 102 && x >= 51;\nloop invariant i127: ( x <= 50 ) ==> ( y <= 102 );\nloop invariant i128: ( x <= 50 ) ==> ( y <= 51 );\nloop invariant i129: y <= 101;\nloop invariant i130: flag == 1;\nloop invariant i131: flag == 0 ==> x == 51;\nloop invariant i132: flag == 0 ==> y == -1;\nloop invariant i133: flag == 1 ==> x == 102;\nloop invariant i134: flag == 1 ==> y == 51;\nloop invariant i135: flag == 1 ==> x >= y;\nloop invariant i136: flag == 0 ==> x + y <= 101;\nloop invariant i137: flag == 1 ==> x + y >= 101;\nloop invariant i138: flag == 0 ==> x + y <= 101 ==> x <= 50;\nloop invariant i139: flag == 0 ==> x + y >= 101 ==> x >= 51;\nloop invariant i140: flag == 1 ==> x + y <= 101 ==> x <= 101;\nloop invariant i141: flag == 1 ==> x + y >= 101 ==> x >= 101;\nloop invariant i142: flag == 0 ==> x + y <= 101 ==> y <= 50;\nloop invariant i143: flag == 0 ==> x + y >= 101 ==> y >= 51;\nloop invariant i144: flag == 1 ==> x + y <= 101 ==> y <= 100;\nloop invariant i145: flag == 1 ==> x + y >= 101 ==> y >= 0;\nloop invariant i146: flag == 0 ==> x + y <= 101 ==> x + y <= 102;\nloop invariant i147: flag == 0 ==> x + y >= 101 ==> x + y >= 102;\nloop invariant i148: flag == 1 ==> x + y <= 101 ==> x + y <= 152;\nloop invariant i149: flag == 1 ==> x + y >= 101 ==> x + y >= 152;\nloop invariant i150: flag == 0 ==> x + y <= 101 ==> x + y <= 102 ==> x <= 50;\nloop invariant i151: flag == 0 ==> x + y >= 101 ==> x + y >= 102 ==> x >= 51;\nloop invariant i152: flag == 1 ==> x + y <= 101 ==> x + y <= 152 ==> x <= 101;\nloop invariant i153: flag == 1 ==> x + y >= 101 ==> x + y >= 152 ==> x >= 101;\nloop invariant i154: flag == 0 ==> x + y <= 101 ==> x + y <= 102 ==> y <= 50;\nloop invariant i155: flag == 0 ==> x + y >= 101 ==> x + y >= 102 ==> y >= 51;\nloop invariant i156: flag == 1 ==> x + y <= 101 ==> x + y <= 152 ==> y <= 100;\nloop invariant i157: flag == 1 ==> x + y >= 101 ==> x + y >= 152 ==> y >= 0;\nloop invariant i158: flag == 0 ==> x + y <= 101 ==> x + y <= 102 ==> x + y <= 102;\nloop invariant i159: flag == 0 ==> x + y >= 101 ==> x + y >= 102 ==> x + y >= 102;\nloop invariant i160: flag == 1 ==> x + y <= 101 ==> x + y <= 152 ==> x + y <= 152;\nloop invariant i161: flag == 1 ==> x + y >= 101 ==> x + y >= 152 ==> x + y >= 152;\nloop invariant i162: flag == 0 ==> x + y <= 101 ==> x + y <= 102 ==> x + y <= 102 ==> x <= 50;\nloop invariant i163: flag == 0 ==> x + y >= 101 ==> x + y >= 102 ==> x + y >= 102 ==> x >= 51;\nloop invariant i164: flag == 1 ==> x + y <= 101 ==> x + y <= 152 ==> x + y <= 152 ==> x <= 101;\nloop invariant i165: flag == 1 ==> x + y >= 101 ==> x + y >= 152 ==> x + y >= 152 ==> x >= 101;\nloop invariant i166: flag ==> x <= 51;\nloop invariant i167: !(flag ==> x <= 51) ==> x <= 51;\nloop invariant i168: flag ==> y <= 52;\nloop invariant i169: !(flag ==> y <= 52) ==> y <= 52;\nloop invariant i170: flag ==> x <= 102;\nloop invariant i171: !(flag ==> x <= 102) ==> x <= 102;\nloop invariant i172: flag ==> y <= 53;\nloop invariant i173: !(flag ==> y <= 53) ==> y <= 53;\nloop invariant i174: flag ==> x <= 103;\nloop invariant i175: !(flag ==> x <= 103) ==> x <= 103;\nloop invariant i176: flag ==> y <= 54;\nloop invariant i177: !(flag ==> y <= 54) ==> y <= 54;\nloop invariant i178: flag ==> x <= 104;\nloop invariant i179: !(flag ==> x <= 104) ==> x <= 104;\nloop invariant i180: flag ==> y <= 55;\nloop invariant i181: !(flag ==> y <= 55) ==> y <= 55;\nloop invariant i182: flag ==> x <= 105;\nloop invariant i183: !(flag ==> x <= 105) ==> x <= 105;\nloop invariant i184: flag ==> y <= 56;\nloop invariant i185: !(flag ==> y <= 56) ==> y <= 56;\nloop invariant i186: flag ==> x <= 106;\nloop invariant i187: !(flag ==> x <= 106) ==> x <= 106;\nloop invariant i188: flag ==> y <= 57;\nloop invariant i189: !(flag ==> y <= 57) ==> y <= 57;\nloop invariant i190: flag ==> x <= 107;\nloop invariant i191: !(flag ==> x <= 107) ==> x <= 107;\nloop invariant i192: flag ==> y <= 58;\nloop invariant i193: !(flag ==> y <= 58) ==> y <= 58;\nloop invariant i194: flag ==> x <= 108;\nloop invariant i195: !(flag ==> x <= 108) ==> x <= 108;\nloop invariant i196: flag ==> y <= 59;\nloop invariant i197: !(flag ==> y <= 59) ==> y <= 59;\nloop invariant i198: flag ==> x <= 109;\nloop invariant i199: !(flag ==> x <= 109) ==> x <= 109;\nloop invariant i200: flag ==> y <= 60;\nloop invariant i201: !(flag ==> y <= 60) ==> y <= 60;\nloop invariant i202: flag ==> x <= 110;\nloop invariant i203: !(flag ==> x <= 110) ==> x <= 110;\nloop invariant i204: flag ==> y <= 61;\nloop invariant i205: !(flag ==> y <= 61) ==> y <= 61;\nloop invariant i206: flag ==> x <= 111;\nloop invariant i207: !(flag ==> x <= 111) ==> x <= 111;\nloop invariant i208: flag ==> y <= 62;\nloop invariant i209: !(flag ==> y <= 62) ==> y <= 62;\nloop invariant i210: flag ==> x <= 112;\nloop invariant i211: !(flag ==> x <= 112) ==> x <= 112;\nloop invariant i212: flag ==> y <= 63;\nloop invariant i213: !(flag ==> y <= 63) ==> y <= 63;\nloop invariant i214: flag ==> x <= 113;\nloop invariant i215: !(flag ==> x <= 113) ==> x <= 113;\nloop invariant i216: flag ==> y <= 64;\nloop invariant i217: !(flag ==> y <= 64) ==> y <= 64;\nloop invariant i218: flag ==> x <= 114;\nloop invariant i219: !(flag ==> x <= 114) ==> x <= 114;\nloop invariant i220: flag ==> y <= 65;\nloop invariant i221: !(flag ==> y <= 65) ==> y <= 65;\nloop invariant i222: flag ==> x <= 115;\nloop invariant i223: !(flag ==> x <= 115) ==> x <= 115;\nloop invariant i224: flag ==> y <= 66;\nloop invariant i225: !(flag ==> y <= 66) ==> y <= 66;\nloop invariant i226: flag ==> x <= 116;\nloop invariant i227: !(flag ==> x <= 116) ==> x <= 116;\nloop invariant i228: flag ==> y <= 67;\nloop invariant i229: !(flag ==> y <= 67) ==> y <= 67;\nloop invariant i230: flag ==> x <= 117;\nloop invariant i231: ( x <= 50 ) ==> ( x <= 102 );\nloop invariant i232: ( x > 50 ) ==> ( x <= 102 );\nloop invariant i233: ( x > 50 ) ==> ( y <= 51 );\nloop invariant i234: ( x <= 50 ) ==> ( x <= y );\nloop invariant i235: ( x > 50 ) ==> ( x <= y );\nloop invariant i236: ( x <= 50 ) ==> ( y >= 1 );\nloop invariant i237: ( x > 50 ) ==> ( y >= 1 );\nloop invariant i238: ( x <= 50 ) ==> ( x >= 0 );\nloop invariant i239: ( x > 50 ) ==> ( x >= 0 );\nloop invariant i240: ( x <= 50 ) ==> ( y >= 0 );\nloop invariant i241: ( x > 50 ) ==> ( y >= 0 );\nloop invariant i242: ( x <= 50 ) ==> ( y <= x );\nloop invariant i243: ( x > 50 ) ==> ( y <= x );\nloop invariant i244: ( x <= 50 ) ==> ( y >= x - 50 );\nloop invariant i245: ( x > 50 ) ==> ( y >= x - 50 );\nloop invariant i246: ( x <= 50 ) ==> ( x - y <= 50 );\nloop invariant i247: ( x > 50 ) ==> ( x - y <= 50 );\nloop invariant i248: ( x <= 50 ) ==> ( x - y >= 0 );\nloop invariant i249: ( x > 50 ) ==> ( x - y >= 0 );\nloop invariant i250: flag == 0 ==> x <= 50;\nloop invariant i251: flag == 0 ==> y == x + 1;\n*/\nwhile (flag < 1) {\n               if (x<=50)\n                       y=y+1;\n               else\n                       y=y-1;\n               \n               if (y<0) {\n                       flag=1;\n               }\n               if (flag < 1) {\n                       x=x+1;\n               }\n       }\n\n\t{;\n//@ assert(x<=102);\n}\n\n\t{;\n//@ assert(y<=51);\n}\n\n\treturn 0;\n}",
        "combined_annotation_num_solver_calls": 128,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n       int x, y, flag;\n       x=0;\n       y=0;\n       flag=0;\n       /*@\n\n\n\nloop invariant i4: flag ==> x > 50;\nloop invariant i5: !flag ==> y >= 0;\nloop invariant i6: flag ==> y < 0;\n\nloop invariant i8: flag ==> x >= 50;\n\nloop invariant i10: flag ==> x >= y;\n\n\n\n\nloop invariant i15: flag < 1 ==> y <= 51;\nloop invariant i16: flag < 1 ==> x >= 0;\nloop invariant i17: flag < 1 ==> y >= 0;\n\n\n\n\nloop invariant i22: y <= 51;\n\nloop invariant i24: y <= 51 ==> y <= x;\n\n\n\nloop invariant i28: flag == 0 ==> y <= 51;\n\nloop invariant i30: flag == 0 ==> y <= x;\n\nloop invariant i32: flag == 1 ==> y <= 51;\n\nloop invariant i34: flag == 1 ==> y <= x;\nloop invariant i35: flag == 0 || flag == 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i86: ( y <= 51 );\n\nloop invariant i88: ( x >= 0 );\n\nloop invariant i90: 0 <= flag <= 1;\n\nloop invariant i92: (flag == 1) ==> (y <= 51);\nloop invariant i93: (x <= 50) ==> (y >= 0);\nloop invariant i94: (flag == 1) ==> (x >= 0);\n\nloop invariant i96: (flag == 0) ==> (x >= 0);\nloop invariant i97: (flag == 0) ==> (y >= 0);\n\nloop invariant i99: (flag == 0) ==> (y <= 51);\nloop invariant i100: x >= -51;\nloop invariant i101: y >= -51;\n\nloop invariant i103: flag == 1 ==> x <= 102 ==> y <= 51;\n\n\n\n\n\nloop invariant i109: flag == 1 ==> x <= 102 ==> x <= 102;\n\nloop invariant i111: flag == 1 ==> y <= 51 ==> y <= 0;\nloop invariant i112: flag == 0 ==> y <= 51 ==> y <= 51;\nloop invariant i113: flag == 0 ==> flag == 0;\nloop invariant i114: flag == 1 ==> flag == 1;\nloop invariant i115: flag == 0 ==> flag == 0 ==> flag == 0;\nloop invariant i116: flag == 1 ==> flag == 1 ==> flag == 1;\nloop invariant i117: flag == 0 ==> flag == 1 ==> flag == 0;\nloop invariant i118: flag == 1 ==> flag == 0 ==> flag == 1;\nloop invariant i119: flag == 0 ==> flag == 0 ==> flag == 0 ==> flag == 0;\nloop invariant i120: flag == 1 ==> flag == 1 ==> flag == 1 ==> flag == 1;\nloop invariant i121: flag == 0 ==> flag == 1 ==> flag == 0 ==> flag == 0;\nloop invariant i122: flag == 1 ==> flag == 0 ==> flag == 1 ==> flag == 1;\nloop invariant i123: x <= 102 ==> (flag == 0 ==> x <= 50) ==> y <= 51;\n\n\n\nloop invariant i127: ( x <= 50 ) ==> ( y <= 102 );\nloop invariant i128: ( x <= 50 ) ==> ( y <= 51 );\nloop invariant i129: y <= 101;\n\n\n\n\n\nloop invariant i135: flag == 1 ==> x >= y;\n\nloop invariant i137: flag == 1 ==> x + y >= 101;\nloop invariant i138: flag == 0 ==> x + y <= 101 ==> x <= 50;\nloop invariant i139: flag == 0 ==> x + y >= 101 ==> x >= 51;\n\nloop invariant i141: flag == 1 ==> x + y >= 101 ==> x >= 101;\nloop invariant i142: flag == 0 ==> x + y <= 101 ==> y <= 50;\n\nloop invariant i144: flag == 1 ==> x + y <= 101 ==> y <= 100;\n\nloop invariant i146: flag == 0 ==> x + y <= 101 ==> x + y <= 102;\nloop invariant i147: flag == 0 ==> x + y >= 101 ==> x + y >= 102;\nloop invariant i148: flag == 1 ==> x + y <= 101 ==> x + y <= 152;\n\nloop invariant i150: flag == 0 ==> x + y <= 101 ==> x + y <= 102 ==> x <= 50;\nloop invariant i151: flag == 0 ==> x + y >= 101 ==> x + y >= 102 ==> x >= 51;\n\nloop invariant i153: flag == 1 ==> x + y >= 101 ==> x + y >= 152 ==> x >= 101;\nloop invariant i154: flag == 0 ==> x + y <= 101 ==> x + y <= 102 ==> y <= 50;\n\nloop invariant i156: flag == 1 ==> x + y <= 101 ==> x + y <= 152 ==> y <= 100;\n\nloop invariant i158: flag == 0 ==> x + y <= 101 ==> x + y <= 102 ==> x + y <= 102;\nloop invariant i159: flag == 0 ==> x + y >= 101 ==> x + y >= 102 ==> x + y >= 102;\nloop invariant i160: flag == 1 ==> x + y <= 101 ==> x + y <= 152 ==> x + y <= 152;\nloop invariant i161: flag == 1 ==> x + y >= 101 ==> x + y >= 152 ==> x + y >= 152;\nloop invariant i162: flag == 0 ==> x + y <= 101 ==> x + y <= 102 ==> x + y <= 102 ==> x <= 50;\nloop invariant i163: flag == 0 ==> x + y >= 101 ==> x + y >= 102 ==> x + y >= 102 ==> x >= 51;\n\nloop invariant i165: flag == 1 ==> x + y >= 101 ==> x + y >= 152 ==> x + y >= 152 ==> x >= 101;\n\n\nloop invariant i168: flag ==> y <= 52;\nloop invariant i169: !(flag ==> y <= 52) ==> y <= 52;\n\n\nloop invariant i172: flag ==> y <= 53;\nloop invariant i173: !(flag ==> y <= 53) ==> y <= 53;\n\n\nloop invariant i176: flag ==> y <= 54;\nloop invariant i177: !(flag ==> y <= 54) ==> y <= 54;\n\n\nloop invariant i180: flag ==> y <= 55;\nloop invariant i181: !(flag ==> y <= 55) ==> y <= 55;\n\n\nloop invariant i184: flag ==> y <= 56;\nloop invariant i185: !(flag ==> y <= 56) ==> y <= 56;\n\n\nloop invariant i188: flag ==> y <= 57;\nloop invariant i189: !(flag ==> y <= 57) ==> y <= 57;\n\n\nloop invariant i192: flag ==> y <= 58;\nloop invariant i193: !(flag ==> y <= 58) ==> y <= 58;\n\n\nloop invariant i196: flag ==> y <= 59;\nloop invariant i197: !(flag ==> y <= 59) ==> y <= 59;\n\n\nloop invariant i200: flag ==> y <= 60;\nloop invariant i201: !(flag ==> y <= 60) ==> y <= 60;\n\n\nloop invariant i204: flag ==> y <= 61;\nloop invariant i205: !(flag ==> y <= 61) ==> y <= 61;\n\n\nloop invariant i208: flag ==> y <= 62;\nloop invariant i209: !(flag ==> y <= 62) ==> y <= 62;\n\n\nloop invariant i212: flag ==> y <= 63;\nloop invariant i213: !(flag ==> y <= 63) ==> y <= 63;\n\n\nloop invariant i216: flag ==> y <= 64;\nloop invariant i217: !(flag ==> y <= 64) ==> y <= 64;\n\n\nloop invariant i220: flag ==> y <= 65;\nloop invariant i221: !(flag ==> y <= 65) ==> y <= 65;\n\n\nloop invariant i224: flag ==> y <= 66;\nloop invariant i225: !(flag ==> y <= 66) ==> y <= 66;\n\n\nloop invariant i228: flag ==> y <= 67;\nloop invariant i229: !(flag ==> y <= 67) ==> y <= 67;\n\nloop invariant i231: ( x <= 50 ) ==> ( x <= 102 );\n\nloop invariant i233: ( x > 50 ) ==> ( y <= 51 );\nloop invariant i234: ( x <= 50 ) ==> ( x <= y );\n\n\n\nloop invariant i238: ( x <= 50 ) ==> ( x >= 0 );\nloop invariant i239: ( x > 50 ) ==> ( x >= 0 );\nloop invariant i240: ( x <= 50 ) ==> ( y >= 0 );\n\nloop invariant i242: ( x <= 50 ) ==> ( y <= x );\nloop invariant i243: ( x > 50 ) ==> ( y <= x );\nloop invariant i244: ( x <= 50 ) ==> ( y >= x - 50 );\n\nloop invariant i246: ( x <= 50 ) ==> ( x - y <= 50 );\n\nloop invariant i248: ( x <= 50 ) ==> ( x - y >= 0 );\nloop invariant i249: ( x > 50 ) ==> ( x - y >= 0 );\n\n\n*/\nwhile (flag < 1) {\n               if (x<=50)\n                       y=y+1;\n               else\n                       y=y-1;\n               \n               if (y<0) {\n                       flag=1;\n               }\n               if (flag < 1) {\n                       x=x+1;\n               }\n       }\n\n\t{;\n//@ assert(x<=102);\n}\n\n\t{;\n//@ assert(y<=51);\n}\n\n\treturn 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c"
        ],
        "skipped": [],
        "total": 125,
        "success_count": 103,
        "failure_count": 22,
        "success_rate": 0.824
    }
}