{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  for(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant i < 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 100000;\nloop invariant x >= y;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant y <= 100000;\nloop invariant x >= 1 + y;\nloop invariant x >= y + 1;\nloop invariant x >= y + (y + 1);\nloop invariant x >= y + (y + 1) + (y + 2);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7) + (y + 8);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7) + (y + 8) + (y + 9);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7) + (y + 8) + (y + 9) + (y + 10);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7) + (y + 8) + (y + 9) + (y + 10) + (y + 11);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7) + (y + 8) + (y + 9) + (y + 10) + (y + 11) + (y + 12);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7) + (y + 8) + (y + 9) + (y + 10) + (y + 11) + (y + 12) + (y + 13);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7) + (y + 8) + (y + 9) + (y + 10) + (y + 11) + (y + 12) + (y + 13) + (y + 14);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x + y <= 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= n * y;\nloop invariant y <= n - i;\nloop invariant x <= n * (n - 1) / 2;\nloop invariant x <= n * i;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x <= n;\nloop invariant y == 0;\nloop invariant x + n * y == n * (n + 1) / 2;\nloop invariant x + n * y == x + n * (n + 1) / 2;\nloop invariant y == 0;\nloop invariant x + n * y == x + n * (n + 1) / 2;\nloop invariant x + n * y == x + n * (n + 1) / 2;\nloop invariant y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant 0 <= i;\nloop invariant (i <= n);\nloop invariant (x + y == 0);\nloop invariant (i == n);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\nloop invariant unknown_int() > 0;\nloop invariant i <= unknown_int();\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x == (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\nloop invariant 0 <= i;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x >= 0;\nloop invariant y == 0;\nloop invariant i == n implies x != 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x - 1 <= i <= n;\nloop invariant x >= 0;\nloop invariant y = x + 1;\nloop invariant i < n;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 20,
                "annotations": "```\n/*@\nloop invariant i < 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 100000;\nloop invariant x >= y;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant y <= 100000;\nloop invariant x >= 1 + y;\nloop invariant x >= y + 1;\nloop invariant x >= y + (y + 1);\nloop invariant x >= y + (y + 1) + (y + 2);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7) + (y + 8);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7) + (y + 8) + (y + 9);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7) + (y + 8) + (y + 9) + (y + 10);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7) + (y + 8) + (y + 9) + (y + 10) + (y + 11);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7) + (y + 8) + (y + 9) + (y + 10) + (y + 11) + (y + 12);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7) + (y + 8) + (y + 9) + (y + 10) + (y + 11) + (y + 12) + (y + 13);\nloop invariant x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7) + (y + 8) + (y + 9) + (y + 10) + (y + 11) + (y + 12) + (y + 13) + (y + 14);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\n\nloop invariant i3: 0 <= y <= 100000;\nloop invariant i4: x >= y;\n\nloop invariant i6: y >= 0;\nloop invariant i7: x >= 0;\nloop invariant i8: y <= 100000;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x + y <= 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\nloop invariant x + y >= i;\nloop invariant x + y == 2 * i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x >= 0;\nloop invariant i3: y >= 0;\nloop invariant i4: x <= i;\n\n\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= n * y;\nloop invariant y <= n - i;\nloop invariant x <= n * (n - 1) / 2;\nloop invariant x <= n * i;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\nloop invariant x <= n * n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: x <= n * y;\n\nloop invariant i6: x <= n * (n - 1) / 2;\n\nloop invariant i8: x <= n * n;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: x >= 0;\nloop invariant i5: y >= 0;\nloop invariant i6: x <= n;\nloop invariant i7: y <= n;\nloop invariant i8: x <= y;\nloop invariant i9: x <= i;\nloop invariant i10: y <= i;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\nloop invariant i <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\n\nloop invariant i3: x == 0;\nloop invariant i4: y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x <= n;\nloop invariant y == 0;\nloop invariant x + n * y == n * (n + 1) / 2;\nloop invariant x + n * y == x + n * (n + 1) / 2;\nloop invariant y == 0;\nloop invariant x + n * y == x + n * (n + 1) / 2;\nloop invariant x + n * y == x + n * (n + 1) / 2;\nloop invariant y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x <= n;\nloop invariant i3: y == 0;\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant 0 <= i;\nloop invariant (i <= n);\nloop invariant (x + y == 0);\nloop invariant (i == n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\nloop invariant i1: 0 <= x;\nloop invariant i2: 0 <= y;\nloop invariant i3: 0 <= i;\n\nloop invariant i5: (x + y == 0);\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\nloop invariant unknown_int() > 0;\nloop invariant i <= unknown_int();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: n > 0;\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\nloop invariant i1: 0 <= x <= n;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x == (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= (i * (i - 1) / 2);\nloop invariant y == i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\n\n\nloop invariant i6: x >= y;\nloop invariant i7: x >= 0;\nloop invariant i8: y >= 0;\nloop invariant i9: i >= 0;\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\nloop invariant 0 <= i;\nloop invariant i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\nloop invariant i1: 0 <= i;\n\nloop invariant i3: x == 0;\nloop invariant i4: y == 0;\nloop invariant i5: n > 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x >= 0;\nloop invariant y == 0;\nloop invariant i == n implies x != 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\nloop invariant i2: x >= 0;\nloop invariant i3: y == 0;\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x - 1 <= i <= n;\nloop invariant x >= 0;\nloop invariant y = x + 1;\nloop invariant i < n;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\nloop invariant y < i;\nloop invariant x < n;\nloop invariant y < n;\nloop invariant x < y;\nloop invariant x < i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\n\nloop invariant i3: x >= 0;\n\n\nloop invariant i6: x < n;\nloop invariant i7: y < n;\n\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 66: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\nloop invariant i1: i < 100000;\nloop invariant i2: x >= (1 + (y - 1) * y / 2);\nloop invariant i3: 0 <= y <= 100000;\nloop invariant i4: x >= y;\nloop invariant i5: x >= 1;\nloop invariant i6: y >= 0;\nloop invariant i7: x >= 0;\nloop invariant i8: y <= 100000;\nloop invariant i9: x >= 1 + y;\nloop invariant i10: x >= y + 1;\nloop invariant i11: x >= y + (y + 1);\nloop invariant i12: x >= y + (y + 1) + (y + 2);\nloop invariant i13: x >= y + (y + 1) + (y + 2) + (y + 3);\nloop invariant i14: x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4);\nloop invariant i15: x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5);\nloop invariant i16: x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6);\nloop invariant i17: x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7);\nloop invariant i18: x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7) + (y + 8);\nloop invariant i19: x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7) + (y + 8) + (y + 9);\nloop invariant i20: x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7) + (y + 8) + (y + 9) + (y + 10);\nloop invariant i21: x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7) + (y + 8) + (y + 9) + (y + 10) + (y + 11);\nloop invariant i22: x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7) + (y + 8) + (y + 9) + (y + 10) + (y + 11) + (y + 12);\nloop invariant i23: x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7) + (y + 8) + (y + 9) + (y + 10) + (y + 11) + (y + 12) + (y + 13);\nloop invariant i24: x >= y + (y + 1) + (y + 2) + (y + 3) + (y + 4) + (y + 5) + (y + 6) + (y + 7) + (y + 8) + (y + 9) + (y + 10) + (y + 11) + (y + 12) + (y + 13) + (y + 14);\nloop invariant i25: 0 <= i <= n;\nloop invariant i26: x <= i;\nloop invariant i27: y <= i;\nloop invariant i28: x + y <= 2 * i;\nloop invariant i29: x + y >= i;\nloop invariant i30: x + y == 2 * i;\nloop invariant i31: x == 0;\nloop invariant i32: y == 0;\nloop invariant i33: x <= n * y;\nloop invariant i34: y <= n - i;\nloop invariant i35: x <= n * (n - 1) / 2;\nloop invariant i36: x <= n * i;\nloop invariant i37: x <= n * n;\nloop invariant i38: 1 <= i <= n;\nloop invariant i39: x <= n;\nloop invariant i40: y <= n;\nloop invariant i41: x <= y;\nloop invariant i42: i <= n;\nloop invariant i43: x + n * y == n * (n + 1) / 2;\nloop invariant i44: x + n * y == x + n * (n + 1) / 2;\nloop invariant i45: 0 <= x;\nloop invariant i46: 0 <= y;\nloop invariant i47: 0 <= i;\nloop invariant i48: (i <= n);\nloop invariant i49: (x + y == 0);\nloop invariant i50: (i == n);\nloop invariant i51: n > 0;\nloop invariant i52: unknown_int() > 0;\nloop invariant i53: i <= unknown_int();\nloop invariant i54: 0 <= x <= n;\nloop invariant i55: x == (i * (i - 1) / 2);\nloop invariant i56: y == i;\nloop invariant i57: i >= 0;\nloop invariant i58: x >= (i * (i - 1) / 2);\nloop invariant i59: i == n implies x != 0;\nloop invariant i60: x - 1 <= i <= n;\nloop invariant i61: y = x + 1;\nloop invariant i62: i < n;\nloop invariant i63: x < n;\nloop invariant i64: y < n;\nloop invariant i65: x < y;\nloop invariant i66: x < i;\nloop invariant i67: y < i;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
        "combined_annotation_num_solver_calls": 39,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main(){\n  unsigned int i=0;\n  int  x=0,  y=0;\n  int  n=unknown_int();\nassume(n>0);\n  /*@\n\n\nloop invariant i3: 0 <= y <= 100000;\nloop invariant i4: x >= y;\n\nloop invariant i6: y >= 0;\nloop invariant i7: x >= 0;\nloop invariant i8: y <= 100000;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i26: x <= i;\nloop invariant i27: y <= i;\nloop invariant i28: x + y <= 2 * i;\n\n\nloop invariant i31: x == 0;\nloop invariant i32: y == 0;\nloop invariant i33: x <= n * y;\n\nloop invariant i35: x <= n * (n - 1) / 2;\nloop invariant i36: x <= n * i;\nloop invariant i37: x <= n * n;\n\nloop invariant i39: x <= n;\nloop invariant i40: y <= n;\nloop invariant i41: x <= y;\n\n\n\nloop invariant i45: 0 <= x;\nloop invariant i46: 0 <= y;\nloop invariant i47: 0 <= i;\n\nloop invariant i49: (x + y == 0);\n\nloop invariant i51: n > 0;\n\n\nloop invariant i54: 0 <= x <= n;\n\n\nloop invariant i57: i >= 0;\n\n\n\n\n\nloop invariant i63: x < n;\nloop invariant i64: y < n;\n\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x!=0);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c"
        ],
        "skipped": [],
        "total": 62,
        "success_count": 52,
        "failure_count": 10,
        "success_rate": 0.8387096774193549
    }
}