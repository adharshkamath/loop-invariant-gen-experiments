{
    "logs": {
        "file": "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifo.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint I;\n\tint Sa;\n\tint Ea;\n\tint Ma;\n\tint Sb;\n\tint Eb;\n\tint Mb;\n\n\tif (! (I>=1)) \nreturn 0;\n\n\tSa=0;\n\tEa=0;\n\tMa=0;\n\tSb=0;\n\tEb=0;\n\tMb=0;\n\n\twhile(unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (Sb >= 1)) \nreturn 0;\n\n\t\t\tSb = Sb-1;\n\t\t\tSa = Ea+Ma+1;\n\t\t\tEa = 0;\n\t\t\tMa = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (! (I >= 1)) \nreturn 0;\n\n\t\t\t\tI = I -1;\n\t\t\t\tSa = Sa + Ea + Ma + 1;\n\t\t\t\tEa = 0;\n\t\t\t\tMa =0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (I>=1)) \nreturn 0;\n\n\t\t\t\t\tI=I-1;\n\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\tEb=0;\n\t\t\t\t\tMb=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\t\tEb=0;\n\t\t\t\t\t\tMb=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\tSb=Sb-1;\n\t\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Ea >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEa = Ea -1;\n\t\t\t\t\t\t\t\t\t\t\tMa = Ma +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Eb >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEb = Eb -1;\n\t\t\t\t\t\t\t\t\t\t\tMb = Mb +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t{;\n//@ assert(Ea + Ma <= 1);\n}\n\n\t{;\n//@ assert(Eb + Mb <= 1);\n}\n\n\t{;\n//@ assert(Mb  >= 0);\n}\n\n\t{;\n//@ assert(Eb  >= 0);\n}\n\n\t{;\n//@ assert(Ma  >= 0);\n}\n\n\t{;\n//@ assert(Ea  >= 0);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant I >= 1;\nloop invariant Sa >= 0;\nloop invariant Ea >= 0;\nloop invariant Ma >= 0;\nloop invariant Sb >= 0;\nloop invariant Eb >= 0;\nloop invariant Mb >= 0;\nloop invariant (Sa >= Sa + Ea + Ma);\nloop invariant (Eb + Mb <= 1);\nloop invariant (Ea + Ma <= 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= Sa <= I;\nloop invariant 0 <= Ea <= I;\nloop invariant 0 <= Ma <= I;\nloop invariant 0 <= Sb <= I;\nloop invariant 0 <= Eb <= I;\nloop invariant 0 <= Mb <= I;\nloop invariant Sa + Ea + Ma + I * (I + 1) / 2 == I * I;\nloop invariant Sb + Eb + Mb + I * (I + 1) / 2 == I * I;\nloop invariant Sa + Sb >= 0;\nloop invariant Ea + Eb >= 0;\nloop invariant Ma + Mb >= 0;\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb >= 0;\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= I <= unknown_int();\nloop invariant Sa >= 0;\nloop invariant Ea >= 0;\nloop invariant Ma >= 0;\nloop invariant Sb >= 0;\nloop invariant Eb >= 0;\nloop invariant Mb >= 0;\nloop invariant Sa + Ea + Ma <= I;\nloop invariant Sb + Eb + Mb <= I;\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I;\nloop invariant (Sa >= 1) ==> (Sa - 1 >= 0);\nloop invariant (Ea >= 1) ==> (Ea - 1 >= 0);\nloop invariant (Ma >= 1) ==> (Ma - 1 >= 0);\nloop invariant (Sb >= 1) ==> (Sb - 1 >= 0);\nloop invariant (Eb >= 1) ==> (Eb - 1 >= 0);\nloop invariant (Mb >= 1) ==> (Mb - 1 >= 0);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= I <= 100000;\nloop invariant 0 <= Sa <= I;\nloop invariant 0 <= Ea <= Sa;\nloop invariant 0 <= Ma <= I;\nloop invariant 0 <= Sb <= I;\nloop invariant 0 <= Eb <= Sb;\nloop invariant 0 <= Mb <= I;\nloop invariant Ea + Ma <= 1;\nloop invariant Eb + Mb <= 1;\nloop invariant Mb  >= 0;\nloop invariant Eb  >= 0;\nloop invariant Ma  >= 0;\nloop invariant Ea  >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= Sa <= I;\nloop invariant 0 <= Sb <= I;\nloop invariant Sa + Sb <= I;\nloop invariant 0 <= Ea <= 1;\nloop invariant 0 <= Eb <= 1;\nloop invariant 0 <= Ma <= 1;\nloop invariant 0 <= Mb <= 1;\nloop invariant I >= 1;\nloop invariant Sa + Sb + Ea + Eb + Ma + Mb <= I;\nloop invariant Sa + Sb + Ea + Eb + Ma + Mb >= I;\nloop invariant I >= Sa + Sb + Ea + Eb + Ma + Mb;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= Sa + Ma <= I;\nloop invariant 0 <= Sa + Ma <= I;\nloop invariant 0 <= Sb + Mb <= I;\nloop invariant 0 <= Sb + Mb <= I;\nloop invariant Sa + Ma + Sb + Mb <= I;\nloop invariant Sa + Ma + Sb + Mb <= I;\nloop invariant I >= Sa + Ma + Sb + Mb;\nloop invariant I >= Sa + Ma + Sb + Mb;\nloop invariant Ma >= 0;\nloop invariant Ma >= 0;\nloop invariant Mb >= 0;\nloop invariant Mb >= 0;\nloop invariant Ea >= 0;\nloop invariant Ea >= 0;\nloop invariant Eb >= 0;\nloop invariant Eb >= 0;\nloop invariant Sa + Ma <= I;\nloop invariant Sa + Ma <= I;\nloop invariant Sb + Mb <= I;\nloop invariant Sb + Mb <= I;\nloop invariant Sa + Ma + Sb + Mb <= I;\nloop invariant Sa + Ma + Sb + Mb <= I;\nloop invariant 0 <= Sa <= I;\nloop invariant 0 <= Sa <= I;\nloop invariant 0 <= Sb <= I;\nloop invariant 0 <= Sb <= I;\nloop invariant 0 <= Ma <= I;\nloop invariant 0 <= Ma <= I;\nloop invariant 0 <= Mb <= I;\nloop invariant 0 <= Mb <= I;\nloop invariant I >= Sa + Ma + Sb + Mb;\nloop invariant I >= Sa + Ma + Sb + Mb;\nloop invariant Ma <= I - Sa;\nloop invariant Ma <= I - Sa;\nloop invariant Mb <= I - Sb;\nloop invariant Mb <= I - Sb;\nloop invariant Ea <= I - Sa - Ma;\nloop invariant Ea <= I - Sa - Ma;\nloop invariant Eb <= I - Sb - Mb;\nloop invariant Eb <= I - Sb - Mb;\nloop invariant Sa + Ma + Sb + Mb + Ea + Eb <= I;\nloop invariant Sa + Ma + Sb + Mb + Ea + Eb <= I;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= I <= 100000;\nloop invariant 0 <= Sa <= 100000;\nloop invariant 0 <= Ea <= 100000;\nloop invariant 0 <= Ma <= 100000;\nloop invariant 0 <= Sb <= 100000;\nloop invariant 0 <= Eb <= 100000;\nloop invariant 0 <= Mb <= 100000;\nloop invariant (Ea + Ma <= 1) ==> (Ea + Ma == 0);\nloop invariant (Eb + Mb <= 1) ==> (Eb + Mb == 0);\nloop invariant (Mb >= 0) ==> (Mb == 0);\nloop invariant (Eb >= 0) ==> (Eb == 0);\nloop invariant (Ma >= 0) ==> (Ma == 0);\nloop invariant (Ea >= 0) ==> (Ea == 0);\nloop invariant (Sa >= 1) ==> (Sa == 1);\nloop invariant (Sb >= 1) ==> (Sb == 1);\nloop invariant (I >= 1) ==> (I == 1);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= I <= 100000;\nloop invariant 0 <= Sa <= I;\nloop invariant 0 <= Ea <= Sa;\nloop invariant 0 <= Ma <= Ea;\nloop invariant 0 <= Sb <= I;\nloop invariant 0 <= Eb <= Sb;\nloop invariant 0 <= Mb <= Eb;\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb = I;\nloop invariant Sa + Sb + I = 2 * (Ea + Ma) + (Ea + Ma) * (Ea + Ma) / 2;\nloop invariant Sb + Sb * Sb / 2 = Ea + Ma + I;\nloop invariant Sa + Sb + I = 2 * (Ea + Ma) + (Ea + Ma) * (Ea + Ma) / 2;\nloop invariant Sa + Sb + I = 2 * (Ea + Ma) + (Ea + Ma) * (Ea + Ma) / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= Sb <= I;\nloop invariant I >= Sa + Ea + Ma + Sb + Eb + Mb;\nloop invariant Sa == Sa + Ea + Ma + Sb + Eb + Mb;\nloop invariant Ea == Ea - 1;\nloop invariant Ma == Ma + 1;\nloop invariant Eb == Eb - 1;\nloop invariant Mb == Mb + 1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= I <= unknown_int();\nloop invariant 0 <= Sa <= I - 1;\nloop invariant 0 <= Sb <= I - 1;\nloop invariant 0 <= Ea <= 1;\nloop invariant 0 <= Eb <= 1;\nloop invariant 0 <= Ma <= 1;\nloop invariant 0 <= Mb <= 1;\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\n*/\n```",
            "```\n/*@\nloop invariant 1 <= Sa <= I * (I + 1) / 2;\nloop invariant 0 <= Ea <= 1;\nloop invariant 0 <= Ma <= 1;\nloop invariant 0 <= Sb <= I * (I + 1) / 2;\nloop invariant 0 <= Eb <= 1;\nloop invariant 0 <= Mb <= 1;\nloop invariant Sa + Ea + Ma = I;\nloop invariant Sb + Eb + Mb = I;\nloop invariant !(Sa >= 1) ==> (I >= 1) ==> (Sa >= 1);\nloop invariant !(Sb >= 1) ==> (I >= 1) ==> (Sb >= 1);\nloop invariant !(Ea >= 1) ==> (I >= 1) ==> (Ea >= 1);\nloop invariant !(Eb >= 1) ==> (I >= 1) ==> (Eb >= 1);\nloop invariant !(Sa >= 1) ==> (I >= 1) ==> (Sa >= 1);\nloop invariant !(Sb >= 1) ==> (I >= 1) ==> (Sb >= 1);\nloop invariant !(Ea >= 1) ==> (I >= 1) ==> (Ea >= 1);\nloop invariant !(Eb >= 1) ==> (I >= 1) ==> (Eb >= 1);\nloop invariant !(Sa >= 1) ==> (I >= 1) ==> (Sa >= 1);\nloop invariant !(Sb >= 1) ==> (I >= 1) ==> (Sb >= 1);\nloop invariant !(Ea >= 1) ==> (I >= 1) ==> (Ea >= 1);\nloop invariant !(Eb >= 1) ==> (I >= 1) ==> (Eb >= 1);\nloop invariant !(Sa >= 1) ==> (I >= 1) ==> (Sa >= 1);\nloop invariant !(Sb >= 1) ==> (I >= 1) ==> (Sb >= 1);\nloop invariant !(Ea >= 1) ==> (I >= 1) ==> (Ea >= 1);\nloop invariant !(Eb >= 1) ==> (I >= 1) ==> (Eb >= 1);\nloop invariant !(Sa >= 1) ==> (I >= 1) ==> (Sa >= 1);\nloop invariant !(Sb >= 1) ==> (I >= 1) ==> (Sb >= 1);\nloop invariant !(Ea >= 1) ==> (I >= 1) ==> (Ea >= 1);\nloop invariant !(Eb >= 1) ==> (I >= 1) ==> (Eb >= 1);\nloop invariant !(Sa >= 1) ==> (I >= 1) ==> (Sa >= 1);\nloop invariant !(Sb >= 1) ==> (I >= 1) ==> (Sb >= 1);\nloop invariant !(Ea >= 1) ==> (I >= 1) ==> (Ea >= 1);\nloop invariant !(Eb >= 1) ==> (I >= 1) ==> (Eb >= 1);\nloop invariant !(Sa >= 1) ==> (I >= 1) ==> (Sa >= 1);\nloop invariant !(Sb >= 1) ==> (I >= 1) ==> (Sb >= 1);\nloop invariant !(Ea >= 1) ==> (I >= 1) ==> (Ea >= 1);\nloop invariant !(Eb >= 1) ==> (I >= 1) ==> (Eb >= 1);\nloop invariant !(Sa >= 1) ==> (I >= 1) ==> (Sa >= 1);\nloop invariant !(Sb >= 1) ==> (I >= 1) ==> (Sb >= 1);\nloop invariant !(Ea >= 1) ==> (I >= 1) ==> (Ea >= 1);\nloop invariant !(Eb >= 1) ==> (I >= 1) ==> (Eb >= 1);\nloop invariant !(Sa >= 1) ==> (I >= 1) ==> (Sa >= 1);\nloop invariant !(Sb >= 1) ==> (I >= 1) ==> (Sb >= 1);\nloop invariant !(Ea >= 1) ==> (I >= 1) ==> (Ea >= 1);\nloop invariant !(Eb >= 1) ==> (I >= 1) ==> (Eb >= 1);\nloop invariant !(Sa >= 1) ==> (I >= 1) ==> (Sa >= 1);\nloop invariant !(Sb >= 1) ==> (I >= 1) ==> (Sb >= 1);\nloop invariant !(Ea >= 1) ==> (I >= 1) ==> (Ea >= 1);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= I;\nloop invariant 0 <= Sa <= I;\nloop invariant 0 <= Eb <= I;\nloop invariant 0 <= Mb <= I;\nloop invariant 0 <= Ea <= I;\nloop invariant 0 <= Ma <= I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= Sa <= I;\nloop invariant 0 <= Ea <= I;\nloop invariant 0 <= Ma <= I;\nloop invariant 0 <= Sb <= I;\nloop invariant 0 <= Eb <= I;\nloop invariant 0 <= Mb <= I;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= I <= I_pre;\nloop invariant 0 <= Sa <= Sa_pre;\nloop invariant 0 <= Ea <= Ea_pre;\nloop invariant 0 <= Ma <= Ma_pre;\nloop invariant 0 <= Sb <= Sb_pre;\nloop invariant 0 <= Eb <= Eb_pre;\nloop invariant 0 <= Mb <= Mb_pre;\nloop invariant I >= Sa + Ea + Ma;\nloop invariant I >= Sb + Eb + Mb;\nloop invariant I >= 1;\nloop invariant Sa >= 1 ==> Sa <= I_pre;\nloop invariant Ea >= 1 ==> Ea <= I_pre;\nloop invariant Ma >= 1 ==> Ma <= I_pre;\nloop invariant Sb >= 1 ==> Sb <= I_pre;\nloop invariant Eb >= 1 ==> Eb <= I_pre;\nloop invariant Mb >= 1 ==> Mb <= I_pre;\nloop invariant Ea + Ma <= 1 ==> Ea + Ma == 1;\nloop invariant Eb + Mb <= 1 ==> Eb + Mb == 1;\nloop invariant Mb >= 0;\nloop invariant Eb >= 0;\nloop invariant Ma >= 0;\nloop invariant Ea >= 0;\nloop invariant I >= Sa + Ea + Ma;\nloop invariant I >= Sb + Eb + Mb;\nloop invariant I >= 1;\nloop invariant Sa >= 1 ==> Sa <= I_pre;\nloop invariant Ea >= 1 ==> Ea <= I_pre;\nloop invariant Ma >= 1 ==> Ma <= I_pre;\nloop invariant Sb >= 1 ==> Sb <= I_pre;\nloop invariant Eb >= 1 ==> Eb <= I_pre;\nloop invariant Mb >= 1 ==> Mb <= I_pre;\nloop invariant Ea + Ma <= 1 ==> Ea + Ma == 1;\nloop invariant Eb + Mb <= 1 ==> Eb + Mb == 1;\nloop invariant Mb >= 0;\nloop invariant Eb >= 0;\nloop invariant Ma >= 0;\nloop invariant Ea >= 0;\nloop invariant I >= Sa + Ea + Ma;\nloop invariant I >= Sb + Eb + Mb;\nloop invariant I >= 1;\nloop invariant Sa >= 1 ==> Sa <= I_pre;\nloop invariant Ea >= 1 ==> Ea <= I_pre;\nloop invariant Ma >= 1 ==> Ma <= I_pre;\nloop invariant Sb >= 1 ==> Sb <= I_pre;\nloop invariant Eb >= 1 ==> Eb <= I_pre;\nloop invariant Mb >= 1 ==> Mb <= I_pre;\nloop invariant Ea + Ma <= 1 ==> Ea + Ma == 1;\nloop invariant Eb + Mb <= 1 ==> Eb + Mb == 1;\nloop invariant Mb >= 0;\nloop invariant Eb >= 0;\nloop invariant Ma >= 0;\nloop invariant Ea >= 0;\nloop invariant I >= Sa + Ea + Ma;\nloop invariant I >= Sb + Eb + Mb;\nloop invariant I >= 1;\nloop invariant Sa >= 1 ==> Sa <= I_pre;\nloop invariant Ea >= 1 ==> Ea <= I_pre;\nloop invariant Ma >= 1 ==> Ma <= I_pre;\nloop invariant Sb >= 1 ==> Sb <= I_pre;\nloop invariant Eb >= 1 ==> Eb <= I_pre;\nloop invariant Mb >= 1 ==> Mb <= I_pre;\nloop invariant Ea + Ma <= 1 ==> Ea + Ma == 1;\nloop invariant Eb + Mb <= 1 ==> Eb + Mb == 1;\nloop invariant Mb >= 0;\nloop invariant Eb >= 0;\nloop invariant Ma >= 0;\nloop invariant Ea >= 0;\nloop invariant I >= Sa + Ea + Ma;\nloop invariant I >= Sb + Eb + Mb;\nloop invariant I >= 1;\nloop invariant Sa >= 1 ==> Sa <= I_pre;\nloop invariant Ea >= 1 ==> Ea <= I_pre;\nloop invariant Ma >= 1 ==> Ma <= I_pre;\nloop invariant Sb >= 1 ==> Sb <= I_pre;\nloop invariant Eb >= 1 ==> Eb <= I_pre;\nloop invariant Mb >= 1 ==> Mb <= I_pre;\nloop invariant Ea + Ma <= 1 ==> Ea + Ma == 1;\nloop invariant Eb + Mb <= 1 ==> Eb + Mb == 1;\nloop invariant Mb >= 0;\nloop invariant Eb >= 0;\nloop invariant Ma >= 0;\nloop invariant Ea >= 0;\nloop invariant I >= Sa + Ea + Ma;\nloop invariant I >= Sb + Eb + Mb;\nloop invariant I >= 1;\nloop invariant Sa >= 1 ==> Sa <= I_pre;\nloop invariant Ea >= 1 ==> Ea <= I_pre;\nloop invariant Ma >= 1 ==> Ma <= I_pre;\nloop invariant Sb >= 1 ==> Sb <= I_pre;\nloop invariant Eb >= 1 ==> Eb <= I_pre;\nloop invariant Mb >= 1 ==> Mb <= I_pre;\nloop invariant Ea + Ma <= 1 ==> Ea + Ma == 1;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant I >= 1;\nloop invariant Sa >= 0;\nloop invariant Ea >= 0;\nloop invariant Ma >= 0;\nloop invariant Sb >= 0;\nloop invariant Eb >= 0;\nloop invariant Mb >= 0;\nloop invariant (Sa >= Sa + Ea + Ma);\nloop invariant (Eb + Mb <= 1);\nloop invariant (Ea + Ma <= 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint I;\n\tint Sa;\n\tint Ea;\n\tint Ma;\n\tint Sb;\n\tint Eb;\n\tint Mb;\n\n\tif (! (I>=1)) \nreturn 0;\n\n\tSa=0;\n\tEa=0;\n\tMa=0;\n\tSb=0;\n\tEb=0;\n\tMb=0;\n\n\t/*@\n\nloop invariant i2: Sa >= 0;\nloop invariant i3: Ea >= 0;\nloop invariant i4: Ma >= 0;\nloop invariant i5: Sb >= 0;\nloop invariant i6: Eb >= 0;\nloop invariant i7: Mb >= 0;\n\nloop invariant i9: (Eb + Mb <= 1);\nloop invariant i10: (Ea + Ma <= 1);\n*/\nwhile(unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (Sb >= 1)) \nreturn 0;\n\n\t\t\tSb = Sb-1;\n\t\t\tSa = Ea+Ma+1;\n\t\t\tEa = 0;\n\t\t\tMa = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (! (I >= 1)) \nreturn 0;\n\n\t\t\t\tI = I -1;\n\t\t\t\tSa = Sa + Ea + Ma + 1;\n\t\t\t\tEa = 0;\n\t\t\t\tMa =0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (I>=1)) \nreturn 0;\n\n\t\t\t\t\tI=I-1;\n\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\tEb=0;\n\t\t\t\t\tMb=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\t\tEb=0;\n\t\t\t\t\t\tMb=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\tSb=Sb-1;\n\t\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Ea >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEa = Ea -1;\n\t\t\t\t\t\t\t\t\t\t\tMa = Ma +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Eb >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEb = Eb -1;\n\t\t\t\t\t\t\t\t\t\t\tMb = Mb +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t{;\n//@ assert(Ea + Ma <= 1);\n}\n\n\t{;\n//@ assert(Eb + Mb <= 1);\n}\n\n\t{;\n//@ assert(Mb  >= 0);\n}\n\n\t{;\n//@ assert(Eb  >= 0);\n}\n\n\t{;\n//@ assert(Ma  >= 0);\n}\n\n\t{;\n//@ assert(Ea  >= 0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= Sa <= I;\nloop invariant 0 <= Ea <= I;\nloop invariant 0 <= Ma <= I;\nloop invariant 0 <= Sb <= I;\nloop invariant 0 <= Eb <= I;\nloop invariant 0 <= Mb <= I;\nloop invariant Sa + Ea + Ma + I * (I + 1) / 2 == I * I;\nloop invariant Sb + Eb + Mb + I * (I + 1) / 2 == I * I;\nloop invariant Sa + Sb >= 0;\nloop invariant Ea + Eb >= 0;\nloop invariant Ma + Mb >= 0;\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb >= 0;\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint I;\n\tint Sa;\n\tint Ea;\n\tint Ma;\n\tint Sb;\n\tint Eb;\n\tint Mb;\n\n\tif (! (I>=1)) \nreturn 0;\n\n\tSa=0;\n\tEa=0;\n\tMa=0;\n\tSb=0;\n\tEb=0;\n\tMb=0;\n\n\t/*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (Sb >= 1)) \nreturn 0;\n\n\t\t\tSb = Sb-1;\n\t\t\tSa = Ea+Ma+1;\n\t\t\tEa = 0;\n\t\t\tMa = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (! (I >= 1)) \nreturn 0;\n\n\t\t\t\tI = I -1;\n\t\t\t\tSa = Sa + Ea + Ma + 1;\n\t\t\t\tEa = 0;\n\t\t\t\tMa =0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (I>=1)) \nreturn 0;\n\n\t\t\t\t\tI=I-1;\n\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\tEb=0;\n\t\t\t\t\tMb=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\t\tEb=0;\n\t\t\t\t\t\tMb=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\tSb=Sb-1;\n\t\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Ea >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEa = Ea -1;\n\t\t\t\t\t\t\t\t\t\t\tMa = Ma +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Eb >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEb = Eb -1;\n\t\t\t\t\t\t\t\t\t\t\tMb = Mb +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t{;\n//@ assert(Ea + Ma <= 1);\n}\n\n\t{;\n//@ assert(Eb + Mb <= 1);\n}\n\n\t{;\n//@ assert(Mb  >= 0);\n}\n\n\t{;\n//@ assert(Eb  >= 0);\n}\n\n\t{;\n//@ assert(Ma  >= 0);\n}\n\n\t{;\n//@ assert(Ea  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 1 <= I <= unknown_int();\nloop invariant Sa >= 0;\nloop invariant Ea >= 0;\nloop invariant Ma >= 0;\nloop invariant Sb >= 0;\nloop invariant Eb >= 0;\nloop invariant Mb >= 0;\nloop invariant Sa + Ea + Ma <= I;\nloop invariant Sb + Eb + Mb <= I;\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb <= I;\nloop invariant (Sa >= 1) ==> (Sa - 1 >= 0);\nloop invariant (Ea >= 1) ==> (Ea - 1 >= 0);\nloop invariant (Ma >= 1) ==> (Ma - 1 >= 0);\nloop invariant (Sb >= 1) ==> (Sb - 1 >= 0);\nloop invariant (Eb >= 1) ==> (Eb - 1 >= 0);\nloop invariant (Mb >= 1) ==> (Mb - 1 >= 0);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sb >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\nloop invariant (unknown_int()) ==> (Sa >= 1);\nloop invariant (unknown_int()) ==> (I >= 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint I;\n\tint Sa;\n\tint Ea;\n\tint Ma;\n\tint Sb;\n\tint Eb;\n\tint Mb;\n\n\tif (! (I>=1)) \nreturn 0;\n\n\tSa=0;\n\tEa=0;\n\tMa=0;\n\tSb=0;\n\tEb=0;\n\tMb=0;\n\n\t/*@\n\nloop invariant i2: Sa >= 0;\nloop invariant i3: Ea >= 0;\nloop invariant i4: Ma >= 0;\nloop invariant i5: Sb >= 0;\nloop invariant i6: Eb >= 0;\nloop invariant i7: Mb >= 0;\n\n\n\nloop invariant i11: (Sa >= 1) ==> (Sa - 1 >= 0);\nloop invariant i12: (Ea >= 1) ==> (Ea - 1 >= 0);\nloop invariant i13: (Ma >= 1) ==> (Ma - 1 >= 0);\nloop invariant i14: (Sb >= 1) ==> (Sb - 1 >= 0);\nloop invariant i15: (Eb >= 1) ==> (Eb - 1 >= 0);\nloop invariant i16: (Mb >= 1) ==> (Mb - 1 >= 0);\n\n\n\n*/\nwhile(unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (Sb >= 1)) \nreturn 0;\n\n\t\t\tSb = Sb-1;\n\t\t\tSa = Ea+Ma+1;\n\t\t\tEa = 0;\n\t\t\tMa = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (! (I >= 1)) \nreturn 0;\n\n\t\t\t\tI = I -1;\n\t\t\t\tSa = Sa + Ea + Ma + 1;\n\t\t\t\tEa = 0;\n\t\t\t\tMa =0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (I>=1)) \nreturn 0;\n\n\t\t\t\t\tI=I-1;\n\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\tEb=0;\n\t\t\t\t\tMb=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\t\tEb=0;\n\t\t\t\t\t\tMb=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\tSb=Sb-1;\n\t\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Ea >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEa = Ea -1;\n\t\t\t\t\t\t\t\t\t\t\tMa = Ma +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Eb >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEb = Eb -1;\n\t\t\t\t\t\t\t\t\t\t\tMb = Mb +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t{;\n//@ assert(Ea + Ma <= 1);\n}\n\n\t{;\n//@ assert(Eb + Mb <= 1);\n}\n\n\t{;\n//@ assert(Mb  >= 0);\n}\n\n\t{;\n//@ assert(Eb  >= 0);\n}\n\n\t{;\n//@ assert(Ma  >= 0);\n}\n\n\t{;\n//@ assert(Ea  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 158,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint I;\n\tint Sa;\n\tint Ea;\n\tint Ma;\n\tint Sb;\n\tint Eb;\n\tint Mb;\n\n\tif (! (I>=1)) \nreturn 0;\n\n\tSa=0;\n\tEa=0;\n\tMa=0;\n\tSb=0;\n\tEb=0;\n\tMb=0;\n\n\t/*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (Sb >= 1)) \nreturn 0;\n\n\t\t\tSb = Sb-1;\n\t\t\tSa = Ea+Ma+1;\n\t\t\tEa = 0;\n\t\t\tMa = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (! (I >= 1)) \nreturn 0;\n\n\t\t\t\tI = I -1;\n\t\t\t\tSa = Sa + Ea + Ma + 1;\n\t\t\t\tEa = 0;\n\t\t\t\tMa =0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (I>=1)) \nreturn 0;\n\n\t\t\t\t\tI=I-1;\n\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\tEb=0;\n\t\t\t\t\tMb=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\t\tEb=0;\n\t\t\t\t\t\tMb=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\tSb=Sb-1;\n\t\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Ea >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEa = Ea -1;\n\t\t\t\t\t\t\t\t\t\t\tMa = Ma +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Eb >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEb = Eb -1;\n\t\t\t\t\t\t\t\t\t\t\tMb = Mb +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t{;\n//@ assert(Ea + Ma <= 1);\n}\n\n\t{;\n//@ assert(Eb + Mb <= 1);\n}\n\n\t{;\n//@ assert(Mb  >= 0);\n}\n\n\t{;\n//@ assert(Eb  >= 0);\n}\n\n\t{;\n//@ assert(Ma  >= 0);\n}\n\n\t{;\n//@ assert(Ea  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= I <= 100000;\nloop invariant 0 <= Sa <= I;\nloop invariant 0 <= Ea <= Sa;\nloop invariant 0 <= Ma <= I;\nloop invariant 0 <= Sb <= I;\nloop invariant 0 <= Eb <= Sb;\nloop invariant 0 <= Mb <= I;\nloop invariant Ea + Ma <= 1;\nloop invariant Eb + Mb <= 1;\nloop invariant Mb  >= 0;\nloop invariant Eb  >= 0;\nloop invariant Ma  >= 0;\nloop invariant Ea  >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint I;\n\tint Sa;\n\tint Ea;\n\tint Ma;\n\tint Sb;\n\tint Eb;\n\tint Mb;\n\n\tif (! (I>=1)) \nreturn 0;\n\n\tSa=0;\n\tEa=0;\n\tMa=0;\n\tSb=0;\n\tEb=0;\n\tMb=0;\n\n\t/*@\n\n\n\n\n\n\n\nloop invariant i8: Ea + Ma <= 1;\nloop invariant i9: Eb + Mb <= 1;\nloop invariant i10: Mb  >= 0;\nloop invariant i11: Eb  >= 0;\nloop invariant i12: Ma  >= 0;\nloop invariant i13: Ea  >= 0;\n*/\nwhile(unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (Sb >= 1)) \nreturn 0;\n\n\t\t\tSb = Sb-1;\n\t\t\tSa = Ea+Ma+1;\n\t\t\tEa = 0;\n\t\t\tMa = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (! (I >= 1)) \nreturn 0;\n\n\t\t\t\tI = I -1;\n\t\t\t\tSa = Sa + Ea + Ma + 1;\n\t\t\t\tEa = 0;\n\t\t\t\tMa =0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (I>=1)) \nreturn 0;\n\n\t\t\t\t\tI=I-1;\n\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\tEb=0;\n\t\t\t\t\tMb=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\t\tEb=0;\n\t\t\t\t\t\tMb=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\tSb=Sb-1;\n\t\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Ea >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEa = Ea -1;\n\t\t\t\t\t\t\t\t\t\t\tMa = Ma +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Eb >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEb = Eb -1;\n\t\t\t\t\t\t\t\t\t\t\tMb = Mb +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t{;\n//@ assert(Ea + Ma <= 1);\n}\n\n\t{;\n//@ assert(Eb + Mb <= 1);\n}\n\n\t{;\n//@ assert(Mb  >= 0);\n}\n\n\t{;\n//@ assert(Eb  >= 0);\n}\n\n\t{;\n//@ assert(Ma  >= 0);\n}\n\n\t{;\n//@ assert(Ea  >= 0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= Sa <= I;\nloop invariant 0 <= Sb <= I;\nloop invariant Sa + Sb <= I;\nloop invariant 0 <= Ea <= 1;\nloop invariant 0 <= Eb <= 1;\nloop invariant 0 <= Ma <= 1;\nloop invariant 0 <= Mb <= 1;\nloop invariant I >= 1;\nloop invariant Sa + Sb + Ea + Eb + Ma + Mb <= I;\nloop invariant Sa + Sb + Ea + Eb + Ma + Mb >= I;\nloop invariant I >= Sa + Sb + Ea + Eb + Ma + Mb;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint I;\n\tint Sa;\n\tint Ea;\n\tint Ma;\n\tint Sb;\n\tint Eb;\n\tint Mb;\n\n\tif (! (I>=1)) \nreturn 0;\n\n\tSa=0;\n\tEa=0;\n\tMa=0;\n\tSb=0;\n\tEb=0;\n\tMb=0;\n\n\t/*@\n\n\n\nloop invariant i4: 0 <= Ea <= 1;\nloop invariant i5: 0 <= Eb <= 1;\n\n\n\n\n\n\n*/\nwhile(unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (Sb >= 1)) \nreturn 0;\n\n\t\t\tSb = Sb-1;\n\t\t\tSa = Ea+Ma+1;\n\t\t\tEa = 0;\n\t\t\tMa = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (! (I >= 1)) \nreturn 0;\n\n\t\t\t\tI = I -1;\n\t\t\t\tSa = Sa + Ea + Ma + 1;\n\t\t\t\tEa = 0;\n\t\t\t\tMa =0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (I>=1)) \nreturn 0;\n\n\t\t\t\t\tI=I-1;\n\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\tEb=0;\n\t\t\t\t\tMb=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\t\tEb=0;\n\t\t\t\t\t\tMb=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\tSb=Sb-1;\n\t\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Ea >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEa = Ea -1;\n\t\t\t\t\t\t\t\t\t\t\tMa = Ma +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Eb >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEb = Eb -1;\n\t\t\t\t\t\t\t\t\t\t\tMb = Mb +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t{;\n//@ assert(Ea + Ma <= 1);\n}\n\n\t{;\n//@ assert(Eb + Mb <= 1);\n}\n\n\t{;\n//@ assert(Mb  >= 0);\n}\n\n\t{;\n//@ assert(Eb  >= 0);\n}\n\n\t{;\n//@ assert(Ma  >= 0);\n}\n\n\t{;\n//@ assert(Ea  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= Sa + Ma <= I;\nloop invariant 0 <= Sa + Ma <= I;\nloop invariant 0 <= Sb + Mb <= I;\nloop invariant 0 <= Sb + Mb <= I;\nloop invariant Sa + Ma + Sb + Mb <= I;\nloop invariant Sa + Ma + Sb + Mb <= I;\nloop invariant I >= Sa + Ma + Sb + Mb;\nloop invariant I >= Sa + Ma + Sb + Mb;\nloop invariant Ma >= 0;\nloop invariant Ma >= 0;\nloop invariant Mb >= 0;\nloop invariant Mb >= 0;\nloop invariant Ea >= 0;\nloop invariant Ea >= 0;\nloop invariant Eb >= 0;\nloop invariant Eb >= 0;\nloop invariant Sa + Ma <= I;\nloop invariant Sa + Ma <= I;\nloop invariant Sb + Mb <= I;\nloop invariant Sb + Mb <= I;\nloop invariant Sa + Ma + Sb + Mb <= I;\nloop invariant Sa + Ma + Sb + Mb <= I;\nloop invariant 0 <= Sa <= I;\nloop invariant 0 <= Sa <= I;\nloop invariant 0 <= Sb <= I;\nloop invariant 0 <= Sb <= I;\nloop invariant 0 <= Ma <= I;\nloop invariant 0 <= Ma <= I;\nloop invariant 0 <= Mb <= I;\nloop invariant 0 <= Mb <= I;\nloop invariant I >= Sa + Ma + Sb + Mb;\nloop invariant I >= Sa + Ma + Sb + Mb;\nloop invariant Ma <= I - Sa;\nloop invariant Ma <= I - Sa;\nloop invariant Mb <= I - Sb;\nloop invariant Mb <= I - Sb;\nloop invariant Ea <= I - Sa - Ma;\nloop invariant Ea <= I - Sa - Ma;\nloop invariant Eb <= I - Sb - Mb;\nloop invariant Eb <= I - Sb - Mb;\nloop invariant Sa + Ma + Sb + Mb + Ea + Eb <= I;\nloop invariant Sa + Ma + Sb + Mb + Ea + Eb <= I;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint I;\n\tint Sa;\n\tint Ea;\n\tint Ma;\n\tint Sb;\n\tint Eb;\n\tint Mb;\n\n\tif (! (I>=1)) \nreturn 0;\n\n\tSa=0;\n\tEa=0;\n\tMa=0;\n\tSb=0;\n\tEb=0;\n\tMb=0;\n\n\t/*@\n\n\n\n\nloop invariant i5: Ma >= 0;\nloop invariant i6: Mb >= 0;\nloop invariant i7: Ea >= 0;\nloop invariant i8: Eb >= 0;\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (Sb >= 1)) \nreturn 0;\n\n\t\t\tSb = Sb-1;\n\t\t\tSa = Ea+Ma+1;\n\t\t\tEa = 0;\n\t\t\tMa = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (! (I >= 1)) \nreturn 0;\n\n\t\t\t\tI = I -1;\n\t\t\t\tSa = Sa + Ea + Ma + 1;\n\t\t\t\tEa = 0;\n\t\t\t\tMa =0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (I>=1)) \nreturn 0;\n\n\t\t\t\t\tI=I-1;\n\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\tEb=0;\n\t\t\t\t\tMb=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\t\tEb=0;\n\t\t\t\t\t\tMb=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\tSb=Sb-1;\n\t\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Ea >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEa = Ea -1;\n\t\t\t\t\t\t\t\t\t\t\tMa = Ma +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Eb >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEb = Eb -1;\n\t\t\t\t\t\t\t\t\t\t\tMb = Mb +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t{;\n//@ assert(Ea + Ma <= 1);\n}\n\n\t{;\n//@ assert(Eb + Mb <= 1);\n}\n\n\t{;\n//@ assert(Mb  >= 0);\n}\n\n\t{;\n//@ assert(Eb  >= 0);\n}\n\n\t{;\n//@ assert(Ma  >= 0);\n}\n\n\t{;\n//@ assert(Ea  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= I <= 100000;\nloop invariant 0 <= Sa <= 100000;\nloop invariant 0 <= Ea <= 100000;\nloop invariant 0 <= Ma <= 100000;\nloop invariant 0 <= Sb <= 100000;\nloop invariant 0 <= Eb <= 100000;\nloop invariant 0 <= Mb <= 100000;\nloop invariant (Ea + Ma <= 1) ==> (Ea + Ma == 0);\nloop invariant (Eb + Mb <= 1) ==> (Eb + Mb == 0);\nloop invariant (Mb >= 0) ==> (Mb == 0);\nloop invariant (Eb >= 0) ==> (Eb == 0);\nloop invariant (Ma >= 0) ==> (Ma == 0);\nloop invariant (Ea >= 0) ==> (Ea == 0);\nloop invariant (Sa >= 1) ==> (Sa == 1);\nloop invariant (Sb >= 1) ==> (Sb == 1);\nloop invariant (I >= 1) ==> (I == 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint I;\n\tint Sa;\n\tint Ea;\n\tint Ma;\n\tint Sb;\n\tint Eb;\n\tint Mb;\n\n\tif (! (I>=1)) \nreturn 0;\n\n\tSa=0;\n\tEa=0;\n\tMa=0;\n\tSb=0;\n\tEb=0;\n\tMb=0;\n\n\t/*@\n\n\nloop invariant i3: 0 <= Ea <= 100000;\n\n\nloop invariant i6: 0 <= Eb <= 100000;\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (Sb >= 1)) \nreturn 0;\n\n\t\t\tSb = Sb-1;\n\t\t\tSa = Ea+Ma+1;\n\t\t\tEa = 0;\n\t\t\tMa = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (! (I >= 1)) \nreturn 0;\n\n\t\t\t\tI = I -1;\n\t\t\t\tSa = Sa + Ea + Ma + 1;\n\t\t\t\tEa = 0;\n\t\t\t\tMa =0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (I>=1)) \nreturn 0;\n\n\t\t\t\t\tI=I-1;\n\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\tEb=0;\n\t\t\t\t\tMb=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\t\tEb=0;\n\t\t\t\t\t\tMb=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\tSb=Sb-1;\n\t\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Ea >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEa = Ea -1;\n\t\t\t\t\t\t\t\t\t\t\tMa = Ma +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Eb >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEb = Eb -1;\n\t\t\t\t\t\t\t\t\t\t\tMb = Mb +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t{;\n//@ assert(Ea + Ma <= 1);\n}\n\n\t{;\n//@ assert(Eb + Mb <= 1);\n}\n\n\t{;\n//@ assert(Mb  >= 0);\n}\n\n\t{;\n//@ assert(Eb  >= 0);\n}\n\n\t{;\n//@ assert(Ma  >= 0);\n}\n\n\t{;\n//@ assert(Ea  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= I <= 100000;\nloop invariant 0 <= Sa <= I;\nloop invariant 0 <= Ea <= Sa;\nloop invariant 0 <= Ma <= Ea;\nloop invariant 0 <= Sb <= I;\nloop invariant 0 <= Eb <= Sb;\nloop invariant 0 <= Mb <= Eb;\nloop invariant Sa + Ea + Ma + Sb + Eb + Mb = I;\nloop invariant Sa + Sb + I = 2 * (Ea + Ma) + (Ea + Ma) * (Ea + Ma) / 2;\nloop invariant Sb + Sb * Sb / 2 = Ea + Ma + I;\nloop invariant Sa + Sb + I = 2 * (Ea + Ma) + (Ea + Ma) * (Ea + Ma) / 2;\nloop invariant Sa + Sb + I = 2 * (Ea + Ma) + (Ea + Ma) * (Ea + Ma) / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint I;\n\tint Sa;\n\tint Ea;\n\tint Ma;\n\tint Sb;\n\tint Eb;\n\tint Mb;\n\n\tif (! (I>=1)) \nreturn 0;\n\n\tSa=0;\n\tEa=0;\n\tMa=0;\n\tSb=0;\n\tEb=0;\n\tMb=0;\n\n\t/*@\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (Sb >= 1)) \nreturn 0;\n\n\t\t\tSb = Sb-1;\n\t\t\tSa = Ea+Ma+1;\n\t\t\tEa = 0;\n\t\t\tMa = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (! (I >= 1)) \nreturn 0;\n\n\t\t\t\tI = I -1;\n\t\t\t\tSa = Sa + Ea + Ma + 1;\n\t\t\t\tEa = 0;\n\t\t\t\tMa =0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (I>=1)) \nreturn 0;\n\n\t\t\t\t\tI=I-1;\n\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\tEb=0;\n\t\t\t\t\tMb=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\t\tEb=0;\n\t\t\t\t\t\tMb=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\tSb=Sb-1;\n\t\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Ea >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEa = Ea -1;\n\t\t\t\t\t\t\t\t\t\t\tMa = Ma +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Eb >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEb = Eb -1;\n\t\t\t\t\t\t\t\t\t\t\tMb = Mb +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t{;\n//@ assert(Ea + Ma <= 1);\n}\n\n\t{;\n//@ assert(Eb + Mb <= 1);\n}\n\n\t{;\n//@ assert(Mb  >= 0);\n}\n\n\t{;\n//@ assert(Eb  >= 0);\n}\n\n\t{;\n//@ assert(Ma  >= 0);\n}\n\n\t{;\n//@ assert(Ea  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= Sb <= I;\nloop invariant I >= Sa + Ea + Ma + Sb + Eb + Mb;\nloop invariant Sa == Sa + Ea + Ma + Sb + Eb + Mb;\nloop invariant Ea == Ea - 1;\nloop invariant Ma == Ma + 1;\nloop invariant Eb == Eb - 1;\nloop invariant Mb == Mb + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint I;\n\tint Sa;\n\tint Ea;\n\tint Ma;\n\tint Sb;\n\tint Eb;\n\tint Mb;\n\n\tif (! (I>=1)) \nreturn 0;\n\n\tSa=0;\n\tEa=0;\n\tMa=0;\n\tSb=0;\n\tEb=0;\n\tMb=0;\n\n\t/*@\n\n\n\n\n\n\n\n*/\nwhile(unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (Sb >= 1)) \nreturn 0;\n\n\t\t\tSb = Sb-1;\n\t\t\tSa = Ea+Ma+1;\n\t\t\tEa = 0;\n\t\t\tMa = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (! (I >= 1)) \nreturn 0;\n\n\t\t\t\tI = I -1;\n\t\t\t\tSa = Sa + Ea + Ma + 1;\n\t\t\t\tEa = 0;\n\t\t\t\tMa =0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (I>=1)) \nreturn 0;\n\n\t\t\t\t\tI=I-1;\n\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\tEb=0;\n\t\t\t\t\tMb=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\t\tEb=0;\n\t\t\t\t\t\tMb=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\tSb=Sb-1;\n\t\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Ea >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEa = Ea -1;\n\t\t\t\t\t\t\t\t\t\t\tMa = Ma +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Eb >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEb = Eb -1;\n\t\t\t\t\t\t\t\t\t\t\tMb = Mb +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t{;\n//@ assert(Ea + Ma <= 1);\n}\n\n\t{;\n//@ assert(Eb + Mb <= 1);\n}\n\n\t{;\n//@ assert(Mb  >= 0);\n}\n\n\t{;\n//@ assert(Eb  >= 0);\n}\n\n\t{;\n//@ assert(Ma  >= 0);\n}\n\n\t{;\n//@ assert(Ea  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 1 <= I <= unknown_int();\nloop invariant 0 <= Sa <= I - 1;\nloop invariant 0 <= Sb <= I - 1;\nloop invariant 0 <= Ea <= 1;\nloop invariant 0 <= Eb <= 1;\nloop invariant 0 <= Ma <= 1;\nloop invariant 0 <= Mb <= 1;\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint I;\n\tint Sa;\n\tint Ea;\n\tint Ma;\n\tint Sb;\n\tint Eb;\n\tint Mb;\n\n\tif (! (I>=1)) \nreturn 0;\n\n\tSa=0;\n\tEa=0;\n\tMa=0;\n\tSb=0;\n\tEb=0;\n\tMb=0;\n\n\t/*@\n\n\n\nloop invariant i4: 0 <= Ea <= 1;\nloop invariant i5: 0 <= Eb <= 1;\n\n\n\n\n*/\nwhile(unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (Sb >= 1)) \nreturn 0;\n\n\t\t\tSb = Sb-1;\n\t\t\tSa = Ea+Ma+1;\n\t\t\tEa = 0;\n\t\t\tMa = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (! (I >= 1)) \nreturn 0;\n\n\t\t\t\tI = I -1;\n\t\t\t\tSa = Sa + Ea + Ma + 1;\n\t\t\t\tEa = 0;\n\t\t\t\tMa =0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (I>=1)) \nreturn 0;\n\n\t\t\t\t\tI=I-1;\n\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\tEb=0;\n\t\t\t\t\tMb=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\t\tEb=0;\n\t\t\t\t\t\tMb=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\tSb=Sb-1;\n\t\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Ea >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEa = Ea -1;\n\t\t\t\t\t\t\t\t\t\t\tMa = Ma +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Eb >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEb = Eb -1;\n\t\t\t\t\t\t\t\t\t\t\tMb = Mb +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t{;\n//@ assert(Ea + Ma <= 1);\n}\n\n\t{;\n//@ assert(Eb + Mb <= 1);\n}\n\n\t{;\n//@ assert(Mb  >= 0);\n}\n\n\t{;\n//@ assert(Eb  >= 0);\n}\n\n\t{;\n//@ assert(Ma  >= 0);\n}\n\n\t{;\n//@ assert(Ea  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 1 <= Sa <= I * (I + 1) / 2;\nloop invariant 0 <= Ea <= 1;\nloop invariant 0 <= Ma <= 1;\nloop invariant 0 <= Sb <= I * (I + 1) / 2;\nloop invariant 0 <= Eb <= 1;\nloop invariant 0 <= Mb <= 1;\nloop invariant Sa + Ea + Ma = I;\nloop invariant Sb + Eb + Mb = I;\nloop invariant !(Sa >= 1) ==> (I >= 1) ==> (Sa >= 1);\nloop invariant !(Sb >= 1) ==> (I >= 1) ==> (Sb >= 1);\nloop invariant !(Ea >= 1) ==> (I >= 1) ==> (Ea >= 1);\nloop invariant !(Eb >= 1) ==> (I >= 1) ==> (Eb >= 1);\nloop invariant !(Sa >= 1) ==> (I >= 1) ==> (Sa >= 1);\nloop invariant !(Sb >= 1) ==> (I >= 1) ==> (Sb >= 1);\nloop invariant !(Ea >= 1) ==> (I >= 1) ==> (Ea >= 1);\nloop invariant !(Eb >= 1) ==> (I >= 1) ==> (Eb >= 1);\nloop invariant !(Sa >= 1) ==> (I >= 1) ==> (Sa >= 1);\nloop invariant !(Sb >= 1) ==> (I >= 1) ==> (Sb >= 1);\nloop invariant !(Ea >= 1) ==> (I >= 1) ==> (Ea >= 1);\nloop invariant !(Eb >= 1) ==> (I >= 1) ==> (Eb >= 1);\nloop invariant !(Sa >= 1) ==> (I >= 1) ==> (Sa >= 1);\nloop invariant !(Sb >= 1) ==> (I >= 1) ==> (Sb >= 1);\nloop invariant !(Ea >= 1) ==> (I >= 1) ==> (Ea >= 1);\nloop invariant !(Eb >= 1) ==> (I >= 1) ==> (Eb >= 1);\nloop invariant !(Sa >= 1) ==> (I >= 1) ==> (Sa >= 1);\nloop invariant !(Sb >= 1) ==> (I >= 1) ==> (Sb >= 1);\nloop invariant !(Ea >= 1) ==> (I >= 1) ==> (Ea >= 1);\nloop invariant !(Eb >= 1) ==> (I >= 1) ==> (Eb >= 1);\nloop invariant !(Sa >= 1) ==> (I >= 1) ==> (Sa >= 1);\nloop invariant !(Sb >= 1) ==> (I >= 1) ==> (Sb >= 1);\nloop invariant !(Ea >= 1) ==> (I >= 1) ==> (Ea >= 1);\nloop invariant !(Eb >= 1) ==> (I >= 1) ==> (Eb >= 1);\nloop invariant !(Sa >= 1) ==> (I >= 1) ==> (Sa >= 1);\nloop invariant !(Sb >= 1) ==> (I >= 1) ==> (Sb >= 1);\nloop invariant !(Ea >= 1) ==> (I >= 1) ==> (Ea >= 1);\nloop invariant !(Eb >= 1) ==> (I >= 1) ==> (Eb >= 1);\nloop invariant !(Sa >= 1) ==> (I >= 1) ==> (Sa >= 1);\nloop invariant !(Sb >= 1) ==> (I >= 1) ==> (Sb >= 1);\nloop invariant !(Ea >= 1) ==> (I >= 1) ==> (Ea >= 1);\nloop invariant !(Eb >= 1) ==> (I >= 1) ==> (Eb >= 1);\nloop invariant !(Sa >= 1) ==> (I >= 1) ==> (Sa >= 1);\nloop invariant !(Sb >= 1) ==> (I >= 1) ==> (Sb >= 1);\nloop invariant !(Ea >= 1) ==> (I >= 1) ==> (Ea >= 1);\nloop invariant !(Eb >= 1) ==> (I >= 1) ==> (Eb >= 1);\nloop invariant !(Sa >= 1) ==> (I >= 1) ==> (Sa >= 1);\nloop invariant !(Sb >= 1) ==> (I >= 1) ==> (Sb >= 1);\nloop invariant !(Ea >= 1) ==> (I >= 1) ==> (Ea >= 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint I;\n\tint Sa;\n\tint Ea;\n\tint Ma;\n\tint Sb;\n\tint Eb;\n\tint Mb;\n\n\tif (! (I>=1)) \nreturn 0;\n\n\tSa=0;\n\tEa=0;\n\tMa=0;\n\tSb=0;\n\tEb=0;\n\tMb=0;\n\n\t/*@\n\nloop invariant i2: 0 <= Ea <= 1;\n\n\nloop invariant i5: 0 <= Eb <= 1;\n\n\n\n\n\n\n\n*/\nwhile(unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (Sb >= 1)) \nreturn 0;\n\n\t\t\tSb = Sb-1;\n\t\t\tSa = Ea+Ma+1;\n\t\t\tEa = 0;\n\t\t\tMa = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (! (I >= 1)) \nreturn 0;\n\n\t\t\t\tI = I -1;\n\t\t\t\tSa = Sa + Ea + Ma + 1;\n\t\t\t\tEa = 0;\n\t\t\t\tMa =0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (I>=1)) \nreturn 0;\n\n\t\t\t\t\tI=I-1;\n\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\tEb=0;\n\t\t\t\t\tMb=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\t\tEb=0;\n\t\t\t\t\t\tMb=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\tSb=Sb-1;\n\t\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Ea >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEa = Ea -1;\n\t\t\t\t\t\t\t\t\t\t\tMa = Ma +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Eb >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEb = Eb -1;\n\t\t\t\t\t\t\t\t\t\t\tMb = Mb +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t{;\n//@ assert(Ea + Ma <= 1);\n}\n\n\t{;\n//@ assert(Eb + Mb <= 1);\n}\n\n\t{;\n//@ assert(Mb  >= 0);\n}\n\n\t{;\n//@ assert(Eb  >= 0);\n}\n\n\t{;\n//@ assert(Ma  >= 0);\n}\n\n\t{;\n//@ assert(Ea  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= I;\nloop invariant 0 <= Sa <= I;\nloop invariant 0 <= Eb <= I;\nloop invariant 0 <= Mb <= I;\nloop invariant 0 <= Ea <= I;\nloop invariant 0 <= Ma <= I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\nloop invariant Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant Sa + Ea + Ma + I >= 1;\nloop invariant Sb + Eb + Mb + I >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint I;\n\tint Sa;\n\tint Ea;\n\tint Ma;\n\tint Sb;\n\tint Eb;\n\tint Mb;\n\n\tif (! (I>=1)) \nreturn 0;\n\n\tSa=0;\n\tEa=0;\n\tMa=0;\n\tSb=0;\n\tEb=0;\n\tMb=0;\n\n\t/*@\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (Sb >= 1)) \nreturn 0;\n\n\t\t\tSb = Sb-1;\n\t\t\tSa = Ea+Ma+1;\n\t\t\tEa = 0;\n\t\t\tMa = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (! (I >= 1)) \nreturn 0;\n\n\t\t\t\tI = I -1;\n\t\t\t\tSa = Sa + Ea + Ma + 1;\n\t\t\t\tEa = 0;\n\t\t\t\tMa =0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (I>=1)) \nreturn 0;\n\n\t\t\t\t\tI=I-1;\n\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\tEb=0;\n\t\t\t\t\tMb=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\t\tEb=0;\n\t\t\t\t\t\tMb=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\tSb=Sb-1;\n\t\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Ea >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEa = Ea -1;\n\t\t\t\t\t\t\t\t\t\t\tMa = Ma +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Eb >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEb = Eb -1;\n\t\t\t\t\t\t\t\t\t\t\tMb = Mb +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t{;\n//@ assert(Ea + Ma <= 1);\n}\n\n\t{;\n//@ assert(Eb + Mb <= 1);\n}\n\n\t{;\n//@ assert(Mb  >= 0);\n}\n\n\t{;\n//@ assert(Eb  >= 0);\n}\n\n\t{;\n//@ assert(Ma  >= 0);\n}\n\n\t{;\n//@ assert(Ea  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= Sa <= I;\nloop invariant 0 <= Ea <= I;\nloop invariant 0 <= Ma <= I;\nloop invariant 0 <= Sb <= I;\nloop invariant 0 <= Eb <= I;\nloop invariant 0 <= Mb <= I;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint I;\n\tint Sa;\n\tint Ea;\n\tint Ma;\n\tint Sb;\n\tint Eb;\n\tint Mb;\n\n\tif (! (I>=1)) \nreturn 0;\n\n\tSa=0;\n\tEa=0;\n\tMa=0;\n\tSb=0;\n\tEb=0;\n\tMb=0;\n\n\t/*@\n\n\n\n\n\n\n*/\nwhile(unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (Sb >= 1)) \nreturn 0;\n\n\t\t\tSb = Sb-1;\n\t\t\tSa = Ea+Ma+1;\n\t\t\tEa = 0;\n\t\t\tMa = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (! (I >= 1)) \nreturn 0;\n\n\t\t\t\tI = I -1;\n\t\t\t\tSa = Sa + Ea + Ma + 1;\n\t\t\t\tEa = 0;\n\t\t\t\tMa =0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (I>=1)) \nreturn 0;\n\n\t\t\t\t\tI=I-1;\n\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\tEb=0;\n\t\t\t\t\tMb=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\t\tEb=0;\n\t\t\t\t\t\tMb=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\tSb=Sb-1;\n\t\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Ea >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEa = Ea -1;\n\t\t\t\t\t\t\t\t\t\t\tMa = Ma +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Eb >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEb = Eb -1;\n\t\t\t\t\t\t\t\t\t\t\tMb = Mb +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t{;\n//@ assert(Ea + Ma <= 1);\n}\n\n\t{;\n//@ assert(Eb + Mb <= 1);\n}\n\n\t{;\n//@ assert(Mb  >= 0);\n}\n\n\t{;\n//@ assert(Eb  >= 0);\n}\n\n\t{;\n//@ assert(Ma  >= 0);\n}\n\n\t{;\n//@ assert(Ea  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 17,
                "annotations": "```\n/*@\nloop invariant 0 <= I <= I_pre;\nloop invariant 0 <= Sa <= Sa_pre;\nloop invariant 0 <= Ea <= Ea_pre;\nloop invariant 0 <= Ma <= Ma_pre;\nloop invariant 0 <= Sb <= Sb_pre;\nloop invariant 0 <= Eb <= Eb_pre;\nloop invariant 0 <= Mb <= Mb_pre;\nloop invariant I >= Sa + Ea + Ma;\nloop invariant I >= Sb + Eb + Mb;\nloop invariant I >= 1;\nloop invariant Sa >= 1 ==> Sa <= I_pre;\nloop invariant Ea >= 1 ==> Ea <= I_pre;\nloop invariant Ma >= 1 ==> Ma <= I_pre;\nloop invariant Sb >= 1 ==> Sb <= I_pre;\nloop invariant Eb >= 1 ==> Eb <= I_pre;\nloop invariant Mb >= 1 ==> Mb <= I_pre;\nloop invariant Ea + Ma <= 1 ==> Ea + Ma == 1;\nloop invariant Eb + Mb <= 1 ==> Eb + Mb == 1;\nloop invariant Mb >= 0;\nloop invariant Eb >= 0;\nloop invariant Ma >= 0;\nloop invariant Ea >= 0;\nloop invariant I >= Sa + Ea + Ma;\nloop invariant I >= Sb + Eb + Mb;\nloop invariant I >= 1;\nloop invariant Sa >= 1 ==> Sa <= I_pre;\nloop invariant Ea >= 1 ==> Ea <= I_pre;\nloop invariant Ma >= 1 ==> Ma <= I_pre;\nloop invariant Sb >= 1 ==> Sb <= I_pre;\nloop invariant Eb >= 1 ==> Eb <= I_pre;\nloop invariant Mb >= 1 ==> Mb <= I_pre;\nloop invariant Ea + Ma <= 1 ==> Ea + Ma == 1;\nloop invariant Eb + Mb <= 1 ==> Eb + Mb == 1;\nloop invariant Mb >= 0;\nloop invariant Eb >= 0;\nloop invariant Ma >= 0;\nloop invariant Ea >= 0;\nloop invariant I >= Sa + Ea + Ma;\nloop invariant I >= Sb + Eb + Mb;\nloop invariant I >= 1;\nloop invariant Sa >= 1 ==> Sa <= I_pre;\nloop invariant Ea >= 1 ==> Ea <= I_pre;\nloop invariant Ma >= 1 ==> Ma <= I_pre;\nloop invariant Sb >= 1 ==> Sb <= I_pre;\nloop invariant Eb >= 1 ==> Eb <= I_pre;\nloop invariant Mb >= 1 ==> Mb <= I_pre;\nloop invariant Ea + Ma <= 1 ==> Ea + Ma == 1;\nloop invariant Eb + Mb <= 1 ==> Eb + Mb == 1;\nloop invariant Mb >= 0;\nloop invariant Eb >= 0;\nloop invariant Ma >= 0;\nloop invariant Ea >= 0;\nloop invariant I >= Sa + Ea + Ma;\nloop invariant I >= Sb + Eb + Mb;\nloop invariant I >= 1;\nloop invariant Sa >= 1 ==> Sa <= I_pre;\nloop invariant Ea >= 1 ==> Ea <= I_pre;\nloop invariant Ma >= 1 ==> Ma <= I_pre;\nloop invariant Sb >= 1 ==> Sb <= I_pre;\nloop invariant Eb >= 1 ==> Eb <= I_pre;\nloop invariant Mb >= 1 ==> Mb <= I_pre;\nloop invariant Ea + Ma <= 1 ==> Ea + Ma == 1;\nloop invariant Eb + Mb <= 1 ==> Eb + Mb == 1;\nloop invariant Mb >= 0;\nloop invariant Eb >= 0;\nloop invariant Ma >= 0;\nloop invariant Ea >= 0;\nloop invariant I >= Sa + Ea + Ma;\nloop invariant I >= Sb + Eb + Mb;\nloop invariant I >= 1;\nloop invariant Sa >= 1 ==> Sa <= I_pre;\nloop invariant Ea >= 1 ==> Ea <= I_pre;\nloop invariant Ma >= 1 ==> Ma <= I_pre;\nloop invariant Sb >= 1 ==> Sb <= I_pre;\nloop invariant Eb >= 1 ==> Eb <= I_pre;\nloop invariant Mb >= 1 ==> Mb <= I_pre;\nloop invariant Ea + Ma <= 1 ==> Ea + Ma == 1;\nloop invariant Eb + Mb <= 1 ==> Eb + Mb == 1;\nloop invariant Mb >= 0;\nloop invariant Eb >= 0;\nloop invariant Ma >= 0;\nloop invariant Ea >= 0;\nloop invariant I >= Sa + Ea + Ma;\nloop invariant I >= Sb + Eb + Mb;\nloop invariant I >= 1;\nloop invariant Sa >= 1 ==> Sa <= I_pre;\nloop invariant Ea >= 1 ==> Ea <= I_pre;\nloop invariant Ma >= 1 ==> Ma <= I_pre;\nloop invariant Sb >= 1 ==> Sb <= I_pre;\nloop invariant Eb >= 1 ==> Eb <= I_pre;\nloop invariant Mb >= 1 ==> Mb <= I_pre;\nloop invariant Ea + Ma <= 1 ==> Ea + Ma == 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint I;\n\tint Sa;\n\tint Ea;\n\tint Ma;\n\tint Sb;\n\tint Eb;\n\tint Mb;\n\n\tif (! (I>=1)) \nreturn 0;\n\n\tSa=0;\n\tEa=0;\n\tMa=0;\n\tSb=0;\n\tEb=0;\n\tMb=0;\n\n\t/*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i19: Mb >= 0;\nloop invariant i20: Eb >= 0;\nloop invariant i21: Ma >= 0;\nloop invariant i22: Ea >= 0;\n*/\nwhile(unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (Sb >= 1)) \nreturn 0;\n\n\t\t\tSb = Sb-1;\n\t\t\tSa = Ea+Ma+1;\n\t\t\tEa = 0;\n\t\t\tMa = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (! (I >= 1)) \nreturn 0;\n\n\t\t\t\tI = I -1;\n\t\t\t\tSa = Sa + Ea + Ma + 1;\n\t\t\t\tEa = 0;\n\t\t\t\tMa =0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (I>=1)) \nreturn 0;\n\n\t\t\t\t\tI=I-1;\n\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\tEb=0;\n\t\t\t\t\tMb=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\t\tEb=0;\n\t\t\t\t\t\tMb=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\tSb=Sb-1;\n\t\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Ea >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEa = Ea -1;\n\t\t\t\t\t\t\t\t\t\t\tMa = Ma +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Eb >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEb = Eb -1;\n\t\t\t\t\t\t\t\t\t\t\tMb = Mb +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t{;\n//@ assert(Ea + Ma <= 1);\n}\n\n\t{;\n//@ assert(Eb + Mb <= 1);\n}\n\n\t{;\n//@ assert(Mb  >= 0);\n}\n\n\t{;\n//@ assert(Eb  >= 0);\n}\n\n\t{;\n//@ assert(Ma  >= 0);\n}\n\n\t{;\n//@ assert(Ea  >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 55: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint I;\n\tint Sa;\n\tint Ea;\n\tint Ma;\n\tint Sb;\n\tint Eb;\n\tint Mb;\n\n\tif (! (I>=1)) \nreturn 0;\n\n\tSa=0;\n\tEa=0;\n\tMa=0;\n\tSb=0;\n\tEb=0;\n\tMb=0;\n\n\t/*@\nloop invariant i1: I >= 1;\nloop invariant i2: Sa >= 0;\nloop invariant i3: Ea >= 0;\nloop invariant i4: Ma >= 0;\nloop invariant i5: Sb >= 0;\nloop invariant i6: Eb >= 0;\nloop invariant i7: Mb >= 0;\nloop invariant i8: (Sa >= Sa + Ea + Ma);\nloop invariant i9: (Eb + Mb <= 1);\nloop invariant i10: (Ea + Ma <= 1);\nloop invariant i11: 0 <= Sa <= I;\nloop invariant i12: 0 <= Ea <= I;\nloop invariant i13: 0 <= Ma <= I;\nloop invariant i14: 0 <= Sb <= I;\nloop invariant i15: 0 <= Eb <= I;\nloop invariant i16: 0 <= Mb <= I;\nloop invariant i17: Sa + Ea + Ma + I * (I + 1) / 2 == I * I;\nloop invariant i18: Sb + Eb + Mb + I * (I + 1) / 2 == I * I;\nloop invariant i19: Sa + Sb >= 0;\nloop invariant i20: Ea + Eb >= 0;\nloop invariant i21: Ma + Mb >= 0;\nloop invariant i22: Sa + Ea + Ma + Sb + Eb + Mb >= 0;\nloop invariant i23: Sa + Ea + Ma + Sb + Eb + Mb <= I * (I + 1);\nloop invariant i24: 1 <= I <= unknown_int();\nloop invariant i25: Sa + Ea + Ma <= I;\nloop invariant i26: Sb + Eb + Mb <= I;\nloop invariant i27: Sa + Ea + Ma + Sb + Eb + Mb <= I;\nloop invariant i28: (Sa >= 1) ==> (Sa - 1 >= 0);\nloop invariant i29: (Ea >= 1) ==> (Ea - 1 >= 0);\nloop invariant i30: (Ma >= 1) ==> (Ma - 1 >= 0);\nloop invariant i31: (Sb >= 1) ==> (Sb - 1 >= 0);\nloop invariant i32: (Eb >= 1) ==> (Eb - 1 >= 0);\nloop invariant i33: (Mb >= 1) ==> (Mb - 1 >= 0);\nloop invariant i34: (unknown_int()) ==> (Sa >= 1);\nloop invariant i35: (unknown_int()) ==> (Sb >= 1);\nloop invariant i36: (unknown_int()) ==> (I >= 1);\nloop invariant i37: i1;\nloop invariant i38: i2;\nloop invariant i39: i3;\nloop invariant i40: i4;\nloop invariant i41: i5;\nloop invariant i42: i6;\nloop invariant i43: i7;\nloop invariant i44: i8;\nloop invariant i45: i9;\nloop invariant i46: i10;\nloop invariant i47: i11;\nloop invariant i48: i12;\nloop invariant i49: i13;\nloop invariant i50: i14;\nloop invariant i51: i15;\nloop invariant i52: i16;\nloop invariant i53: i17;\nloop invariant i54: i18;\nloop invariant i55: i19;\nloop invariant i56: i20;\nloop invariant i57: i21;\nloop invariant i58: i22;\nloop invariant i59: i23;\nloop invariant i60: i24;\nloop invariant i61: i25;\nloop invariant i62: i26;\nloop invariant i63: i27;\nloop invariant i64: i28;\nloop invariant i65: i29;\nloop invariant i66: i30;\nloop invariant i67: i31;\nloop invariant i68: i32;\nloop invariant i69: i33;\nloop invariant i70: i34;\nloop invariant i71: i35;\nloop invariant i72: i36;\nloop invariant i73: i37;\nloop invariant i74: i38;\nloop invariant i75: i39;\nloop invariant i76: i40;\nloop invariant i77: i41;\nloop invariant i78: i42;\nloop invariant i79: i43;\nloop invariant i80: i44;\nloop invariant i81: i45;\nloop invariant i82: i46;\nloop invariant i83: i47;\nloop invariant i84: i48;\nloop invariant i85: i49;\nloop invariant i86: i50;\nloop invariant i87: i51;\nloop invariant i88: i52;\nloop invariant i89: i53;\nloop invariant i90: i54;\nloop invariant i91: i55;\nloop invariant i92: i56;\nloop invariant i93: i57;\nloop invariant i94: i58;\nloop invariant i95: i59;\nloop invariant i96: i60;\nloop invariant i97: i61;\nloop invariant i98: i62;\nloop invariant i99: i63;\nloop invariant i100: i64;\nloop invariant i101: i65;\nloop invariant i102: i66;\nloop invariant i103: i67;\nloop invariant i104: i68;\nloop invariant i105: i69;\nloop invariant i106: i70;\nloop invariant i107: i71;\nloop invariant i108: i72;\nloop invariant i109: i73;\nloop invariant i110: i74;\nloop invariant i111: i75;\nloop invariant i112: i76;\nloop invariant i113: i77;\nloop invariant i114: i78;\nloop invariant i115: i79;\nloop invariant i116: i80;\nloop invariant i117: i81;\nloop invariant i118: i82;\nloop invariant i119: i83;\nloop invariant i120: i84;\nloop invariant i121: i85;\nloop invariant i122: i86;\nloop invariant i123: i87;\nloop invariant i124: i88;\nloop invariant i125: i89;\nloop invariant i126: i90;\nloop invariant i127: i91;\nloop invariant i128: i92;\nloop invariant i129: i93;\nloop invariant i130: i94;\nloop invariant i131: i95;\nloop invariant i132: i96;\nloop invariant i133: i97;\nloop invariant i134: i98;\nloop invariant i135: i99;\nloop invariant i136: i100;\nloop invariant i137: i101;\nloop invariant i138: i102;\nloop invariant i139: i103;\nloop invariant i140: i104;\nloop invariant i141: i105;\nloop invariant i142: i106;\nloop invariant i143: i107;\nloop invariant i144: i108;\nloop invariant i145: i109;\nloop invariant i146: i110;\nloop invariant i147: i111;\nloop invariant i148: i112;\nloop invariant i149: i113;\nloop invariant i150: i114;\nloop invariant i151: i115;\nloop invariant i152: i116;\nloop invariant i153: i117;\nloop invariant i154: i118;\nloop invariant i155: i119;\nloop invariant i156: i120;\nloop invariant i157: i121;\nloop invariant i158: i122;\nloop invariant i159: i123;\nloop invariant i160: i124;\nloop invariant i161: i125;\nloop invariant i162: i126;\nloop invariant i163: i127;\nloop invariant i164: i128;\nloop invariant i165: i129;\nloop invariant i166: i130;\nloop invariant i167: i131;\nloop invariant i168: i132;\nloop invariant i169: i133;\nloop invariant i170: i134;\nloop invariant i171: i135;\nloop invariant i172: i136;\nloop invariant i173: i137;\nloop invariant i174: i138;\nloop invariant i175: i139;\nloop invariant i176: i140;\nloop invariant i177: i141;\nloop invariant i178: i142;\nloop invariant i179: i143;\nloop invariant i180: i144;\nloop invariant i181: i145;\nloop invariant i182: i146;\nloop invariant i183: i147;\nloop invariant i184: i148;\nloop invariant i185: i149;\nloop invariant i186: i150;\nloop invariant i187: i151;\nloop invariant i188: i152;\nloop invariant i189: i153;\nloop invariant i190: i154;\nloop invariant i191: i155;\nloop invariant i192: i156;\nloop invariant i193: i157;\nloop invariant i194: i158;\nloop invariant i195: 1 <= I <= 100000;\nloop invariant i196: 0 <= Ea <= Sa;\nloop invariant i197: 0 <= Eb <= Sb;\nloop invariant i198: Ea + Ma <= 1;\nloop invariant i199: Eb + Mb <= 1;\nloop invariant i200: Mb  >= 0;\nloop invariant i201: Eb  >= 0;\nloop invariant i202: Ma  >= 0;\nloop invariant i203: Ea  >= 0;\nloop invariant i204: Sa + Sb <= I;\nloop invariant i205: 0 <= Ea <= 1;\nloop invariant i206: 0 <= Eb <= 1;\nloop invariant i207: 0 <= Ma <= 1;\nloop invariant i208: 0 <= Mb <= 1;\nloop invariant i209: Sa + Sb + Ea + Eb + Ma + Mb <= I;\nloop invariant i210: Sa + Sb + Ea + Eb + Ma + Mb >= I;\nloop invariant i211: I >= Sa + Sb + Ea + Eb + Ma + Mb;\nloop invariant i212: 0 <= Sa + Ma <= I;\nloop invariant i213: 0 <= Sb + Mb <= I;\nloop invariant i214: Sa + Ma + Sb + Mb <= I;\nloop invariant i215: I >= Sa + Ma + Sb + Mb;\nloop invariant i216: Sa + Ma <= I;\nloop invariant i217: Sb + Mb <= I;\nloop invariant i218: Ma <= I - Sa;\nloop invariant i219: Mb <= I - Sb;\nloop invariant i220: Ea <= I - Sa - Ma;\nloop invariant i221: Eb <= I - Sb - Mb;\nloop invariant i222: Sa + Ma + Sb + Mb + Ea + Eb <= I;\nloop invariant i223: 0 <= I <= 100000;\nloop invariant i224: 0 <= Sa <= 100000;\nloop invariant i225: 0 <= Ea <= 100000;\nloop invariant i226: 0 <= Ma <= 100000;\nloop invariant i227: 0 <= Sb <= 100000;\nloop invariant i228: 0 <= Eb <= 100000;\nloop invariant i229: 0 <= Mb <= 100000;\nloop invariant i230: (Ea + Ma <= 1) ==> (Ea + Ma == 0);\nloop invariant i231: (Eb + Mb <= 1) ==> (Eb + Mb == 0);\nloop invariant i232: (Mb >= 0) ==> (Mb == 0);\nloop invariant i233: (Eb >= 0) ==> (Eb == 0);\nloop invariant i234: (Ma >= 0) ==> (Ma == 0);\nloop invariant i235: (Ea >= 0) ==> (Ea == 0);\nloop invariant i236: (Sa >= 1) ==> (Sa == 1);\nloop invariant i237: (Sb >= 1) ==> (Sb == 1);\nloop invariant i238: (I >= 1) ==> (I == 1);\nloop invariant i239: 0 <= Ma <= Ea;\nloop invariant i240: 0 <= Mb <= Eb;\nloop invariant i241: Sa + Ea + Ma + Sb + Eb + Mb = I;\nloop invariant i242: Sa + Sb + I = 2 * (Ea + Ma) + (Ea + Ma) * (Ea + Ma) / 2;\nloop invariant i243: Sb + Sb * Sb / 2 = Ea + Ma + I;\nloop invariant i244: I >= Sa + Ea + Ma + Sb + Eb + Mb;\nloop invariant i245: Sa == Sa + Ea + Ma + Sb + Eb + Mb;\nloop invariant i246: Ea == Ea - 1;\nloop invariant i247: Ma == Ma + 1;\nloop invariant i248: Eb == Eb - 1;\nloop invariant i249: Mb == Mb + 1;\nloop invariant i250: 0 <= Sa <= I - 1;\nloop invariant i251: 0 <= Sb <= I - 1;\nloop invariant i252: I - Sa - Sb - 1 - 2 * Ea - 2 * Eb >= unknown_int();\nloop invariant i253: Sa + Sb - 1 - 2 * Ea - 2 * Eb <= unknown_int();\nloop invariant i254: 1 <= Sa <= I * (I + 1) / 2;\nloop invariant i255: 0 <= Sb <= I * (I + 1) / 2;\nloop invariant i256: Sa + Ea + Ma = I;\nloop invariant i257: Sb + Eb + Mb = I;\nloop invariant i258: !(Sa >= 1) ==> (I >= 1) ==> (Sa >= 1);\nloop invariant i259: !(Sb >= 1) ==> (I >= 1) ==> (Sb >= 1);\nloop invariant i260: !(Ea >= 1) ==> (I >= 1) ==> (Ea >= 1);\nloop invariant i261: !(Eb >= 1) ==> (I >= 1) ==> (Eb >= 1);\nloop invariant i262: 1 <= I;\nloop invariant i263: Sa + Ea + Ma + I >= 1;\nloop invariant i264: Sb + Eb + Mb + I >= 1;\nloop invariant i265: Sa + Ea + Ma + I >= Sb + Eb + Mb + I;\nloop invariant i266: Sb + Eb + Mb + I >= Sa + Ea + Ma + I;\nloop invariant i267: 0 <= I <= I_pre;\nloop invariant i268: 0 <= Sa <= Sa_pre;\nloop invariant i269: 0 <= Ea <= Ea_pre;\nloop invariant i270: 0 <= Ma <= Ma_pre;\nloop invariant i271: 0 <= Sb <= Sb_pre;\nloop invariant i272: 0 <= Eb <= Eb_pre;\nloop invariant i273: 0 <= Mb <= Mb_pre;\nloop invariant i274: I >= Sa + Ea + Ma;\nloop invariant i275: I >= Sb + Eb + Mb;\nloop invariant i276: Sa >= 1 ==> Sa <= I_pre;\nloop invariant i277: Ea >= 1 ==> Ea <= I_pre;\nloop invariant i278: Ma >= 1 ==> Ma <= I_pre;\nloop invariant i279: Sb >= 1 ==> Sb <= I_pre;\nloop invariant i280: Eb >= 1 ==> Eb <= I_pre;\nloop invariant i281: Mb >= 1 ==> Mb <= I_pre;\nloop invariant i282: Ea + Ma <= 1 ==> Ea + Ma == 1;\nloop invariant i283: Eb + Mb <= 1 ==> Eb + Mb == 1;\n*/\nwhile(unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (Sb >= 1)) \nreturn 0;\n\n\t\t\tSb = Sb-1;\n\t\t\tSa = Ea+Ma+1;\n\t\t\tEa = 0;\n\t\t\tMa = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (! (I >= 1)) \nreturn 0;\n\n\t\t\t\tI = I -1;\n\t\t\t\tSa = Sa + Ea + Ma + 1;\n\t\t\t\tEa = 0;\n\t\t\t\tMa =0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (I>=1)) \nreturn 0;\n\n\t\t\t\t\tI=I-1;\n\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\tEb=0;\n\t\t\t\t\tMb=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\t\tEb=0;\n\t\t\t\t\t\tMb=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\tSb=Sb-1;\n\t\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Ea >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEa = Ea -1;\n\t\t\t\t\t\t\t\t\t\t\tMa = Ma +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Eb >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEb = Eb -1;\n\t\t\t\t\t\t\t\t\t\t\tMb = Mb +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t{;\n//@ assert(Ea + Ma <= 1);\n}\n\n\t{;\n//@ assert(Eb + Mb <= 1);\n}\n\n\t{;\n//@ assert(Mb  >= 0);\n}\n\n\t{;\n//@ assert(Eb  >= 0);\n}\n\n\t{;\n//@ assert(Ma  >= 0);\n}\n\n\t{;\n//@ assert(Ea  >= 0);\n}\n\n}",
        "combined_annotation_num_solver_calls": 206,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint nondet_int();\n\nint main()\n{\n\tint I;\n\tint Sa;\n\tint Ea;\n\tint Ma;\n\tint Sb;\n\tint Eb;\n\tint Mb;\n\n\tif (! (I>=1)) \nreturn 0;\n\n\tSa=0;\n\tEa=0;\n\tMa=0;\n\tSb=0;\n\tEb=0;\n\tMb=0;\n\n\t/*@\n\nloop invariant i2: Sa >= 0;\nloop invariant i3: Ea >= 0;\nloop invariant i4: Ma >= 0;\nloop invariant i5: Sb >= 0;\nloop invariant i6: Eb >= 0;\nloop invariant i7: Mb >= 0;\n\nloop invariant i9: (Eb + Mb <= 1);\nloop invariant i10: (Ea + Ma <= 1);\n\n\n\n\n\n\n\n\nloop invariant i19: Sa + Sb >= 0;\nloop invariant i20: Ea + Eb >= 0;\nloop invariant i21: Ma + Mb >= 0;\nloop invariant i22: Sa + Ea + Ma + Sb + Eb + Mb >= 0;\n\n\n\n\n\nloop invariant i28: (Sa >= 1) ==> (Sa - 1 >= 0);\nloop invariant i29: (Ea >= 1) ==> (Ea - 1 >= 0);\nloop invariant i30: (Ma >= 1) ==> (Ma - 1 >= 0);\nloop invariant i31: (Sb >= 1) ==> (Sb - 1 >= 0);\nloop invariant i32: (Eb >= 1) ==> (Eb - 1 >= 0);\nloop invariant i33: (Mb >= 1) ==> (Mb - 1 >= 0);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i198: Ea + Ma <= 1;\nloop invariant i199: Eb + Mb <= 1;\nloop invariant i200: Mb  >= 0;\nloop invariant i201: Eb  >= 0;\nloop invariant i202: Ma  >= 0;\nloop invariant i203: Ea  >= 0;\n\nloop invariant i205: 0 <= Ea <= 1;\nloop invariant i206: 0 <= Eb <= 1;\nloop invariant i207: 0 <= Ma <= 1;\nloop invariant i208: 0 <= Mb <= 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i225: 0 <= Ea <= 100000;\nloop invariant i226: 0 <= Ma <= 100000;\n\nloop invariant i228: 0 <= Eb <= 100000;\nloop invariant i229: 0 <= Mb <= 100000;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(unknown_int())\n\t{\n\t\tif (unknown_int())\n\t\t{\n\t\t\tif (! (Sb >= 1)) \nreturn 0;\n\n\t\t\tSb = Sb-1;\n\t\t\tSa = Ea+Ma+1;\n\t\t\tEa = 0;\n\t\t\tMa = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (unknown_int())\n\t\t\t{\n\t\t\t\tif (! (I >= 1)) \nreturn 0;\n\n\t\t\t\tI = I -1;\n\t\t\t\tSa = Sa + Ea + Ma + 1;\n\t\t\t\tEa = 0;\n\t\t\t\tMa =0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (unknown_int())\n\t\t\t\t{\n\t\t\t\t\tif (! (I>=1)) \nreturn 0;\n\n\t\t\t\t\tI=I-1;\n\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\tEb=0;\n\t\t\t\t\tMb=0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\tSb=Sb+Eb+Mb+1;\n\t\t\t\t\t\tEb=0;\n\t\t\t\t\t\tMb=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\tSb=Sb-1;\n\t\t\t\t\t\t\t\tI=I+Sa+Ea+Ma;\n\t\t\t\t\t\t\t\tSa=0;\n\t\t\t\t\t\t\t\tEa=1;\n\t\t\t\t\t\t\t\tMa=0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (! (Sb>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (! (Sa>=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\tSa=Sa-1;\n\t\t\t\t\t\t\t\t\t\tI=I+Sb+Eb+Mb;\n\t\t\t\t\t\t\t\t\t\tSb=0;\n\t\t\t\t\t\t\t\t\t\tEb=1;\n\t\t\t\t\t\t\t\t\t\tMb=0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (unknown_int())\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Ea >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEa = Ea -1;\n\t\t\t\t\t\t\t\t\t\t\tMa = Ma +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (! (Eb >=1)) \nreturn 0;\n\n\t\t\t\t\t\t\t\t\t\t\tEb = Eb -1;\n\t\t\t\t\t\t\t\t\t\t\tMb = Mb +1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t{;\n//@ assert(Ea + Ma <= 1);\n}\n\n\t{;\n//@ assert(Eb + Mb <= 1);\n}\n\n\t{;\n//@ assert(Mb  >= 0);\n}\n\n\t{;\n//@ assert(Eb  >= 0);\n}\n\n\t{;\n//@ assert(Ma  >= 0);\n}\n\n\t{;\n//@ assert(Ea  >= 0);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/popl.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/05.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/07.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/37.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/39.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv_simp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/xy10.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/const_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe3.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe4.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbr.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbrprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bk-nat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bkley.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/efm.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/ex1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnatprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifo.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/pldi082_unbounded.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_unsafe1.c"
        ],
        "skipped": [],
        "total": 154,
        "success_count": 128,
        "failure_count": 26,
        "success_rate": 0.8311688311688312
    }
}