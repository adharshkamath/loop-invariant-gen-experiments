{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  while(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x1 <= d1;\nloop invariant 0 <= x2 <= d2;\nloop invariant 0 <= x3 <= d3;\nloop invariant 0 <= d1 <= d1 + x1;\nloop invariant 0 <= d2 <= d2 + x2;\nloop invariant 0 <= d3 <= d3 + x3;\nloop invariant x1 <= d1;\nloop invariant x2 <= d2;\nloop invariant x3 <= d3;\nloop invariant d1 <= d1 + x1;\nloop invariant d2 <= d2 + x2;\nloop invariant d3 <= d3 + x3;\nloop invariant x1 <= d1;\nloop invariant x2 <= d2;\nloop invariant x3 <= d3;\nloop invariant d1 <= d1 + x1;\nloop invariant d2 <= d2 + x2;\nloop invariant d3 <= d3 + x3;\nloop invariant x1 <= d1;\nloop invariant x2 <= d2;\nloop invariant x3 <= d3;\nloop invariant d1 <= d1 + x1;\nloop invariant d2 <= d2 + x2;\nloop invariant d3 <= d3 + x3;\nloop invariant c1 ==> d1 <= d1 + x1;\nloop invariant c2 ==> d2 <= d2 + x2;\nloop invariant !c1 && !c2 ==> d3 <= d3 + x3;\nloop invariant x1 <= d1;\nloop invariant x2 <= d2;\nloop invariant x3 <= d3;\nloop invariant d1 <= d1 + x1;\nloop invariant d2 <= d2 + x2;\nloop invariant d3 <= d3 + x3;\nloop invariant c1 ==> d1 <= d1 + x1;\nloop invariant c2 ==> d2 <= d2 + x2;\nloop invariant !c1 && !c2 ==> d3 <= d3 + x3;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant d1 + x1 >= 1;\nloop invariant d2 + x2 >= 1;\nloop invariant d3 + x3 >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant (x1 >= x2 ==> x2 >= d2) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant ((x1 >= x2 ==> x2 >= d2) ==> (x1 >= x3 ==> x3 >= d3)) ==> (x1 >= x2 ==> x2 >= d2);\nloop invariant ((x1 >= x3 ==> x3 >= d3) ==> (x1 >= x2 ==> x2 >= d2)) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant (x1 >= x2 ==> x2 >= d2) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant ((x1 >= x2 ==> x2 >= d2) ==> (x1 >= x3 ==> x3 >= d3)) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant ((x1 >= x3 ==> x3 >= d3) ==> (x1 >= x2 ==> x2 >= d2)) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant (x1 >= x2 ==> x2 >= d2) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant ((x1 >= x2 ==> x2 >= d2) ==> (x1 >= x3 ==> x3 >= d3)) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant ((x1 >= x3 ==> x3 >= d3) ==> (x1 >= x2 ==> x2 >= d2)) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant (x1 >= x2 ==> x2 >= d2) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant ((x1 >= x2 ==> x2 >= d2) ==> (x1 >= x3 ==> x3 >= d3)) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant ((x1 >= x3 ==> x3 >= d3) ==> (x1 >= x2 ==> x2 >= d2)) ==> (x1 >= x3 ==> x3 >= d3);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= x1 + d1;\nloop invariant 0 <= x2 <= x2 + d2;\nloop invariant 0 <= x3 <= x3 + d3;\nloop invariant 0 <= d1;\nloop invariant 0 <= d2;\nloop invariant 0 <= d3;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= x1 - d1 && x2 >= x2 - d2 && x3 >= x3 - d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 <= x1 + d1 && x2 <= x2 + d2 && x3 <= x3 + d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (c1 == 0 || c1 == 1);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (c2 == 0 || c2 == 1);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (c1 == 0 && c2 == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= 2147483647;\nloop invariant 0 <= x2 <= 2147483647;\nloop invariant 0 <= x3 <= 2147483647;\nloop invariant 0 <= d1 <= 2147483647;\nloop invariant 0 <= d2 <= 2147483647;\nloop invariant 0 <= d3 <= 2147483647;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 <= 2147483647;\nloop invariant x2 <= 2147483647;\nloop invariant x3 <= 2147483647;\nloop invariant d1 <= 2147483647;\nloop invariant d2 <= 2147483647;\nloop invariant d3 <= 2147483647;\nloop invariant (x1 > 0) ==> (x1 >= d1);\nloop invariant (x2 > 0) ==> (x2 >= d2);\nloop invariant (x3 > 0) ==> (x3 >= d3);\nloop invariant (x1 > 0) ==> (x1 >= d1);\nloop invariant (x2 > 0) ==> (x2 >= d2);\nloop invariant (x3 > 0) ==> (x3 >= d3);\nloop invariant (x1 > 0) ==> (x1 >= x2);\nloop invariant (x2 > 0) ==> (x2 >= x3);\nloop invariant (x1 > 0) ==> (x1 >= x3);\nloop invariant (x1 > 0) ==> (x1 >= x2 - d1);\nloop invariant (x2 > 0) ==> (x2 >= x3 - d2);\nloop invariant (x3 > 0) ==> (x3 >= x1 - d3);\nloop invariant (x1 > 0) ==> (x1 >= x2 - d1);\nloop invariant (x2 > 0) ==> (x2 >= x3 - d2);\nloop invariant (x3 > 0) ==> (x3 >= x1 - d3);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x1 <= 4294967295;\nloop invariant 1 <= x2 <= 4294967295;\nloop invariant 1 <= x3 <= 4294967295;\nloop invariant d1 == 1;\nloop invariant d2 == 1;\nloop invariant d3 == 1;\nloop invariant c1 == 0;\nloop invariant c2 == 0;\nloop invariant ((x1 == 0) || (x2 == 0) || (x3 == 0));\nloop invariant ((x1 == 0) || (c1 == 0));\nloop invariant ((x2 == 0) || (c2 == 0));\nloop invariant ((x3 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x1 == 0) ==> (x2 == 0) || (x3 == 0));\nloop invariant ((x2 == 0) ==> (x1 == 0) || (x3 == 0));\nloop invariant ((x3 == 0) ==> (x1 == 0) || (x2 == 0));\nloop invariant ((x1 == 0) ==> (x2 == 0) || (c1 == 0));\nloop invariant ((x2 == 0) ==> (x1 == 0) || (c2 == 0));\nloop invariant ((x3 == 0) ==> (c1 == 0) || (c2 == 0));\nloop invariant ((x1 == 0) ==> (x3 == 0) || (c1 == 0));\nloop invariant ((x2 == 0) ==> (x3 == 0) || (c2 == 0));\nloop invariant ((x3 == 0) ==> (x1 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x1 == 0) ==> (x2 == 0) || (x3 == 0) || (c1 == 0));\nloop invariant ((x2 == 0) ==> (x1 == 0) || (x3 == 0) || (c2 == 0));\nloop invariant ((x3 == 0) ==> (x1 == 0) || (x2 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x1 == 0) ==> (x2 == 0) || (x3 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x2 == 0) ==> (x1 == 0) || (x3 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x3 == 0) ==> (x1 == 0) || (x2 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x1 == 0) ==> (x2 == 0) || (x3 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x2 == 0) ==> (x1 == 0) || (x3 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x3 == 0) ==> (x1 == 0) || (x2 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x1 == 0) ==> (x2 == 0) || (x3 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x2 == 0) ==> (x1 == 0) || (x3 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x3 == 0) ==> (x1 == 0) || (x2 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x1 == 0) ==> (x2 == 0) || (x3 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x2 == 0) ==> (x1 == 0) || (x3 == 0) || (c1 == 0) || (c2 == 0));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= x2 <= x3;\nloop invariant d1 <= x1 <= x2 <= x3;\nloop invariant d2 <= x2 <= x3;\nloop invariant d3 <= x3;\nloop invariant c1 ==> x1 != 0;\nloop invariant c2 ==> x2 != 0;\nloop invariant !c1 || !c2 ==> x3 != 0;\nloop invariant c1 ==> d1 >= 1;\nloop invariant c2 ==> d2 >= 1;\nloop invariant !c1 || !c2 ==> d3 >= 1;\nloop invariant x1 == 0 ==> d1 >= 1;\nloop invariant x2 == 0 ==> d2 >= 1;\nloop invariant x3 == 0 ==> d3 >= 1;\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> d1 >= 1;\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> d2 >= 1;\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> d3 >= 1;\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> d1 >= 1 || d2 >= 1 || d3 >= 1;\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> d1 >= 1 && d2 >= 1 && d3 >= 1 ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant x1 <= x1 + unknown_uint();\nloop invariant x2 <= x2 + unknown_uint();\nloop invariant x3 <= x3 + unknown_uint();\nloop invariant d1 <= d1 + unknown_uint();\nloop invariant d2 <= d2 + unknown_uint();\nloop invariant d3 <= d3 + unknown_uint();\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 - d1 >= 0 && x2 - d2 >= 0 && x3 - d3 >= 0);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 - d1 <= x1 && x2 - d2 <= x2 && x3 - d3 <= x3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (d1 <= x1 && d2 <= x2 && d3 <= x3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\n*/\n```",
            "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= d1 ==> c1 == 1;\nloop invariant x2 >= d2 ==> c2 == 1;\nloop invariant x3 >= d3 ==> c1 != 1 && c2 != 1;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 == 0 || x2 == 0 || x3 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant (c1 == true) ==> (x1 = x1 - d1);\nloop invariant (c1 == false) ==> ((c2 == true) ==> (x2 = x2 - d2));\nloop invariant (c1 == false) ==> ((c2 == false) ==> (x3 = x3 - d3));\nloop invariant (unknown_bool() == true) ==> (c1 = unknown_bool());\nloop invariant (unknown_bool() == true) ==> (c2 = unknown_bool());\n*/\n```",
            "```\n/*@\nloop invariant 0 <= d1 <= x1;\nloop invariant 0 <= d2 <= x2;\nloop invariant 0 <= d3 <= x3;\nloop invariant 0 <= c1 <= 1;\nloop invariant 0 <= c2 <= 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 >= 0;\nloop invariant c2 >= 0;\nloop invariant if (x1 > 0) then (x1 - d1 >= 0);\nloop invariant if (x2 > 0) then (x2 - d2 >= 0);\nloop invariant if (x3 > 0) then (x3 - d3 >= 0);\nloop invariant if (c1 == 1) then (x1 - d1 >= 0);\nloop invariant if (c2 == 1) then (x2 - d2 >= 0);\nloop invariant if (c1 == 0 && c2 == 0) then (x3 - d3 >= 0);\nloop invariant if (c1 == 1) then (x1 <= x1 - d1);\nloop invariant if (c2 == 1) then (x2 <= x2 - d2);\nloop invariant if (c1 == 0 && c2 == 0) then (x3 <= x3 - d3);\nloop invariant if (c1 == 1) then (x1 >= 0);\nloop invariant if (c2 == 1) then (x2 >= 0);\nloop invariant if (c1 == 0 && c2 == 0) then (x3 >= 0);\nloop invariant if (c1 == 1) then (x1 >= d1);\nloop invariant if (c2 == 1) then (x2 >= d2);\nloop invariant if (c1 == 0 && c2 == 0) then (x3 >= d3);\nloop invariant if (c1 == 1) then (d1 <= x1);\nloop invariant if (c2 == 1) then (d2 <= x2);\nloop invariant if (c1 == 0 && c2 == 0) then (d3 <= x3);\nloop invariant if (c1 == 1) then (x1 >= d1);\nloop invariant if (c2 == 1) then (x2 >= d2);\nloop invariant if (c1 == 0 && c2 == 0) then (x3 >= d3);\nloop invariant if (c1 == 1) then (x1 >= 0);\nloop invariant if (c2 == 1) then (x2 >= 0);\nloop invariant if (c1 == 0 && c2 == 0) then (x3 >= 0);\n*/\n```",
            "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= x2;\nloop invariant x1 >= x3;\nloop invariant x2 >= x3;\nloop invariant x1 >= x2 + (c2 ? 1 : 0);\nloop invariant x1 >= x3 + (c3 ? 1 : 0);\nloop invariant x2 >= x3 + (c3 ? 1 : 0);\nloop invariant x1 == 0 || x2 == 0 || x3 == 0;\n*/\n```",
            "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 == 1 || c1 == 0;\nloop invariant c2 == 1 || c2 == 0;\nloop invariant x1 >= 0 ==> d1 >= 1;\nloop invariant x2 >= 0 ==> d2 >= 1;\nloop invariant x3 >= 0 ==> d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 0 || c2 == 0;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant 0 <= c1 <= 1;\nloop invariant 0 <= c2 <= 1;\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (c1 == 0 || c2 == 0 || (c1 == 1 && c2 == 1));\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 <= unknown_uint() && x2 <= unknown_uint() && x3 <= unknown_uint());\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 <= unknown_uint() && d2 <= unknown_uint() && d3 <= unknown_uint());\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (c1 <= 1 && c2 <= 1);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (c1 == 0 || c2 == 0 || (c1 == 1 && c2 == 1));\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 <= unknown_uint() && x2 <= unknown_uint() && x3 <= unknown_uint());\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 <= unknown_uint() && d2 <= unknown_uint() && d3 <= unknown_uint());\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (c1 <= 1 && c2 <= 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1;\nloop invariant 0 <= x2;\nloop invariant 0 <= x3;\nloop invariant d1 <= 1;\nloop invariant d2 <= 1;\nloop invariant d3 <= 1;\nloop invariant 0 <= d1 <= 2;\nloop invariant 0 <= d2 <= 2;\nloop invariant 0 <= d3 <= 2;\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= 4294967295;\nloop invariant 0 <= x2 <= 4294967295;\nloop invariant 0 <= x3 <= 4294967295;\nloop invariant 0 <= d1 <= 4294967295;\nloop invariant 0 <= d2 <= 4294967295;\nloop invariant 0 <= d3 <= 4294967295;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0 ==> d1 >= 0;\nloop invariant x2 >= 0 ==> d2 >= 0;\nloop invariant x3 >= 0 ==> d3 >= 0;\nloop invariant x1 >= 0 ==> c1 == 1 ==> x1 == x1 - d1;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 1 ==> x2 == x2 - d2;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 == x3 - d3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 + x2 + x3 >= d1 + d2 + d3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 + x2 + x3 >= 0;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x2 ==> x1 >= x3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x2 >= x3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x2;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x2 >= x3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x2;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x2 >= x3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x2;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x2 >= x3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x2;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x2 >= x3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x2;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x3;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= d1;\nloop invariant 0 <= x2 <= d2;\nloop invariant 0 <= x3 <= d3;\nloop invariant 0 <= d1 <= d1 + x1;\nloop invariant 0 <= d2 <= d2 + x2;\nloop invariant 0 <= d3 <= d3 + x3;\nloop invariant x1 <= d1;\nloop invariant x2 <= d2;\nloop invariant x3 <= d3;\nloop invariant d1 <= d1 + x1;\nloop invariant d2 <= d2 + x2;\nloop invariant d3 <= d3 + x3;\nloop invariant x1 <= d1;\nloop invariant x2 <= d2;\nloop invariant x3 <= d3;\nloop invariant d1 <= d1 + x1;\nloop invariant d2 <= d2 + x2;\nloop invariant d3 <= d3 + x3;\nloop invariant x1 <= d1;\nloop invariant x2 <= d2;\nloop invariant x3 <= d3;\nloop invariant d1 <= d1 + x1;\nloop invariant d2 <= d2 + x2;\nloop invariant d3 <= d3 + x3;\nloop invariant c1 ==> d1 <= d1 + x1;\nloop invariant c2 ==> d2 <= d2 + x2;\nloop invariant !c1 && !c2 ==> d3 <= d3 + x3;\nloop invariant x1 <= d1;\nloop invariant x2 <= d2;\nloop invariant x3 <= d3;\nloop invariant d1 <= d1 + x1;\nloop invariant d2 <= d2 + x2;\nloop invariant d3 <= d3 + x3;\nloop invariant c1 ==> d1 <= d1 + x1;\nloop invariant c2 ==> d2 <= d2 + x2;\nloop invariant !c1 && !c2 ==> d3 <= d3 + x3;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant d1 + x1 >= 1;\nloop invariant d2 + x2 >= 1;\nloop invariant d3 + x3 >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n\n\nloop invariant i4: 0 <= d1 <= d1 + x1;\nloop invariant i5: 0 <= d2 <= d2 + x2;\nloop invariant i6: 0 <= d3 <= d3 + x3;\n\n\n\nloop invariant i10: d1 <= d1 + x1;\nloop invariant i11: d2 <= d2 + x2;\nloop invariant i12: d3 <= d3 + x3;\nloop invariant i13: c1 ==> d1 <= d1 + x1;\nloop invariant i14: c2 ==> d2 <= d2 + x2;\nloop invariant i15: !c1 && !c2 ==> d3 <= d3 + x3;\nloop invariant i16: d1 >= 1;\nloop invariant i17: d2 >= 1;\nloop invariant i18: d3 >= 1;\nloop invariant i19: d1 + x1 >= 1;\nloop invariant i20: d2 + x2 >= 1;\nloop invariant i21: d3 + x3 >= 1;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant (x1 >= x2 ==> x2 >= d2) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant ((x1 >= x2 ==> x2 >= d2) ==> (x1 >= x3 ==> x3 >= d3)) ==> (x1 >= x2 ==> x2 >= d2);\nloop invariant ((x1 >= x3 ==> x3 >= d3) ==> (x1 >= x2 ==> x2 >= d2)) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant (x1 >= x2 ==> x2 >= d2) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant ((x1 >= x2 ==> x2 >= d2) ==> (x1 >= x3 ==> x3 >= d3)) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant ((x1 >= x3 ==> x3 >= d3) ==> (x1 >= x2 ==> x2 >= d2)) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant (x1 >= x2 ==> x2 >= d2) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant ((x1 >= x2 ==> x2 >= d2) ==> (x1 >= x3 ==> x3 >= d3)) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant ((x1 >= x3 ==> x3 >= d3) ==> (x1 >= x2 ==> x2 >= d2)) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant (x1 >= x2 ==> x2 >= d2) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant ((x1 >= x2 ==> x2 >= d2) ==> (x1 >= x3 ==> x3 >= d3)) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant ((x1 >= x3 ==> x3 >= d3) ==> (x1 >= x2 ==> x2 >= d2)) ==> (x1 >= x3 ==> x3 >= d3);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= x1 + d1;\nloop invariant 0 <= x2 <= x2 + d2;\nloop invariant 0 <= x3 <= x3 + d3;\nloop invariant 0 <= d1;\nloop invariant 0 <= d2;\nloop invariant 0 <= d3;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= x1 - d1 && x2 >= x2 - d2 && x3 >= x3 - d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 <= x1 + d1 && x2 <= x2 + d2 && x3 <= x3 + d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (c1 == 0 || c1 == 1);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (c2 == 0 || c2 == 1);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (c1 == 0 && c2 == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\nloop invariant i1: 0 <= x1 <= x1 + d1;\nloop invariant i2: 0 <= x2 <= x2 + d2;\nloop invariant i3: 0 <= x3 <= x3 + d3;\nloop invariant i4: 0 <= d1;\nloop invariant i5: 0 <= d2;\nloop invariant i6: 0 <= d3;\nloop invariant i7: c1 == 0 || c1 == 1;\nloop invariant i8: c2 == 0 || c2 == 1;\nloop invariant i9: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= x1 - d1 && x2 >= x2 - d2 && x3 >= x3 - d3);\nloop invariant i10: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 <= x1 + d1 && x2 <= x2 + d2 && x3 <= x3 + d3);\nloop invariant i11: (x1 > 0 && x2 > 0 && x3 > 0) ==> (c1 == 0 || c1 == 1);\nloop invariant i12: (x1 > 0 && x2 > 0 && x3 > 0) ==> (c2 == 0 || c2 == 1);\nloop invariant i13: (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= 2147483647;\nloop invariant 0 <= x2 <= 2147483647;\nloop invariant 0 <= x3 <= 2147483647;\nloop invariant 0 <= d1 <= 2147483647;\nloop invariant 0 <= d2 <= 2147483647;\nloop invariant 0 <= d3 <= 2147483647;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 <= 2147483647;\nloop invariant x2 <= 2147483647;\nloop invariant x3 <= 2147483647;\nloop invariant d1 <= 2147483647;\nloop invariant d2 <= 2147483647;\nloop invariant d3 <= 2147483647;\nloop invariant (x1 > 0) ==> (x1 >= d1);\nloop invariant (x2 > 0) ==> (x2 >= d2);\nloop invariant (x3 > 0) ==> (x3 >= d3);\nloop invariant (x1 > 0) ==> (x1 >= d1);\nloop invariant (x2 > 0) ==> (x2 >= d2);\nloop invariant (x3 > 0) ==> (x3 >= d3);\nloop invariant (x1 > 0) ==> (x1 >= x2);\nloop invariant (x2 > 0) ==> (x2 >= x3);\nloop invariant (x1 > 0) ==> (x1 >= x3);\nloop invariant (x1 > 0) ==> (x1 >= x2 - d1);\nloop invariant (x2 > 0) ==> (x2 >= x3 - d2);\nloop invariant (x3 > 0) ==> (x3 >= x1 - d3);\nloop invariant (x1 > 0) ==> (x1 >= x2 - d1);\nloop invariant (x2 > 0) ==> (x2 >= x3 - d2);\nloop invariant (x3 > 0) ==> (x3 >= x1 - d3);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n\n\nloop invariant i4: 0 <= d1 <= 2147483647;\nloop invariant i5: 0 <= d2 <= 2147483647;\nloop invariant i6: 0 <= d3 <= 2147483647;\nloop invariant i7: x1 >= 0;\nloop invariant i8: x2 >= 0;\nloop invariant i9: x3 >= 0;\n\n\n\n\n\n\nloop invariant i16: d1 <= 2147483647;\nloop invariant i17: d2 <= 2147483647;\nloop invariant i18: d3 <= 2147483647;\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= x1 <= 4294967295;\nloop invariant 1 <= x2 <= 4294967295;\nloop invariant 1 <= x3 <= 4294967295;\nloop invariant d1 == 1;\nloop invariant d2 == 1;\nloop invariant d3 == 1;\nloop invariant c1 == 0;\nloop invariant c2 == 0;\nloop invariant ((x1 == 0) || (x2 == 0) || (x3 == 0));\nloop invariant ((x1 == 0) || (c1 == 0));\nloop invariant ((x2 == 0) || (c2 == 0));\nloop invariant ((x3 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x1 == 0) ==> (x2 == 0) || (x3 == 0));\nloop invariant ((x2 == 0) ==> (x1 == 0) || (x3 == 0));\nloop invariant ((x3 == 0) ==> (x1 == 0) || (x2 == 0));\nloop invariant ((x1 == 0) ==> (x2 == 0) || (c1 == 0));\nloop invariant ((x2 == 0) ==> (x1 == 0) || (c2 == 0));\nloop invariant ((x3 == 0) ==> (c1 == 0) || (c2 == 0));\nloop invariant ((x1 == 0) ==> (x3 == 0) || (c1 == 0));\nloop invariant ((x2 == 0) ==> (x3 == 0) || (c2 == 0));\nloop invariant ((x3 == 0) ==> (x1 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x1 == 0) ==> (x2 == 0) || (x3 == 0) || (c1 == 0));\nloop invariant ((x2 == 0) ==> (x1 == 0) || (x3 == 0) || (c2 == 0));\nloop invariant ((x3 == 0) ==> (x1 == 0) || (x2 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x1 == 0) ==> (x2 == 0) || (x3 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x2 == 0) ==> (x1 == 0) || (x3 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x3 == 0) ==> (x1 == 0) || (x2 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x1 == 0) ==> (x2 == 0) || (x3 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x2 == 0) ==> (x1 == 0) || (x3 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x3 == 0) ==> (x1 == 0) || (x2 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x1 == 0) ==> (x2 == 0) || (x3 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x2 == 0) ==> (x1 == 0) || (x3 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x3 == 0) ==> (x1 == 0) || (x2 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x1 == 0) ==> (x2 == 0) || (x3 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant ((x2 == 0) ==> (x1 == 0) || (x3 == 0) || (c1 == 0) || (c2 == 0));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n\n\nloop invariant i4: d1 == 1;\nloop invariant i5: d2 == 1;\nloop invariant i6: d3 == 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= x2 <= x3;\nloop invariant d1 <= x1 <= x2 <= x3;\nloop invariant d2 <= x2 <= x3;\nloop invariant d3 <= x3;\nloop invariant c1 ==> x1 != 0;\nloop invariant c2 ==> x2 != 0;\nloop invariant !c1 || !c2 ==> x3 != 0;\nloop invariant c1 ==> d1 >= 1;\nloop invariant c2 ==> d2 >= 1;\nloop invariant !c1 || !c2 ==> d3 >= 1;\nloop invariant x1 == 0 ==> d1 >= 1;\nloop invariant x2 == 0 ==> d2 >= 1;\nloop invariant x3 == 0 ==> d3 >= 1;\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> d1 >= 1;\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> d2 >= 1;\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> d3 >= 1;\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> d1 >= 1 || d2 >= 1 || d3 >= 1;\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> d1 >= 1 && d2 >= 1 && d3 >= 1 ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n\n\n\n\n\n\n\n\n\nloop invariant i11: x1 == 0 ==> d1 >= 1;\nloop invariant i12: x2 == 0 ==> d2 >= 1;\nloop invariant i13: x3 == 0 ==> d3 >= 1;\n\n\n\nloop invariant i17: (x1 == 0 || x2 == 0 || x3 == 0) ==> d1 >= 1 || d2 >= 1 || d3 >= 1;\n\nloop invariant i19: (x1 == 0 || x2 == 0 || x3 == 0) ==> d1 >= 1 && d2 >= 1 && d3 >= 1 ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i20: (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i21: (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i22: (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i23: (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i24: (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 17,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant x1 <= x1 + unknown_uint();\nloop invariant x2 <= x2 + unknown_uint();\nloop invariant x3 <= x3 + unknown_uint();\nloop invariant d1 <= d1 + unknown_uint();\nloop invariant d2 <= d2 + unknown_uint();\nloop invariant d3 <= d3 + unknown_uint();\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 - d1 >= 0 && x2 - d2 >= 0 && x3 - d3 >= 0);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 - d1 <= x1 && x2 - d2 <= x2 && x3 - d3 <= x3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (d1 <= x1 && d2 <= x2 && d3 <= x3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i16: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 - d1 <= x1 && x2 - d2 <= x2 && x3 - d3 <= x3);\n\n\nloop invariant i19: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= d1 ==> c1 == 1;\nloop invariant x2 >= d2 ==> c2 == 1;\nloop invariant x3 >= d3 ==> c1 != 1 && c2 != 1;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 == 0 || x2 == 0 || x3 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\nloop invariant i1: x1 >= 0;\nloop invariant i2: x2 >= 0;\nloop invariant i3: x3 >= 0;\n\n\n\nloop invariant i7: x1 == 0 || x2 == 0 || x3 == 0 ==> x1 == 0 || x2 == 0 || x3 == 0;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 11,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant (c1 == true) ==> (x1 = x1 - d1);\nloop invariant (c1 == false) ==> ((c2 == true) ==> (x2 = x2 - d2));\nloop invariant (c1 == false) ==> ((c2 == false) ==> (x3 = x3 - d3));\nloop invariant (unknown_bool() == true) ==> (c1 = unknown_bool());\nloop invariant (unknown_bool() == true) ==> (c2 = unknown_bool());\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 19,
                "annotations": "```\n/*@\nloop invariant 0 <= d1 <= x1;\nloop invariant 0 <= d2 <= x2;\nloop invariant 0 <= d3 <= x3;\nloop invariant 0 <= c1 <= 1;\nloop invariant 0 <= c2 <= 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 >= 0;\nloop invariant c2 >= 0;\nloop invariant if (x1 > 0) then (x1 - d1 >= 0);\nloop invariant if (x2 > 0) then (x2 - d2 >= 0);\nloop invariant if (x3 > 0) then (x3 - d3 >= 0);\nloop invariant if (c1 == 1) then (x1 - d1 >= 0);\nloop invariant if (c2 == 1) then (x2 - d2 >= 0);\nloop invariant if (c1 == 0 && c2 == 0) then (x3 - d3 >= 0);\nloop invariant if (c1 == 1) then (x1 <= x1 - d1);\nloop invariant if (c2 == 1) then (x2 <= x2 - d2);\nloop invariant if (c1 == 0 && c2 == 0) then (x3 <= x3 - d3);\nloop invariant if (c1 == 1) then (x1 >= 0);\nloop invariant if (c2 == 1) then (x2 >= 0);\nloop invariant if (c1 == 0 && c2 == 0) then (x3 >= 0);\nloop invariant if (c1 == 1) then (x1 >= d1);\nloop invariant if (c2 == 1) then (x2 >= d2);\nloop invariant if (c1 == 0 && c2 == 0) then (x3 >= d3);\nloop invariant if (c1 == 1) then (d1 <= x1);\nloop invariant if (c2 == 1) then (d2 <= x2);\nloop invariant if (c1 == 0 && c2 == 0) then (d3 <= x3);\nloop invariant if (c1 == 1) then (x1 >= d1);\nloop invariant if (c2 == 1) then (x2 >= d2);\nloop invariant if (c1 == 0 && c2 == 0) then (x3 >= d3);\nloop invariant if (c1 == 1) then (x1 >= 0);\nloop invariant if (c2 == 1) then (x2 >= 0);\nloop invariant if (c1 == 0 && c2 == 0) then (x3 >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n\n\nloop invariant i4: 0 <= c1 <= 1;\nloop invariant i5: 0 <= c2 <= 1;\nloop invariant i6: x1 >= 0;\nloop invariant i7: x2 >= 0;\nloop invariant i8: x3 >= 0;\nloop invariant i9: d1 >= 0;\nloop invariant i10: d2 >= 0;\nloop invariant i11: d3 >= 0;\nloop invariant i12: c1 >= 0;\nloop invariant i13: c2 >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= x2;\nloop invariant x1 >= x3;\nloop invariant x2 >= x3;\nloop invariant x1 >= x2 + (c2 ? 1 : 0);\nloop invariant x1 >= x3 + (c3 ? 1 : 0);\nloop invariant x2 >= x3 + (c3 ? 1 : 0);\nloop invariant x1 == 0 || x2 == 0 || x3 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\nloop invariant i1: x1 >= 0;\nloop invariant i2: x2 >= 0;\nloop invariant i3: x3 >= 0;\nloop invariant i4: d1 >= 1;\nloop invariant i5: d2 >= 1;\nloop invariant i6: d3 >= 1;\nloop invariant i7: c1 == 0 || c1 == 1;\nloop invariant i8: c2 == 0 || c2 == 1;\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 == 1 || c1 == 0;\nloop invariant c2 == 1 || c2 == 0;\nloop invariant x1 >= 0 ==> d1 >= 1;\nloop invariant x2 >= 0 ==> d2 >= 1;\nloop invariant x3 >= 0 ==> d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 0 || c2 == 0;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\nloop invariant i1: x1 >= 0;\nloop invariant i2: x2 >= 0;\nloop invariant i3: x3 >= 0;\nloop invariant i4: d1 >= 1;\nloop invariant i5: d2 >= 1;\nloop invariant i6: d3 >= 1;\nloop invariant i7: c1 == 1 || c1 == 0;\nloop invariant i8: c2 == 1 || c2 == 0;\nloop invariant i9: x1 >= 0 ==> d1 >= 1;\nloop invariant i10: x2 >= 0 ==> d2 >= 1;\nloop invariant i11: x3 >= 0 ==> d3 >= 1;\n\n\nloop invariant i14: x1 >= 0 && x2 >= 0 && x3 >= 0 ==> d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant i15: x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant 0 <= c1 <= 1;\nloop invariant 0 <= c2 <= 1;\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (c1 == 0 || c2 == 0 || (c1 == 1 && c2 == 1));\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 <= unknown_uint() && x2 <= unknown_uint() && x3 <= unknown_uint());\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 <= unknown_uint() && d2 <= unknown_uint() && d3 <= unknown_uint());\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (c1 <= 1 && c2 <= 1);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (c1 == 0 || c2 == 0 || (c1 == 1 && c2 == 1));\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 <= unknown_uint() && x2 <= unknown_uint() && x3 <= unknown_uint());\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 <= unknown_uint() && d2 <= unknown_uint() && d3 <= unknown_uint());\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (c1 <= 1 && c2 <= 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n\n\n\n\n\nloop invariant i7: 0 <= c1 <= 1;\nloop invariant i8: 0 <= c2 <= 1;\nloop invariant i9: (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\n\nloop invariant i11: (x1 == 0 || x2 == 0 || x3 == 0) ==> (c1 == 0 || c2 == 0 || (c1 == 1 && c2 == 1));\n\n\nloop invariant i14: (x1 == 0 || x2 == 0 || x3 == 0) ==> (c1 <= 1 && c2 <= 1);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x1;\nloop invariant 0 <= x2;\nloop invariant 0 <= x3;\nloop invariant d1 <= 1;\nloop invariant d2 <= 1;\nloop invariant d3 <= 1;\nloop invariant 0 <= d1 <= 2;\nloop invariant 0 <= d2 <= 2;\nloop invariant 0 <= d3 <= 2;\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\nloop invariant i1: 0 <= x1;\nloop invariant i2: 0 <= x2;\nloop invariant i3: 0 <= x3;\nloop invariant i4: d1 <= 1;\nloop invariant i5: d2 <= 1;\nloop invariant i6: d3 <= 1;\nloop invariant i7: 0 <= d1 <= 2;\nloop invariant i8: 0 <= d2 <= 2;\nloop invariant i9: 0 <= d3 <= 2;\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= 4294967295;\nloop invariant 0 <= x2 <= 4294967295;\nloop invariant 0 <= x3 <= 4294967295;\nloop invariant 0 <= d1 <= 4294967295;\nloop invariant 0 <= d2 <= 4294967295;\nloop invariant 0 <= d3 <= 4294967295;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= 0 ==> d1 >= 0;\nloop invariant x2 >= 0 ==> d2 >= 0;\nloop invariant x3 >= 0 ==> d3 >= 0;\nloop invariant x1 >= 0 ==> c1 == 1 ==> x1 == x1 - d1;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 1 ==> x2 == x2 - d2;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 == x3 - d3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 + x2 + x3 >= d1 + d2 + d3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 + x2 + x3 >= 0;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x2 ==> x1 >= x3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x2 >= x3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x2;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x2 >= x3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x2;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x2 >= x3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x2;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x2 >= x3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x2;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x2 >= x3;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x2;\nloop invariant x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\nloop invariant i1: 0 <= x1 <= 4294967295;\nloop invariant i2: 0 <= x2 <= 4294967295;\nloop invariant i3: 0 <= x3 <= 4294967295;\nloop invariant i4: 0 <= d1 <= 4294967295;\nloop invariant i5: 0 <= d2 <= 4294967295;\nloop invariant i6: 0 <= d3 <= 4294967295;\nloop invariant i7: c1 == 0 || c1 == 1;\nloop invariant i8: c2 == 0 || c2 == 1;\nloop invariant i9: x1 >= 0 ==> d1 >= 0;\nloop invariant i10: x2 >= 0 ==> d2 >= 0;\nloop invariant i11: x3 >= 0 ==> d3 >= 0;\n\n\n\n\nloop invariant i16: x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 + x2 + x3 >= 0;\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 38: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\nloop invariant i1: 0 <= x1 <= d1;\nloop invariant i2: 0 <= x2 <= d2;\nloop invariant i3: 0 <= x3 <= d3;\nloop invariant i4: 0 <= d1 <= d1 + x1;\nloop invariant i5: 0 <= d2 <= d2 + x2;\nloop invariant i6: 0 <= d3 <= d3 + x3;\nloop invariant i7: x1 <= d1;\nloop invariant i8: x2 <= d2;\nloop invariant i9: x3 <= d3;\nloop invariant i10: d1 <= d1 + x1;\nloop invariant i11: d2 <= d2 + x2;\nloop invariant i12: d3 <= d3 + x3;\nloop invariant i13: c1 ==> d1 <= d1 + x1;\nloop invariant i14: c2 ==> d2 <= d2 + x2;\nloop invariant i15: !c1 && !c2 ==> d3 <= d3 + x3;\nloop invariant i16: d1 >= 1;\nloop invariant i17: d2 >= 1;\nloop invariant i18: d3 >= 1;\nloop invariant i19: d1 + x1 >= 1;\nloop invariant i20: d2 + x2 >= 1;\nloop invariant i21: d3 + x3 >= 1;\nloop invariant i22: 0 <= x1 <= unknown_uint();\nloop invariant i23: 0 <= x2 <= unknown_uint();\nloop invariant i24: 0 <= x3 <= unknown_uint();\nloop invariant i25: 1 <= d1 <= unknown_uint();\nloop invariant i26: 1 <= d2 <= unknown_uint();\nloop invariant i27: 1 <= d3 <= unknown_uint();\nloop invariant i28: (x1 >= x2 ==> x2 >= d2) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant i29: ((x1 >= x2 ==> x2 >= d2) ==> (x1 >= x3 ==> x3 >= d3)) ==> (x1 >= x2 ==> x2 >= d2);\nloop invariant i30: ((x1 >= x3 ==> x3 >= d3) ==> (x1 >= x2 ==> x2 >= d2)) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant i31: ((x1 >= x2 ==> x2 >= d2) ==> (x1 >= x3 ==> x3 >= d3)) ==> (x1 >= x3 ==> x3 >= d3);\nloop invariant i32: 0 <= x1 <= x1 + d1;\nloop invariant i33: 0 <= x2 <= x2 + d2;\nloop invariant i34: 0 <= x3 <= x3 + d3;\nloop invariant i35: 0 <= d1;\nloop invariant i36: 0 <= d2;\nloop invariant i37: 0 <= d3;\nloop invariant i38: c1 == 0 || c1 == 1;\nloop invariant i39: c2 == 0 || c2 == 1;\nloop invariant i40: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= x1 - d1 && x2 >= x2 - d2 && x3 >= x3 - d3);\nloop invariant i41: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 <= x1 + d1 && x2 <= x2 + d2 && x3 <= x3 + d3);\nloop invariant i42: (x1 > 0 && x2 > 0 && x3 > 0) ==> (c1 == 0 || c1 == 1);\nloop invariant i43: (x1 > 0 && x2 > 0 && x3 > 0) ==> (c2 == 0 || c2 == 1);\nloop invariant i44: (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i45: (x1 == 0 || x2 == 0 || x3 == 0) ==> (c1 == 0 && c2 == 0);\nloop invariant i46: 0 <= x1 <= 2147483647;\nloop invariant i47: 0 <= x2 <= 2147483647;\nloop invariant i48: 0 <= x3 <= 2147483647;\nloop invariant i49: 0 <= d1 <= 2147483647;\nloop invariant i50: 0 <= d2 <= 2147483647;\nloop invariant i51: 0 <= d3 <= 2147483647;\nloop invariant i52: x1 >= 0;\nloop invariant i53: x2 >= 0;\nloop invariant i54: x3 >= 0;\nloop invariant i55: x1 >= x2;\nloop invariant i56: x2 >= x3;\nloop invariant i57: x1 >= x3;\nloop invariant i58: x1 <= 2147483647;\nloop invariant i59: x2 <= 2147483647;\nloop invariant i60: x3 <= 2147483647;\nloop invariant i61: d1 <= 2147483647;\nloop invariant i62: d2 <= 2147483647;\nloop invariant i63: d3 <= 2147483647;\nloop invariant i64: (x1 > 0) ==> (x1 >= d1);\nloop invariant i65: (x2 > 0) ==> (x2 >= d2);\nloop invariant i66: (x3 > 0) ==> (x3 >= d3);\nloop invariant i67: (x1 > 0) ==> (x1 >= x2);\nloop invariant i68: (x2 > 0) ==> (x2 >= x3);\nloop invariant i69: (x1 > 0) ==> (x1 >= x3);\nloop invariant i70: (x1 > 0) ==> (x1 >= x2 - d1);\nloop invariant i71: (x2 > 0) ==> (x2 >= x3 - d2);\nloop invariant i72: (x3 > 0) ==> (x3 >= x1 - d3);\nloop invariant i73: 1 <= x1 <= 4294967295;\nloop invariant i74: 1 <= x2 <= 4294967295;\nloop invariant i75: 1 <= x3 <= 4294967295;\nloop invariant i76: d1 == 1;\nloop invariant i77: d2 == 1;\nloop invariant i78: d3 == 1;\nloop invariant i79: c1 == 0;\nloop invariant i80: c2 == 0;\nloop invariant i81: ((x1 == 0) || (x2 == 0) || (x3 == 0));\nloop invariant i82: ((x1 == 0) || (c1 == 0));\nloop invariant i83: ((x2 == 0) || (c2 == 0));\nloop invariant i84: ((x3 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant i85: ((x1 == 0) ==> (x2 == 0) || (x3 == 0));\nloop invariant i86: ((x2 == 0) ==> (x1 == 0) || (x3 == 0));\nloop invariant i87: ((x3 == 0) ==> (x1 == 0) || (x2 == 0));\nloop invariant i88: ((x1 == 0) ==> (x2 == 0) || (c1 == 0));\nloop invariant i89: ((x2 == 0) ==> (x1 == 0) || (c2 == 0));\nloop invariant i90: ((x3 == 0) ==> (c1 == 0) || (c2 == 0));\nloop invariant i91: ((x1 == 0) ==> (x3 == 0) || (c1 == 0));\nloop invariant i92: ((x2 == 0) ==> (x3 == 0) || (c2 == 0));\nloop invariant i93: ((x3 == 0) ==> (x1 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant i94: ((x1 == 0) ==> (x2 == 0) || (x3 == 0) || (c1 == 0));\nloop invariant i95: ((x2 == 0) ==> (x1 == 0) || (x3 == 0) || (c2 == 0));\nloop invariant i96: ((x3 == 0) ==> (x1 == 0) || (x2 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant i97: ((x1 == 0) ==> (x2 == 0) || (x3 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant i98: ((x2 == 0) ==> (x1 == 0) || (x3 == 0) || (c1 == 0) || (c2 == 0));\nloop invariant i99: 0 <= x1 <= x2 <= x3;\nloop invariant i100: d1 <= x1 <= x2 <= x3;\nloop invariant i101: d2 <= x2 <= x3;\nloop invariant i102: d3 <= x3;\nloop invariant i103: c1 ==> x1 != 0;\nloop invariant i104: c2 ==> x2 != 0;\nloop invariant i105: !c1 || !c2 ==> x3 != 0;\nloop invariant i106: c1 ==> d1 >= 1;\nloop invariant i107: c2 ==> d2 >= 1;\nloop invariant i108: !c1 || !c2 ==> d3 >= 1;\nloop invariant i109: x1 == 0 ==> d1 >= 1;\nloop invariant i110: x2 == 0 ==> d2 >= 1;\nloop invariant i111: x3 == 0 ==> d3 >= 1;\nloop invariant i112: (x1 == 0 || x2 == 0 || x3 == 0) ==> d1 >= 1;\nloop invariant i113: (x1 == 0 || x2 == 0 || x3 == 0) ==> d2 >= 1;\nloop invariant i114: (x1 == 0 || x2 == 0 || x3 == 0) ==> d3 >= 1;\nloop invariant i115: (x1 == 0 || x2 == 0 || x3 == 0) ==> d1 >= 1 || d2 >= 1 || d3 >= 1;\nloop invariant i116: (x1 == 0 || x2 == 0 || x3 == 0) ==> d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant i117: (x1 == 0 || x2 == 0 || x3 == 0) ==> d1 >= 1 && d2 >= 1 && d3 >= 1 ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i118: (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i119: (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i120: (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i121: (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i122: (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i123: x1 <= x1 + unknown_uint();\nloop invariant i124: x2 <= x2 + unknown_uint();\nloop invariant i125: x3 <= x3 + unknown_uint();\nloop invariant i126: d1 <= d1 + unknown_uint();\nloop invariant i127: d2 <= d2 + unknown_uint();\nloop invariant i128: d3 <= d3 + unknown_uint();\nloop invariant i129: c1 == unknown_bool();\nloop invariant i130: c2 == unknown_bool();\nloop invariant i131: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 - d1 >= 0 && x2 - d2 >= 0 && x3 - d3 >= 0);\nloop invariant i132: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 - d1 <= x1 && x2 - d2 <= x2 && x3 - d3 <= x3);\nloop invariant i133: (x1 > 0 && x2 > 0 && x3 > 0) ==> (d1 <= x1 && d2 <= x2 && d3 <= x3);\nloop invariant i134: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant i135: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant i136: x1 >= d1 ==> c1 == 1;\nloop invariant i137: x2 >= d2 ==> c2 == 1;\nloop invariant i138: x3 >= d3 ==> c1 != 1 && c2 != 1;\nloop invariant i139: x1 == 0 || x2 == 0 || x3 == 0 ==> x1 == 0 || x2 == 0 || x3 == 0;\nloop invariant i140: (c1 == true) ==> (x1 = x1 - d1);\nloop invariant i141: (c1 == false) ==> ((c2 == true) ==> (x2 = x2 - d2));\nloop invariant i142: (c1 == false) ==> ((c2 == false) ==> (x3 = x3 - d3));\nloop invariant i143: (unknown_bool() == true) ==> (c1 = unknown_bool());\nloop invariant i144: (unknown_bool() == true) ==> (c2 = unknown_bool());\nloop invariant i145: 0 <= d1 <= x1;\nloop invariant i146: 0 <= d2 <= x2;\nloop invariant i147: 0 <= d3 <= x3;\nloop invariant i148: 0 <= c1 <= 1;\nloop invariant i149: 0 <= c2 <= 1;\nloop invariant i150: d1 >= 0;\nloop invariant i151: d2 >= 0;\nloop invariant i152: d3 >= 0;\nloop invariant i153: c1 >= 0;\nloop invariant i154: c2 >= 0;\nloop invariant i155: if (x1 > 0) then (x1 - d1 >= 0);\nloop invariant i156: if (x2 > 0) then (x2 - d2 >= 0);\nloop invariant i157: if (x3 > 0) then (x3 - d3 >= 0);\nloop invariant i158: if (c1 == 1) then (x1 - d1 >= 0);\nloop invariant i159: if (c2 == 1) then (x2 - d2 >= 0);\nloop invariant i160: if (c1 == 0 && c2 == 0) then (x3 - d3 >= 0);\nloop invariant i161: if (c1 == 1) then (x1 <= x1 - d1);\nloop invariant i162: if (c2 == 1) then (x2 <= x2 - d2);\nloop invariant i163: if (c1 == 0 && c2 == 0) then (x3 <= x3 - d3);\nloop invariant i164: if (c1 == 1) then (x1 >= 0);\nloop invariant i165: if (c2 == 1) then (x2 >= 0);\nloop invariant i166: if (c1 == 0 && c2 == 0) then (x3 >= 0);\nloop invariant i167: if (c1 == 1) then (x1 >= d1);\nloop invariant i168: if (c2 == 1) then (x2 >= d2);\nloop invariant i169: if (c1 == 0 && c2 == 0) then (x3 >= d3);\nloop invariant i170: if (c1 == 1) then (d1 <= x1);\nloop invariant i171: if (c2 == 1) then (d2 <= x2);\nloop invariant i172: if (c1 == 0 && c2 == 0) then (d3 <= x3);\nloop invariant i173: x1 >= x2 + (c2 ? 1 : 0);\nloop invariant i174: x1 >= x3 + (c3 ? 1 : 0);\nloop invariant i175: x2 >= x3 + (c3 ? 1 : 0);\nloop invariant i176: x1 == 0 || x2 == 0 || x3 == 0;\nloop invariant i177: c1 == 1 || c1 == 0;\nloop invariant i178: c2 == 1 || c2 == 0;\nloop invariant i179: x1 >= 0 ==> d1 >= 1;\nloop invariant i180: x2 >= 0 ==> d2 >= 1;\nloop invariant i181: x3 >= 0 ==> d3 >= 1;\nloop invariant i182: x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1;\nloop invariant i183: x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 0 || c2 == 0;\nloop invariant i184: x1 >= 0 && x2 >= 0 && x3 >= 0 ==> d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant i185: x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant i186: (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant i187: (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1);\nloop invariant i188: (x1 == 0 || x2 == 0 || x3 == 0) ==> (c1 == 0 || c2 == 0 || (c1 == 1 && c2 == 1));\nloop invariant i189: (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 <= unknown_uint() && x2 <= unknown_uint() && x3 <= unknown_uint());\nloop invariant i190: (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 <= unknown_uint() && d2 <= unknown_uint() && d3 <= unknown_uint());\nloop invariant i191: (x1 == 0 || x2 == 0 || x3 == 0) ==> (c1 <= 1 && c2 <= 1);\nloop invariant i192: 0 <= x1;\nloop invariant i193: 0 <= x2;\nloop invariant i194: 0 <= x3;\nloop invariant i195: d1 <= 1;\nloop invariant i196: d2 <= 1;\nloop invariant i197: d3 <= 1;\nloop invariant i198: 0 <= d1 <= 2;\nloop invariant i199: 0 <= d2 <= 2;\nloop invariant i200: 0 <= d3 <= 2;\nloop invariant i201: (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant i202: 0 <= x1 <= 4294967295;\nloop invariant i203: 0 <= x2 <= 4294967295;\nloop invariant i204: 0 <= x3 <= 4294967295;\nloop invariant i205: 0 <= d1 <= 4294967295;\nloop invariant i206: 0 <= d2 <= 4294967295;\nloop invariant i207: 0 <= d3 <= 4294967295;\nloop invariant i208: x1 >= 0 ==> d1 >= 0;\nloop invariant i209: x2 >= 0 ==> d2 >= 0;\nloop invariant i210: x3 >= 0 ==> d3 >= 0;\nloop invariant i211: x1 >= 0 ==> c1 == 1 ==> x1 == x1 - d1;\nloop invariant i212: x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 1 ==> x2 == x2 - d2;\nloop invariant i213: x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 == x3 - d3;\nloop invariant i214: x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 + x2 + x3 >= d1 + d2 + d3;\nloop invariant i215: x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 + x2 + x3 >= 0;\nloop invariant i216: x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x2 ==> x1 >= x3;\nloop invariant i217: x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x2 >= x3;\nloop invariant i218: x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x2;\nloop invariant i219: x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 >= x3;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 50,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int  x1=unknown_uint(),  x2=unknown_uint(),  x3=unknown_uint();\n  unsigned int  d1=1,  d2=1,  d3=1;\n  int  c1=unknown_bool(),  c2=unknown_bool();\n  /*@\n\n\n\nloop invariant i4: 0 <= d1 <= d1 + x1;\nloop invariant i5: 0 <= d2 <= d2 + x2;\nloop invariant i6: 0 <= d3 <= d3 + x3;\n\n\n\nloop invariant i10: d1 <= d1 + x1;\nloop invariant i11: d2 <= d2 + x2;\nloop invariant i12: d3 <= d3 + x3;\nloop invariant i13: c1 ==> d1 <= d1 + x1;\nloop invariant i14: c2 ==> d2 <= d2 + x2;\nloop invariant i15: !c1 && !c2 ==> d3 <= d3 + x3;\nloop invariant i16: d1 >= 1;\nloop invariant i17: d2 >= 1;\nloop invariant i18: d3 >= 1;\nloop invariant i19: d1 + x1 >= 1;\nloop invariant i20: d2 + x2 >= 1;\nloop invariant i21: d3 + x3 >= 1;\n\n\n\n\n\n\n\n\n\n\nloop invariant i32: 0 <= x1 <= x1 + d1;\nloop invariant i33: 0 <= x2 <= x2 + d2;\nloop invariant i34: 0 <= x3 <= x3 + d3;\nloop invariant i35: 0 <= d1;\nloop invariant i36: 0 <= d2;\nloop invariant i37: 0 <= d3;\nloop invariant i38: c1 == 0 || c1 == 1;\nloop invariant i39: c2 == 0 || c2 == 1;\nloop invariant i40: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= x1 - d1 && x2 >= x2 - d2 && x3 >= x3 - d3);\nloop invariant i41: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 <= x1 + d1 && x2 <= x2 + d2 && x3 <= x3 + d3);\nloop invariant i42: (x1 > 0 && x2 > 0 && x3 > 0) ==> (c1 == 0 || c1 == 1);\nloop invariant i43: (x1 > 0 && x2 > 0 && x3 > 0) ==> (c2 == 0 || c2 == 1);\nloop invariant i44: (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\n\n\n\n\nloop invariant i49: 0 <= d1 <= 2147483647;\nloop invariant i50: 0 <= d2 <= 2147483647;\nloop invariant i51: 0 <= d3 <= 2147483647;\nloop invariant i52: x1 >= 0;\nloop invariant i53: x2 >= 0;\nloop invariant i54: x3 >= 0;\n\n\n\n\n\n\nloop invariant i61: d1 <= 2147483647;\nloop invariant i62: d2 <= 2147483647;\nloop invariant i63: d3 <= 2147483647;\nloop invariant i64: (x1 > 0) ==> (x1 >= d1);\nloop invariant i65: (x2 > 0) ==> (x2 >= d2);\nloop invariant i66: (x3 > 0) ==> (x3 >= d3);\n\n\n\n\n\n\n\n\n\nloop invariant i76: d1 == 1;\nloop invariant i77: d2 == 1;\nloop invariant i78: d3 == 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i106: c1 ==> d1 >= 1;\nloop invariant i107: c2 ==> d2 >= 1;\nloop invariant i108: !c1 || !c2 ==> d3 >= 1;\nloop invariant i109: x1 == 0 ==> d1 >= 1;\nloop invariant i110: x2 == 0 ==> d2 >= 1;\nloop invariant i111: x3 == 0 ==> d3 >= 1;\nloop invariant i112: (x1 == 0 || x2 == 0 || x3 == 0) ==> d1 >= 1;\nloop invariant i113: (x1 == 0 || x2 == 0 || x3 == 0) ==> d2 >= 1;\nloop invariant i114: (x1 == 0 || x2 == 0 || x3 == 0) ==> d3 >= 1;\nloop invariant i115: (x1 == 0 || x2 == 0 || x3 == 0) ==> d1 >= 1 || d2 >= 1 || d3 >= 1;\nloop invariant i116: (x1 == 0 || x2 == 0 || x3 == 0) ==> d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant i117: (x1 == 0 || x2 == 0 || x3 == 0) ==> d1 >= 1 && d2 >= 1 && d3 >= 1 ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i118: (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i119: (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i120: (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i121: (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i122: (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\n\n\n\n\n\n\n\n\nloop invariant i131: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 - d1 >= 0 && x2 - d2 >= 0 && x3 - d3 >= 0);\nloop invariant i132: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 - d1 <= x1 && x2 - d2 <= x2 && x3 - d3 <= x3);\nloop invariant i133: (x1 > 0 && x2 > 0 && x3 > 0) ==> (d1 <= x1 && d2 <= x2 && d3 <= x3);\nloop invariant i134: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= d1 && x2 >= d2 && x3 >= d3);\nloop invariant i135: (x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\n\n\n\nloop invariant i139: x1 == 0 || x2 == 0 || x3 == 0 ==> x1 == 0 || x2 == 0 || x3 == 0;\n\n\n\n\n\n\n\n\nloop invariant i148: 0 <= c1 <= 1;\nloop invariant i149: 0 <= c2 <= 1;\nloop invariant i150: d1 >= 0;\nloop invariant i151: d2 >= 0;\nloop invariant i152: d3 >= 0;\nloop invariant i153: c1 >= 0;\nloop invariant i154: c2 >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i177: c1 == 1 || c1 == 0;\nloop invariant i178: c2 == 1 || c2 == 0;\nloop invariant i179: x1 >= 0 ==> d1 >= 1;\nloop invariant i180: x2 >= 0 ==> d2 >= 1;\nloop invariant i181: x3 >= 0 ==> d3 >= 1;\n\n\nloop invariant i184: x1 >= 0 && x2 >= 0 && x3 >= 0 ==> d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant i185: x1 >= 0 && x2 >= 0 && x3 >= 0 ==> c1 == 1 || c2 == 1 || d1 >= 1 && d2 >= 1 && d3 >= 1;\nloop invariant i186: (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant i187: (x1 == 0 || x2 == 0 || x3 == 0) ==> (d1 >= 1 && d2 >= 1 && d3 >= 1);\nloop invariant i188: (x1 == 0 || x2 == 0 || x3 == 0) ==> (c1 == 0 || c2 == 0 || (c1 == 1 && c2 == 1));\n\n\nloop invariant i191: (x1 == 0 || x2 == 0 || x3 == 0) ==> (c1 <= 1 && c2 <= 1);\nloop invariant i192: 0 <= x1;\nloop invariant i193: 0 <= x2;\nloop invariant i194: 0 <= x3;\nloop invariant i195: d1 <= 1;\nloop invariant i196: d2 <= 1;\nloop invariant i197: d3 <= 1;\nloop invariant i198: 0 <= d1 <= 2;\nloop invariant i199: 0 <= d2 <= 2;\nloop invariant i200: 0 <= d3 <= 2;\n\nloop invariant i202: 0 <= x1 <= 4294967295;\nloop invariant i203: 0 <= x2 <= 4294967295;\nloop invariant i204: 0 <= x3 <= 4294967295;\nloop invariant i205: 0 <= d1 <= 4294967295;\nloop invariant i206: 0 <= d2 <= 4294967295;\nloop invariant i207: 0 <= d3 <= 4294967295;\nloop invariant i208: x1 >= 0 ==> d1 >= 0;\nloop invariant i209: x2 >= 0 ==> d2 >= 0;\nloop invariant i210: x3 >= 0 ==> d3 >= 0;\n\n\n\n\nloop invariant i215: x1 >= 0 ==> c1 == 0 ==> x2 >= 0 ==> c2 == 0 ==> x3 >= 0 ==> x1 + x2 + x3 >= 0;\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if(c1)x1=x1-d1;\n    else if(c2)x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c"
        ],
        "skipped": [],
        "total": 67,
        "success_count": 57,
        "failure_count": 10,
        "success_rate": 0.8507462686567164
    }
}