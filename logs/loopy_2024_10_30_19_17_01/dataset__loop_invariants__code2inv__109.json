{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/109.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,c,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    while ( k < c) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    if( c > 0 ) {\n        {;\n//@ assert( a <=  m);\n}\n\n    }\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= k <= c;\nloop invariant 0 <= a;\nloop invariant a <= m ==> c > 0;\nloop invariant 0 <= a <= m ==> c > 0;\nloop invariant a = m ==> c > 0;\nloop invariant a != m ==> c = 0;\nloop invariant 0 <= k <= c;\nloop invariant 0 <= a;\nloop invariant a <= m ==> c > 0;\nloop invariant 0 <= a <= m ==> c > 0;\nloop invariant a = m ==> c > 0;\nloop invariant a != m ==> c = 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= c;\nloop invariant m >= a;\nloop invariant m >= c;\nloop invariant m >= (a + k - c + 1);\nloop invariant m >= (a + k - c + 1) * (c - k) / (k - 1);\nloop invariant 0 <= k <= c;\nloop invariant m >= a;\nloop invariant m >= c;\nloop invariant m >= (a + k - c + 1);\nloop invariant m >= (a + k - c + 1) * (c - k) / (k - 1);\nloop invariant 0 <= k <= c;\nloop invariant m >= a;\nloop invariant m >= c;\nloop invariant m >= (a + k - c + 1);\nloop invariant m >= (a + k - c + 1) * (c - k) / (k - 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= c;\nloop invariant if (c > 0) then (a <= m ==> a <= m) else (true ==> a <= m);\nloop invariant if (c > 0) then (a <= m ==> m >= a) else (true ==> m >= a);\nloop invariant if (c > 0) then (a <= m ==> k == c) else (true ==> k == c);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= k <= c;\nloop invariant a >= m;\nloop invariant a >= 0;\nloop invariant c >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant (m == a) || (a > m);\nloop invariant (k == c) ==> (c > 0) ==> (a <= m);\nloop invariant (k == c) ==> (c > 0) ==> (a >= 0);\nloop invariant (k == c) ==> (c >= 0) ==> (j >= 0);\nloop invariant (k == c) ==> (c >= 0) ==> (k >= 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= c;\nloop invariant c > 0 ==> m <= a;\nloop invariant c > 0 ==> m >= a;\nloop invariant k < c ==> m >= a;\nloop invariant k < c ==> m <= a;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= c;\nloop invariant c > 0 ==> a <= m;\nloop invariant c > 0 ==> a <= m;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= c;\nloop invariant a <= m;\nloop invariant (c == 0) ==> (m == 0);\nloop invariant (c > 0) ==> (m == a) ==> (k == c);\nloop invariant (c > 0) ==> (m == a) ==> (j == 0);\nloop invariant (c > 0) ==> (m == a) ==> (k == c) ==> (j == 0);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= c;\nloop invariant 0 <= j <= c;\nloop invariant ((k < c) ==> (k == (j + 1)));\nloop invariant ((k < c) ==> (a <= m));\nloop invariant ((k < c) ==> ((m - a) <= 0));\nloop invariant ((k < c) ==> (m <= c));\nloop invariant ((k < c) ==> (j <= c));\nloop invariant ((k < c) ==> (m == (j + 1)));\nloop invariant ((k == c) ==> (a <= m));\nloop invariant ((k == c) ==> ((m - a) <= 0));\nloop invariant ((k == c) ==> (m <= c));\nloop invariant ((k == c) ==> (j <= c));\nloop invariant ((k == c) ==> (m == c));\nloop invariant ((k == c) ==> (j == c));\nloop invariant ((k == c) ==> (c > 0));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= c;\nloop invariant a >= m ==> a >= k;\nloop invariant a >= m ==> k == c;\nloop invariant a >= m ==> m == a;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c;\nloop invariant 0 <= a;\nloop invariant 0 <= m;\nloop invariant 0 <= k;\nloop invariant k <= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant c >= k;\nloop invariant c >= m;\nloop invariant a >= 0;\nloop invariant a <= c;\nloop invariant a <= k;\nloop invariant a <= m;\nloop invariant a >= m;\nloop invariant a >= k;\nloop invariant a >= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant c >= k;\nloop invariant c >= m;\nloop invariant a >= 0;\nloop invariant a <= c;\nloop invariant a <= k;\nloop invariant a <= m;\nloop invariant a >= m;\nloop invariant a >= k;\nloop invariant a >= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant c >= k;\nloop invariant c >= m;\nloop invariant a >= 0;\nloop invariant a <= c;\nloop invariant a <= k;\nloop invariant a <= m;\nloop invariant a >= m;\nloop invariant a >= k;\nloop invariant a >= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant c >= k;\nloop invariant c >= m;\nloop invariant a >= 0;\nloop invariant a <= c;\nloop invariant a <= k;\nloop invariant a <= m;\nloop invariant a >= m;\nloop invariant a >= k;\nloop invariant a >= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant c >= k;\nloop invariant c >= m;\nloop invariant a >= 0;\nloop invariant a <= c;\nloop invariant a <= k;\nloop invariant a <= m;\nloop invariant a >= m;\nloop invariant a >= k;\nloop invariant a >= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant c >= k;\nloop invariant c >= m;\nloop invariant a >= 0;\nloop invariant a <= c;\nloop invariant a <= k;\nloop invariant a <= m;\nloop invariant a >= m;\nloop invariant a >= k;\nloop invariant a >= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant c >= k;\nloop invariant c >= m;\nloop invariant a >= 0;\nloop invariant a <= c;\nloop invariant a <= k;\nloop invariant a <= m;\nloop invariant a >= m;\nloop invariant a >= k;\nloop invariant a >= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant c >= k;\nloop invariant c >= m;\nloop invariant a >= 0;\nloop invariant a <= c;\nloop invariant a <= k;\nloop invariant a <= m;\nloop invariant a >= m;\nloop invariant a >= k;\nloop invariant a >= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant c >= k;\nloop invariant c >= m;\nloop invariant a >= 0;\nloop invariant a <= c;\nloop invariant a <= k;\nloop invariant a <= m;\nloop invariant a >= m;\nloop invariant a >= k;\nloop invariant a >= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant c >= k;\nloop invariant c >= m;\nloop invariant a >= 0;\nloop invariant a <= c;\nloop invariant a <= k;\nloop invariant a <= m;\nloop invariant a >= m;\nloop invariant a >= k;\nloop invariant a >= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= c;\n*/\n```",
            "```\n/*@\nloop invariant k <= c ==> k == c;\nloop invariant m <= a ==> m = max(m, a);\nloop invariant 0 <= k;\nloop invariant c >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= c;\nloop invariant a <= m;\nloop invariant 0 <= k <= c;\nloop invariant (k == 0) ==> (m == a);\nloop invariant (k > 0) ==> (m == (a + 1));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= c;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant a >= 0;\nloop invariant c >= 0;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= c;\nloop invariant 0 <= a;\nloop invariant a <= m ==> c > 0;\nloop invariant 0 <= a <= m ==> c > 0;\nloop invariant a = m ==> c > 0;\nloop invariant a != m ==> c = 0;\nloop invariant 0 <= k <= c;\nloop invariant 0 <= a;\nloop invariant a <= m ==> c > 0;\nloop invariant 0 <= a <= m ==> c > 0;\nloop invariant a = m ==> c > 0;\nloop invariant a != m ==> c = 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,c,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\n\n\n\n\n\n\n*/\nwhile ( k < c) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    if( c > 0 ) {\n        {;\n//@ assert( a <=  m);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= c;\nloop invariant m >= a;\nloop invariant m >= c;\nloop invariant m >= (a + k - c + 1);\nloop invariant m >= (a + k - c + 1) * (c - k) / (k - 1);\nloop invariant 0 <= k <= c;\nloop invariant m >= a;\nloop invariant m >= c;\nloop invariant m >= (a + k - c + 1);\nloop invariant m >= (a + k - c + 1) * (c - k) / (k - 1);\nloop invariant 0 <= k <= c;\nloop invariant m >= a;\nloop invariant m >= c;\nloop invariant m >= (a + k - c + 1);\nloop invariant m >= (a + k - c + 1) * (c - k) / (k - 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,c,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\n\n\n\n\n\n*/\nwhile ( k < c) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    if( c > 0 ) {\n        {;\n//@ assert( a <=  m);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= c;\nloop invariant if (c > 0) then (a <= m ==> a <= m) else (true ==> a <= m);\nloop invariant if (c > 0) then (a <= m ==> m >= a) else (true ==> m >= a);\nloop invariant if (c > 0) then (a <= m ==> k == c) else (true ==> k == c);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,c,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\n\n\n\n\n*/\nwhile ( k < c) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    if( c > 0 ) {\n        {;\n//@ assert( a <=  m);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= k <= c;\nloop invariant a >= m;\nloop invariant a >= 0;\nloop invariant c >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant (m == a) || (a > m);\nloop invariant (k == c) ==> (c > 0) ==> (a <= m);\nloop invariant (k == c) ==> (c > 0) ==> (a >= 0);\nloop invariant (k == c) ==> (c >= 0) ==> (j >= 0);\nloop invariant (k == c) ==> (c >= 0) ==> (k >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,c,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\n\n\n\n\nloop invariant i5: j >= 0;\nloop invariant i6: k >= 0;\n\nloop invariant i8: (k == c) ==> (c > 0) ==> (a <= m);\n\nloop invariant i10: (k == c) ==> (c >= 0) ==> (j >= 0);\nloop invariant i11: (k == c) ==> (c >= 0) ==> (k >= 0);\n*/\nwhile ( k < c) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    if( c > 0 ) {\n        {;\n//@ assert( a <=  m);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= c;\nloop invariant c > 0 ==> m <= a;\nloop invariant c > 0 ==> m >= a;\nloop invariant k < c ==> m >= a;\nloop invariant k < c ==> m <= a;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,c,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\n\n\n\n\n\n*/\nwhile ( k < c) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    if( c > 0 ) {\n        {;\n//@ assert( a <=  m);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= c;\nloop invariant c > 0 ==> a <= m;\nloop invariant c > 0 ==> a <= m;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,c,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\n\n\n*/\nwhile ( k < c) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    if( c > 0 ) {\n        {;\n//@ assert( a <=  m);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,c,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\n\n*/\nwhile ( k < c) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    if( c > 0 ) {\n        {;\n//@ assert( a <=  m);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= c;\nloop invariant a <= m;\nloop invariant (c == 0) ==> (m == 0);\nloop invariant (c > 0) ==> (m == a) ==> (k == c);\nloop invariant (c > 0) ==> (m == a) ==> (j == 0);\nloop invariant (c > 0) ==> (m == a) ==> (k == c) ==> (j == 0);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,c,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\n\n\n\n\n\n\n\n\nloop invariant i9: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a);\nloop invariant i10: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant i11: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\nloop invariant i12: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant i13: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\nloop invariant i14: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant i15: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\nloop invariant i16: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant i17: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\nloop invariant i18: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant i19: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\n*/\nwhile ( k < c) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    if( c > 0 ) {\n        {;\n//@ assert( a <=  m);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= c;\nloop invariant 0 <= j <= c;\nloop invariant ((k < c) ==> (k == (j + 1)));\nloop invariant ((k < c) ==> (a <= m));\nloop invariant ((k < c) ==> ((m - a) <= 0));\nloop invariant ((k < c) ==> (m <= c));\nloop invariant ((k < c) ==> (j <= c));\nloop invariant ((k < c) ==> (m == (j + 1)));\nloop invariant ((k == c) ==> (a <= m));\nloop invariant ((k == c) ==> ((m - a) <= 0));\nloop invariant ((k == c) ==> (m <= c));\nloop invariant ((k == c) ==> (j <= c));\nloop invariant ((k == c) ==> (m == c));\nloop invariant ((k == c) ==> (j == c));\nloop invariant ((k == c) ==> (c > 0));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,c,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\n\n\n\n\n\n\nloop invariant i7: ((k < c) ==> (j <= c));\n\n\n\n\nloop invariant i12: ((k == c) ==> (j <= c));\n\n\n\n*/\nwhile ( k < c) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    if( c > 0 ) {\n        {;\n//@ assert( a <=  m);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= c;\nloop invariant a >= m ==> a >= k;\nloop invariant a >= m ==> k == c;\nloop invariant a >= m ==> m == a;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,c,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\n\n\n\n\n*/\nwhile ( k < c) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    if( c > 0 ) {\n        {;\n//@ assert( a <=  m);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= c;\nloop invariant 0 <= a;\nloop invariant 0 <= m;\nloop invariant 0 <= k;\nloop invariant k <= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant c >= k;\nloop invariant c >= m;\nloop invariant a >= 0;\nloop invariant a <= c;\nloop invariant a <= k;\nloop invariant a <= m;\nloop invariant a >= m;\nloop invariant a >= k;\nloop invariant a >= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant c >= k;\nloop invariant c >= m;\nloop invariant a >= 0;\nloop invariant a <= c;\nloop invariant a <= k;\nloop invariant a <= m;\nloop invariant a >= m;\nloop invariant a >= k;\nloop invariant a >= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant c >= k;\nloop invariant c >= m;\nloop invariant a >= 0;\nloop invariant a <= c;\nloop invariant a <= k;\nloop invariant a <= m;\nloop invariant a >= m;\nloop invariant a >= k;\nloop invariant a >= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant c >= k;\nloop invariant c >= m;\nloop invariant a >= 0;\nloop invariant a <= c;\nloop invariant a <= k;\nloop invariant a <= m;\nloop invariant a >= m;\nloop invariant a >= k;\nloop invariant a >= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant c >= k;\nloop invariant c >= m;\nloop invariant a >= 0;\nloop invariant a <= c;\nloop invariant a <= k;\nloop invariant a <= m;\nloop invariant a >= m;\nloop invariant a >= k;\nloop invariant a >= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant c >= k;\nloop invariant c >= m;\nloop invariant a >= 0;\nloop invariant a <= c;\nloop invariant a <= k;\nloop invariant a <= m;\nloop invariant a >= m;\nloop invariant a >= k;\nloop invariant a >= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant c >= k;\nloop invariant c >= m;\nloop invariant a >= 0;\nloop invariant a <= c;\nloop invariant a <= k;\nloop invariant a <= m;\nloop invariant a >= m;\nloop invariant a >= k;\nloop invariant a >= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant c >= k;\nloop invariant c >= m;\nloop invariant a >= 0;\nloop invariant a <= c;\nloop invariant a <= k;\nloop invariant a <= m;\nloop invariant a >= m;\nloop invariant a >= k;\nloop invariant a >= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant c >= k;\nloop invariant c >= m;\nloop invariant a >= 0;\nloop invariant a <= c;\nloop invariant a <= k;\nloop invariant a <= m;\nloop invariant a >= m;\nloop invariant a >= k;\nloop invariant a >= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant c >= k;\nloop invariant c >= m;\nloop invariant a >= 0;\nloop invariant a <= c;\nloop invariant a <= k;\nloop invariant a <= m;\nloop invariant a >= m;\nloop invariant a >= k;\nloop invariant a >= c;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant m >= c;\nloop invariant c >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,c,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\n\n\n\nloop invariant i4: 0 <= k;\n\n\n\n\n\nloop invariant i10: k >= 0;\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ( k < c) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    if( c > 0 ) {\n        {;\n//@ assert( a <=  m);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= c;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,c,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\n\n*/\nwhile ( k < c) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    if( c > 0 ) {\n        {;\n//@ assert( a <=  m);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant k <= c ==> k == c;\nloop invariant m <= a ==> m = max(m, a);\nloop invariant 0 <= k;\nloop invariant c >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,c,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\n\n\nloop invariant i3: 0 <= k;\n\n*/\nwhile ( k < c) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    if( c > 0 ) {\n        {;\n//@ assert( a <=  m);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= c;\nloop invariant a <= m;\nloop invariant 0 <= k <= c;\nloop invariant (k == 0) ==> (m == a);\nloop invariant (k > 0) ==> (m == (a + 1));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,c,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\n\n\n\n\n*/\nwhile ( k < c) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    if( c > 0 ) {\n        {;\n//@ assert( a <=  m);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= c;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant a >= 0;\nloop invariant c >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,c,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\n\n\n\n\n\n*/\nwhile ( k < c) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    if( c > 0 ) {\n        {;\n//@ assert( a <=  m);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 18: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,c,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\nloop invariant i1: 0 <= k <= c;\nloop invariant i2: 0 <= a;\nloop invariant i3: a <= m ==> c > 0;\nloop invariant i4: 0 <= a <= m ==> c > 0;\nloop invariant i5: a = m ==> c > 0;\nloop invariant i6: a != m ==> c = 0;\nloop invariant i7: m >= a;\nloop invariant i8: m >= c;\nloop invariant i9: m >= (a + k - c + 1);\nloop invariant i10: m >= (a + k - c + 1) * (c - k) / (k - 1);\nloop invariant i11: if (c > 0) then (a <= m ==> a <= m) else (true ==> a <= m);\nloop invariant i12: if (c > 0) then (a <= m ==> m >= a) else (true ==> m >= a);\nloop invariant i13: if (c > 0) then (a <= m ==> k == c) else (true ==> k == c);\nloop invariant i14: 0 <= j <= k <= c;\nloop invariant i15: a >= m;\nloop invariant i16: a >= 0;\nloop invariant i17: c >= 0;\nloop invariant i18: j >= 0;\nloop invariant i19: k >= 0;\nloop invariant i20: (m == a) || (a > m);\nloop invariant i21: (k == c) ==> (c > 0) ==> (a <= m);\nloop invariant i22: (k == c) ==> (c > 0) ==> (a >= 0);\nloop invariant i23: (k == c) ==> (c >= 0) ==> (j >= 0);\nloop invariant i24: (k == c) ==> (c >= 0) ==> (k >= 0);\nloop invariant i25: c > 0 ==> m <= a;\nloop invariant i26: c > 0 ==> m >= a;\nloop invariant i27: k < c ==> m >= a;\nloop invariant i28: k < c ==> m <= a;\nloop invariant i29: c > 0 ==> a <= m;\nloop invariant i30: a <= m;\nloop invariant i31: (c == 0) ==> (m == 0);\nloop invariant i32: (c > 0) ==> (m == a) ==> (k == c);\nloop invariant i33: (c > 0) ==> (m == a) ==> (j == 0);\nloop invariant i34: (c > 0) ==> (m == a) ==> (k == c) ==> (j == 0);\nloop invariant i35: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1);\nloop invariant i36: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c);\nloop invariant i37: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a);\nloop invariant i38: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant i39: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\nloop invariant i40: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant i41: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\nloop invariant i42: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant i43: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\nloop invariant i44: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant i45: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\nloop invariant i46: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant i47: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\nloop invariant i48: 0 <= j <= c;\nloop invariant i49: ((k < c) ==> (k == (j + 1)));\nloop invariant i50: ((k < c) ==> (a <= m));\nloop invariant i51: ((k < c) ==> ((m - a) <= 0));\nloop invariant i52: ((k < c) ==> (m <= c));\nloop invariant i53: ((k < c) ==> (j <= c));\nloop invariant i54: ((k < c) ==> (m == (j + 1)));\nloop invariant i55: ((k == c) ==> (a <= m));\nloop invariant i56: ((k == c) ==> ((m - a) <= 0));\nloop invariant i57: ((k == c) ==> (m <= c));\nloop invariant i58: ((k == c) ==> (j <= c));\nloop invariant i59: ((k == c) ==> (m == c));\nloop invariant i60: ((k == c) ==> (j == c));\nloop invariant i61: ((k == c) ==> (c > 0));\nloop invariant i62: a >= m ==> a >= k;\nloop invariant i63: a >= m ==> k == c;\nloop invariant i64: a >= m ==> m == a;\nloop invariant i65: 0 <= c;\nloop invariant i66: 0 <= m;\nloop invariant i67: 0 <= k;\nloop invariant i68: k <= c;\nloop invariant i69: m >= k;\nloop invariant i70: m >= 0;\nloop invariant i71: c >= k;\nloop invariant i72: c >= m;\nloop invariant i73: a <= c;\nloop invariant i74: a <= k;\nloop invariant i75: a >= k;\nloop invariant i76: a >= c;\nloop invariant i77: k <= c ==> k == c;\nloop invariant i78: m <= a ==> m = max(m, a);\nloop invariant i79: (k == 0) ==> (m == a);\nloop invariant i80: (k > 0) ==> (m == (a + 1));\n*/\nwhile ( k < c) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    if( c > 0 ) {\n        {;\n//@ assert( a <=  m);\n}\n\n    }\n}",
        "combined_annotation_num_solver_calls": 15,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,c,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i18: j >= 0;\nloop invariant i19: k >= 0;\n\nloop invariant i21: (k == c) ==> (c > 0) ==> (a <= m);\n\nloop invariant i23: (k == c) ==> (c >= 0) ==> (j >= 0);\nloop invariant i24: (k == c) ==> (c >= 0) ==> (k >= 0);\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i37: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a);\nloop invariant i38: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant i39: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\nloop invariant i40: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant i41: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\nloop invariant i42: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant i43: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\nloop invariant i44: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant i45: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\nloop invariant i46: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c);\nloop invariant i47: (c > 0) ==> (m == a) ==> (k > 0) ==> (j == 1) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a) ==> (k == c) ==> (m == a);\n\n\n\n\n\nloop invariant i53: ((k < c) ==> (j <= c));\n\n\n\n\nloop invariant i58: ((k == c) ==> (j <= c));\n\n\n\n\n\n\n\n\nloop invariant i67: 0 <= k;\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ( k < c) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    if( c > 0 ) {\n        {;\n//@ assert( a <=  m);\n}\n\n    }\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/popl.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/05.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/07.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/37.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/39.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv_simp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/xy10.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/const_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe3.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe4.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbr.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbrprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bk-nat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bkley.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/efm.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/ex1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnatprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifo.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/seesaw.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/ken-imp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/rajamani_1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/simple.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/simple_if.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/up-nested.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/count_up_down_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/for_infinite_loop_1_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/for_infinite_loop_2_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/sum03_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/sum04_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/terminator_02_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/trex03_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/while_infinite_loop_1_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/while_infinite_loop_2_true.c",
            "../dataset/loop_invariants/code2inv/1.c",
            "../dataset/loop_invariants/code2inv/10.c",
            "../dataset/loop_invariants/code2inv/100.c",
            "../dataset/loop_invariants/code2inv/103.c",
            "../dataset/loop_invariants/code2inv/107.c",
            "../dataset/loop_invariants/code2inv/108.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/pldi082_unbounded.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_unsafe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/sum01_true.c",
            "../dataset/loop_invariants/code2inv/102.c",
            "../dataset/loop_invariants/code2inv/109.c"
        ],
        "skipped": [],
        "total": 190,
        "success_count": 160,
        "failure_count": 30,
        "success_rate": 0.8421052631578947
    }
}