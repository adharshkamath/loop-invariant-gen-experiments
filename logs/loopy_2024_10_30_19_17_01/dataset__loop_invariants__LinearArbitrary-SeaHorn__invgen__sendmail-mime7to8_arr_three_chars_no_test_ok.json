{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main (void)\n{\n  \n  int fbuflen = unknown();\n  int fb;\n  \n  if(fbuflen >0);else goto END;\n  fb = 0;\n  while (unknown())\n  {\n    \n    if (unknown())\n      break;\n\n    if (unknown())\n      break;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n  }\n\n  if (fb > 0)\n  {\n    \n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n  }\n\n END:  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fbuflen;\nloop invariant fbuflen > 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fbuflen;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fbuflen;\nloop invariant fb < fb + 1;\nloop invariant fb < fb + 2;\nloop invariant fb < fb + 3;\nloop invariant fb < fb + 4;\nloop invariant fb < fb + 5;\nloop invariant fb < fb + 6;\nloop invariant fb < fb + 7;\nloop invariant fb < fb + 8;\nloop invariant fb < fb + 9;\nloop invariant fb < fb + 10;\nloop invariant fb < fb + 11;\nloop invariant fb < fb + 12;\nloop invariant fb < fb + 13;\nloop invariant fb < fb + 14;\nloop invariant fb < fb + 15;\nloop invariant fb < fb + 16;\nloop invariant fb < fb + 17;\nloop invariant fb < fb + 18;\nloop invariant fb < fb + 19;\nloop invariant fb < fb + 20;\nloop invariant fb < fb + 21;\nloop invariant fb < fb + 22;\nloop invariant fb < fb + 23;\nloop invariant fb < fb + 24;\nloop invariant fb < fb + 25;\nloop invariant fb < fb + 26;\nloop invariant fb < fb + 27;\nloop invariant fb < fb + 28;\nloop invariant fb < fb + 29;\nloop invariant fb < fb + 30;\nloop invariant fb < fb + 31;\nloop invariant fb < fb + 32;\nloop invariant fb < fb + 33;\nloop invariant fb < fb + 34;\nloop invariant fb < fb + 35;\nloop invariant fb < fb + 36;\nloop invariant fb < fb + 37;\nloop invariant fb < fb + 38;\nloop invariant fb < fb + 39;\nloop invariant fb < fb + 40;\nloop invariant fb < fb + 41;\nloop invariant fb < fb + 42;\nloop invariant fb < fb + 43;\nloop invariant fb < fb + 44;\nloop invariant fb < fb + 45;\nloop invariant fb < fb + 46;\nloop invariant fb < fb + 47;\nloop invariant fb < fb + 48;\nloop invariant fb < fb + 49;\nloop invariant fb < fb + 50;\nloop invariant fb < fb + 51;\nloop invariant fb < fb + 52;\nloop invariant fb < fb + 53;\nloop invariant fb < fb + 54;\nloop invariant fb < fb + 55;\nloop invariant fb < fb + 56;\nloop invariant fb < fb + 57;\nloop invariant fb < fb + 58;\nloop invariant fb < fb + 59;\nloop invariant fb < fb + 60;\nloop invariant fb < fb + 61;\nloop invariant fb < fb + 62;\nloop invariant fb < fb + 63;\nloop invariant fb < fb + 64;\nloop invariant fb < fb + 65;\nloop invariant fb < fb + 66;\nloop invariant fb < fb + 67;\nloop invariant fb < fb + 68;\nloop invariant fb < fb + 69;\nloop invariant fb < fb + 70;\nloop invariant fb < fb + 71;\nloop invariant fb < fb + 72;\nloop invariant fb < fb + 73;\nloop invariant fb < fb + 74;\nloop invariant fb < fb + 75;\nloop invariant fb < fb + 76;\nloop invariant fb < fb + 77;\nloop invariant fb < fb + 78;\nloop invariant fb < fb + 79;\nloop invariant fb < fb + 80;\nloop invariant fb < fb + 81;\nloop invariant fb < fb + 82;\nloop invariant fb < fb + 83;\nloop invariant fb < fb + 84;\nloop invariant fb < fb + 85;\nloop invariant fb < fb + 86;\nloop invariant fb < fb + 87;\nloop invariant fb < fb + 88;\nloop invariant fb < fb + 89;\nloop invariant fb < fb + 90;\nloop invariant fb < fb + 91;\nloop invariant fb < fb + 92;\nloop invariant fb < fb + 93;\nloop invariant fb < fb + 94;\nloop invariant fb < fb + 95;\nloop invariant fb < fb + 96;\nloop invariant fb < fb + 97;\nloop invariant fb < fb + 98;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fbuflen;\nloop invariant fbuflen > 0;\nloop invariant fb < fbuflen-1 ==> fb+1 < fbuflen;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-1;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-2;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-3;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-4;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-5;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-6;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-7;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-8;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-9;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-10;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-11;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-12;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-13;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-14;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-15;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-16;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-17;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-18;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-19;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-20;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-21;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-22;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-23;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-24;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-25;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-26;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-27;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-28;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-29;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-30;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-31;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-32;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-33;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-34;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-35;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-36;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-37;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-38;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-39;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-40;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-41;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-42;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-43;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-44;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fb + 1;\nloop invariant fb + 1 < fbuflen;\nloop invariant 0 <= fb + 2;\nloop invariant fb + 2 < fbuflen;\nloop invariant 0 <= fb + 3;\nloop invariant fb + 3 < fbuflen;\nloop invariant 0 <= fb + 4;\nloop invariant fb + 4 < fbuflen;\nloop invariant unknown();\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fb + 1;\nloop invariant fb + 1 < fbuflen;\nloop invariant 0 <= fb + 2;\nloop invariant fb + 2 < fbuflen;\nloop invariant 0 <= fb + 3;\nloop invariant fb + 3 < fbuflen;\nloop invariant 0 <= fb + 4;\nloop invariant fb + 4 < fbuflen;\nloop invariant unknown();\nloop invariant unknown();\nloop invariant fb > 0;\nloop invariant unknown();\nloop invariant unknown();\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant unknown();\n*/\n```",
            "```\n/*@\nloop invariant 1 <= fb <= fbuflen;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= fb <= fbuflen;\nloop invariant fb < fb + 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fbuflen;\nloop invariant fbuflen > 0;\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= fb;\nloop invariant 0 <= fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\n*/\n```",
            "```\n/*@\nloop invariant fbuflen > 0 ==> (true);\nloop invariant fb = 0 ==> (true);\nloop invariant 0 <= fb ==> (true);\nloop invariant fb < fbuflen ==> (true);\nloop invariant 0 <= fb ==> (true);\nloop invariant fb < fbuflen ==> (true);\nloop invariant fb + 1 < fbuflen ==> (true);\nloop invariant fb + 1 >= 0 ==> (true);\nloop invariant fb + 1 >= fb ==> (true);\nloop invariant fb + 1 < fbuflen ==> (true);\nloop invariant fb + 1 > 0 ==> (true);\nloop invariant fb + 1 > fb ==> (true);\nloop invariant fb > 0 ==> (true);\nloop invariant 0 <= fb ==> (true);\nloop invariant fb < fbuflen ==> (true);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main (void)\n{\n  \n  int fbuflen = unknown();\n  int fb;\n  \n  if(fbuflen >0);else goto END;\n  fb = 0;\n  /*@\nloop invariant i1: 0 <= fb;\nloop invariant i2: fb < fbuflen;\nloop invariant i3: fb >= 0;\n*/\nwhile (unknown())\n  {\n    \n    if (unknown())\n      break;\n\n    if (unknown())\n      break;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n  }\n\n  if (fb > 0)\n  {\n    \n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fbuflen;\nloop invariant fbuflen > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main (void)\n{\n  \n  int fbuflen = unknown();\n  int fb;\n  \n  if(fbuflen >0);else goto END;\n  fb = 0;\n  /*@\nloop invariant i1: 0 <= fb;\nloop invariant i2: fb < fbuflen;\nloop invariant i3: 0 <= fbuflen;\nloop invariant i4: fbuflen > 0;\n*/\nwhile (unknown())\n  {\n    \n    if (unknown())\n      break;\n\n    if (unknown())\n      break;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n  }\n\n  if (fb > 0)\n  {\n    \n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main (void)\n{\n  \n  int fbuflen = unknown();\n  int fb;\n  \n  if(fbuflen >0);else goto END;\n  fb = 0;\n  /*@\nloop invariant i1: 0 <= fb;\nloop invariant i2: fb < fbuflen;\nloop invariant i3: fb >= 0;\n*/\nwhile (unknown())\n  {\n    \n    if (unknown())\n      break;\n\n    if (unknown())\n      break;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n  }\n\n  if (fb > 0)\n  {\n    \n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen-1;\nloop invariant fb >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main (void)\n{\n  \n  int fbuflen = unknown();\n  int fb;\n  \n  if(fbuflen >0);else goto END;\n  fb = 0;\n  /*@\nloop invariant i1: 0 <= fb;\nloop invariant i2: fb < fbuflen;\nloop invariant i3: fb >= 0;\n\n*/\nwhile (unknown())\n  {\n    \n    if (unknown())\n      break;\n\n    if (unknown())\n      break;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n  }\n\n  if (fb > 0)\n  {\n    \n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fbuflen;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main (void)\n{\n  \n  int fbuflen = unknown();\n  int fb;\n  \n  if(fbuflen >0);else goto END;\n  fb = 0;\n  /*@\nloop invariant i1: 0 <= fb;\nloop invariant i2: fb < fbuflen;\nloop invariant i3: 0 <= fbuflen;\n*/\nwhile (unknown())\n  {\n    \n    if (unknown())\n      break;\n\n    if (unknown())\n      break;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n  }\n\n  if (fb > 0)\n  {\n    \n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main (void)\n{\n  \n  int fbuflen = unknown();\n  int fb;\n  \n  if(fbuflen >0);else goto END;\n  fb = 0;\n  /*@\nloop invariant i1: 0 <= fb;\nloop invariant i2: fb < fbuflen;\n*/\nwhile (unknown())\n  {\n    \n    if (unknown())\n      break;\n\n    if (unknown())\n      break;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n  }\n\n  if (fb > 0)\n  {\n    \n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fbuflen;\nloop invariant fb < fb + 1;\nloop invariant fb < fb + 2;\nloop invariant fb < fb + 3;\nloop invariant fb < fb + 4;\nloop invariant fb < fb + 5;\nloop invariant fb < fb + 6;\nloop invariant fb < fb + 7;\nloop invariant fb < fb + 8;\nloop invariant fb < fb + 9;\nloop invariant fb < fb + 10;\nloop invariant fb < fb + 11;\nloop invariant fb < fb + 12;\nloop invariant fb < fb + 13;\nloop invariant fb < fb + 14;\nloop invariant fb < fb + 15;\nloop invariant fb < fb + 16;\nloop invariant fb < fb + 17;\nloop invariant fb < fb + 18;\nloop invariant fb < fb + 19;\nloop invariant fb < fb + 20;\nloop invariant fb < fb + 21;\nloop invariant fb < fb + 22;\nloop invariant fb < fb + 23;\nloop invariant fb < fb + 24;\nloop invariant fb < fb + 25;\nloop invariant fb < fb + 26;\nloop invariant fb < fb + 27;\nloop invariant fb < fb + 28;\nloop invariant fb < fb + 29;\nloop invariant fb < fb + 30;\nloop invariant fb < fb + 31;\nloop invariant fb < fb + 32;\nloop invariant fb < fb + 33;\nloop invariant fb < fb + 34;\nloop invariant fb < fb + 35;\nloop invariant fb < fb + 36;\nloop invariant fb < fb + 37;\nloop invariant fb < fb + 38;\nloop invariant fb < fb + 39;\nloop invariant fb < fb + 40;\nloop invariant fb < fb + 41;\nloop invariant fb < fb + 42;\nloop invariant fb < fb + 43;\nloop invariant fb < fb + 44;\nloop invariant fb < fb + 45;\nloop invariant fb < fb + 46;\nloop invariant fb < fb + 47;\nloop invariant fb < fb + 48;\nloop invariant fb < fb + 49;\nloop invariant fb < fb + 50;\nloop invariant fb < fb + 51;\nloop invariant fb < fb + 52;\nloop invariant fb < fb + 53;\nloop invariant fb < fb + 54;\nloop invariant fb < fb + 55;\nloop invariant fb < fb + 56;\nloop invariant fb < fb + 57;\nloop invariant fb < fb + 58;\nloop invariant fb < fb + 59;\nloop invariant fb < fb + 60;\nloop invariant fb < fb + 61;\nloop invariant fb < fb + 62;\nloop invariant fb < fb + 63;\nloop invariant fb < fb + 64;\nloop invariant fb < fb + 65;\nloop invariant fb < fb + 66;\nloop invariant fb < fb + 67;\nloop invariant fb < fb + 68;\nloop invariant fb < fb + 69;\nloop invariant fb < fb + 70;\nloop invariant fb < fb + 71;\nloop invariant fb < fb + 72;\nloop invariant fb < fb + 73;\nloop invariant fb < fb + 74;\nloop invariant fb < fb + 75;\nloop invariant fb < fb + 76;\nloop invariant fb < fb + 77;\nloop invariant fb < fb + 78;\nloop invariant fb < fb + 79;\nloop invariant fb < fb + 80;\nloop invariant fb < fb + 81;\nloop invariant fb < fb + 82;\nloop invariant fb < fb + 83;\nloop invariant fb < fb + 84;\nloop invariant fb < fb + 85;\nloop invariant fb < fb + 86;\nloop invariant fb < fb + 87;\nloop invariant fb < fb + 88;\nloop invariant fb < fb + 89;\nloop invariant fb < fb + 90;\nloop invariant fb < fb + 91;\nloop invariant fb < fb + 92;\nloop invariant fb < fb + 93;\nloop invariant fb < fb + 94;\nloop invariant fb < fb + 95;\nloop invariant fb < fb + 96;\nloop invariant fb < fb + 97;\nloop invariant fb < fb + 98;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main (void)\n{\n  \n  int fbuflen = unknown();\n  int fb;\n  \n  if(fbuflen >0);else goto END;\n  fb = 0;\n  /*@\nloop invariant i1: 0 <= fb;\nloop invariant i2: fb < fbuflen;\nloop invariant i3: 0 <= fbuflen;\nloop invariant i4: fb < fb + 1;\nloop invariant i5: fb < fb + 2;\nloop invariant i6: fb < fb + 3;\nloop invariant i7: fb < fb + 4;\nloop invariant i8: fb < fb + 5;\nloop invariant i9: fb < fb + 6;\nloop invariant i10: fb < fb + 7;\nloop invariant i11: fb < fb + 8;\nloop invariant i12: fb < fb + 9;\nloop invariant i13: fb < fb + 10;\nloop invariant i14: fb < fb + 11;\nloop invariant i15: fb < fb + 12;\nloop invariant i16: fb < fb + 13;\nloop invariant i17: fb < fb + 14;\nloop invariant i18: fb < fb + 15;\nloop invariant i19: fb < fb + 16;\nloop invariant i20: fb < fb + 17;\nloop invariant i21: fb < fb + 18;\nloop invariant i22: fb < fb + 19;\nloop invariant i23: fb < fb + 20;\nloop invariant i24: fb < fb + 21;\nloop invariant i25: fb < fb + 22;\nloop invariant i26: fb < fb + 23;\nloop invariant i27: fb < fb + 24;\nloop invariant i28: fb < fb + 25;\nloop invariant i29: fb < fb + 26;\nloop invariant i30: fb < fb + 27;\nloop invariant i31: fb < fb + 28;\nloop invariant i32: fb < fb + 29;\nloop invariant i33: fb < fb + 30;\nloop invariant i34: fb < fb + 31;\nloop invariant i35: fb < fb + 32;\nloop invariant i36: fb < fb + 33;\nloop invariant i37: fb < fb + 34;\nloop invariant i38: fb < fb + 35;\nloop invariant i39: fb < fb + 36;\nloop invariant i40: fb < fb + 37;\nloop invariant i41: fb < fb + 38;\nloop invariant i42: fb < fb + 39;\nloop invariant i43: fb < fb + 40;\nloop invariant i44: fb < fb + 41;\nloop invariant i45: fb < fb + 42;\nloop invariant i46: fb < fb + 43;\nloop invariant i47: fb < fb + 44;\nloop invariant i48: fb < fb + 45;\nloop invariant i49: fb < fb + 46;\nloop invariant i50: fb < fb + 47;\nloop invariant i51: fb < fb + 48;\nloop invariant i52: fb < fb + 49;\nloop invariant i53: fb < fb + 50;\nloop invariant i54: fb < fb + 51;\nloop invariant i55: fb < fb + 52;\nloop invariant i56: fb < fb + 53;\nloop invariant i57: fb < fb + 54;\nloop invariant i58: fb < fb + 55;\nloop invariant i59: fb < fb + 56;\nloop invariant i60: fb < fb + 57;\nloop invariant i61: fb < fb + 58;\nloop invariant i62: fb < fb + 59;\nloop invariant i63: fb < fb + 60;\nloop invariant i64: fb < fb + 61;\nloop invariant i65: fb < fb + 62;\nloop invariant i66: fb < fb + 63;\nloop invariant i67: fb < fb + 64;\nloop invariant i68: fb < fb + 65;\nloop invariant i69: fb < fb + 66;\nloop invariant i70: fb < fb + 67;\nloop invariant i71: fb < fb + 68;\nloop invariant i72: fb < fb + 69;\nloop invariant i73: fb < fb + 70;\nloop invariant i74: fb < fb + 71;\nloop invariant i75: fb < fb + 72;\nloop invariant i76: fb < fb + 73;\nloop invariant i77: fb < fb + 74;\nloop invariant i78: fb < fb + 75;\nloop invariant i79: fb < fb + 76;\nloop invariant i80: fb < fb + 77;\nloop invariant i81: fb < fb + 78;\nloop invariant i82: fb < fb + 79;\nloop invariant i83: fb < fb + 80;\nloop invariant i84: fb < fb + 81;\nloop invariant i85: fb < fb + 82;\nloop invariant i86: fb < fb + 83;\nloop invariant i87: fb < fb + 84;\nloop invariant i88: fb < fb + 85;\nloop invariant i89: fb < fb + 86;\nloop invariant i90: fb < fb + 87;\nloop invariant i91: fb < fb + 88;\nloop invariant i92: fb < fb + 89;\nloop invariant i93: fb < fb + 90;\nloop invariant i94: fb < fb + 91;\nloop invariant i95: fb < fb + 92;\nloop invariant i96: fb < fb + 93;\nloop invariant i97: fb < fb + 94;\nloop invariant i98: fb < fb + 95;\nloop invariant i99: fb < fb + 96;\nloop invariant i100: fb < fb + 97;\nloop invariant i101: fb < fb + 98;\n*/\nwhile (unknown())\n  {\n    \n    if (unknown())\n      break;\n\n    if (unknown())\n      break;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n  }\n\n  if (fb > 0)\n  {\n    \n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fbuflen;\nloop invariant fbuflen > 0;\nloop invariant fb < fbuflen-1 ==> fb+1 < fbuflen;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-1;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-2;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-3;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-4;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-5;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-6;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-7;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-8;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-9;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-10;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-11;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-12;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-13;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-14;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-15;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-16;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-17;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-18;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-19;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-20;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-21;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-22;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-23;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-24;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-25;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-26;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-27;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-28;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-29;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-30;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-31;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-32;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-33;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-34;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-35;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-36;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-37;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-38;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-39;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-40;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-41;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-42;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-43;\nloop invariant fb >= fbuflen-1 ==> fb+1 >= fbuflen-44;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main (void)\n{\n  \n  int fbuflen = unknown();\n  int fb;\n  \n  if(fbuflen >0);else goto END;\n  fb = 0;\n  /*@\nloop invariant i1: 0 <= fb;\nloop invariant i2: fb < fbuflen;\nloop invariant i3: 0 <= fbuflen;\nloop invariant i4: fbuflen > 0;\nloop invariant i5: fb < fbuflen-1 ==> fb+1 < fbuflen;\nloop invariant i6: fb >= fbuflen-1 ==> fb+1 >= fbuflen;\nloop invariant i7: fb >= fbuflen-1 ==> fb+1 >= fbuflen-1;\nloop invariant i8: fb >= fbuflen-1 ==> fb+1 >= fbuflen-2;\nloop invariant i9: fb >= fbuflen-1 ==> fb+1 >= fbuflen-3;\nloop invariant i10: fb >= fbuflen-1 ==> fb+1 >= fbuflen-4;\nloop invariant i11: fb >= fbuflen-1 ==> fb+1 >= fbuflen-5;\nloop invariant i12: fb >= fbuflen-1 ==> fb+1 >= fbuflen-6;\nloop invariant i13: fb >= fbuflen-1 ==> fb+1 >= fbuflen-7;\nloop invariant i14: fb >= fbuflen-1 ==> fb+1 >= fbuflen-8;\nloop invariant i15: fb >= fbuflen-1 ==> fb+1 >= fbuflen-9;\nloop invariant i16: fb >= fbuflen-1 ==> fb+1 >= fbuflen-10;\nloop invariant i17: fb >= fbuflen-1 ==> fb+1 >= fbuflen-11;\nloop invariant i18: fb >= fbuflen-1 ==> fb+1 >= fbuflen-12;\nloop invariant i19: fb >= fbuflen-1 ==> fb+1 >= fbuflen-13;\nloop invariant i20: fb >= fbuflen-1 ==> fb+1 >= fbuflen-14;\nloop invariant i21: fb >= fbuflen-1 ==> fb+1 >= fbuflen-15;\nloop invariant i22: fb >= fbuflen-1 ==> fb+1 >= fbuflen-16;\nloop invariant i23: fb >= fbuflen-1 ==> fb+1 >= fbuflen-17;\nloop invariant i24: fb >= fbuflen-1 ==> fb+1 >= fbuflen-18;\nloop invariant i25: fb >= fbuflen-1 ==> fb+1 >= fbuflen-19;\nloop invariant i26: fb >= fbuflen-1 ==> fb+1 >= fbuflen-20;\nloop invariant i27: fb >= fbuflen-1 ==> fb+1 >= fbuflen-21;\nloop invariant i28: fb >= fbuflen-1 ==> fb+1 >= fbuflen-22;\nloop invariant i29: fb >= fbuflen-1 ==> fb+1 >= fbuflen-23;\nloop invariant i30: fb >= fbuflen-1 ==> fb+1 >= fbuflen-24;\nloop invariant i31: fb >= fbuflen-1 ==> fb+1 >= fbuflen-25;\nloop invariant i32: fb >= fbuflen-1 ==> fb+1 >= fbuflen-26;\nloop invariant i33: fb >= fbuflen-1 ==> fb+1 >= fbuflen-27;\nloop invariant i34: fb >= fbuflen-1 ==> fb+1 >= fbuflen-28;\nloop invariant i35: fb >= fbuflen-1 ==> fb+1 >= fbuflen-29;\nloop invariant i36: fb >= fbuflen-1 ==> fb+1 >= fbuflen-30;\nloop invariant i37: fb >= fbuflen-1 ==> fb+1 >= fbuflen-31;\nloop invariant i38: fb >= fbuflen-1 ==> fb+1 >= fbuflen-32;\nloop invariant i39: fb >= fbuflen-1 ==> fb+1 >= fbuflen-33;\nloop invariant i40: fb >= fbuflen-1 ==> fb+1 >= fbuflen-34;\nloop invariant i41: fb >= fbuflen-1 ==> fb+1 >= fbuflen-35;\nloop invariant i42: fb >= fbuflen-1 ==> fb+1 >= fbuflen-36;\nloop invariant i43: fb >= fbuflen-1 ==> fb+1 >= fbuflen-37;\nloop invariant i44: fb >= fbuflen-1 ==> fb+1 >= fbuflen-38;\nloop invariant i45: fb >= fbuflen-1 ==> fb+1 >= fbuflen-39;\nloop invariant i46: fb >= fbuflen-1 ==> fb+1 >= fbuflen-40;\nloop invariant i47: fb >= fbuflen-1 ==> fb+1 >= fbuflen-41;\nloop invariant i48: fb >= fbuflen-1 ==> fb+1 >= fbuflen-42;\nloop invariant i49: fb >= fbuflen-1 ==> fb+1 >= fbuflen-43;\nloop invariant i50: fb >= fbuflen-1 ==> fb+1 >= fbuflen-44;\n*/\nwhile (unknown())\n  {\n    \n    if (unknown())\n      break;\n\n    if (unknown())\n      break;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n  }\n\n  if (fb > 0)\n  {\n    \n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fb + 1;\nloop invariant fb + 1 < fbuflen;\nloop invariant 0 <= fb + 2;\nloop invariant fb + 2 < fbuflen;\nloop invariant 0 <= fb + 3;\nloop invariant fb + 3 < fbuflen;\nloop invariant 0 <= fb + 4;\nloop invariant fb + 4 < fbuflen;\nloop invariant unknown();\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fb + 1;\nloop invariant fb + 1 < fbuflen;\nloop invariant 0 <= fb + 2;\nloop invariant fb + 2 < fbuflen;\nloop invariant 0 <= fb + 3;\nloop invariant fb + 3 < fbuflen;\nloop invariant 0 <= fb + 4;\nloop invariant fb + 4 < fbuflen;\nloop invariant unknown();\nloop invariant unknown();\nloop invariant fb > 0;\nloop invariant unknown();\nloop invariant unknown();\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant unknown();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main (void)\n{\n  \n  int fbuflen = unknown();\n  int fb;\n  \n  if(fbuflen >0);else goto END;\n  fb = 0;\n  /*@\nloop invariant i1: 0 <= fb;\nloop invariant i2: fb < fbuflen;\nloop invariant i3: 0 <= fb + 1;\n\nloop invariant i5: 0 <= fb + 2;\n\nloop invariant i7: 0 <= fb + 3;\n\nloop invariant i9: 0 <= fb + 4;\n\n\n\n*/\nwhile (unknown())\n  {\n    \n    if (unknown())\n      break;\n\n    if (unknown())\n      break;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n  }\n\n  if (fb > 0)\n  {\n    \n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= fb <= fbuflen;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main (void)\n{\n  \n  int fbuflen = unknown();\n  int fb;\n  \n  if(fbuflen >0);else goto END;\n  fb = 0;\n  /*@\n\n*/\nwhile (unknown())\n  {\n    \n    if (unknown())\n      break;\n\n    if (unknown())\n      break;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n  }\n\n  if (fb > 0)\n  {\n    \n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= fb <= fbuflen;\nloop invariant fb < fb + 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\nloop invariant fb < fbuflen - 1;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main (void)\n{\n  \n  int fbuflen = unknown();\n  int fb;\n  \n  if(fbuflen >0);else goto END;\n  fb = 0;\n  /*@\n\nloop invariant i2: fb < fb + 1;\nloop invariant i3: fb >= 0;\nloop invariant i4: fb < fbuflen;\n\n\n*/\nwhile (unknown())\n  {\n    \n    if (unknown())\n      break;\n\n    if (unknown())\n      break;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n  }\n\n  if (fb > 0)\n  {\n    \n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main (void)\n{\n  \n  int fbuflen = unknown();\n  int fb;\n  \n  if(fbuflen >0);else goto END;\n  fb = 0;\n  /*@\nloop invariant i1: 0 <= fb;\nloop invariant i2: fb < fbuflen;\nloop invariant i3: fb >= 0;\n*/\nwhile (unknown())\n  {\n    \n    if (unknown())\n      break;\n\n    if (unknown())\n      break;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n  }\n\n  if (fb > 0)\n  {\n    \n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fbuflen;\nloop invariant fbuflen > 0;\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant 0 <= fb;\nloop invariant fb < fbuflen;\nloop invariant fb >= 0;\nloop invariant fb < fbuflen;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main (void)\n{\n  \n  int fbuflen = unknown();\n  int fb;\n  \n  if(fbuflen >0);else goto END;\n  fb = 0;\n  /*@\nloop invariant i1: 0 <= fb;\nloop invariant i2: fb < fbuflen;\nloop invariant i3: 0 <= fbuflen;\nloop invariant i4: fbuflen > 0;\nloop invariant i5: fb >= 0;\n*/\nwhile (unknown())\n  {\n    \n    if (unknown())\n      break;\n\n    if (unknown())\n      break;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n  }\n\n  if (fb > 0)\n  {\n    \n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= fb;\nloop invariant 0 <= fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\nloop invariant 0 <= fb < fbuflen;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main (void)\n{\n  \n  int fbuflen = unknown();\n  int fb;\n  \n  if(fbuflen >0);else goto END;\n  fb = 0;\n  /*@\nloop invariant i1: 0 <= fb;\nloop invariant i2: 0 <= fbuflen;\nloop invariant i3: 0 <= fb < fbuflen;\n*/\nwhile (unknown())\n  {\n    \n    if (unknown())\n      break;\n\n    if (unknown())\n      break;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n  }\n\n  if (fb > 0)\n  {\n    \n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 10,
                "annotations": "```\n/*@\nloop invariant fbuflen > 0 ==> (true);\nloop invariant fb = 0 ==> (true);\nloop invariant 0 <= fb ==> (true);\nloop invariant fb < fbuflen ==> (true);\nloop invariant 0 <= fb ==> (true);\nloop invariant fb < fbuflen ==> (true);\nloop invariant fb + 1 < fbuflen ==> (true);\nloop invariant fb + 1 >= 0 ==> (true);\nloop invariant fb + 1 >= fb ==> (true);\nloop invariant fb + 1 < fbuflen ==> (true);\nloop invariant fb + 1 > 0 ==> (true);\nloop invariant fb + 1 > fb ==> (true);\nloop invariant fb > 0 ==> (true);\nloop invariant 0 <= fb ==> (true);\nloop invariant fb < fbuflen ==> (true);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main (void)\n{\n  \n  int fbuflen = unknown();\n  int fb;\n  \n  if(fbuflen >0);else goto END;\n  fb = 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown())\n  {\n    \n    if (unknown())\n      break;\n\n    if (unknown())\n      break;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n  }\n\n  if (fb > 0)\n  {\n    \n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 178: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main (void)\n{\n  \n  int fbuflen = unknown();\n  int fb;\n  \n  if(fbuflen >0);else goto END;\n  fb = 0;\n  /*@\nloop invariant i1: 0 <= fb;\nloop invariant i2: fb < fbuflen;\nloop invariant i3: fb >= 0;\nloop invariant i4: 0 <= fbuflen;\nloop invariant i5: fbuflen > 0;\nloop invariant i6: fb < fbuflen-1;\nloop invariant i7: fb < fb + 1;\nloop invariant i8: fb < fb + 2;\nloop invariant i9: fb < fb + 3;\nloop invariant i10: fb < fb + 4;\nloop invariant i11: fb < fb + 5;\nloop invariant i12: fb < fb + 6;\nloop invariant i13: fb < fb + 7;\nloop invariant i14: fb < fb + 8;\nloop invariant i15: fb < fb + 9;\nloop invariant i16: fb < fb + 10;\nloop invariant i17: fb < fb + 11;\nloop invariant i18: fb < fb + 12;\nloop invariant i19: fb < fb + 13;\nloop invariant i20: fb < fb + 14;\nloop invariant i21: fb < fb + 15;\nloop invariant i22: fb < fb + 16;\nloop invariant i23: fb < fb + 17;\nloop invariant i24: fb < fb + 18;\nloop invariant i25: fb < fb + 19;\nloop invariant i26: fb < fb + 20;\nloop invariant i27: fb < fb + 21;\nloop invariant i28: fb < fb + 22;\nloop invariant i29: fb < fb + 23;\nloop invariant i30: fb < fb + 24;\nloop invariant i31: fb < fb + 25;\nloop invariant i32: fb < fb + 26;\nloop invariant i33: fb < fb + 27;\nloop invariant i34: fb < fb + 28;\nloop invariant i35: fb < fb + 29;\nloop invariant i36: fb < fb + 30;\nloop invariant i37: fb < fb + 31;\nloop invariant i38: fb < fb + 32;\nloop invariant i39: fb < fb + 33;\nloop invariant i40: fb < fb + 34;\nloop invariant i41: fb < fb + 35;\nloop invariant i42: fb < fb + 36;\nloop invariant i43: fb < fb + 37;\nloop invariant i44: fb < fb + 38;\nloop invariant i45: fb < fb + 39;\nloop invariant i46: fb < fb + 40;\nloop invariant i47: fb < fb + 41;\nloop invariant i48: fb < fb + 42;\nloop invariant i49: fb < fb + 43;\nloop invariant i50: fb < fb + 44;\nloop invariant i51: fb < fb + 45;\nloop invariant i52: fb < fb + 46;\nloop invariant i53: fb < fb + 47;\nloop invariant i54: fb < fb + 48;\nloop invariant i55: fb < fb + 49;\nloop invariant i56: fb < fb + 50;\nloop invariant i57: fb < fb + 51;\nloop invariant i58: fb < fb + 52;\nloop invariant i59: fb < fb + 53;\nloop invariant i60: fb < fb + 54;\nloop invariant i61: fb < fb + 55;\nloop invariant i62: fb < fb + 56;\nloop invariant i63: fb < fb + 57;\nloop invariant i64: fb < fb + 58;\nloop invariant i65: fb < fb + 59;\nloop invariant i66: fb < fb + 60;\nloop invariant i67: fb < fb + 61;\nloop invariant i68: fb < fb + 62;\nloop invariant i69: fb < fb + 63;\nloop invariant i70: fb < fb + 64;\nloop invariant i71: fb < fb + 65;\nloop invariant i72: fb < fb + 66;\nloop invariant i73: fb < fb + 67;\nloop invariant i74: fb < fb + 68;\nloop invariant i75: fb < fb + 69;\nloop invariant i76: fb < fb + 70;\nloop invariant i77: fb < fb + 71;\nloop invariant i78: fb < fb + 72;\nloop invariant i79: fb < fb + 73;\nloop invariant i80: fb < fb + 74;\nloop invariant i81: fb < fb + 75;\nloop invariant i82: fb < fb + 76;\nloop invariant i83: fb < fb + 77;\nloop invariant i84: fb < fb + 78;\nloop invariant i85: fb < fb + 79;\nloop invariant i86: fb < fb + 80;\nloop invariant i87: fb < fb + 81;\nloop invariant i88: fb < fb + 82;\nloop invariant i89: fb < fb + 83;\nloop invariant i90: fb < fb + 84;\nloop invariant i91: fb < fb + 85;\nloop invariant i92: fb < fb + 86;\nloop invariant i93: fb < fb + 87;\nloop invariant i94: fb < fb + 88;\nloop invariant i95: fb < fb + 89;\nloop invariant i96: fb < fb + 90;\nloop invariant i97: fb < fb + 91;\nloop invariant i98: fb < fb + 92;\nloop invariant i99: fb < fb + 93;\nloop invariant i100: fb < fb + 94;\nloop invariant i101: fb < fb + 95;\nloop invariant i102: fb < fb + 96;\nloop invariant i103: fb < fb + 97;\nloop invariant i104: fb < fb + 98;\nloop invariant i105: fb < fbuflen-1 ==> fb+1 < fbuflen;\nloop invariant i106: fb >= fbuflen-1 ==> fb+1 >= fbuflen;\nloop invariant i107: fb >= fbuflen-1 ==> fb+1 >= fbuflen-1;\nloop invariant i108: fb >= fbuflen-1 ==> fb+1 >= fbuflen-2;\nloop invariant i109: fb >= fbuflen-1 ==> fb+1 >= fbuflen-3;\nloop invariant i110: fb >= fbuflen-1 ==> fb+1 >= fbuflen-4;\nloop invariant i111: fb >= fbuflen-1 ==> fb+1 >= fbuflen-5;\nloop invariant i112: fb >= fbuflen-1 ==> fb+1 >= fbuflen-6;\nloop invariant i113: fb >= fbuflen-1 ==> fb+1 >= fbuflen-7;\nloop invariant i114: fb >= fbuflen-1 ==> fb+1 >= fbuflen-8;\nloop invariant i115: fb >= fbuflen-1 ==> fb+1 >= fbuflen-9;\nloop invariant i116: fb >= fbuflen-1 ==> fb+1 >= fbuflen-10;\nloop invariant i117: fb >= fbuflen-1 ==> fb+1 >= fbuflen-11;\nloop invariant i118: fb >= fbuflen-1 ==> fb+1 >= fbuflen-12;\nloop invariant i119: fb >= fbuflen-1 ==> fb+1 >= fbuflen-13;\nloop invariant i120: fb >= fbuflen-1 ==> fb+1 >= fbuflen-14;\nloop invariant i121: fb >= fbuflen-1 ==> fb+1 >= fbuflen-15;\nloop invariant i122: fb >= fbuflen-1 ==> fb+1 >= fbuflen-16;\nloop invariant i123: fb >= fbuflen-1 ==> fb+1 >= fbuflen-17;\nloop invariant i124: fb >= fbuflen-1 ==> fb+1 >= fbuflen-18;\nloop invariant i125: fb >= fbuflen-1 ==> fb+1 >= fbuflen-19;\nloop invariant i126: fb >= fbuflen-1 ==> fb+1 >= fbuflen-20;\nloop invariant i127: fb >= fbuflen-1 ==> fb+1 >= fbuflen-21;\nloop invariant i128: fb >= fbuflen-1 ==> fb+1 >= fbuflen-22;\nloop invariant i129: fb >= fbuflen-1 ==> fb+1 >= fbuflen-23;\nloop invariant i130: fb >= fbuflen-1 ==> fb+1 >= fbuflen-24;\nloop invariant i131: fb >= fbuflen-1 ==> fb+1 >= fbuflen-25;\nloop invariant i132: fb >= fbuflen-1 ==> fb+1 >= fbuflen-26;\nloop invariant i133: fb >= fbuflen-1 ==> fb+1 >= fbuflen-27;\nloop invariant i134: fb >= fbuflen-1 ==> fb+1 >= fbuflen-28;\nloop invariant i135: fb >= fbuflen-1 ==> fb+1 >= fbuflen-29;\nloop invariant i136: fb >= fbuflen-1 ==> fb+1 >= fbuflen-30;\nloop invariant i137: fb >= fbuflen-1 ==> fb+1 >= fbuflen-31;\nloop invariant i138: fb >= fbuflen-1 ==> fb+1 >= fbuflen-32;\nloop invariant i139: fb >= fbuflen-1 ==> fb+1 >= fbuflen-33;\nloop invariant i140: fb >= fbuflen-1 ==> fb+1 >= fbuflen-34;\nloop invariant i141: fb >= fbuflen-1 ==> fb+1 >= fbuflen-35;\nloop invariant i142: fb >= fbuflen-1 ==> fb+1 >= fbuflen-36;\nloop invariant i143: fb >= fbuflen-1 ==> fb+1 >= fbuflen-37;\nloop invariant i144: fb >= fbuflen-1 ==> fb+1 >= fbuflen-38;\nloop invariant i145: fb >= fbuflen-1 ==> fb+1 >= fbuflen-39;\nloop invariant i146: fb >= fbuflen-1 ==> fb+1 >= fbuflen-40;\nloop invariant i147: fb >= fbuflen-1 ==> fb+1 >= fbuflen-41;\nloop invariant i148: fb >= fbuflen-1 ==> fb+1 >= fbuflen-42;\nloop invariant i149: fb >= fbuflen-1 ==> fb+1 >= fbuflen-43;\nloop invariant i150: fb >= fbuflen-1 ==> fb+1 >= fbuflen-44;\nloop invariant i151: 0 <= fb + 1;\nloop invariant i152: fb + 1 < fbuflen;\nloop invariant i153: 0 <= fb + 2;\nloop invariant i154: fb + 2 < fbuflen;\nloop invariant i155: 0 <= fb + 3;\nloop invariant i156: fb + 3 < fbuflen;\nloop invariant i157: 0 <= fb + 4;\nloop invariant i158: fb + 4 < fbuflen;\nloop invariant i159: unknown();\nloop invariant i160: fb > 0;\nloop invariant i161: 1 <= fb <= fbuflen;\nloop invariant i162: fb >= 1;\nloop invariant i163: fb < fbuflen - 1;\nloop invariant i164: 0 <= fb < fbuflen;\nloop invariant i165: fbuflen > 0 ==> (true);\nloop invariant i166: fb = 0 ==> (true);\nloop invariant i167: 0 <= fb ==> (true);\nloop invariant i168: fb < fbuflen ==> (true);\nloop invariant i169: fb + 1 < fbuflen ==> (true);\nloop invariant i170: fb + 1 >= 0 ==> (true);\nloop invariant i171: fb + 1 >= fb ==> (true);\nloop invariant i172: fb + 1 > 0 ==> (true);\nloop invariant i173: fb + 1 > fb ==> (true);\nloop invariant i174: fb > 0 ==> (true);\n*/\nwhile (unknown())\n  {\n    \n    if (unknown())\n      break;\n\n    if (unknown())\n      break;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n  }\n\n  if (fb > 0)\n  {\n    \n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n  }\n\n END:  return 0;\n}",
        "combined_annotation_num_solver_calls": 16,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nextern int unknown();\n\nint main (void)\n{\n  \n  int fbuflen = unknown();\n  int fb;\n  \n  if(fbuflen >0);else goto END;\n  fb = 0;\n  /*@\nloop invariant i1: 0 <= fb;\nloop invariant i2: fb < fbuflen;\nloop invariant i3: fb >= 0;\nloop invariant i4: 0 <= fbuflen;\nloop invariant i5: fbuflen > 0;\n\nloop invariant i7: fb < fb + 1;\nloop invariant i8: fb < fb + 2;\nloop invariant i9: fb < fb + 3;\nloop invariant i10: fb < fb + 4;\nloop invariant i11: fb < fb + 5;\nloop invariant i12: fb < fb + 6;\nloop invariant i13: fb < fb + 7;\nloop invariant i14: fb < fb + 8;\nloop invariant i15: fb < fb + 9;\nloop invariant i16: fb < fb + 10;\nloop invariant i17: fb < fb + 11;\nloop invariant i18: fb < fb + 12;\nloop invariant i19: fb < fb + 13;\nloop invariant i20: fb < fb + 14;\nloop invariant i21: fb < fb + 15;\nloop invariant i22: fb < fb + 16;\nloop invariant i23: fb < fb + 17;\nloop invariant i24: fb < fb + 18;\nloop invariant i25: fb < fb + 19;\nloop invariant i26: fb < fb + 20;\nloop invariant i27: fb < fb + 21;\nloop invariant i28: fb < fb + 22;\nloop invariant i29: fb < fb + 23;\nloop invariant i30: fb < fb + 24;\nloop invariant i31: fb < fb + 25;\nloop invariant i32: fb < fb + 26;\nloop invariant i33: fb < fb + 27;\nloop invariant i34: fb < fb + 28;\nloop invariant i35: fb < fb + 29;\nloop invariant i36: fb < fb + 30;\nloop invariant i37: fb < fb + 31;\nloop invariant i38: fb < fb + 32;\nloop invariant i39: fb < fb + 33;\nloop invariant i40: fb < fb + 34;\nloop invariant i41: fb < fb + 35;\nloop invariant i42: fb < fb + 36;\nloop invariant i43: fb < fb + 37;\nloop invariant i44: fb < fb + 38;\nloop invariant i45: fb < fb + 39;\nloop invariant i46: fb < fb + 40;\nloop invariant i47: fb < fb + 41;\nloop invariant i48: fb < fb + 42;\nloop invariant i49: fb < fb + 43;\nloop invariant i50: fb < fb + 44;\nloop invariant i51: fb < fb + 45;\nloop invariant i52: fb < fb + 46;\nloop invariant i53: fb < fb + 47;\nloop invariant i54: fb < fb + 48;\nloop invariant i55: fb < fb + 49;\nloop invariant i56: fb < fb + 50;\nloop invariant i57: fb < fb + 51;\nloop invariant i58: fb < fb + 52;\nloop invariant i59: fb < fb + 53;\nloop invariant i60: fb < fb + 54;\nloop invariant i61: fb < fb + 55;\nloop invariant i62: fb < fb + 56;\nloop invariant i63: fb < fb + 57;\nloop invariant i64: fb < fb + 58;\nloop invariant i65: fb < fb + 59;\nloop invariant i66: fb < fb + 60;\nloop invariant i67: fb < fb + 61;\nloop invariant i68: fb < fb + 62;\nloop invariant i69: fb < fb + 63;\nloop invariant i70: fb < fb + 64;\nloop invariant i71: fb < fb + 65;\nloop invariant i72: fb < fb + 66;\nloop invariant i73: fb < fb + 67;\nloop invariant i74: fb < fb + 68;\nloop invariant i75: fb < fb + 69;\nloop invariant i76: fb < fb + 70;\nloop invariant i77: fb < fb + 71;\nloop invariant i78: fb < fb + 72;\nloop invariant i79: fb < fb + 73;\nloop invariant i80: fb < fb + 74;\nloop invariant i81: fb < fb + 75;\nloop invariant i82: fb < fb + 76;\nloop invariant i83: fb < fb + 77;\nloop invariant i84: fb < fb + 78;\nloop invariant i85: fb < fb + 79;\nloop invariant i86: fb < fb + 80;\nloop invariant i87: fb < fb + 81;\nloop invariant i88: fb < fb + 82;\nloop invariant i89: fb < fb + 83;\nloop invariant i90: fb < fb + 84;\nloop invariant i91: fb < fb + 85;\nloop invariant i92: fb < fb + 86;\nloop invariant i93: fb < fb + 87;\nloop invariant i94: fb < fb + 88;\nloop invariant i95: fb < fb + 89;\nloop invariant i96: fb < fb + 90;\nloop invariant i97: fb < fb + 91;\nloop invariant i98: fb < fb + 92;\nloop invariant i99: fb < fb + 93;\nloop invariant i100: fb < fb + 94;\nloop invariant i101: fb < fb + 95;\nloop invariant i102: fb < fb + 96;\nloop invariant i103: fb < fb + 97;\nloop invariant i104: fb < fb + 98;\nloop invariant i105: fb < fbuflen-1 ==> fb+1 < fbuflen;\nloop invariant i106: fb >= fbuflen-1 ==> fb+1 >= fbuflen;\nloop invariant i107: fb >= fbuflen-1 ==> fb+1 >= fbuflen-1;\nloop invariant i108: fb >= fbuflen-1 ==> fb+1 >= fbuflen-2;\nloop invariant i109: fb >= fbuflen-1 ==> fb+1 >= fbuflen-3;\nloop invariant i110: fb >= fbuflen-1 ==> fb+1 >= fbuflen-4;\nloop invariant i111: fb >= fbuflen-1 ==> fb+1 >= fbuflen-5;\nloop invariant i112: fb >= fbuflen-1 ==> fb+1 >= fbuflen-6;\nloop invariant i113: fb >= fbuflen-1 ==> fb+1 >= fbuflen-7;\nloop invariant i114: fb >= fbuflen-1 ==> fb+1 >= fbuflen-8;\nloop invariant i115: fb >= fbuflen-1 ==> fb+1 >= fbuflen-9;\nloop invariant i116: fb >= fbuflen-1 ==> fb+1 >= fbuflen-10;\nloop invariant i117: fb >= fbuflen-1 ==> fb+1 >= fbuflen-11;\nloop invariant i118: fb >= fbuflen-1 ==> fb+1 >= fbuflen-12;\nloop invariant i119: fb >= fbuflen-1 ==> fb+1 >= fbuflen-13;\nloop invariant i120: fb >= fbuflen-1 ==> fb+1 >= fbuflen-14;\nloop invariant i121: fb >= fbuflen-1 ==> fb+1 >= fbuflen-15;\nloop invariant i122: fb >= fbuflen-1 ==> fb+1 >= fbuflen-16;\nloop invariant i123: fb >= fbuflen-1 ==> fb+1 >= fbuflen-17;\nloop invariant i124: fb >= fbuflen-1 ==> fb+1 >= fbuflen-18;\nloop invariant i125: fb >= fbuflen-1 ==> fb+1 >= fbuflen-19;\nloop invariant i126: fb >= fbuflen-1 ==> fb+1 >= fbuflen-20;\nloop invariant i127: fb >= fbuflen-1 ==> fb+1 >= fbuflen-21;\nloop invariant i128: fb >= fbuflen-1 ==> fb+1 >= fbuflen-22;\nloop invariant i129: fb >= fbuflen-1 ==> fb+1 >= fbuflen-23;\nloop invariant i130: fb >= fbuflen-1 ==> fb+1 >= fbuflen-24;\nloop invariant i131: fb >= fbuflen-1 ==> fb+1 >= fbuflen-25;\nloop invariant i132: fb >= fbuflen-1 ==> fb+1 >= fbuflen-26;\nloop invariant i133: fb >= fbuflen-1 ==> fb+1 >= fbuflen-27;\nloop invariant i134: fb >= fbuflen-1 ==> fb+1 >= fbuflen-28;\nloop invariant i135: fb >= fbuflen-1 ==> fb+1 >= fbuflen-29;\nloop invariant i136: fb >= fbuflen-1 ==> fb+1 >= fbuflen-30;\nloop invariant i137: fb >= fbuflen-1 ==> fb+1 >= fbuflen-31;\nloop invariant i138: fb >= fbuflen-1 ==> fb+1 >= fbuflen-32;\nloop invariant i139: fb >= fbuflen-1 ==> fb+1 >= fbuflen-33;\nloop invariant i140: fb >= fbuflen-1 ==> fb+1 >= fbuflen-34;\nloop invariant i141: fb >= fbuflen-1 ==> fb+1 >= fbuflen-35;\nloop invariant i142: fb >= fbuflen-1 ==> fb+1 >= fbuflen-36;\nloop invariant i143: fb >= fbuflen-1 ==> fb+1 >= fbuflen-37;\nloop invariant i144: fb >= fbuflen-1 ==> fb+1 >= fbuflen-38;\nloop invariant i145: fb >= fbuflen-1 ==> fb+1 >= fbuflen-39;\nloop invariant i146: fb >= fbuflen-1 ==> fb+1 >= fbuflen-40;\nloop invariant i147: fb >= fbuflen-1 ==> fb+1 >= fbuflen-41;\nloop invariant i148: fb >= fbuflen-1 ==> fb+1 >= fbuflen-42;\nloop invariant i149: fb >= fbuflen-1 ==> fb+1 >= fbuflen-43;\nloop invariant i150: fb >= fbuflen-1 ==> fb+1 >= fbuflen-44;\nloop invariant i151: 0 <= fb + 1;\n\nloop invariant i153: 0 <= fb + 2;\n\nloop invariant i155: 0 <= fb + 3;\n\nloop invariant i157: 0 <= fb + 4;\n\n\n\n\n\n\nloop invariant i164: 0 <= fb < fbuflen;\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown())\n  {\n    \n    if (unknown())\n      break;\n\n    if (unknown())\n      break;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n\n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n    fb++;\n    if (fb >= fbuflen-1)\n      fb = 0;\n  }\n\n  if (fb > 0)\n  {\n    \n    {;\n//@ assert(0<=fb);\n}\n\n    {;\n//@ assert(fb<fbuflen);\n}\n\n  }\n\n END:  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c"
        ],
        "skipped": [],
        "total": 35,
        "success_count": 32,
        "failure_count": 3,
        "success_rate": 0.9142857142857143
    }
}