{
    "logs": {
        "file": "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/sum03_true.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#define a (2)\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  while(1){\n    sn = sn + a;\n    x++;\n    {;\n//@ assert(sn==x*a || sn == 0);\n}\n\n  }\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= sn <= (loop1 + 1) * a;\nloop invariant loop1 <= x <= (loop1 + 1);\nloop invariant x <= n1;\nloop invariant x >= 0;\nloop invariant a >= 0;\nloop invariant loop1 >= 0;\nloop invariant n1 >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= loop1;\nloop invariant sn == x*a || sn == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= loop1;\nloop invariant 0 <= sn <= x*a;\nloop invariant n1 = 0 ==> sn == 0;\n*/\n```",
            "```\n/*@\nloop invariant n1 <= loop1;\nloop invariant sn >= loop1 * a;\nloop invariant sn <= (loop1 + 1) * a;\nloop invariant x >= loop1;\nloop invariant x <= loop1 + 1;\nloop invariant sn == x * a;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= sn <= x*a;\nloop invariant sn + a == x*a || sn == 0;\nloop invariant x >= 0;\nloop invariant loop1 >= 0 && loop1 < n1;\nloop invariant sn + a > sn;\nloop invariant x + 1 > x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= loop1;\nloop invariant sn == x*a;\nloop invariant x <= n1;\nloop invariant sn == 0 ==> x == 0;\n*/\n```",
            "```\n/*@\nloop invariant sn + a * x = sn + x * a;\nloop invariant sn >= 0;\nloop invariant sn <= n1 * a;\nloop invariant x >= 0;\nloop invariant x <= loop1;\nloop invariant sn >= x * a - loop1 * a;\nloop invariant sn <= x * a + loop1 * a;\nloop invariant sn == 0 ==> x == 0;\nloop invariant sn == x * a ==> x >= 1 && x <= n1;\nloop invariant sn == x * a ==> sn >= 0 && sn <= n1 * a;\nloop invariant sn != 0 ==> x >= 1 && x <= loop1;\nloop invariant sn != x * a ==> sn >= x * a - loop1 * a && sn <= x * a + loop1 * a;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= loop1;\nloop invariant 0 <= sn <= x*a;\nloop invariant sn == x*a || sn == 0 ==> 1 <= x <= loop1;\nloop invariant sn == x*a || sn == 0 ==> 0 <= sn <= x*a;\nloop invariant sn == x*a || sn == 0 ==> sn <= x*a;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= sn <= 2 * x; loop invariant x >= 0; loop invariant sn == x * a || sn == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= sn;\nloop invariant sn <= x * 2;\nloop invariant x <= loop1;\nloop invariant sn == x * 2 ==> (sn == 0 || sn == x * 2);\nloop invariant x == loop1 ==> sn == 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= loop1;\nloop invariant n1 <= loop1;\nloop invariant sn == x * a;\nloop invariant x == n1 + loop1;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == (n1 + loop1) * a;\nloop invariant x == (n1 + loop1) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == ((n1 + loop1) + a) * a;\nloop invariant x == ((n1 + loop1) + a) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == (((n1 + loop1) + a) + a) * a;\nloop invariant x == (((n1 + loop1) + a) + a) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == ((((n1 + loop1) + a) + a) + a) * a;\nloop invariant x == ((((n1 + loop1) + a) + a) + a) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == (((((n1 + loop1) + a) + a) + a) + a) * a;\nloop invariant x == (((((n1 + loop1) + a) + a) + a) + a) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == ((((((n1 + loop1) + a) + a) + a) + a) + a) * a;\nloop invariant x == ((((((n1 + loop1) + a) + a) + a) + a) + a) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == (((((((n1 + loop1) + a) + a) + a) + a) + a) + a) * a;\nloop invariant x == (((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == ((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) * a;\nloop invariant x == ((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == (((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) * a;\nloop invariant x == (((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == ((((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) + a) * a;\nloop invariant x == ((((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == (((((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a) * a;\nloop invariant x == (((((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == ((((((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a) * a;\nloop invariant x == ((((((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a;\nloop invariant loop1 <= unknown_uint();\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= n1;\nloop invariant sn >= x * a;\nloop invariant sn <= (n1 + 1) * a;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= loop1;\nloop invariant 0 <= sn <= x*a;\nloop invariant sn + a == x*a || sn == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= sn;\nloop invariant 0 <= a;\nloop invariant 0 <= x;\nloop invariant x <= sn/a;\nloop invariant x*a == sn || x*a == 0;\nloop invariant x >= 1;\nloop invariant x < sn/a + 1;\n*/\n```",
            "```\n/*@\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= a*x && sn == x*a || sn == 0);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x >= 0 && x <= sn/a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= x*a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x == 0 || (x >= 2 && x == (sn/a)));\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x >= 0 && x <= sn/a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= x*a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x == 0 || (x >= 2 && x == (sn/a)));\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x >= 0 && x <= sn/a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= x*a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x == 0 || (x >= 2 && x == (sn/a)));\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x >= 0 && x <= sn/a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= x*a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x == 0 || (x >= 2 && x == (sn/a)));\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x >= 0 && x <= sn/a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= x*a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x == 0 || (x >= 2 && x == (sn/a)));\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x >= 0 && x <= sn/a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= x*a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x == 0 || (x >= 2 && x == (sn/a)));\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x >= 0 && x <= sn/a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= x*a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x == 0 || (x >= 2 && x == (sn/a)));\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x >= 0 && x <= sn/a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= x*a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x == 0 || (x >= 2 && x == (sn/a)));\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x >= 0 && x <= sn/a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= x*a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x == 0 || (x >= 2 && x == (sn/a)));\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= sn <= (loop1 + 1) * a;\nloop invariant loop1 <= x <= (loop1 + 1);\nloop invariant x <= n1;\nloop invariant x >= 0;\nloop invariant a >= 0;\nloop invariant loop1 >= 0;\nloop invariant n1 >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#define a (2)\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\n\n\nloop invariant i4: x >= 0;\nloop invariant i5: a >= 0;\nloop invariant i6: loop1 >= 0;\nloop invariant i7: n1 >= 0;\n*/\nwhile(1){\n    sn = sn + a;\n    x++;\n    {;\n//@ assert(sn==x*a || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= loop1;\nloop invariant sn == x*a || sn == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#define a (2)\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\nloop invariant i2: sn == x*a || sn == 0;\n*/\nwhile(1){\n    sn = sn + a;\n    x++;\n    {;\n//@ assert(sn==x*a || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= loop1;\nloop invariant 0 <= sn <= x*a;\nloop invariant n1 = 0 ==> sn == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#define a (2)\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\nloop invariant i2: 0 <= sn <= x*a;\n\n*/\nwhile(1){\n    sn = sn + a;\n    x++;\n    {;\n//@ assert(sn==x*a || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant n1 <= loop1;\nloop invariant sn >= loop1 * a;\nloop invariant sn <= (loop1 + 1) * a;\nloop invariant x >= loop1;\nloop invariant x <= loop1 + 1;\nloop invariant sn == x * a;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#define a (2)\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\n\n\n\n\nloop invariant i6: sn == x * a;\n*/\nwhile(1){\n    sn = sn + a;\n    x++;\n    {;\n//@ assert(sn==x*a || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= sn <= x*a;\nloop invariant sn + a == x*a || sn == 0;\nloop invariant x >= 0;\nloop invariant loop1 >= 0 && loop1 < n1;\nloop invariant sn + a > sn;\nloop invariant x + 1 > x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#define a (2)\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: 0 <= sn <= x*a;\n\nloop invariant i3: x >= 0;\n\nloop invariant i5: sn + a > sn;\nloop invariant i6: x + 1 > x;\n*/\nwhile(1){\n    sn = sn + a;\n    x++;\n    {;\n//@ assert(sn==x*a || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= loop1;\nloop invariant sn == x*a;\nloop invariant x <= n1;\nloop invariant sn == 0 ==> x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#define a (2)\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\nloop invariant i2: sn == x*a;\n\nloop invariant i4: sn == 0 ==> x == 0;\n*/\nwhile(1){\n    sn = sn + a;\n    x++;\n    {;\n//@ assert(sn==x*a || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant sn + a * x = sn + x * a;\nloop invariant sn >= 0;\nloop invariant sn <= n1 * a;\nloop invariant x >= 0;\nloop invariant x <= loop1;\nloop invariant sn >= x * a - loop1 * a;\nloop invariant sn <= x * a + loop1 * a;\nloop invariant sn == 0 ==> x == 0;\nloop invariant sn == x * a ==> x >= 1 && x <= n1;\nloop invariant sn == x * a ==> sn >= 0 && sn <= n1 * a;\nloop invariant sn != 0 ==> x >= 1 && x <= loop1;\nloop invariant sn != x * a ==> sn >= x * a - loop1 * a && sn <= x * a + loop1 * a;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#define a (2)\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\nloop invariant i2: sn >= 0;\n\nloop invariant i4: x >= 0;\n\nloop invariant i6: sn >= x * a - loop1 * a;\nloop invariant i7: sn <= x * a + loop1 * a;\nloop invariant i8: sn == 0 ==> x == 0;\n\n\n\nloop invariant i12: sn != x * a ==> sn >= x * a - loop1 * a && sn <= x * a + loop1 * a;\n*/\nwhile(1){\n    sn = sn + a;\n    x++;\n    {;\n//@ assert(sn==x*a || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= loop1;\nloop invariant 0 <= sn <= x*a;\nloop invariant sn == x*a || sn == 0 ==> 1 <= x <= loop1;\nloop invariant sn == x*a || sn == 0 ==> 0 <= sn <= x*a;\nloop invariant sn == x*a || sn == 0 ==> sn <= x*a;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#define a (2)\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\nloop invariant i2: 0 <= sn <= x*a;\n\nloop invariant i4: sn == x*a || sn == 0 ==> 0 <= sn <= x*a;\nloop invariant i5: sn == x*a || sn == 0 ==> sn <= x*a;\n*/\nwhile(1){\n    sn = sn + a;\n    x++;\n    {;\n//@ assert(sn==x*a || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= sn <= 2 * x; loop invariant x >= 0; loop invariant sn == x * a || sn == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#define a (2)\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: 0 <= sn <= 2 * x; loop invariant x >= 0; loop invariant sn == x * a || sn == 0;\n*/\nwhile(1){\n    sn = sn + a;\n    x++;\n    {;\n//@ assert(sn==x*a || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= sn;\nloop invariant sn <= x * 2;\nloop invariant x <= loop1;\nloop invariant sn == x * 2 ==> (sn == 0 || sn == x * 2);\nloop invariant x == loop1 ==> sn == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#define a (2)\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: 0 <= sn;\nloop invariant i2: sn <= x * 2;\n\nloop invariant i4: sn == x * 2 ==> (sn == 0 || sn == x * 2);\n\n*/\nwhile(1){\n    sn = sn + a;\n    x++;\n    {;\n//@ assert(sn==x*a || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 16,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= loop1;\nloop invariant n1 <= loop1;\nloop invariant sn == x * a;\nloop invariant x == n1 + loop1;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == (n1 + loop1) * a;\nloop invariant x == (n1 + loop1) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == ((n1 + loop1) + a) * a;\nloop invariant x == ((n1 + loop1) + a) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == (((n1 + loop1) + a) + a) * a;\nloop invariant x == (((n1 + loop1) + a) + a) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == ((((n1 + loop1) + a) + a) + a) * a;\nloop invariant x == ((((n1 + loop1) + a) + a) + a) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == (((((n1 + loop1) + a) + a) + a) + a) * a;\nloop invariant x == (((((n1 + loop1) + a) + a) + a) + a) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == ((((((n1 + loop1) + a) + a) + a) + a) + a) * a;\nloop invariant x == ((((((n1 + loop1) + a) + a) + a) + a) + a) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == (((((((n1 + loop1) + a) + a) + a) + a) + a) + a) * a;\nloop invariant x == (((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == ((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) * a;\nloop invariant x == ((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == (((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) * a;\nloop invariant x == (((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == ((((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) + a) * a;\nloop invariant x == ((((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == (((((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a) * a;\nloop invariant x == (((((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a;\nloop invariant loop1 <= unknown_uint();\nloop invariant n1 <= unknown_uint();\nloop invariant sn == ((((((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a) * a;\nloop invariant x == ((((((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a;\nloop invariant loop1 <= unknown_uint();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#define a (2)\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\n\nloop invariant i3: sn == x * a;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(1){\n    sn = sn + a;\n    x++;\n    {;\n//@ assert(sn==x*a || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= n1;\nloop invariant sn >= x * a;\nloop invariant sn <= (n1 + 1) * a;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#define a (2)\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\nloop invariant i2: sn >= x * a;\n\n*/\nwhile(1){\n    sn = sn + a;\n    x++;\n    {;\n//@ assert(sn==x*a || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= loop1;\nloop invariant 0 <= sn <= x*a;\nloop invariant sn + a == x*a || sn == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#define a (2)\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\nloop invariant i2: 0 <= sn <= x*a;\n\n*/\nwhile(1){\n    sn = sn + a;\n    x++;\n    {;\n//@ assert(sn==x*a || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= sn;\nloop invariant 0 <= a;\nloop invariant 0 <= x;\nloop invariant x <= sn/a;\nloop invariant x*a == sn || x*a == 0;\nloop invariant x >= 1;\nloop invariant x < sn/a + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#define a (2)\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: 0 <= sn;\nloop invariant i2: 0 <= a;\nloop invariant i3: 0 <= x;\nloop invariant i4: x <= sn/a;\nloop invariant i5: x*a == sn || x*a == 0;\n\nloop invariant i7: x < sn/a + 1;\n*/\nwhile(1){\n    sn = sn + a;\n    x++;\n    {;\n//@ assert(sn==x*a || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= a*x && sn == x*a || sn == 0);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x >= 0 && x <= sn/a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= x*a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x == 0 || (x >= 2 && x == (sn/a)));\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x >= 0 && x <= sn/a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= x*a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x == 0 || (x >= 2 && x == (sn/a)));\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x >= 0 && x <= sn/a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= x*a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x == 0 || (x >= 2 && x == (sn/a)));\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x >= 0 && x <= sn/a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= x*a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x == 0 || (x >= 2 && x == (sn/a)));\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x >= 0 && x <= sn/a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= x*a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x == 0 || (x >= 2 && x == (sn/a)));\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x >= 0 && x <= sn/a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= x*a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x == 0 || (x >= 2 && x == (sn/a)));\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x >= 0 && x <= sn/a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= x*a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x == 0 || (x >= 2 && x == (sn/a)));\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x >= 0 && x <= sn/a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= x*a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x == 0 || (x >= 2 && x == (sn/a)));\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x >= 0 && x <= sn/a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= x*a);\nloop invariant ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x == 0 || (x >= 2 && x == (sn/a)));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#define a (2)\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= a*x && sn == x*a || sn == 0);\nloop invariant i2: ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x >= 0 && x <= sn/a);\nloop invariant i3: ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= x*a);\nloop invariant i4: ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x == 0 || (x >= 2 && x == (sn/a)));\n*/\nwhile(1){\n    sn = sn + a;\n    x++;\n    {;\n//@ assert(sn==x*a || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 27: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#define a (2)\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: 0 <= sn <= (loop1 + 1) * a;\nloop invariant i2: loop1 <= x <= (loop1 + 1);\nloop invariant i3: x <= n1;\nloop invariant i4: x >= 0;\nloop invariant i5: a >= 0;\nloop invariant i6: loop1 >= 0;\nloop invariant i7: n1 >= 0;\nloop invariant i8: 0 <= x <= loop1;\nloop invariant i9: sn == x*a || sn == 0;\nloop invariant i10: 0 <= sn <= x*a;\nloop invariant i11: n1 = 0 ==> sn == 0;\nloop invariant i12: n1 <= loop1;\nloop invariant i13: sn >= loop1 * a;\nloop invariant i14: sn <= (loop1 + 1) * a;\nloop invariant i15: x >= loop1;\nloop invariant i16: x <= loop1 + 1;\nloop invariant i17: sn == x * a;\nloop invariant i18: sn + a == x*a || sn == 0;\nloop invariant i19: loop1 >= 0 && loop1 < n1;\nloop invariant i20: sn + a > sn;\nloop invariant i21: x + 1 > x;\nloop invariant i22: sn == x*a;\nloop invariant i23: sn == 0 ==> x == 0;\nloop invariant i24: sn + a * x = sn + x * a;\nloop invariant i25: sn >= 0;\nloop invariant i26: sn <= n1 * a;\nloop invariant i27: x <= loop1;\nloop invariant i28: sn >= x * a - loop1 * a;\nloop invariant i29: sn <= x * a + loop1 * a;\nloop invariant i30: sn == x * a ==> x >= 1 && x <= n1;\nloop invariant i31: sn == x * a ==> sn >= 0 && sn <= n1 * a;\nloop invariant i32: sn != 0 ==> x >= 1 && x <= loop1;\nloop invariant i33: sn != x * a ==> sn >= x * a - loop1 * a && sn <= x * a + loop1 * a;\nloop invariant i34: 1 <= x <= loop1;\nloop invariant i35: sn == x*a || sn == 0 ==> 1 <= x <= loop1;\nloop invariant i36: sn == x*a || sn == 0 ==> 0 <= sn <= x*a;\nloop invariant i37: sn == x*a || sn == 0 ==> sn <= x*a;\nloop invariant i38: 0 <= sn <= 2 * x; loop invariant x >= 0; loop invariant sn == x * a || sn == 0;\nloop invariant i39: 0 <= sn;\nloop invariant i40: sn <= x * 2;\nloop invariant i41: sn == x * 2 ==> (sn == 0 || sn == x * 2);\nloop invariant i42: x == loop1 ==> sn == 0;\nloop invariant i43: x == n1 + loop1;\nloop invariant i44: loop1 <= unknown_uint();\nloop invariant i45: n1 <= unknown_uint();\nloop invariant i46: sn == (n1 + loop1) * a;\nloop invariant i47: x == (n1 + loop1) + a;\nloop invariant i48: sn == ((n1 + loop1) + a) * a;\nloop invariant i49: x == ((n1 + loop1) + a) + a;\nloop invariant i50: sn == (((n1 + loop1) + a) + a) * a;\nloop invariant i51: x == (((n1 + loop1) + a) + a) + a;\nloop invariant i52: sn == ((((n1 + loop1) + a) + a) + a) * a;\nloop invariant i53: x == ((((n1 + loop1) + a) + a) + a) + a;\nloop invariant i54: sn == (((((n1 + loop1) + a) + a) + a) + a) * a;\nloop invariant i55: x == (((((n1 + loop1) + a) + a) + a) + a) + a;\nloop invariant i56: sn == ((((((n1 + loop1) + a) + a) + a) + a) + a) * a;\nloop invariant i57: x == ((((((n1 + loop1) + a) + a) + a) + a) + a) + a;\nloop invariant i58: sn == (((((((n1 + loop1) + a) + a) + a) + a) + a) + a) * a;\nloop invariant i59: x == (((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a;\nloop invariant i60: sn == ((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) * a;\nloop invariant i61: x == ((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a;\nloop invariant i62: sn == (((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) * a;\nloop invariant i63: x == (((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) + a;\nloop invariant i64: sn == ((((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) + a) * a;\nloop invariant i65: x == ((((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a;\nloop invariant i66: sn == (((((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a) * a;\nloop invariant i67: x == (((((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a;\nloop invariant i68: sn == ((((((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a) * a;\nloop invariant i69: x == ((((((((((((n1 + loop1) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a) + a;\nloop invariant i70: 1 <= x <= n1;\nloop invariant i71: sn >= x * a;\nloop invariant i72: sn <= (n1 + 1) * a;\nloop invariant i73: 0 <= a;\nloop invariant i74: 0 <= x;\nloop invariant i75: x <= sn/a;\nloop invariant i76: x*a == sn || x*a == 0;\nloop invariant i77: x >= 1;\nloop invariant i78: x < sn/a + 1;\nloop invariant i79: ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= a*x && sn == x*a || sn == 0);\nloop invariant i80: ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x >= 0 && x <= sn/a);\nloop invariant i81: ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= x*a);\nloop invariant i82: ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x == 0 || (x >= 2 && x == (sn/a)));\n*/\nwhile(1){\n    sn = sn + a;\n    x++;\n    {;\n//@ assert(sn==x*a || sn == 0);\n}\n\n  }\n}",
        "combined_annotation_num_solver_calls": 40,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#define a (2)\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\n\n\nloop invariant i4: x >= 0;\nloop invariant i5: a >= 0;\nloop invariant i6: loop1 >= 0;\nloop invariant i7: n1 >= 0;\n\nloop invariant i9: sn == x*a || sn == 0;\nloop invariant i10: 0 <= sn <= x*a;\n\n\n\n\n\n\nloop invariant i17: sn == x * a;\n\n\nloop invariant i20: sn + a > sn;\nloop invariant i21: x + 1 > x;\nloop invariant i22: sn == x*a;\nloop invariant i23: sn == 0 ==> x == 0;\n\nloop invariant i25: sn >= 0;\n\n\nloop invariant i28: sn >= x * a - loop1 * a;\nloop invariant i29: sn <= x * a + loop1 * a;\n\n\n\nloop invariant i33: sn != x * a ==> sn >= x * a - loop1 * a && sn <= x * a + loop1 * a;\n\n\nloop invariant i36: sn == x*a || sn == 0 ==> 0 <= sn <= x*a;\nloop invariant i37: sn == x*a || sn == 0 ==> sn <= x*a;\nloop invariant i38: 0 <= sn <= 2 * x; loop invariant x >= 0; loop invariant sn == x * a || sn == 0;\nloop invariant i39: 0 <= sn;\nloop invariant i40: sn <= x * 2;\nloop invariant i41: sn == x * 2 ==> (sn == 0 || sn == x * 2);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i71: sn >= x * a;\n\nloop invariant i73: 0 <= a;\nloop invariant i74: 0 <= x;\nloop invariant i75: x <= sn/a;\nloop invariant i76: x*a == sn || x*a == 0;\n\nloop invariant i78: x < sn/a + 1;\nloop invariant i79: ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= a*x && sn == x*a || sn == 0);\nloop invariant i80: ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x >= 0 && x <= sn/a);\nloop invariant i81: ( x == 0 || (x >= 2 && x == (sn/a))) ==> (sn >= 0 && sn <= x*a);\nloop invariant i82: ( x == 0 || (x >= 2 && x == (sn/a))) ==> (x == 0 || (x >= 2 && x == (sn/a)));\n*/\nwhile(1){\n    sn = sn + a;\n    x++;\n    {;\n//@ assert(sn==x*a || sn == 0);\n}\n\n  }\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/popl.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/05.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/07.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/37.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/39.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv_simp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/xy10.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/const_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe3.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe4.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbr.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbrprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bk-nat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bkley.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/efm.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/ex1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnatprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifo.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/seesaw.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/ken-imp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/rajamani_1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/simple.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/simple_if.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/up-nested.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/count_up_down_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/for_infinite_loop_1_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/for_infinite_loop_2_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/sum03_true.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/pldi082_unbounded.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_unsafe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/sum01_true.c"
        ],
        "skipped": [],
        "total": 177,
        "success_count": 149,
        "failure_count": 28,
        "success_rate": 0.8418079096045198
    }
}