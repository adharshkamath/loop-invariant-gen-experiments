{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int x, y;\n\n  y = 0;\n  x = 1;\n  while ( unknown() < 10) {\n    if (x<2) {\n      x=2;\n    } else {\n      x=1;\n    }\n    if (y<1) {\n      y=0;\n    }\n  }\n  {;\n//@ assert(!( x > 2 ));\n}\n\nreturn;\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant y >= 0;\nloop invariant y < 1;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant unknown() >= 0;\nloop invariant unknown() < 10;\n*/\n```",
            "```\n/*@\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant y <= 1;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() >= 10;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 2;\nloop invariant 0 <= y <= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y < 10;\nloop invariant x == 1;\nloop invariant x == 2 ==> y >= 0;\nloop invariant x == 1 ==> y >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y < 10;\nloop invariant x = 2 ==> y >= 1;\nloop invariant x = 1 ==> y < 1;\nloop invariant x = 2 ==> x > 2;\nloop invariant x = 1 ==> x <= 2;\nloop invariant x = 2 ==> x >= 2;\nloop invariant x = 1 ==> x < 2;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant x = 2 ==> y >= 1;\nloop invariant x = 1 ==> y < 1;\nloop invariant x = 2 ==> x > 2;\nloop invariant x = 1 ==> x <= 2;\nloop invariant x = 2 ==> x >= 2;\nloop invariant x = 1 ==> x < 2;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant x = 2 ==> y >= 1;\nloop invariant x = 1 ==> y < 1;\nloop invariant x = 2 ==> x > 2;\nloop invariant x = 1 ==> x <= 2;\nloop invariant x = 2 ==> x >= 2;\nloop invariant x = 1 ==> x < 2;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant x = 2 ==> y >= 1;\nloop invariant x = 1 ==> y < 1;\nloop invariant x = 2 ==> x > 2;\nloop invariant x = 1 ==> x <= 2;\nloop invariant x = 2 ==> x >= 2;\nloop invariant x = 1 ==> x < 2;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant x = 2 ==> y >= 1;\nloop invariant x = 1 ==> y < 1;\nloop invariant x = 2 ==> x > 2;\nloop invariant x = 1 ==> x <= 2;\nloop invariant x = 2 ==> x >= 2;\nloop invariant x = 1 ==> x < 2;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant x = 2 ==> y >= 1;\nloop invariant x = 1 ==> y < 1;\nloop invariant x = 2 ==> x > 2;\nloop invariant x = 1 ==> x <= 2;\nloop invariant x = 2 ==> x >= 2;\nloop invariant x = 1 ==> x < 2;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant x = 2 ==> y >= 1;\nloop invariant x = 1 ==> y < 1;\nloop invariant x = 2 ==> x > 2;\nloop invariant x = 1 ==> x <= 2;\nloop invariant x = 2 ==> x >= 2;\nloop invariant x = 1 ==> x < 2;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant x = 2 ==> y >= 1;\nloop invariant x = 1 ==> y < 1;\nloop invariant x = 2 ==> x > 2;\nloop invariant x = 1 ==> x <= 2;\nloop invariant x = 2 ==> x >= 2;\nloop invariant x = 1 ==> x < 2;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant x = 2 ==> y >= 1;\nloop invariant x = 1 ==> y < 1;\nloop invariant x = 2 ==> x > 2;\nloop invariant x = 1 ==> x <= 2;\nloop invariant x = 2 ==> x >= 2;\nloop invariant x = 1 ==> x < 2;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant x = 2 ==> y >= 1;\nloop invariant x = 1 ==> y < 1;\nloop invariant x = 2 ==> x > 2;\nloop invariant x = 1 ==> x <= 2;\nloop invariant x = 2 ==> x >= 2;\nloop invariant x = 1 ==> x < 2;\nloop invariant x >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= unknown() <= 10;\nloop invariant 1 <= x <= 2;\nloop invariant 0 <= y <= 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant 1 <= unknown() <= 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y < 10;\nloop invariant 2 <= x <= 2;\nloop invariant x > 1 ==> y >= 1;\nloop invariant x <= 1 ==> y < 1;\nloop invariant x > 1 ==> y == 1;\nloop invariant x <= 1 ==> y == 0;\nloop invariant x <= 1 ==> y < 1;\nloop invariant x > 1 ==> y >= 1;\nloop invariant x > 1 ==> y <= 10;\nloop invariant x <= 1 ==> y >= 0;\nloop invariant x <= 1 ==> y <= 10;\nloop invariant x > 1 ==> y >= 0;\nloop invariant x > 1 ==> y <= 10;\nloop invariant x > 1 ==> y > 0;\nloop invariant x > 1 ==> y < 10;\nloop invariant x > 1 ==> y >= 1;\nloop invariant x > 1 ==> y <= 9;\nloop invariant x > 1 ==> y > 1;\nloop invariant x > 1 ==> y < 9;\nloop invariant x > 1 ==> y >= 2;\nloop invariant x > 1 ==> y <= 8;\nloop invariant x > 1 ==> y > 2;\nloop invariant x > 1 ==> y < 8;\nloop invariant x > 1 ==> y >= 3;\nloop invariant x > 1 ==> y <= 7;\nloop invariant x > 1 ==> y > 3;\nloop invariant x > 1 ==> y < 7;\nloop invariant x > 1 ==> y >= 4;\nloop invariant x > 1 ==> y <= 6;\nloop invariant x > 1 ==> y > 4;\nloop invariant x > 1 ==> y < 6;\nloop invariant x > 1 ==> y >= 5;\nloop invariant x > 1 ==> y <= 5;\nloop invariant x > 1 ==> y > 5;\nloop invariant x > 1 ==> y < 5;\nloop invariant x > 1 ==> y > 6;\nloop invariant x > 1 ==> y < 4;\nloop invariant x > 1 ==> y > 7;\nloop invariant x > 1 ==> y < 3;\nloop invariant x > 1 ==> y > 8;\nloop invariant x > 1 ==> y < 2;\nloop invariant x > 1 ==> y > 9;\nloop invariant x > 1 ==> y < 1;\nloop invariant x > 1 ==> y >= 10;\nloop invariant x > 1 ==> y <= 9;\nloop invariant x > 1 ==> y > 10;\nloop invariant x > 1 ==> y < 10;\nloop invariant x > 1 ==> y >= 11;\nloop invariant x > 1 ==> y <= 10;\nloop invariant x > 1 ==> y > 11;\nloop invariant x > 1 ==> y < 11;\nloop invariant x > 1 ==> y >= 12;\nloop invariant x > 1 ==> y <= 11;\nloop invariant x > 1 ==> y > 12;\nloop invariant x > 1 ==> y < 12;\nloop invariant x > 1 ==> y >= 13;\nloop invariant x > 1 ==> y <= 12;\nloop invariant x > 1 ==> y > 13;\nloop invariant x > 1 ==> y < 13;\nloop invariant x > 1 ==> y >= 14;\nloop invariant x > 1 ==> y <= 13;\nloop invariant x > 1 ==> y > 14;\nloop invariant x > 1 ==> y < 14;\nloop invariant x > 1 ==> y >= 15;\nloop invariant x > 1 ==> y <= 14;\nloop invariant x > 1 ==> y > 15;\nloop invariant x > 1 ==> y < 15;\nloop invariant x > 1 ==> y >= 16;\nloop invariant x > 1 ==> y <= 15;\nloop invariant x > 1 ==> y > 16;\nloop invariant x > 1 ==> y < 16;\nloop invariant x > 1 ==> y >= 17;\nloop invariant x > 1 ==> y <= 16;\nloop invariant x > 1 ==> y > 17;\nloop invariant x > 1 ==> y < 17;\nloop invariant x > 1 ==> y >= 18;\nloop invariant x > 1 ==> y <= 17;\nloop invariant x > 1 ==> y > 18;\nloop invariant x > 1 ==> y < 18;\nloop invariant x > 1 ==> y >= 19;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 2;\nloop invariant 0 <= y <= 1;\nloop invariant unknown() < 10 ==> (x == 1 || x == 2);\nloop invariant unknown() < 10 ==> (y == 0 || y == 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 2;\nloop invariant y == 0;\nloop invariant x > y;\nloop invariant y < 10;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 2;\nloop invariant 0 <= y <= 1;\nloop invariant (unknown() >= 10) ==> (x == 1);\nloop invariant (unknown() < 10) ==> (x >= 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 10;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant unknown() >= 0;\nloop invariant unknown() < 10;\nloop invariant if (unknown() < 10) ==> (x == 2);\nloop invariant if (unknown() < 10) ==> (y == 0);\nloop invariant if (unknown() == 10) ==> (x == 1);\nloop invariant if (unknown() == 10) ==> (y == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y;\nloop invariant y < 10;\nloop invariant 1 <= x;\nloop invariant x <= 2;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x == 1 || (x == 2 && y < 10);\nloop invariant x == 1 || (x == 2 && y < 10);\nloop invariant x == 1 || (x == 2 && y < 10);\nloop invariant x == 1 || (x == 2 && y < 10);\nloop invariant x == 1 || (x == 2 && y < 10);\nloop invariant x == 1 || (x == 2 && y < 10);\nloop invariant x == 1 || (x == 2 && y < 10);\nloop invariant x == 1 || (x == 2 && y < 10);\nloop invariant x == 1 || (x == 2 && y < 10);\nloop invariant x == 1 || (x == 2 && y < 10);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y < 10;\nloop invariant x = 1 ==> x >= 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 1;\nloop invariant x == 1;\nloop invariant x == 2;\nloop invariant x <= 2;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant y >= 0;\nloop invariant y < 1;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant unknown() >= 0;\nloop invariant unknown() < 10;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int x, y;\n\n  y = 0;\n  x = 1;\n  /*@\nloop invariant i1: y >= 0;\nloop invariant i2: y < 1;\nloop invariant i3: x >= 1;\nloop invariant i4: x <= 2;\n\n\n*/\nwhile ( unknown() < 10) {\n    if (x<2) {\n      x=2;\n    } else {\n      x=1;\n    }\n    if (y<1) {\n      y=0;\n    }\n  }\n  {;\n//@ assert(!( x > 2 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant y >= 0;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant y <= 1;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() >= 10;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int x, y;\n\n  y = 0;\n  x = 1;\n  /*@\nloop invariant i1: y >= 0;\nloop invariant i2: x >= 1;\nloop invariant i3: x <= 2;\nloop invariant i4: y <= 1;\nloop invariant i5: x == 1 || x == 2;\nloop invariant i6: y == 0 || y == 1;\n\n*/\nwhile ( unknown() < 10) {\n    if (x<2) {\n      x=2;\n    } else {\n      x=1;\n    }\n    if (y<1) {\n      y=0;\n    }\n  }\n  {;\n//@ assert(!( x > 2 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int x, y;\n\n  y = 0;\n  x = 1;\n  /*@\n\n*/\nwhile ( unknown() < 10) {\n    if (x<2) {\n      x=2;\n    } else {\n      x=1;\n    }\n    if (y<1) {\n      y=0;\n    }\n  }\n  {;\n//@ assert(!( x > 2 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2;\nloop invariant 0 <= y <= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int x, y;\n\n  y = 0;\n  x = 1;\n  /*@\nloop invariant i1: 0 <= x <= 2;\nloop invariant i2: 0 <= y <= 1;\n*/\nwhile ( unknown() < 10) {\n    if (x<2) {\n      x=2;\n    } else {\n      x=1;\n    }\n    if (y<1) {\n      y=0;\n    }\n  }\n  {;\n//@ assert(!( x > 2 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y < 10;\nloop invariant x == 1;\nloop invariant x == 2 ==> y >= 0;\nloop invariant x == 1 ==> y >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int x, y;\n\n  y = 0;\n  x = 1;\n  /*@\nloop invariant i1: 0 <= y < 10;\n\nloop invariant i3: x == 2 ==> y >= 0;\n\n*/\nwhile ( unknown() < 10) {\n    if (x<2) {\n      x=2;\n    } else {\n      x=1;\n    }\n    if (y<1) {\n      y=0;\n    }\n  }\n  {;\n//@ assert(!( x > 2 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= y < 10;\nloop invariant x = 2 ==> y >= 1;\nloop invariant x = 1 ==> y < 1;\nloop invariant x = 2 ==> x > 2;\nloop invariant x = 1 ==> x <= 2;\nloop invariant x = 2 ==> x >= 2;\nloop invariant x = 1 ==> x < 2;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant x = 2 ==> y >= 1;\nloop invariant x = 1 ==> y < 1;\nloop invariant x = 2 ==> x > 2;\nloop invariant x = 1 ==> x <= 2;\nloop invariant x = 2 ==> x >= 2;\nloop invariant x = 1 ==> x < 2;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant x = 2 ==> y >= 1;\nloop invariant x = 1 ==> y < 1;\nloop invariant x = 2 ==> x > 2;\nloop invariant x = 1 ==> x <= 2;\nloop invariant x = 2 ==> x >= 2;\nloop invariant x = 1 ==> x < 2;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant x = 2 ==> y >= 1;\nloop invariant x = 1 ==> y < 1;\nloop invariant x = 2 ==> x > 2;\nloop invariant x = 1 ==> x <= 2;\nloop invariant x = 2 ==> x >= 2;\nloop invariant x = 1 ==> x < 2;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant x = 2 ==> y >= 1;\nloop invariant x = 1 ==> y < 1;\nloop invariant x = 2 ==> x > 2;\nloop invariant x = 1 ==> x <= 2;\nloop invariant x = 2 ==> x >= 2;\nloop invariant x = 1 ==> x < 2;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant x = 2 ==> y >= 1;\nloop invariant x = 1 ==> y < 1;\nloop invariant x = 2 ==> x > 2;\nloop invariant x = 1 ==> x <= 2;\nloop invariant x = 2 ==> x >= 2;\nloop invariant x = 1 ==> x < 2;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant x = 2 ==> y >= 1;\nloop invariant x = 1 ==> y < 1;\nloop invariant x = 2 ==> x > 2;\nloop invariant x = 1 ==> x <= 2;\nloop invariant x = 2 ==> x >= 2;\nloop invariant x = 1 ==> x < 2;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant x = 2 ==> y >= 1;\nloop invariant x = 1 ==> y < 1;\nloop invariant x = 2 ==> x > 2;\nloop invariant x = 1 ==> x <= 2;\nloop invariant x = 2 ==> x >= 2;\nloop invariant x = 1 ==> x < 2;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant x = 2 ==> y >= 1;\nloop invariant x = 1 ==> y < 1;\nloop invariant x = 2 ==> x > 2;\nloop invariant x = 1 ==> x <= 2;\nloop invariant x = 2 ==> x >= 2;\nloop invariant x = 1 ==> x < 2;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant x = 2 ==> y >= 1;\nloop invariant x = 1 ==> y < 1;\nloop invariant x = 2 ==> x > 2;\nloop invariant x = 1 ==> x <= 2;\nloop invariant x = 2 ==> x >= 2;\nloop invariant x = 1 ==> x < 2;\nloop invariant x >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int x, y;\n\n  y = 0;\n  x = 1;\n  /*@\nloop invariant i1: 0 <= y < 10;\n\n\n\n\n\n\nloop invariant i8: x >= 1;\nloop invariant i9: x <= 2;\nloop invariant i10: y >= 0;\nloop invariant i11: y < 10;\n*/\nwhile ( unknown() < 10) {\n    if (x<2) {\n      x=2;\n    } else {\n      x=1;\n    }\n    if (y<1) {\n      y=0;\n    }\n  }\n  {;\n//@ assert(!( x > 2 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= unknown() <= 10;\nloop invariant 1 <= x <= 2;\nloop invariant 0 <= y <= 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant 1 <= unknown() <= 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\nloop invariant unknown() < 10;\nloop invariant x == 1 || x == 2;\nloop invariant y == 0 || y == 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int x, y;\n\n  y = 0;\n  x = 1;\n  /*@\n\nloop invariant i2: 1 <= x <= 2;\nloop invariant i3: 0 <= y <= 1;\n\nloop invariant i5: x == 1 || x == 2;\nloop invariant i6: y == 0 || y == 1;\n\n*/\nwhile ( unknown() < 10) {\n    if (x<2) {\n      x=2;\n    } else {\n      x=1;\n    }\n    if (y<1) {\n      y=0;\n    }\n  }\n  {;\n//@ assert(!( x > 2 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 37,
                "annotations": "```\n/*@\nloop invariant 0 <= y < 10;\nloop invariant 2 <= x <= 2;\nloop invariant x > 1 ==> y >= 1;\nloop invariant x <= 1 ==> y < 1;\nloop invariant x > 1 ==> y == 1;\nloop invariant x <= 1 ==> y == 0;\nloop invariant x <= 1 ==> y < 1;\nloop invariant x > 1 ==> y >= 1;\nloop invariant x > 1 ==> y <= 10;\nloop invariant x <= 1 ==> y >= 0;\nloop invariant x <= 1 ==> y <= 10;\nloop invariant x > 1 ==> y >= 0;\nloop invariant x > 1 ==> y <= 10;\nloop invariant x > 1 ==> y > 0;\nloop invariant x > 1 ==> y < 10;\nloop invariant x > 1 ==> y >= 1;\nloop invariant x > 1 ==> y <= 9;\nloop invariant x > 1 ==> y > 1;\nloop invariant x > 1 ==> y < 9;\nloop invariant x > 1 ==> y >= 2;\nloop invariant x > 1 ==> y <= 8;\nloop invariant x > 1 ==> y > 2;\nloop invariant x > 1 ==> y < 8;\nloop invariant x > 1 ==> y >= 3;\nloop invariant x > 1 ==> y <= 7;\nloop invariant x > 1 ==> y > 3;\nloop invariant x > 1 ==> y < 7;\nloop invariant x > 1 ==> y >= 4;\nloop invariant x > 1 ==> y <= 6;\nloop invariant x > 1 ==> y > 4;\nloop invariant x > 1 ==> y < 6;\nloop invariant x > 1 ==> y >= 5;\nloop invariant x > 1 ==> y <= 5;\nloop invariant x > 1 ==> y > 5;\nloop invariant x > 1 ==> y < 5;\nloop invariant x > 1 ==> y > 6;\nloop invariant x > 1 ==> y < 4;\nloop invariant x > 1 ==> y > 7;\nloop invariant x > 1 ==> y < 3;\nloop invariant x > 1 ==> y > 8;\nloop invariant x > 1 ==> y < 2;\nloop invariant x > 1 ==> y > 9;\nloop invariant x > 1 ==> y < 1;\nloop invariant x > 1 ==> y >= 10;\nloop invariant x > 1 ==> y <= 9;\nloop invariant x > 1 ==> y > 10;\nloop invariant x > 1 ==> y < 10;\nloop invariant x > 1 ==> y >= 11;\nloop invariant x > 1 ==> y <= 10;\nloop invariant x > 1 ==> y > 11;\nloop invariant x > 1 ==> y < 11;\nloop invariant x > 1 ==> y >= 12;\nloop invariant x > 1 ==> y <= 11;\nloop invariant x > 1 ==> y > 12;\nloop invariant x > 1 ==> y < 12;\nloop invariant x > 1 ==> y >= 13;\nloop invariant x > 1 ==> y <= 12;\nloop invariant x > 1 ==> y > 13;\nloop invariant x > 1 ==> y < 13;\nloop invariant x > 1 ==> y >= 14;\nloop invariant x > 1 ==> y <= 13;\nloop invariant x > 1 ==> y > 14;\nloop invariant x > 1 ==> y < 14;\nloop invariant x > 1 ==> y >= 15;\nloop invariant x > 1 ==> y <= 14;\nloop invariant x > 1 ==> y > 15;\nloop invariant x > 1 ==> y < 15;\nloop invariant x > 1 ==> y >= 16;\nloop invariant x > 1 ==> y <= 15;\nloop invariant x > 1 ==> y > 16;\nloop invariant x > 1 ==> y < 16;\nloop invariant x > 1 ==> y >= 17;\nloop invariant x > 1 ==> y <= 16;\nloop invariant x > 1 ==> y > 17;\nloop invariant x > 1 ==> y < 17;\nloop invariant x > 1 ==> y >= 18;\nloop invariant x > 1 ==> y <= 17;\nloop invariant x > 1 ==> y > 18;\nloop invariant x > 1 ==> y < 18;\nloop invariant x > 1 ==> y >= 19;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int x, y;\n\n  y = 0;\n  x = 1;\n  /*@\nloop invariant i1: 0 <= y < 10;\n\n\nloop invariant i4: x <= 1 ==> y < 1;\n\nloop invariant i6: x <= 1 ==> y == 0;\nloop invariant i7: x > 1 ==> y <= 10;\nloop invariant i8: x <= 1 ==> y >= 0;\nloop invariant i9: x <= 1 ==> y <= 10;\nloop invariant i10: x > 1 ==> y >= 0;\n\nloop invariant i12: x > 1 ==> y < 10;\nloop invariant i13: x > 1 ==> y <= 9;\n\nloop invariant i15: x > 1 ==> y < 9;\n\nloop invariant i17: x > 1 ==> y <= 8;\n\nloop invariant i19: x > 1 ==> y < 8;\n\nloop invariant i21: x > 1 ==> y <= 7;\n\nloop invariant i23: x > 1 ==> y < 7;\n\nloop invariant i25: x > 1 ==> y <= 6;\n\nloop invariant i27: x > 1 ==> y < 6;\n\nloop invariant i29: x > 1 ==> y <= 5;\n\nloop invariant i31: x > 1 ==> y < 5;\n\nloop invariant i33: x > 1 ==> y < 4;\n\nloop invariant i35: x > 1 ==> y < 3;\n\nloop invariant i37: x > 1 ==> y < 2;\n\nloop invariant i39: x > 1 ==> y < 1;\n\n\n\n\nloop invariant i44: x > 1 ==> y < 11;\n\nloop invariant i46: x > 1 ==> y <= 11;\n\nloop invariant i48: x > 1 ==> y < 12;\n\nloop invariant i50: x > 1 ==> y <= 12;\n\nloop invariant i52: x > 1 ==> y < 13;\n\nloop invariant i54: x > 1 ==> y <= 13;\n\nloop invariant i56: x > 1 ==> y < 14;\n\nloop invariant i58: x > 1 ==> y <= 14;\n\nloop invariant i60: x > 1 ==> y < 15;\n\nloop invariant i62: x > 1 ==> y <= 15;\n\nloop invariant i64: x > 1 ==> y < 16;\n\nloop invariant i66: x > 1 ==> y <= 16;\n\nloop invariant i68: x > 1 ==> y < 17;\n\nloop invariant i70: x > 1 ==> y <= 17;\n\nloop invariant i72: x > 1 ==> y < 18;\n\n*/\nwhile ( unknown() < 10) {\n    if (x<2) {\n      x=2;\n    } else {\n      x=1;\n    }\n    if (y<1) {\n      y=0;\n    }\n  }\n  {;\n//@ assert(!( x > 2 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2;\nloop invariant 0 <= y <= 1;\nloop invariant unknown() < 10 ==> (x == 1 || x == 2);\nloop invariant unknown() < 10 ==> (y == 0 || y == 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int x, y;\n\n  y = 0;\n  x = 1;\n  /*@\nloop invariant i1: 0 <= x <= 2;\nloop invariant i2: 0 <= y <= 1;\n\n\n*/\nwhile ( unknown() < 10) {\n    if (x<2) {\n      x=2;\n    } else {\n      x=1;\n    }\n    if (y<1) {\n      y=0;\n    }\n  }\n  {;\n//@ assert(!( x > 2 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2;\nloop invariant y == 0;\nloop invariant x > y;\nloop invariant y < 10;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int x, y;\n\n  y = 0;\n  x = 1;\n  /*@\nloop invariant i1: 0 <= x <= 2;\nloop invariant i2: y == 0;\nloop invariant i3: x > y;\nloop invariant i4: y < 10;\n*/\nwhile ( unknown() < 10) {\n    if (x<2) {\n      x=2;\n    } else {\n      x=1;\n    }\n    if (y<1) {\n      y=0;\n    }\n  }\n  {;\n//@ assert(!( x > 2 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 2;\nloop invariant 0 <= y <= 1;\nloop invariant (unknown() >= 10) ==> (x == 1);\nloop invariant (unknown() < 10) ==> (x >= 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int x, y;\n\n  y = 0;\n  x = 1;\n  /*@\nloop invariant i1: 1 <= x <= 2;\nloop invariant i2: 0 <= y <= 1;\n\n\n*/\nwhile ( unknown() < 10) {\n    if (x<2) {\n      x=2;\n    } else {\n      x=1;\n    }\n    if (y<1) {\n      y=0;\n    }\n  }\n  {;\n//@ assert(!( x > 2 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 10;\nloop invariant x >= 1;\nloop invariant x <= 2;\nloop invariant unknown() >= 0;\nloop invariant unknown() < 10;\nloop invariant if (unknown() < 10) ==> (x == 2);\nloop invariant if (unknown() < 10) ==> (y == 0);\nloop invariant if (unknown() == 10) ==> (x == 1);\nloop invariant if (unknown() == 10) ==> (y == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int x, y;\n\n  y = 0;\n  x = 1;\n  /*@\nloop invariant i1: 0 <= y <= 10;\nloop invariant i2: x >= 1;\nloop invariant i3: x <= 2;\n\n\n\n\n\n\n*/\nwhile ( unknown() < 10) {\n    if (x<2) {\n      x=2;\n    } else {\n      x=1;\n    }\n    if (y<1) {\n      y=0;\n    }\n  }\n  {;\n//@ assert(!( x > 2 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= y;\nloop invariant y < 10;\nloop invariant 1 <= x;\nloop invariant x <= 2;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x == 1 || (x == 2 && y < 10);\nloop invariant x == 1 || (x == 2 && y < 10);\nloop invariant x == 1 || (x == 2 && y < 10);\nloop invariant x == 1 || (x == 2 && y < 10);\nloop invariant x == 1 || (x == 2 && y < 10);\nloop invariant x == 1 || (x == 2 && y < 10);\nloop invariant x == 1 || (x == 2 && y < 10);\nloop invariant x == 1 || (x == 2 && y < 10);\nloop invariant x == 1 || (x == 2 && y < 10);\nloop invariant x == 1 || (x == 2 && y < 10);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int x, y;\n\n  y = 0;\n  x = 1;\n  /*@\nloop invariant i1: 0 <= y;\nloop invariant i2: y < 10;\nloop invariant i3: 1 <= x;\nloop invariant i4: x <= 2;\nloop invariant i5: x >= 1;\nloop invariant i6: y >= 0;\nloop invariant i7: x == 1 || (x == 2 && y < 10);\n*/\nwhile ( unknown() < 10) {\n    if (x<2) {\n      x=2;\n    } else {\n      x=1;\n    }\n    if (y<1) {\n      y=0;\n    }\n  }\n  {;\n//@ assert(!( x > 2 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y < 10;\nloop invariant x = 1 ==> x >= 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int x, y;\n\n  y = 0;\n  x = 1;\n  /*@\nloop invariant i1: 0 <= y < 10;\n\n*/\nwhile ( unknown() < 10) {\n    if (x<2) {\n      x=2;\n    } else {\n      x=1;\n    }\n    if (y<1) {\n      y=0;\n    }\n  }\n  {;\n//@ assert(!( x > 2 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 1;\nloop invariant x == 1;\nloop invariant x == 2;\nloop invariant x <= 2;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\nloop invariant y < 10;\nloop invariant y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int x, y;\n\n  y = 0;\n  x = 1;\n  /*@\nloop invariant i1: 0 <= y <= 1;\n\n\nloop invariant i4: x <= 2;\nloop invariant i5: x >= 1;\nloop invariant i6: y >= 0;\nloop invariant i7: y < 10;\n*/\nwhile ( unknown() < 10) {\n    if (x<2) {\n      x=2;\n    } else {\n      x=1;\n    }\n    if (y<1) {\n      y=0;\n    }\n  }\n  {;\n//@ assert(!( x > 2 ));\n}\n\nreturn;\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 24: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int x, y;\n\n  y = 0;\n  x = 1;\n  /*@\nloop invariant i1: y >= 0;\nloop invariant i2: y < 1;\nloop invariant i3: x >= 1;\nloop invariant i4: x <= 2;\nloop invariant i5: unknown() >= 0;\nloop invariant i6: unknown() < 10;\nloop invariant i7: y <= 1;\nloop invariant i8: x == 1 || x == 2;\nloop invariant i9: y == 0 || y == 1;\nloop invariant i10: unknown() >= 10;\nloop invariant i11: 0 <= x <= 2;\nloop invariant i12: 0 <= y <= 1;\nloop invariant i13: 0 <= y < 10;\nloop invariant i14: x == 1;\nloop invariant i15: x == 2 ==> y >= 0;\nloop invariant i16: x == 1 ==> y >= 1;\nloop invariant i17: x = 2 ==> y >= 1;\nloop invariant i18: x = 1 ==> y < 1;\nloop invariant i19: x = 2 ==> x > 2;\nloop invariant i20: x = 1 ==> x <= 2;\nloop invariant i21: x = 2 ==> x >= 2;\nloop invariant i22: x = 1 ==> x < 2;\nloop invariant i23: y < 10;\nloop invariant i24: 0 <= unknown() <= 10;\nloop invariant i25: 1 <= x <= 2;\nloop invariant i26: 1 <= unknown() <= 10;\nloop invariant i27: 2 <= x <= 2;\nloop invariant i28: x > 1 ==> y >= 1;\nloop invariant i29: x <= 1 ==> y < 1;\nloop invariant i30: x > 1 ==> y == 1;\nloop invariant i31: x <= 1 ==> y == 0;\nloop invariant i32: x > 1 ==> y <= 10;\nloop invariant i33: x <= 1 ==> y >= 0;\nloop invariant i34: x <= 1 ==> y <= 10;\nloop invariant i35: x > 1 ==> y >= 0;\nloop invariant i36: x > 1 ==> y > 0;\nloop invariant i37: x > 1 ==> y < 10;\nloop invariant i38: x > 1 ==> y <= 9;\nloop invariant i39: x > 1 ==> y > 1;\nloop invariant i40: x > 1 ==> y < 9;\nloop invariant i41: x > 1 ==> y >= 2;\nloop invariant i42: x > 1 ==> y <= 8;\nloop invariant i43: x > 1 ==> y > 2;\nloop invariant i44: x > 1 ==> y < 8;\nloop invariant i45: x > 1 ==> y >= 3;\nloop invariant i46: x > 1 ==> y <= 7;\nloop invariant i47: x > 1 ==> y > 3;\nloop invariant i48: x > 1 ==> y < 7;\nloop invariant i49: x > 1 ==> y >= 4;\nloop invariant i50: x > 1 ==> y <= 6;\nloop invariant i51: x > 1 ==> y > 4;\nloop invariant i52: x > 1 ==> y < 6;\nloop invariant i53: x > 1 ==> y >= 5;\nloop invariant i54: x > 1 ==> y <= 5;\nloop invariant i55: x > 1 ==> y > 5;\nloop invariant i56: x > 1 ==> y < 5;\nloop invariant i57: x > 1 ==> y > 6;\nloop invariant i58: x > 1 ==> y < 4;\nloop invariant i59: x > 1 ==> y > 7;\nloop invariant i60: x > 1 ==> y < 3;\nloop invariant i61: x > 1 ==> y > 8;\nloop invariant i62: x > 1 ==> y < 2;\nloop invariant i63: x > 1 ==> y > 9;\nloop invariant i64: x > 1 ==> y < 1;\nloop invariant i65: x > 1 ==> y >= 10;\nloop invariant i66: x > 1 ==> y > 10;\nloop invariant i67: x > 1 ==> y >= 11;\nloop invariant i68: x > 1 ==> y > 11;\nloop invariant i69: x > 1 ==> y < 11;\nloop invariant i70: x > 1 ==> y >= 12;\nloop invariant i71: x > 1 ==> y <= 11;\nloop invariant i72: x > 1 ==> y > 12;\nloop invariant i73: x > 1 ==> y < 12;\nloop invariant i74: x > 1 ==> y >= 13;\nloop invariant i75: x > 1 ==> y <= 12;\nloop invariant i76: x > 1 ==> y > 13;\nloop invariant i77: x > 1 ==> y < 13;\nloop invariant i78: x > 1 ==> y >= 14;\nloop invariant i79: x > 1 ==> y <= 13;\nloop invariant i80: x > 1 ==> y > 14;\nloop invariant i81: x > 1 ==> y < 14;\nloop invariant i82: x > 1 ==> y >= 15;\nloop invariant i83: x > 1 ==> y <= 14;\nloop invariant i84: x > 1 ==> y > 15;\nloop invariant i85: x > 1 ==> y < 15;\nloop invariant i86: x > 1 ==> y >= 16;\nloop invariant i87: x > 1 ==> y <= 15;\nloop invariant i88: x > 1 ==> y > 16;\nloop invariant i89: x > 1 ==> y < 16;\nloop invariant i90: x > 1 ==> y >= 17;\nloop invariant i91: x > 1 ==> y <= 16;\nloop invariant i92: x > 1 ==> y > 17;\nloop invariant i93: x > 1 ==> y < 17;\nloop invariant i94: x > 1 ==> y >= 18;\nloop invariant i95: x > 1 ==> y <= 17;\nloop invariant i96: x > 1 ==> y > 18;\nloop invariant i97: x > 1 ==> y < 18;\nloop invariant i98: x > 1 ==> y >= 19;\nloop invariant i99: unknown() < 10 ==> (x == 1 || x == 2);\nloop invariant i100: unknown() < 10 ==> (y == 0 || y == 1);\nloop invariant i101: y == 0;\nloop invariant i102: x > y;\nloop invariant i103: (unknown() >= 10) ==> (x == 1);\nloop invariant i104: (unknown() < 10) ==> (x >= 2);\nloop invariant i105: 0 <= y <= 10;\nloop invariant i106: if (unknown() < 10) ==> (x == 2);\nloop invariant i107: if (unknown() < 10) ==> (y == 0);\nloop invariant i108: if (unknown() == 10) ==> (x == 1);\nloop invariant i109: if (unknown() == 10) ==> (y == 0);\nloop invariant i110: 0 <= y;\nloop invariant i111: 1 <= x;\nloop invariant i112: x == 1 || (x == 2 && y < 10);\nloop invariant i113: x = 1 ==> x >= 2;\nloop invariant i114: x == 2;\n*/\nwhile ( unknown() < 10) {\n    if (x<2) {\n      x=2;\n    } else {\n      x=1;\n    }\n    if (y<1) {\n      y=0;\n    }\n  }\n  {;\n//@ assert(!( x > 2 ));\n}\n\nreturn;\n\n}",
        "combined_annotation_num_solver_calls": 60,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint unknown(){int x; return x;}\n\nvoid errorFn() {ERROR: goto ERROR;}\n\nvoid main()\n{\n  int x, y;\n\n  y = 0;\n  x = 1;\n  /*@\nloop invariant i1: y >= 0;\nloop invariant i2: y < 1;\nloop invariant i3: x >= 1;\nloop invariant i4: x <= 2;\n\n\nloop invariant i7: y <= 1;\nloop invariant i8: x == 1 || x == 2;\nloop invariant i9: y == 0 || y == 1;\n\nloop invariant i11: 0 <= x <= 2;\nloop invariant i12: 0 <= y <= 1;\nloop invariant i13: 0 <= y < 10;\n\nloop invariant i15: x == 2 ==> y >= 0;\n\n\n\n\n\n\n\nloop invariant i23: y < 10;\n\nloop invariant i25: 1 <= x <= 2;\n\n\n\nloop invariant i29: x <= 1 ==> y < 1;\n\nloop invariant i31: x <= 1 ==> y == 0;\nloop invariant i32: x > 1 ==> y <= 10;\nloop invariant i33: x <= 1 ==> y >= 0;\nloop invariant i34: x <= 1 ==> y <= 10;\nloop invariant i35: x > 1 ==> y >= 0;\n\nloop invariant i37: x > 1 ==> y < 10;\nloop invariant i38: x > 1 ==> y <= 9;\n\nloop invariant i40: x > 1 ==> y < 9;\n\nloop invariant i42: x > 1 ==> y <= 8;\n\nloop invariant i44: x > 1 ==> y < 8;\n\nloop invariant i46: x > 1 ==> y <= 7;\n\nloop invariant i48: x > 1 ==> y < 7;\n\nloop invariant i50: x > 1 ==> y <= 6;\n\nloop invariant i52: x > 1 ==> y < 6;\n\nloop invariant i54: x > 1 ==> y <= 5;\n\nloop invariant i56: x > 1 ==> y < 5;\n\nloop invariant i58: x > 1 ==> y < 4;\n\nloop invariant i60: x > 1 ==> y < 3;\n\nloop invariant i62: x > 1 ==> y < 2;\n\nloop invariant i64: x > 1 ==> y < 1;\n\n\n\n\nloop invariant i69: x > 1 ==> y < 11;\n\nloop invariant i71: x > 1 ==> y <= 11;\n\nloop invariant i73: x > 1 ==> y < 12;\n\nloop invariant i75: x > 1 ==> y <= 12;\n\nloop invariant i77: x > 1 ==> y < 13;\n\nloop invariant i79: x > 1 ==> y <= 13;\n\nloop invariant i81: x > 1 ==> y < 14;\n\nloop invariant i83: x > 1 ==> y <= 14;\n\nloop invariant i85: x > 1 ==> y < 15;\n\nloop invariant i87: x > 1 ==> y <= 15;\n\nloop invariant i89: x > 1 ==> y < 16;\n\nloop invariant i91: x > 1 ==> y <= 16;\n\nloop invariant i93: x > 1 ==> y < 17;\n\nloop invariant i95: x > 1 ==> y <= 17;\n\nloop invariant i97: x > 1 ==> y < 18;\n\n\n\nloop invariant i101: y == 0;\nloop invariant i102: x > y;\n\n\nloop invariant i105: 0 <= y <= 10;\n\n\n\n\nloop invariant i110: 0 <= y;\nloop invariant i111: 1 <= x;\nloop invariant i112: x == 1 || (x == 2 && y < 10);\n\n\n*/\nwhile ( unknown() < 10) {\n    if (x<2) {\n      x=2;\n    } else {\n      x=1;\n    }\n    if (y<1) {\n      y=0;\n    }\n  }\n  {;\n//@ assert(!( x > 2 ));\n}\n\nreturn;\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c"
        ],
        "skipped": [],
        "total": 23,
        "success_count": 22,
        "failure_count": 1,
        "success_rate": 0.9565217391304348
    }
}