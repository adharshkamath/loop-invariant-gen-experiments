{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nint main()\n{\n\tint i = 1;\n\tint j = 0;\n\tint z = i-j;\n\tint x = 0;\n\tint y = 0;\n\tint w = 0;\n\n\twhile(unknown2()) \n\t{\n\t\tz+=x+y+w;\n\t\ty++;\n\t\tif(z%2==1) \n\t\t  x++;\n\t\tw+=2; \n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant j == 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant w >= 0;\nloop invariant z == 1;\nloop invariant i >= 1;\nloop invariant z <= i + j + x + w;\nloop invariant unknown2() == false;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= z <= z;\nloop invariant 0 <= y <= y;\nloop invariant 0 <= x <= x;\nloop invariant 0 <= w <= w;\nloop invariant x <= y;\nloop invariant z <= z + x + y + w;\nloop invariant z + x + y + w <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y;\nloop invariant 1 <= x;\nloop invariant z == (x+y+w);\nloop invariant (z+y)%2 == 1 ==> x <= y;\nloop invariant (z+y)%2 == 0 ==> x == y;\nloop invariant w >= 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= 100000;\nloop invariant x >= (1 + (j - 1) * j / 2);\nloop invariant x <= (j * j / 2 + j);\nloop invariant x >= j;\nloop invariant x <= j * j / 2 + j;\nloop invariant y == j;\nloop invariant z = (x + y + w);\nloop invariant w % 2 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 1;\nloop invariant 0 <= x <= y;\nloop invariant z >= 0;\nloop invariant z <= y * (y + 1) / 2;\nloop invariant w >= 2 * y;\nloop invariant x == y ==> w == 2 * y;\nloop invariant x != y ==> w >= 2 * y + 2;\nloop invariant x <= y ==> z == x * (x + 1) / 2 + y * (y - 1) / 2;\nloop invariant x >= y ==> z == x * (x + 1) / 2 + y * (y + 1) / 2;\nloop invariant x == y ==> z == x * (x + 1) / 2 + y * (y - 1) / 2;\nloop invariant x != y ==> z >= x * (x + 1) / 2 + y * (y + 1) / 2;\nloop invariant x <= y ==> z >= x * (x + 1) / 2 + y * (y - 1) / 2;\nloop invariant x >= y ==> z <= x * (x + 1) / 2 + y * (y + 1) / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= z <= 2*((x+y+w)+x);\nloop invariant 0 <= x <= z;\nloop invariant 0 <= y <= z;\nloop invariant 0 <= w <= z;\nloop invariant z % 2 == 1 ==> x % 2 == 1;\nloop invariant x % 2 == 0 ==> z % 2 == 0;\nloop invariant z % 2 == 0 ==> y % 2 == 0;\nloop invariant y % 2 == 1 ==> z % 2 == 1;\nloop invariant y % 2 == 1 ==> x % 2 == 0;\nloop invariant z % 2 == 1 ==> x % 2 == 1;\nloop invariant x % 2 == 0 ==> z % 2 == 0;\nloop invariant y % 2 == 1 ==> z % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 1;\nloop invariant 0 <= j <= i;\nloop invariant 0 <= z <= i*(i-1)/2 + i;\nloop invariant x == y;\nloop invariant w == 2*y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 1;\nloop invariant 0 <= j <= 1;\nloop invariant 0 <= x <= 1;\nloop invariant 0 <= y <= 1;\nloop invariant 0 <= z <= 2;\nloop invariant 0 <= w <= 2;\nloop invariant y == x ==> z == x;\nloop invariant y != x ==> z == x + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= 100000;\nloop invariant x >= (1 + (j - 1) * j / 2);\nloop invariant y >= 0;\nloop invariant z >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 100000;\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x == y => x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant z >= i - j, z <= i + j;\nloop invariant y >= 0;\nloop invariant w >= 0;\nloop invariant y <= x;\nloop invariant i >= 1;\nloop invariant i <= 2147483647;\nloop invariant j >= -2147483648;\nloop invariant j <= 2147483647;\nloop invariant z >= -2147483648;\nloop invariant z <= 2147483647;\nloop invariant w >= 0;\nloop invariant w <= 2147483647;\nloop invariant x >= 0;\nloop invariant x <= 2147483647;\nloop invariant y >= 0;\nloop invariant y <= 2147483647;\nloop invariant z >= i - j;\nloop invariant z <= i + j;\nloop invariant y >= 0;\nloop invariant w >= 0;\nloop invariant y <= x;\nloop invariant i >= 1;\nloop invariant i <= 2147483647;\nloop invariant j >= -2147483648;\nloop invariant j <= 2147483647;\nloop invariant z >= -2147483648;\nloop invariant z <= 2147483647;\nloop invariant w >= 0;\nloop invariant w <= 2147483647;\nloop invariant x >= 0;\nloop invariant x <= 2147483647;\nloop invariant y >= 0;\nloop invariant y <= 2147483647;\nloop invariant z >= i - j;\nloop invariant z <= i + j;\nloop invariant y >= 0;\nloop invariant w >= 0;\nloop invariant y <= x;\nloop invariant i >= 1;\nloop invariant i <= 2147483647;\nloop invariant j >= -2147483648;\nloop invariant j <= 2147483647;\nloop invariant z >= -2147483648;\nloop invariant z <= 2147483647;\nloop invariant w >= 0;\nloop invariant w <= 2147483647;\nloop invariant x >= 0;\nloop invariant x <= 2147483647;\nloop invariant y >= 0;\nloop invariant y <= 2147483647;\nloop invariant z >= i - j;\nloop invariant z <= i + j;\nloop invariant y >= 0;\nloop invariant w >= 0;\nloop invariant y <= x;\nloop invariant i >= 1;\nloop invariant i <= 2147483647;\nloop invariant j >= -2147483648;\nloop invariant j <= 2147483647;\nloop invariant z >= -2147483648;\nloop invariant z <= 2147483647;\nloop invariant w >= 0;\nloop invariant w <= 2147483647;\nloop invariant x >= 0;\nloop invariant x <= 2147483647;\nloop invariant y >= 0;\nloop invariant y <= 2147483647;\nloop invariant z >= i - j;\nloop invariant z <= i + j;\nloop invariant y >= 0;\nloop invariant w >= 0;\nloop invariant y <= x;\nloop invariant i >= 1;\nloop invariant i <= 2147483647;\nloop invariant j >= -2147483648;\nloop invariant j <= 2147483647;\nloop invariant z >= -2147483648;\nloop invariant z <= 2147483647;\nloop invariant w >= 0;\nloop invariant w <= 2147483647;\nloop invariant x >= 0;\nloop invariant x <= 2147483647;\nloop invariant y >= 0;\nloop invariant y <= 2147483647;\nloop invariant z >= i - j;\nloop invariant z <= i + j;\nloop invariant y >= 0;\nloop invariant w >= 0;\nloop invariant y <= x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= i;\nloop invariant 0 <= x <= j;\nloop invariant 0 <= w <= 2 * j;\nloop invariant z == (2 * i * j - j * (j - 1) + j * (j - 1) / 2);\nloop invariant z % 2 == 0;\nloop invariant x + y == i - j;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant j == 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant w >= 0;\nloop invariant z == 1;\nloop invariant i >= 1;\nloop invariant z <= i + j + x + w;\nloop invariant unknown2() == false;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nint main()\n{\n\tint i = 1;\n\tint j = 0;\n\tint z = i-j;\n\tint x = 0;\n\tint y = 0;\n\tint w = 0;\n\n\t/*@\nloop invariant i1: j == 0;\nloop invariant i2: y >= 0;\nloop invariant i3: x >= 0;\nloop invariant i4: w >= 0;\n\nloop invariant i6: i >= 1;\n\n\n*/\nwhile(unknown2()) \n\t{\n\t\tz+=x+y+w;\n\t\ty++;\n\t\tif(z%2==1) \n\t\t  x++;\n\t\tw+=2; \n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= z <= z;\nloop invariant 0 <= y <= y;\nloop invariant 0 <= x <= x;\nloop invariant 0 <= w <= w;\nloop invariant x <= y;\nloop invariant z <= z + x + y + w;\nloop invariant z + x + y + w <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\nloop invariant z <= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nint main()\n{\n\tint i = 1;\n\tint j = 0;\n\tint z = i-j;\n\tint x = 0;\n\tint y = 0;\n\tint w = 0;\n\n\t/*@\nloop invariant i1: 0 <= z <= z;\nloop invariant i2: 0 <= y <= y;\nloop invariant i3: 0 <= x <= x;\nloop invariant i4: 0 <= w <= w;\nloop invariant i5: x <= y;\nloop invariant i6: z <= z + x + y + w;\n\nloop invariant i8: z <= z;\n*/\nwhile(unknown2()) \n\t{\n\t\tz+=x+y+w;\n\t\ty++;\n\t\tif(z%2==1) \n\t\t  x++;\n\t\tw+=2; \n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nint main()\n{\n\tint i = 1;\n\tint j = 0;\n\tint z = i-j;\n\tint x = 0;\n\tint y = 0;\n\tint w = 0;\n\n\t/*@\n\n*/\nwhile(unknown2()) \n\t{\n\t\tz+=x+y+w;\n\t\ty++;\n\t\tif(z%2==1) \n\t\t  x++;\n\t\tw+=2; \n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= y;\nloop invariant 1 <= x;\nloop invariant z == (x+y+w);\nloop invariant (z+y)%2 == 1 ==> x <= y;\nloop invariant (z+y)%2 == 0 ==> x == y;\nloop invariant w >= 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nint main()\n{\n\tint i = 1;\n\tint j = 0;\n\tint z = i-j;\n\tint x = 0;\n\tint y = 0;\n\tint w = 0;\n\n\t/*@\nloop invariant i1: 0 <= y;\n\n\n\n\n\n*/\nwhile(unknown2()) \n\t{\n\t\tz+=x+y+w;\n\t\ty++;\n\t\tif(z%2==1) \n\t\t  x++;\n\t\tw+=2; \n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= 100000;\nloop invariant x >= (1 + (j - 1) * j / 2);\nloop invariant x <= (j * j / 2 + j);\nloop invariant x >= j;\nloop invariant x <= j * j / 2 + j;\nloop invariant y == j;\nloop invariant z = (x + y + w);\nloop invariant w % 2 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nint main()\n{\n\tint i = 1;\n\tint j = 0;\n\tint z = i-j;\n\tint x = 0;\n\tint y = 0;\n\tint w = 0;\n\n\t/*@\nloop invariant i1: 0 <= j <= 100000;\n\n\nloop invariant i4: x >= j;\n\n\n\nloop invariant i8: w % 2 == 0;\n*/\nwhile(unknown2()) \n\t{\n\t\tz+=x+y+w;\n\t\ty++;\n\t\tif(z%2==1) \n\t\t  x++;\n\t\tw+=2; \n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nint main()\n{\n\tint i = 1;\n\tint j = 0;\n\tint z = i-j;\n\tint x = 0;\n\tint y = 0;\n\tint w = 0;\n\n\t/*@\n\n\n*/\nwhile(unknown2()) \n\t{\n\t\tz+=x+y+w;\n\t\ty++;\n\t\tif(z%2==1) \n\t\t  x++;\n\t\tw+=2; \n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 1;\nloop invariant 0 <= x <= y;\nloop invariant z >= 0;\nloop invariant z <= y * (y + 1) / 2;\nloop invariant w >= 2 * y;\nloop invariant x == y ==> w == 2 * y;\nloop invariant x != y ==> w >= 2 * y + 2;\nloop invariant x <= y ==> z == x * (x + 1) / 2 + y * (y - 1) / 2;\nloop invariant x >= y ==> z == x * (x + 1) / 2 + y * (y + 1) / 2;\nloop invariant x == y ==> z == x * (x + 1) / 2 + y * (y - 1) / 2;\nloop invariant x != y ==> z >= x * (x + 1) / 2 + y * (y + 1) / 2;\nloop invariant x <= y ==> z >= x * (x + 1) / 2 + y * (y - 1) / 2;\nloop invariant x >= y ==> z <= x * (x + 1) / 2 + y * (y + 1) / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nint main()\n{\n\tint i = 1;\n\tint j = 0;\n\tint z = i-j;\n\tint x = 0;\n\tint y = 0;\n\tint w = 0;\n\n\t/*@\n\nloop invariant i2: 0 <= x <= y;\nloop invariant i3: z >= 0;\n\nloop invariant i5: w >= 2 * y;\nloop invariant i6: x == y ==> w == 2 * y;\n\n\n\n\n\nloop invariant i12: x <= y ==> z >= x * (x + 1) / 2 + y * (y - 1) / 2;\n\n*/\nwhile(unknown2()) \n\t{\n\t\tz+=x+y+w;\n\t\ty++;\n\t\tif(z%2==1) \n\t\t  x++;\n\t\tw+=2; \n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= z <= 2*((x+y+w)+x);\nloop invariant 0 <= x <= z;\nloop invariant 0 <= y <= z;\nloop invariant 0 <= w <= z;\nloop invariant z % 2 == 1 ==> x % 2 == 1;\nloop invariant x % 2 == 0 ==> z % 2 == 0;\nloop invariant z % 2 == 0 ==> y % 2 == 0;\nloop invariant y % 2 == 1 ==> z % 2 == 1;\nloop invariant y % 2 == 1 ==> x % 2 == 0;\nloop invariant z % 2 == 1 ==> x % 2 == 1;\nloop invariant x % 2 == 0 ==> z % 2 == 0;\nloop invariant y % 2 == 1 ==> z % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\nloop invariant y % 2 == 0 ==> z % 2 == 0;\nloop invariant x % 2 == 1 ==> y % 2 == 1;\nloop invariant z % 2 == 1 ==> y % 2 == 1;\nloop invariant x % 2 == 1 ==> z % 2 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nint main()\n{\n\tint i = 1;\n\tint j = 0;\n\tint z = i-j;\n\tint x = 0;\n\tint y = 0;\n\tint w = 0;\n\n\t/*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(unknown2()) \n\t{\n\t\tz+=x+y+w;\n\t\ty++;\n\t\tif(z%2==1) \n\t\t  x++;\n\t\tw+=2; \n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 1;\nloop invariant 0 <= j <= i;\nloop invariant 0 <= z <= i*(i-1)/2 + i;\nloop invariant x == y;\nloop invariant w == 2*y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nint main()\n{\n\tint i = 1;\n\tint j = 0;\n\tint z = i-j;\n\tint x = 0;\n\tint y = 0;\n\tint w = 0;\n\n\t/*@\nloop invariant i1: 0 <= i <= 1;\nloop invariant i2: 0 <= j <= i;\n\n\nloop invariant i5: w == 2*y;\n*/\nwhile(unknown2()) \n\t{\n\t\tz+=x+y+w;\n\t\ty++;\n\t\tif(z%2==1) \n\t\t  x++;\n\t\tw+=2; \n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 1;\nloop invariant 0 <= j <= 1;\nloop invariant 0 <= x <= 1;\nloop invariant 0 <= y <= 1;\nloop invariant 0 <= z <= 2;\nloop invariant 0 <= w <= 2;\nloop invariant y == x ==> z == x;\nloop invariant y != x ==> z == x + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nint main()\n{\n\tint i = 1;\n\tint j = 0;\n\tint z = i-j;\n\tint x = 0;\n\tint y = 0;\n\tint w = 0;\n\n\t/*@\nloop invariant i1: 0 <= i <= 1;\nloop invariant i2: 0 <= j <= 1;\n\n\n\n\n\n\n*/\nwhile(unknown2()) \n\t{\n\t\tz+=x+y+w;\n\t\ty++;\n\t\tif(z%2==1) \n\t\t  x++;\n\t\tw+=2; \n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= 100000;\nloop invariant x >= (1 + (j - 1) * j / 2);\nloop invariant y >= 0;\nloop invariant z >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nint main()\n{\n\tint i = 1;\n\tint j = 0;\n\tint z = i-j;\n\tint x = 0;\n\tint y = 0;\n\tint w = 0;\n\n\t/*@\nloop invariant i1: 0 <= j <= 100000;\n\nloop invariant i3: y >= 0;\n\n*/\nwhile(unknown2()) \n\t{\n\t\tz+=x+y+w;\n\t\ty++;\n\t\tif(z%2==1) \n\t\t  x++;\n\t\tw+=2; \n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 100000;\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x == y => x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nint main()\n{\n\tint i = 1;\n\tint j = 0;\n\tint z = i-j;\n\tint x = 0;\n\tint y = 0;\n\tint w = 0;\n\n\t/*@\n\n\n\n\n*/\nwhile(unknown2()) \n\t{\n\t\tz+=x+y+w;\n\t\ty++;\n\t\tif(z%2==1) \n\t\t  x++;\n\t\tw+=2; \n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nint main()\n{\n\tint i = 1;\n\tint j = 0;\n\tint z = i-j;\n\tint x = 0;\n\tint y = 0;\n\tint w = 0;\n\n\t/*@\n\n*/\nwhile(unknown2()) \n\t{\n\t\tz+=x+y+w;\n\t\ty++;\n\t\tif(z%2==1) \n\t\t  x++;\n\t\tw+=2; \n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant z >= i - j, z <= i + j;\nloop invariant y >= 0;\nloop invariant w >= 0;\nloop invariant y <= x;\nloop invariant i >= 1;\nloop invariant i <= 2147483647;\nloop invariant j >= -2147483648;\nloop invariant j <= 2147483647;\nloop invariant z >= -2147483648;\nloop invariant z <= 2147483647;\nloop invariant w >= 0;\nloop invariant w <= 2147483647;\nloop invariant x >= 0;\nloop invariant x <= 2147483647;\nloop invariant y >= 0;\nloop invariant y <= 2147483647;\nloop invariant z >= i - j;\nloop invariant z <= i + j;\nloop invariant y >= 0;\nloop invariant w >= 0;\nloop invariant y <= x;\nloop invariant i >= 1;\nloop invariant i <= 2147483647;\nloop invariant j >= -2147483648;\nloop invariant j <= 2147483647;\nloop invariant z >= -2147483648;\nloop invariant z <= 2147483647;\nloop invariant w >= 0;\nloop invariant w <= 2147483647;\nloop invariant x >= 0;\nloop invariant x <= 2147483647;\nloop invariant y >= 0;\nloop invariant y <= 2147483647;\nloop invariant z >= i - j;\nloop invariant z <= i + j;\nloop invariant y >= 0;\nloop invariant w >= 0;\nloop invariant y <= x;\nloop invariant i >= 1;\nloop invariant i <= 2147483647;\nloop invariant j >= -2147483648;\nloop invariant j <= 2147483647;\nloop invariant z >= -2147483648;\nloop invariant z <= 2147483647;\nloop invariant w >= 0;\nloop invariant w <= 2147483647;\nloop invariant x >= 0;\nloop invariant x <= 2147483647;\nloop invariant y >= 0;\nloop invariant y <= 2147483647;\nloop invariant z >= i - j;\nloop invariant z <= i + j;\nloop invariant y >= 0;\nloop invariant w >= 0;\nloop invariant y <= x;\nloop invariant i >= 1;\nloop invariant i <= 2147483647;\nloop invariant j >= -2147483648;\nloop invariant j <= 2147483647;\nloop invariant z >= -2147483648;\nloop invariant z <= 2147483647;\nloop invariant w >= 0;\nloop invariant w <= 2147483647;\nloop invariant x >= 0;\nloop invariant x <= 2147483647;\nloop invariant y >= 0;\nloop invariant y <= 2147483647;\nloop invariant z >= i - j;\nloop invariant z <= i + j;\nloop invariant y >= 0;\nloop invariant w >= 0;\nloop invariant y <= x;\nloop invariant i >= 1;\nloop invariant i <= 2147483647;\nloop invariant j >= -2147483648;\nloop invariant j <= 2147483647;\nloop invariant z >= -2147483648;\nloop invariant z <= 2147483647;\nloop invariant w >= 0;\nloop invariant w <= 2147483647;\nloop invariant x >= 0;\nloop invariant x <= 2147483647;\nloop invariant y >= 0;\nloop invariant y <= 2147483647;\nloop invariant z >= i - j;\nloop invariant z <= i + j;\nloop invariant y >= 0;\nloop invariant w >= 0;\nloop invariant y <= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nint main()\n{\n\tint i = 1;\n\tint j = 0;\n\tint z = i-j;\n\tint x = 0;\n\tint y = 0;\n\tint w = 0;\n\n\t/*@\n\nloop invariant i2: y >= 0;\nloop invariant i3: w >= 0;\n\nloop invariant i5: i >= 1;\nloop invariant i6: i <= 2147483647;\nloop invariant i7: j >= -2147483648;\nloop invariant i8: j <= 2147483647;\nloop invariant i9: z >= -2147483648;\nloop invariant i10: z <= 2147483647;\nloop invariant i11: w <= 2147483647;\nloop invariant i12: x >= 0;\nloop invariant i13: x <= 2147483647;\nloop invariant i14: y <= 2147483647;\nloop invariant i15: z >= i - j;\n\n*/\nwhile(unknown2()) \n\t{\n\t\tz+=x+y+w;\n\t\ty++;\n\t\tif(z%2==1) \n\t\t  x++;\n\t\tw+=2; \n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= i;\nloop invariant 0 <= x <= j;\nloop invariant 0 <= w <= 2 * j;\nloop invariant z == (2 * i * j - j * (j - 1) + j * (j - 1) / 2);\nloop invariant z % 2 == 0;\nloop invariant x + y == i - j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nint main()\n{\n\tint i = 1;\n\tint j = 0;\n\tint z = i-j;\n\tint x = 0;\n\tint y = 0;\n\tint w = 0;\n\n\t/*@\nloop invariant i1: 0 <= j <= i;\n\n\n\n\n\n*/\nwhile(unknown2()) \n\t{\n\t\tz+=x+y+w;\n\t\ty++;\n\t\tif(z%2==1) \n\t\t  x++;\n\t\tw+=2; \n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 26: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nint main()\n{\n\tint i = 1;\n\tint j = 0;\n\tint z = i-j;\n\tint x = 0;\n\tint y = 0;\n\tint w = 0;\n\n\t/*@\nloop invariant i1: j == 0;\nloop invariant i2: y >= 0;\nloop invariant i3: x >= 0;\nloop invariant i4: w >= 0;\nloop invariant i5: z == 1;\nloop invariant i6: i >= 1;\nloop invariant i7: z <= i + j + x + w;\nloop invariant i8: unknown2() == false;\nloop invariant i9: 0 <= z <= z;\nloop invariant i10: 0 <= y <= y;\nloop invariant i11: 0 <= x <= x;\nloop invariant i12: 0 <= w <= w;\nloop invariant i13: x <= y;\nloop invariant i14: z <= z + x + y + w;\nloop invariant i15: z + x + y + w <= z;\nloop invariant i16: z <= z;\nloop invariant i17: 0 <= y;\nloop invariant i18: 1 <= x;\nloop invariant i19: z == (x+y+w);\nloop invariant i20: (z+y)%2 == 1 ==> x <= y;\nloop invariant i21: (z+y)%2 == 0 ==> x == y;\nloop invariant i22: w >= 2;\nloop invariant i23: 0 <= j <= 100000;\nloop invariant i24: x >= (1 + (j - 1) * j / 2);\nloop invariant i25: x <= (j * j / 2 + j);\nloop invariant i26: x >= j;\nloop invariant i27: x <= j * j / 2 + j;\nloop invariant i28: y == j;\nloop invariant i29: z = (x + y + w);\nloop invariant i30: w % 2 == 0;\nloop invariant i31: 0 <= y <= 100000;\nloop invariant i32: x >= (1 + (y - 1) * y / 2);\nloop invariant i33: 0 <= y <= 1;\nloop invariant i34: 0 <= x <= y;\nloop invariant i35: z >= 0;\nloop invariant i36: z <= y * (y + 1) / 2;\nloop invariant i37: w >= 2 * y;\nloop invariant i38: x == y ==> w == 2 * y;\nloop invariant i39: x != y ==> w >= 2 * y + 2;\nloop invariant i40: x <= y ==> z == x * (x + 1) / 2 + y * (y - 1) / 2;\nloop invariant i41: x >= y ==> z == x * (x + 1) / 2 + y * (y + 1) / 2;\nloop invariant i42: x == y ==> z == x * (x + 1) / 2 + y * (y - 1) / 2;\nloop invariant i43: x != y ==> z >= x * (x + 1) / 2 + y * (y + 1) / 2;\nloop invariant i44: x <= y ==> z >= x * (x + 1) / 2 + y * (y - 1) / 2;\nloop invariant i45: x >= y ==> z <= x * (x + 1) / 2 + y * (y + 1) / 2;\nloop invariant i46: 0 <= z <= 2*((x+y+w)+x);\nloop invariant i47: 0 <= x <= z;\nloop invariant i48: 0 <= y <= z;\nloop invariant i49: 0 <= w <= z;\nloop invariant i50: z % 2 == 1 ==> x % 2 == 1;\nloop invariant i51: x % 2 == 0 ==> z % 2 == 0;\nloop invariant i52: z % 2 == 0 ==> y % 2 == 0;\nloop invariant i53: y % 2 == 1 ==> z % 2 == 1;\nloop invariant i54: y % 2 == 1 ==> x % 2 == 0;\nloop invariant i55: x % 2 == 1 ==> z % 2 == 0;\nloop invariant i56: y % 2 == 0 ==> z % 2 == 0;\nloop invariant i57: x % 2 == 1 ==> y % 2 == 1;\nloop invariant i58: z % 2 == 1 ==> y % 2 == 1;\nloop invariant i59: 0 <= i <= 1;\nloop invariant i60: 0 <= j <= i;\nloop invariant i61: 0 <= z <= i*(i-1)/2 + i;\nloop invariant i62: x == y;\nloop invariant i63: w == 2*y;\nloop invariant i64: 0 <= j <= 1;\nloop invariant i65: 0 <= x <= 1;\nloop invariant i66: 0 <= z <= 2;\nloop invariant i67: 0 <= w <= 2;\nloop invariant i68: y == x ==> z == x;\nloop invariant i69: y != x ==> z == x + 1;\nloop invariant i70: 1 <= x <= 100000;\nloop invariant i71: x == y => x >= (1 + (y - 1) * y / 2);\nloop invariant i72: z >= i - j, z <= i + j;\nloop invariant i73: y <= x;\nloop invariant i74: i <= 2147483647;\nloop invariant i75: j >= -2147483648;\nloop invariant i76: j <= 2147483647;\nloop invariant i77: z >= -2147483648;\nloop invariant i78: z <= 2147483647;\nloop invariant i79: w <= 2147483647;\nloop invariant i80: x <= 2147483647;\nloop invariant i81: y <= 2147483647;\nloop invariant i82: z >= i - j;\nloop invariant i83: z <= i + j;\nloop invariant i84: 0 <= x <= j;\nloop invariant i85: 0 <= w <= 2 * j;\nloop invariant i86: z == (2 * i * j - j * (j - 1) + j * (j - 1) / 2);\nloop invariant i87: z % 2 == 0;\nloop invariant i88: x + y == i - j;\n*/\nwhile(unknown2()) \n\t{\n\t\tz+=x+y+w;\n\t\ty++;\n\t\tif(z%2==1) \n\t\t  x++;\n\t\tw+=2; \n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
        "combined_annotation_num_solver_calls": 50,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown2();\n\nint main()\n{\n\tint i = 1;\n\tint j = 0;\n\tint z = i-j;\n\tint x = 0;\n\tint y = 0;\n\tint w = 0;\n\n\t/*@\nloop invariant i1: j == 0;\nloop invariant i2: y >= 0;\nloop invariant i3: x >= 0;\nloop invariant i4: w >= 0;\n\nloop invariant i6: i >= 1;\n\n\nloop invariant i9: 0 <= z <= z;\nloop invariant i10: 0 <= y <= y;\nloop invariant i11: 0 <= x <= x;\nloop invariant i12: 0 <= w <= w;\nloop invariant i13: x <= y;\nloop invariant i14: z <= z + x + y + w;\n\nloop invariant i16: z <= z;\nloop invariant i17: 0 <= y;\n\n\nloop invariant i20: (z+y)%2 == 1 ==> x <= y;\n\n\nloop invariant i23: 0 <= j <= 100000;\n\n\nloop invariant i26: x >= j;\n\n\n\nloop invariant i30: w % 2 == 0;\n\n\n\nloop invariant i34: 0 <= x <= y;\nloop invariant i35: z >= 0;\n\nloop invariant i37: w >= 2 * y;\nloop invariant i38: x == y ==> w == 2 * y;\n\n\n\n\n\n\n\n\nloop invariant i47: 0 <= x <= z;\nloop invariant i48: 0 <= y <= z;\n\n\n\n\n\n\n\n\n\n\nloop invariant i59: 0 <= i <= 1;\nloop invariant i60: 0 <= j <= i;\n\n\nloop invariant i63: w == 2*y;\nloop invariant i64: 0 <= j <= 1;\n\n\n\n\n\n\n\n\n\nloop invariant i74: i <= 2147483647;\nloop invariant i75: j >= -2147483648;\nloop invariant i76: j <= 2147483647;\nloop invariant i77: z >= -2147483648;\nloop invariant i78: z <= 2147483647;\nloop invariant i79: w <= 2147483647;\nloop invariant i80: x <= 2147483647;\nloop invariant i81: y <= 2147483647;\nloop invariant i82: z >= i - j;\n\n\n\n\n\n\n*/\nwhile(unknown2()) \n\t{\n\t\tz+=x+y+w;\n\t\ty++;\n\t\tif(z%2==1) \n\t\t  x++;\n\t\tw+=2; \n\t}\n\n\t{;\n//@ assert(x==y);\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c"
        ],
        "skipped": [],
        "total": 102,
        "success_count": 86,
        "failure_count": 16,
        "success_rate": 0.8431372549019608
    }
}