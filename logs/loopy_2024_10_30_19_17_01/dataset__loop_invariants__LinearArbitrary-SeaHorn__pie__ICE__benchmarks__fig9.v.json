{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n\tint x, y, v1,v2,v3;\n\tx = 0;\n\ty = 0;\n\n\twhile(y >= 0) {\n\n\t\ty = y + x;\n\t\tv1 = unknown_int();\n\t\tv2 = unknown_int();\n\t\tv3 = unknown_int();\n\t\n\t}\n\n\t{;\n//@ assert(0 == 1);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= 2147483647;\nloop invariant 0 <= y <= 2147483647;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant y >= -x;\nloop invariant x >= y - x;\nloop invariant y >= -x + x;\nloop invariant x <= y - x + x;\nloop invariant y >= -x + x + x;\nloop invariant x <= y - x + x + x;\nloop invariant y >= -x + x + x + x;\nloop invariant x <= y - x + x + x + x;\nloop invariant y >= -x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y;\nloop invariant y <= 2147483647;\nloop invariant x >= 0;\nloop invariant x <= 2147483647;\nloop invariant y <= x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x <= y;\nloop invariant y >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant v1 <= RAND_MAX;\nloop invariant v2 <= RAND_MAX;\nloop invariant v3 <= RAND_MAX;\nloop invariant x <= RAND_MAX;\nloop invariant y <= RAND_MAX;\nloop invariant v1 != v2 != v3;\nloop invariant x == v1 + v2 + v3;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x;\nloop invariant y >= 0;\nloop invariant x + y >= 0;\nloop invariant y >= -x;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\n*/\n```",
            "```\n/*@\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant y >= x;\nloop invariant v1 == v2 == v3;\nloop invariant y >= x + v1;\nloop invariant y >= x + v2;\nloop invariant y >= x + v3;\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant v1 == v2 == v3;\nloop invariant y >= x + v1;\nloop invariant y >= x + v2;\nloop invariant y >= x + v3;\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant v1 == v2 == v3;\nloop invariant y >= x + v1;\nloop invariant y >= x + v2;\nloop invariant y >= x + v3;\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant v1 == v2 == v3;\nloop invariant y >= x + v1;\nloop invariant y >= x + v2;\nloop invariant y >= x + v3;\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant v1 == v2 == v3;\nloop invariant y >= x + v1;\nloop invariant y >= x + v2;\nloop invariant y >= x + v3;\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant v1 == v2 == v3;\nloop invariant y >= x + v1;\nloop invariant y >= x + v2;\nloop invariant y >= x + v3;\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant v1 == v2 == v3;\nloop invariant y >= x + v1;\nloop invariant y >= x + v2;\nloop invariant y >= x + v3;\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant v1 == v2 == v3;\nloop invariant y >= x + v1;\nloop invariant y >= x + v2;\nloop invariant y >= x + v3;\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant v1 == v2 == v3;\nloop invariant y >= x + v1;\nloop invariant y >= x + v2;\nloop invariant y >= x + v3;\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x >= 0;\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y;\nloop invariant 0 <= x;\nloop invariant x <= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= y <= 100000;\nloop invariant 0 <= x <= 100000;\nloop invariant x <= y;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= y;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= INT_MAX;\nloop invariant x >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant y >= x;\nloop invariant y >= v1;\nloop invariant y >= v2;\nloop invariant y >= v3;\nloop invariant y >= unknown_int();\nloop invariant y >= unknown_int();\nloop invariant y >= unknown_int();\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant y >= 0;\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y >= 0;\nloop invariant x >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant y - x >= 0 ==> v1 - x >= 0;\nloop invariant y - x >= 0 ==> v2 - x >= 0;\nloop invariant y - x >= 0 ==> v3 - x >= 0;\nloop invariant y - x >= 0 ==> v1 - x <= 100000;\nloop invariant y - x >= 0 ==> v2 - x <= 100000;\nloop invariant y - x >= 0 ==> v3 - x <= 100000;\nloop invariant x >= 0 ==> v1 >= 0;\nloop invariant x >= 0 ==> v2 >= 0;\nloop invariant x >= 0 ==> v3 >= 0;\nloop invariant x >= 0 ==> v1 <= 100000;\nloop invariant x >= 0 ==> v2 <= 100000;\nloop invariant x >= 0 ==> v3 <= 100000;\nloop invariant v1 >= 0 ==> v2 >= 0;\nloop invariant v1 >= 0 ==> v3 >= 0;\nloop invariant v2 >= 0 ==> v3 >= 0;\nloop invariant v1 <= 100000 ==> v2 <= 100000;\nloop invariant v1 <= 100000 ==> v3 <= 100000;\nloop invariant v2 <= 100000 ==> v3 <= 100000;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2147483647;\nloop invariant 0 <= y <= 2147483647;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant y >= -x;\nloop invariant x >= y - x;\nloop invariant y >= -x + x;\nloop invariant x <= y - x + x;\nloop invariant y >= -x + x + x;\nloop invariant x <= y - x + x + x;\nloop invariant y >= -x + x + x + x;\nloop invariant x <= y - x + x + x + x;\nloop invariant y >= -x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n\tint x, y, v1,v2,v3;\n\tx = 0;\n\ty = 0;\n\n\t/*@\nloop invariant i1: 0 <= x <= 2147483647;\nloop invariant i2: 0 <= y <= 2147483647;\nloop invariant i3: x >= 0;\nloop invariant i4: y >= 0;\nloop invariant i5: x <= y;\nloop invariant i6: y >= -x;\nloop invariant i7: x >= y - x;\nloop invariant i8: y >= -x + x;\nloop invariant i9: x <= y - x + x;\nloop invariant i10: y >= -x + x + x;\nloop invariant i11: x <= y - x + x + x;\nloop invariant i12: y >= -x + x + x + x;\nloop invariant i13: x <= y - x + x + x + x;\nloop invariant i14: y >= -x + x + x + x + x;\nloop invariant i15: x <= y - x + x + x + x + x;\nloop invariant i16: y >= -x + x + x + x + x + x;\nloop invariant i17: x <= y - x + x + x + x + x + x;\nloop invariant i18: y >= -x + x + x + x + x + x + x;\nloop invariant i19: x <= y - x + x + x + x + x + x + x;\nloop invariant i20: y >= -x + x + x + x + x + x + x + x;\nloop invariant i21: x <= y - x + x + x + x + x + x + x + x;\nloop invariant i22: y >= -x + x + x + x + x + x + x + x + x;\nloop invariant i23: x <= y - x + x + x + x + x + x + x + x + x;\nloop invariant i24: y >= -x + x + x + x + x + x + x + x + x + x;\nloop invariant i25: x <= y - x + x + x + x + x + x + x + x + x + x;\nloop invariant i26: y >= -x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i27: x <= y - x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i28: y >= -x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i29: x <= y - x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i30: y >= -x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i31: x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i32: y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i33: x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i34: y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i35: x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i36: y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i37: x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i38: y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i39: x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i40: y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i41: x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i42: y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\n*/\nwhile(y >= 0) {\n\n\t\ty = y + x;\n\t\tv1 = unknown_int();\n\t\tv2 = unknown_int();\n\t\tv3 = unknown_int();\n\t\n\t}\n\n\t{;\n//@ assert(0 == 1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y;\nloop invariant y <= 2147483647;\nloop invariant x >= 0;\nloop invariant x <= 2147483647;\nloop invariant y <= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n\tint x, y, v1,v2,v3;\n\tx = 0;\n\ty = 0;\n\n\t/*@\nloop invariant i1: 0 <= y;\nloop invariant i2: y <= 2147483647;\nloop invariant i3: x >= 0;\nloop invariant i4: x <= 2147483647;\n\n*/\nwhile(y >= 0) {\n\n\t\ty = y + x;\n\t\tv1 = unknown_int();\n\t\tv2 = unknown_int();\n\t\tv3 = unknown_int();\n\t\n\t}\n\n\t{;\n//@ assert(0 == 1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x <= y;\nloop invariant y >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant v1 <= RAND_MAX;\nloop invariant v2 <= RAND_MAX;\nloop invariant v3 <= RAND_MAX;\nloop invariant x <= RAND_MAX;\nloop invariant y <= RAND_MAX;\nloop invariant v1 != v2 != v3;\nloop invariant x == v1 + v2 + v3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n\tint x, y, v1,v2,v3;\n\tx = 0;\n\ty = 0;\n\n\t/*@\nloop invariant i1: 0 <= x;\nloop invariant i2: 0 <= y;\nloop invariant i3: x <= y;\nloop invariant i4: y >= 0;\n\n\n\nloop invariant i8: v1 <= RAND_MAX;\nloop invariant i9: v2 <= RAND_MAX;\nloop invariant i10: v3 <= RAND_MAX;\nloop invariant i11: x <= RAND_MAX;\nloop invariant i12: y <= RAND_MAX;\n\n\n*/\nwhile(y >= 0) {\n\n\t\ty = y + x;\n\t\tv1 = unknown_int();\n\t\tv2 = unknown_int();\n\t\tv3 = unknown_int();\n\t\n\t}\n\n\t{;\n//@ assert(0 == 1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x;\nloop invariant y >= 0;\nloop invariant x + y >= 0;\nloop invariant y >= -x;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= -1;\nloop invariant x >= y - 1;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 0;\nloop invariant x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n\tint x, y, v1,v2,v3;\n\tx = 0;\n\ty = 0;\n\n\t/*@\n\n\nloop invariant i3: 0 <= x;\nloop invariant i4: y >= 0;\nloop invariant i5: x + y >= 0;\nloop invariant i6: y >= -x;\n\nloop invariant i8: x >= 0;\nloop invariant i9: y >= -1;\n\n\n*/\nwhile(y >= 0) {\n\n\t\ty = y + x;\n\t\tv1 = unknown_int();\n\t\tv2 = unknown_int();\n\t\tv3 = unknown_int();\n\t\n\t}\n\n\t{;\n//@ assert(0 == 1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant y >= x;\nloop invariant v1 == v2 == v3;\nloop invariant y >= x + v1;\nloop invariant y >= x + v2;\nloop invariant y >= x + v3;\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant v1 == v2 == v3;\nloop invariant y >= x + v1;\nloop invariant y >= x + v2;\nloop invariant y >= x + v3;\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant v1 == v2 == v3;\nloop invariant y >= x + v1;\nloop invariant y >= x + v2;\nloop invariant y >= x + v3;\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant v1 == v2 == v3;\nloop invariant y >= x + v1;\nloop invariant y >= x + v2;\nloop invariant y >= x + v3;\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant v1 == v2 == v3;\nloop invariant y >= x + v1;\nloop invariant y >= x + v2;\nloop invariant y >= x + v3;\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant v1 == v2 == v3;\nloop invariant y >= x + v1;\nloop invariant y >= x + v2;\nloop invariant y >= x + v3;\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant v1 == v2 == v3;\nloop invariant y >= x + v1;\nloop invariant y >= x + v2;\nloop invariant y >= x + v3;\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant v1 == v2 == v3;\nloop invariant y >= x + v1;\nloop invariant y >= x + v2;\nloop invariant y >= x + v3;\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant v1 == v2 == v3;\nloop invariant y >= x + v1;\nloop invariant y >= x + v2;\nloop invariant y >= x + v3;\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant y >= x + unknown_int();\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\nloop invariant x >= 0;\nloop invariant y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n\tint x, y, v1,v2,v3;\n\tx = 0;\n\ty = 0;\n\n\t/*@\nloop invariant i1: y >= 0;\nloop invariant i2: x >= 0;\nloop invariant i3: y >= x;\n\n\n\n\n\n\n\n\n*/\nwhile(y >= 0) {\n\n\t\ty = y + x;\n\t\tv1 = unknown_int();\n\t\tv2 = unknown_int();\n\t\tv3 = unknown_int();\n\t\n\t}\n\n\t{;\n//@ assert(0 == 1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n\tint x, y, v1,v2,v3;\n\tx = 0;\n\ty = 0;\n\n\t/*@\nloop invariant i1: 0 <= x <= y;\nloop invariant i2: y >= 0;\n*/\nwhile(y >= 0) {\n\n\t\ty = y + x;\n\t\tv1 = unknown_int();\n\t\tv2 = unknown_int();\n\t\tv3 = unknown_int();\n\t\n\t}\n\n\t{;\n//@ assert(0 == 1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= y;\nloop invariant 0 <= x;\nloop invariant x <= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n\tint x, y, v1,v2,v3;\n\tx = 0;\n\ty = 0;\n\n\t/*@\nloop invariant i1: 0 <= y;\nloop invariant i2: 0 <= x;\nloop invariant i3: x <= y;\n*/\nwhile(y >= 0) {\n\n\t\ty = y + x;\n\t\tv1 = unknown_int();\n\t\tv2 = unknown_int();\n\t\tv3 = unknown_int();\n\t\n\t}\n\n\t{;\n//@ assert(0 == 1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n\tint x, y, v1,v2,v3;\n\tx = 0;\n\ty = 0;\n\n\t/*@\n\n\n*/\nwhile(y >= 0) {\n\n\t\ty = y + x;\n\t\tv1 = unknown_int();\n\t\tv2 = unknown_int();\n\t\tv3 = unknown_int();\n\t\n\t}\n\n\t{;\n//@ assert(0 == 1);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= y <= 100000;\nloop invariant 0 <= x <= 100000;\nloop invariant x <= y;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= y;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n\tint x, y, v1,v2,v3;\n\tx = 0;\n\ty = 0;\n\n\t/*@\n\nloop invariant i2: 0 <= x <= 100000;\nloop invariant i3: x <= y;\nloop invariant i4: x <= 100000;\n\nloop invariant i6: y >= 0;\nloop invariant i7: x >= 0;\n*/\nwhile(y >= 0) {\n\n\t\ty = y + x;\n\t\tv1 = unknown_int();\n\t\tv2 = unknown_int();\n\t\tv3 = unknown_int();\n\t\n\t}\n\n\t{;\n//@ assert(0 == 1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= INT_MAX;\nloop invariant x >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n\tint x, y, v1,v2,v3;\n\tx = 0;\n\ty = 0;\n\n\t/*@\nloop invariant i1: 0 <= y <= INT_MAX;\nloop invariant i2: x >= 0;\n\n\n\n*/\nwhile(y >= 0) {\n\n\t\ty = y + x;\n\t\tv1 = unknown_int();\n\t\tv2 = unknown_int();\n\t\tv3 = unknown_int();\n\t\n\t}\n\n\t{;\n//@ assert(0 == 1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant y >= x;\nloop invariant y >= v1;\nloop invariant y >= v2;\nloop invariant y >= v3;\nloop invariant y >= unknown_int();\nloop invariant y >= unknown_int();\nloop invariant y >= unknown_int();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n\tint x, y, v1,v2,v3;\n\tx = 0;\n\ty = 0;\n\n\t/*@\nloop invariant i1: x >= 0;\nloop invariant i2: y >= 0;\n\n\n\nloop invariant i6: y >= x;\n\n\n\n\n*/\nwhile(y >= 0) {\n\n\t\ty = y + x;\n\t\tv1 = unknown_int();\n\t\tv2 = unknown_int();\n\t\tv3 = unknown_int();\n\t\n\t}\n\n\t{;\n//@ assert(0 == 1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n\tint x, y, v1,v2,v3;\n\tx = 0;\n\ty = 0;\n\n\t/*@\n\n\n*/\nwhile(y >= 0) {\n\n\t\ty = y + x;\n\t\tv1 = unknown_int();\n\t\tv2 = unknown_int();\n\t\tv3 = unknown_int();\n\t\n\t}\n\n\t{;\n//@ assert(0 == 1);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n\tint x, y, v1,v2,v3;\n\tx = 0;\n\ty = 0;\n\n\t/*@\nloop invariant i1: x >= 0;\nloop invariant i2: y >= 0;\n\n\n\n*/\nwhile(y >= 0) {\n\n\t\ty = y + x;\n\t\tv1 = unknown_int();\n\t\tv2 = unknown_int();\n\t\tv3 = unknown_int();\n\t\n\t}\n\n\t{;\n//@ assert(0 == 1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant y >= 0;\nloop invariant v1 == unknown_int();\nloop invariant v2 == unknown_int();\nloop invariant v3 == unknown_int();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n\tint x, y, v1,v2,v3;\n\tx = 0;\n\ty = 0;\n\n\t/*@\nloop invariant i1: 0 <= x <= y;\nloop invariant i2: y >= 0;\n\n\n\n*/\nwhile(y >= 0) {\n\n\t\ty = y + x;\n\t\tv1 = unknown_int();\n\t\tv2 = unknown_int();\n\t\tv3 = unknown_int();\n\t\n\t}\n\n\t{;\n//@ assert(0 == 1);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= y >= 0;\nloop invariant x >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant y - x >= 0 ==> v1 - x >= 0;\nloop invariant y - x >= 0 ==> v2 - x >= 0;\nloop invariant y - x >= 0 ==> v3 - x >= 0;\nloop invariant y - x >= 0 ==> v1 - x <= 100000;\nloop invariant y - x >= 0 ==> v2 - x <= 100000;\nloop invariant y - x >= 0 ==> v3 - x <= 100000;\nloop invariant x >= 0 ==> v1 >= 0;\nloop invariant x >= 0 ==> v2 >= 0;\nloop invariant x >= 0 ==> v3 >= 0;\nloop invariant x >= 0 ==> v1 <= 100000;\nloop invariant x >= 0 ==> v2 <= 100000;\nloop invariant x >= 0 ==> v3 <= 100000;\nloop invariant v1 >= 0 ==> v2 >= 0;\nloop invariant v1 >= 0 ==> v3 >= 0;\nloop invariant v2 >= 0 ==> v3 >= 0;\nloop invariant v1 <= 100000 ==> v2 <= 100000;\nloop invariant v1 <= 100000 ==> v3 <= 100000;\nloop invariant v2 <= 100000 ==> v3 <= 100000;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n\tint x, y, v1,v2,v3;\n\tx = 0;\n\ty = 0;\n\n\t/*@\n\nloop invariant i2: x >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(y >= 0) {\n\n\t\ty = y + x;\n\t\tv1 = unknown_int();\n\t\tv2 = unknown_int();\n\t\tv3 = unknown_int();\n\t\n\t}\n\n\t{;\n//@ assert(0 == 1);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 71: Inconsistent relation chain.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n\tint x, y, v1,v2,v3;\n\tx = 0;\n\ty = 0;\n\n\t/*@\nloop invariant i1: 0 <= x <= 2147483647;\nloop invariant i2: 0 <= y <= 2147483647;\nloop invariant i3: x >= 0;\nloop invariant i4: y >= 0;\nloop invariant i5: x <= y;\nloop invariant i6: y >= -x;\nloop invariant i7: x >= y - x;\nloop invariant i8: y >= -x + x;\nloop invariant i9: x <= y - x + x;\nloop invariant i10: y >= -x + x + x;\nloop invariant i11: x <= y - x + x + x;\nloop invariant i12: y >= -x + x + x + x;\nloop invariant i13: x <= y - x + x + x + x;\nloop invariant i14: y >= -x + x + x + x + x;\nloop invariant i15: x <= y - x + x + x + x + x;\nloop invariant i16: y >= -x + x + x + x + x + x;\nloop invariant i17: x <= y - x + x + x + x + x + x;\nloop invariant i18: y >= -x + x + x + x + x + x + x;\nloop invariant i19: x <= y - x + x + x + x + x + x + x;\nloop invariant i20: y >= -x + x + x + x + x + x + x + x;\nloop invariant i21: x <= y - x + x + x + x + x + x + x + x;\nloop invariant i22: y >= -x + x + x + x + x + x + x + x + x;\nloop invariant i23: x <= y - x + x + x + x + x + x + x + x + x;\nloop invariant i24: y >= -x + x + x + x + x + x + x + x + x + x;\nloop invariant i25: x <= y - x + x + x + x + x + x + x + x + x + x;\nloop invariant i26: y >= -x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i27: x <= y - x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i28: y >= -x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i29: x <= y - x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i30: y >= -x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i31: x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i32: y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i33: x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i34: y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i35: x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i36: y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i37: x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i38: y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i39: x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i40: y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i41: x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i42: y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i43: 0 <= y;\nloop invariant i44: y <= 2147483647;\nloop invariant i45: x <= 2147483647;\nloop invariant i46: y <= x;\nloop invariant i47: 0 <= x;\nloop invariant i48: v1 >= 0;\nloop invariant i49: v2 >= 0;\nloop invariant i50: v3 >= 0;\nloop invariant i51: v1 <= RAND_MAX;\nloop invariant i52: v2 <= RAND_MAX;\nloop invariant i53: v3 <= RAND_MAX;\nloop invariant i54: x <= RAND_MAX;\nloop invariant i55: y <= RAND_MAX;\nloop invariant i56: v1 != v2 != v3;\nloop invariant i57: x == v1 + v2 + v3;\nloop invariant i58: 0 <= y <= 100000;\nloop invariant i59: x >= (1 + (y - 1) * y / 2);\nloop invariant i60: x + y >= 0;\nloop invariant i61: x >= y;\nloop invariant i62: y >= -1;\nloop invariant i63: x >= y - 1;\nloop invariant i64: x + y >= 1;\nloop invariant i65: y >= x;\nloop invariant i66: v1 == v2 == v3;\nloop invariant i67: y >= x + v1;\nloop invariant i68: y >= x + v2;\nloop invariant i69: y >= x + v3;\nloop invariant i70: y >= x + unknown_int();\nloop invariant i71: v1 == unknown_int();\nloop invariant i72: v2 == unknown_int();\nloop invariant i73: v3 == unknown_int();\nloop invariant i74: 0 <= x <= y;\nloop invariant i75: 1 <= y <= 100000;\nloop invariant i76: 0 <= x <= 100000;\nloop invariant i77: x <= 100000;\nloop invariant i78: y <= 100000;\nloop invariant i79: 0 <= y <= INT_MAX;\nloop invariant i80: y >= v1;\nloop invariant i81: y >= v2;\nloop invariant i82: y >= v3;\nloop invariant i83: y >= unknown_int();\nloop invariant i84: 0 <= y >= 0;\nloop invariant i85: y - x >= 0 ==> v1 - x >= 0;\nloop invariant i86: y - x >= 0 ==> v2 - x >= 0;\nloop invariant i87: y - x >= 0 ==> v3 - x >= 0;\nloop invariant i88: y - x >= 0 ==> v1 - x <= 100000;\nloop invariant i89: y - x >= 0 ==> v2 - x <= 100000;\nloop invariant i90: y - x >= 0 ==> v3 - x <= 100000;\nloop invariant i91: x >= 0 ==> v1 >= 0;\nloop invariant i92: x >= 0 ==> v2 >= 0;\nloop invariant i93: x >= 0 ==> v3 >= 0;\nloop invariant i94: x >= 0 ==> v1 <= 100000;\nloop invariant i95: x >= 0 ==> v2 <= 100000;\nloop invariant i96: x >= 0 ==> v3 <= 100000;\nloop invariant i97: v1 >= 0 ==> v2 >= 0;\nloop invariant i98: v1 >= 0 ==> v3 >= 0;\nloop invariant i99: v2 >= 0 ==> v3 >= 0;\nloop invariant i100: v1 <= 100000 ==> v2 <= 100000;\nloop invariant i101: v1 <= 100000 ==> v3 <= 100000;\nloop invariant i102: v2 <= 100000 ==> v3 <= 100000;\n*/\nwhile(y >= 0) {\n\n\t\ty = y + x;\n\t\tv1 = unknown_int();\n\t\tv2 = unknown_int();\n\t\tv3 = unknown_int();\n\t\n\t}\n\n\t{;\n//@ assert(0 == 1);\n}\n\n}",
        "combined_annotation_num_solver_calls": 16,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n\n\tint x, y, v1,v2,v3;\n\tx = 0;\n\ty = 0;\n\n\t/*@\nloop invariant i1: 0 <= x <= 2147483647;\nloop invariant i2: 0 <= y <= 2147483647;\nloop invariant i3: x >= 0;\nloop invariant i4: y >= 0;\nloop invariant i5: x <= y;\nloop invariant i6: y >= -x;\nloop invariant i7: x >= y - x;\nloop invariant i8: y >= -x + x;\nloop invariant i9: x <= y - x + x;\nloop invariant i10: y >= -x + x + x;\nloop invariant i11: x <= y - x + x + x;\nloop invariant i12: y >= -x + x + x + x;\nloop invariant i13: x <= y - x + x + x + x;\nloop invariant i14: y >= -x + x + x + x + x;\nloop invariant i15: x <= y - x + x + x + x + x;\nloop invariant i16: y >= -x + x + x + x + x + x;\nloop invariant i17: x <= y - x + x + x + x + x + x;\nloop invariant i18: y >= -x + x + x + x + x + x + x;\nloop invariant i19: x <= y - x + x + x + x + x + x + x;\nloop invariant i20: y >= -x + x + x + x + x + x + x + x;\nloop invariant i21: x <= y - x + x + x + x + x + x + x + x;\nloop invariant i22: y >= -x + x + x + x + x + x + x + x + x;\nloop invariant i23: x <= y - x + x + x + x + x + x + x + x + x;\nloop invariant i24: y >= -x + x + x + x + x + x + x + x + x + x;\nloop invariant i25: x <= y - x + x + x + x + x + x + x + x + x + x;\nloop invariant i26: y >= -x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i27: x <= y - x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i28: y >= -x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i29: x <= y - x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i30: y >= -x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i31: x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i32: y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i33: x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i34: y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i35: x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i36: y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i37: x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i38: y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i39: x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i40: y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i41: x <= y - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i42: y >= -x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i43: 0 <= y;\nloop invariant i44: y <= 2147483647;\nloop invariant i45: x <= 2147483647;\nloop invariant i46: y <= x;\nloop invariant i47: 0 <= x;\n\n\n\nloop invariant i51: v1 <= RAND_MAX;\nloop invariant i52: v2 <= RAND_MAX;\nloop invariant i53: v3 <= RAND_MAX;\nloop invariant i54: x <= RAND_MAX;\nloop invariant i55: y <= RAND_MAX;\n\n\nloop invariant i58: 0 <= y <= 100000;\n\nloop invariant i60: x + y >= 0;\nloop invariant i61: x >= y;\nloop invariant i62: y >= -1;\nloop invariant i63: x >= y - 1;\n\nloop invariant i65: y >= x;\n\n\n\n\n\n\n\n\nloop invariant i74: 0 <= x <= y;\n\nloop invariant i76: 0 <= x <= 100000;\nloop invariant i77: x <= 100000;\nloop invariant i78: y <= 100000;\nloop invariant i79: 0 <= y <= INT_MAX;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(y >= 0) {\n\n\t\ty = y + x;\n\t\tv1 = unknown_int();\n\t\tv2 = unknown_int();\n\t\tv3 = unknown_int();\n\t\n\t}\n\n\t{;\n//@ assert(0 == 1);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c"
        ],
        "skipped": [],
        "total": 80,
        "success_count": 69,
        "failure_count": 11,
        "success_rate": 0.8625
    }
}