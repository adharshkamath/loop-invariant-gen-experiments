{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    while(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant x + y == k;\nloop invariant (j == i) ==> (x + 1 == x && y - 1 == y);\nloop invariant !(j == i) ==> (x - 1 == x && y + 1 == y);\nloop invariant (j == i) ==> (x + 1 <= INT_MAX && y - 1 >= INT_MIN);\nloop invariant !(j == i) ==> (x - 1 <= INT_MAX && y + 1 >= INT_MIN);\nloop invariant (x + y) == k ==> (x + y) == (x + y);\nloop invariant !(x + y) == k ==> (x + y) == (x + y);\nloop invariant (j == i) ==> (x <= INT_MAX && y >= INT_MIN);\nloop invariant !(j == i) ==> (x <= INT_MAX && y >= INT_MIN);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= (i + y) + 1;\nloop invariant 0 <= y <= (i + x) + 1;\nloop invariant 0 <= n;\nloop invariant 0 <= j <= n;\nloop invariant x + y == k ==> m >= 0;\nloop invariant x + y == k ==> m < n;\nloop invariant x + y == k ==> j <= m;\nloop invariant x + y == k ==> m < j;\n*/\n```",
            "```\n/*@\nloop invariant x >= k - n;\nloop invariant y >= k - n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant m <= j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant (x+y) == k;\nloop invariant 0 <= x <= (x+y);\nloop invariant (x+y) >= 0;\nloop invariant 0 <= y <= (x+y);\nloop invariant (x+y) >= 0;\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= n;\nloop invariant 0 <= x <= k;\nloop invariant 0 <= m <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= x + y <= k;\nloop invariant x + m <= k;\nloop invariant x + y + 1 <= k;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= k;\nloop invariant 0 <= y <= k - x;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant x + y == k;\nloop invariant 0 <= m <= n - 1;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n - 1;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\n*/\n```",
            "```\n/*@\nloop invariant ( ( y == 0 ) && ( x == k ) && ( j == 0 ) && ( m == 0 ) );\nloop invariant ( ( y == 0 ) && ( x == k ) && ( j > 0 ) && ( m == 0 ) );\nloop invariant ( ( y >= 0 ) && ( x > k ) && ( j > 0 ) && ( m == j ) );\nloop invariant ( ( y >= 0 ) && ( x > k ) && ( j >= n ) && ( m == n ) );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant (x+y) == k ==> ((x+y) == k ==> (x+y) == k);\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k))));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k))))));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k))))))));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))))))));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))))))));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k))))))))));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))))))))));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))))))))))));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k))))))))))))));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))))))))))))));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= n;\nloop invariant x + y == k;\nloop invariant x >= k/2;\nloop invariant y <= n - k/2;\nloop invariant i <= j <= n;\nloop invariant m == j - 1 ==> unknown1();\nloop invariant m == j - 1 ==> unknown1();\nloop invariant m == j - 1 ==> unknown1();\nloop invariant m == j - 1 ==> unknown1();\nloop invariant m == j - 1 ==> unknown1();\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant k == x + y;\nloop invariant (j == i ==> x >= y) && ((j != i && j < n) ==> x <= y);\nloop invariant (j >= 1 ==> x + y <= k) && (j < n ==> x + y >= k - n + j);\nloop invariant (j == i ==> m == j) && ((j != i && j < n) ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;loop invariant 0 <= j <= n;loop invariant m >= 0;loop invariant m <= n;loop invariant m < j;loop invariant x >= -n;loop invariant x <= n;loop invariant y >= -n;loop invariant y <= n;loop invariant k >= -n;loop invariant k <= n;loop invariant n >= 0;loop invariant n <= 1000000000;loop invariant n > 0;loop invariant x + y == k;loop invariant (x + y) >= k;loop invariant (x + y) <= k;loop invariant (x + y) == k;loop invariant (x + y) < k;loop invariant (x + y) > k;loop invariant (x + y) == k;loop invariant (x + y) != k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= k;\nloop invariant 0 <= y <= k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100000;\nloop invariant 0 <= y <= 100000;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant x + y == k;\nloop invariant (j == i) ==> (x + 1 == x && y - 1 == y);\nloop invariant !(j == i) ==> (x - 1 == x && y + 1 == y);\nloop invariant (j == i) ==> (x + 1 <= INT_MAX && y - 1 >= INT_MIN);\nloop invariant !(j == i) ==> (x - 1 <= INT_MAX && y + 1 >= INT_MIN);\nloop invariant (x + y) == k ==> (x + y) == (x + y);\nloop invariant !(x + y) == k ==> (x + y) == (x + y);\nloop invariant (j == i) ==> (x <= INT_MAX && y >= INT_MIN);\nloop invariant !(j == i) ==> (x <= INT_MAX && y >= INT_MIN);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\nloop invariant i2: x + y == k;\n\n\n\nloop invariant i6: !(j == i) ==> (x - 1 <= INT_MAX && y + 1 >= INT_MIN);\nloop invariant i7: (x + y) == k ==> (x + y) == (x + y);\nloop invariant i8: !(x + y) == k ==> (x + y) == (x + y);\nloop invariant i9: (j == i) ==> (x <= INT_MAX && y >= INT_MIN);\nloop invariant i10: !(j == i) ==> (x <= INT_MAX && y >= INT_MIN);\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= (i + y) + 1;\nloop invariant 0 <= y <= (i + x) + 1;\nloop invariant 0 <= n;\nloop invariant 0 <= j <= n;\nloop invariant x + y == k ==> m >= 0;\nloop invariant x + y == k ==> m < n;\nloop invariant x + y == k ==> j <= m;\nloop invariant x + y == k ==> m < j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\n\n\n\n\n\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant x >= k - n;\nloop invariant y >= k - n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant m <= j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\n\n\nloop invariant i5: m <= j;\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant (x+y) == k;\nloop invariant 0 <= x <= (x+y);\nloop invariant (x+y) >= 0;\nloop invariant 0 <= y <= (x+y);\nloop invariant (x+y) >= 0;\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\nloop invariant (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant (x+y) == k ==> (x+y) >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\nloop invariant i2: (x+y) == k;\n\n\n\n\n\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= n;\nloop invariant 0 <= x <= k;\nloop invariant 0 <= m <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= x + y <= k;\nloop invariant x + m <= k;\nloop invariant x + y + 1 <= k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\n\n\n\n\n\n\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= k;\nloop invariant 0 <= y <= k - x;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant x + y == k;\nloop invariant 0 <= m <= n - 1;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n - 1;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\nloop invariant m < n;\nloop invariant m < j;\nloop invariant x + y == k;\nloop invariant y == j - i;\nloop invariant x == k - j + i;\nloop invariant j < n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\n\n\n\nloop invariant i6: x + y == k;\n\n\n\n\n\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant ( ( y == 0 ) && ( x == k ) && ( j == 0 ) && ( m == 0 ) );\nloop invariant ( ( y == 0 ) && ( x == k ) && ( j > 0 ) && ( m == 0 ) );\nloop invariant ( ( y >= 0 ) && ( x > k ) && ( j > 0 ) && ( m == j ) );\nloop invariant ( ( y >= 0 ) && ( x > k ) && ( j >= n ) && ( m == n ) );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\n\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant (x+y) == k ==> ((x+y) == k ==> (x+y) == k);\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k))));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k))))));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k))))))));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))))))));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))))))));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k))))))))));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))))))))));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))))))))))));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k))))))))))))));\nloop invariant (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))))))))))))));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\nloop invariant i2: (x+y) == k ==> ((x+y) == k ==> (x+y) == k);\nloop invariant i3: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k));\nloop invariant i4: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)));\nloop invariant i5: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k))));\nloop invariant i6: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))));\nloop invariant i7: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k))))));\n\n\nloop invariant i10: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))))))));\nloop invariant i11: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k))))))))));\nloop invariant i12: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))))))))));\n\n\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant m >= 0;\nloop invariant m < n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant x + y == k;\nloop invariant x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\nloop invariant i3: x + y == k;\n\n\n\n\n\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= n;\nloop invariant x + y == k;\nloop invariant x >= k/2;\nloop invariant y <= n - k/2;\nloop invariant i <= j <= n;\nloop invariant m == j - 1 ==> unknown1();\nloop invariant m == j - 1 ==> unknown1();\nloop invariant m == j - 1 ==> unknown1();\nloop invariant m == j - 1 ==> unknown1();\nloop invariant m == j - 1 ==> unknown1();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\nloop invariant i2: x + y == k;\n\n\n\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant k == x + y;\nloop invariant (j == i ==> x >= y) && ((j != i && j < n) ==> x <= y);\nloop invariant (j >= 1 ==> x + y <= k) && (j < n ==> x + y >= k - n + j);\nloop invariant (j == i ==> m == j) && ((j != i && j < n) ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\nloop invariant i3: k == x + y;\n\nloop invariant i5: (j >= 1 ==> x + y <= k) && (j < n ==> x + y >= k - n + j);\n\nloop invariant i7: (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;loop invariant 0 <= j <= n;loop invariant m >= 0;loop invariant m <= n;loop invariant m < j;loop invariant x >= -n;loop invariant x <= n;loop invariant y >= -n;loop invariant y <= n;loop invariant k >= -n;loop invariant k <= n;loop invariant n >= 0;loop invariant n <= 1000000000;loop invariant n > 0;loop invariant x + y == k;loop invariant (x + y) >= k;loop invariant (x + y) <= k;loop invariant (x + y) == k;loop invariant (x + y) < k;loop invariant (x + y) > k;loop invariant (x + y) == k;loop invariant (x + y) != k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\nloop invariant i3: x + y == k;\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= k;\nloop invariant 0 <= y <= k;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= m <= n;\nloop invariant x + y == k;\nloop invariant j == m || j != i;\nloop invariant k == (x + y);\nloop invariant 0 <= i <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\n\n\n\nloop invariant i6: x + y == k;\n\nloop invariant i8: k == (x + y);\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100000;\nloop invariant 0 <= y <= 100000;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\nloop invariant x <= y + 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y <= 200000;\nloop invariant x == y + 1;\nloop invariant x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\n\n\n\n\n\n\n\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 76: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\nloop invariant i1: 0 <= j <= n;\nloop invariant i2: x + y == k;\nloop invariant i3: (j == i) ==> (x + 1 == x && y - 1 == y);\nloop invariant i4: !(j == i) ==> (x - 1 == x && y + 1 == y);\nloop invariant i5: (j == i) ==> (x + 1 <= INT_MAX && y - 1 >= INT_MIN);\nloop invariant i6: !(j == i) ==> (x - 1 <= INT_MAX && y + 1 >= INT_MIN);\nloop invariant i7: (x + y) == k ==> (x + y) == (x + y);\nloop invariant i8: !(x + y) == k ==> (x + y) == (x + y);\nloop invariant i9: (j == i) ==> (x <= INT_MAX && y >= INT_MIN);\nloop invariant i10: !(j == i) ==> (x <= INT_MAX && y >= INT_MIN);\nloop invariant i11: 0 <= x <= (i + y) + 1;\nloop invariant i12: 0 <= y <= (i + x) + 1;\nloop invariant i13: 0 <= n;\nloop invariant i14: x + y == k ==> m >= 0;\nloop invariant i15: x + y == k ==> m < n;\nloop invariant i16: x + y == k ==> j <= m;\nloop invariant i17: x + y == k ==> m < j;\nloop invariant i18: x >= k - n;\nloop invariant i19: y >= k - n;\nloop invariant i20: 0 <= m <= n;\nloop invariant i21: m <= j;\nloop invariant i22: (x+y) == k;\nloop invariant i23: 0 <= x <= (x+y);\nloop invariant i24: (x+y) >= 0;\nloop invariant i25: 0 <= y <= (x+y);\nloop invariant i26: (x+y) == k ==> (x+y) >= 0;\nloop invariant i27: (x+y) == k ==> 0 <= x <= (x+y);\nloop invariant i28: (x+y) == k ==> 0 <= y <= (x+y);\nloop invariant i29: 0 <= y <= n;\nloop invariant i30: 0 <= x <= k;\nloop invariant i31: 0 <= i <= n;\nloop invariant i32: 0 <= k <= n;\nloop invariant i33: 0 <= x + y <= k;\nloop invariant i34: x + m <= k;\nloop invariant i35: x + y + 1 <= k;\nloop invariant i36: 1 <= x <= k;\nloop invariant i37: 0 <= y <= k - x;\nloop invariant i38: m < j;\nloop invariant i39: y == j - i;\nloop invariant i40: x == k - j + i;\nloop invariant i41: j < n;\nloop invariant i42: m < n;\nloop invariant i43: 0 <= m <= n - 1;\nloop invariant i44: m < n - 1;\nloop invariant i45: ( ( y == 0 ) && ( x == k ) && ( j == 0 ) && ( m == 0 ) );\nloop invariant i46: ( ( y == 0 ) && ( x == k ) && ( j > 0 ) && ( m == 0 ) );\nloop invariant i47: ( ( y >= 0 ) && ( x > k ) && ( j > 0 ) && ( m == j ) );\nloop invariant i48: ( ( y >= 0 ) && ( x > k ) && ( j >= n ) && ( m == n ) );\nloop invariant i49: (x+y) == k ==> ((x+y) == k ==> (x+y) == k);\nloop invariant i50: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k));\nloop invariant i51: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)));\nloop invariant i52: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k))));\nloop invariant i53: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))));\nloop invariant i54: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k))))));\nloop invariant i55: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k))))))));\nloop invariant i56: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))))))));\nloop invariant i57: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))))))));\nloop invariant i58: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k))))))))));\nloop invariant i59: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))))))))));\nloop invariant i60: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))))))))))));\nloop invariant i61: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k))))))))))))));\nloop invariant i62: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))))))))))))));\nloop invariant i63: x >= y;\nloop invariant i64: y >= 0;\nloop invariant i65: m >= 0;\nloop invariant i66: j <= n;\nloop invariant i67: i <= n;\nloop invariant i68: x >= k/2;\nloop invariant i69: y <= n - k/2;\nloop invariant i70: i <= j <= n;\nloop invariant i71: m == j - 1 ==> unknown1();\nloop invariant i72: k == x + y;\nloop invariant i73: (j == i ==> x >= y) && ((j != i && j < n) ==> x <= y);\nloop invariant i74: (j >= 1 ==> x + y <= k) && (j < n ==> x + y >= k - n + j);\nloop invariant i75: (j == i ==> m == j) && ((j != i && j < n) ==> m == 0);\nloop invariant i76: (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\nloop invariant i77: (j >= 1 ==> m == j) && (j < n ==> m == 0);\nloop invariant i78: 0 <= i <= n;loop invariant 0 <= j <= n;loop invariant m >= 0;loop invariant m <= n;loop invariant m < j;loop invariant x >= -n;loop invariant x <= n;loop invariant y >= -n;loop invariant y <= n;loop invariant k >= -n;loop invariant k <= n;loop invariant n >= 0;loop invariant n <= 1000000000;loop invariant n > 0;loop invariant x + y == k;loop invariant (x + y) >= k;loop invariant (x + y) <= k;loop invariant (x + y) == k;loop invariant (x + y) < k;loop invariant (x + y) > k;loop invariant (x + y) == k;loop invariant (x + y) != k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;loop invariant (x + y) == k;\nloop invariant i79: 0 <= y <= k;\nloop invariant i80: j == m || j != i;\nloop invariant i81: k == (x + y);\nloop invariant i82: 0 <= x <= 100000;\nloop invariant i83: 0 <= y <= 100000;\nloop invariant i84: x >= 1;\nloop invariant i85: x + y >= 1;\nloop invariant i86: x + y <= 200000;\nloop invariant i87: x == y + 1;\nloop invariant i88: x <= y + 1;\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
        "combined_annotation_num_solver_calls": 19,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nextern int unknown1();\n\nvoid main()\n{\n    int x, y, k, j, i, n;\n    x = unknown1();\n    y = unknown1();\n    k = unknown1();\n    j = unknown1();\n    i = unknown1();\n    n = unknown1();\n    if((x+y)== k) {\n    int m = 0;\n    j = 0;\n    /*@\n\nloop invariant i2: x + y == k;\n\n\n\nloop invariant i6: !(j == i) ==> (x - 1 <= INT_MAX && y + 1 >= INT_MIN);\nloop invariant i7: (x + y) == k ==> (x + y) == (x + y);\nloop invariant i8: !(x + y) == k ==> (x + y) == (x + y);\nloop invariant i9: (j == i) ==> (x <= INT_MAX && y >= INT_MIN);\nloop invariant i10: !(j == i) ==> (x <= INT_MAX && y >= INT_MIN);\n\n\n\nloop invariant i14: x + y == k ==> m >= 0;\n\n\n\n\n\n\nloop invariant i21: m <= j;\nloop invariant i22: (x+y) == k;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i49: (x+y) == k ==> ((x+y) == k ==> (x+y) == k);\nloop invariant i50: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k));\nloop invariant i51: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)));\nloop invariant i52: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k))));\nloop invariant i53: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))));\nloop invariant i54: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k))))));\n\n\nloop invariant i57: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))))))));\nloop invariant i58: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k))))))))));\nloop invariant i59: (x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> ((x+y) == k ==> (x+y) == k)))))))))));\n\n\n\n\n\nloop invariant i65: m >= 0;\n\n\n\n\n\n\nloop invariant i72: k == x + y;\n\nloop invariant i74: (j >= 1 ==> x + y <= k) && (j < n ==> x + y >= k - n + j);\n\nloop invariant i76: (j >= 1 ==> x + y == k) && (j < n ==> x + y != k - n + j);\n\n\n\n\nloop invariant i81: k == (x + y);\n\n\n\n\n\n\n\n*/\nwhile(j<n) {\n      if(j==i)\n      {\n         x++;\n         y--;\n      }else\n      {\n         y++;\n         x--;\n      }\n\tif(unknown1())\n  \t\tm = j;\n      j++;\n    }\n    {;\n//@ assert((x+y)== k);\n}\n\n    if(n>0)\n    {\n   \t{;\n//@ assert(0<=m);\n}\n \n\t{;\n//@ assert(m<n);\n}\n\n    }\n    }\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c"
        ],
        "skipped": [],
        "total": 114,
        "success_count": 94,
        "failure_count": 20,
        "success_rate": 0.8245614035087719
    }
}