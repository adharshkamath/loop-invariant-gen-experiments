{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/107.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    while ( k < 1) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    {;\n//@ assert( a <= m);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= k < 1;\nloop invariant m >= a;\nloop invariant a >= m;\nloop invariant a >= 0;\nloop invariant m >= 0;\nloop invariant k >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= 1;\nloop invariant m >= a;\nloop invariant m >= (a + k - 1);\nloop invariant m >= k;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= k <= 1;\nloop invariant k > 0;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= 0;\nloop invariant a <= m;\nloop invariant m >= j;\nloop invariant m <= a;\nloop invariant k > 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m <= 1;\nloop invariant 0 <= j <= 1;\nloop invariant a <= m;\nloop invariant a <= k;\nloop invariant a <= j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\n*/\n```",
            "```\n/*@\nloop invariant j == 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant k >= 1;\nloop invariant m >= a;\nloop invariant k >= 1;\nloop invariant m >= a;\nloop invariant a <= m;\nloop invariant m >= a;\nloop invariant m >= a;\nloop invariant j == 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant k >= 1;\nloop invariant m >= a;\nloop invariant a <= m;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= 1; k == 0 ==> k < 1;\nloop invariant 0 <= a <= m; a == 0 ==> a <= m;\nloop invariant m >= a; m == a ==> m >= a;\nloop invariant k >= 0; k == 1 ==> k >= 0;\nloop invariant a >= 0; a == 1 ==> a >= 0;\nloop invariant m >= 0; m == 1 ==> m >= 0;\nloop invariant k == 1 ==> m >= a;\nloop invariant k == 1 ==> a >= 0;\nloop invariant k == 1 ==> m >= 0;\nloop invariant k == 1 ==> a <= m;\nloop invariant k == 1 ==> m >= a;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= 1;\nloop invariant a <= m;\nloop invariant m >= a;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= 1;\nloop invariant 0 <= k <= 1;\nloop invariant j + k <= 1;\nloop invariant k < 1 ==> a <= m;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= 1;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= a));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k));\n*/\n```",
            "```\n/*@\nloop invariant a >= j;\nloop invariant a >= m;\nloop invariant m >= j;\nloop invariant m >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant k <= 1;\nloop invariant k < 1 ==> m <= a;\nloop invariant k < 1 ==> m == a;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= 1;\nloop invariant a <= m ==> a <= m;\nloop invariant a <= m ==> k == 1;\nloop invariant 0 <= k <= 1;\nloop invariant a <= m ==> a <= m;\nloop invariant a <= m ==> k == 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= j <= 1;\nloop invariant 0 <= m <= a;\nloop invariant a <= m ==> (m == a);\nloop invariant a > m ==> (m == a);\nloop invariant 0 <= j < k ==> (m == a);\nloop invariant 0 <= k < j ==> (m == a);\nloop invariant k >= j ==> (m == a);\nloop invariant k == j ==> (m == a);\nloop invariant k == 0 ==> (m == a);\nloop invariant k == 1 ==> (m >= a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= 1;\nloop invariant (k == 1 ==> m >= a);\nloop invariant (k == 0 ==> m == a);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= 1;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= k < 1;\nloop invariant m >= a;\nloop invariant a >= m;\nloop invariant a >= 0;\nloop invariant m >= 0;\nloop invariant k >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\n\n\n\n\n\nloop invariant i6: k >= 0;\n*/\nwhile ( k < 1) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    {;\n//@ assert( a <= m);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= 1;\nloop invariant m >= a;\nloop invariant m >= (a + k - 1);\nloop invariant m >= k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\nloop invariant i1: 0 <= k <= 1;\n\n\n\n*/\nwhile ( k < 1) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    {;\n//@ assert( a <= m);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 1 <= k <= 1;\nloop invariant k > 0;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= 0;\nloop invariant a <= m;\nloop invariant m >= j;\nloop invariant m <= a;\nloop invariant k > 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\nloop invariant a >= m;\nloop invariant m >= 0;\nloop invariant m <= a;\nloop invariant j >= 0;\nloop invariant j < 1;\nloop invariant k >= 0;\nloop invariant k < 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\n\n\n\n\n\nloop invariant i6: j >= 0;\nloop invariant i7: j < 1;\nloop invariant i8: k >= 0;\n\n\n\n\n*/\nwhile ( k < 1) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    {;\n//@ assert( a <= m);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m <= 1;\nloop invariant 0 <= j <= 1;\nloop invariant a <= m;\nloop invariant a <= k;\nloop invariant a <= j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\nloop invariant i1: 0 <= k <= 1;\n\nloop invariant i3: 0 <= j <= 1;\n\n\n\n*/\nwhile ( k < 1) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    {;\n//@ assert( a <= m);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= m;\nloop invariant a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant (m < a) ==> a <= m;\nloop invariant 0 <= k <= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\nloop invariant i1: 0 <= k <= 1;\n\nloop invariant i3: a <= m ==> a * k <= m * k;\nloop invariant i4: a <= m ==> a * k <= m * k ==> a <= m;\n\n*/\nwhile ( k < 1) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    {;\n//@ assert( a <= m);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant j == 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant k >= 1;\nloop invariant m >= a;\nloop invariant k >= 1;\nloop invariant m >= a;\nloop invariant a <= m;\nloop invariant m >= a;\nloop invariant m >= a;\nloop invariant j == 0;\nloop invariant k >= 0;\nloop invariant m >= 0;\nloop invariant k >= 1;\nloop invariant m >= a;\nloop invariant a <= m;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\nloop invariant i1: j == 0;\nloop invariant i2: k >= 0;\n\n\n\n\n*/\nwhile ( k < 1) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    {;\n//@ assert( a <= m);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= 1; k == 0 ==> k < 1;\nloop invariant 0 <= a <= m; a == 0 ==> a <= m;\nloop invariant m >= a; m == a ==> m >= a;\nloop invariant k >= 0; k == 1 ==> k >= 0;\nloop invariant a >= 0; a == 1 ==> a >= 0;\nloop invariant m >= 0; m == 1 ==> m >= 0;\nloop invariant k == 1 ==> m >= a;\nloop invariant k == 1 ==> a >= 0;\nloop invariant k == 1 ==> m >= 0;\nloop invariant k == 1 ==> a <= m;\nloop invariant k == 1 ==> m >= a;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\n\n\n\n\n\n\nloop invariant i7: k == 1 ==> m >= a;\n\n\nloop invariant i10: k == 1 ==> a <= m;\n*/\nwhile ( k < 1) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    {;\n//@ assert( a <= m);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= 1;\nloop invariant a <= m;\nloop invariant m >= a;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\nloop invariant m >= m;\nloop invariant a <= a;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\nloop invariant i1: 0 <= k <= 1;\n\n\nloop invariant i4: a <= a;\nloop invariant i5: m >= m;\n*/\nwhile ( k < 1) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    {;\n//@ assert( a <= m);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= 1;\nloop invariant 0 <= k <= 1;\nloop invariant j + k <= 1;\nloop invariant k < 1 ==> a <= m;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\nloop invariant i1: 0 <= j <= 1;\nloop invariant i2: 0 <= k <= 1;\n\n\n*/\nwhile ( k < 1) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    {;\n//@ assert( a <= m);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 17,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= 1;\nloop invariant m >= a;\nloop invariant m >= k;\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= a));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a));\nloop invariant (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\nloop invariant i1: 0 <= k <= 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ( k < 1) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    {;\n//@ assert( a <= m);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant a >= j;\nloop invariant a >= m;\nloop invariant m >= j;\nloop invariant m >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant k <= 1;\nloop invariant k < 1 ==> m <= a;\nloop invariant k < 1 ==> m == a;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\n\n\n\n\nloop invariant i5: j >= 0;\nloop invariant i6: k >= 0;\nloop invariant i7: k <= 1;\n\n\n*/\nwhile ( k < 1) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    {;\n//@ assert( a <= m);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= 1;\nloop invariant a <= m ==> a <= m;\nloop invariant a <= m ==> k == 1;\nloop invariant 0 <= k <= 1;\nloop invariant a <= m ==> a <= m;\nloop invariant a <= m ==> k == 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\nloop invariant i1: 0 <= k <= 1;\nloop invariant i2: a <= m ==> a <= m;\n\n*/\nwhile ( k < 1) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    {;\n//@ assert( a <= m);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= 1;\nloop invariant 0 <= j <= 1;\nloop invariant 0 <= m <= a;\nloop invariant a <= m ==> (m == a);\nloop invariant a > m ==> (m == a);\nloop invariant 0 <= j < k ==> (m == a);\nloop invariant 0 <= k < j ==> (m == a);\nloop invariant k >= j ==> (m == a);\nloop invariant k == j ==> (m == a);\nloop invariant k == 0 ==> (m == a);\nloop invariant k == 1 ==> (m >= a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\nloop invariant k == 1 ==> (m == a);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\nloop invariant i1: 0 <= k <= 1;\nloop invariant i2: 0 <= j <= 1;\n\n\n\n\nloop invariant i7: 0 <= k < j ==> (m == a);\n\n\n\nloop invariant i11: k == 1 ==> (m >= a);\n\n*/\nwhile ( k < 1) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    {;\n//@ assert( a <= m);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= 1;\nloop invariant (k == 1 ==> m >= a);\nloop invariant (k == 0 ==> m == a);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\nloop invariant i1: 0 <= k <= 1;\nloop invariant i2: (k == 1 ==> m >= a);\n\n*/\nwhile ( k < 1) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    {;\n//@ assert( a <= m);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\nloop invariant i1: 0 <= k <= 1;\n*/\nwhile ( k < 1) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    {;\n//@ assert( a <= m);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 41: unexpected token 'k'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\nloop invariant i1: 0 <= k < 1;\nloop invariant i2: m >= a;\nloop invariant i3: a >= m;\nloop invariant i4: a >= 0;\nloop invariant i5: m >= 0;\nloop invariant i6: k >= 0;\nloop invariant i7: 0 <= k <= 1;\nloop invariant i8: m >= (a + k - 1);\nloop invariant i9: m >= k;\nloop invariant i10: 1 <= k <= 1;\nloop invariant i11: k > 0;\nloop invariant i12: m <= a;\nloop invariant i13: j >= 0;\nloop invariant i14: j < 1;\nloop invariant i15: k < 1;\nloop invariant i16: a <= m;\nloop invariant i17: m >= j;\nloop invariant i18: 0 <= m <= 1;\nloop invariant i19: 0 <= j <= 1;\nloop invariant i20: a <= k;\nloop invariant i21: a <= j;\nloop invariant i22: 0 <= m;\nloop invariant i23: a <= m ==> a * k <= m * k;\nloop invariant i24: a <= m ==> a * k <= m * k ==> a <= m;\nloop invariant i25: (m < a) ==> a <= m;\nloop invariant i26: j == 0;\nloop invariant i27: k >= 1;\nloop invariant i28: 0 <= k <= 1; k == 0 ==> k < 1;\nloop invariant i29: 0 <= a <= m; a == 0 ==> a <= m;\nloop invariant i30: m >= a; m == a ==> m >= a;\nloop invariant i31: k >= 0; k == 1 ==> k >= 0;\nloop invariant i32: a >= 0; a == 1 ==> a >= 0;\nloop invariant i33: m >= 0; m == 1 ==> m >= 0;\nloop invariant i34: k == 1 ==> m >= a;\nloop invariant i35: k == 1 ==> a >= 0;\nloop invariant i36: k == 1 ==> m >= 0;\nloop invariant i37: k == 1 ==> a <= m;\nloop invariant i38: a <= a;\nloop invariant i39: m >= m;\nloop invariant i40: j + k <= 1;\nloop invariant i41: k < 1 ==> a <= m;\nloop invariant i42: (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k));\nloop invariant i43: (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k));\nloop invariant i44: (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= a));\nloop invariant i45: (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a));\nloop invariant i46: (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k));\nloop invariant i47: (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a));\nloop invariant i48: (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k));\nloop invariant i49: (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a));\nloop invariant i50: (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k));\nloop invariant i51: (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a));\nloop invariant i52: (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k));\nloop invariant i53: (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a));\nloop invariant i54: (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k));\nloop invariant i55: (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a));\nloop invariant i56: (if (k < 1) then (m >= a) else (m >= a) ==> (m >= k) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k) ==> (m >= a) ==> (m >= k));\nloop invariant i57: a >= j;\nloop invariant i58: k <= 1;\nloop invariant i59: k < 1 ==> m <= a;\nloop invariant i60: k < 1 ==> m == a;\nloop invariant i61: a <= m ==> a <= m;\nloop invariant i62: a <= m ==> k == 1;\nloop invariant i63: 0 <= m <= a;\nloop invariant i64: a <= m ==> (m == a);\nloop invariant i65: a > m ==> (m == a);\nloop invariant i66: 0 <= j < k ==> (m == a);\nloop invariant i67: 0 <= k < j ==> (m == a);\nloop invariant i68: k >= j ==> (m == a);\nloop invariant i69: k == j ==> (m == a);\nloop invariant i70: k == 0 ==> (m == a);\nloop invariant i71: k == 1 ==> (m >= a);\nloop invariant i72: k == 1 ==> (m == a);\nloop invariant i73: (k == 1 ==> m >= a);\nloop invariant i74: (k == 0 ==> m == a);\n*/\nwhile ( k < 1) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    {;\n//@ assert( a <= m);\n}\n\n}",
        "combined_annotation_num_solver_calls": 35,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int a,m,j,k;\n\n    j = 0;\n    k = 0;\n\n    /*@\n\n\n\n\n\nloop invariant i6: k >= 0;\nloop invariant i7: 0 <= k <= 1;\n\n\n\n\n\nloop invariant i13: j >= 0;\nloop invariant i14: j < 1;\n\n\n\n\nloop invariant i19: 0 <= j <= 1;\n\n\n\nloop invariant i23: a <= m ==> a * k <= m * k;\nloop invariant i24: a <= m ==> a * k <= m * k ==> a <= m;\n\nloop invariant i26: j == 0;\n\n\n\n\n\n\n\nloop invariant i34: k == 1 ==> m >= a;\n\n\nloop invariant i37: k == 1 ==> a <= m;\nloop invariant i38: a <= a;\nloop invariant i39: m >= m;\nloop invariant i40: j + k <= 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i58: k <= 1;\n\n\nloop invariant i61: a <= m ==> a <= m;\n\n\n\n\n\nloop invariant i67: 0 <= k < j ==> (m == a);\n\n\n\nloop invariant i71: k == 1 ==> (m >= a);\n\nloop invariant i73: (k == 1 ==> m >= a);\n\n*/\nwhile ( k < 1) {\n        if(m < a) {\n            m = a;\n        }\n        k = k + 1;\n    }\n\n    {;\n//@ assert( a <= m);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/popl.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/05.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/07.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/37.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/39.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv_simp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/xy10.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/const_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe3.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe4.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbr.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbrprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bk-nat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bkley.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/efm.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/ex1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnatprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifo.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/seesaw.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/ken-imp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/rajamani_1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/simple.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/simple_if.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/up-nested.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/count_up_down_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/for_infinite_loop_1_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/for_infinite_loop_2_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/sum03_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/sum04_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/terminator_02_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/trex03_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/while_infinite_loop_1_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/while_infinite_loop_2_true.c",
            "../dataset/loop_invariants/code2inv/1.c",
            "../dataset/loop_invariants/code2inv/10.c",
            "../dataset/loop_invariants/code2inv/100.c",
            "../dataset/loop_invariants/code2inv/103.c",
            "../dataset/loop_invariants/code2inv/107.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/pldi082_unbounded.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_unsafe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/sum01_true.c",
            "../dataset/loop_invariants/code2inv/102.c"
        ],
        "skipped": [],
        "total": 188,
        "success_count": 159,
        "failure_count": 29,
        "success_rate": 0.8457446808510638
    }
}