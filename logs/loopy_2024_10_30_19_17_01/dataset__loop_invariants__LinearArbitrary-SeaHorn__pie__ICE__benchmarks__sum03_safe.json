{
    "logs": {
        "file": "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  while(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= sn <= n1;\nloop invariant 0 <= x <= loop1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= sn <= x * 1 + 1;\nloop invariant sn >= 0;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= sn <= n1 + 1;\nloop invariant 0 <= x <= n1 + sn - 1;\nloop invariant sn * sn == x * x + loop1 * (sn + 1) * 2;\nloop invariant x * x == sn * sn - loop1 * (sn + 1) * 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= UInteger_max;\n*/\n```",
            "```\n/*@\nloop invariant sn <= x * 1;\nloop invariant sn == x * 1 || sn == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= sn <= 1;\nloop invariant 0 <= x <= 1;\nloop invariant sn == x * 1 || sn == 0;\nloop invariant 0 <= sn <= 1;\nloop invariant 0 <= x <= 1;\nloop invariant sn == x * 1 || sn == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= sn <= x;\nloop invariant 0 <= x;\nloop invariant sn == x * 1 || sn == 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= sn <= 1 + x;\nloop invariant x >= 1;\nloop invariant sn >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 1 <= sn;\nloop invariant sn == x * 1 || sn == 0;\nloop invariant x <= sn;\nloop invariant sn >= x;\nloop invariant sn <= 2;\nloop invariant x <= 2;\nloop invariant sn == x + 1 || sn == 0;\nloop invariant sn == 1;\nloop invariant x == 1;\nloop invariant sn == 2;\nloop invariant x == 2;\nloop invariant sn == 3;\nloop invariant x == 3;\nloop invariant sn == 4;\nloop invariant x == 4;\nloop invariant sn == 5;\nloop invariant x == 5;\nloop invariant sn == 6;\nloop invariant x == 6;\nloop invariant sn == 7;\nloop invariant x == 7;\nloop invariant sn == 8;\nloop invariant x == 8;\nloop invariant sn == 9;\nloop invariant x == 9;\nloop invariant sn == 10;\nloop invariant x == 10;\nloop invariant sn == 11;\nloop invariant x == 11;\nloop invariant sn == 12;\nloop invariant x == 12;\nloop invariant sn == 13;\nloop invariant x == 13;\nloop invariant sn == 14;\nloop invariant x == 14;\nloop invariant sn == 15;\nloop invariant x == 15;\nloop invariant sn == 16;\nloop invariant x == 16;\nloop invariant sn == 17;\nloop invariant x == 17;\nloop invariant sn == 18;\nloop invariant x == 18;\nloop invariant sn == 19;\nloop invariant x == 19;\nloop invariant sn == 20;\nloop invariant x == 20;\nloop invariant sn == 21;\nloop invariant x == 21;\nloop invariant sn == 22;\nloop invariant x == 22;\nloop invariant sn == 23;\nloop invariant x == 23;\nloop invariant sn == 24;\nloop invariant x == 24;\nloop invariant sn == 25;\nloop invariant x == 25;\nloop invariant sn == 26;\nloop invariant x == 26;\nloop invariant sn == 27;\nloop invariant x == 27;\nloop invariant sn == 28;\nloop invariant x == 28;\nloop invariant sn == 29;\nloop invariant x == 29;\nloop invariant sn == 30;\nloop invariant x == 30;\nloop invariant sn == 31;\nloop invariant x == 31;\nloop invariant sn == 32;\nloop invariant x == 32;\nloop invariant sn == 33;\nloop invariant x == 33;\nloop invariant sn == 34;\nloop invariant x == 34;\nloop invariant sn == 35;\nloop invariant x == 35;\nloop invariant sn == 36;\nloop invariant x == 36;\nloop invariant sn == 37;\nloop invariant x == 37;\nloop invariant sn == 38;\nloop invariant x == 38;\nloop invariant sn == 39;\nloop invariant x == 39;\nloop invariant sn == 40;\nloop invariant x == 40;\nloop invariant sn == 41;\nloop invariant x == 41;\nloop invariant sn == 42;\nloop invariant x == 42;\nloop invariant sn == 43;\nloop invariant x == 43;\nloop invariant sn == 44;\nloop invariant x == 44;\nloop invariant sn == 45;\nloop invariant x == 45;\nloop invariant sn == 46;\nloop invariant x == 46;\nloop invariant sn == 47;\nloop invariant x == 47;\nloop invariant sn == 48;\nloop invariant x == 48;\nloop invariant sn == 49;\nloop invariant x == 49;\nloop invariant sn == 50;\nloop invariant x == 50;\nloop invariant sn == 51;\nloop invariant x == 51;\nloop invariant sn == 52;\nloop invariant x == 52;\nloop invariant sn == 53;\nloop invariant x == 53;\nloop invariant sn == 54;\nloop invariant x == 54;\nloop invariant sn == 55;\nloop invariant x == 55;\nloop invariant sn == 56;\nloop invariant x == 56;\nloop invariant sn == 57;\nloop invariant x == 57;\nloop invariant sn == 58;\nloop invariant x == 58;\nloop invariant sn == 59;\nloop invariant x == 59;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= sn <= x+1;\nloop invariant x == sn - 1;\nloop invariant 1 <= x <= n1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= sn <= sn + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= sn <= x * 1 || sn == 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= sn <= x*1;\nloop invariant sn == x*1 || sn == 0;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= sn <= x + 1;\nloop invariant sn == 0 || sn == x + 1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= sn <= n1 + 1;\nloop invariant 0 <= x <= n1;\nloop invariant x == sn - 1;\nloop invariant sn >= 1;\nloop invariant sn <= n1 + 1;\nloop invariant x == sn - 1 ==> sn == x + 1;\nloop invariant x == sn - 1 ==> sn == n1 + 1;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= sn <= n1;\nloop invariant 0 <= x <= loop1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\n\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= sn <= x * 1 + 1;\nloop invariant sn >= 0;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: 0 <= sn <= x * 1 + 1;\nloop invariant i2: sn >= 0;\nloop invariant i3: x >= 0;\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= sn <= n1 + 1;\nloop invariant 0 <= x <= n1 + sn - 1;\nloop invariant sn * sn == x * x + loop1 * (sn + 1) * 2;\nloop invariant x * x == sn * sn - loop1 * (sn + 1) * 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\n\n\n\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= UInteger_max;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant sn <= x * 1;\nloop invariant sn == x * 1 || sn == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: sn <= x * 1;\nloop invariant i2: sn == x * 1 || sn == 0;\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= sn <= 1;\nloop invariant 0 <= x <= 1;\nloop invariant sn == x * 1 || sn == 0;\nloop invariant 0 <= sn <= 1;\nloop invariant 0 <= x <= 1;\nloop invariant sn == x * 1 || sn == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\n\nloop invariant i3: sn == x * 1 || sn == 0;\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= sn <= x;\nloop invariant 0 <= x;\nloop invariant sn == x * 1 || sn == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: 0 <= sn <= x;\nloop invariant i2: 0 <= x;\nloop invariant i3: sn == x * 1 || sn == 0;\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= sn <= 1 + x;\nloop invariant x >= 1;\nloop invariant sn >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\n\nloop invariant i3: sn >= 0;\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 122,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 1 <= sn;\nloop invariant sn == x * 1 || sn == 0;\nloop invariant x <= sn;\nloop invariant sn >= x;\nloop invariant sn <= 2;\nloop invariant x <= 2;\nloop invariant sn == x + 1 || sn == 0;\nloop invariant sn == 1;\nloop invariant x == 1;\nloop invariant sn == 2;\nloop invariant x == 2;\nloop invariant sn == 3;\nloop invariant x == 3;\nloop invariant sn == 4;\nloop invariant x == 4;\nloop invariant sn == 5;\nloop invariant x == 5;\nloop invariant sn == 6;\nloop invariant x == 6;\nloop invariant sn == 7;\nloop invariant x == 7;\nloop invariant sn == 8;\nloop invariant x == 8;\nloop invariant sn == 9;\nloop invariant x == 9;\nloop invariant sn == 10;\nloop invariant x == 10;\nloop invariant sn == 11;\nloop invariant x == 11;\nloop invariant sn == 12;\nloop invariant x == 12;\nloop invariant sn == 13;\nloop invariant x == 13;\nloop invariant sn == 14;\nloop invariant x == 14;\nloop invariant sn == 15;\nloop invariant x == 15;\nloop invariant sn == 16;\nloop invariant x == 16;\nloop invariant sn == 17;\nloop invariant x == 17;\nloop invariant sn == 18;\nloop invariant x == 18;\nloop invariant sn == 19;\nloop invariant x == 19;\nloop invariant sn == 20;\nloop invariant x == 20;\nloop invariant sn == 21;\nloop invariant x == 21;\nloop invariant sn == 22;\nloop invariant x == 22;\nloop invariant sn == 23;\nloop invariant x == 23;\nloop invariant sn == 24;\nloop invariant x == 24;\nloop invariant sn == 25;\nloop invariant x == 25;\nloop invariant sn == 26;\nloop invariant x == 26;\nloop invariant sn == 27;\nloop invariant x == 27;\nloop invariant sn == 28;\nloop invariant x == 28;\nloop invariant sn == 29;\nloop invariant x == 29;\nloop invariant sn == 30;\nloop invariant x == 30;\nloop invariant sn == 31;\nloop invariant x == 31;\nloop invariant sn == 32;\nloop invariant x == 32;\nloop invariant sn == 33;\nloop invariant x == 33;\nloop invariant sn == 34;\nloop invariant x == 34;\nloop invariant sn == 35;\nloop invariant x == 35;\nloop invariant sn == 36;\nloop invariant x == 36;\nloop invariant sn == 37;\nloop invariant x == 37;\nloop invariant sn == 38;\nloop invariant x == 38;\nloop invariant sn == 39;\nloop invariant x == 39;\nloop invariant sn == 40;\nloop invariant x == 40;\nloop invariant sn == 41;\nloop invariant x == 41;\nloop invariant sn == 42;\nloop invariant x == 42;\nloop invariant sn == 43;\nloop invariant x == 43;\nloop invariant sn == 44;\nloop invariant x == 44;\nloop invariant sn == 45;\nloop invariant x == 45;\nloop invariant sn == 46;\nloop invariant x == 46;\nloop invariant sn == 47;\nloop invariant x == 47;\nloop invariant sn == 48;\nloop invariant x == 48;\nloop invariant sn == 49;\nloop invariant x == 49;\nloop invariant sn == 50;\nloop invariant x == 50;\nloop invariant sn == 51;\nloop invariant x == 51;\nloop invariant sn == 52;\nloop invariant x == 52;\nloop invariant sn == 53;\nloop invariant x == 53;\nloop invariant sn == 54;\nloop invariant x == 54;\nloop invariant sn == 55;\nloop invariant x == 55;\nloop invariant sn == 56;\nloop invariant x == 56;\nloop invariant sn == 57;\nloop invariant x == 57;\nloop invariant sn == 58;\nloop invariant x == 58;\nloop invariant sn == 59;\nloop invariant x == 59;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: 0 <= x;\n\nloop invariant i3: sn == x * 1 || sn == 0;\nloop invariant i4: x <= sn;\nloop invariant i5: sn >= x;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= sn <= x+1;\nloop invariant x == sn - 1;\nloop invariant 1 <= x <= n1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\n\n\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= sn <= sn + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: 0 <= sn <= sn + 1;\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= sn <= x * 1 || sn == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: 0 <= sn <= x * 1 || sn == 0;\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= sn <= x*1;\nloop invariant sn == x*1 || sn == 0;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\nloop invariant i2: sn == x*1 || sn == 0;\nloop invariant i3: x >= 0;\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= sn <= x + 1;\nloop invariant sn == 0 || sn == x + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\n\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 1 <= sn <= n1 + 1;\nloop invariant 0 <= x <= n1;\nloop invariant x == sn - 1;\nloop invariant sn >= 1;\nloop invariant sn <= n1 + 1;\nloop invariant x == sn - 1 ==> sn == x + 1;\nloop invariant x == sn - 1 ==> sn == n1 + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\n\n\n\n\nloop invariant i6: x == sn - 1 ==> sn == x + 1;\nloop invariant i7: x == sn - 1 ==> sn == n1 + 1;\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 24: unbound logic variable UInteger_max. Ignoring loop annotation",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\nloop invariant i1: 0 <= sn <= n1;\nloop invariant i2: 0 <= x <= loop1;\nloop invariant i3: 0 <= sn <= x * 1 + 1;\nloop invariant i4: sn >= 0;\nloop invariant i5: x >= 0;\nloop invariant i6: 0 <= sn <= n1 + 1;\nloop invariant i7: 0 <= x <= n1 + sn - 1;\nloop invariant i8: sn * sn == x * x + loop1 * (sn + 1) * 2;\nloop invariant i9: x * x == sn * sn - loop1 * (sn + 1) * 2;\nloop invariant i10: 0 <= x <= UInteger_max;\nloop invariant i11: sn <= x * 1;\nloop invariant i12: sn == x * 1 || sn == 0;\nloop invariant i13: 0 <= sn <= 1;\nloop invariant i14: 0 <= x <= 1;\nloop invariant i15: 0 <= sn <= x;\nloop invariant i16: 0 <= x;\nloop invariant i17: 1 <= sn <= 1 + x;\nloop invariant i18: x >= 1;\nloop invariant i19: 1 <= sn;\nloop invariant i20: x <= sn;\nloop invariant i21: sn >= x;\nloop invariant i22: sn <= 2;\nloop invariant i23: x <= 2;\nloop invariant i24: sn == x + 1 || sn == 0;\nloop invariant i25: sn == 1;\nloop invariant i26: x == 1;\nloop invariant i27: sn == 2;\nloop invariant i28: x == 2;\nloop invariant i29: sn == 3;\nloop invariant i30: x == 3;\nloop invariant i31: sn == 4;\nloop invariant i32: x == 4;\nloop invariant i33: sn == 5;\nloop invariant i34: x == 5;\nloop invariant i35: sn == 6;\nloop invariant i36: x == 6;\nloop invariant i37: sn == 7;\nloop invariant i38: x == 7;\nloop invariant i39: sn == 8;\nloop invariant i40: x == 8;\nloop invariant i41: sn == 9;\nloop invariant i42: x == 9;\nloop invariant i43: sn == 10;\nloop invariant i44: x == 10;\nloop invariant i45: sn == 11;\nloop invariant i46: x == 11;\nloop invariant i47: sn == 12;\nloop invariant i48: x == 12;\nloop invariant i49: sn == 13;\nloop invariant i50: x == 13;\nloop invariant i51: sn == 14;\nloop invariant i52: x == 14;\nloop invariant i53: sn == 15;\nloop invariant i54: x == 15;\nloop invariant i55: sn == 16;\nloop invariant i56: x == 16;\nloop invariant i57: sn == 17;\nloop invariant i58: x == 17;\nloop invariant i59: sn == 18;\nloop invariant i60: x == 18;\nloop invariant i61: sn == 19;\nloop invariant i62: x == 19;\nloop invariant i63: sn == 20;\nloop invariant i64: x == 20;\nloop invariant i65: sn == 21;\nloop invariant i66: x == 21;\nloop invariant i67: sn == 22;\nloop invariant i68: x == 22;\nloop invariant i69: sn == 23;\nloop invariant i70: x == 23;\nloop invariant i71: sn == 24;\nloop invariant i72: x == 24;\nloop invariant i73: sn == 25;\nloop invariant i74: x == 25;\nloop invariant i75: sn == 26;\nloop invariant i76: x == 26;\nloop invariant i77: sn == 27;\nloop invariant i78: x == 27;\nloop invariant i79: sn == 28;\nloop invariant i80: x == 28;\nloop invariant i81: sn == 29;\nloop invariant i82: x == 29;\nloop invariant i83: sn == 30;\nloop invariant i84: x == 30;\nloop invariant i85: sn == 31;\nloop invariant i86: x == 31;\nloop invariant i87: sn == 32;\nloop invariant i88: x == 32;\nloop invariant i89: sn == 33;\nloop invariant i90: x == 33;\nloop invariant i91: sn == 34;\nloop invariant i92: x == 34;\nloop invariant i93: sn == 35;\nloop invariant i94: x == 35;\nloop invariant i95: sn == 36;\nloop invariant i96: x == 36;\nloop invariant i97: sn == 37;\nloop invariant i98: x == 37;\nloop invariant i99: sn == 38;\nloop invariant i100: x == 38;\nloop invariant i101: sn == 39;\nloop invariant i102: x == 39;\nloop invariant i103: sn == 40;\nloop invariant i104: x == 40;\nloop invariant i105: sn == 41;\nloop invariant i106: x == 41;\nloop invariant i107: sn == 42;\nloop invariant i108: x == 42;\nloop invariant i109: sn == 43;\nloop invariant i110: x == 43;\nloop invariant i111: sn == 44;\nloop invariant i112: x == 44;\nloop invariant i113: sn == 45;\nloop invariant i114: x == 45;\nloop invariant i115: sn == 46;\nloop invariant i116: x == 46;\nloop invariant i117: sn == 47;\nloop invariant i118: x == 47;\nloop invariant i119: sn == 48;\nloop invariant i120: x == 48;\nloop invariant i121: sn == 49;\nloop invariant i122: x == 49;\nloop invariant i123: sn == 50;\nloop invariant i124: x == 50;\nloop invariant i125: sn == 51;\nloop invariant i126: x == 51;\nloop invariant i127: sn == 52;\nloop invariant i128: x == 52;\nloop invariant i129: sn == 53;\nloop invariant i130: x == 53;\nloop invariant i131: sn == 54;\nloop invariant i132: x == 54;\nloop invariant i133: sn == 55;\nloop invariant i134: x == 55;\nloop invariant i135: sn == 56;\nloop invariant i136: x == 56;\nloop invariant i137: sn == 57;\nloop invariant i138: x == 57;\nloop invariant i139: sn == 58;\nloop invariant i140: x == 58;\nloop invariant i141: sn == 59;\nloop invariant i142: x == 59;\nloop invariant i143: 1 <= sn <= x+1;\nloop invariant i144: x == sn - 1;\nloop invariant i145: 1 <= x <= n1;\nloop invariant i146: 0 <= sn <= sn + 1;\nloop invariant i147: 0 <= sn <= x * 1 || sn == 0;\nloop invariant i148: 1 <= sn <= x*1;\nloop invariant i149: sn == x*1 || sn == 0;\nloop invariant i150: 1 <= sn <= x + 1;\nloop invariant i151: sn == 0 || sn == x + 1;\nloop invariant i152: 1 <= sn <= n1 + 1;\nloop invariant i153: 0 <= x <= n1;\nloop invariant i154: sn >= 1;\nloop invariant i155: sn <= n1 + 1;\nloop invariant i156: x == sn - 1 ==> sn == x + 1;\nloop invariant i157: x == sn - 1 ==> sn == n1 + 1;\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
        "combined_annotation_num_solver_calls": 136,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main() { \n  int sn=0;\n  unsigned int loop1=unknown_uint(), n1=unknown_uint();\n  unsigned int x=0;\n\n  /*@\n\n\nloop invariant i3: 0 <= sn <= x * 1 + 1;\nloop invariant i4: sn >= 0;\nloop invariant i5: x >= 0;\n\n\n\n\n\nloop invariant i11: sn <= x * 1;\nloop invariant i12: sn == x * 1 || sn == 0;\n\n\nloop invariant i15: 0 <= sn <= x;\nloop invariant i16: 0 <= x;\n\n\n\nloop invariant i20: x <= sn;\nloop invariant i21: sn >= x;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i146: 0 <= sn <= sn + 1;\nloop invariant i147: 0 <= sn <= x * 1 || sn == 0;\n\nloop invariant i149: sn == x*1 || sn == 0;\n\n\n\n\n\n\nloop invariant i156: x == sn - 1 ==> sn == x + 1;\nloop invariant i157: x == sn - 1 ==> sn == n1 + 1;\n*/\nwhile(1){\n    sn = sn + 1;\n    x++;\n    {;\n//@ assert(sn==x*1 || sn == 0);\n}\n\n  }\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c"
        ],
        "skipped": [],
        "total": 91,
        "success_count": 77,
        "failure_count": 14,
        "success_rate": 0.8461538461538461
    }
}