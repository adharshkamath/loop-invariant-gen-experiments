{
    "logs": {
        "file": "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/trex03_true.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  while(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant c1 == 0 || c2 == 0;\nloop invariant x1 >= d1 || c1 == 0;\nloop invariant x2 >= d2 || c2 == 0;\nloop invariant x3 >= d3 || c2 == 0;\nloop invariant x1 >= x2 || c2 == 0;\nloop invariant x1 >= x3 || c2 == 0;\nloop invariant x2 >= x3 || c1 == 0;\nloop invariant x2 >= x1 || c1 == 0;\nloop invariant x3 >= x1 || c1 == 0;\nloop invariant x3 >= x2 || c1 == 0;\nloop invariant x1 >= d1 + d2 || c2 == 0;\nloop invariant x1 >= d1 + d3 || c2 == 0;\nloop invariant x2 >= d2 + d1 || c1 == 0;\nloop invariant x2 >= d2 + d3 || c1 == 0;\nloop invariant x3 >= d3 + d1 || c1 == 0;\nloop invariant x3 >= d3 + d2 || c1 == 0;\nloop invariant x1 >= x2 + x3 || c2 == 0;\nloop invariant x2 >= x1 + x3 || c1 == 0;\nloop invariant x3 >= x1 + x2 || c1 == 0;\nloop invariant x1 >= x2 + x3 + d1 || c2 == 0;\nloop invariant x2 >= x1 + x3 + d2 || c1 == 0;\nloop invariant x3 >= x1 + x2 + d3 || c1 == 0;\nloop invariant x1 >= x2 + x3 + d1 + d2 || c2 == 0;\nloop invariant x2 >= x1 + x3 + d2 + d3 || c1 == 0;\nloop invariant x3 >= x1 + x2 + d3 + d1 || c1 == 0;\nloop invariant x1 >= x2 + x3 + d1 + d2 + d3 || c2 == 0;\nloop invariant x2 >= x1 + x3 + d2 + d3 + d1 || c1 == 0;\nloop invariant x3 >= x1 + x2 + d3 + d1 + d2 || c1 == 0;\nloop invariant x1 >= x2 + x3 + d1 + d2 + d3 + x1 || c2 == 0;\nloop invariant x2 >= x1 + x3 + d2 + d3 + d1 + x2 || c1 == 0;\nloop invariant x3 >= x1 + x2 + d3 + d1 + d2 + x3 || c1 == 0;\nloop invariant x1 >= x2 + x3 + d1 + d2 + d3 + x1 + x2 || c2 == 0;\nloop invariant x2 >= x1 + x3 + d2 + d3 + d1 + x2 + x3 || c1 == 0;\nloop invariant x3 >= x1 + x2 + d3 + d1 + d2 + x3 + x2 || c1 == 0;\nloop invariant x1 >= x2 + x3 + d1 + d2 + d3 + x1 + x2 + x3 || c2 == 0;\nloop invariant x2 >= x1 + x3 + d2 + d3 + d1 + x2 + x3 + x1 || c1 == 0;\nloop invariant x3 >= x1 + x2 + d3 + d1 + d2 + x3 + x2 + x1 || c1 == 0;\nloop invariant x1 >= x2 + x3 + d1 + d2 + d3 + x1 + x2 + x3 + x1 || c2 == 0;\nloop invariant x2 >= x1 + x3 + d2 + d3 + d1 + x2 + x3 + x1 + x2 || c1 == 0;\nloop invariant x3 >= x1 + x2 + d3 + d1 + d2 + x3 + x2 + x1 + x3 || c1 == 0;\nloop invariant x1 >= x2 + x3 + d1 + d2 + d3 + x1 + x2 + x3 + x1 + x2 || c2 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant 0 <= c1 <= 1;\nloop invariant 0 <= c2 <= 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 > 0 ==> d1 > 0;\nloop invariant x2 > 0 ==> d2 > 0;\nloop invariant x3 > 0 ==> d3 > 0;\nloop invariant x1 >= d1 ==> x1 >= 0;\nloop invariant x2 >= d2 ==> x2 >= 0;\nloop invariant x3 >= d3 ==> x3 >= 0;\nloop invariant x1 <= unknown_uint() ==> x1 <= unknown_uint();\nloop invariant x2 <= unknown_uint() ==> x2 <= unknown_uint();\nloop invariant x3 <= unknown_uint() ==> x3 <= unknown_uint();\nloop invariant d1 <= unknown_uint() ==> d1 <= unknown_uint();\nloop invariant d2 <= unknown_uint() ==> d2 <= unknown_uint();\nloop invariant d3 <= unknown_uint() ==> d3 <= unknown_uint();\nloop invariant c1 <= 1 ==> c1 <= 1;\nloop invariant c2 <= 1 ==> c2 <= 1;\nloop invariant x1 <= unknown_uint() ==> x1 <= unknown_uint();\nloop invariant x2 <= unknown_uint() ==> x2 <= unknown_uint();\nloop invariant x3 <= unknown_uint() ==> x3 <= unknown_uint();\nloop invariant d1 <= unknown_uint() ==> d1 <= unknown_uint();\nloop invariant d2 <= unknown_uint() ==> d2 <= unknown_uint();\nloop invariant d3 <= unknown_uint() ==> d3 <= unknown_uint();\nloop invariant c1 <= 1 ==> c1 <= 1;\nloop invariant c2 <= 1 ==> c2 <= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= d1;\nloop invariant 0 <= x2 <= d2;\nloop invariant 0 <= x3 <= d3;\nloop invariant 0 <= d1 <= x1;\nloop invariant 0 <= d2 <= x2;\nloop invariant 0 <= d3 <= x3;\nloop invariant x1 == d1 ==> c1 == 1;\nloop invariant x2 == d2 ==> c2 == 1;\nloop invariant x3 == d3 ==> !(c1 || c2);\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0;\nloop invariant x1 == d1 ==> c1 == 1;\nloop invariant x2 == d2 ==> c2 == 1;\nloop invariant x3 == d3 ==> !(c1 || c2);\nloop invariant (x1 > 0 || x2 > 0 || x3 > 0) ==> (d1 > 0 && d2 > 0 && d3 > 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant unknown_uint() <= x2 <= unknown_uint();\nloop invariant unknown_uint() <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= 1;\nloop invariant 1 <= d2 <= 1;\nloop invariant 1 <= d3 <= 1;\nloop invariant x1 >= unknown_uint() - (unknown_uint() - x1) * (unknown_uint() - x1 + 1) / 2;\nloop invariant x2 >= unknown_uint() - (unknown_uint() - x2) * (unknown_uint() - x2 + 1) / 2;\nloop invariant x3 >= unknown_uint() - (unknown_uint() - x3) * (unknown_uint() - x3 + 1) / 2;\nloop invariant 0 <= unknown_uint() - x1 <= unknown_uint();\nloop invariant 0 <= unknown_uint() - x2 <= unknown_uint();\nloop invariant 0 <= unknown_uint() - x3 <= unknown_uint();\nloop invariant 0 <= 1 - d1 <= 1;\nloop invariant 0 <= 1 - d2 <= 1;\nloop invariant 0 <= 1 - d3 <= 1;\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (c1 || c2);\nloop invariant (c1 && c2) ==> (x1 == x2 && x2 == x3);\nloop invariant (c1 && c2) ==> (x1 == x2 && x2 == x3);\nloop invariant (c1 && c2) ==> (x1 == x2 && x2 == x3);\nloop invariant (c1 && c2 && x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 - d1 == x1 && x2 - d2 == x2 && x3 - d3 == x3);\nloop invariant (c1 && c2 && x1 == x2 && x2 == x3) ==> (x1 == x2 && x2 == x3);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 == 0 ==> x2 == 0 && x3 == 0;\nloop invariant x2 == 0 ==> x3 == 0;\nloop invariant x3 == 0 ==> x1 == 0;\nloop invariant x1 == 0 ==> x2 == 0 || x3 == 0;\nloop invariant x2 == 0 ==> x3 == 0 || x1 == 0;\nloop invariant x3 == 0 ==> x1 == 0 || x2 == 0;\nloop invariant x1 == 0 ==> x2 == 0 || x3 == 0 && x1 == 0;\nloop invariant x2 == 0 ==> x3 == 0 || x2 == 0 && x3 == 0;\nloop invariant x3 == 0 ==> x1 == 0 || x3 == 0 && x2 == 0;\nloop invariant x1 == 0 ==> x2 == 0 || x3 == 0 && x1 == 0 && x2 == 0;\nloop invariant x2 == 0 ==> x3 == 0 || x2 == 0 && x3 == 0 && x1 == 0;\nloop invariant x3 == 0 ==> x1 == 0 || x3 == 0 && x2 == 0 && x1 == 0;\nloop invariant x1 == 0 ==> x2 == 0 || x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0;\nloop invariant x2 == 0 ==> x3 == 0 || x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0;\nloop invariant x3 == 0 ==> x1 == 0 || x3 == 0 && x2 == 0 && x1 == 0 && x3 == 0;\nloop invariant x1 == 0 ==> x2 == 0 || x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0 && x1 == 0;\nloop invariant x2 == 0 ==> x3 == 0 || x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0;\nloop invariant x3 == 0 ==> x1 == 0 || x3 == 0 && x2 == 0 && x1 == 0 && x3 == 0 && x2 == 0;\nloop invariant x1 == 0 ==> x2 == 0 || x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0;\nloop invariant x2 == 0 ==> x3 == 0 || x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0 && x1 == 0;\nloop invariant x3 == 0 ==> x1 == 0 || x3 == 0 && x2 == 0 && x1 == 0 && x3 == 0 && x2 == 0 && x1 == 0;\nloop invariant x1 == 0 ==> x2 == 0 || x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0;\nloop invariant x2 == 0 ==> x3 == 0 || x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0;\nloop invariant x3 == 0 ==> x1 == 0 || x3 == 0 && x2 == 0 && x1 == 0 && x3 == 0 && x2 == 0 && x1 == 0 && x3 == 0;\nloop invariant x1 == 0 ==> x2 == 0 || x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0 && x1 == 0;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant (x1 - d1) >= 0 ==> (x1 >= d1);\nloop invariant (x2 - d2) >= 0 ==> (x2 >= d2);\nloop invariant (x3 - d3) >= 0 ==> (x3 >= d3);\nloop invariant x1 <= unknown_uint() ==> x1 - d1 <= unknown_uint();\nloop invariant x2 <= unknown_uint() ==> x2 - d2 <= unknown_uint();\nloop invariant x3 <= unknown_uint() ==> x3 - d3 <= unknown_uint();\nloop invariant (x1 - d1) >= 0 || (x1 - d1) <= 0 ==> x1 - d1 >= 0 || x1 - d1 <= 0;\nloop invariant (x2 - d2) >= 0 || (x2 - d2) <= 0 ==> x2 - d2 >= 0 || x2 - d2 <= 0;\nloop invariant (x3 - d3) >= 0 || (x3 - d3) <= 0 ==> x3 - d3 >= 0 || x3 - d3 <= 0;\nloop invariant (x1 - d1) >= 0 || (x1 - d1) <= 0 ==> x1 - d1 >= 0 || x1 - d1 <= 0;\nloop invariant (x2 - d2) >= 0 || (x2 - d2) <= 0 ==> x2 - d2 >= 0 || x2 - d2 <= 0;\nloop invariant (x3 - d3) >= 0 || (x3 - d3) <= 0 ==> x3 - d3 >= 0 || x3 - d3 <= 0;\nloop invariant (x1 - d1) >= 0 || (x1 - d1) <= 0 ==> x1 - d1 >= 0 || x1 - d1 <= 0;\nloop invariant (x2 - d2) >= 0 || (x2 - d2) <= 0 ==> x2 - d2 >= 0 || x2 - d2 <= 0;\nloop invariant (x3 - d3) >= 0 || (x3 - d3) <= 0 ==> x3 - d3 >= 0 || x3 - d3 <= 0;\nloop invariant (x1 - d1) >= 0 || (x1 - d1) <= 0 ==> x1 - d1 >= 0 || x1 - d1 <= 0;\nloop invariant (x2 - d2) >= 0 || (x2 - d2) <= 0 ==> x2 - d2 >= 0 || x2 - d2 <= 0;\nloop invariant (x3 - d3) >= 0 || (x3 - d3) <= 0 ==> x3 - d3 >= 0 || x3 - d3 <= 0;\nloop invariant (c1 == unknown_bool() ==> c1 == unknown_bool());\nloop invariant (c2 == unknown_bool() ==> c2 == unknown_bool());\nloop invariant (x1 - d1) >= 0 ==> x1 - d1 >= 0;\nloop invariant (x2 - d2) >= 0 ==> x2 - d2 >= 0;\nloop invariant (x3 - d3) >= 0 ==> x3 - d3 >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= d1 <= 1 && 1 <= d2 <= 1 && 1 <= d3 <= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0;\nloop invariant x1 >= d1 * (unknown_uint() + 1) ==> c1 == 1;\nloop invariant x2 >= d2 * (unknown_uint() + 1) ==> c2 == 1;\nloop invariant x3 >= d3 * (unknown_uint() + 1) ==> !(c1 || c2);\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0;\nloop invariant x1 >= d1 * (unknown_uint() + 1) ==> c1 == 1;\nloop invariant x2 >= d2 * (unknown_uint() + 1) ==> c2 == 1;\nloop invariant x3 >= d3 * (unknown_uint() + 1) ==> !(c1 || c2);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x1 <= 2147483647;\nloop invariant 1 <= x2 <= 2147483647;\nloop invariant 1 <= x3 <= 2147483647;\nloop invariant d1 == 1;\nloop invariant d2 == 1;\nloop invariant d3 == 1;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 > 0 ==> c1 == unknown_bool();\nloop invariant x2 > 0 ==> c2 == unknown_bool();\nloop invariant x3 > 0 ==> c1 == unknown_bool() && c2 == unknown_bool();\nloop invariant x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool();\nloop invariant x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0;\nloop invariant x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool();\nloop invariant x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0;\nloop invariant x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool();\nloop invariant x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0;\nloop invariant x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool();\nloop invariant x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 0 <= d1 <= unknown_uint();\nloop invariant 0 <= d2 <= unknown_uint();\nloop invariant 0 <= d3 <= unknown_uint();\nloop invariant 0 <= c1 <= 1;\nloop invariant 0 <= c2 <= 1;\nloop invariant x1+d1 >= d1;\nloop invariant x2+d2 >= d2;\nloop invariant x3+d3 >= d3;\nloop invariant x1+d1 <= unknown_uint();\nloop invariant x2+d2 <= unknown_uint();\nloop invariant x3+d3 <= unknown_uint();\nloop invariant c1+c2 <= 1;\nloop invariant d1+d2 <= unknown_uint();\nloop invariant d2+d3 <= unknown_uint();\nloop invariant d1+d3 <= unknown_uint();\nloop invariant d1+d2+d3 <= unknown_uint();\nloop invariant c1+c2 == 1 ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3);\nloop invariant c1+c2 == 1 ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> (x1+d1 <= unknown_uint()) && (x2+d2 <= unknown_uint()) && (x3+d3 <= unknown_uint());\nloop invariant c1+c2 == 1 ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> (x1+d1 <= unknown_uint()) && (x2+d2 <= unknown_uint()) && (x3+d3 <= unknown_uint()) ==> (x1 <= unknown_uint()) && (x2 <= unknown_uint()) && (x3 <= unknown_uint());\nloop invariant c1+c2 == 1 ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> (x1+d1 <= unknown_uint()) && (x2+d2 <= unknown_uint()) && (x3+d3 <= unknown_uint()) ==> (x1 <= unknown_uint()) && (x2 <= unknown_uint()) && (x3 <= unknown_uint()) ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3);\nloop invariant c1+c2 == 1 ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> (x1+d1 <= unknown_uint()) && (x2+d2 <= unknown_uint()) && (x3+d3 <= unknown_uint()) ==> (x1 <= unknown_uint()) && (x2 <= unknown_uint()) && (x3 <= unknown_uint()) ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> x1+d1 <= x1;\nloop invariant c1+c2 == 1 ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> (x1+d1 <= unknown_uint()) && (x2+d2 <= unknown_uint()) && (x3+d3 <= unknown_uint()) ==> (x1 <= unknown_uint()) && (x2 <= unknown_uint()) && (x3 <= unknown_uint()) ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> x2+d2 <= x2;\nloop invariant c1+c2 == 1 ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> (x1+d1 <= unknown_uint()) && (x2+d2 <= unknown_uint()) && (x3+d3 <= unknown_uint()) ==> (x1 <= unknown_uint()) && (x2 <= unknown_uint()) && (x3 <= unknown_uint()) ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> x3+d3 <= x3;\n*/\n```",
            "```\n/*@\nloop invariant 0 < d1;\nloop invariant 0 < d2;\nloop invariant 0 < d3;\nloop invariant c1 == true || c2 == true;\nloop invariant (x1 >= d1 && x2 >= d2 && x3 >= d3) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 > 0 || x2 > 0 || x3 > 0) ==> (x1 > 0 && x2 > 0 && x3 > 0);\nloop invariant (x1 <= 0 || x2 <= 0 || x3 <= 0) ==> (x1 <= 0 && x2 <= 0 && x3 <= 0);\nloop invariant (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\nloop invariant (x3 >= x1 && x3 >= x2) ==> (x3 >= x1 && x3 >= x2);\nloop invariant (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\nloop invariant (x3 >= x1 && x3 >= x2) ==> (x3 >= x1 && x3 >= x2);\nloop invariant (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\nloop invariant (x3 >= x1 && x3 >= x2) ==> (x3 >= x1 && x3 >= x2);\nloop invariant (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\nloop invariant (x3 >= x1 && x3 >= x2) ==> (x3 >= x1 && x3 >= x2);\nloop invariant (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\nloop invariant (x3 >= x1 && x3 >= x2) ==> (x3 >= x1 && x3 >= x2);\nloop invariant (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\nloop invariant (x3 >= x1 && x3 >= x2) ==> (x3 >= x1 && x3 >= x2);\nloop invariant (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\nloop invariant (x3 >= x1 && x3 >= x2) ==> (x3 >= x1 && x3 >= x2);\nloop invariant (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\nloop invariant (x3 >= x1 && x3 >= x2) ==> (x3 >= x1 && x3 >= x2);\nloop invariant (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\nloop invariant (x3 >= x1 && x3 >= x2) ==> (x3 >= x1 && x3 >= x2);\nloop invariant (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= 2147483647;\nloop invariant 0 <= x2 <= 2147483647;\nloop invariant 0 <= x3 <= 2147483647;\nloop invariant 0 <= d1 <= 2147483647;\nloop invariant 0 <= d2 <= 2147483647;\nloop invariant 0 <= d3 <= 2147483647;\nloop invariant x1>d1 ==> x1<=x1-d1;\nloop invariant x1<=d1 ==> x1<=x1-d1;\nloop invariant x2>d2 ==> x2<=x2-d2;\nloop invariant x2<=d2 ==> x2<=x2-d2;\nloop invariant x3>d3 ==> x3<=x3-d3;\nloop invariant x3<=d3 ==> x3<=x3-d3;\nloop invariant (x1<=0 || x2<=0 || x3<=0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1>0 && x2>0 && x3>0) ==> (x1>0 && x2>0 && x3>0);\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= x2 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant (d1 <= d2 ==> d2 <= d3);\nloop invariant (d1 <= d3 ==> d3 <= d2);\nloop invariant (d2 <= d3 ==> d3 <= d1);\nloop invariant (d2 <= d1 ==> d1 <= d3);\nloop invariant (d3 <= d1 ==> d1 <= d2);\nloop invariant (d3 <= d2 ==> d2 <= d1);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 12,
                "annotations": "```\n/*@\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant c1 == 0 || c2 == 0;\nloop invariant x1 >= d1 || c1 == 0;\nloop invariant x2 >= d2 || c2 == 0;\nloop invariant x3 >= d3 || c2 == 0;\nloop invariant x1 >= x2 || c2 == 0;\nloop invariant x1 >= x3 || c2 == 0;\nloop invariant x2 >= x3 || c1 == 0;\nloop invariant x2 >= x1 || c1 == 0;\nloop invariant x3 >= x1 || c1 == 0;\nloop invariant x3 >= x2 || c1 == 0;\nloop invariant x1 >= d1 + d2 || c2 == 0;\nloop invariant x1 >= d1 + d3 || c2 == 0;\nloop invariant x2 >= d2 + d1 || c1 == 0;\nloop invariant x2 >= d2 + d3 || c1 == 0;\nloop invariant x3 >= d3 + d1 || c1 == 0;\nloop invariant x3 >= d3 + d2 || c1 == 0;\nloop invariant x1 >= x2 + x3 || c2 == 0;\nloop invariant x2 >= x1 + x3 || c1 == 0;\nloop invariant x3 >= x1 + x2 || c1 == 0;\nloop invariant x1 >= x2 + x3 + d1 || c2 == 0;\nloop invariant x2 >= x1 + x3 + d2 || c1 == 0;\nloop invariant x3 >= x1 + x2 + d3 || c1 == 0;\nloop invariant x1 >= x2 + x3 + d1 + d2 || c2 == 0;\nloop invariant x2 >= x1 + x3 + d2 + d3 || c1 == 0;\nloop invariant x3 >= x1 + x2 + d3 + d1 || c1 == 0;\nloop invariant x1 >= x2 + x3 + d1 + d2 + d3 || c2 == 0;\nloop invariant x2 >= x1 + x3 + d2 + d3 + d1 || c1 == 0;\nloop invariant x3 >= x1 + x2 + d3 + d1 + d2 || c1 == 0;\nloop invariant x1 >= x2 + x3 + d1 + d2 + d3 + x1 || c2 == 0;\nloop invariant x2 >= x1 + x3 + d2 + d3 + d1 + x2 || c1 == 0;\nloop invariant x3 >= x1 + x2 + d3 + d1 + d2 + x3 || c1 == 0;\nloop invariant x1 >= x2 + x3 + d1 + d2 + d3 + x1 + x2 || c2 == 0;\nloop invariant x2 >= x1 + x3 + d2 + d3 + d1 + x2 + x3 || c1 == 0;\nloop invariant x3 >= x1 + x2 + d3 + d1 + d2 + x3 + x2 || c1 == 0;\nloop invariant x1 >= x2 + x3 + d1 + d2 + d3 + x1 + x2 + x3 || c2 == 0;\nloop invariant x2 >= x1 + x3 + d2 + d3 + d1 + x2 + x3 + x1 || c1 == 0;\nloop invariant x3 >= x1 + x2 + d3 + d1 + d2 + x3 + x2 + x1 || c1 == 0;\nloop invariant x1 >= x2 + x3 + d1 + d2 + d3 + x1 + x2 + x3 + x1 || c2 == 0;\nloop invariant x2 >= x1 + x3 + d2 + d3 + d1 + x2 + x3 + x1 + x2 || c1 == 0;\nloop invariant x3 >= x1 + x2 + d3 + d1 + d2 + x3 + x2 + x1 + x3 || c1 == 0;\nloop invariant x1 >= x2 + x3 + d1 + d2 + d3 + x1 + x2 + x3 + x1 + x2 || c2 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 12,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant 0 <= c1 <= 1;\nloop invariant 0 <= c2 <= 1;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 > 0 ==> d1 > 0;\nloop invariant x2 > 0 ==> d2 > 0;\nloop invariant x3 > 0 ==> d3 > 0;\nloop invariant x1 >= d1 ==> x1 >= 0;\nloop invariant x2 >= d2 ==> x2 >= 0;\nloop invariant x3 >= d3 ==> x3 >= 0;\nloop invariant x1 <= unknown_uint() ==> x1 <= unknown_uint();\nloop invariant x2 <= unknown_uint() ==> x2 <= unknown_uint();\nloop invariant x3 <= unknown_uint() ==> x3 <= unknown_uint();\nloop invariant d1 <= unknown_uint() ==> d1 <= unknown_uint();\nloop invariant d2 <= unknown_uint() ==> d2 <= unknown_uint();\nloop invariant d3 <= unknown_uint() ==> d3 <= unknown_uint();\nloop invariant c1 <= 1 ==> c1 <= 1;\nloop invariant c2 <= 1 ==> c2 <= 1;\nloop invariant x1 <= unknown_uint() ==> x1 <= unknown_uint();\nloop invariant x2 <= unknown_uint() ==> x2 <= unknown_uint();\nloop invariant x3 <= unknown_uint() ==> x3 <= unknown_uint();\nloop invariant d1 <= unknown_uint() ==> d1 <= unknown_uint();\nloop invariant d2 <= unknown_uint() ==> d2 <= unknown_uint();\nloop invariant d3 <= unknown_uint() ==> d3 <= unknown_uint();\nloop invariant c1 <= 1 ==> c1 <= 1;\nloop invariant c2 <= 1 ==> c2 <= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\n\n\nloop invariant i7: 0 <= c1 <= 1;\nloop invariant i8: 0 <= c2 <= 1;\nloop invariant i9: x1 >= 0;\nloop invariant i10: x2 >= 0;\nloop invariant i11: x3 >= 0;\nloop invariant i12: d1 >= 1;\nloop invariant i13: d2 >= 1;\nloop invariant i14: d3 >= 1;\nloop invariant i15: c1 == 0 || c1 == 1;\nloop invariant i16: c2 == 0 || c2 == 1;\nloop invariant i17: x1 > 0 ==> d1 > 0;\nloop invariant i18: x2 > 0 ==> d2 > 0;\nloop invariant i19: x3 > 0 ==> d3 > 0;\nloop invariant i20: x1 >= d1 ==> x1 >= 0;\nloop invariant i21: x2 >= d2 ==> x2 >= 0;\nloop invariant i22: x3 >= d3 ==> x3 >= 0;\n\n\n\n\n\n\nloop invariant i29: c1 <= 1 ==> c1 <= 1;\nloop invariant i30: c2 <= 1 ==> c2 <= 1;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= d1;\nloop invariant 0 <= x2 <= d2;\nloop invariant 0 <= x3 <= d3;\nloop invariant 0 <= d1 <= x1;\nloop invariant 0 <= d2 <= x2;\nloop invariant 0 <= d3 <= x3;\nloop invariant x1 == d1 ==> c1 == 1;\nloop invariant x2 == d2 ==> c2 == 1;\nloop invariant x3 == d3 ==> !(c1 || c2);\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant x1 == 0 || x2 == 0 || x3 == 0;\nloop invariant x1 == d1 ==> c1 == 1;\nloop invariant x2 == d2 ==> c2 == 1;\nloop invariant x3 == d3 ==> !(c1 || c2);\nloop invariant (x1 > 0 || x2 > 0 || x3 > 0) ==> (d1 > 0 && d2 > 0 && d3 > 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\n\n\n\n\n\nloop invariant i10: d1 >= 1;\nloop invariant i11: d2 >= 1;\nloop invariant i12: d3 >= 1;\n\nloop invariant i14: (x1 > 0 || x2 > 0 || x3 > 0) ==> (d1 > 0 && d2 > 0 && d3 > 0);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 10,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant unknown_uint() <= x2 <= unknown_uint();\nloop invariant unknown_uint() <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= 1;\nloop invariant 1 <= d2 <= 1;\nloop invariant 1 <= d3 <= 1;\nloop invariant x1 >= unknown_uint() - (unknown_uint() - x1) * (unknown_uint() - x1 + 1) / 2;\nloop invariant x2 >= unknown_uint() - (unknown_uint() - x2) * (unknown_uint() - x2 + 1) / 2;\nloop invariant x3 >= unknown_uint() - (unknown_uint() - x3) * (unknown_uint() - x3 + 1) / 2;\nloop invariant 0 <= unknown_uint() - x1 <= unknown_uint();\nloop invariant 0 <= unknown_uint() - x2 <= unknown_uint();\nloop invariant 0 <= unknown_uint() - x3 <= unknown_uint();\nloop invariant 0 <= 1 - d1 <= 1;\nloop invariant 0 <= 1 - d2 <= 1;\nloop invariant 0 <= 1 - d3 <= 1;\nloop invariant (x1 > 0 && x2 > 0 && x3 > 0) ==> (c1 || c2);\nloop invariant (c1 && c2) ==> (x1 == x2 && x2 == x3);\nloop invariant (c1 && c2) ==> (x1 == x2 && x2 == x3);\nloop invariant (c1 && c2) ==> (x1 == x2 && x2 == x3);\nloop invariant (c1 && c2 && x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 - d1 == x1 && x2 - d2 == x2 && x3 - d3 == x3);\nloop invariant (c1 && c2 && x1 == x2 && x2 == x3) ==> (x1 == x2 && x2 == x3);\nloop invariant (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\nloop invariant i4: 1 <= d1 <= 1;\nloop invariant i5: 1 <= d2 <= 1;\nloop invariant i6: 1 <= d3 <= 1;\n\n\n\n\n\n\nloop invariant i13: 0 <= 1 - d1 <= 1;\nloop invariant i14: 0 <= 1 - d2 <= 1;\nloop invariant i15: 0 <= 1 - d3 <= 1;\n\n\n\nloop invariant i19: (c1 && c2 && x1 == x2 && x2 == x3) ==> (x1 == x2 && x2 == x3);\nloop invariant i20: (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 == 0 ==> x2 == 0 && x3 == 0;\nloop invariant x2 == 0 ==> x3 == 0;\nloop invariant x3 == 0 ==> x1 == 0;\nloop invariant x1 == 0 ==> x2 == 0 || x3 == 0;\nloop invariant x2 == 0 ==> x3 == 0 || x1 == 0;\nloop invariant x3 == 0 ==> x1 == 0 || x2 == 0;\nloop invariant x1 == 0 ==> x2 == 0 || x3 == 0 && x1 == 0;\nloop invariant x2 == 0 ==> x3 == 0 || x2 == 0 && x3 == 0;\nloop invariant x3 == 0 ==> x1 == 0 || x3 == 0 && x2 == 0;\nloop invariant x1 == 0 ==> x2 == 0 || x3 == 0 && x1 == 0 && x2 == 0;\nloop invariant x2 == 0 ==> x3 == 0 || x2 == 0 && x3 == 0 && x1 == 0;\nloop invariant x3 == 0 ==> x1 == 0 || x3 == 0 && x2 == 0 && x1 == 0;\nloop invariant x1 == 0 ==> x2 == 0 || x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0;\nloop invariant x2 == 0 ==> x3 == 0 || x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0;\nloop invariant x3 == 0 ==> x1 == 0 || x3 == 0 && x2 == 0 && x1 == 0 && x3 == 0;\nloop invariant x1 == 0 ==> x2 == 0 || x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0 && x1 == 0;\nloop invariant x2 == 0 ==> x3 == 0 || x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0;\nloop invariant x3 == 0 ==> x1 == 0 || x3 == 0 && x2 == 0 && x1 == 0 && x3 == 0 && x2 == 0;\nloop invariant x1 == 0 ==> x2 == 0 || x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0;\nloop invariant x2 == 0 ==> x3 == 0 || x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0 && x1 == 0;\nloop invariant x3 == 0 ==> x1 == 0 || x3 == 0 && x2 == 0 && x1 == 0 && x3 == 0 && x2 == 0 && x1 == 0;\nloop invariant x1 == 0 ==> x2 == 0 || x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0;\nloop invariant x2 == 0 ==> x3 == 0 || x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0;\nloop invariant x3 == 0 ==> x1 == 0 || x3 == 0 && x2 == 0 && x1 == 0 && x3 == 0 && x2 == 0 && x1 == 0 && x3 == 0;\nloop invariant x1 == 0 ==> x2 == 0 || x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0 && x1 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\nloop invariant i4: x1 >= 0;\nloop invariant i5: x2 >= 0;\nloop invariant i6: x3 >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 13,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant (x1 - d1) >= 0 ==> (x1 >= d1);\nloop invariant (x2 - d2) >= 0 ==> (x2 >= d2);\nloop invariant (x3 - d3) >= 0 ==> (x3 >= d3);\nloop invariant x1 <= unknown_uint() ==> x1 - d1 <= unknown_uint();\nloop invariant x2 <= unknown_uint() ==> x2 - d2 <= unknown_uint();\nloop invariant x3 <= unknown_uint() ==> x3 - d3 <= unknown_uint();\nloop invariant (x1 - d1) >= 0 || (x1 - d1) <= 0 ==> x1 - d1 >= 0 || x1 - d1 <= 0;\nloop invariant (x2 - d2) >= 0 || (x2 - d2) <= 0 ==> x2 - d2 >= 0 || x2 - d2 <= 0;\nloop invariant (x3 - d3) >= 0 || (x3 - d3) <= 0 ==> x3 - d3 >= 0 || x3 - d3 <= 0;\nloop invariant (x1 - d1) >= 0 || (x1 - d1) <= 0 ==> x1 - d1 >= 0 || x1 - d1 <= 0;\nloop invariant (x2 - d2) >= 0 || (x2 - d2) <= 0 ==> x2 - d2 >= 0 || x2 - d2 <= 0;\nloop invariant (x3 - d3) >= 0 || (x3 - d3) <= 0 ==> x3 - d3 >= 0 || x3 - d3 <= 0;\nloop invariant (x1 - d1) >= 0 || (x1 - d1) <= 0 ==> x1 - d1 >= 0 || x1 - d1 <= 0;\nloop invariant (x2 - d2) >= 0 || (x2 - d2) <= 0 ==> x2 - d2 >= 0 || x2 - d2 <= 0;\nloop invariant (x3 - d3) >= 0 || (x3 - d3) <= 0 ==> x3 - d3 >= 0 || x3 - d3 <= 0;\nloop invariant (x1 - d1) >= 0 || (x1 - d1) <= 0 ==> x1 - d1 >= 0 || x1 - d1 <= 0;\nloop invariant (x2 - d2) >= 0 || (x2 - d2) <= 0 ==> x2 - d2 >= 0 || x2 - d2 <= 0;\nloop invariant (x3 - d3) >= 0 || (x3 - d3) <= 0 ==> x3 - d3 >= 0 || x3 - d3 <= 0;\nloop invariant (c1 == unknown_bool() ==> c1 == unknown_bool());\nloop invariant (c2 == unknown_bool() ==> c2 == unknown_bool());\nloop invariant (x1 - d1) >= 0 ==> x1 - d1 >= 0;\nloop invariant (x2 - d2) >= 0 ==> x2 - d2 >= 0;\nloop invariant (x3 - d3) >= 0 ==> x3 - d3 >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\n\n\n\n\nloop invariant i9: (x1 - d1) >= 0 ==> (x1 >= d1);\nloop invariant i10: (x2 - d2) >= 0 ==> (x2 >= d2);\nloop invariant i11: (x3 - d3) >= 0 ==> (x3 >= d3);\n\n\n\nloop invariant i15: (x1 - d1) >= 0 || (x1 - d1) <= 0 ==> x1 - d1 >= 0 || x1 - d1 <= 0;\nloop invariant i16: (x2 - d2) >= 0 || (x2 - d2) <= 0 ==> x2 - d2 >= 0 || x2 - d2 <= 0;\nloop invariant i17: (x3 - d3) >= 0 || (x3 - d3) <= 0 ==> x3 - d3 >= 0 || x3 - d3 <= 0;\n\n\nloop invariant i20: (x1 - d1) >= 0 ==> x1 - d1 >= 0;\nloop invariant i21: (x2 - d2) >= 0 ==> x2 - d2 >= 0;\nloop invariant i22: (x3 - d3) >= 0 ==> x3 - d3 >= 0;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= d1 <= 1 && 1 <= d2 <= 1 && 1 <= d3 <= 1;\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0;\nloop invariant x1 >= d1 * (unknown_uint() + 1) ==> c1 == 1;\nloop invariant x2 >= d2 * (unknown_uint() + 1) ==> c2 == 1;\nloop invariant x3 >= d3 * (unknown_uint() + 1) ==> !(c1 || c2);\nloop invariant x1 >= 0 && x2 >= 0 && x3 >= 0;\nloop invariant x1 >= d1 * (unknown_uint() + 1) ==> c1 == 1;\nloop invariant x2 >= d2 * (unknown_uint() + 1) ==> c2 == 1;\nloop invariant x3 >= d3 * (unknown_uint() + 1) ==> !(c1 || c2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: 1 <= d1 <= 1 && 1 <= d2 <= 1 && 1 <= d3 <= 1;\nloop invariant i2: x1 >= 0 && x2 >= 0 && x3 >= 0;\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 14,
                "annotations": "```\n/*@\nloop invariant 1 <= x1 <= 2147483647;\nloop invariant 1 <= x2 <= 2147483647;\nloop invariant 1 <= x3 <= 2147483647;\nloop invariant d1 == 1;\nloop invariant d2 == 1;\nloop invariant d3 == 1;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 > 0 ==> c1 == unknown_bool();\nloop invariant x2 > 0 ==> c2 == unknown_bool();\nloop invariant x3 > 0 ==> c1 == unknown_bool() && c2 == unknown_bool();\nloop invariant x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool();\nloop invariant x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0;\nloop invariant x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool();\nloop invariant x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0;\nloop invariant x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool();\nloop invariant x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0;\nloop invariant x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool();\nloop invariant x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\nloop invariant i4: d1 == 1;\nloop invariant i5: d2 == 1;\nloop invariant i6: d3 == 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 20,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 0 <= d1 <= unknown_uint();\nloop invariant 0 <= d2 <= unknown_uint();\nloop invariant 0 <= d3 <= unknown_uint();\nloop invariant 0 <= c1 <= 1;\nloop invariant 0 <= c2 <= 1;\nloop invariant x1+d1 >= d1;\nloop invariant x2+d2 >= d2;\nloop invariant x3+d3 >= d3;\nloop invariant x1+d1 <= unknown_uint();\nloop invariant x2+d2 <= unknown_uint();\nloop invariant x3+d3 <= unknown_uint();\nloop invariant c1+c2 <= 1;\nloop invariant d1+d2 <= unknown_uint();\nloop invariant d2+d3 <= unknown_uint();\nloop invariant d1+d3 <= unknown_uint();\nloop invariant d1+d2+d3 <= unknown_uint();\nloop invariant c1+c2 == 1 ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3);\nloop invariant c1+c2 == 1 ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> (x1+d1 <= unknown_uint()) && (x2+d2 <= unknown_uint()) && (x3+d3 <= unknown_uint());\nloop invariant c1+c2 == 1 ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> (x1+d1 <= unknown_uint()) && (x2+d2 <= unknown_uint()) && (x3+d3 <= unknown_uint()) ==> (x1 <= unknown_uint()) && (x2 <= unknown_uint()) && (x3 <= unknown_uint());\nloop invariant c1+c2 == 1 ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> (x1+d1 <= unknown_uint()) && (x2+d2 <= unknown_uint()) && (x3+d3 <= unknown_uint()) ==> (x1 <= unknown_uint()) && (x2 <= unknown_uint()) && (x3 <= unknown_uint()) ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3);\nloop invariant c1+c2 == 1 ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> (x1+d1 <= unknown_uint()) && (x2+d2 <= unknown_uint()) && (x3+d3 <= unknown_uint()) ==> (x1 <= unknown_uint()) && (x2 <= unknown_uint()) && (x3 <= unknown_uint()) ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> x1+d1 <= x1;\nloop invariant c1+c2 == 1 ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> (x1+d1 <= unknown_uint()) && (x2+d2 <= unknown_uint()) && (x3+d3 <= unknown_uint()) ==> (x1 <= unknown_uint()) && (x2 <= unknown_uint()) && (x3 <= unknown_uint()) ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> x2+d2 <= x2;\nloop invariant c1+c2 == 1 ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> (x1+d1 <= unknown_uint()) && (x2+d2 <= unknown_uint()) && (x3+d3 <= unknown_uint()) ==> (x1 <= unknown_uint()) && (x2 <= unknown_uint()) && (x3 <= unknown_uint()) ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> x3+d3 <= x3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\n\n\nloop invariant i7: 0 <= c1 <= 1;\nloop invariant i8: 0 <= c2 <= 1;\nloop invariant i9: x1+d1 >= d1;\nloop invariant i10: x2+d2 >= d2;\nloop invariant i11: x3+d3 >= d3;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 < d1;\nloop invariant 0 < d2;\nloop invariant 0 < d3;\nloop invariant c1 == true || c2 == true;\nloop invariant (x1 >= d1 && x2 >= d2 && x3 >= d3) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant (x1 > 0 || x2 > 0 || x3 > 0) ==> (x1 > 0 && x2 > 0 && x3 > 0);\nloop invariant (x1 <= 0 || x2 <= 0 || x3 <= 0) ==> (x1 <= 0 && x2 <= 0 && x3 <= 0);\nloop invariant (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\nloop invariant (x3 >= x1 && x3 >= x2) ==> (x3 >= x1 && x3 >= x2);\nloop invariant (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\nloop invariant (x3 >= x1 && x3 >= x2) ==> (x3 >= x1 && x3 >= x2);\nloop invariant (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\nloop invariant (x3 >= x1 && x3 >= x2) ==> (x3 >= x1 && x3 >= x2);\nloop invariant (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\nloop invariant (x3 >= x1 && x3 >= x2) ==> (x3 >= x1 && x3 >= x2);\nloop invariant (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\nloop invariant (x3 >= x1 && x3 >= x2) ==> (x3 >= x1 && x3 >= x2);\nloop invariant (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\nloop invariant (x3 >= x1 && x3 >= x2) ==> (x3 >= x1 && x3 >= x2);\nloop invariant (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\nloop invariant (x3 >= x1 && x3 >= x2) ==> (x3 >= x1 && x3 >= x2);\nloop invariant (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\nloop invariant (x3 >= x1 && x3 >= x2) ==> (x3 >= x1 && x3 >= x2);\nloop invariant (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\nloop invariant (x3 >= x1 && x3 >= x2) ==> (x3 >= x1 && x3 >= x2);\nloop invariant (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: 0 < d1;\nloop invariant i2: 0 < d2;\nloop invariant i3: 0 < d3;\n\nloop invariant i5: (x1 >= d1 && x2 >= d2 && x3 >= d3) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\n\n\nloop invariant i8: (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant i9: (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\nloop invariant i10: (x3 >= x1 && x3 >= x2) ==> (x3 >= x1 && x3 >= x2);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= 2147483647;\nloop invariant 0 <= x2 <= 2147483647;\nloop invariant 0 <= x3 <= 2147483647;\nloop invariant 0 <= d1 <= 2147483647;\nloop invariant 0 <= d2 <= 2147483647;\nloop invariant 0 <= d3 <= 2147483647;\nloop invariant x1>d1 ==> x1<=x1-d1;\nloop invariant x1<=d1 ==> x1<=x1-d1;\nloop invariant x2>d2 ==> x2<=x2-d2;\nloop invariant x2<=d2 ==> x2<=x2-d2;\nloop invariant x3>d3 ==> x3<=x3-d3;\nloop invariant x3<=d3 ==> x3<=x3-d3;\nloop invariant (x1<=0 || x2<=0 || x3<=0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant (x1>0 && x2>0 && x3>0) ==> (x1>0 && x2>0 && x3>0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\nloop invariant i4: 0 <= d1 <= 2147483647;\nloop invariant i5: 0 <= d2 <= 2147483647;\nloop invariant i6: 0 <= d3 <= 2147483647;\n\n\n\n\n\n\nloop invariant i13: (x1<=0 || x2<=0 || x3<=0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant i14: (x1>0 && x2>0 && x3>0) ==> (x1>0 && x2>0 && x3>0);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= x2 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant (d1 <= d2 ==> d2 <= d3);\nloop invariant (d1 <= d3 ==> d3 <= d2);\nloop invariant (d2 <= d3 ==> d3 <= d1);\nloop invariant (d2 <= d1 ==> d1 <= d3);\nloop invariant (d3 <= d1 ==> d1 <= d2);\nloop invariant (d3 <= d2 ==> d2 <= d1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\nloop invariant i5: (d1 <= d2 ==> d2 <= d3);\nloop invariant i6: (d1 <= d3 ==> d3 <= d2);\nloop invariant i7: (d2 <= d3 ==> d3 <= d1);\nloop invariant i8: (d2 <= d1 ==> d1 <= d3);\nloop invariant i9: (d3 <= d1 ==> d1 <= d2);\nloop invariant i10: (d3 <= d2 ==> d2 <= d1);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= d1 <= x1;\nloop invariant 1 <= d2 <= x2;\nloop invariant 1 <= d3 <= x3;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 62: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: 1 <= d1 <= x1;\nloop invariant i2: 1 <= d2 <= x2;\nloop invariant i3: 1 <= d3 <= x3;\nloop invariant i4: c1 == 0 || c2 == 0;\nloop invariant i5: x1 >= d1 || c1 == 0;\nloop invariant i6: x2 >= d2 || c2 == 0;\nloop invariant i7: x3 >= d3 || c2 == 0;\nloop invariant i8: x1 >= x2 || c2 == 0;\nloop invariant i9: x1 >= x3 || c2 == 0;\nloop invariant i10: x2 >= x3 || c1 == 0;\nloop invariant i11: x2 >= x1 || c1 == 0;\nloop invariant i12: x3 >= x1 || c1 == 0;\nloop invariant i13: x3 >= x2 || c1 == 0;\nloop invariant i14: x1 >= d1 + d2 || c2 == 0;\nloop invariant i15: x1 >= d1 + d3 || c2 == 0;\nloop invariant i16: x2 >= d2 + d1 || c1 == 0;\nloop invariant i17: x2 >= d2 + d3 || c1 == 0;\nloop invariant i18: x3 >= d3 + d1 || c1 == 0;\nloop invariant i19: x3 >= d3 + d2 || c1 == 0;\nloop invariant i20: x1 >= x2 + x3 || c2 == 0;\nloop invariant i21: x2 >= x1 + x3 || c1 == 0;\nloop invariant i22: x3 >= x1 + x2 || c1 == 0;\nloop invariant i23: x1 >= x2 + x3 + d1 || c2 == 0;\nloop invariant i24: x2 >= x1 + x3 + d2 || c1 == 0;\nloop invariant i25: x3 >= x1 + x2 + d3 || c1 == 0;\nloop invariant i26: x1 >= x2 + x3 + d1 + d2 || c2 == 0;\nloop invariant i27: x2 >= x1 + x3 + d2 + d3 || c1 == 0;\nloop invariant i28: x3 >= x1 + x2 + d3 + d1 || c1 == 0;\nloop invariant i29: x1 >= x2 + x3 + d1 + d2 + d3 || c2 == 0;\nloop invariant i30: x2 >= x1 + x3 + d2 + d3 + d1 || c1 == 0;\nloop invariant i31: x3 >= x1 + x2 + d3 + d1 + d2 || c1 == 0;\nloop invariant i32: x1 >= x2 + x3 + d1 + d2 + d3 + x1 || c2 == 0;\nloop invariant i33: x2 >= x1 + x3 + d2 + d3 + d1 + x2 || c1 == 0;\nloop invariant i34: x3 >= x1 + x2 + d3 + d1 + d2 + x3 || c1 == 0;\nloop invariant i35: x1 >= x2 + x3 + d1 + d2 + d3 + x1 + x2 || c2 == 0;\nloop invariant i36: x2 >= x1 + x3 + d2 + d3 + d1 + x2 + x3 || c1 == 0;\nloop invariant i37: x3 >= x1 + x2 + d3 + d1 + d2 + x3 + x2 || c1 == 0;\nloop invariant i38: x1 >= x2 + x3 + d1 + d2 + d3 + x1 + x2 + x3 || c2 == 0;\nloop invariant i39: x2 >= x1 + x3 + d2 + d3 + d1 + x2 + x3 + x1 || c1 == 0;\nloop invariant i40: x3 >= x1 + x2 + d3 + d1 + d2 + x3 + x2 + x1 || c1 == 0;\nloop invariant i41: x1 >= x2 + x3 + d1 + d2 + d3 + x1 + x2 + x3 + x1 || c2 == 0;\nloop invariant i42: x2 >= x1 + x3 + d2 + d3 + d1 + x2 + x3 + x1 + x2 || c1 == 0;\nloop invariant i43: x3 >= x1 + x2 + d3 + d1 + d2 + x3 + x2 + x1 + x3 || c1 == 0;\nloop invariant i44: x1 >= x2 + x3 + d1 + d2 + d3 + x1 + x2 + x3 + x1 + x2 || c2 == 0;\nloop invariant i45: 0 <= x1 <= unknown_uint();\nloop invariant i46: 0 <= x2 <= unknown_uint();\nloop invariant i47: 0 <= x3 <= unknown_uint();\nloop invariant i48: 1 <= d1 <= unknown_uint();\nloop invariant i49: 1 <= d2 <= unknown_uint();\nloop invariant i50: 1 <= d3 <= unknown_uint();\nloop invariant i51: 0 <= c1 <= 1;\nloop invariant i52: 0 <= c2 <= 1;\nloop invariant i53: x1 >= 0;\nloop invariant i54: x2 >= 0;\nloop invariant i55: x3 >= 0;\nloop invariant i56: d1 >= 1;\nloop invariant i57: d2 >= 1;\nloop invariant i58: d3 >= 1;\nloop invariant i59: c1 == 0 || c1 == 1;\nloop invariant i60: c2 == 0 || c2 == 1;\nloop invariant i61: x1 > 0 ==> d1 > 0;\nloop invariant i62: x2 > 0 ==> d2 > 0;\nloop invariant i63: x3 > 0 ==> d3 > 0;\nloop invariant i64: x1 >= d1 ==> x1 >= 0;\nloop invariant i65: x2 >= d2 ==> x2 >= 0;\nloop invariant i66: x3 >= d3 ==> x3 >= 0;\nloop invariant i67: x1 <= unknown_uint() ==> x1 <= unknown_uint();\nloop invariant i68: x2 <= unknown_uint() ==> x2 <= unknown_uint();\nloop invariant i69: x3 <= unknown_uint() ==> x3 <= unknown_uint();\nloop invariant i70: d1 <= unknown_uint() ==> d1 <= unknown_uint();\nloop invariant i71: d2 <= unknown_uint() ==> d2 <= unknown_uint();\nloop invariant i72: d3 <= unknown_uint() ==> d3 <= unknown_uint();\nloop invariant i73: c1 <= 1 ==> c1 <= 1;\nloop invariant i74: c2 <= 1 ==> c2 <= 1;\nloop invariant i75: 0 <= x1 <= d1;\nloop invariant i76: 0 <= x2 <= d2;\nloop invariant i77: 0 <= x3 <= d3;\nloop invariant i78: 0 <= d1 <= x1;\nloop invariant i79: 0 <= d2 <= x2;\nloop invariant i80: 0 <= d3 <= x3;\nloop invariant i81: x1 == d1 ==> c1 == 1;\nloop invariant i82: x2 == d2 ==> c2 == 1;\nloop invariant i83: x3 == d3 ==> !(c1 || c2);\nloop invariant i84: x1 == 0 || x2 == 0 || x3 == 0;\nloop invariant i85: (x1 > 0 || x2 > 0 || x3 > 0) ==> (d1 > 0 && d2 > 0 && d3 > 0);\nloop invariant i86: unknown_uint() <= x2 <= unknown_uint();\nloop invariant i87: unknown_uint() <= x3 <= unknown_uint();\nloop invariant i88: 1 <= d1 <= 1;\nloop invariant i89: 1 <= d2 <= 1;\nloop invariant i90: 1 <= d3 <= 1;\nloop invariant i91: x1 >= unknown_uint() - (unknown_uint() - x1) * (unknown_uint() - x1 + 1) / 2;\nloop invariant i92: x2 >= unknown_uint() - (unknown_uint() - x2) * (unknown_uint() - x2 + 1) / 2;\nloop invariant i93: x3 >= unknown_uint() - (unknown_uint() - x3) * (unknown_uint() - x3 + 1) / 2;\nloop invariant i94: 0 <= unknown_uint() - x1 <= unknown_uint();\nloop invariant i95: 0 <= unknown_uint() - x2 <= unknown_uint();\nloop invariant i96: 0 <= unknown_uint() - x3 <= unknown_uint();\nloop invariant i97: 0 <= 1 - d1 <= 1;\nloop invariant i98: 0 <= 1 - d2 <= 1;\nloop invariant i99: 0 <= 1 - d3 <= 1;\nloop invariant i100: (x1 > 0 && x2 > 0 && x3 > 0) ==> (c1 || c2);\nloop invariant i101: (c1 && c2) ==> (x1 == x2 && x2 == x3);\nloop invariant i102: (c1 && c2 && x1 > 0 && x2 > 0 && x3 > 0) ==> (x1 - d1 == x1 && x2 - d2 == x2 && x3 - d3 == x3);\nloop invariant i103: (c1 && c2 && x1 == x2 && x2 == x3) ==> (x1 == x2 && x2 == x3);\nloop invariant i104: (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\nloop invariant i105: x1 >= x2;\nloop invariant i106: x2 >= x3;\nloop invariant i107: x1 >= x3;\nloop invariant i108: x1 == 0 ==> x2 == 0 && x3 == 0;\nloop invariant i109: x2 == 0 ==> x3 == 0;\nloop invariant i110: x3 == 0 ==> x1 == 0;\nloop invariant i111: x1 == 0 ==> x2 == 0 || x3 == 0;\nloop invariant i112: x2 == 0 ==> x3 == 0 || x1 == 0;\nloop invariant i113: x3 == 0 ==> x1 == 0 || x2 == 0;\nloop invariant i114: x1 == 0 ==> x2 == 0 || x3 == 0 && x1 == 0;\nloop invariant i115: x2 == 0 ==> x3 == 0 || x2 == 0 && x3 == 0;\nloop invariant i116: x3 == 0 ==> x1 == 0 || x3 == 0 && x2 == 0;\nloop invariant i117: x1 == 0 ==> x2 == 0 || x3 == 0 && x1 == 0 && x2 == 0;\nloop invariant i118: x2 == 0 ==> x3 == 0 || x2 == 0 && x3 == 0 && x1 == 0;\nloop invariant i119: x3 == 0 ==> x1 == 0 || x3 == 0 && x2 == 0 && x1 == 0;\nloop invariant i120: x1 == 0 ==> x2 == 0 || x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0;\nloop invariant i121: x2 == 0 ==> x3 == 0 || x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0;\nloop invariant i122: x3 == 0 ==> x1 == 0 || x3 == 0 && x2 == 0 && x1 == 0 && x3 == 0;\nloop invariant i123: x1 == 0 ==> x2 == 0 || x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0 && x1 == 0;\nloop invariant i124: x2 == 0 ==> x3 == 0 || x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0;\nloop invariant i125: x3 == 0 ==> x1 == 0 || x3 == 0 && x2 == 0 && x1 == 0 && x3 == 0 && x2 == 0;\nloop invariant i126: x1 == 0 ==> x2 == 0 || x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0;\nloop invariant i127: x2 == 0 ==> x3 == 0 || x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0 && x1 == 0;\nloop invariant i128: x3 == 0 ==> x1 == 0 || x3 == 0 && x2 == 0 && x1 == 0 && x3 == 0 && x2 == 0 && x1 == 0;\nloop invariant i129: x1 == 0 ==> x2 == 0 || x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0;\nloop invariant i130: x2 == 0 ==> x3 == 0 || x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0;\nloop invariant i131: x3 == 0 ==> x1 == 0 || x3 == 0 && x2 == 0 && x1 == 0 && x3 == 0 && x2 == 0 && x1 == 0 && x3 == 0;\nloop invariant i132: x1 == 0 ==> x2 == 0 || x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0 && x1 == 0 && x2 == 0 && x3 == 0 && x1 == 0;\nloop invariant i133: c1 == unknown_bool();\nloop invariant i134: c2 == unknown_bool();\nloop invariant i135: (x1 - d1) >= 0 ==> (x1 >= d1);\nloop invariant i136: (x2 - d2) >= 0 ==> (x2 >= d2);\nloop invariant i137: (x3 - d3) >= 0 ==> (x3 >= d3);\nloop invariant i138: x1 <= unknown_uint() ==> x1 - d1 <= unknown_uint();\nloop invariant i139: x2 <= unknown_uint() ==> x2 - d2 <= unknown_uint();\nloop invariant i140: x3 <= unknown_uint() ==> x3 - d3 <= unknown_uint();\nloop invariant i141: (x1 - d1) >= 0 || (x1 - d1) <= 0 ==> x1 - d1 >= 0 || x1 - d1 <= 0;\nloop invariant i142: (x2 - d2) >= 0 || (x2 - d2) <= 0 ==> x2 - d2 >= 0 || x2 - d2 <= 0;\nloop invariant i143: (x3 - d3) >= 0 || (x3 - d3) <= 0 ==> x3 - d3 >= 0 || x3 - d3 <= 0;\nloop invariant i144: (c1 == unknown_bool() ==> c1 == unknown_bool());\nloop invariant i145: (c2 == unknown_bool() ==> c2 == unknown_bool());\nloop invariant i146: (x1 - d1) >= 0 ==> x1 - d1 >= 0;\nloop invariant i147: (x2 - d2) >= 0 ==> x2 - d2 >= 0;\nloop invariant i148: (x3 - d3) >= 0 ==> x3 - d3 >= 0;\nloop invariant i149: 1 <= d1 <= 1 && 1 <= d2 <= 1 && 1 <= d3 <= 1;\nloop invariant i150: x1 >= 0 && x2 >= 0 && x3 >= 0;\nloop invariant i151: x1 >= d1 * (unknown_uint() + 1) ==> c1 == 1;\nloop invariant i152: x2 >= d2 * (unknown_uint() + 1) ==> c2 == 1;\nloop invariant i153: x3 >= d3 * (unknown_uint() + 1) ==> !(c1 || c2);\nloop invariant i154: 1 <= x1 <= 2147483647;\nloop invariant i155: 1 <= x2 <= 2147483647;\nloop invariant i156: 1 <= x3 <= 2147483647;\nloop invariant i157: d1 == 1;\nloop invariant i158: d2 == 1;\nloop invariant i159: d3 == 1;\nloop invariant i160: x1 > 0 ==> c1 == unknown_bool();\nloop invariant i161: x2 > 0 ==> c2 == unknown_bool();\nloop invariant i162: x3 > 0 ==> c1 == unknown_bool() && c2 == unknown_bool();\nloop invariant i163: x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool();\nloop invariant i164: x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0;\nloop invariant i165: x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool();\nloop invariant i166: x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0;\nloop invariant i167: x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool();\nloop invariant i168: x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0;\nloop invariant i169: x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool();\nloop invariant i170: x1 > 0 ==> x2 > 0 ==> x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0 ==> c1 == unknown_bool() || c2 == unknown_bool() ==> x1 > 0 && x2 > 0 && x3 > 0;\nloop invariant i171: 0 <= d1 <= unknown_uint();\nloop invariant i172: 0 <= d2 <= unknown_uint();\nloop invariant i173: 0 <= d3 <= unknown_uint();\nloop invariant i174: x1+d1 >= d1;\nloop invariant i175: x2+d2 >= d2;\nloop invariant i176: x3+d3 >= d3;\nloop invariant i177: x1+d1 <= unknown_uint();\nloop invariant i178: x2+d2 <= unknown_uint();\nloop invariant i179: x3+d3 <= unknown_uint();\nloop invariant i180: c1+c2 <= 1;\nloop invariant i181: d1+d2 <= unknown_uint();\nloop invariant i182: d2+d3 <= unknown_uint();\nloop invariant i183: d1+d3 <= unknown_uint();\nloop invariant i184: d1+d2+d3 <= unknown_uint();\nloop invariant i185: c1+c2 == 1 ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3);\nloop invariant i186: c1+c2 == 1 ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> (x1+d1 <= unknown_uint()) && (x2+d2 <= unknown_uint()) && (x3+d3 <= unknown_uint());\nloop invariant i187: c1+c2 == 1 ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> (x1+d1 <= unknown_uint()) && (x2+d2 <= unknown_uint()) && (x3+d3 <= unknown_uint()) ==> (x1 <= unknown_uint()) && (x2 <= unknown_uint()) && (x3 <= unknown_uint());\nloop invariant i188: c1+c2 == 1 ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> (x1+d1 <= unknown_uint()) && (x2+d2 <= unknown_uint()) && (x3+d3 <= unknown_uint()) ==> (x1 <= unknown_uint()) && (x2 <= unknown_uint()) && (x3 <= unknown_uint()) ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3);\nloop invariant i189: c1+c2 == 1 ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> (x1+d1 <= unknown_uint()) && (x2+d2 <= unknown_uint()) && (x3+d3 <= unknown_uint()) ==> (x1 <= unknown_uint()) && (x2 <= unknown_uint()) && (x3 <= unknown_uint()) ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> x1+d1 <= x1;\nloop invariant i190: c1+c2 == 1 ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> (x1+d1 <= unknown_uint()) && (x2+d2 <= unknown_uint()) && (x3+d3 <= unknown_uint()) ==> (x1 <= unknown_uint()) && (x2 <= unknown_uint()) && (x3 <= unknown_uint()) ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> x2+d2 <= x2;\nloop invariant i191: c1+c2 == 1 ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> (x1+d1 <= unknown_uint()) && (x2+d2 <= unknown_uint()) && (x3+d3 <= unknown_uint()) ==> (x1 <= unknown_uint()) && (x2 <= unknown_uint()) && (x3 <= unknown_uint()) ==> (x1+d1 == x1) || (x2+d2 == x2) || (x3+d3 == x3) ==> x3+d3 <= x3;\nloop invariant i192: 0 < d1;\nloop invariant i193: 0 < d2;\nloop invariant i194: 0 < d3;\nloop invariant i195: c1 == true || c2 == true;\nloop invariant i196: (x1 >= d1 && x2 >= d2 && x3 >= d3) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant i197: (x1 > 0 || x2 > 0 || x3 > 0) ==> (x1 > 0 && x2 > 0 && x3 > 0);\nloop invariant i198: (x1 <= 0 || x2 <= 0 || x3 <= 0) ==> (x1 <= 0 && x2 <= 0 && x3 <= 0);\nloop invariant i199: (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant i200: (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\nloop invariant i201: (x3 >= x1 && x3 >= x2) ==> (x3 >= x1 && x3 >= x2);\nloop invariant i202: 0 <= x1 <= 2147483647;\nloop invariant i203: 0 <= x2 <= 2147483647;\nloop invariant i204: 0 <= x3 <= 2147483647;\nloop invariant i205: 0 <= d1 <= 2147483647;\nloop invariant i206: 0 <= d2 <= 2147483647;\nloop invariant i207: 0 <= d3 <= 2147483647;\nloop invariant i208: x1>d1 ==> x1<=x1-d1;\nloop invariant i209: x1<=d1 ==> x1<=x1-d1;\nloop invariant i210: x2>d2 ==> x2<=x2-d2;\nloop invariant i211: x2<=d2 ==> x2<=x2-d2;\nloop invariant i212: x3>d3 ==> x3<=x3-d3;\nloop invariant i213: x3<=d3 ==> x3<=x3-d3;\nloop invariant i214: (x1<=0 || x2<=0 || x3<=0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant i215: (x1>0 && x2>0 && x3>0) ==> (x1>0 && x2>0 && x3>0);\nloop invariant i216: 0 <= x1 <= x2 <= x3;\nloop invariant i217: d1 <= x1;\nloop invariant i218: d2 <= x2;\nloop invariant i219: d3 <= x3;\nloop invariant i220: (d1 <= d2 ==> d2 <= d3);\nloop invariant i221: (d1 <= d3 ==> d3 <= d2);\nloop invariant i222: (d2 <= d3 ==> d3 <= d1);\nloop invariant i223: (d2 <= d1 ==> d1 <= d3);\nloop invariant i224: (d3 <= d1 ==> d1 <= d2);\nloop invariant i225: (d3 <= d2 ==> d2 <= d1);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 72,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i51: 0 <= c1 <= 1;\nloop invariant i52: 0 <= c2 <= 1;\nloop invariant i53: x1 >= 0;\nloop invariant i54: x2 >= 0;\nloop invariant i55: x3 >= 0;\nloop invariant i56: d1 >= 1;\nloop invariant i57: d2 >= 1;\nloop invariant i58: d3 >= 1;\nloop invariant i59: c1 == 0 || c1 == 1;\nloop invariant i60: c2 == 0 || c2 == 1;\nloop invariant i61: x1 > 0 ==> d1 > 0;\nloop invariant i62: x2 > 0 ==> d2 > 0;\nloop invariant i63: x3 > 0 ==> d3 > 0;\nloop invariant i64: x1 >= d1 ==> x1 >= 0;\nloop invariant i65: x2 >= d2 ==> x2 >= 0;\nloop invariant i66: x3 >= d3 ==> x3 >= 0;\n\n\n\n\n\n\nloop invariant i73: c1 <= 1 ==> c1 <= 1;\nloop invariant i74: c2 <= 1 ==> c2 <= 1;\n\n\n\n\n\n\n\n\n\n\nloop invariant i85: (x1 > 0 || x2 > 0 || x3 > 0) ==> (d1 > 0 && d2 > 0 && d3 > 0);\n\n\nloop invariant i88: 1 <= d1 <= 1;\nloop invariant i89: 1 <= d2 <= 1;\nloop invariant i90: 1 <= d3 <= 1;\n\n\n\n\n\n\nloop invariant i97: 0 <= 1 - d1 <= 1;\nloop invariant i98: 0 <= 1 - d2 <= 1;\nloop invariant i99: 0 <= 1 - d3 <= 1;\n\n\n\nloop invariant i103: (c1 && c2 && x1 == x2 && x2 == x3) ==> (x1 == x2 && x2 == x3);\nloop invariant i104: (x1 == 0 || x2 == 0 || x3 == 0) ==> (x1 == 0 || x2 == 0 || x3 == 0);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i135: (x1 - d1) >= 0 ==> (x1 >= d1);\nloop invariant i136: (x2 - d2) >= 0 ==> (x2 >= d2);\nloop invariant i137: (x3 - d3) >= 0 ==> (x3 >= d3);\n\n\n\nloop invariant i141: (x1 - d1) >= 0 || (x1 - d1) <= 0 ==> x1 - d1 >= 0 || x1 - d1 <= 0;\nloop invariant i142: (x2 - d2) >= 0 || (x2 - d2) <= 0 ==> x2 - d2 >= 0 || x2 - d2 <= 0;\nloop invariant i143: (x3 - d3) >= 0 || (x3 - d3) <= 0 ==> x3 - d3 >= 0 || x3 - d3 <= 0;\n\n\nloop invariant i146: (x1 - d1) >= 0 ==> x1 - d1 >= 0;\nloop invariant i147: (x2 - d2) >= 0 ==> x2 - d2 >= 0;\nloop invariant i148: (x3 - d3) >= 0 ==> x3 - d3 >= 0;\nloop invariant i149: 1 <= d1 <= 1 && 1 <= d2 <= 1 && 1 <= d3 <= 1;\nloop invariant i150: x1 >= 0 && x2 >= 0 && x3 >= 0;\n\n\n\n\n\n\nloop invariant i157: d1 == 1;\nloop invariant i158: d2 == 1;\nloop invariant i159: d3 == 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i174: x1+d1 >= d1;\nloop invariant i175: x2+d2 >= d2;\nloop invariant i176: x3+d3 >= d3;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i192: 0 < d1;\nloop invariant i193: 0 < d2;\nloop invariant i194: 0 < d3;\n\nloop invariant i196: (x1 >= d1 && x2 >= d2 && x3 >= d3) ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\n\n\nloop invariant i199: (x1 >= x2 && x1 >= x3) ==> (x1 >= x2 && x1 >= x3);\nloop invariant i200: (x2 >= x1 && x2 >= x3) ==> (x2 >= x1 && x2 >= x3);\nloop invariant i201: (x3 >= x1 && x3 >= x2) ==> (x3 >= x1 && x3 >= x2);\n\n\n\nloop invariant i205: 0 <= d1 <= 2147483647;\nloop invariant i206: 0 <= d2 <= 2147483647;\nloop invariant i207: 0 <= d3 <= 2147483647;\n\n\n\n\n\n\nloop invariant i214: (x1<=0 || x2<=0 || x3<=0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant i215: (x1>0 && x2>0 && x3>0) ==> (x1>0 && x2>0 && x3>0);\n\n\n\n\nloop invariant i220: (d1 <= d2 ==> d2 <= d3);\nloop invariant i221: (d1 <= d3 ==> d3 <= d2);\nloop invariant i222: (d2 <= d3 ==> d3 <= d1);\nloop invariant i223: (d2 <= d1 ==> d1 <= d3);\nloop invariant i224: (d3 <= d1 ==> d1 <= d2);\nloop invariant i225: (d3 <= d2 ==> d2 <= d1);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/popl.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/05.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/07.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/37.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/39.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv_simp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/xy10.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/const_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe3.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe4.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbr.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbrprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bk-nat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bkley.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/efm.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/ex1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnatprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifo.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/seesaw.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/ken-imp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/rajamani_1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/simple.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/simple_if.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/up-nested.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/count_up_down_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/for_infinite_loop_1_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/for_infinite_loop_2_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/sum03_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/sum04_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/terminator_02_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/trex03_true.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/pldi082_unbounded.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_unsafe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/sum01_true.c"
        ],
        "skipped": [],
        "total": 180,
        "success_count": 152,
        "failure_count": 28,
        "success_rate": 0.8444444444444444
    }
}