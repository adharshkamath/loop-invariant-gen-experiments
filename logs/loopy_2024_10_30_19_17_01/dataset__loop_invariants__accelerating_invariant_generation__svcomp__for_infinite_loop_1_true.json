{
    "logs": {
        "file": "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/for_infinite_loop_1_true.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  for(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 0;\nloop invariant 0 <= y <= 0;\nloop invariant 0 <= i <= i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 0 ==> i >= 0;\nloop invariant x == 0 ==> i <= n;\nloop invariant y == 0 ==> i >= 0;\nloop invariant y == 0 ==> i <= n;\nloop invariant x == 0 ==> y == 0 ==> i >= 0;\nloop invariant x == 0 ==> y == 0 ==> i <= n;\nloop invariant x == 0 ==> i >= 0 ==> i <= n;\nloop invariant y == 0 ==> i >= 0 ==> i <= n;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0 ==> y == 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i <= n;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0 ==> y == 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i <= n;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0 ==> y == 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i <= n;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x + y == 0;\nloop invariant i <= n;\nloop invariant x + y == 0 ==> x == 0;\nloop invariant x + y == 0 ==> y == 0;\nloop invariant x + y == 0 ==> i <= n;\nloop invariant x + y == 0 ==> i == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0;\nloop invariant x + y == 0 ==> x == 0 ==> i == 0;\nloop invariant x + y == 0 ==> y == 0 ==> i == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> x + y == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> x == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> y == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> i <= n;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> i == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> y == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> i <= n;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> i == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> y == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> i <= n;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> i == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> i == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> y == 0 ==> i == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> x + y == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> x == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> y == 0;\n*/\n```",
            "```\n/*@\nloop invariant i >= 0;\nloop invariant i < n;\nloop invariant x == y;\nloop invariant y == i;\nloop invariant y < n;\nloop invariant x <= y;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == i * (i + 1) / 2;\nloop invariant x + y >= i * (i + 1) / 2;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant i >= 0;\nloop invariant i <= n - 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant x <= n * (n - 1) / 2;\nloop invariant y <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= x <= 0;\nloop invariant 0 <= y <= 0;\nloop invariant x <= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= n;\nloop invariant x >= 0;\nloop invariant x <= n * (n + 1) / 2;\nloop invariant i >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i > n ==> x == 0;\nloop invariant i > n ==> y == 0;\nloop invariant i <= n ==> 0 <= i <= n;\nloop invariant i <= n ==> 0 <= x <= 0;\nloop invariant i <= n ==> 0 <= y <= 0;\nloop invariant i > n ==> 0 <= i <= n;\nloop invariant i > n ==> 0 <= x <= 0;\nloop invariant i > n ==> 0 <= y <= 0;\nloop invariant i <= n ==> n > 0;\nloop invariant i > n ==> n > 0;\nloop invariant i <= n ==> i >= 0;\nloop invariant i > n ==> i >= 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i > n ==> x == 0;\nloop invariant i > n ==> y == 0;\nloop invariant i <= n ==> 0 <= i <= n;\nloop invariant i <= n ==> 0 <= x <= 0;\nloop invariant i <= n ==> 0 <= y <= 0;\nloop invariant i > n ==> 0 <= i <= n;\nloop invariant i > n ==> 0 <= x <= 0;\nloop invariant i > n ==> 0 <= y <= 0;\nloop invariant i <= n ==> n > 0;\nloop invariant i > n ==> n > 0;\nloop invariant i <= n ==> i >= 0;\nloop invariant i > n ==> i >= 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i > n ==> x == 0;\nloop invariant i > n ==> y == 0;\nloop invariant i <= n ==> 0 <= i <= n;\nloop invariant i <= n ==> 0 <= x <= 0;\nloop invariant i <= n ==> 0 <= y <= 0;\nloop invariant i > n ==> 0 <= i <= n;\nloop invariant i > n ==> 0 <= x <= 0;\nloop invariant i > n ==> 0 <= y <= 0;\nloop invariant i <= n ==> n > 0;\nloop invariant i > n ==> n > 0;\nloop invariant i <= n ==> i >= 0;\nloop invariant i > n ==> i >= 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i > n ==> x == 0;\nloop invariant i > n ==> y == 0;\nloop invariant i <= n ==> 0 <= i <= n;\nloop invariant i <= n ==> 0 <= x <= 0;\nloop invariant i <= n ==> 0 <= y <= 0;\nloop invariant i > n ==> 0 <= i <= n;\nloop invariant i > n ==> 0 <= x <= 0;\nloop invariant i > n ==> 0 <= y <= 0;\nloop invariant i <= n ==> n > 0;\nloop invariant i > n ==> n > 0;\nloop invariant i <= n ==> i >= 0;\nloop invariant i > n ==> i >= 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i > n ==> x == 0;\nloop invariant i > n ==> y == 0;\nloop invariant i <= n ==> 0 <= i <= n;\nloop invariant i <= n ==> 0 <= x <= 0;\nloop invariant i <= n ==> 0 <= y <= 0;\nloop invariant i > n ==> 0 <= i <= n;\nloop invariant i > n ==> 0 <= x <= 0;\nloop invariant i > n ==> 0 <= y <= 0;\nloop invariant i <= n ==> n > 0;\nloop invariant i > n ==> n > 0;\nloop invariant i <= n ==> i >= 0;\nloop invariant i > n ==> i >= 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i > n ==> x == 0;\nloop invariant i > n ==> y == 0;\nloop invariant i <= n ==> 0 <= i <= n;\nloop invariant i <= n ==> 0 <= x <= 0;\nloop invariant i <= n ==> 0 <= y <= 0;\nloop invariant i > n ==> 0 <= i <= n;\nloop invariant i > n ==> 0 <= x <= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x == 0 ==> i == 0;\nloop invariant y == 0 ==> i == 0;\nloop invariant x == n ==> i == n;\nloop invariant y == n ==> i == n;\n*/\n```",
            "```\n/*@\nloop invariant i1; loop invariant i2; loop invariant i3; loop invariant i4; loop invariant i5; loop invariant i6; loop invariant i7; loop invariant i8; loop invariant i9; loop invariant i10; loop invariant i11; loop invariant i12; loop invariant i13; loop invariant i14; loop invariant i15; loop invariant i16; loop invariant i17; loop invariant i18; loop invariant i19; loop invariant i20; loop invariant i21; loop invariant i22; loop invariant i23; loop invariant i24; loop invariant i25; loop invariant i26; loop invariant i27; loop invariant i28; loop invariant i29; loop invariant i30; loop invariant i31; loop invariant i32; loop invariant i33; loop invariant i34; loop invariant i35; loop invariant i36; loop invariant i37; loop invariant i38; loop invariant i39; loop invariant i40; loop invariant i41; loop invariant i42; loop invariant i43; loop invariant i44; loop invariant i45; loop invariant i46; loop invariant i47; loop invariant i48; loop invariant i49; loop invariant i50; loop invariant i51; loop invariant i52; loop invariant i53; loop invariant i54; loop invariant i55; loop invariant i56; loop invariant i57; loop invariant i58; loop invariant i59; loop invariant i60; loop invariant i61; loop invariant i62; loop invariant i63; loop invariant i64; loop invariant i65; loop invariant i66; loop invariant i67; loop invariant i68; loop invariant i69; loop invariant i70; loop invariant i71; loop invariant i72; loop invariant i73; loop invariant i74; loop invariant i75; loop invariant i76; loop invariant i77; loop invariant i78; loop invariant i79; loop invariant i80; loop invariant i81; loop invariant i82; loop invariant i83; loop invariant i84; loop invariant i85; loop invariant i86; loop invariant i87; loop invariant i88; loop invariant i89; loop invariant i90; loop invariant i91; loop invariant i92; loop invariant i93; loop invariant i94; loop invariant i95; loop invariant i96; loop invariant i97; loop invariant i98; loop invariant i99; loop invariant i100; loop invariant i101; loop invariant i102; loop invariant i103; loop invariant i104; loop invariant i105; loop invariant i106; loop invariant i107; loop invariant i108; loop invariant i109; loop invariant i110; loop invariant i111; loop invariant i112; loop invariant i113; loop invariant i114; loop invariant i115; loop invariant i116; loop invariant i117; loop invariant i118; loop invariant i119; loop invariant i120; loop invariant i121; loop invariant i122; loop invariant i123; loop invariant i124; loop invariant i125; loop invariant i126; loop invariant i127; loop invariant i128; loop invariant i129; loop invariant i130; loop invariant i131; loop invariant i132; loop invariant i133; loop invariant i134; loop invariant i135; loop invariant i136; loop invariant i137; loop invariant i138; loop invariant i139; loop invariant i140; loop invariant i141; loop invariant i142; loop invariant i143; loop invariant i144; loop invariant i145; loop invariant i146; loop invariant i147; loop invariant i148; loop invariant i149; loop invariant i150; loop invariant i151; loop invariant i152; loop invariant i153; loop invariant i154; loop invariant i155; loop invariant i156; loop invariant i157; loop invariant i158;\n*/\n```",
            "```\n/*@\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y * (y - 1) / 2 <= x <= y * (y + 1) / 2;\nloop invariant y >= i;\nloop invariant x >= i * (i - 1) / 2;\nloop invariant x <= i * (i + 1) / 2;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y * (y - 1) / 2 <= x <= y * (y + 1) / 2;\nloop invariant y >= i;\nloop invariant x >= i * (i - 1) / 2;\nloop invariant x <= i * (i + 1) / 2;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y * (y - 1) / 2 <= x <= y * (y + 1) / 2;\nloop invariant y >= i;\nloop invariant x >= i * (i - 1) / 2;\nloop invariant x <= i * (i + 1) / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == i * (i + 1) / 2;\nloop invariant y == 0;\nloop invariant 0 <= i <= n;\nloop invariant x == i * (i + 1) / 2;\nloop invariant y == 0;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 0;\nloop invariant 0 <= y <= 0;\nloop invariant 0 <= i <= i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\nloop invariant i1: 0 <= x <= 0;\nloop invariant i2: 0 <= y <= 0;\nloop invariant i3: 0 <= i <= i;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 0 ==> i >= 0;\nloop invariant x == 0 ==> i <= n;\nloop invariant y == 0 ==> i >= 0;\nloop invariant y == 0 ==> i <= n;\nloop invariant x == 0 ==> y == 0 ==> i >= 0;\nloop invariant x == 0 ==> y == 0 ==> i <= n;\nloop invariant x == 0 ==> i >= 0 ==> i <= n;\nloop invariant y == 0 ==> i >= 0 ==> i <= n;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0 ==> y == 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i <= n;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0 ==> y == 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i <= n;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0 ==> y == 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i <= n;\nloop invariant x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: i >= 0;\n\nloop invariant i6: x == 0 ==> y == 0;\nloop invariant i7: x == 0 ==> i >= 0;\n\nloop invariant i9: y == 0 ==> i >= 0;\n\nloop invariant i11: x == 0 ==> y == 0 ==> i >= 0;\n\n\n\n\nloop invariant i16: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0;\nloop invariant i17: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0;\nloop invariant i18: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0 ==> y == 0;\nloop invariant i19: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0;\nloop invariant i20: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i <= n;\nloop invariant i21: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n;\nloop invariant i22: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0;\nloop invariant i23: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0;\nloop invariant i24: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0 ==> y == 0;\nloop invariant i25: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0;\nloop invariant i26: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i <= n;\nloop invariant i27: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n;\nloop invariant i28: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0;\nloop invariant i29: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0;\nloop invariant i30: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0 ==> y == 0;\nloop invariant i31: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0;\nloop invariant i32: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i <= n;\nloop invariant i33: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\nloop invariant i == n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: n > 0;\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x + y == 0;\nloop invariant i <= n;\nloop invariant x + y == 0 ==> x == 0;\nloop invariant x + y == 0 ==> y == 0;\nloop invariant x + y == 0 ==> i <= n;\nloop invariant x + y == 0 ==> i == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0;\nloop invariant x + y == 0 ==> x == 0 ==> i == 0;\nloop invariant x + y == 0 ==> y == 0 ==> i == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> x + y == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> x == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> y == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> i <= n;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> i == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> y == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> i <= n;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> i == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> y == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> i <= n;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> i == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> i == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> y == 0 ==> i == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> x + y == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> x == 0;\nloop invariant x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: x + y == 0;\n\nloop invariant i6: x + y == 0 ==> x == 0;\nloop invariant i7: x + y == 0 ==> y == 0;\n\n\nloop invariant i10: x + y == 0 ==> x == 0 ==> y == 0;\n\n\n\n\nloop invariant i15: x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> x + y == 0;\nloop invariant i16: x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> x == 0;\nloop invariant i17: x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> y == 0;\n\nloop invariant i19: x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> i == 0;\nloop invariant i20: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0;\nloop invariant i21: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x == 0;\nloop invariant i22: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> y == 0;\nloop invariant i23: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> i <= n;\n\nloop invariant i25: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0;\nloop invariant i26: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> y == 0;\nloop invariant i27: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> i <= n;\n\nloop invariant i29: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0;\n\n\n\nloop invariant i33: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n;\nloop invariant i34: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> x + y == 0;\nloop invariant i35: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> x == 0;\nloop invariant i36: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant i >= 0;\nloop invariant i < n;\nloop invariant x == y;\nloop invariant y == i;\nloop invariant y < n;\nloop invariant x <= y;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == i * (i + 1) / 2;\nloop invariant x + y >= i * (i + 1) / 2;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\nloop invariant x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant x + y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\nloop invariant i1: i >= 0;\n\nloop invariant i3: x == y;\n\nloop invariant i5: y < n;\nloop invariant i6: x <= y;\nloop invariant i7: x <= n;\nloop invariant i8: x >= 0;\nloop invariant i9: y >= 0;\n\n\nloop invariant i12: x + y <= (n - i) * (n - i + 1) / 2;\n\nloop invariant i14: x + y >= 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant i >= 0;\nloop invariant i <= n - 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant x <= n * (n - 1) / 2;\nloop invariant y <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\nloop invariant i1: i >= 0;\n\nloop invariant i3: x >= 0;\nloop invariant i4: y >= 0;\nloop invariant i5: x <= y;\nloop invariant i6: x <= n * (n - 1) / 2;\nloop invariant i7: y <= n;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= x <= 0;\nloop invariant 0 <= y <= 0;\nloop invariant x <= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: 0 <= x <= 0;\nloop invariant i3: 0 <= y <= 0;\nloop invariant i4: x <= y;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: n > 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= n;\nloop invariant x >= 0;\nloop invariant x <= n * (n + 1) / 2;\nloop invariant i >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\nloop invariant i1: 0 <= y <= n;\nloop invariant i2: x >= 0;\nloop invariant i3: x <= n * (n + 1) / 2;\nloop invariant i4: i >= 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant n > 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i > n ==> x == 0;\nloop invariant i > n ==> y == 0;\nloop invariant i <= n ==> 0 <= i <= n;\nloop invariant i <= n ==> 0 <= x <= 0;\nloop invariant i <= n ==> 0 <= y <= 0;\nloop invariant i > n ==> 0 <= i <= n;\nloop invariant i > n ==> 0 <= x <= 0;\nloop invariant i > n ==> 0 <= y <= 0;\nloop invariant i <= n ==> n > 0;\nloop invariant i > n ==> n > 0;\nloop invariant i <= n ==> i >= 0;\nloop invariant i > n ==> i >= 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i > n ==> x == 0;\nloop invariant i > n ==> y == 0;\nloop invariant i <= n ==> 0 <= i <= n;\nloop invariant i <= n ==> 0 <= x <= 0;\nloop invariant i <= n ==> 0 <= y <= 0;\nloop invariant i > n ==> 0 <= i <= n;\nloop invariant i > n ==> 0 <= x <= 0;\nloop invariant i > n ==> 0 <= y <= 0;\nloop invariant i <= n ==> n > 0;\nloop invariant i > n ==> n > 0;\nloop invariant i <= n ==> i >= 0;\nloop invariant i > n ==> i >= 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i > n ==> x == 0;\nloop invariant i > n ==> y == 0;\nloop invariant i <= n ==> 0 <= i <= n;\nloop invariant i <= n ==> 0 <= x <= 0;\nloop invariant i <= n ==> 0 <= y <= 0;\nloop invariant i > n ==> 0 <= i <= n;\nloop invariant i > n ==> 0 <= x <= 0;\nloop invariant i > n ==> 0 <= y <= 0;\nloop invariant i <= n ==> n > 0;\nloop invariant i > n ==> n > 0;\nloop invariant i <= n ==> i >= 0;\nloop invariant i > n ==> i >= 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i > n ==> x == 0;\nloop invariant i > n ==> y == 0;\nloop invariant i <= n ==> 0 <= i <= n;\nloop invariant i <= n ==> 0 <= x <= 0;\nloop invariant i <= n ==> 0 <= y <= 0;\nloop invariant i > n ==> 0 <= i <= n;\nloop invariant i > n ==> 0 <= x <= 0;\nloop invariant i > n ==> 0 <= y <= 0;\nloop invariant i <= n ==> n > 0;\nloop invariant i > n ==> n > 0;\nloop invariant i <= n ==> i >= 0;\nloop invariant i > n ==> i >= 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i > n ==> x == 0;\nloop invariant i > n ==> y == 0;\nloop invariant i <= n ==> 0 <= i <= n;\nloop invariant i <= n ==> 0 <= x <= 0;\nloop invariant i <= n ==> 0 <= y <= 0;\nloop invariant i > n ==> 0 <= i <= n;\nloop invariant i > n ==> 0 <= x <= 0;\nloop invariant i > n ==> 0 <= y <= 0;\nloop invariant i <= n ==> n > 0;\nloop invariant i > n ==> n > 0;\nloop invariant i <= n ==> i >= 0;\nloop invariant i > n ==> i >= 0;\nloop invariant i <= n ==> x == 0;\nloop invariant i <= n ==> y == 0;\nloop invariant i > n ==> x == 0;\nloop invariant i > n ==> y == 0;\nloop invariant i <= n ==> 0 <= i <= n;\nloop invariant i <= n ==> 0 <= x <= 0;\nloop invariant i <= n ==> 0 <= y <= 0;\nloop invariant i > n ==> 0 <= i <= n;\nloop invariant i > n ==> 0 <= x <= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: n > 0;\nloop invariant i5: i <= n ==> x == 0;\nloop invariant i6: i <= n ==> y == 0;\nloop invariant i7: i > n ==> x == 0;\nloop invariant i8: i > n ==> y == 0;\nloop invariant i9: i <= n ==> 0 <= i <= n;\nloop invariant i10: i <= n ==> 0 <= x <= 0;\nloop invariant i11: i <= n ==> 0 <= y <= 0;\n\nloop invariant i13: i > n ==> 0 <= x <= 0;\nloop invariant i14: i > n ==> 0 <= y <= 0;\nloop invariant i15: i <= n ==> n > 0;\nloop invariant i16: i > n ==> n > 0;\nloop invariant i17: i <= n ==> i >= 0;\nloop invariant i18: i > n ==> i >= 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x == 0 ==> i == 0;\nloop invariant y == 0 ==> i == 0;\nloop invariant x == n ==> i == n;\nloop invariant y == n ==> i == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: 0 <= x <= n;\nloop invariant i3: 0 <= y <= n;\n\n\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant i1; loop invariant i2; loop invariant i3; loop invariant i4; loop invariant i5; loop invariant i6; loop invariant i7; loop invariant i8; loop invariant i9; loop invariant i10; loop invariant i11; loop invariant i12; loop invariant i13; loop invariant i14; loop invariant i15; loop invariant i16; loop invariant i17; loop invariant i18; loop invariant i19; loop invariant i20; loop invariant i21; loop invariant i22; loop invariant i23; loop invariant i24; loop invariant i25; loop invariant i26; loop invariant i27; loop invariant i28; loop invariant i29; loop invariant i30; loop invariant i31; loop invariant i32; loop invariant i33; loop invariant i34; loop invariant i35; loop invariant i36; loop invariant i37; loop invariant i38; loop invariant i39; loop invariant i40; loop invariant i41; loop invariant i42; loop invariant i43; loop invariant i44; loop invariant i45; loop invariant i46; loop invariant i47; loop invariant i48; loop invariant i49; loop invariant i50; loop invariant i51; loop invariant i52; loop invariant i53; loop invariant i54; loop invariant i55; loop invariant i56; loop invariant i57; loop invariant i58; loop invariant i59; loop invariant i60; loop invariant i61; loop invariant i62; loop invariant i63; loop invariant i64; loop invariant i65; loop invariant i66; loop invariant i67; loop invariant i68; loop invariant i69; loop invariant i70; loop invariant i71; loop invariant i72; loop invariant i73; loop invariant i74; loop invariant i75; loop invariant i76; loop invariant i77; loop invariant i78; loop invariant i79; loop invariant i80; loop invariant i81; loop invariant i82; loop invariant i83; loop invariant i84; loop invariant i85; loop invariant i86; loop invariant i87; loop invariant i88; loop invariant i89; loop invariant i90; loop invariant i91; loop invariant i92; loop invariant i93; loop invariant i94; loop invariant i95; loop invariant i96; loop invariant i97; loop invariant i98; loop invariant i99; loop invariant i100; loop invariant i101; loop invariant i102; loop invariant i103; loop invariant i104; loop invariant i105; loop invariant i106; loop invariant i107; loop invariant i108; loop invariant i109; loop invariant i110; loop invariant i111; loop invariant i112; loop invariant i113; loop invariant i114; loop invariant i115; loop invariant i116; loop invariant i117; loop invariant i118; loop invariant i119; loop invariant i120; loop invariant i121; loop invariant i122; loop invariant i123; loop invariant i124; loop invariant i125; loop invariant i126; loop invariant i127; loop invariant i128; loop invariant i129; loop invariant i130; loop invariant i131; loop invariant i132; loop invariant i133; loop invariant i134; loop invariant i135; loop invariant i136; loop invariant i137; loop invariant i138; loop invariant i139; loop invariant i140; loop invariant i141; loop invariant i142; loop invariant i143; loop invariant i144; loop invariant i145; loop invariant i146; loop invariant i147; loop invariant i148; loop invariant i149; loop invariant i150; loop invariant i151; loop invariant i152; loop invariant i153; loop invariant i154; loop invariant i155; loop invariant i156; loop invariant i157; loop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y * (y - 1) / 2 <= x <= y * (y + 1) / 2;\nloop invariant y >= i;\nloop invariant x >= i * (i - 1) / 2;\nloop invariant x <= i * (i + 1) / 2;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y * (y - 1) / 2 <= x <= y * (y + 1) / 2;\nloop invariant y >= i;\nloop invariant x >= i * (i - 1) / 2;\nloop invariant x <= i * (i + 1) / 2;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y * (y - 1) / 2 <= x <= y * (y + 1) / 2;\nloop invariant y >= i;\nloop invariant x >= i * (i - 1) / 2;\nloop invariant x <= i * (i + 1) / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\nloop invariant i1: i >= 0;\n\nloop invariant i3: x >= 0;\nloop invariant i4: y >= 0;\nloop invariant i5: y <= n;\nloop invariant i6: y * (y - 1) / 2 <= x <= y * (y + 1) / 2;\n\n\nloop invariant i9: x <= i * (i + 1) / 2;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == i * (i + 1) / 2;\nloop invariant y == 0;\nloop invariant 0 <= i <= n;\nloop invariant x == i * (i + 1) / 2;\nloop invariant y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\n\nloop invariant i3: y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 121: unbound logic variable i1. Ignoring loop annotation",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: 0 <= x <= 0;\nloop invariant i5: 0 <= y <= 0;\nloop invariant i6: 0 <= i <= i;\nloop invariant i7: i >= 0;\nloop invariant i8: i <= n;\nloop invariant i9: x == 0 ==> y == 0;\nloop invariant i10: x == 0 ==> i >= 0;\nloop invariant i11: x == 0 ==> i <= n;\nloop invariant i12: y == 0 ==> i >= 0;\nloop invariant i13: y == 0 ==> i <= n;\nloop invariant i14: x == 0 ==> y == 0 ==> i >= 0;\nloop invariant i15: x == 0 ==> y == 0 ==> i <= n;\nloop invariant i16: x == 0 ==> i >= 0 ==> i <= n;\nloop invariant i17: y == 0 ==> i >= 0 ==> i <= n;\nloop invariant i18: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n;\nloop invariant i19: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0;\nloop invariant i20: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0;\nloop invariant i21: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0 ==> y == 0;\nloop invariant i22: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0;\nloop invariant i23: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i <= n;\nloop invariant i24: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n;\nloop invariant i25: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0;\nloop invariant i26: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0;\nloop invariant i27: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0 ==> y == 0;\nloop invariant i28: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0;\nloop invariant i29: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i <= n;\nloop invariant i30: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n;\nloop invariant i31: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0;\nloop invariant i32: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0;\nloop invariant i33: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0 ==> y == 0;\nloop invariant i34: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0;\nloop invariant i35: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i <= n;\nloop invariant i36: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n;\nloop invariant i37: n > 0;\nloop invariant i38: i == n;\nloop invariant i39: x + y == 0;\nloop invariant i40: x + y == 0 ==> x == 0;\nloop invariant i41: x + y == 0 ==> y == 0;\nloop invariant i42: x + y == 0 ==> i <= n;\nloop invariant i43: x + y == 0 ==> i == 0;\nloop invariant i44: x + y == 0 ==> x == 0 ==> y == 0;\nloop invariant i45: x + y == 0 ==> x == 0 ==> i == 0;\nloop invariant i46: x + y == 0 ==> y == 0 ==> i == 0;\nloop invariant i47: x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0;\nloop invariant i48: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n;\nloop invariant i49: x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> x + y == 0;\nloop invariant i50: x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> x == 0;\nloop invariant i51: x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> y == 0;\nloop invariant i52: x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> i <= n;\nloop invariant i53: x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> i == 0;\nloop invariant i54: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0;\nloop invariant i55: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x == 0;\nloop invariant i56: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> y == 0;\nloop invariant i57: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> i <= n;\nloop invariant i58: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> i == 0;\nloop invariant i59: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0;\nloop invariant i60: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> y == 0;\nloop invariant i61: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> i <= n;\nloop invariant i62: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> i == 0;\nloop invariant i63: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0;\nloop invariant i64: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> i == 0;\nloop invariant i65: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> y == 0 ==> i == 0;\nloop invariant i66: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0;\nloop invariant i67: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n;\nloop invariant i68: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> x + y == 0;\nloop invariant i69: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> x == 0;\nloop invariant i70: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> y == 0;\nloop invariant i71: i < n;\nloop invariant i72: x == y;\nloop invariant i73: y == i;\nloop invariant i74: y < n;\nloop invariant i75: x <= y;\nloop invariant i76: x <= n;\nloop invariant i77: x >= 0;\nloop invariant i78: y >= 0;\nloop invariant i79: x + y == i * (i + 1) / 2;\nloop invariant i80: x + y >= i * (i + 1) / 2;\nloop invariant i81: x + y <= (n - i) * (n - i + 1) / 2;\nloop invariant i82: x + y >= (n - i) * (n - i + 1) / 2;\nloop invariant i83: x + y >= 0;\nloop invariant i84: i <= n - 1;\nloop invariant i85: x <= n * (n - 1) / 2;\nloop invariant i86: y <= n;\nloop invariant i87: 0 <= y <= n;\nloop invariant i88: x <= n * (n + 1) / 2;\nloop invariant i89: i <= n ==> x == 0;\nloop invariant i90: i <= n ==> y == 0;\nloop invariant i91: i > n ==> x == 0;\nloop invariant i92: i > n ==> y == 0;\nloop invariant i93: i <= n ==> 0 <= i <= n;\nloop invariant i94: i <= n ==> 0 <= x <= 0;\nloop invariant i95: i <= n ==> 0 <= y <= 0;\nloop invariant i96: i > n ==> 0 <= i <= n;\nloop invariant i97: i > n ==> 0 <= x <= 0;\nloop invariant i98: i > n ==> 0 <= y <= 0;\nloop invariant i99: i <= n ==> n > 0;\nloop invariant i100: i > n ==> n > 0;\nloop invariant i101: i <= n ==> i >= 0;\nloop invariant i102: i > n ==> i >= 0;\nloop invariant i103: 0 <= x <= n;\nloop invariant i104: x == 0 ==> i == 0;\nloop invariant i105: y == 0 ==> i == 0;\nloop invariant i106: x == n ==> i == n;\nloop invariant i107: y == n ==> i == n;\nloop invariant i108: i1; loop invariant i2; loop invariant i3; loop invariant i4; loop invariant i5; loop invariant i6; loop invariant i7; loop invariant i8; loop invariant i9; loop invariant i10; loop invariant i11; loop invariant i12; loop invariant i13; loop invariant i14; loop invariant i15; loop invariant i16; loop invariant i17; loop invariant i18; loop invariant i19; loop invariant i20; loop invariant i21; loop invariant i22; loop invariant i23; loop invariant i24; loop invariant i25; loop invariant i26; loop invariant i27; loop invariant i28; loop invariant i29; loop invariant i30; loop invariant i31; loop invariant i32; loop invariant i33; loop invariant i34; loop invariant i35; loop invariant i36; loop invariant i37; loop invariant i38; loop invariant i39; loop invariant i40; loop invariant i41; loop invariant i42; loop invariant i43; loop invariant i44; loop invariant i45; loop invariant i46; loop invariant i47; loop invariant i48; loop invariant i49; loop invariant i50; loop invariant i51; loop invariant i52; loop invariant i53; loop invariant i54; loop invariant i55; loop invariant i56; loop invariant i57; loop invariant i58; loop invariant i59; loop invariant i60; loop invariant i61; loop invariant i62; loop invariant i63; loop invariant i64; loop invariant i65; loop invariant i66; loop invariant i67; loop invariant i68; loop invariant i69; loop invariant i70; loop invariant i71; loop invariant i72; loop invariant i73; loop invariant i74; loop invariant i75; loop invariant i76; loop invariant i77; loop invariant i78; loop invariant i79; loop invariant i80; loop invariant i81; loop invariant i82; loop invariant i83; loop invariant i84; loop invariant i85; loop invariant i86; loop invariant i87; loop invariant i88; loop invariant i89; loop invariant i90; loop invariant i91; loop invariant i92; loop invariant i93; loop invariant i94; loop invariant i95; loop invariant i96; loop invariant i97; loop invariant i98; loop invariant i99; loop invariant i100; loop invariant i101; loop invariant i102; loop invariant i103; loop invariant i104; loop invariant i105; loop invariant i106; loop invariant i107; loop invariant i108; loop invariant i109; loop invariant i110; loop invariant i111; loop invariant i112; loop invariant i113; loop invariant i114; loop invariant i115; loop invariant i116; loop invariant i117; loop invariant i118; loop invariant i119; loop invariant i120; loop invariant i121; loop invariant i122; loop invariant i123; loop invariant i124; loop invariant i125; loop invariant i126; loop invariant i127; loop invariant i128; loop invariant i129; loop invariant i130; loop invariant i131; loop invariant i132; loop invariant i133; loop invariant i134; loop invariant i135; loop invariant i136; loop invariant i137; loop invariant i138; loop invariant i139; loop invariant i140; loop invariant i141; loop invariant i142; loop invariant i143; loop invariant i144; loop invariant i145; loop invariant i146; loop invariant i147; loop invariant i148; loop invariant i149; loop invariant i150; loop invariant i151; loop invariant i152; loop invariant i153; loop invariant i154; loop invariant i155; loop invariant i156; loop invariant i157; loop invariant i158;\nloop invariant i109: y * (y - 1) / 2 <= x <= y * (y + 1) / 2;\nloop invariant i110: y >= i;\nloop invariant i111: x >= i * (i - 1) / 2;\nloop invariant i112: x <= i * (i + 1) / 2;\nloop invariant i113: x == i * (i + 1) / 2;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
        "combined_annotation_num_solver_calls": 31,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  int i=0, x=0, y=0;\n  int n=unknown_int();\n  assume(n>0);\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: 0 <= x <= 0;\nloop invariant i5: 0 <= y <= 0;\nloop invariant i6: 0 <= i <= i;\nloop invariant i7: i >= 0;\n\nloop invariant i9: x == 0 ==> y == 0;\nloop invariant i10: x == 0 ==> i >= 0;\n\nloop invariant i12: y == 0 ==> i >= 0;\n\nloop invariant i14: x == 0 ==> y == 0 ==> i >= 0;\n\n\n\n\nloop invariant i19: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0;\nloop invariant i20: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0;\nloop invariant i21: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0 ==> y == 0;\nloop invariant i22: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0;\nloop invariant i23: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i <= n;\nloop invariant i24: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n;\nloop invariant i25: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0;\nloop invariant i26: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0;\nloop invariant i27: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0 ==> y == 0;\nloop invariant i28: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0;\nloop invariant i29: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i <= n;\nloop invariant i30: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n;\nloop invariant i31: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0;\nloop invariant i32: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0;\nloop invariant i33: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> x == 0 ==> y == 0;\nloop invariant i34: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0;\nloop invariant i35: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i <= n;\nloop invariant i36: x == 0 ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n ==> y == 0 ==> i >= 0 ==> i <= n;\nloop invariant i37: n > 0;\n\nloop invariant i39: x + y == 0;\nloop invariant i40: x + y == 0 ==> x == 0;\nloop invariant i41: x + y == 0 ==> y == 0;\n\n\nloop invariant i44: x + y == 0 ==> x == 0 ==> y == 0;\n\n\n\n\nloop invariant i49: x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> x + y == 0;\nloop invariant i50: x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> x == 0;\nloop invariant i51: x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> y == 0;\nloop invariant i52: x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> i <= n;\nloop invariant i53: x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> i == 0;\nloop invariant i54: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0;\nloop invariant i55: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x == 0;\nloop invariant i56: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> y == 0;\nloop invariant i57: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> i <= n;\n\nloop invariant i59: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0;\nloop invariant i60: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> y == 0;\nloop invariant i61: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> i <= n;\n\nloop invariant i63: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0;\n\n\n\nloop invariant i67: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n;\nloop invariant i68: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> x + y == 0;\nloop invariant i69: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> x == 0;\nloop invariant i70: x + y == 0 ==> x == 0 ==> y == 0 ==> i <= n ==> x + y == 0 ==> x == 0 ==> y == 0 ==> i == 0 ==> y == 0;\n\nloop invariant i72: x == y;\n\nloop invariant i74: y < n;\nloop invariant i75: x <= y;\nloop invariant i76: x <= n;\nloop invariant i77: x >= 0;\nloop invariant i78: y >= 0;\n\n\nloop invariant i81: x + y <= (n - i) * (n - i + 1) / 2;\n\nloop invariant i83: x + y >= 0;\n\nloop invariant i85: x <= n * (n - 1) / 2;\nloop invariant i86: y <= n;\nloop invariant i87: 0 <= y <= n;\nloop invariant i88: x <= n * (n + 1) / 2;\nloop invariant i89: i <= n ==> x == 0;\nloop invariant i90: i <= n ==> y == 0;\nloop invariant i91: i > n ==> x == 0;\nloop invariant i92: i > n ==> y == 0;\nloop invariant i93: i <= n ==> 0 <= i <= n;\nloop invariant i94: i <= n ==> 0 <= x <= 0;\nloop invariant i95: i <= n ==> 0 <= y <= 0;\n\nloop invariant i97: i > n ==> 0 <= x <= 0;\nloop invariant i98: i > n ==> 0 <= y <= 0;\nloop invariant i99: i <= n ==> n > 0;\nloop invariant i100: i > n ==> n > 0;\nloop invariant i101: i <= n ==> i >= 0;\nloop invariant i102: i > n ==> i >= 0;\nloop invariant i103: 0 <= x <= n;\n\n\nloop invariant i106: x == n ==> i == n;\nloop invariant i107: y == n ==> i == n;\n\nloop invariant i109: y * (y - 1) / 2 <= x <= y * (y + 1) / 2;\n\n\nloop invariant i112: x <= i * (i + 1) / 2;\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-CPA-example_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-disj_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-forward_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-interpolants_needed-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-paper-prog_d-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs12_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testabs8_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop10_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop11_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop13_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop14_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop15_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop16_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop1_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop29_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop2_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop4_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop6_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop7_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/ken-imp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/rajamani_1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/simple_if.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/split.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/up-nested.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/loop4_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/NetBSD_loop_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/afnp2014_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/bhmr2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/css2003_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/hhk2008_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/jm2006_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_1_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_2_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_k_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/count_up_down_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/for_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum03_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum04_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_02_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/terminator_03_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/trex03_true-unreach-call.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_1_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/while_infinite_loop_2_true-unreach-call_false-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/afnp2014_true-unreach-call.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cegar2.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/dec.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/decn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/ex14n.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig3.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig9.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form22.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form25.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/form27.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/inc.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum04_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/trex03_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/05.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/07.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/08.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/10.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/11.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/15.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/16.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/18.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/23.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/30.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/32.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/37.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/38.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/41.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/43.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/44.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/46.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/popl.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/05.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/07.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/37.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/39.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv_simp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/xy10.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/const_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/multivar_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/phases_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe3.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/simple_safe4.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_safe2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbr.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/barbrprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bk-nat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/bkley.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/efm.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/ex1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnat.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifnatprime.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/lifo.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/seesaw.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/substring1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/swim1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_g_Ctoc.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/NetBSD_loop_int.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/bind_expands_vars2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/gulwani_cegar2.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/ken-imp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/rajamani_1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-mime-fromqp.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-mime7to8_arr_three_chars_no_test_ok.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/simple.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/simple_if.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/up-nested.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/count_up_down_true.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/svcomp/for_infinite_loop_1_true.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/MAP-singleloop2-pepm-proc.c_VeriMAP_true.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/gulwani_fig1a.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/llreve/barthe2_merged_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/cggmp2005_variant_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gr2006_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/half_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/incn.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/w2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/02.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/13.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/14.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/19.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/20.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/39.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/cav.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/19.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/gulv.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/cav/pldi082_unbounded.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/underapprox_unsafe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/sendmail-close-angle.c"
        ],
        "skipped": [],
        "total": 174,
        "success_count": 147,
        "failure_count": 27,
        "success_rate": 0.8448275862068966
    }
}