{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/69.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n, v1, v2, v3;\n    int x = 1;\n    int y;\n\n    while (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n      {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 1 <= y <= n;\nloop invariant (x >= 1) && (x <= n+1);\nloop invariant (y >= 1) && (y <= n);\nloop invariant (y == n - x);\nloop invariant (x == n+1);\nloop invariant (x > n);\nloop invariant (y == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= n - n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant y = n - x;\nloop invariant x - 1 <= y <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n + 1;\nloop invariant 0 <= y <= n - x;\n*/\n```",
            "```\n/*@\nloop invariant ( x > 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= n );\nloop invariant ( x <= n );\nloop invariant ( y = n - x );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= 0;\nloop invariant n <= 100000;\nloop invariant x <= (n + 1);\nloop invariant y >= 0;\nloop invariant y <= 100000;\nloop invariant x + y <= n;\nloop invariant x + y >= 1;\nloop invariant y >= n - x;\nloop invariant x >= 1;\nloop invariant (n > 0) ==> (y >= 0);\nloop invariant (x >= 1) ==> (y >= 0);\nloop invariant (x <= n) ==> (y >= 0);\nloop invariant (x <= n) ==> (y >= 0);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n - x;\nloop invariant x + y <= n;\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n - x;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y = n;\nloop invariant x <= n;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= n + 1;\nloop invariant x >= 1;\nloop invariant x <= n + 1;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y == n - (x - 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n;\nloop invariant 1 <= x <= n + 1;\nloop invariant 0 <= y <= n - x;\nloop invariant x <= n + 1 ==> y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n <= 1;\nloop invariant x == n;\nloop invariant y == 0;\nloop invariant n <= x <= n;\nloop invariant x <= y <= n;\nloop invariant (n == 0 ==> y == n);\nloop invariant (n > 0 ==> y >= 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n+1;\nloop invariant n >= 0;\nloop invariant 0 <= y <= n+1;\nloop invariant n - x == y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n;\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= y <= n;\nloop invariant (x >= 1) && (x <= n+1);\nloop invariant (y >= 1) && (y <= n);\nloop invariant (y == n - x);\nloop invariant (x == n+1);\nloop invariant (x > n);\nloop invariant (y == 0);\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 1 <= y <= n is preserved but not established.\nloop invariant (x >= 1) && (x <= n+1) is partially proven to be inductive.\nloop invariant (y >= 1) && (y <= n) is partially proven to be inductive.\nloop invariant (y == n - x) is preserved but not established.\nloop invariant (x == n+1) is preserved but not established.\nloop invariant (x > n) is partially proven to be inductive.\nloop invariant (y == 0) is partially proven to be inductive.\nAssertion y >= 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n, v1, v2, v3;\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n      {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= n - n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= x <= n is neither established nor preserved.\nloop invariant y >= 0 is preserved but not established.\nloop invariant y <= n - x is neither established nor preserved.\nloop invariant y >= n - n is partially proven to be inductive.\nloop invariant y <= n is partially proven to be inductive.\nAssertion y >= 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n, v1, v2, v3;\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n      {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant y = n - x;\nloop invariant x - 1 <= y <= n;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 14: Assignment operators not allowed in annotations.",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n, v1, v2, v3;\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n      {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n + 1;\nloop invariant 0 <= y <= n - x;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= x <= n + 1 is preserved but not established.\nloop invariant 0 <= y <= n - x is neither established nor preserved.\nAssertion y >= 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n, v1, v2, v3;\n    int x = 1;\n    int y;\n\n    /*@\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n      {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant ( x > 0 );\nloop invariant ( y >= 0 );\nloop invariant ( y <= n );\nloop invariant ( x <= n );\nloop invariant ( y = n - x );\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 17: Assignment operators not allowed in annotations.",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n, v1, v2, v3;\n    int x = 1;\n    int y;\n\n    /*@\nloop invariant i1: ( x > 0 );\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n      {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= 0;\nloop invariant n <= 100000;\nloop invariant x <= (n + 1);\nloop invariant y >= 0;\nloop invariant y <= 100000;\nloop invariant x + y <= n;\nloop invariant x + y >= 1;\nloop invariant y >= n - x;\nloop invariant x >= 1;\nloop invariant (n > 0) ==> (y >= 0);\nloop invariant (x >= 1) ==> (y >= 0);\nloop invariant (x <= n) ==> (y >= 0);\nloop invariant (x <= n) ==> (y >= 0);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\nloop invariant (x <= n) ==> (y <= 100000);\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= x <= n is neither established nor preserved.\nloop invariant x >= 0 is partially proven to be inductive.\nloop invariant n <= 100000 is preserved but not established.\nloop invariant x <= (n + 1) is partially proven to be inductive.\nloop invariant y >= 0 is preserved but not established.\nloop invariant y <= 100000 is preserved but not established.\nloop invariant x + y <= n is neither established nor preserved.\nloop invariant x + y >= 1 is partially proven to be inductive.\nloop invariant y >= n - x is preserved but not established.\nloop invariant x >= 1 is partially proven to be inductive.\nloop invariant (n > 0) ==> (y >= 0) is partially proven to be inductive.\nloop invariant (x >= 1) ==> (y >= 0) is partially proven to be inductive.\nloop invariant (x <= n) ==> (y >= 0) is partially proven to be inductive.\nloop invariant (x <= n) ==> (y <= 100000) is partially proven to be inductive.\nAssertion y >= 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n, v1, v2, v3;\n    int x = 1;\n    int y;\n\n    /*@\n\nloop invariant i2: x >= 0;\n\n\n\n\n\n\n\nloop invariant i10: x >= 1;\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n      {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n - x;\nloop invariant x + y <= n;\nloop invariant y >= 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= x <= n is neither established nor preserved.\nloop invariant 0 <= y <= n - x is neither established nor preserved.\nloop invariant x + y <= n is partially proven to be inductive.\nloop invariant y >= 0 is partially proven to be inductive.\nAssertion y >= 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n, v1, v2, v3;\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n      {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n - x;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x + y = n;\nloop invariant x <= n;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant y >= 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 17: Assignment operators not allowed in annotations.",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n, v1, v2, v3;\n    int x = 1;\n    int y;\n\n    /*@\n\n\nloop invariant i3: x >= 1;\n\n\n\nloop invariant i7: x >= 0;\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n      {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= n + 1;\nloop invariant x >= 1;\nloop invariant x <= n + 1;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y == n - (x - 1);\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 1 <= x <= n + 1 is preserved but not established.\nloop invariant x >= 1 is partially proven to be inductive.\nloop invariant x <= n + 1 is partially proven to be inductive.\nloop invariant y >= 0 is preserved but not established.\nloop invariant y <= n is preserved but not established.\nloop invariant y == n - (x - 1) is preserved but not established.\nAssertion y >= 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n, v1, v2, v3;\n    int x = 1;\n    int y;\n\n    /*@\n\nloop invariant i2: x >= 1;\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n      {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= n;\nloop invariant 1 <= x <= n + 1;\nloop invariant 0 <= y <= n - x;\nloop invariant x <= n + 1 ==> y >= 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= n is preserved but not established.\nloop invariant 1 <= x <= n + 1 is partially proven to be inductive.\nloop invariant 0 <= y <= n - x is neither established nor preserved.\nloop invariant x <= n + 1 ==> y >= 0 is partially proven to be inductive.\nAssertion y >= 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n, v1, v2, v3;\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n      {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\nloop invariant x + y = n ==> x <= n;\nloop invariant x + y = n ==> y <= n - x;\nloop invariant x + y = n ==> y >= 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 15: Assignment operators not allowed in annotations.",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n, v1, v2, v3;\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n      {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant y == n - x;\nloop invariant x + y <= n;\nloop invariant x <= n;\nloop invariant y <= n;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= x <= n is neither established nor preserved.\nloop invariant 0 <= y <= n is preserved but not established.\nloop invariant y == n - x is neither established nor preserved.\nloop invariant x + y <= n is partially proven to be inductive.\nloop invariant x <= n is partially proven to be inductive.\nloop invariant y <= n is partially proven to be inductive.\nAssertion y >= 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n, v1, v2, v3;\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n      {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= n <= 1;\nloop invariant x == n;\nloop invariant y == 0;\nloop invariant n <= x <= n;\nloop invariant x <= y <= n;\nloop invariant (n == 0 ==> y == n);\nloop invariant (n > 0 ==> y >= 0);\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= n <= 1 is preserved but not established.\nloop invariant x == n is preserved but not established.\nloop invariant y == 0 is preserved but not established.\nloop invariant n <= x <= n is partially proven to be inductive.\nloop invariant x <= y <= n is preserved but not established.\nloop invariant (n == 0 ==> y == n) is partially proven to be inductive.\nloop invariant (n > 0 ==> y >= 0) is partially proven to be inductive.\nAssertion y >= 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n, v1, v2, v3;\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n      {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n+1;\nloop invariant n >= 0;\nloop invariant 0 <= y <= n+1;\nloop invariant n - x == y;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= x <= n+1 is preserved but not established.\nloop invariant n >= 0 is partially proven to be inductive.\nloop invariant 0 <= y <= n+1 is preserved but not established.\nloop invariant n - x == y is neither established nor preserved.\nAssertion y >= 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n, v1, v2, v3;\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n      {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= n;\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y <= n;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 16: Assignment operators not allowed in annotations.",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n, v1, v2, v3;\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n\n\n\nloop invariant i8: x >= 1;\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n      {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 25: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n, v1, v2, v3;\n    int x = 1;\n    int y;\n\n    /*@\nloop invariant i1: 1 <= y <= n;\nloop invariant i2: (x >= 1) && (x <= n+1);\nloop invariant i3: (y >= 1) && (y <= n);\nloop invariant i4: (y == n - x);\nloop invariant i5: (x == n+1);\nloop invariant i6: (x > n);\nloop invariant i7: (y == 0);\nloop invariant i8: 0 <= x <= n;\nloop invariant i9: y >= 0;\nloop invariant i10: y <= n - x;\nloop invariant i11: y >= n - n;\nloop invariant i12: y <= n;\nloop invariant i13: y = n - x;\nloop invariant i14: x - 1 <= y <= n;\nloop invariant i15: 0 <= x <= n + 1;\nloop invariant i16: 0 <= y <= n - x;\nloop invariant i17: ( x > 0 );\nloop invariant i18: ( y >= 0 );\nloop invariant i19: ( y <= n );\nloop invariant i20: ( x <= n );\nloop invariant i21: ( y = n - x );\nloop invariant i22: x >= 0;\nloop invariant i23: n <= 100000;\nloop invariant i24: x <= (n + 1);\nloop invariant i25: y <= 100000;\nloop invariant i26: x + y <= n;\nloop invariant i27: x + y >= 1;\nloop invariant i28: y >= n - x;\nloop invariant i29: x >= 1;\nloop invariant i30: (n > 0) ==> (y >= 0);\nloop invariant i31: (x >= 1) ==> (y >= 0);\nloop invariant i32: (x <= n) ==> (y >= 0);\nloop invariant i33: (x <= n) ==> (y <= 100000);\nloop invariant i34: x + y = n;\nloop invariant i35: x <= n;\nloop invariant i36: 1 <= x <= n + 1;\nloop invariant i37: x <= n + 1;\nloop invariant i38: y == n - (x - 1);\nloop invariant i39: 0 <= n;\nloop invariant i40: x <= n + 1 ==> y >= 0;\nloop invariant i41: x + y = n ==> y >= 0;\nloop invariant i42: x + y = n ==> x <= n;\nloop invariant i43: x + y = n ==> y <= n - x;\nloop invariant i44: 0 <= y <= n;\nloop invariant i45: y == n - x;\nloop invariant i46: 0 <= n <= 1;\nloop invariant i47: x == n;\nloop invariant i48: y == 0;\nloop invariant i49: n <= x <= n;\nloop invariant i50: x <= y <= n;\nloop invariant i51: (n == 0 ==> y == n);\nloop invariant i52: (n > 0 ==> y >= 0);\nloop invariant i53: 0 <= x <= n+1;\nloop invariant i54: n >= 0;\nloop invariant i55: 0 <= y <= n+1;\nloop invariant i56: n - x == y;\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n      {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
        "combined_annotation_num_solver_calls": 20,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n, v1, v2, v3;\n    int x = 1;\n    int y;\n\n    /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i17: ( x > 0 );\n\n\n\n\nloop invariant i22: x >= 0;\n\n\n\n\n\n\nloop invariant i29: x >= 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n      {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loops/sum01_true-unreach-call_true-termination.i.annot.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/invgen/MADWiFi-encode_ie_ok.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/85.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/sharma_splitter/ex2.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/42.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/diamond_1-1.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-new/count_by_nondet_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/odd.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/even.c",
            "../dataset/loop_invariants/code2inv/24.c",
            "../dataset/loop_invariants/code2inv/130.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/diamond_safe1.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/crafted/overflow_safe1.c",
            "../dataset/loop_invariants/code2inv/113.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/ddlm2013_true-unreach-call.c",
            "../dataset/loop_invariants/code2inv/69.c"
        ],
        "skipped": [],
        "total": 16,
        "success_count": 2,
        "failure_count": 14,
        "success_rate": 0.125
    }
}