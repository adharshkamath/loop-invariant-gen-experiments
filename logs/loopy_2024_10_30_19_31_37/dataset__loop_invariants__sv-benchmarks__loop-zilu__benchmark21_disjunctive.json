{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark21_disjunctive.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  while (1) {\n    if (x+y>-2) {\n      break;\n    }\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y; loop invariant x >= 0 && y >= 0; loop invariant x + y >= 0 && x + y <= 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 1;\nloop invariant 0 <= y <= 1;\nloop invariant x == y ==> x >= 0;\nloop invariant ! (x == y) ==> x <= 0;\nloop invariant !(x == y) ==> y >= 0;\nloop invariant !(x == y) ==> y <= 1;\nloop invariant if (x > 0) then (x + y) > -2;\nloop invariant ! (x > 0) ==> (y + x) > -2;\nloop invariant ! (x > 0) && !(y > 0) ==> y > 0;\nloop invariant ! (x > 0) && !(y > 0) ==> x > 0;\nloop invariant x > 0 ==> !(y > 0);\nloop invariant y > 0 ==> !(x > 0);\nloop invariant (x > 0) ==> (x == y) ==> (x >= 0);\nloop invariant (x > 0) ==> ! (x == y) ==> (x <= 0);\nloop invariant (x > 0) ==> ! (x == y) ==> (y >= 0);\nloop invariant (x > 0) ==> ! (x == y) ==> (y <= 1);\nloop invariant !(x > 0) ==> !(y > 0) ==> (y == x) ==> (y >= 0);\nloop invariant !(x > 0) ==> !(y > 0) ==> !(y == x) ==> (y <= 0);\nloop invariant !(x > 0) ==> !(y > 0) ==> !(y == x) ==> (y >= 0);\nloop invariant !(x > 0) ==> !(y > 0) ==> !(y == x) ==> (y <= 1);\nloop invariant (x > 0) ==> !(x == y) ==> (x >= 0);\nloop invariant (x > 0) ==> !(x == y) ==> (y <= 0);\nloop invariant (x > 0) ==> !(x == y) ==> (y >= 0);\nloop invariant (x > 0) ==> !(x == y) ==> (y <= 1);\nloop invariant !(x > 0) ==> !(x == y) ==> (x >= 0);\nloop invariant !(x > 0) ==> !(x == y) ==> (y >= 0);\nloop invariant !(x > 0) ==> !(x == y) ==> (y <= 1);\nloop invariant !(x > 0) ==> !(y > 0) ==> (x <= 0);\nloop invariant !(x > 0) ==> !(y > 0) ==> (y >= 0);\nloop invariant !(x > 0) ==> !(y > 0) ==> (y <= 1);\nloop invariant !(x > 0) ==> ! (x == y) ==> (y >= 0);\nloop invariant !(x > 0) ==> ! (x == y) ==> (y <= 1);\nloop invariant !(x > 0) ==> !(x == y) ==> (y >= 0);\nloop invariant !(x > 0) ==> !(x == y) ==> (y <= 1);\nloop invariant !(x > 0) ==> !(y > 0) ==> (x <= 0);\nloop invariant !(x > 0) ==> !(x == y) ==> (x <= 0);\nloop invariant !(x > 0) ==> !(y > 0) ==> (x >= 0);\nloop invariant !(x > 0) ==> !(y > 0) ==> (x <= 1);\nloop invariant !(x > 0) ==> !(y > 0) ==> (x >= 0);\nloop invariant !(x > 0) ==> !(y > 0) ==> (x <= 1);\nloop invariant !(x > 0) ==> !(x == y) ==> (x <= 0);\nloop invariant !(x > 0) ==> !(x == y) ==> (x >= 0);\nloop invariant !(x > 0) ==> !(x == y) ==> (x <= 1);\nloop invariant !(x > 0) ==> !(x == y) ==> (x >= 0);\nloop invariant !(x > 0) ==> !(x == y) ==> (x <= 1);\nloop invariant !(x > 0) ==> !(y > 0) ==> (y <= 0);\nloop invariant !(x > 0) ==> !(y > 0) ==> (y >= 0);\nloop invariant !(x > 0) ==> !(y > 0) ==> (y <= 1);\nloop invariant !(x > 0) ==> !(x == y) ==> (y <= 0);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 2147483647;\nloop invariant 1 <= y <= 2147483647;\nloop invariant (x + y) > -2;\nloop invariant (x <= 0 || x > 0);\nloop invariant (y <= 0 || y > 0);\nloop invariant (x + y) > -2 ==> (x > -2 || y > -2);\nloop invariant (x <= 0 || x > 0) ==> (x > 0 || x <= 0);\nloop invariant (y <= 0 || y > 0) ==> (y > 0 || y <= 0);\nloop invariant (x + y) > -2 ==> (x + y) > -2;\nloop invariant (x <= 0 || x > 0) ==> (x <= 0 || x > 0);\nloop invariant (y <= 0 || y > 0) ==> (y <= 0 || y > 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 3;\nloop invariant 1 <= y <= 3;\nloop invariant x + y < 5;\nloop invariant x + y > -5;\nloop invariant x > 0 || y > 0;\nloop invariant x + y > -2;\nloop invariant x + y <= 5;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y >= -5;\nloop invariant x + y <= 5;\nloop invariant x + y > -2;\nloop invariant x + y > -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -2;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\n*/\n```",
            "```\n/*@\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant y <= x + 2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y <= 0;\nloop invariant x + y <= -2 ==> x + y >= -2;\nloop invariant x + y <= -2 ==> x + y <= -2;\nloop invariant x + y <= -2 ==> x + y >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 1;\nloop invariant 0 <= y <= 1;\nloop invariant 0 <= x + y <= 2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2;\nloop invariant x + y <= -2 ==> x == -1 && y == -1;\nloop invariant x + y <= -2 ==> x + y == -2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2 || x + y == -2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2 || x + y == -1 || x + y == -2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2 || x + y == -1 || x + y == -2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2 || x + y == -2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2 || x + y == -2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2 || x + y == -1 || x + y == -2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2 || x + y == -1 || x + y == -2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2 || x + y == -2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2 || x + y == -2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2 || x + y == -1 || x + y == -2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2 || x + y == -1 || x + y == -2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2 || x + y == -2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2 || x + y == -2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2 || x + y == -1 || x + y == -2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2 || x + y == -1 || x + y == -2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2 || x + y == -2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2 || x + y == -2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2 || x + y == -1 || x + y == -2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2 || x + y == -1 || x + y == -2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2 || x + y == -2;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= INT_MAX;\nloop invariant 0 <= y <= INT_MAX;\nloop invariant x + y <= INT_MAX;\nloop invariant (x > 0 || y > 0) ==> (x + y > -2);\nloop invariant (x > 0 || y > 0) ==> (x + y <= INT_MAX);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x+y == -2;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x+y == -2 ==> x > 0;\nloop invariant x+y == -2 ==> y > 0;\nloop invariant x+y == -2 ==> x+y == -2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x <= y ==> x + y >= -2;\nloop invariant x > 0 ==> x + y >= -1;\nloop invariant y > 0 ==> x + y >= -1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= y ==> x <= y;\nloop invariant 1 <= x <= y ==> x >= -2;\nloop invariant 1 <= x <= y ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y < 0 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 0 ==> x + y < 0 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 0 ==> x + y < 0 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 0 ==> x + y < 1 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 0 ==> x + y < 1 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 1 ==> x + y < 2 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 1 ==> x + y < 2 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 2 ==> x + y < 3 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 2 ==> x + y < 3 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 3 ==> x + y < 4 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 3 ==> x + y < 4 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 4 ==> x + y < 5 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 4 ==> x + y < 5 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 5 ==> x + y < 6 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 5 ==> x + y < 6 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 6 ==> x + y < 7 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 6 ==> x + y < 7 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 7 ==> x + y < 8 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 7 ==> x + y < 8 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 8 ==> x + y < 9 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 8 ==> x + y < 9 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 9 ==> x + y < 10 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 9 ==> x + y < 10 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 10 ==> x + y < 11 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 10 ==> x + y < 11 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 11 ==> x + y < 12 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 11 ==> x + y < 12 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 12 ==> x + y < 13 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 12 ==> x + y < 13 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 13 ==> x + y < 14 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 13 ==> x + y < 14 ==> x + y >= -2;\n*/\n```",
            "```\n/*@\nloop invariant 0 < y <= 100000;\nloop invariant 1 <= x <= x + y;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant 0 < y <= 100000;\nloop invariant 1 <= x <= x + y;\nloop invariant x >= 1;\nloop invariant y >= 1;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n*/\nwhile (1) {\n    if (x+y>-2) {\n      break;\n    }\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y; loop invariant x >= 0 && y >= 0; loop invariant x + y >= 0 && x + y <= 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n*/\nwhile (1) {\n    if (x+y>-2) {\n      break;\n    }\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 1;\nloop invariant 0 <= y <= 1;\nloop invariant x == y ==> x >= 0;\nloop invariant ! (x == y) ==> x <= 0;\nloop invariant !(x == y) ==> y >= 0;\nloop invariant !(x == y) ==> y <= 1;\nloop invariant if (x > 0) then (x + y) > -2;\nloop invariant ! (x > 0) ==> (y + x) > -2;\nloop invariant ! (x > 0) && !(y > 0) ==> y > 0;\nloop invariant ! (x > 0) && !(y > 0) ==> x > 0;\nloop invariant x > 0 ==> !(y > 0);\nloop invariant y > 0 ==> !(x > 0);\nloop invariant (x > 0) ==> (x == y) ==> (x >= 0);\nloop invariant (x > 0) ==> ! (x == y) ==> (x <= 0);\nloop invariant (x > 0) ==> ! (x == y) ==> (y >= 0);\nloop invariant (x > 0) ==> ! (x == y) ==> (y <= 1);\nloop invariant !(x > 0) ==> !(y > 0) ==> (y == x) ==> (y >= 0);\nloop invariant !(x > 0) ==> !(y > 0) ==> !(y == x) ==> (y <= 0);\nloop invariant !(x > 0) ==> !(y > 0) ==> !(y == x) ==> (y >= 0);\nloop invariant !(x > 0) ==> !(y > 0) ==> !(y == x) ==> (y <= 1);\nloop invariant (x > 0) ==> !(x == y) ==> (x >= 0);\nloop invariant (x > 0) ==> !(x == y) ==> (y <= 0);\nloop invariant (x > 0) ==> !(x == y) ==> (y >= 0);\nloop invariant (x > 0) ==> !(x == y) ==> (y <= 1);\nloop invariant !(x > 0) ==> !(x == y) ==> (x >= 0);\nloop invariant !(x > 0) ==> !(x == y) ==> (y >= 0);\nloop invariant !(x > 0) ==> !(x == y) ==> (y <= 1);\nloop invariant !(x > 0) ==> !(y > 0) ==> (x <= 0);\nloop invariant !(x > 0) ==> !(y > 0) ==> (y >= 0);\nloop invariant !(x > 0) ==> !(y > 0) ==> (y <= 1);\nloop invariant !(x > 0) ==> ! (x == y) ==> (y >= 0);\nloop invariant !(x > 0) ==> ! (x == y) ==> (y <= 1);\nloop invariant !(x > 0) ==> !(x == y) ==> (y >= 0);\nloop invariant !(x > 0) ==> !(x == y) ==> (y <= 1);\nloop invariant !(x > 0) ==> !(y > 0) ==> (x <= 0);\nloop invariant !(x > 0) ==> !(x == y) ==> (x <= 0);\nloop invariant !(x > 0) ==> !(y > 0) ==> (x >= 0);\nloop invariant !(x > 0) ==> !(y > 0) ==> (x <= 1);\nloop invariant !(x > 0) ==> !(y > 0) ==> (x >= 0);\nloop invariant !(x > 0) ==> !(y > 0) ==> (x <= 1);\nloop invariant !(x > 0) ==> !(x == y) ==> (x <= 0);\nloop invariant !(x > 0) ==> !(x == y) ==> (x >= 0);\nloop invariant !(x > 0) ==> !(x == y) ==> (x <= 1);\nloop invariant !(x > 0) ==> !(x == y) ==> (x >= 0);\nloop invariant !(x > 0) ==> !(x == y) ==> (x <= 1);\nloop invariant !(x > 0) ==> !(y > 0) ==> (y <= 0);\nloop invariant !(x > 0) ==> !(y > 0) ==> (y >= 0);\nloop invariant !(x > 0) ==> !(y > 0) ==> (y <= 1);\nloop invariant !(x > 0) ==> !(x == y) ==> (y <= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\nloop invariant i3: x == y ==> x >= 0;\n\n\n\n\n\nloop invariant i9: ! (x > 0) && !(y > 0) ==> y > 0;\nloop invariant i10: ! (x > 0) && !(y > 0) ==> x > 0;\n\n\nloop invariant i13: (x > 0) ==> (x == y) ==> (x >= 0);\n\n\n\nloop invariant i17: !(x > 0) ==> !(y > 0) ==> (y == x) ==> (y >= 0);\nloop invariant i18: !(x > 0) ==> !(y > 0) ==> !(y == x) ==> (y <= 0);\nloop invariant i19: !(x > 0) ==> !(y > 0) ==> !(y == x) ==> (y >= 0);\nloop invariant i20: !(x > 0) ==> !(y > 0) ==> !(y == x) ==> (y <= 1);\nloop invariant i21: (x > 0) ==> !(x == y) ==> (x >= 0);\n\n\n\n\nloop invariant i26: !(x > 0) ==> !(x == y) ==> (y >= 0);\n\nloop invariant i28: !(x > 0) ==> !(y > 0) ==> (x <= 0);\nloop invariant i29: !(x > 0) ==> !(y > 0) ==> (y >= 0);\nloop invariant i30: !(x > 0) ==> !(y > 0) ==> (y <= 1);\nloop invariant i31: !(x > 0) ==> ! (x == y) ==> (y >= 0);\n\nloop invariant i33: !(x > 0) ==> !(x == y) ==> (x <= 0);\nloop invariant i34: !(x > 0) ==> !(y > 0) ==> (x >= 0);\nloop invariant i35: !(x > 0) ==> !(y > 0) ==> (x <= 1);\nloop invariant i36: !(x > 0) ==> !(x == y) ==> (x <= 1);\nloop invariant i37: !(x > 0) ==> !(y > 0) ==> (y <= 0);\n\n*/\nwhile (1) {\n    if (x+y>-2) {\n      break;\n    }\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 2147483647;\nloop invariant 1 <= y <= 2147483647;\nloop invariant (x + y) > -2;\nloop invariant (x <= 0 || x > 0);\nloop invariant (y <= 0 || y > 0);\nloop invariant (x + y) > -2 ==> (x > -2 || y > -2);\nloop invariant (x <= 0 || x > 0) ==> (x > 0 || x <= 0);\nloop invariant (y <= 0 || y > 0) ==> (y > 0 || y <= 0);\nloop invariant (x + y) > -2 ==> (x + y) > -2;\nloop invariant (x <= 0 || x > 0) ==> (x <= 0 || x > 0);\nloop invariant (y <= 0 || y > 0) ==> (y <= 0 || y > 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n\nloop invariant i4: (x <= 0 || x > 0);\nloop invariant i5: (y <= 0 || y > 0);\nloop invariant i6: (x + y) > -2 ==> (x > -2 || y > -2);\nloop invariant i7: (x <= 0 || x > 0) ==> (x > 0 || x <= 0);\nloop invariant i8: (y <= 0 || y > 0) ==> (y > 0 || y <= 0);\nloop invariant i9: (x + y) > -2 ==> (x + y) > -2;\nloop invariant i10: (x <= 0 || x > 0) ==> (x <= 0 || x > 0);\nloop invariant i11: (y <= 0 || y > 0) ==> (y <= 0 || y > 0);\n*/\nwhile (1) {\n    if (x+y>-2) {\n      break;\n    }\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n*/\nwhile (1) {\n    if (x+y>-2) {\n      break;\n    }\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 3;\nloop invariant 1 <= y <= 3;\nloop invariant x + y < 5;\nloop invariant x + y > -5;\nloop invariant x > 0 || y > 0;\nloop invariant x + y > -2;\nloop invariant x + y <= 5;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y >= -5;\nloop invariant x + y <= 5;\nloop invariant x + y > -2;\nloop invariant x + y > -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -2;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\nloop invariant x + y > -5;\nloop invariant x + y <= 5;\nloop invariant x + y >= -5;\nloop invariant x + y < 5;\nloop invariant x + y <= 5;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n\n\nloop invariant i5: x > 0 || y > 0;\n\n\n\n\n\n\n*/\nwhile (1) {\n    if (x+y>-2) {\n      break;\n    }\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant y <= x + 2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y <= 0;\nloop invariant x + y <= -2 ==> x + y >= -2;\nloop invariant x + y <= -2 ==> x + y <= -2;\nloop invariant x + y <= -2 ==> x + y >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\nloop invariant x + y <= -2 ==> y >= -2;\nloop invariant x + y <= -2 ==> x >= -2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n\n\n\n\nloop invariant i7: x + y <= -2 ==> x + y <= -2;\n\n*/\nwhile (1) {\n    if (x+y>-2) {\n      break;\n    }\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 1;\nloop invariant 0 <= y <= 1;\nloop invariant 0 <= x + y <= 2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2;\nloop invariant x + y <= -2 ==> x == -1 && y == -1;\nloop invariant x + y <= -2 ==> x + y == -2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2 || x + y == -2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2 || x + y == -1 || x + y == -2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2 || x + y == -1 || x + y == -2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2 || x + y == -2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2 || x + y == -2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2 || x + y == -1 || x + y == -2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2 || x + y == -1 || x + y == -2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2 || x + y == -2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2 || x + y == -2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2 || x + y == -1 || x + y == -2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2 || x + y == -1 || x + y == -2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2 || x + y == -2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2 || x + y == -2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2 || x + y == -1 || x + y == -2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2 || x + y == -1 || x + y == -2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2 || x + y == -2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2 || x + y == -2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2 || x + y == -1 || x + y == -2;\nloop invariant x + y == 0 || x + y == 1 || x + y == 2 || x + y == -1 || x + y == -2;\nloop invariant x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2 || x + y == -2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (1) {\n    if (x+y>-2) {\n      break;\n    }\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n*/\nwhile (1) {\n    if (x+y>-2) {\n      break;\n    }\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n*/\nwhile (1) {\n    if (x+y>-2) {\n      break;\n    }\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= INT_MAX;\nloop invariant 0 <= y <= INT_MAX;\nloop invariant x + y <= INT_MAX;\nloop invariant (x > 0 || y > 0) ==> (x + y > -2);\nloop invariant (x > 0 || y > 0) ==> (x + y <= INT_MAX);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n\n\n\n\nloop invariant i7: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant i8: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant i9: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant i10: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant i11: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant i12: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant i13: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant i14: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant i15: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant i16: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\n*/\nwhile (1) {\n    if (x+y>-2) {\n      break;\n    }\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x+y == -2;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x+y == -2 ==> x > 0;\nloop invariant x+y == -2 ==> y > 0;\nloop invariant x+y == -2 ==> x+y == -2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n\n\n\n\nloop invariant i7: x+y == -2 ==> x+y == -2;\n*/\nwhile (1) {\n    if (x+y>-2) {\n      break;\n    }\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x <= y ==> x + y >= -2;\nloop invariant x > 0 ==> x + y >= -1;\nloop invariant y > 0 ==> x + y >= -1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n\n\n\n*/\nwhile (1) {\n    if (x+y>-2) {\n      break;\n    }\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= y ==> x <= y;\nloop invariant 1 <= x <= y ==> x >= -2;\nloop invariant 1 <= x <= y ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y < 0 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 0 ==> x + y < 0 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 0 ==> x + y < 0 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 0 ==> x + y < 1 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 0 ==> x + y < 1 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 1 ==> x + y < 2 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 1 ==> x + y < 2 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 2 ==> x + y < 3 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 2 ==> x + y < 3 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 3 ==> x + y < 4 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 3 ==> x + y < 4 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 4 ==> x + y < 5 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 4 ==> x + y < 5 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 5 ==> x + y < 6 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 5 ==> x + y < 6 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 6 ==> x + y < 7 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 6 ==> x + y < 7 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 7 ==> x + y < 8 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 7 ==> x + y < 8 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 8 ==> x + y < 9 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 8 ==> x + y < 9 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 9 ==> x + y < 10 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 9 ==> x + y < 10 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 10 ==> x + y < 11 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 10 ==> x + y < 11 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 11 ==> x + y < 12 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 11 ==> x + y < 12 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 12 ==> x + y < 13 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 12 ==> x + y < 13 ==> x + y >= -2;\nloop invariant 1 <= x <= y ==> x + y >= 13 ==> x + y < 14 ==> x + y >= -1;\nloop invariant 1 <= x <= y ==> x + y >= 13 ==> x + y < 14 ==> x + y >= -2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\nloop invariant i1: 1 <= x <= y ==> x <= y;\nloop invariant i2: 1 <= x <= y ==> x >= -2;\nloop invariant i3: 1 <= x <= y ==> x + y >= -1;\nloop invariant i4: 1 <= x <= y ==> x + y < 0 ==> x + y >= -2;\nloop invariant i5: 1 <= x <= y ==> x + y >= 0 ==> x + y < 0 ==> x + y >= -1;\nloop invariant i6: 1 <= x <= y ==> x + y >= 0 ==> x + y < 0 ==> x + y >= -2;\nloop invariant i7: 1 <= x <= y ==> x + y >= 0 ==> x + y < 1 ==> x + y >= -1;\nloop invariant i8: 1 <= x <= y ==> x + y >= 0 ==> x + y < 1 ==> x + y >= -2;\nloop invariant i9: 1 <= x <= y ==> x + y >= 1 ==> x + y < 2 ==> x + y >= -1;\nloop invariant i10: 1 <= x <= y ==> x + y >= 1 ==> x + y < 2 ==> x + y >= -2;\nloop invariant i11: 1 <= x <= y ==> x + y >= 2 ==> x + y < 3 ==> x + y >= -1;\nloop invariant i12: 1 <= x <= y ==> x + y >= 2 ==> x + y < 3 ==> x + y >= -2;\nloop invariant i13: 1 <= x <= y ==> x + y >= 3 ==> x + y < 4 ==> x + y >= -1;\nloop invariant i14: 1 <= x <= y ==> x + y >= 3 ==> x + y < 4 ==> x + y >= -2;\nloop invariant i15: 1 <= x <= y ==> x + y >= 4 ==> x + y < 5 ==> x + y >= -1;\nloop invariant i16: 1 <= x <= y ==> x + y >= 4 ==> x + y < 5 ==> x + y >= -2;\nloop invariant i17: 1 <= x <= y ==> x + y >= 5 ==> x + y < 6 ==> x + y >= -1;\nloop invariant i18: 1 <= x <= y ==> x + y >= 5 ==> x + y < 6 ==> x + y >= -2;\nloop invariant i19: 1 <= x <= y ==> x + y >= 6 ==> x + y < 7 ==> x + y >= -1;\nloop invariant i20: 1 <= x <= y ==> x + y >= 6 ==> x + y < 7 ==> x + y >= -2;\nloop invariant i21: 1 <= x <= y ==> x + y >= 7 ==> x + y < 8 ==> x + y >= -1;\nloop invariant i22: 1 <= x <= y ==> x + y >= 7 ==> x + y < 8 ==> x + y >= -2;\nloop invariant i23: 1 <= x <= y ==> x + y >= 8 ==> x + y < 9 ==> x + y >= -1;\nloop invariant i24: 1 <= x <= y ==> x + y >= 8 ==> x + y < 9 ==> x + y >= -2;\nloop invariant i25: 1 <= x <= y ==> x + y >= 9 ==> x + y < 10 ==> x + y >= -1;\nloop invariant i26: 1 <= x <= y ==> x + y >= 9 ==> x + y < 10 ==> x + y >= -2;\nloop invariant i27: 1 <= x <= y ==> x + y >= 10 ==> x + y < 11 ==> x + y >= -1;\nloop invariant i28: 1 <= x <= y ==> x + y >= 10 ==> x + y < 11 ==> x + y >= -2;\nloop invariant i29: 1 <= x <= y ==> x + y >= 11 ==> x + y < 12 ==> x + y >= -1;\nloop invariant i30: 1 <= x <= y ==> x + y >= 11 ==> x + y < 12 ==> x + y >= -2;\nloop invariant i31: 1 <= x <= y ==> x + y >= 12 ==> x + y < 13 ==> x + y >= -1;\nloop invariant i32: 1 <= x <= y ==> x + y >= 12 ==> x + y < 13 ==> x + y >= -2;\nloop invariant i33: 1 <= x <= y ==> x + y >= 13 ==> x + y < 14 ==> x + y >= -1;\nloop invariant i34: 1 <= x <= y ==> x + y >= 13 ==> x + y < 14 ==> x + y >= -2;\n*/\nwhile (1) {\n    if (x+y>-2) {\n      break;\n    }\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 < y <= 100000;\nloop invariant 1 <= x <= x + y;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant 0 < y <= 100000;\nloop invariant 1 <= x <= x + y;\nloop invariant x >= 1;\nloop invariant y >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n\n\n*/\nwhile (1) {\n    if (x+y>-2) {\n      break;\n    }\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 25: unexpected token '('",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\nloop invariant i1: 0 <= y <= 100000;\nloop invariant i2: x >= (1 + (y - 1) * y / 2);\nloop invariant i3: 0 <= x <= y; loop invariant x >= 0 && y >= 0; loop invariant x + y >= 0 && x + y <= 2;\nloop invariant i4: 0 <= x <= 1;\nloop invariant i5: 0 <= y <= 1;\nloop invariant i6: x == y ==> x >= 0;\nloop invariant i7: ! (x == y) ==> x <= 0;\nloop invariant i8: !(x == y) ==> y >= 0;\nloop invariant i9: !(x == y) ==> y <= 1;\nloop invariant i10: if (x > 0) then (x + y) > -2;\nloop invariant i11: ! (x > 0) ==> (y + x) > -2;\nloop invariant i12: ! (x > 0) && !(y > 0) ==> y > 0;\nloop invariant i13: ! (x > 0) && !(y > 0) ==> x > 0;\nloop invariant i14: x > 0 ==> !(y > 0);\nloop invariant i15: y > 0 ==> !(x > 0);\nloop invariant i16: (x > 0) ==> (x == y) ==> (x >= 0);\nloop invariant i17: (x > 0) ==> ! (x == y) ==> (x <= 0);\nloop invariant i18: (x > 0) ==> ! (x == y) ==> (y >= 0);\nloop invariant i19: (x > 0) ==> ! (x == y) ==> (y <= 1);\nloop invariant i20: !(x > 0) ==> !(y > 0) ==> (y == x) ==> (y >= 0);\nloop invariant i21: !(x > 0) ==> !(y > 0) ==> !(y == x) ==> (y <= 0);\nloop invariant i22: !(x > 0) ==> !(y > 0) ==> !(y == x) ==> (y >= 0);\nloop invariant i23: !(x > 0) ==> !(y > 0) ==> !(y == x) ==> (y <= 1);\nloop invariant i24: (x > 0) ==> !(x == y) ==> (x >= 0);\nloop invariant i25: (x > 0) ==> !(x == y) ==> (y <= 0);\nloop invariant i26: (x > 0) ==> !(x == y) ==> (y >= 0);\nloop invariant i27: (x > 0) ==> !(x == y) ==> (y <= 1);\nloop invariant i28: !(x > 0) ==> !(x == y) ==> (x >= 0);\nloop invariant i29: !(x > 0) ==> !(x == y) ==> (y >= 0);\nloop invariant i30: !(x > 0) ==> !(x == y) ==> (y <= 1);\nloop invariant i31: !(x > 0) ==> !(y > 0) ==> (x <= 0);\nloop invariant i32: !(x > 0) ==> !(y > 0) ==> (y >= 0);\nloop invariant i33: !(x > 0) ==> !(y > 0) ==> (y <= 1);\nloop invariant i34: !(x > 0) ==> ! (x == y) ==> (y >= 0);\nloop invariant i35: !(x > 0) ==> ! (x == y) ==> (y <= 1);\nloop invariant i36: !(x > 0) ==> !(x == y) ==> (x <= 0);\nloop invariant i37: !(x > 0) ==> !(y > 0) ==> (x >= 0);\nloop invariant i38: !(x > 0) ==> !(y > 0) ==> (x <= 1);\nloop invariant i39: !(x > 0) ==> !(x == y) ==> (x <= 1);\nloop invariant i40: !(x > 0) ==> !(y > 0) ==> (y <= 0);\nloop invariant i41: !(x > 0) ==> !(x == y) ==> (y <= 0);\nloop invariant i42: 1 <= x <= 2147483647;\nloop invariant i43: 1 <= y <= 2147483647;\nloop invariant i44: (x + y) > -2;\nloop invariant i45: (x <= 0 || x > 0);\nloop invariant i46: (y <= 0 || y > 0);\nloop invariant i47: (x + y) > -2 ==> (x > -2 || y > -2);\nloop invariant i48: (x <= 0 || x > 0) ==> (x > 0 || x <= 0);\nloop invariant i49: (y <= 0 || y > 0) ==> (y > 0 || y <= 0);\nloop invariant i50: (x + y) > -2 ==> (x + y) > -2;\nloop invariant i51: (x <= 0 || x > 0) ==> (x <= 0 || x > 0);\nloop invariant i52: (y <= 0 || y > 0) ==> (y <= 0 || y > 0);\nloop invariant i53: 1 <= x <= 3;\nloop invariant i54: 1 <= y <= 3;\nloop invariant i55: x + y < 5;\nloop invariant i56: x + y > -5;\nloop invariant i57: x > 0 || y > 0;\nloop invariant i58: x + y > -2;\nloop invariant i59: x + y <= 5;\nloop invariant i60: x >= 0;\nloop invariant i61: y >= 0;\nloop invariant i62: x + y >= -5;\nloop invariant i63: x + y >= -2;\nloop invariant i64: y <= x + 2;\nloop invariant i65: x + y <= -2 ==> x >= -2;\nloop invariant i66: x + y <= -2 ==> y <= 0;\nloop invariant i67: x + y <= -2 ==> x + y >= -2;\nloop invariant i68: x + y <= -2 ==> x + y <= -2;\nloop invariant i69: x + y <= -2 ==> y >= -2;\nloop invariant i70: 0 <= x + y <= 2;\nloop invariant i71: x + y == 0 || x + y == 1 || x + y == 2;\nloop invariant i72: x + y <= -2 ==> x == -1 && y == -1;\nloop invariant i73: x + y <= -2 ==> x + y == -2;\nloop invariant i74: x + y > -2 ==> x + y == -1 || x + y == 0;\nloop invariant i75: x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1;\nloop invariant i76: x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2;\nloop invariant i77: x + y > -2 ==> x + y == -1 || x + y == 0 || x + y == 1 || x + y == 2 || x + y == -2;\nloop invariant i78: x + y == 0 || x + y == 1 || x + y == 2 || x + y == -1 || x + y == -2;\nloop invariant i79: 1 <= y <= 100000;\nloop invariant i80: 0 <= x <= INT_MAX;\nloop invariant i81: 0 <= y <= INT_MAX;\nloop invariant i82: x + y <= INT_MAX;\nloop invariant i83: (x > 0 || y > 0) ==> (x + y > -2);\nloop invariant i84: (x > 0 || y > 0) ==> (x + y <= INT_MAX);\nloop invariant i85: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant i86: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant i87: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant i88: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant i89: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant i90: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant i91: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant i92: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant i93: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant i94: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant i95: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant i96: 0 <= x <= y;\nloop invariant i97: x+y == -2;\nloop invariant i98: x+y == -2 ==> x > 0;\nloop invariant i99: x+y == -2 ==> y > 0;\nloop invariant i100: x+y == -2 ==> x+y == -2;\nloop invariant i101: 0 <= x;\nloop invariant i102: 0 <= y;\nloop invariant i103: x <= y ==> x + y >= -2;\nloop invariant i104: x > 0 ==> x + y >= -1;\nloop invariant i105: y > 0 ==> x + y >= -1;\nloop invariant i106: 1 <= x <= y ==> x <= y;\nloop invariant i107: 1 <= x <= y ==> x >= -2;\nloop invariant i108: 1 <= x <= y ==> x + y >= -1;\nloop invariant i109: 1 <= x <= y ==> x + y < 0 ==> x + y >= -2;\nloop invariant i110: 1 <= x <= y ==> x + y >= 0 ==> x + y < 0 ==> x + y >= -1;\nloop invariant i111: 1 <= x <= y ==> x + y >= 0 ==> x + y < 0 ==> x + y >= -2;\nloop invariant i112: 1 <= x <= y ==> x + y >= 0 ==> x + y < 1 ==> x + y >= -1;\nloop invariant i113: 1 <= x <= y ==> x + y >= 0 ==> x + y < 1 ==> x + y >= -2;\nloop invariant i114: 1 <= x <= y ==> x + y >= 1 ==> x + y < 2 ==> x + y >= -1;\nloop invariant i115: 1 <= x <= y ==> x + y >= 1 ==> x + y < 2 ==> x + y >= -2;\nloop invariant i116: 1 <= x <= y ==> x + y >= 2 ==> x + y < 3 ==> x + y >= -1;\nloop invariant i117: 1 <= x <= y ==> x + y >= 2 ==> x + y < 3 ==> x + y >= -2;\nloop invariant i118: 1 <= x <= y ==> x + y >= 3 ==> x + y < 4 ==> x + y >= -1;\nloop invariant i119: 1 <= x <= y ==> x + y >= 3 ==> x + y < 4 ==> x + y >= -2;\nloop invariant i120: 1 <= x <= y ==> x + y >= 4 ==> x + y < 5 ==> x + y >= -1;\nloop invariant i121: 1 <= x <= y ==> x + y >= 4 ==> x + y < 5 ==> x + y >= -2;\nloop invariant i122: 1 <= x <= y ==> x + y >= 5 ==> x + y < 6 ==> x + y >= -1;\nloop invariant i123: 1 <= x <= y ==> x + y >= 5 ==> x + y < 6 ==> x + y >= -2;\nloop invariant i124: 1 <= x <= y ==> x + y >= 6 ==> x + y < 7 ==> x + y >= -1;\nloop invariant i125: 1 <= x <= y ==> x + y >= 6 ==> x + y < 7 ==> x + y >= -2;\nloop invariant i126: 1 <= x <= y ==> x + y >= 7 ==> x + y < 8 ==> x + y >= -1;\nloop invariant i127: 1 <= x <= y ==> x + y >= 7 ==> x + y < 8 ==> x + y >= -2;\nloop invariant i128: 1 <= x <= y ==> x + y >= 8 ==> x + y < 9 ==> x + y >= -1;\nloop invariant i129: 1 <= x <= y ==> x + y >= 8 ==> x + y < 9 ==> x + y >= -2;\nloop invariant i130: 1 <= x <= y ==> x + y >= 9 ==> x + y < 10 ==> x + y >= -1;\nloop invariant i131: 1 <= x <= y ==> x + y >= 9 ==> x + y < 10 ==> x + y >= -2;\nloop invariant i132: 1 <= x <= y ==> x + y >= 10 ==> x + y < 11 ==> x + y >= -1;\nloop invariant i133: 1 <= x <= y ==> x + y >= 10 ==> x + y < 11 ==> x + y >= -2;\nloop invariant i134: 1 <= x <= y ==> x + y >= 11 ==> x + y < 12 ==> x + y >= -1;\nloop invariant i135: 1 <= x <= y ==> x + y >= 11 ==> x + y < 12 ==> x + y >= -2;\nloop invariant i136: 1 <= x <= y ==> x + y >= 12 ==> x + y < 13 ==> x + y >= -1;\nloop invariant i137: 1 <= x <= y ==> x + y >= 12 ==> x + y < 13 ==> x + y >= -2;\nloop invariant i138: 1 <= x <= y ==> x + y >= 13 ==> x + y < 14 ==> x + y >= -1;\nloop invariant i139: 1 <= x <= y ==> x + y >= 13 ==> x + y < 14 ==> x + y >= -2;\nloop invariant i140: 0 < y <= 100000;\nloop invariant i141: 1 <= x <= x + y;\nloop invariant i142: x >= 1;\nloop invariant i143: y >= 1;\n*/\nwhile (1) {\n    if (x+y>-2) {\n      break;\n    }\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 13,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n\n\n\nloop invariant i6: x == y ==> x >= 0;\n\n\n\n\n\nloop invariant i12: ! (x > 0) && !(y > 0) ==> y > 0;\nloop invariant i13: ! (x > 0) && !(y > 0) ==> x > 0;\n\n\nloop invariant i16: (x > 0) ==> (x == y) ==> (x >= 0);\n\n\n\nloop invariant i20: !(x > 0) ==> !(y > 0) ==> (y == x) ==> (y >= 0);\nloop invariant i21: !(x > 0) ==> !(y > 0) ==> !(y == x) ==> (y <= 0);\nloop invariant i22: !(x > 0) ==> !(y > 0) ==> !(y == x) ==> (y >= 0);\nloop invariant i23: !(x > 0) ==> !(y > 0) ==> !(y == x) ==> (y <= 1);\nloop invariant i24: (x > 0) ==> !(x == y) ==> (x >= 0);\n\n\n\n\nloop invariant i29: !(x > 0) ==> !(x == y) ==> (y >= 0);\n\nloop invariant i31: !(x > 0) ==> !(y > 0) ==> (x <= 0);\nloop invariant i32: !(x > 0) ==> !(y > 0) ==> (y >= 0);\nloop invariant i33: !(x > 0) ==> !(y > 0) ==> (y <= 1);\nloop invariant i34: !(x > 0) ==> ! (x == y) ==> (y >= 0);\n\nloop invariant i36: !(x > 0) ==> !(x == y) ==> (x <= 0);\nloop invariant i37: !(x > 0) ==> !(y > 0) ==> (x >= 0);\nloop invariant i38: !(x > 0) ==> !(y > 0) ==> (x <= 1);\nloop invariant i39: !(x > 0) ==> !(x == y) ==> (x <= 1);\nloop invariant i40: !(x > 0) ==> !(y > 0) ==> (y <= 0);\n\n\n\n\nloop invariant i45: (x <= 0 || x > 0);\nloop invariant i46: (y <= 0 || y > 0);\nloop invariant i47: (x + y) > -2 ==> (x > -2 || y > -2);\nloop invariant i48: (x <= 0 || x > 0) ==> (x > 0 || x <= 0);\nloop invariant i49: (y <= 0 || y > 0) ==> (y > 0 || y <= 0);\nloop invariant i50: (x + y) > -2 ==> (x + y) > -2;\nloop invariant i51: (x <= 0 || x > 0) ==> (x <= 0 || x > 0);\nloop invariant i52: (y <= 0 || y > 0) ==> (y <= 0 || y > 0);\n\n\n\n\nloop invariant i57: x > 0 || y > 0;\n\n\n\n\n\n\n\n\n\n\nloop invariant i68: x + y <= -2 ==> x + y <= -2;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i86: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant i87: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant i88: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant i89: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant i90: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant i91: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant i92: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant i93: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\nloop invariant i94: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2);\nloop invariant i95: (x > 0 || y > 0) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX) ==> (x + y > -2) ==> (x + y <= INT_MAX);\n\n\n\n\nloop invariant i100: x+y == -2 ==> x+y == -2;\n\n\n\n\n\nloop invariant i106: 1 <= x <= y ==> x <= y;\nloop invariant i107: 1 <= x <= y ==> x >= -2;\nloop invariant i108: 1 <= x <= y ==> x + y >= -1;\nloop invariant i109: 1 <= x <= y ==> x + y < 0 ==> x + y >= -2;\nloop invariant i110: 1 <= x <= y ==> x + y >= 0 ==> x + y < 0 ==> x + y >= -1;\nloop invariant i111: 1 <= x <= y ==> x + y >= 0 ==> x + y < 0 ==> x + y >= -2;\nloop invariant i112: 1 <= x <= y ==> x + y >= 0 ==> x + y < 1 ==> x + y >= -1;\nloop invariant i113: 1 <= x <= y ==> x + y >= 0 ==> x + y < 1 ==> x + y >= -2;\nloop invariant i114: 1 <= x <= y ==> x + y >= 1 ==> x + y < 2 ==> x + y >= -1;\nloop invariant i115: 1 <= x <= y ==> x + y >= 1 ==> x + y < 2 ==> x + y >= -2;\nloop invariant i116: 1 <= x <= y ==> x + y >= 2 ==> x + y < 3 ==> x + y >= -1;\nloop invariant i117: 1 <= x <= y ==> x + y >= 2 ==> x + y < 3 ==> x + y >= -2;\nloop invariant i118: 1 <= x <= y ==> x + y >= 3 ==> x + y < 4 ==> x + y >= -1;\nloop invariant i119: 1 <= x <= y ==> x + y >= 3 ==> x + y < 4 ==> x + y >= -2;\nloop invariant i120: 1 <= x <= y ==> x + y >= 4 ==> x + y < 5 ==> x + y >= -1;\nloop invariant i121: 1 <= x <= y ==> x + y >= 4 ==> x + y < 5 ==> x + y >= -2;\nloop invariant i122: 1 <= x <= y ==> x + y >= 5 ==> x + y < 6 ==> x + y >= -1;\nloop invariant i123: 1 <= x <= y ==> x + y >= 5 ==> x + y < 6 ==> x + y >= -2;\nloop invariant i124: 1 <= x <= y ==> x + y >= 6 ==> x + y < 7 ==> x + y >= -1;\nloop invariant i125: 1 <= x <= y ==> x + y >= 6 ==> x + y < 7 ==> x + y >= -2;\nloop invariant i126: 1 <= x <= y ==> x + y >= 7 ==> x + y < 8 ==> x + y >= -1;\nloop invariant i127: 1 <= x <= y ==> x + y >= 7 ==> x + y < 8 ==> x + y >= -2;\nloop invariant i128: 1 <= x <= y ==> x + y >= 8 ==> x + y < 9 ==> x + y >= -1;\nloop invariant i129: 1 <= x <= y ==> x + y >= 8 ==> x + y < 9 ==> x + y >= -2;\nloop invariant i130: 1 <= x <= y ==> x + y >= 9 ==> x + y < 10 ==> x + y >= -1;\nloop invariant i131: 1 <= x <= y ==> x + y >= 9 ==> x + y < 10 ==> x + y >= -2;\nloop invariant i132: 1 <= x <= y ==> x + y >= 10 ==> x + y < 11 ==> x + y >= -1;\nloop invariant i133: 1 <= x <= y ==> x + y >= 10 ==> x + y < 11 ==> x + y >= -2;\nloop invariant i134: 1 <= x <= y ==> x + y >= 11 ==> x + y < 12 ==> x + y >= -1;\nloop invariant i135: 1 <= x <= y ==> x + y >= 11 ==> x + y < 12 ==> x + y >= -2;\nloop invariant i136: 1 <= x <= y ==> x + y >= 12 ==> x + y < 13 ==> x + y >= -1;\nloop invariant i137: 1 <= x <= y ==> x + y >= 12 ==> x + y < 13 ==> x + y >= -2;\nloop invariant i138: 1 <= x <= y ==> x + y >= 13 ==> x + y < 14 ==> x + y >= -1;\nloop invariant i139: 1 <= x <= y ==> x + y >= 13 ==> x + y < 14 ==> x + y >= -2;\n\n\n\n\n*/\nwhile (1) {\n    if (x+y>-2) {\n      break;\n    }\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark16_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark17_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark19_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark20_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark21_disjunctive.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c"
        ],
        "skipped": [],
        "total": 142,
        "success_count": 125,
        "failure_count": 17,
        "success_rate": 0.8802816901408451
    }
}