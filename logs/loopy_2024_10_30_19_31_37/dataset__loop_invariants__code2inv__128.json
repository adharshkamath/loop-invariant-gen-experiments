{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/128.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  while ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant x < y;\nloop invariant y >= 1;\nloop invariant x > 1 ==> x >= 2;\nloop invariant x < y ==> x <= 2 * y;\nloop invariant x < y ==> x > 1 ==> x >= 2 * y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x % 2 == 0;\nloop invariant y % 2 == 0;\nloop invariant x >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 2^31 - 1;\nloop invariant y >= x;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 2^31 - 1;\nloop invariant y <= 2^31 - 1;\nloop invariant x <= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant x <= y;\nloop invariant y <= 2;\nloop invariant x >= pow(2, y - 1);\nloop invariant x <= pow(2, y);\nloop invariant y >= 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant y <= 2;\nloop invariant x <= pow(2, y - 1);\nloop invariant x >= pow(2, y - 2);\nloop invariant y >= 2;\nloop invariant x >= 2;\nloop invariant y >= 3;\nloop invariant x >= 4;\nloop invariant y >= 4;\nloop invariant x >= 8;\nloop invariant y >= 5;\nloop invariant x >= 16;\nloop invariant y >= 6;\nloop invariant x >= 32;\nloop invariant y >= 7;\nloop invariant x >= 64;\nloop invariant y >= 8;\nloop invariant x >= 128;\nloop invariant y >= 9;\nloop invariant x >= 256;\nloop invariant y >= 10;\nloop invariant x >= 512;\nloop invariant y >= 11;\nloop invariant x >= 1024;\nloop invariant y >= 12;\nloop invariant x >= 2048;\nloop invariant y >= 13;\nloop invariant x >= 4096;\nloop invariant y >= 14;\nloop invariant x >= 8192;\nloop invariant y >= 15;\nloop invariant x >= 16384;\nloop invariant y >= 16;\nloop invariant x >= 32768;\nloop invariant y >= 17;\nloop invariant x >= 65536;\nloop invariant y >= 18;\nloop invariant x >= 131072;\nloop invariant y >= 19;\nloop invariant x >= 262144;\nloop invariant y >= 20;\nloop invariant x >= 524288;\nloop invariant y >= 21;\nloop invariant x >= 1048576;\nloop invariant y >= 22;\nloop invariant x >= 2097152;\nloop invariant y >= 23;\nloop invariant x >= 4194304;\nloop invariant y >= 24;\nloop invariant x >= 8388608;\nloop invariant y >= 25;\nloop invariant x >= 16777216;\nloop invariant y >= 26;\nloop invariant x >= 33554432;\nloop invariant y >= 27;\nloop invariant x >= 67108864;\nloop invariant y >= 28;\nloop invariant x >= 134217728;\nloop invariant y >= 29;\nloop invariant x >= 268435456;\nloop invariant y >= 30;\nloop invariant x >= 536870912;\nloop invariant y >= 31;\nloop invariant x >= 1073741824;\nloop invariant y >= 32;\nloop invariant x >= 2147483648;\nloop invariant y >= 33;\nloop invariant x >= 4294967296;\nloop invariant y >= 34;\nloop invariant x >= 8589934592;\nloop invariant y >= 35;\nloop invariant x >= 17179869184;\nloop invariant y >= 36;\nloop invariant x >= 34359738368;\nloop invariant y >= 37;\nloop invariant x >= 68719476736;\nloop invariant y >= 38;\nloop invariant x >= 137438953472;\nloop invariant y >= 39;\nloop invariant x >= 274877906944;\nloop invariant y >= 40;\nloop invariant x >= 549755813888;\nloop invariant y >= 41;\nloop invariant x >= 1099511627776;\nloop invariant y >= 42;\nloop invariant x >= 2199023255552;\nloop invariant y >= 43;\nloop invariant x >= 4398046511104;\nloop invariant y >= 44;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= y; loop invariant x == 1; loop invariant x <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant x >= y;\nloop invariant x >= 1;\nloop invariant x >= 2 * x;\nloop invariant x >= 4 * x;\nloop invariant x >= 8 * x;\nloop invariant x >= 16 * x;\nloop invariant x >= 32 * x;\nloop invariant x >= 64 * x;\nloop invariant x >= 128 * x;\nloop invariant x >= 256 * x;\nloop invariant x >= 512 * x;\nloop invariant x >= 1024 * x;\nloop invariant x >= 2048 * x;\nloop invariant x >= 4096 * x;\nloop invariant x >= 8192 * x;\nloop invariant x >= 16384 * x;\nloop invariant x >= 32768 * x;\nloop invariant x >= 65536 * x;\nloop invariant x >= 131072 * x;\nloop invariant x >= 262144 * x;\nloop invariant x >= 524288 * x;\nloop invariant x >= 1048576 * x;\nloop invariant x >= 2097152 * x;\nloop invariant x >= 4194304 * x;\nloop invariant x >= 8388608 * x;\nloop invariant x >= 16777216 * x;\nloop invariant x >= 33554432 * x;\nloop invariant x >= 67108864 * x;\nloop invariant x >= 134217728 * x;\nloop invariant x >= 268435456 * x;\nloop invariant x >= 536870912 * x;\nloop invariant x >= 1073741824 * x;\nloop invariant x >= 2147483648 * x;\nloop invariant x >= 4294967296 * x;\nloop invariant x >= 8589934592 * x;\nloop invariant x >= 17179869184 * x;\nloop invariant x >= 34359738368 * x;\nloop invariant x >= 68719476736 * x;\nloop invariant x >= 137438953472 * x;\nloop invariant x >= 274877906944 * x;\nloop invariant x >= 549755813888 * x;\nloop invariant x >= 1099511627776 * x;\nloop invariant x >= 2199023255552 * x;\nloop invariant x >= 4398046511104 * x;\nloop invariant x >= 8796093022208 * x;\nloop invariant x >= 17592186044416 * x;\nloop invariant x >= 35184372088832 * x;\nloop invariant x >= 70368744177664 * x;\nloop invariant x >= 140737488355328 * x;\nloop invariant x >= 281474976710656 * x;\nloop invariant x >= 562949953421312 * x;\nloop invariant x >= 1125899906842624 * x;\nloop invariant x >= 2251799813685248 * x;\nloop invariant x >= 4503599627370496 * x;\nloop invariant x >= 9007199254740992 * x;\nloop invariant x >= 18014398509481984 * x;\nloop invariant x >= 36028797018963968 * x;\nloop invariant x >= 72057594037927936 * x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x == y * (1 + y) / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant x <= y;\nloop invariant x % 2 == 0;\nloop invariant x <= 2 * (y - 1);\nloop invariant is: loop invariant 0 <= x <= y and x % 2 == 0 and x <= 2 * (y - 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 1;\nloop invariant y >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x == y * (y + 1) / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant x == 2 * x;\nloop invariant x < y;\nloop invariant y >= 0;\nloop invariant y <= 2^31 - 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x <= 2 * (x - 1);\nloop invariant x >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x >= 1;\nloop invariant y >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 2^31 - 1;\nloop invariant y >= x;\nloop invariant y <= 2^31 - 1;\nloop invariant x + x >= x;\nloop invariant x + x <= 2^31 - 1;\nloop invariant x + x >= x * 2;\nloop invariant x + x <= x * 2;\nloop invariant x + x >= x * 2 - x;\nloop invariant x + x <= x * 2 - x;\nloop invariant x + x >= x * 2 - x + x;\nloop invariant x + x <= x * 2 - x + x;\nloop invariant x + x >= x * 2 - x + x + x;\nloop invariant x + x <= x * 2 - x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant x < y;\nloop invariant y >= 1;\nloop invariant x > 1 ==> x >= 2;\nloop invariant x < y ==> x <= 2 * y;\nloop invariant x < y ==> x > 1 ==> x >= 2 * y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\nloop invariant i1: 0 <= x;\n\n\nloop invariant i4: x > 1 ==> x >= 2;\nloop invariant i5: x < y ==> x <= 2 * y;\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x % 2 == 0;\nloop invariant y % 2 == 0;\nloop invariant x >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\n\n\n\nloop invariant i4: x >= 1;\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 2^31 - 1;\nloop invariant y >= x;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 2^31 - 1;\nloop invariant y <= 2^31 - 1;\nloop invariant x <= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\n\n\nloop invariant i3: x >= 1;\n\nloop invariant i5: x >= 0;\n\n\n\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 47,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant x <= y;\nloop invariant y <= 2;\nloop invariant x >= pow(2, y - 1);\nloop invariant x <= pow(2, y);\nloop invariant y >= 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant y <= 2;\nloop invariant x <= pow(2, y - 1);\nloop invariant x >= pow(2, y - 2);\nloop invariant y >= 2;\nloop invariant x >= 2;\nloop invariant y >= 3;\nloop invariant x >= 4;\nloop invariant y >= 4;\nloop invariant x >= 8;\nloop invariant y >= 5;\nloop invariant x >= 16;\nloop invariant y >= 6;\nloop invariant x >= 32;\nloop invariant y >= 7;\nloop invariant x >= 64;\nloop invariant y >= 8;\nloop invariant x >= 128;\nloop invariant y >= 9;\nloop invariant x >= 256;\nloop invariant y >= 10;\nloop invariant x >= 512;\nloop invariant y >= 11;\nloop invariant x >= 1024;\nloop invariant y >= 12;\nloop invariant x >= 2048;\nloop invariant y >= 13;\nloop invariant x >= 4096;\nloop invariant y >= 14;\nloop invariant x >= 8192;\nloop invariant y >= 15;\nloop invariant x >= 16384;\nloop invariant y >= 16;\nloop invariant x >= 32768;\nloop invariant y >= 17;\nloop invariant x >= 65536;\nloop invariant y >= 18;\nloop invariant x >= 131072;\nloop invariant y >= 19;\nloop invariant x >= 262144;\nloop invariant y >= 20;\nloop invariant x >= 524288;\nloop invariant y >= 21;\nloop invariant x >= 1048576;\nloop invariant y >= 22;\nloop invariant x >= 2097152;\nloop invariant y >= 23;\nloop invariant x >= 4194304;\nloop invariant y >= 24;\nloop invariant x >= 8388608;\nloop invariant y >= 25;\nloop invariant x >= 16777216;\nloop invariant y >= 26;\nloop invariant x >= 33554432;\nloop invariant y >= 27;\nloop invariant x >= 67108864;\nloop invariant y >= 28;\nloop invariant x >= 134217728;\nloop invariant y >= 29;\nloop invariant x >= 268435456;\nloop invariant y >= 30;\nloop invariant x >= 536870912;\nloop invariant y >= 31;\nloop invariant x >= 1073741824;\nloop invariant y >= 32;\nloop invariant x >= 2147483648;\nloop invariant y >= 33;\nloop invariant x >= 4294967296;\nloop invariant y >= 34;\nloop invariant x >= 8589934592;\nloop invariant y >= 35;\nloop invariant x >= 17179869184;\nloop invariant y >= 36;\nloop invariant x >= 34359738368;\nloop invariant y >= 37;\nloop invariant x >= 68719476736;\nloop invariant y >= 38;\nloop invariant x >= 137438953472;\nloop invariant y >= 39;\nloop invariant x >= 274877906944;\nloop invariant y >= 40;\nloop invariant x >= 549755813888;\nloop invariant y >= 41;\nloop invariant x >= 1099511627776;\nloop invariant y >= 42;\nloop invariant x >= 2199023255552;\nloop invariant y >= 43;\nloop invariant x >= 4398046511104;\nloop invariant y >= 44;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\nloop invariant i1: 0 <= x;\n\n\n\n\n\nloop invariant i7: x >= 1;\n\nloop invariant i9: x >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= y; loop invariant x == 1; loop invariant x <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant x >= 1; loop invariant x * 2 >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\n\nloop invariant i2: x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant i3: x >= 1; loop invariant x * 2 >= y;\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 56,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant x >= y;\nloop invariant x >= 1;\nloop invariant x >= 2 * x;\nloop invariant x >= 4 * x;\nloop invariant x >= 8 * x;\nloop invariant x >= 16 * x;\nloop invariant x >= 32 * x;\nloop invariant x >= 64 * x;\nloop invariant x >= 128 * x;\nloop invariant x >= 256 * x;\nloop invariant x >= 512 * x;\nloop invariant x >= 1024 * x;\nloop invariant x >= 2048 * x;\nloop invariant x >= 4096 * x;\nloop invariant x >= 8192 * x;\nloop invariant x >= 16384 * x;\nloop invariant x >= 32768 * x;\nloop invariant x >= 65536 * x;\nloop invariant x >= 131072 * x;\nloop invariant x >= 262144 * x;\nloop invariant x >= 524288 * x;\nloop invariant x >= 1048576 * x;\nloop invariant x >= 2097152 * x;\nloop invariant x >= 4194304 * x;\nloop invariant x >= 8388608 * x;\nloop invariant x >= 16777216 * x;\nloop invariant x >= 33554432 * x;\nloop invariant x >= 67108864 * x;\nloop invariant x >= 134217728 * x;\nloop invariant x >= 268435456 * x;\nloop invariant x >= 536870912 * x;\nloop invariant x >= 1073741824 * x;\nloop invariant x >= 2147483648 * x;\nloop invariant x >= 4294967296 * x;\nloop invariant x >= 8589934592 * x;\nloop invariant x >= 17179869184 * x;\nloop invariant x >= 34359738368 * x;\nloop invariant x >= 68719476736 * x;\nloop invariant x >= 137438953472 * x;\nloop invariant x >= 274877906944 * x;\nloop invariant x >= 549755813888 * x;\nloop invariant x >= 1099511627776 * x;\nloop invariant x >= 2199023255552 * x;\nloop invariant x >= 4398046511104 * x;\nloop invariant x >= 8796093022208 * x;\nloop invariant x >= 17592186044416 * x;\nloop invariant x >= 35184372088832 * x;\nloop invariant x >= 70368744177664 * x;\nloop invariant x >= 140737488355328 * x;\nloop invariant x >= 281474976710656 * x;\nloop invariant x >= 562949953421312 * x;\nloop invariant x >= 1125899906842624 * x;\nloop invariant x >= 2251799813685248 * x;\nloop invariant x >= 4503599627370496 * x;\nloop invariant x >= 9007199254740992 * x;\nloop invariant x >= 18014398509481984 * x;\nloop invariant x >= 36028797018963968 * x;\nloop invariant x >= 72057594037927936 * x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\nloop invariant i1: 0 <= x;\n\nloop invariant i3: x >= 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x == y * (1 + y) / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\n\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant x <= y;\nloop invariant x % 2 == 0;\nloop invariant x <= 2 * (y - 1);\nloop invariant is: loop invariant 0 <= x <= y and x % 2 == 0 and x <= 2 * (y - 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\nloop invariant i1: 0 <= x;\n\n\n\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 1;\nloop invariant y >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\n\n\nloop invariant i3: x >= 1;\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x == y * (y + 1) / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\n\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant x == 2 * x;\nloop invariant x < y;\nloop invariant y >= 0;\nloop invariant y <= 2^31 - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\nloop invariant i1: 0 <= x;\n\n\n\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x <= 2 * (x - 1);\nloop invariant x >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\n\n\nloop invariant i3: x >= 1;\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x >= 1;\nloop invariant y >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\n\nloop invariant i2: x >= 1;\n\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 19,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2^31 - 1;\nloop invariant y >= x;\nloop invariant y <= 2^31 - 1;\nloop invariant x + x >= x;\nloop invariant x + x <= 2^31 - 1;\nloop invariant x + x >= x * 2;\nloop invariant x + x <= x * 2;\nloop invariant x + x >= x * 2 - x;\nloop invariant x + x <= x * 2 - x;\nloop invariant x + x >= x * 2 - x + x;\nloop invariant x + x <= x * 2 - x + x;\nloop invariant x + x >= x * 2 - x + x + x;\nloop invariant x + x <= x * 2 - x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x >= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\n\n\n\nloop invariant i4: x + x >= x;\n\nloop invariant i6: x + x >= x * 2;\nloop invariant i7: x + x <= x * 2;\nloop invariant i8: x + x >= x * 2 - x;\n\nloop invariant i10: x + x >= x * 2 - x + x;\nloop invariant i11: x + x <= x * 2 - x + x;\n\nloop invariant i13: x + x <= x * 2 - x + x + x;\n\nloop invariant i15: x + x <= x * 2 - x + x + x + x;\n\nloop invariant i17: x + x <= x * 2 - x + x + x + x + x;\n\nloop invariant i19: x + x <= x * 2 - x + x + x + x + x + x;\n\nloop invariant i21: x + x <= x * 2 - x + x + x + x + x + x + x;\n\nloop invariant i23: x + x <= x * 2 - x + x + x + x + x + x + x + x;\n\nloop invariant i25: x + x <= x * 2 - x + x + x + x + x + x + x + x + x;\n\nloop invariant i27: x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x;\n\nloop invariant i29: x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x;\n\nloop invariant i31: x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x;\n\nloop invariant i33: x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x;\n\nloop invariant i35: x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x;\n\nloop invariant i37: x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\n\nloop invariant i39: x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 184: unexpected token 'invariant'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\nloop invariant i1: 0 <= x;\nloop invariant i2: x < y;\nloop invariant i3: y >= 1;\nloop invariant i4: x > 1 ==> x >= 2;\nloop invariant i5: x < y ==> x <= 2 * y;\nloop invariant i6: x < y ==> x > 1 ==> x >= 2 * y;\nloop invariant i7: 0 <= x <= y;\nloop invariant i8: x % 2 == 0;\nloop invariant i9: y % 2 == 0;\nloop invariant i10: x >= 1;\nloop invariant i11: 1 <= x <= 2^31 - 1;\nloop invariant i12: y >= x;\nloop invariant i13: x >= 0;\nloop invariant i14: y >= 0;\nloop invariant i15: x <= 2^31 - 1;\nloop invariant i16: y <= 2^31 - 1;\nloop invariant i17: x <= y;\nloop invariant i18: y <= 2;\nloop invariant i19: x >= pow(2, y - 1);\nloop invariant i20: x <= pow(2, y);\nloop invariant i21: x <= pow(2, y - 1);\nloop invariant i22: x >= pow(2, y - 2);\nloop invariant i23: y >= 2;\nloop invariant i24: x >= 2;\nloop invariant i25: y >= 3;\nloop invariant i26: x >= 4;\nloop invariant i27: y >= 4;\nloop invariant i28: x >= 8;\nloop invariant i29: y >= 5;\nloop invariant i30: x >= 16;\nloop invariant i31: y >= 6;\nloop invariant i32: x >= 32;\nloop invariant i33: y >= 7;\nloop invariant i34: x >= 64;\nloop invariant i35: y >= 8;\nloop invariant i36: x >= 128;\nloop invariant i37: y >= 9;\nloop invariant i38: x >= 256;\nloop invariant i39: y >= 10;\nloop invariant i40: x >= 512;\nloop invariant i41: y >= 11;\nloop invariant i42: x >= 1024;\nloop invariant i43: y >= 12;\nloop invariant i44: x >= 2048;\nloop invariant i45: y >= 13;\nloop invariant i46: x >= 4096;\nloop invariant i47: y >= 14;\nloop invariant i48: x >= 8192;\nloop invariant i49: y >= 15;\nloop invariant i50: x >= 16384;\nloop invariant i51: y >= 16;\nloop invariant i52: x >= 32768;\nloop invariant i53: y >= 17;\nloop invariant i54: x >= 65536;\nloop invariant i55: y >= 18;\nloop invariant i56: x >= 131072;\nloop invariant i57: y >= 19;\nloop invariant i58: x >= 262144;\nloop invariant i59: y >= 20;\nloop invariant i60: x >= 524288;\nloop invariant i61: y >= 21;\nloop invariant i62: x >= 1048576;\nloop invariant i63: y >= 22;\nloop invariant i64: x >= 2097152;\nloop invariant i65: y >= 23;\nloop invariant i66: x >= 4194304;\nloop invariant i67: y >= 24;\nloop invariant i68: x >= 8388608;\nloop invariant i69: y >= 25;\nloop invariant i70: x >= 16777216;\nloop invariant i71: y >= 26;\nloop invariant i72: x >= 33554432;\nloop invariant i73: y >= 27;\nloop invariant i74: x >= 67108864;\nloop invariant i75: y >= 28;\nloop invariant i76: x >= 134217728;\nloop invariant i77: y >= 29;\nloop invariant i78: x >= 268435456;\nloop invariant i79: y >= 30;\nloop invariant i80: x >= 536870912;\nloop invariant i81: y >= 31;\nloop invariant i82: x >= 1073741824;\nloop invariant i83: y >= 32;\nloop invariant i84: x >= 2147483648;\nloop invariant i85: y >= 33;\nloop invariant i86: x >= 4294967296;\nloop invariant i87: y >= 34;\nloop invariant i88: x >= 8589934592;\nloop invariant i89: y >= 35;\nloop invariant i90: x >= 17179869184;\nloop invariant i91: y >= 36;\nloop invariant i92: x >= 34359738368;\nloop invariant i93: y >= 37;\nloop invariant i94: x >= 68719476736;\nloop invariant i95: y >= 38;\nloop invariant i96: x >= 137438953472;\nloop invariant i97: y >= 39;\nloop invariant i98: x >= 274877906944;\nloop invariant i99: y >= 40;\nloop invariant i100: x >= 549755813888;\nloop invariant i101: y >= 41;\nloop invariant i102: x >= 1099511627776;\nloop invariant i103: y >= 42;\nloop invariant i104: x >= 2199023255552;\nloop invariant i105: y >= 43;\nloop invariant i106: x >= 4398046511104;\nloop invariant i107: y >= 44;\nloop invariant i108: 1 <= y; loop invariant x == 1; loop invariant x <= y * 2;\nloop invariant i109: x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant i110: x >= 1; loop invariant x * 2 >= y;\nloop invariant i111: x >= y;\nloop invariant i112: x >= 2 * x;\nloop invariant i113: x >= 4 * x;\nloop invariant i114: x >= 8 * x;\nloop invariant i115: x >= 16 * x;\nloop invariant i116: x >= 32 * x;\nloop invariant i117: x >= 64 * x;\nloop invariant i118: x >= 128 * x;\nloop invariant i119: x >= 256 * x;\nloop invariant i120: x >= 512 * x;\nloop invariant i121: x >= 1024 * x;\nloop invariant i122: x >= 2048 * x;\nloop invariant i123: x >= 4096 * x;\nloop invariant i124: x >= 8192 * x;\nloop invariant i125: x >= 16384 * x;\nloop invariant i126: x >= 32768 * x;\nloop invariant i127: x >= 65536 * x;\nloop invariant i128: x >= 131072 * x;\nloop invariant i129: x >= 262144 * x;\nloop invariant i130: x >= 524288 * x;\nloop invariant i131: x >= 1048576 * x;\nloop invariant i132: x >= 2097152 * x;\nloop invariant i133: x >= 4194304 * x;\nloop invariant i134: x >= 8388608 * x;\nloop invariant i135: x >= 16777216 * x;\nloop invariant i136: x >= 33554432 * x;\nloop invariant i137: x >= 67108864 * x;\nloop invariant i138: x >= 134217728 * x;\nloop invariant i139: x >= 268435456 * x;\nloop invariant i140: x >= 536870912 * x;\nloop invariant i141: x >= 1073741824 * x;\nloop invariant i142: x >= 2147483648 * x;\nloop invariant i143: x >= 4294967296 * x;\nloop invariant i144: x >= 8589934592 * x;\nloop invariant i145: x >= 17179869184 * x;\nloop invariant i146: x >= 34359738368 * x;\nloop invariant i147: x >= 68719476736 * x;\nloop invariant i148: x >= 137438953472 * x;\nloop invariant i149: x >= 274877906944 * x;\nloop invariant i150: x >= 549755813888 * x;\nloop invariant i151: x >= 1099511627776 * x;\nloop invariant i152: x >= 2199023255552 * x;\nloop invariant i153: x >= 4398046511104 * x;\nloop invariant i154: x >= 8796093022208 * x;\nloop invariant i155: x >= 17592186044416 * x;\nloop invariant i156: x >= 35184372088832 * x;\nloop invariant i157: x >= 70368744177664 * x;\nloop invariant i158: x >= 140737488355328 * x;\nloop invariant i159: x >= 281474976710656 * x;\nloop invariant i160: x >= 562949953421312 * x;\nloop invariant i161: x >= 1125899906842624 * x;\nloop invariant i162: x >= 2251799813685248 * x;\nloop invariant i163: x >= 4503599627370496 * x;\nloop invariant i164: x >= 9007199254740992 * x;\nloop invariant i165: x >= 18014398509481984 * x;\nloop invariant i166: x >= 36028797018963968 * x;\nloop invariant i167: x >= 72057594037927936 * x;\nloop invariant i168: x == y * (1 + y) / 2;\nloop invariant i169: x <= 2 * (y - 1);\nloop invariant i170: loop invariant 0 <= x <= y and x % 2 == 0 and x <= 2 * (y - 1);\nloop invariant i171: 0 <= y;\nloop invariant i172: x >= (1 + (y - 1) * y / 2);\nloop invariant i173: x == y * (y + 1) / 2;\nloop invariant i174: x == 2 * x;\nloop invariant i175: x <= 2 * (x - 1);\nloop invariant i176: 0 <= x <= 2^31 - 1;\nloop invariant i177: x + x >= x;\nloop invariant i178: x + x <= 2^31 - 1;\nloop invariant i179: x + x >= x * 2;\nloop invariant i180: x + x <= x * 2;\nloop invariant i181: x + x >= x * 2 - x;\nloop invariant i182: x + x <= x * 2 - x;\nloop invariant i183: x + x >= x * 2 - x + x;\nloop invariant i184: x + x <= x * 2 - x + x;\nloop invariant i185: x + x >= x * 2 - x + x + x;\nloop invariant i186: x + x <= x * 2 - x + x + x;\nloop invariant i187: x + x >= x * 2 - x + x + x + x;\nloop invariant i188: x + x <= x * 2 - x + x + x + x;\nloop invariant i189: x + x >= x * 2 - x + x + x + x + x;\nloop invariant i190: x + x <= x * 2 - x + x + x + x + x;\nloop invariant i191: x + x >= x * 2 - x + x + x + x + x + x;\nloop invariant i192: x + x <= x * 2 - x + x + x + x + x + x;\nloop invariant i193: x + x >= x * 2 - x + x + x + x + x + x + x;\nloop invariant i194: x + x <= x * 2 - x + x + x + x + x + x + x;\nloop invariant i195: x + x >= x * 2 - x + x + x + x + x + x + x + x;\nloop invariant i196: x + x <= x * 2 - x + x + x + x + x + x + x + x;\nloop invariant i197: x + x >= x * 2 - x + x + x + x + x + x + x + x + x;\nloop invariant i198: x + x <= x * 2 - x + x + x + x + x + x + x + x + x;\nloop invariant i199: x + x >= x * 2 - x + x + x + x + x + x + x + x + x + x;\nloop invariant i200: x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x;\nloop invariant i201: x + x >= x * 2 - x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i202: x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i203: x + x >= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i204: x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i205: x + x >= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i206: x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i207: x + x >= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i208: x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i209: x + x >= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i210: x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i211: x + x >= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\nloop invariant i212: x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 130,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  (x = 1);\n  \n  /*@\nloop invariant i1: 0 <= x;\n\n\nloop invariant i4: x > 1 ==> x >= 2;\nloop invariant i5: x < y ==> x <= 2 * y;\nloop invariant i6: x < y ==> x > 1 ==> x >= 2 * y;\n\n\n\nloop invariant i10: x >= 1;\n\n\nloop invariant i13: x >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i109: x >= 1; loop invariant x * 2 >= y; loop invariant x * 2 <= y * 2;\nloop invariant i110: x >= 1; loop invariant x * 2 >= y;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i171: 0 <= y;\n\n\n\n\n\nloop invariant i177: x + x >= x;\n\nloop invariant i179: x + x >= x * 2;\nloop invariant i180: x + x <= x * 2;\nloop invariant i181: x + x >= x * 2 - x;\n\nloop invariant i183: x + x >= x * 2 - x + x;\nloop invariant i184: x + x <= x * 2 - x + x;\n\nloop invariant i186: x + x <= x * 2 - x + x + x;\n\nloop invariant i188: x + x <= x * 2 - x + x + x + x;\n\nloop invariant i190: x + x <= x * 2 - x + x + x + x + x;\n\nloop invariant i192: x + x <= x * 2 - x + x + x + x + x + x;\n\nloop invariant i194: x + x <= x * 2 - x + x + x + x + x + x + x;\n\nloop invariant i196: x + x <= x * 2 - x + x + x + x + x + x + x + x;\n\nloop invariant i198: x + x <= x * 2 - x + x + x + x + x + x + x + x + x;\n\nloop invariant i200: x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x;\n\nloop invariant i202: x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x;\n\nloop invariant i204: x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x;\n\nloop invariant i206: x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x;\n\nloop invariant i208: x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x;\n\nloop invariant i210: x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\n\nloop invariant i212: x + x <= x * 2 - x + x + x + x + x + x + x + x + x + x + x + x + x + x + x + x;\n*/\nwhile ((x < y)) {\n    {\n    (x  = (x + x));\n    }\n\n  }\n  \n{;\n//@ assert( (x >= 1) );\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c"
        ],
        "failure": [],
        "skipped": [],
        "total": 5,
        "success_count": 5,
        "failure_count": 0,
        "success_rate": 1.0
    }
}