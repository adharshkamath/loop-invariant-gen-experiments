{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  int t = unknown_int();\n  \n  if (!(x!=y && y==t)) return 0;\n  while (unknown_bool()) {\n    if(x>0) y=y+x;\n  }\n  {;\n//@ assert(y>=t);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= 2147483647;\nloop invariant 0 <= y <= 2147483647;\nloop invariant 0 <= t <= 2147483647;\nloop invariant x >= y;\nloop invariant x >= t;\nloop invariant y >= t;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\n*/\n```",
            "```\n/*@\nloop invariant ( x >= 0 ) ==> ( y >= t );\nloop invariant ( x >= 0 ) ==> ( t >= 0 );\nloop invariant ( x >= 0 ) ==> ( y == t + x * (x - 1) / 2 );\nloop invariant ( x >= 0 ) ==> ( y == t + x * (x - 1) / 2 );\nloop invariant ( x >= 0 ) ==> ( y == t + x * (x - 1) / 2 );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= INT_MAX; loop invariant 0 <= y <= INT_MAX; loop invariant x - y >= 0; loop invariant x - y <= INT_MAX; loop invariant y - t >= 0; loop invariant y - t <= INT_MAX; loop invariant x - y == 0 || x - y >= 1; loop invariant y - t == 0 || y - t >= 1; loop invariant x - y >= 0 || x - y <= INT_MAX; loop invariant y - t >= 0 || y - t <= INT_MAX; loop invariant x - y >= 0 && y - t >= 0; loop invariant x - y <= INT_MAX && y - t <= INT_MAX;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= t;\nloop invariant x >= (t - y) / t * t;\nloop invariant x >= (t - y) / t * t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= (t - y) / t * t;\nloop invariant x <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant y <= t;\nloop invariant y >= t;\nloop invariant x <= y;\nloop invariant x >= y;\nloop invariant x == y;\nloop invariant x > 0;\nloop invariant y > 0;\nloop invariant t >= 0;\nloop invariant t <= 0;\nloop invariant t > 0;\nloop invariant t < 0;\nloop invariant t == 0;\nloop invariant t != 0;\nloop invariant x == 0;\nloop invariant x != 0;\nloop invariant x < 0;\nloop invariant x > 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == t;\nloop invariant x != t;\nloop invariant x > t;\nloop invariant x < t;\nloop invariant x >= t;\nloop invariant x <= t;\nloop invariant y == t;\nloop invariant y != t;\nloop invariant y > t;\nloop invariant y < t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant y == x;\nloop invariant y != x;\nloop invariant y > x;\nloop invariant y < x;\nloop invariant y >= x;\nloop invariant y <= x;\nloop invariant t == x;\nloop invariant t != x;\nloop invariant t > x;\nloop invariant t < x;\nloop invariant t >= x;\nloop invariant t <= x;\nloop invariant t == y;\nloop invariant t != y;\nloop invariant t > y;\nloop invariant t < y;\nloop invariant t >= y;\nloop invariant t <= y;\nloop invariant x == y + t;\nloop invariant x != y + t;\nloop invariant x > y + t;\nloop invariant x < y + t;\nloop invariant x >= y + t;\nloop invariant x <= y + t;\nloop invariant y == x + t;\nloop invariant y != x + t;\nloop invariant y > x + t;\nloop invariant y < x + t;\nloop invariant y >= x + t;\nloop invariant y <= x + t;\nloop invariant t == x + y;\nloop invariant t != x + y;\nloop invariant t > x + y;\nloop invariant t < x + y;\nloop invariant t >= x + y;\nloop invariant t <= x + y;\nloop invariant x == t + y;\nloop invariant x != t + y;\nloop invariant x > t + y;\nloop invariant x < t + y;\nloop invariant x >= t + y;\nloop invariant x <= t + y;\nloop invariant y == t + x;\nloop invariant y != t + x;\nloop invariant y > t + x;\nloop invariant y < t + x;\nloop invariant y >= t + x;\nloop invariant y <= t + x;\nloop invariant x == y - t;\nloop invariant x != y - t;\nloop invariant x > y - t;\nloop invariant x < y - t;\nloop invariant x >= y - t;\nloop invariant x <= y - t;\nloop invariant y == x - t;\nloop invariant y != x - t;\nloop invariant y > x - t;\nloop invariant y < x - t;\nloop invariant y >= x - t;\nloop invariant y <= x - t;\nloop invariant t == x - y;\nloop invariant t != x - y;\nloop invariant t > x - y;\nloop invariant t < x - y;\nloop invariant t >= x - y;\nloop invariant t <= x - y;\nloop invariant x == t - y;\nloop invariant x != t - y;\nloop invariant x > t - y;\nloop invariant x < t - y;\nloop invariant x >= t - y;\nloop invariant x <= t - y;\nloop invariant y == t - x;\nloop invariant y != t - x;\nloop invariant y > t - x;\nloop invariant y < t - x;\nloop invariant y >= t - x;\nloop invariant y <= t - x;\nloop invariant x == y * t;\nloop invariant x != y * t;\nloop invariant x > y * t;\nloop invariant x < y * t;\nloop invariant x >= y * t;\nloop invariant x <= y * t;\nloop invariant y == x * t;\nloop invariant y != x * t;\nloop invariant y > x * t;\nloop invariant y < x * t;\nloop invariant y >= x * t;\nloop invariant y <= x * t;\nloop invariant t == x * y;\nloop invariant t != x * y;\nloop invariant t > x * y;\nloop invariant t < x * y;\nloop invariant t >= x * y;\nloop invariant t <= x * y;\nloop invariant x == t * y;\nloop invariant x != t * y;\nloop invariant x > t * y;\nloop invariant x < t * y;\nloop invariant x >= t * y;\nloop invariant x <= t * y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 2147483647;\nloop invariant 0 <= y <= 2147483647;\nloop invariant 0 <= t <= 2147483647;\nloop invariant x<=y;\nloop invariant y<=t;\nloop invariant x!=y;\nloop invariant y==t;\nloop invariant x>0;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= x;\nloop invariant x>=t;\nloop invariant x>=y;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant x >= y;\nloop invariant y >= t;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant t >= 0;\nloop invariant x != y;\nloop invariant y == t;\nloop invariant x > 0 ==> y >= x;\nloop invariant x > 0 ==> x >= y;\nloop invariant x > 0 ==> t >= y;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y >= t;\nloop invariant x > 0 ==> x >= t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 2;\nloop invariant 1 <= y <= 2;\nloop invariant t == x;\nloop invariant t == y;\nloop invariant x >= y;\nloop invariant y >= t;\nloop invariant x >= t;\nloop invariant x <= t;\nloop invariant y <= t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant y < 100000;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 4;\nloop invariant t = 1;\nloop invariant x + y >= t;\nloop invariant (x + y) % 2 == 0;\nloop invariant (x + y) % 3 == 0;\nloop invariant (x + y) % 4 == 0;\nloop invariant (x + y) % 5 == 0;\nloop invariant (x + y) % 6 == 0;\nloop invariant (x + y) % 7 == 0;\nloop invariant (x + y) % 8 == 0;\nloop invariant (x + y) % 9 == 0;\nloop invariant (x + y) % 10 == 0;\nloop invariant (x + y) % 11 == 0;\nloop invariant (x + y) % 12 == 0;\nloop invariant (x + y) % 13 == 0;\nloop invariant (x + y) % 14 == 0;\nloop invariant (x + y) % 15 == 0;\nloop invariant (x + y) % 16 == 0;\nloop invariant (x + y) % 17 == 0;\nloop invariant (x + y) % 18 == 0;\nloop invariant (x + y) % 19 == 0;\nloop invariant (x + y) % 20 == 0;\nloop invariant (x + y) % 21 == 0;\nloop invariant (x + y) % 22 == 0;\nloop invariant (x + y) % 23 == 0;\nloop invariant (x + y) % 24 == 0;\nloop invariant (x + y) % 25 == 0;\nloop invariant (x + y) % 26 == 0;\nloop invariant (x + y) % 27 == 0;\nloop invariant (x + y) % 28 == 0;\nloop invariant (x + y) % 29 == 0;\nloop invariant (x + y) % 30 == 0;\nloop invariant (x + y) % 31 == 0;\nloop invariant (x + y) % 32 == 0;\nloop invariant (x + y) % 33 == 0;\nloop invariant (x + y) % 34 == 0;\nloop invariant (x + y) % 35 == 0;\nloop invariant (x + y) % 36 == 0;\nloop invariant (x + y) % 37 == 0;\nloop invariant (x + y) % 38 == 0;\nloop invariant (x + y) % 39 == 0;\nloop invariant (x + y) % 40 == 0;\nloop invariant (x + y) % 41 == 0;\nloop invariant (x + y) % 42 == 0;\nloop invariant (x + y) % 43 == 0;\nloop invariant (x + y) % 44 == 0;\nloop invariant (x + y) % 45 == 0;\nloop invariant (x + y) % 46 == 0;\nloop invariant (x + y) % 47 == 0;\nloop invariant (x + y) % 48 == 0;\nloop invariant (x + y) % 49 == 0;\nloop invariant (x + y) % 50 == 0;\nloop invariant (x + y) % 51 == 0;\nloop invariant (x + y) % 52 == 0;\nloop invariant (x + y) % 53 == 0;\nloop invariant (x + y) % 54 == 0;\nloop invariant (x + y) % 55 == 0;\nloop invariant (x + y) % 56 == 0;\nloop invariant (x + y) % 57 == 0;\nloop invariant (x + y) % 58 == 0;\nloop invariant (x + y) % 59 == 0;\nloop invariant (x + y) % 60 == 0;\nloop invariant (x + y) % 61 == 0;\nloop invariant (x + y) % 62 == 0;\nloop invariant (x + y) % 63 == 0;\nloop invariant (x + y) % 64 == 0;\nloop invariant (x + y) % 65 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= y;\nloop invariant x <= y + 1;\nloop invariant y >= t;\n*/\n```",
            "```\n/*@\nloop invariant x!=y;\nloop invariant y==t;\nloop invariant x>=0;\nloop invariant x<=y;\nloop invariant y>=0;\nloop invariant y<=t;\nloop invariant t>=0;\nloop invariant t<=y;\nloop invariant unknown_bool()==>x<=y;\nloop invariant unknown_bool()==>y<=t;\nloop invariant unknown_bool()==>t>=0;\nloop invariant unknown_bool()==>t<=y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= t;\nloop invariant x >= (y - t);\nloop invariant y - t + x >= t;\nloop invariant x >= 0;\nloop invariant x <= y;\nloop invariant x <= t;\nloop invariant y <= t;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2147483647;\nloop invariant 0 <= y <= 2147483647;\nloop invariant 0 <= t <= 2147483647;\nloop invariant x >= y;\nloop invariant x >= t;\nloop invariant y >= t;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\nloop invariant x+y >= t;\nloop invariant x+y >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  int t = unknown_int();\n  \n  if (!(x!=y && y==t)) return 0;\n  /*@\n\n\n\n\n\nloop invariant i6: y >= t;\n\n\n*/\nwhile (unknown_bool()) {\n    if(x>0) y=y+x;\n  }\n  {;\n//@ assert(y>=t);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant ( x >= 0 ) ==> ( y >= t );\nloop invariant ( x >= 0 ) ==> ( t >= 0 );\nloop invariant ( x >= 0 ) ==> ( y == t + x * (x - 1) / 2 );\nloop invariant ( x >= 0 ) ==> ( y == t + x * (x - 1) / 2 );\nloop invariant ( x >= 0 ) ==> ( y == t + x * (x - 1) / 2 );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  int t = unknown_int();\n  \n  if (!(x!=y && y==t)) return 0;\n  /*@\nloop invariant i1: ( x >= 0 ) ==> ( y >= t );\n\n\n*/\nwhile (unknown_bool()) {\n    if(x>0) y=y+x;\n  }\n  {;\n//@ assert(y>=t);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= INT_MAX; loop invariant 0 <= y <= INT_MAX; loop invariant x - y >= 0; loop invariant x - y <= INT_MAX; loop invariant y - t >= 0; loop invariant y - t <= INT_MAX; loop invariant x - y == 0 || x - y >= 1; loop invariant y - t == 0 || y - t >= 1; loop invariant x - y >= 0 || x - y <= INT_MAX; loop invariant y - t >= 0 || y - t <= INT_MAX; loop invariant x - y >= 0 && y - t >= 0; loop invariant x - y <= INT_MAX && y - t <= INT_MAX;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  int t = unknown_int();\n  \n  if (!(x!=y && y==t)) return 0;\n  /*@\n\n*/\nwhile (unknown_bool()) {\n    if(x>0) y=y+x;\n  }\n  {;\n//@ assert(y>=t);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= t;\nloop invariant x >= (t - y) / t * t;\nloop invariant x >= (t - y) / t * t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= (t - y) / t * t;\nloop invariant x <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant x >= 0;\nloop invariant x <= t;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  int t = unknown_int();\n  \n  if (!(x!=y && y==t)) return 0;\n  /*@\n\n\nloop invariant i3: y >= t;\n\n\n\n*/\nwhile (unknown_bool()) {\n    if(x>0) y=y+x;\n  }\n  {;\n//@ assert(y>=t);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 59,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant y <= t;\nloop invariant y >= t;\nloop invariant x <= y;\nloop invariant x >= y;\nloop invariant x == y;\nloop invariant x > 0;\nloop invariant y > 0;\nloop invariant t >= 0;\nloop invariant t <= 0;\nloop invariant t > 0;\nloop invariant t < 0;\nloop invariant t == 0;\nloop invariant t != 0;\nloop invariant x == 0;\nloop invariant x != 0;\nloop invariant x < 0;\nloop invariant x > 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\nloop invariant x == t;\nloop invariant x != t;\nloop invariant x > t;\nloop invariant x < t;\nloop invariant x >= t;\nloop invariant x <= t;\nloop invariant y == t;\nloop invariant y != t;\nloop invariant y > t;\nloop invariant y < t;\nloop invariant y >= t;\nloop invariant y <= t;\nloop invariant y == x;\nloop invariant y != x;\nloop invariant y > x;\nloop invariant y < x;\nloop invariant y >= x;\nloop invariant y <= x;\nloop invariant t == x;\nloop invariant t != x;\nloop invariant t > x;\nloop invariant t < x;\nloop invariant t >= x;\nloop invariant t <= x;\nloop invariant t == y;\nloop invariant t != y;\nloop invariant t > y;\nloop invariant t < y;\nloop invariant t >= y;\nloop invariant t <= y;\nloop invariant x == y + t;\nloop invariant x != y + t;\nloop invariant x > y + t;\nloop invariant x < y + t;\nloop invariant x >= y + t;\nloop invariant x <= y + t;\nloop invariant y == x + t;\nloop invariant y != x + t;\nloop invariant y > x + t;\nloop invariant y < x + t;\nloop invariant y >= x + t;\nloop invariant y <= x + t;\nloop invariant t == x + y;\nloop invariant t != x + y;\nloop invariant t > x + y;\nloop invariant t < x + y;\nloop invariant t >= x + y;\nloop invariant t <= x + y;\nloop invariant x == t + y;\nloop invariant x != t + y;\nloop invariant x > t + y;\nloop invariant x < t + y;\nloop invariant x >= t + y;\nloop invariant x <= t + y;\nloop invariant y == t + x;\nloop invariant y != t + x;\nloop invariant y > t + x;\nloop invariant y < t + x;\nloop invariant y >= t + x;\nloop invariant y <= t + x;\nloop invariant x == y - t;\nloop invariant x != y - t;\nloop invariant x > y - t;\nloop invariant x < y - t;\nloop invariant x >= y - t;\nloop invariant x <= y - t;\nloop invariant y == x - t;\nloop invariant y != x - t;\nloop invariant y > x - t;\nloop invariant y < x - t;\nloop invariant y >= x - t;\nloop invariant y <= x - t;\nloop invariant t == x - y;\nloop invariant t != x - y;\nloop invariant t > x - y;\nloop invariant t < x - y;\nloop invariant t >= x - y;\nloop invariant t <= x - y;\nloop invariant x == t - y;\nloop invariant x != t - y;\nloop invariant x > t - y;\nloop invariant x < t - y;\nloop invariant x >= t - y;\nloop invariant x <= t - y;\nloop invariant y == t - x;\nloop invariant y != t - x;\nloop invariant y > t - x;\nloop invariant y < t - x;\nloop invariant y >= t - x;\nloop invariant y <= t - x;\nloop invariant x == y * t;\nloop invariant x != y * t;\nloop invariant x > y * t;\nloop invariant x < y * t;\nloop invariant x >= y * t;\nloop invariant x <= y * t;\nloop invariant y == x * t;\nloop invariant y != x * t;\nloop invariant y > x * t;\nloop invariant y < x * t;\nloop invariant y >= x * t;\nloop invariant y <= x * t;\nloop invariant t == x * y;\nloop invariant t != x * y;\nloop invariant t > x * y;\nloop invariant t < x * y;\nloop invariant t >= x * y;\nloop invariant t <= x * y;\nloop invariant x == t * y;\nloop invariant x != t * y;\nloop invariant x > t * y;\nloop invariant x < t * y;\nloop invariant x >= t * y;\nloop invariant x <= t * y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  int t = unknown_int();\n  \n  if (!(x!=y && y==t)) return 0;\n  /*@\n\n\n\nloop invariant i4: y >= t;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i22: x != t;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i38: t != x;\n\n\n\n\n\n\n\n\n\nloop invariant i48: t <= y;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if(x>0) y=y+x;\n  }\n  {;\n//@ assert(y>=t);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2147483647;\nloop invariant 0 <= y <= 2147483647;\nloop invariant 0 <= t <= 2147483647;\nloop invariant x<=y;\nloop invariant y<=t;\nloop invariant x!=y;\nloop invariant y==t;\nloop invariant x>0;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\nloop invariant y+x==t;\nloop invariant x+x==y;\nloop invariant x+x==y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  int t = unknown_int();\n  \n  if (!(x!=y && y==t)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if(x>0) y=y+x;\n  }\n  {;\n//@ assert(y>=t);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= x;\nloop invariant x>=t;\nloop invariant x>=y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  int t = unknown_int();\n  \n  if (!(x!=y && y==t)) return 0;\n  /*@\n\n\n\n*/\nwhile (unknown_bool()) {\n    if(x>0) y=y+x;\n  }\n  {;\n//@ assert(y>=t);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  int t = unknown_int();\n  \n  if (!(x!=y && y==t)) return 0;\n  /*@\n\n*/\nwhile (unknown_bool()) {\n    if(x>0) y=y+x;\n  }\n  {;\n//@ assert(y>=t);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x >= y;\nloop invariant y >= t;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant t >= 0;\nloop invariant x != y;\nloop invariant y == t;\nloop invariant x > 0 ==> y >= x;\nloop invariant x > 0 ==> x >= y;\nloop invariant x > 0 ==> t >= y;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y >= t;\nloop invariant x > 0 ==> x >= t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\nloop invariant x > 0 ==> x > t;\nloop invariant x > 0 ==> y > t;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  int t = unknown_int();\n  \n  if (!(x!=y && y==t)) return 0;\n  /*@\n\nloop invariant i2: y >= t;\n\n\n\n\n\n\n\n\n\n\nloop invariant i13: x > 0 ==> y >= t;\n\n*/\nwhile (unknown_bool()) {\n    if(x>0) y=y+x;\n  }\n  {;\n//@ assert(y>=t);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 2;\nloop invariant 1 <= y <= 2;\nloop invariant t == x;\nloop invariant t == y;\nloop invariant x >= y;\nloop invariant y >= t;\nloop invariant x >= t;\nloop invariant x <= t;\nloop invariant y <= t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\nloop invariant x == y;\nloop invariant x == t;\nloop invariant y == t;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  int t = unknown_int();\n  \n  if (!(x!=y && y==t)) return 0;\n  /*@\n\n\n\n\n\nloop invariant i6: y >= t;\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if(x>0) y=y+x;\n  }\n  {;\n//@ assert(y>=t);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant y < 100000;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  int t = unknown_int();\n  \n  if (!(x!=y && y==t)) return 0;\n  /*@\n\n\n\n*/\nwhile (unknown_bool()) {\n    if(x>0) y=y+x;\n  }\n  {;\n//@ assert(y>=t);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 4;\nloop invariant t = 1;\nloop invariant x + y >= t;\nloop invariant (x + y) % 2 == 0;\nloop invariant (x + y) % 3 == 0;\nloop invariant (x + y) % 4 == 0;\nloop invariant (x + y) % 5 == 0;\nloop invariant (x + y) % 6 == 0;\nloop invariant (x + y) % 7 == 0;\nloop invariant (x + y) % 8 == 0;\nloop invariant (x + y) % 9 == 0;\nloop invariant (x + y) % 10 == 0;\nloop invariant (x + y) % 11 == 0;\nloop invariant (x + y) % 12 == 0;\nloop invariant (x + y) % 13 == 0;\nloop invariant (x + y) % 14 == 0;\nloop invariant (x + y) % 15 == 0;\nloop invariant (x + y) % 16 == 0;\nloop invariant (x + y) % 17 == 0;\nloop invariant (x + y) % 18 == 0;\nloop invariant (x + y) % 19 == 0;\nloop invariant (x + y) % 20 == 0;\nloop invariant (x + y) % 21 == 0;\nloop invariant (x + y) % 22 == 0;\nloop invariant (x + y) % 23 == 0;\nloop invariant (x + y) % 24 == 0;\nloop invariant (x + y) % 25 == 0;\nloop invariant (x + y) % 26 == 0;\nloop invariant (x + y) % 27 == 0;\nloop invariant (x + y) % 28 == 0;\nloop invariant (x + y) % 29 == 0;\nloop invariant (x + y) % 30 == 0;\nloop invariant (x + y) % 31 == 0;\nloop invariant (x + y) % 32 == 0;\nloop invariant (x + y) % 33 == 0;\nloop invariant (x + y) % 34 == 0;\nloop invariant (x + y) % 35 == 0;\nloop invariant (x + y) % 36 == 0;\nloop invariant (x + y) % 37 == 0;\nloop invariant (x + y) % 38 == 0;\nloop invariant (x + y) % 39 == 0;\nloop invariant (x + y) % 40 == 0;\nloop invariant (x + y) % 41 == 0;\nloop invariant (x + y) % 42 == 0;\nloop invariant (x + y) % 43 == 0;\nloop invariant (x + y) % 44 == 0;\nloop invariant (x + y) % 45 == 0;\nloop invariant (x + y) % 46 == 0;\nloop invariant (x + y) % 47 == 0;\nloop invariant (x + y) % 48 == 0;\nloop invariant (x + y) % 49 == 0;\nloop invariant (x + y) % 50 == 0;\nloop invariant (x + y) % 51 == 0;\nloop invariant (x + y) % 52 == 0;\nloop invariant (x + y) % 53 == 0;\nloop invariant (x + y) % 54 == 0;\nloop invariant (x + y) % 55 == 0;\nloop invariant (x + y) % 56 == 0;\nloop invariant (x + y) % 57 == 0;\nloop invariant (x + y) % 58 == 0;\nloop invariant (x + y) % 59 == 0;\nloop invariant (x + y) % 60 == 0;\nloop invariant (x + y) % 61 == 0;\nloop invariant (x + y) % 62 == 0;\nloop invariant (x + y) % 63 == 0;\nloop invariant (x + y) % 64 == 0;\nloop invariant (x + y) % 65 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  int t = unknown_int();\n  \n  if (!(x!=y && y==t)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if(x>0) y=y+x;\n  }\n  {;\n//@ assert(y>=t);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= y;\nloop invariant x <= y + 1;\nloop invariant y >= t;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  int t = unknown_int();\n  \n  if (!(x!=y && y==t)) return 0;\n  /*@\n\n\nloop invariant i3: y >= t;\n*/\nwhile (unknown_bool()) {\n    if(x>0) y=y+x;\n  }\n  {;\n//@ assert(y>=t);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant x!=y;\nloop invariant y==t;\nloop invariant x>=0;\nloop invariant x<=y;\nloop invariant y>=0;\nloop invariant y<=t;\nloop invariant t>=0;\nloop invariant t<=y;\nloop invariant unknown_bool()==>x<=y;\nloop invariant unknown_bool()==>y<=t;\nloop invariant unknown_bool()==>t>=0;\nloop invariant unknown_bool()==>t<=y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  int t = unknown_int();\n  \n  if (!(x!=y && y==t)) return 0;\n  /*@\n\n\n\n\n\n\n\nloop invariant i8: t<=y;\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if(x>0) y=y+x;\n  }\n  {;\n//@ assert(y>=t);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= t;\nloop invariant x >= (y - t);\nloop invariant y - t + x >= t;\nloop invariant x >= 0;\nloop invariant x <= y;\nloop invariant x <= t;\nloop invariant y <= t;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  int t = unknown_int();\n  \n  if (!(x!=y && y==t)) return 0;\n  /*@\n\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if(x>0) y=y+x;\n  }\n  {;\n//@ assert(y>=t);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 189: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  int t = unknown_int();\n  \n  if (!(x!=y && y==t)) return 0;\n  /*@\nloop invariant i1: 0 <= x <= 2147483647;\nloop invariant i2: 0 <= y <= 2147483647;\nloop invariant i3: 0 <= t <= 2147483647;\nloop invariant i4: x >= y;\nloop invariant i5: x >= t;\nloop invariant i6: y >= t;\nloop invariant i7: x+y >= t;\nloop invariant i8: x+y >= y;\nloop invariant i9: ( x >= 0 ) ==> ( y >= t );\nloop invariant i10: ( x >= 0 ) ==> ( t >= 0 );\nloop invariant i11: ( x >= 0 ) ==> ( y == t + x * (x - 1) / 2 );\nloop invariant i12: 0 <= x <= INT_MAX; loop invariant 0 <= y <= INT_MAX; loop invariant x - y >= 0; loop invariant x - y <= INT_MAX; loop invariant y - t >= 0; loop invariant y - t <= INT_MAX; loop invariant x - y == 0 || x - y >= 1; loop invariant y - t == 0 || y - t >= 1; loop invariant x - y >= 0 || x - y <= INT_MAX; loop invariant y - t >= 0 || y - t <= INT_MAX; loop invariant x - y >= 0 && y - t >= 0; loop invariant x - y <= INT_MAX && y - t <= INT_MAX;\nloop invariant i13: 0 <= y <= t;\nloop invariant i14: x >= (t - y) / t * t;\nloop invariant i15: y <= t;\nloop invariant i16: x <= t;\nloop invariant i17: x >= 0;\nloop invariant i18: 0 <= x;\nloop invariant i19: 0 <= y;\nloop invariant i20: x <= y;\nloop invariant i21: x == y;\nloop invariant i22: x > 0;\nloop invariant i23: y > 0;\nloop invariant i24: t >= 0;\nloop invariant i25: t <= 0;\nloop invariant i26: t > 0;\nloop invariant i27: t < 0;\nloop invariant i28: t == 0;\nloop invariant i29: t != 0;\nloop invariant i30: x == 0;\nloop invariant i31: x != 0;\nloop invariant i32: x < 0;\nloop invariant i33: x <= 0;\nloop invariant i34: x == t;\nloop invariant i35: x != t;\nloop invariant i36: x > t;\nloop invariant i37: x < t;\nloop invariant i38: y == t;\nloop invariant i39: y != t;\nloop invariant i40: y > t;\nloop invariant i41: y < t;\nloop invariant i42: y == x;\nloop invariant i43: y != x;\nloop invariant i44: y > x;\nloop invariant i45: y < x;\nloop invariant i46: y >= x;\nloop invariant i47: y <= x;\nloop invariant i48: t == x;\nloop invariant i49: t != x;\nloop invariant i50: t > x;\nloop invariant i51: t < x;\nloop invariant i52: t >= x;\nloop invariant i53: t <= x;\nloop invariant i54: t == y;\nloop invariant i55: t != y;\nloop invariant i56: t > y;\nloop invariant i57: t < y;\nloop invariant i58: t >= y;\nloop invariant i59: t <= y;\nloop invariant i60: x == y + t;\nloop invariant i61: x != y + t;\nloop invariant i62: x > y + t;\nloop invariant i63: x < y + t;\nloop invariant i64: x >= y + t;\nloop invariant i65: x <= y + t;\nloop invariant i66: y == x + t;\nloop invariant i67: y != x + t;\nloop invariant i68: y > x + t;\nloop invariant i69: y < x + t;\nloop invariant i70: y >= x + t;\nloop invariant i71: y <= x + t;\nloop invariant i72: t == x + y;\nloop invariant i73: t != x + y;\nloop invariant i74: t > x + y;\nloop invariant i75: t < x + y;\nloop invariant i76: t >= x + y;\nloop invariant i77: t <= x + y;\nloop invariant i78: x == t + y;\nloop invariant i79: x != t + y;\nloop invariant i80: x > t + y;\nloop invariant i81: x < t + y;\nloop invariant i82: x >= t + y;\nloop invariant i83: x <= t + y;\nloop invariant i84: y == t + x;\nloop invariant i85: y != t + x;\nloop invariant i86: y > t + x;\nloop invariant i87: y < t + x;\nloop invariant i88: y >= t + x;\nloop invariant i89: y <= t + x;\nloop invariant i90: x == y - t;\nloop invariant i91: x != y - t;\nloop invariant i92: x > y - t;\nloop invariant i93: x < y - t;\nloop invariant i94: x >= y - t;\nloop invariant i95: x <= y - t;\nloop invariant i96: y == x - t;\nloop invariant i97: y != x - t;\nloop invariant i98: y > x - t;\nloop invariant i99: y < x - t;\nloop invariant i100: y >= x - t;\nloop invariant i101: y <= x - t;\nloop invariant i102: t == x - y;\nloop invariant i103: t != x - y;\nloop invariant i104: t > x - y;\nloop invariant i105: t < x - y;\nloop invariant i106: t >= x - y;\nloop invariant i107: t <= x - y;\nloop invariant i108: x == t - y;\nloop invariant i109: x != t - y;\nloop invariant i110: x > t - y;\nloop invariant i111: x < t - y;\nloop invariant i112: x >= t - y;\nloop invariant i113: x <= t - y;\nloop invariant i114: y == t - x;\nloop invariant i115: y != t - x;\nloop invariant i116: y > t - x;\nloop invariant i117: y < t - x;\nloop invariant i118: y >= t - x;\nloop invariant i119: y <= t - x;\nloop invariant i120: x == y * t;\nloop invariant i121: x != y * t;\nloop invariant i122: x > y * t;\nloop invariant i123: x < y * t;\nloop invariant i124: x >= y * t;\nloop invariant i125: x <= y * t;\nloop invariant i126: y == x * t;\nloop invariant i127: y != x * t;\nloop invariant i128: y > x * t;\nloop invariant i129: y < x * t;\nloop invariant i130: y >= x * t;\nloop invariant i131: y <= x * t;\nloop invariant i132: t == x * y;\nloop invariant i133: t != x * y;\nloop invariant i134: t > x * y;\nloop invariant i135: t < x * y;\nloop invariant i136: t >= x * y;\nloop invariant i137: t <= x * y;\nloop invariant i138: x == t * y;\nloop invariant i139: x != t * y;\nloop invariant i140: x > t * y;\nloop invariant i141: x < t * y;\nloop invariant i142: x >= t * y;\nloop invariant i143: x <= t * y;\nloop invariant i144: x<=y;\nloop invariant i145: y<=t;\nloop invariant i146: x!=y;\nloop invariant i147: y==t;\nloop invariant i148: x>0;\nloop invariant i149: y+x==t;\nloop invariant i150: x+x==y;\nloop invariant i151: 0 <= y <= x;\nloop invariant i152: x>=t;\nloop invariant i153: x>=y;\nloop invariant i154: y >= 0;\nloop invariant i155: x != y;\nloop invariant i156: x > 0 ==> y >= x;\nloop invariant i157: x > 0 ==> x >= y;\nloop invariant i158: x > 0 ==> t >= y;\nloop invariant i159: x > 0 ==> y > t;\nloop invariant i160: x > 0 ==> x > t;\nloop invariant i161: x > 0 ==> y >= t;\nloop invariant i162: x > 0 ==> x >= t;\nloop invariant i163: 1 <= x <= 2;\nloop invariant i164: 1 <= y <= 2;\nloop invariant i165: 0 <= y <= 100000;\nloop invariant i166: x >= (1 + (y - 1) * y / 2);\nloop invariant i167: y < 100000;\nloop invariant i168: 0 <= x <= 4;\nloop invariant i169: 0 <= y <= 4;\nloop invariant i170: t = 1;\nloop invariant i171: x + y >= t;\nloop invariant i172: (x + y) % 2 == 0;\nloop invariant i173: (x + y) % 3 == 0;\nloop invariant i174: (x + y) % 4 == 0;\nloop invariant i175: (x + y) % 5 == 0;\nloop invariant i176: (x + y) % 6 == 0;\nloop invariant i177: (x + y) % 7 == 0;\nloop invariant i178: (x + y) % 8 == 0;\nloop invariant i179: (x + y) % 9 == 0;\nloop invariant i180: (x + y) % 10 == 0;\nloop invariant i181: (x + y) % 11 == 0;\nloop invariant i182: (x + y) % 12 == 0;\nloop invariant i183: (x + y) % 13 == 0;\nloop invariant i184: (x + y) % 14 == 0;\nloop invariant i185: (x + y) % 15 == 0;\nloop invariant i186: (x + y) % 16 == 0;\nloop invariant i187: (x + y) % 17 == 0;\nloop invariant i188: (x + y) % 18 == 0;\nloop invariant i189: (x + y) % 19 == 0;\nloop invariant i190: (x + y) % 20 == 0;\nloop invariant i191: (x + y) % 21 == 0;\nloop invariant i192: (x + y) % 22 == 0;\nloop invariant i193: (x + y) % 23 == 0;\nloop invariant i194: (x + y) % 24 == 0;\nloop invariant i195: (x + y) % 25 == 0;\nloop invariant i196: (x + y) % 26 == 0;\nloop invariant i197: (x + y) % 27 == 0;\nloop invariant i198: (x + y) % 28 == 0;\nloop invariant i199: (x + y) % 29 == 0;\nloop invariant i200: (x + y) % 30 == 0;\nloop invariant i201: (x + y) % 31 == 0;\nloop invariant i202: (x + y) % 32 == 0;\nloop invariant i203: (x + y) % 33 == 0;\nloop invariant i204: (x + y) % 34 == 0;\nloop invariant i205: (x + y) % 35 == 0;\nloop invariant i206: (x + y) % 36 == 0;\nloop invariant i207: (x + y) % 37 == 0;\nloop invariant i208: (x + y) % 38 == 0;\nloop invariant i209: (x + y) % 39 == 0;\nloop invariant i210: (x + y) % 40 == 0;\nloop invariant i211: (x + y) % 41 == 0;\nloop invariant i212: (x + y) % 42 == 0;\nloop invariant i213: (x + y) % 43 == 0;\nloop invariant i214: (x + y) % 44 == 0;\nloop invariant i215: (x + y) % 45 == 0;\nloop invariant i216: (x + y) % 46 == 0;\nloop invariant i217: (x + y) % 47 == 0;\nloop invariant i218: (x + y) % 48 == 0;\nloop invariant i219: (x + y) % 49 == 0;\nloop invariant i220: (x + y) % 50 == 0;\nloop invariant i221: (x + y) % 51 == 0;\nloop invariant i222: (x + y) % 52 == 0;\nloop invariant i223: (x + y) % 53 == 0;\nloop invariant i224: (x + y) % 54 == 0;\nloop invariant i225: (x + y) % 55 == 0;\nloop invariant i226: (x + y) % 56 == 0;\nloop invariant i227: (x + y) % 57 == 0;\nloop invariant i228: (x + y) % 58 == 0;\nloop invariant i229: (x + y) % 59 == 0;\nloop invariant i230: (x + y) % 60 == 0;\nloop invariant i231: (x + y) % 61 == 0;\nloop invariant i232: (x + y) % 62 == 0;\nloop invariant i233: (x + y) % 63 == 0;\nloop invariant i234: (x + y) % 64 == 0;\nloop invariant i235: (x + y) % 65 == 0;\nloop invariant i236: 1 <= x <= y;\nloop invariant i237: x <= y + 1;\nloop invariant i238: x>=0;\nloop invariant i239: y>=0;\nloop invariant i240: t>=0;\nloop invariant i241: t<=y;\nloop invariant i242: unknown_bool()==>x<=y;\nloop invariant i243: unknown_bool()==>y<=t;\nloop invariant i244: unknown_bool()==>t>=0;\nloop invariant i245: unknown_bool()==>t<=y;\nloop invariant i246: x >= (y - t);\nloop invariant i247: y - t + x >= t;\n*/\nwhile (unknown_bool()) {\n    if(x>0) y=y+x;\n  }\n  {;\n//@ assert(y>=t);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 79,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  int t = unknown_int();\n  \n  if (!(x!=y && y==t)) return 0;\n  /*@\n\n\n\n\n\nloop invariant i6: y >= t;\n\n\nloop invariant i9: ( x >= 0 ) ==> ( y >= t );\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i35: x != t;\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i49: t != x;\n\n\n\n\n\n\n\n\n\nloop invariant i59: t <= y;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i161: x > 0 ==> y >= t;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i241: t<=y;\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if(x>0) y=y+x;\n  }\n  {;\n//@ assert(y>=t);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c"
        ],
        "skipped": [],
        "total": 133,
        "success_count": 117,
        "failure_count": 16,
        "success_rate": 0.8796992481203008
    }
}