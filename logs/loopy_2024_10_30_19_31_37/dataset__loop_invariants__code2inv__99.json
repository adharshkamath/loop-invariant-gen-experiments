{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/99.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  int y;\n  \n  assume((n >= 0));\n  (x = n);\n  (y = 0);\n  \n  while ((x > 0)) {\n    {\n    (y  = (y + 1));\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (n == (x + y)) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= y <= n;\nloop invariant n - y == x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant n == (x + y);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= n;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant (x + y) == n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant (x + y) == n;\nloop invariant x >= 0;\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant y == n - x;\nloop invariant x + y == n;\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= n;\nloop invariant x >= 0;\nloop invariant x + y == n;\nloop invariant x >= (n - y);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x + y == n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n ==> x >= y;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> y <= n - x;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= y;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> y <= n - x;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= y;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> y <= n - x;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= y;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> y <= n - x;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= y;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> y <= n - x;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= y;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> y <= n - x;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= y;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> y <= n - x;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= y;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> y <= n - x;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= y;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> y <= n - x;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x + y == n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x + y >= 0;\nloop invariant x + y <= 2n;\nloop invariant x >= n - y;\nloop invariant y >= n - x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant n - x >= 0;\nloop invariant n - x + y == n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y <= n;\nloop invariant y <= n - x;\nloop invariant x >= n - y;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= (n - x);\nloop invariant (n == (x + y));\nloop invariant (y <= (n - x));\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x <= y);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant x >= n - y;\nloop invariant x <= n - y;\nloop invariant x == n - y - (x - n + y);\nloop invariant x == n - y - (x - n + y);\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\n*/\n```",
            "```\n/*@\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( x + y == n );\nloop invariant ( x <= n );\nloop invariant ( y <= n );\nloop invariant ( x >= y );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= n;\nloop invariant 0 <= x <= n;\nloop invariant n == (x + y);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= n;\nloop invariant n - y == x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  int y;\n  \n  assume((n >= 0));\n  (x = n);\n  (y = 0);\n  \n  /*@\nloop invariant i1: 0 <= y <= n;\nloop invariant i2: n - y == x;\n*/\nwhile ((x > 0)) {\n    {\n    (y  = (y + 1));\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (n == (x + y)) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant n == (x + y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  int y;\n  \n  assume((n >= 0));\n  (x = n);\n  (y = 0);\n  \n  /*@\nloop invariant i1: 0 <= x;\nloop invariant i2: 0 <= y;\nloop invariant i3: n == (x + y);\n*/\nwhile ((x > 0)) {\n    {\n    (y  = (y + 1));\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (n == (x + y)) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= n;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  int y;\n  \n  assume((n >= 0));\n  (x = n);\n  (y = 0);\n  \n  /*@\n\nloop invariant i2: x >= 0;\n*/\nwhile ((x > 0)) {\n    {\n    (y  = (y + 1));\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (n == (x + y)) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y + x <= n;\nloop invariant x + y == n;\nloop invariant y == n - x;\nloop invariant n - x >= 0;\nloop invariant n - x <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  int y;\n  \n  assume((n >= 0));\n  (x = n);\n  (y = 0);\n  \n  /*@\nloop invariant i1: y <= n;\nloop invariant i2: x >= 0;\nloop invariant i3: y + x <= n;\nloop invariant i4: x + y == n;\nloop invariant i5: y == n - x;\nloop invariant i6: n - x >= 0;\nloop invariant i7: n - x <= n;\nloop invariant i8: y <= n - x;\nloop invariant i9: y >= 0;\n*/\nwhile ((x > 0)) {\n    {\n    (y  = (y + 1));\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (n == (x + y)) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant (x + y) == n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant (x + y) == n;\nloop invariant x >= 0;\nloop invariant y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  int y;\n  \n  assume((n >= 0));\n  (x = n);\n  (y = 0);\n  \n  /*@\nloop invariant i1: 0 <= x <= n;\nloop invariant i2: 0 <= y <= n;\nloop invariant i3: (x + y) == n;\nloop invariant i4: x >= 0;\nloop invariant i5: y >= 0;\n*/\nwhile ((x > 0)) {\n    {\n    (y  = (y + 1));\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (n == (x + y)) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant y == n - x;\nloop invariant x + y == n;\nloop invariant y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  int y;\n  \n  assume((n >= 0));\n  (x = n);\n  (y = 0);\n  \n  /*@\nloop invariant i1: 0 <= x <= n;\nloop invariant i2: y == n - x;\nloop invariant i3: x + y == n;\nloop invariant i4: y >= 0;\n*/\nwhile ((x > 0)) {\n    {\n    (y  = (y + 1));\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (n == (x + y)) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  int y;\n  \n  assume((n >= 0));\n  (x = n);\n  (y = 0);\n  \n  /*@\n\n*/\nwhile ((x > 0)) {\n    {\n    (y  = (y + 1));\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (n == (x + y)) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= n;\nloop invariant x >= 0;\nloop invariant x + y == n;\nloop invariant x >= (n - y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  int y;\n  \n  assume((n >= 0));\n  (x = n);\n  (y = 0);\n  \n  /*@\nloop invariant i1: 0 <= y <= n;\nloop invariant i2: x >= 0;\nloop invariant i3: x + y == n;\nloop invariant i4: x >= (n - y);\n*/\nwhile ((x > 0)) {\n    {\n    (y  = (y + 1));\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (n == (x + y)) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x + y == n;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == n ==> x >= y;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> y <= n - x;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= y;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> y <= n - x;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= y;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> y <= n - x;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= y;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> y <= n - x;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= y;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> y <= n - x;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= y;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> y <= n - x;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= y;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> y <= n - x;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= y;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> y <= n - x;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= y;\nloop invariant x + y == n ==> x + y == n;\nloop invariant x + y == n ==> x >= 0;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> y <= n - x;\nloop invariant x + y == n ==> y >= 0;\nloop invariant x + y == n ==> x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  int y;\n  \n  assume((n >= 0));\n  (x = n);\n  (y = 0);\n  \n  /*@\nloop invariant i1: 0 <= x <= n;\nloop invariant i2: 0 <= y <= n;\nloop invariant i3: x + y == n;\nloop invariant i4: y <= n - x;\nloop invariant i5: x >= 0;\nloop invariant i6: y >= 0;\n\nloop invariant i8: x + y == n ==> x >= 0;\nloop invariant i9: x + y == n ==> y >= 0;\nloop invariant i10: x + y == n ==> x + y == n;\nloop invariant i11: x + y == n ==> y <= n - x;\n*/\nwhile ((x > 0)) {\n    {\n    (y  = (y + 1));\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (n == (x + y)) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x + y == n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x + y >= 0;\nloop invariant x + y <= 2n;\nloop invariant x >= n - y;\nloop invariant y >= n - x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  int y;\n  \n  assume((n >= 0));\n  (x = n);\n  (y = 0);\n  \n  /*@\n\nloop invariant i2: 0 <= y <= n;\nloop invariant i3: x + y == n;\nloop invariant i4: x >= 0;\nloop invariant i5: y >= 0;\nloop invariant i6: x <= n;\nloop invariant i7: y <= n;\nloop invariant i8: x + y >= 0;\n\nloop invariant i10: x >= n - y;\nloop invariant i11: y >= n - x;\n*/\nwhile ((x > 0)) {\n    {\n    (y  = (y + 1));\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (n == (x + y)) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant n - x >= 0;\nloop invariant n - x + y == n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y <= n;\nloop invariant y <= n - x;\nloop invariant x >= n - y;\nloop invariant y <= n - x;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  int y;\n  \n  assume((n >= 0));\n  (x = n);\n  (y = 0);\n  \n  /*@\nloop invariant i1: 0 <= x <= n;\nloop invariant i2: n - x >= 0;\n\nloop invariant i4: x >= 0;\nloop invariant i5: y >= 0;\nloop invariant i6: x + y <= n;\nloop invariant i7: y <= n - x;\nloop invariant i8: x >= n - y;\nloop invariant i9: x <= n;\n*/\nwhile ((x > 0)) {\n    {\n    (y  = (y + 1));\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (n == (x + y)) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= (n - x);\nloop invariant (n == (x + y));\nloop invariant (y <= (n - x));\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x <= y);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x + y <= n);\nloop invariant (x >= (n - y));\nloop invariant (y <= (n - x));\nloop invariant (x <= n);\nloop invariant (y <= n);\nloop invariant (x >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  int y;\n  \n  assume((n >= 0));\n  (x = n);\n  (y = 0);\n  \n  /*@\nloop invariant i1: 0 <= x <= n;\nloop invariant i2: 0 <= y <= (n - x);\nloop invariant i3: (n == (x + y));\nloop invariant i4: (y <= (n - x));\nloop invariant i5: (x >= 0);\nloop invariant i6: (y >= 0);\nloop invariant i7: (x + y <= n);\nloop invariant i8: (x >= (n - y));\nloop invariant i9: (x <= n);\nloop invariant i10: (y <= n);\n\n*/\nwhile ((x > 0)) {\n    {\n    (y  = (y + 1));\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (n == (x + y)) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x + y == n;\nloop invariant x == n - y;\nloop invariant x >= n - y;\nloop invariant x <= n - y;\nloop invariant x == n - y - (x - n + y);\nloop invariant x == n - y - (x - n + y);\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\nloop invariant x == n - y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  int y;\n  \n  assume((n >= 0));\n  (x = n);\n  (y = 0);\n  \n  /*@\nloop invariant i1: 0 <= x <= n;\nloop invariant i2: 0 <= y <= n;\nloop invariant i3: x + y == n;\nloop invariant i4: x == n - y;\nloop invariant i5: x >= n - y;\nloop invariant i6: x <= n - y;\nloop invariant i7: x == n - y - (x - n + y);\n*/\nwhile ((x > 0)) {\n    {\n    (y  = (y + 1));\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (n == (x + y)) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant ( x >= 0 );\nloop invariant ( y >= 0 );\nloop invariant ( x + y == n );\nloop invariant ( x <= n );\nloop invariant ( y <= n );\nloop invariant ( x >= y );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  int y;\n  \n  assume((n >= 0));\n  (x = n);\n  (y = 0);\n  \n  /*@\nloop invariant i1: ( x >= 0 );\nloop invariant i2: ( y >= 0 );\nloop invariant i3: ( x + y == n );\nloop invariant i4: ( x <= n );\nloop invariant i5: ( y <= n );\n\n*/\nwhile ((x > 0)) {\n    {\n    (y  = (y + 1));\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (n == (x + y)) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= n;\nloop invariant 0 <= x <= n;\nloop invariant n == (x + y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  int y;\n  \n  assume((n >= 0));\n  (x = n);\n  (y = 0);\n  \n  /*@\nloop invariant i1: 0 <= y <= n;\nloop invariant i2: 0 <= x <= n;\nloop invariant i3: n == (x + y);\n*/\nwhile ((x > 0)) {\n    {\n    (y  = (y + 1));\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (n == (x + y)) );\n}\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 43: unexpected token 'n'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  int y;\n  \n  assume((n >= 0));\n  (x = n);\n  (y = 0);\n  \n  /*@\nloop invariant i1: 0 <= y <= n;\nloop invariant i2: n - y == x;\nloop invariant i3: 0 <= x;\nloop invariant i4: 0 <= y;\nloop invariant i5: n == (x + y);\nloop invariant i6: x >= 0;\nloop invariant i7: y <= n;\nloop invariant i8: y + x <= n;\nloop invariant i9: x + y == n;\nloop invariant i10: y == n - x;\nloop invariant i11: n - x >= 0;\nloop invariant i12: n - x <= n;\nloop invariant i13: y <= n - x;\nloop invariant i14: y >= 0;\nloop invariant i15: 0 <= x <= n;\nloop invariant i16: (x + y) == n;\nloop invariant i17: x >= (n - y);\nloop invariant i18: x + y == n ==> x >= y;\nloop invariant i19: x + y == n ==> x >= 0;\nloop invariant i20: x + y == n ==> y >= 0;\nloop invariant i21: x + y == n ==> x + y == n;\nloop invariant i22: x + y == n ==> y <= n - x;\nloop invariant i23: 1 <= x <= n;\nloop invariant i24: x <= n;\nloop invariant i25: x + y >= 0;\nloop invariant i26: x + y <= 2n;\nloop invariant i27: x >= n - y;\nloop invariant i28: y >= n - x;\nloop invariant i29: n - x + y == n;\nloop invariant i30: x + y <= n;\nloop invariant i31: 0 <= y <= (n - x);\nloop invariant i32: (n == (x + y));\nloop invariant i33: (y <= (n - x));\nloop invariant i34: (x >= 0);\nloop invariant i35: (y >= 0);\nloop invariant i36: (x + y <= n);\nloop invariant i37: (x >= (n - y));\nloop invariant i38: (x <= n);\nloop invariant i39: (y <= n);\nloop invariant i40: (x <= y);\nloop invariant i41: x == n - y;\nloop invariant i42: x <= n - y;\nloop invariant i43: x == n - y - (x - n + y);\nloop invariant i44: ( x >= 0 );\nloop invariant i45: ( y >= 0 );\nloop invariant i46: ( x + y == n );\nloop invariant i47: ( x <= n );\nloop invariant i48: ( y <= n );\nloop invariant i49: ( x >= y );\n*/\nwhile ((x > 0)) {\n    {\n    (y  = (y + 1));\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (n == (x + y)) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 5,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  int y;\n  \n  assume((n >= 0));\n  (x = n);\n  (y = 0);\n  \n  /*@\nloop invariant i1: 0 <= y <= n;\nloop invariant i2: n - y == x;\nloop invariant i3: 0 <= x;\nloop invariant i4: 0 <= y;\nloop invariant i5: n == (x + y);\nloop invariant i6: x >= 0;\nloop invariant i7: y <= n;\nloop invariant i8: y + x <= n;\nloop invariant i9: x + y == n;\nloop invariant i10: y == n - x;\nloop invariant i11: n - x >= 0;\nloop invariant i12: n - x <= n;\nloop invariant i13: y <= n - x;\nloop invariant i14: y >= 0;\nloop invariant i15: 0 <= x <= n;\nloop invariant i16: (x + y) == n;\nloop invariant i17: x >= (n - y);\n\nloop invariant i19: x + y == n ==> x >= 0;\nloop invariant i20: x + y == n ==> y >= 0;\nloop invariant i21: x + y == n ==> x + y == n;\nloop invariant i22: x + y == n ==> y <= n - x;\n\nloop invariant i24: x <= n;\nloop invariant i25: x + y >= 0;\n\nloop invariant i27: x >= n - y;\nloop invariant i28: y >= n - x;\n\nloop invariant i30: x + y <= n;\nloop invariant i31: 0 <= y <= (n - x);\nloop invariant i32: (n == (x + y));\nloop invariant i33: (y <= (n - x));\nloop invariant i34: (x >= 0);\nloop invariant i35: (y >= 0);\nloop invariant i36: (x + y <= n);\nloop invariant i37: (x >= (n - y));\nloop invariant i38: (x <= n);\nloop invariant i39: (y <= n);\n\nloop invariant i41: x == n - y;\nloop invariant i42: x <= n - y;\nloop invariant i43: x == n - y - (x - n + y);\nloop invariant i44: ( x >= 0 );\nloop invariant i45: ( y >= 0 );\nloop invariant i46: ( x + y == n );\nloop invariant i47: ( x <= n );\nloop invariant i48: ( y <= n );\n\n*/\nwhile ((x > 0)) {\n    {\n    (y  = (y + 1));\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (n == (x + y)) );\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c"
        ],
        "skipped": [],
        "total": 85,
        "success_count": 75,
        "failure_count": 10,
        "success_rate": 0.8823529411764706
    }
}