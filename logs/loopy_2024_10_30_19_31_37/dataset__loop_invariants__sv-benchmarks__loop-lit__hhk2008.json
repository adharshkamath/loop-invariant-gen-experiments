{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int a = unknown_int();\n    int b = unknown_int();\n    int res, cnt;\n    if (!(a <= 1000000)) return 0;\n    if (!(0 <= b && b <= 1000000)) return 0;\n    res = a;\n    cnt = b;\n    while (cnt > 0) {\n\tcnt = cnt - 1;\n\tres = res + 1;\n    }\n    {;\n//@ assert(res == a + b);\n}\n\n    return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= cnt <= b;\nloop invariant a <= res <= a + b;\nloop invariant 0 <= b <= 1000000;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= cnt <= b;\nloop invariant a <= res <= a + b;\nloop invariant a + b <= a + cnt;\nloop invariant a <= a + cnt;\nloop invariant cnt <= b;\nloop invariant cnt <= b + 1;\nloop invariant cnt <= b + 2;\nloop invariant cnt <= b + 3;\nloop invariant cnt <= b + 4;\nloop invariant cnt <= b + 5;\nloop invariant cnt <= b + 6;\nloop invariant cnt <= b + 7;\nloop invariant cnt <= b + 8;\nloop invariant cnt <= b + 9;\nloop invariant cnt <= b + 10;\nloop invariant cnt <= b + 11;\nloop invariant cnt <= b + 12;\nloop invariant cnt <= b + 13;\nloop invariant cnt <= b + 14;\nloop invariant cnt <= b + 15;\nloop invariant cnt <= b + 16;\nloop invariant cnt <= b + 17;\nloop invariant cnt <= b + 18;\nloop invariant cnt <= b + 19;\nloop invariant cnt <= b + 20;\nloop invariant cnt <= b + 21;\nloop invariant cnt <= b + 22;\nloop invariant cnt <= b + 23;\nloop invariant cnt <= b + 24;\nloop invariant cnt <= b + 25;\nloop invariant cnt <= b + 26;\nloop invariant cnt <= b + 27;\nloop invariant cnt <= b + 28;\nloop invariant cnt <= b + 29;\nloop invariant cnt <= b + 30;\nloop invariant cnt <= b + 31;\nloop invariant cnt <= b + 32;\nloop invariant cnt <= b + 33;\nloop invariant cnt <= b + 34;\nloop invariant cnt <= b + 35;\nloop invariant cnt <= b + 36;\nloop invariant cnt <= b + 37;\nloop invariant cnt <= b + 38;\nloop invariant cnt <= b + 39;\nloop invariant cnt <= b + 40;\nloop invariant cnt <= b + 41;\nloop invariant cnt <= b + 42;\nloop invariant cnt <= b + 43;\nloop invariant cnt <= b + 44;\nloop invariant cnt <= b + 45;\nloop invariant cnt <= b + 46;\nloop invariant cnt <= b + 47;\nloop invariant cnt <= b + 48;\nloop invariant cnt <= b + 49;\nloop invariant cnt <= b + 50;\nloop invariant cnt <= b + 51;\nloop invariant cnt <= b + 52;\nloop invariant cnt <= b + 53;\nloop invariant cnt <= b + 54;\nloop invariant cnt <= b + 55;\nloop invariant cnt <= b + 56;\nloop invariant cnt <= b + 57;\nloop invariant cnt <= b + 58;\nloop invariant cnt <= b + 59;\nloop invariant cnt <= b + 60;\nloop invariant cnt <= b + 61;\nloop invariant cnt <= b + 62;\nloop invariant cnt <= b + 63;\nloop invariant cnt <= b + 64;\nloop invariant cnt <= b + 65;\nloop invariant cnt <= b + 66;\nloop invariant cnt <= b + 67;\nloop invariant cnt <= b + 68;\nloop invariant cnt <= b + 69;\nloop invariant cnt <= b + 70;\nloop invariant cnt <= b + 71;\nloop invariant cnt <= b + 72;\nloop invariant cnt <= b + 73;\nloop invariant cnt <= b + 74;\nloop invariant cnt <= b + 75;\nloop invariant cnt <= b + 76;\nloop invariant cnt <= b + 77;\nloop invariant cnt <= b + 78;\nloop invariant cnt <= b + 79;\nloop invariant cnt <= b + 80;\nloop invariant cnt <= b + 81;\nloop invariant cnt <= b + 82;\nloop invariant cnt <= b + 83;\nloop invariant cnt <= b + 84;\nloop invariant cnt <= b + 85;\nloop invariant cnt <= b + 86;\nloop invariant cnt <= b + 87;\nloop invariant cnt <= b + 88;\nloop invariant cnt <= b + 89;\nloop invariant cnt <= b + 90;\nloop invariant cnt <= b + 91;\nloop invariant cnt <= b + 92;\nloop invariant cnt <= b + 93;\nloop invariant cnt <= b + 94;\nloop invariant cnt <= b + 95;\nloop invariant cnt <= b + 96;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= cnt <= b;\nloop invariant a <= res <= a + b;\nloop invariant a <= res - cnt <= a + b;\nloop invariant a + (b - cnt) <= res <= a + b;\nloop invariant a <= res - (b - cnt) <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - (b - cnt) <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= b <= 1000000;\nloop invariant a <= 1000000;\nloop invariant cnt = b - i;\nloop invariant res = a + cnt;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= cnt <= b;\nloop invariant a <= res <= a + b;\nloop invariant cnt == b - b + cnt;\nloop invariant res == a + (b - b + cnt);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= cnt <= b;\nloop invariant 0 <= res - a <= b;\nloop invariant a <= res <= a + b;\nloop invariant res == a + (b - cnt);\nloop invariant res <= a + b;\nloop invariant cnt >= 0;\nloop invariant cnt <= b;\nloop invariant res >= a;\nloop invariant res == a + cnt - 1;\nloop invariant cnt == b;\nloop invariant res == a + b;\nloop invariant cnt == 0;\nloop invariant res == a;\nloop invariant res == a + b;\nloop invariant res == a + b ==> cnt == 0;\nloop invariant cnt == b ==> res == a + b;\nloop invariant cnt == 0 ==> res == a;\nloop invariant cnt <= b ==> res == a + cnt - 1;\nloop invariant cnt >= 0 ==> res == a + (b - cnt);\nloop invariant a <= res <= a + b ==> cnt == b - res + a;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> res == a + b;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= cnt <= b;\nloop invariant res == a + (b - cnt);\nloop invariant res <= a + b;\nloop invariant res >= a;\nloop invariant res >= a + cnt;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= cnt <= b;\nloop invariant a <= res <= a + b;\nloop invariant a + b <= res + cnt;\nloop invariant a + b <= res + cnt ==> res == a + b;\nloop invariant res + cnt <= a + b ==> cnt == 0;\nloop invariant cnt <= b ==> res >= a;\nloop invariant cnt > 0 ==> cnt <= b;\nloop invariant cnt > 0 ==> res < a + b;\nloop invariant cnt > 0 ==> res <= a + b;\nloop invariant cnt > 0 ==> res + cnt <= a + b;\nloop invariant cnt > 0 ==> res + cnt == a + b;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= a <= 1000000;\nloop invariant 0 <= b <= 1000000;\nloop invariant 0 <= res <= a + b;\nloop invariant 0 <= cnt <= b;\nloop invariant res == a + (b - cnt);\nloop invariant cnt == b - (res - a);\nloop invariant res >= a;\nloop invariant res <= a + b;\nloop invariant cnt <= b;\nloop invariant cnt >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= cnt <= b;\nloop invariant res == a + cnt;\n*/\n```",
            "```\n/*@\nloop invariant cnt >= 0;\nloop invariant res >= a;\nloop invariant res >= a + (1000000 - b);\nloop invariant res >= a + b;\nloop invariant res <= a + (1000000 - b);\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= cnt <= b;\nloop invariant a <= res <= a + b;\nloop invariant a <= res + cnt <= a + b;\nloop invariant a + cnt <= res + b <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res + cnt <= a + b;\nloop invariant a <= res <= a + b;\nloop invariant a <= res + cnt <= a + b;\nloop invariant a <= res + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= cnt;\nloop invariant a <= res;\nloop invariant res <= a + cnt;\nloop invariant a + cnt <= a + b;\nloop invariant res == a + cnt;\nloop invariant a + b <= a + b;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= cnt <= b;\nloop invariant res >= a;\nloop invariant res <= a + b;\nloop invariant res == a + cnt;\nloop invariant cnt == b - res + a;\nloop invariant cnt <= b;\nloop invariant cnt >= 0;\nloop invariant cnt == b;\nloop invariant res == a + b;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= cnt <= b;\nloop invariant a <= res <= a + b;\nloop invariant 0 <= b <= 1000000;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int a = unknown_int();\n    int b = unknown_int();\n    int res, cnt;\n    if (!(a <= 1000000)) return 0;\n    if (!(0 <= b && b <= 1000000)) return 0;\n    res = a;\n    cnt = b;\n    /*@\nloop invariant i1: 0 <= cnt <= b;\n\nloop invariant i3: 0 <= b <= 1000000;\n*/\nwhile (cnt > 0) {\n\tcnt = cnt - 1;\n\tres = res + 1;\n    }\n    {;\n//@ assert(res == a + b);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= cnt <= b;\nloop invariant a <= res <= a + b;\nloop invariant a + b <= a + cnt;\nloop invariant a <= a + cnt;\nloop invariant cnt <= b;\nloop invariant cnt <= b + 1;\nloop invariant cnt <= b + 2;\nloop invariant cnt <= b + 3;\nloop invariant cnt <= b + 4;\nloop invariant cnt <= b + 5;\nloop invariant cnt <= b + 6;\nloop invariant cnt <= b + 7;\nloop invariant cnt <= b + 8;\nloop invariant cnt <= b + 9;\nloop invariant cnt <= b + 10;\nloop invariant cnt <= b + 11;\nloop invariant cnt <= b + 12;\nloop invariant cnt <= b + 13;\nloop invariant cnt <= b + 14;\nloop invariant cnt <= b + 15;\nloop invariant cnt <= b + 16;\nloop invariant cnt <= b + 17;\nloop invariant cnt <= b + 18;\nloop invariant cnt <= b + 19;\nloop invariant cnt <= b + 20;\nloop invariant cnt <= b + 21;\nloop invariant cnt <= b + 22;\nloop invariant cnt <= b + 23;\nloop invariant cnt <= b + 24;\nloop invariant cnt <= b + 25;\nloop invariant cnt <= b + 26;\nloop invariant cnt <= b + 27;\nloop invariant cnt <= b + 28;\nloop invariant cnt <= b + 29;\nloop invariant cnt <= b + 30;\nloop invariant cnt <= b + 31;\nloop invariant cnt <= b + 32;\nloop invariant cnt <= b + 33;\nloop invariant cnt <= b + 34;\nloop invariant cnt <= b + 35;\nloop invariant cnt <= b + 36;\nloop invariant cnt <= b + 37;\nloop invariant cnt <= b + 38;\nloop invariant cnt <= b + 39;\nloop invariant cnt <= b + 40;\nloop invariant cnt <= b + 41;\nloop invariant cnt <= b + 42;\nloop invariant cnt <= b + 43;\nloop invariant cnt <= b + 44;\nloop invariant cnt <= b + 45;\nloop invariant cnt <= b + 46;\nloop invariant cnt <= b + 47;\nloop invariant cnt <= b + 48;\nloop invariant cnt <= b + 49;\nloop invariant cnt <= b + 50;\nloop invariant cnt <= b + 51;\nloop invariant cnt <= b + 52;\nloop invariant cnt <= b + 53;\nloop invariant cnt <= b + 54;\nloop invariant cnt <= b + 55;\nloop invariant cnt <= b + 56;\nloop invariant cnt <= b + 57;\nloop invariant cnt <= b + 58;\nloop invariant cnt <= b + 59;\nloop invariant cnt <= b + 60;\nloop invariant cnt <= b + 61;\nloop invariant cnt <= b + 62;\nloop invariant cnt <= b + 63;\nloop invariant cnt <= b + 64;\nloop invariant cnt <= b + 65;\nloop invariant cnt <= b + 66;\nloop invariant cnt <= b + 67;\nloop invariant cnt <= b + 68;\nloop invariant cnt <= b + 69;\nloop invariant cnt <= b + 70;\nloop invariant cnt <= b + 71;\nloop invariant cnt <= b + 72;\nloop invariant cnt <= b + 73;\nloop invariant cnt <= b + 74;\nloop invariant cnt <= b + 75;\nloop invariant cnt <= b + 76;\nloop invariant cnt <= b + 77;\nloop invariant cnt <= b + 78;\nloop invariant cnt <= b + 79;\nloop invariant cnt <= b + 80;\nloop invariant cnt <= b + 81;\nloop invariant cnt <= b + 82;\nloop invariant cnt <= b + 83;\nloop invariant cnt <= b + 84;\nloop invariant cnt <= b + 85;\nloop invariant cnt <= b + 86;\nloop invariant cnt <= b + 87;\nloop invariant cnt <= b + 88;\nloop invariant cnt <= b + 89;\nloop invariant cnt <= b + 90;\nloop invariant cnt <= b + 91;\nloop invariant cnt <= b + 92;\nloop invariant cnt <= b + 93;\nloop invariant cnt <= b + 94;\nloop invariant cnt <= b + 95;\nloop invariant cnt <= b + 96;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int a = unknown_int();\n    int b = unknown_int();\n    int res, cnt;\n    if (!(a <= 1000000)) return 0;\n    if (!(0 <= b && b <= 1000000)) return 0;\n    res = a;\n    cnt = b;\n    /*@\nloop invariant i1: 0 <= cnt <= b;\n\n\nloop invariant i4: a <= a + cnt;\nloop invariant i5: cnt <= b;\nloop invariant i6: cnt <= b + 1;\nloop invariant i7: cnt <= b + 2;\nloop invariant i8: cnt <= b + 3;\nloop invariant i9: cnt <= b + 4;\nloop invariant i10: cnt <= b + 5;\nloop invariant i11: cnt <= b + 6;\nloop invariant i12: cnt <= b + 7;\nloop invariant i13: cnt <= b + 8;\nloop invariant i14: cnt <= b + 9;\nloop invariant i15: cnt <= b + 10;\nloop invariant i16: cnt <= b + 11;\nloop invariant i17: cnt <= b + 12;\nloop invariant i18: cnt <= b + 13;\nloop invariant i19: cnt <= b + 14;\nloop invariant i20: cnt <= b + 15;\nloop invariant i21: cnt <= b + 16;\nloop invariant i22: cnt <= b + 17;\nloop invariant i23: cnt <= b + 18;\nloop invariant i24: cnt <= b + 19;\nloop invariant i25: cnt <= b + 20;\nloop invariant i26: cnt <= b + 21;\nloop invariant i27: cnt <= b + 22;\nloop invariant i28: cnt <= b + 23;\nloop invariant i29: cnt <= b + 24;\nloop invariant i30: cnt <= b + 25;\nloop invariant i31: cnt <= b + 26;\nloop invariant i32: cnt <= b + 27;\nloop invariant i33: cnt <= b + 28;\nloop invariant i34: cnt <= b + 29;\nloop invariant i35: cnt <= b + 30;\nloop invariant i36: cnt <= b + 31;\nloop invariant i37: cnt <= b + 32;\nloop invariant i38: cnt <= b + 33;\nloop invariant i39: cnt <= b + 34;\nloop invariant i40: cnt <= b + 35;\nloop invariant i41: cnt <= b + 36;\nloop invariant i42: cnt <= b + 37;\nloop invariant i43: cnt <= b + 38;\nloop invariant i44: cnt <= b + 39;\nloop invariant i45: cnt <= b + 40;\nloop invariant i46: cnt <= b + 41;\nloop invariant i47: cnt <= b + 42;\nloop invariant i48: cnt <= b + 43;\nloop invariant i49: cnt <= b + 44;\nloop invariant i50: cnt <= b + 45;\nloop invariant i51: cnt <= b + 46;\nloop invariant i52: cnt <= b + 47;\nloop invariant i53: cnt <= b + 48;\nloop invariant i54: cnt <= b + 49;\nloop invariant i55: cnt <= b + 50;\nloop invariant i56: cnt <= b + 51;\nloop invariant i57: cnt <= b + 52;\nloop invariant i58: cnt <= b + 53;\nloop invariant i59: cnt <= b + 54;\nloop invariant i60: cnt <= b + 55;\nloop invariant i61: cnt <= b + 56;\nloop invariant i62: cnt <= b + 57;\nloop invariant i63: cnt <= b + 58;\nloop invariant i64: cnt <= b + 59;\nloop invariant i65: cnt <= b + 60;\nloop invariant i66: cnt <= b + 61;\nloop invariant i67: cnt <= b + 62;\nloop invariant i68: cnt <= b + 63;\nloop invariant i69: cnt <= b + 64;\nloop invariant i70: cnt <= b + 65;\nloop invariant i71: cnt <= b + 66;\nloop invariant i72: cnt <= b + 67;\nloop invariant i73: cnt <= b + 68;\nloop invariant i74: cnt <= b + 69;\nloop invariant i75: cnt <= b + 70;\nloop invariant i76: cnt <= b + 71;\nloop invariant i77: cnt <= b + 72;\nloop invariant i78: cnt <= b + 73;\nloop invariant i79: cnt <= b + 74;\nloop invariant i80: cnt <= b + 75;\nloop invariant i81: cnt <= b + 76;\nloop invariant i82: cnt <= b + 77;\nloop invariant i83: cnt <= b + 78;\nloop invariant i84: cnt <= b + 79;\nloop invariant i85: cnt <= b + 80;\nloop invariant i86: cnt <= b + 81;\nloop invariant i87: cnt <= b + 82;\nloop invariant i88: cnt <= b + 83;\nloop invariant i89: cnt <= b + 84;\nloop invariant i90: cnt <= b + 85;\nloop invariant i91: cnt <= b + 86;\nloop invariant i92: cnt <= b + 87;\nloop invariant i93: cnt <= b + 88;\nloop invariant i94: cnt <= b + 89;\nloop invariant i95: cnt <= b + 90;\nloop invariant i96: cnt <= b + 91;\nloop invariant i97: cnt <= b + 92;\nloop invariant i98: cnt <= b + 93;\nloop invariant i99: cnt <= b + 94;\nloop invariant i100: cnt <= b + 95;\nloop invariant i101: cnt <= b + 96;\n*/\nwhile (cnt > 0) {\n\tcnt = cnt - 1;\n\tres = res + 1;\n    }\n    {;\n//@ assert(res == a + b);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= cnt <= b;\nloop invariant a <= res <= a + b;\nloop invariant a <= res - cnt <= a + b;\nloop invariant a + (b - cnt) <= res <= a + b;\nloop invariant a <= res - (b - cnt) <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - (b - cnt) <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\nloop invariant a + cnt <= res - cnt + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res - cnt <= a + b;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int a = unknown_int();\n    int b = unknown_int();\n    int res, cnt;\n    if (!(a <= 1000000)) return 0;\n    if (!(0 <= b && b <= 1000000)) return 0;\n    res = a;\n    cnt = b;\n    /*@\nloop invariant i1: 0 <= cnt <= b;\n\n\n\nloop invariant i5: a <= res - (b - cnt) <= a + b;\n\n\n\n\n*/\nwhile (cnt > 0) {\n\tcnt = cnt - 1;\n\tres = res + 1;\n    }\n    {;\n//@ assert(res == a + b);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int a = unknown_int();\n    int b = unknown_int();\n    int res, cnt;\n    if (!(a <= 1000000)) return 0;\n    if (!(0 <= b && b <= 1000000)) return 0;\n    res = a;\n    cnt = b;\n    /*@\n\n*/\nwhile (cnt > 0) {\n\tcnt = cnt - 1;\n\tres = res + 1;\n    }\n    {;\n//@ assert(res == a + b);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= b <= 1000000;\nloop invariant a <= 1000000;\nloop invariant cnt = b - i;\nloop invariant res = a + cnt;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int a = unknown_int();\n    int b = unknown_int();\n    int res, cnt;\n    if (!(a <= 1000000)) return 0;\n    if (!(0 <= b && b <= 1000000)) return 0;\n    res = a;\n    cnt = b;\n    /*@\nloop invariant i1: 0 <= b <= 1000000;\nloop invariant i2: a <= 1000000;\n\n\n*/\nwhile (cnt > 0) {\n\tcnt = cnt - 1;\n\tres = res + 1;\n    }\n    {;\n//@ assert(res == a + b);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= cnt <= b;\nloop invariant a <= res <= a + b;\nloop invariant cnt == b - b + cnt;\nloop invariant res == a + (b - b + cnt);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int a = unknown_int();\n    int b = unknown_int();\n    int res, cnt;\n    if (!(a <= 1000000)) return 0;\n    if (!(0 <= b && b <= 1000000)) return 0;\n    res = a;\n    cnt = b;\n    /*@\n\n\nloop invariant i3: cnt == b - b + cnt;\n\n*/\nwhile (cnt > 0) {\n\tcnt = cnt - 1;\n\tres = res + 1;\n    }\n    {;\n//@ assert(res == a + b);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= cnt <= b;\nloop invariant 0 <= res - a <= b;\nloop invariant a <= res <= a + b;\nloop invariant res == a + (b - cnt);\nloop invariant res <= a + b;\nloop invariant cnt >= 0;\nloop invariant cnt <= b;\nloop invariant res >= a;\nloop invariant res == a + cnt - 1;\nloop invariant cnt == b;\nloop invariant res == a + b;\nloop invariant cnt == 0;\nloop invariant res == a;\nloop invariant res == a + b;\nloop invariant res == a + b ==> cnt == 0;\nloop invariant cnt == b ==> res == a + b;\nloop invariant cnt == 0 ==> res == a;\nloop invariant cnt <= b ==> res == a + cnt - 1;\nloop invariant cnt >= 0 ==> res == a + (b - cnt);\nloop invariant a <= res <= a + b ==> cnt == b - res + a;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> res == a + b;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a;\nloop invariant a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int a = unknown_int();\n    int b = unknown_int();\n    int res, cnt;\n    if (!(a <= 1000000)) return 0;\n    if (!(0 <= b && b <= 1000000)) return 0;\n    res = a;\n    cnt = b;\n    /*@\nloop invariant i1: 0 <= cnt <= b;\nloop invariant i2: 0 <= res - a <= b;\nloop invariant i3: a <= res <= a + b;\nloop invariant i4: res == a + (b - cnt);\nloop invariant i5: res <= a + b;\nloop invariant i6: cnt >= 0;\nloop invariant i7: cnt <= b;\nloop invariant i8: res >= a;\n\n\n\n\n\nloop invariant i14: res == a + b ==> cnt == 0;\n\n\n\nloop invariant i18: cnt >= 0 ==> res == a + (b - cnt);\nloop invariant i19: a <= res <= a + b ==> cnt == b - res + a;\n\n\nloop invariant i22: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a;\nloop invariant i23: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b;\nloop invariant i24: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0;\nloop invariant i25: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a;\nloop invariant i26: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a;\nloop invariant i27: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0;\nloop invariant i28: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a;\nloop invariant i29: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a;\nloop invariant i30: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0;\nloop invariant i31: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a;\nloop invariant i32: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a;\n*/\nwhile (cnt > 0) {\n\tcnt = cnt - 1;\n\tres = res + 1;\n    }\n    {;\n//@ assert(res == a + b);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= cnt <= b;\nloop invariant res == a + (b - cnt);\nloop invariant res <= a + b;\nloop invariant res >= a;\nloop invariant res >= a + cnt;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int a = unknown_int();\n    int b = unknown_int();\n    int res, cnt;\n    if (!(a <= 1000000)) return 0;\n    if (!(0 <= b && b <= 1000000)) return 0;\n    res = a;\n    cnt = b;\n    /*@\nloop invariant i1: 0 <= cnt <= b;\nloop invariant i2: res == a + (b - cnt);\nloop invariant i3: res <= a + b;\nloop invariant i4: res >= a;\n\n*/\nwhile (cnt > 0) {\n\tcnt = cnt - 1;\n\tres = res + 1;\n    }\n    {;\n//@ assert(res == a + b);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= cnt <= b;\nloop invariant a <= res <= a + b;\nloop invariant a + b <= res + cnt;\nloop invariant a + b <= res + cnt ==> res == a + b;\nloop invariant res + cnt <= a + b ==> cnt == 0;\nloop invariant cnt <= b ==> res >= a;\nloop invariant cnt > 0 ==> cnt <= b;\nloop invariant cnt > 0 ==> res < a + b;\nloop invariant cnt > 0 ==> res <= a + b;\nloop invariant cnt > 0 ==> res + cnt <= a + b;\nloop invariant cnt > 0 ==> res + cnt == a + b;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\nloop invariant cnt > 0 ==> res == a + b - cnt;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int a = unknown_int();\n    int b = unknown_int();\n    int res, cnt;\n    if (!(a <= 1000000)) return 0;\n    if (!(0 <= b && b <= 1000000)) return 0;\n    res = a;\n    cnt = b;\n    /*@\nloop invariant i1: 0 <= cnt <= b;\nloop invariant i2: a <= res <= a + b;\nloop invariant i3: a + b <= res + cnt;\n\n\nloop invariant i6: cnt <= b ==> res >= a;\nloop invariant i7: cnt > 0 ==> cnt <= b;\nloop invariant i8: cnt > 0 ==> res < a + b;\nloop invariant i9: cnt > 0 ==> res <= a + b;\nloop invariant i10: cnt > 0 ==> res + cnt <= a + b;\nloop invariant i11: cnt > 0 ==> res + cnt == a + b;\nloop invariant i12: cnt > 0 ==> res == a + b - cnt;\n*/\nwhile (cnt > 0) {\n\tcnt = cnt - 1;\n\tres = res + 1;\n    }\n    {;\n//@ assert(res == a + b);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= a <= 1000000;\nloop invariant 0 <= b <= 1000000;\nloop invariant 0 <= res <= a + b;\nloop invariant 0 <= cnt <= b;\nloop invariant res == a + (b - cnt);\nloop invariant cnt == b - (res - a);\nloop invariant res >= a;\nloop invariant res <= a + b;\nloop invariant cnt <= b;\nloop invariant cnt >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int a = unknown_int();\n    int b = unknown_int();\n    int res, cnt;\n    if (!(a <= 1000000)) return 0;\n    if (!(0 <= b && b <= 1000000)) return 0;\n    res = a;\n    cnt = b;\n    /*@\n\nloop invariant i2: 0 <= b <= 1000000;\n\nloop invariant i4: 0 <= cnt <= b;\nloop invariant i5: res == a + (b - cnt);\nloop invariant i6: cnt == b - (res - a);\nloop invariant i7: res >= a;\nloop invariant i8: res <= a + b;\nloop invariant i9: cnt <= b;\nloop invariant i10: cnt >= 0;\n*/\nwhile (cnt > 0) {\n\tcnt = cnt - 1;\n\tres = res + 1;\n    }\n    {;\n//@ assert(res == a + b);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= cnt <= b;\nloop invariant res == a + cnt;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int a = unknown_int();\n    int b = unknown_int();\n    int res, cnt;\n    if (!(a <= 1000000)) return 0;\n    if (!(0 <= b && b <= 1000000)) return 0;\n    res = a;\n    cnt = b;\n    /*@\nloop invariant i1: 0 <= cnt <= b;\n\n*/\nwhile (cnt > 0) {\n\tcnt = cnt - 1;\n\tres = res + 1;\n    }\n    {;\n//@ assert(res == a + b);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant cnt >= 0;\nloop invariant res >= a;\nloop invariant res >= a + (1000000 - b);\nloop invariant res >= a + b;\nloop invariant res <= a + (1000000 - b);\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\nloop invariant res <= a + b;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int a = unknown_int();\n    int b = unknown_int();\n    int res, cnt;\n    if (!(a <= 1000000)) return 0;\n    if (!(0 <= b && b <= 1000000)) return 0;\n    res = a;\n    cnt = b;\n    /*@\nloop invariant i1: cnt >= 0;\nloop invariant i2: res >= a;\n\n\n\n\n*/\nwhile (cnt > 0) {\n\tcnt = cnt - 1;\n\tres = res + 1;\n    }\n    {;\n//@ assert(res == a + b);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= cnt <= b;\nloop invariant a <= res <= a + b;\nloop invariant a <= res + cnt <= a + b;\nloop invariant a + cnt <= res + b <= a + b;\nloop invariant a + cnt <= res <= a + b;\nloop invariant a + cnt <= res + cnt <= a + b;\nloop invariant a <= res <= a + b;\nloop invariant a <= res + cnt <= a + b;\nloop invariant a <= res + cnt <= a + b;\nloop invariant a + cnt <= res <= a + b;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int a = unknown_int();\n    int b = unknown_int();\n    int res, cnt;\n    if (!(a <= 1000000)) return 0;\n    if (!(0 <= b && b <= 1000000)) return 0;\n    res = a;\n    cnt = b;\n    /*@\nloop invariant i1: 0 <= cnt <= b;\nloop invariant i2: a <= res <= a + b;\nloop invariant i3: a <= res + cnt <= a + b;\n\n\nloop invariant i6: a + cnt <= res + cnt <= a + b;\n*/\nwhile (cnt > 0) {\n\tcnt = cnt - 1;\n\tres = res + 1;\n    }\n    {;\n//@ assert(res == a + b);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= cnt;\nloop invariant a <= res;\nloop invariant res <= a + cnt;\nloop invariant a + cnt <= a + b;\nloop invariant res == a + cnt;\nloop invariant a + b <= a + b;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int a = unknown_int();\n    int b = unknown_int();\n    int res, cnt;\n    if (!(a <= 1000000)) return 0;\n    if (!(0 <= b && b <= 1000000)) return 0;\n    res = a;\n    cnt = b;\n    /*@\nloop invariant i1: 0 <= cnt;\nloop invariant i2: a <= res;\n\nloop invariant i4: a + cnt <= a + b;\n\nloop invariant i6: a + b <= a + b;\n*/\nwhile (cnt > 0) {\n\tcnt = cnt - 1;\n\tres = res + 1;\n    }\n    {;\n//@ assert(res == a + b);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= cnt <= b;\nloop invariant res >= a;\nloop invariant res <= a + b;\nloop invariant res == a + cnt;\nloop invariant cnt == b - res + a;\nloop invariant cnt <= b;\nloop invariant cnt >= 0;\nloop invariant cnt == b;\nloop invariant res == a + b;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int a = unknown_int();\n    int b = unknown_int();\n    int res, cnt;\n    if (!(a <= 1000000)) return 0;\n    if (!(0 <= b && b <= 1000000)) return 0;\n    res = a;\n    cnt = b;\n    /*@\n\nloop invariant i2: res >= a;\nloop invariant i3: res <= a + b;\n\nloop invariant i5: cnt == b - res + a;\nloop invariant i6: cnt <= b;\nloop invariant i7: cnt >= 0;\n\n\n*/\nwhile (cnt > 0) {\n\tcnt = cnt - 1;\n\tres = res + 1;\n    }\n    {;\n//@ assert(res == a + b);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 128: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int a = unknown_int();\n    int b = unknown_int();\n    int res, cnt;\n    if (!(a <= 1000000)) return 0;\n    if (!(0 <= b && b <= 1000000)) return 0;\n    res = a;\n    cnt = b;\n    /*@\nloop invariant i1: 0 <= cnt <= b;\nloop invariant i2: a <= res <= a + b;\nloop invariant i3: 0 <= b <= 1000000;\nloop invariant i4: a + b <= a + cnt;\nloop invariant i5: a <= a + cnt;\nloop invariant i6: cnt <= b;\nloop invariant i7: cnt <= b + 1;\nloop invariant i8: cnt <= b + 2;\nloop invariant i9: cnt <= b + 3;\nloop invariant i10: cnt <= b + 4;\nloop invariant i11: cnt <= b + 5;\nloop invariant i12: cnt <= b + 6;\nloop invariant i13: cnt <= b + 7;\nloop invariant i14: cnt <= b + 8;\nloop invariant i15: cnt <= b + 9;\nloop invariant i16: cnt <= b + 10;\nloop invariant i17: cnt <= b + 11;\nloop invariant i18: cnt <= b + 12;\nloop invariant i19: cnt <= b + 13;\nloop invariant i20: cnt <= b + 14;\nloop invariant i21: cnt <= b + 15;\nloop invariant i22: cnt <= b + 16;\nloop invariant i23: cnt <= b + 17;\nloop invariant i24: cnt <= b + 18;\nloop invariant i25: cnt <= b + 19;\nloop invariant i26: cnt <= b + 20;\nloop invariant i27: cnt <= b + 21;\nloop invariant i28: cnt <= b + 22;\nloop invariant i29: cnt <= b + 23;\nloop invariant i30: cnt <= b + 24;\nloop invariant i31: cnt <= b + 25;\nloop invariant i32: cnt <= b + 26;\nloop invariant i33: cnt <= b + 27;\nloop invariant i34: cnt <= b + 28;\nloop invariant i35: cnt <= b + 29;\nloop invariant i36: cnt <= b + 30;\nloop invariant i37: cnt <= b + 31;\nloop invariant i38: cnt <= b + 32;\nloop invariant i39: cnt <= b + 33;\nloop invariant i40: cnt <= b + 34;\nloop invariant i41: cnt <= b + 35;\nloop invariant i42: cnt <= b + 36;\nloop invariant i43: cnt <= b + 37;\nloop invariant i44: cnt <= b + 38;\nloop invariant i45: cnt <= b + 39;\nloop invariant i46: cnt <= b + 40;\nloop invariant i47: cnt <= b + 41;\nloop invariant i48: cnt <= b + 42;\nloop invariant i49: cnt <= b + 43;\nloop invariant i50: cnt <= b + 44;\nloop invariant i51: cnt <= b + 45;\nloop invariant i52: cnt <= b + 46;\nloop invariant i53: cnt <= b + 47;\nloop invariant i54: cnt <= b + 48;\nloop invariant i55: cnt <= b + 49;\nloop invariant i56: cnt <= b + 50;\nloop invariant i57: cnt <= b + 51;\nloop invariant i58: cnt <= b + 52;\nloop invariant i59: cnt <= b + 53;\nloop invariant i60: cnt <= b + 54;\nloop invariant i61: cnt <= b + 55;\nloop invariant i62: cnt <= b + 56;\nloop invariant i63: cnt <= b + 57;\nloop invariant i64: cnt <= b + 58;\nloop invariant i65: cnt <= b + 59;\nloop invariant i66: cnt <= b + 60;\nloop invariant i67: cnt <= b + 61;\nloop invariant i68: cnt <= b + 62;\nloop invariant i69: cnt <= b + 63;\nloop invariant i70: cnt <= b + 64;\nloop invariant i71: cnt <= b + 65;\nloop invariant i72: cnt <= b + 66;\nloop invariant i73: cnt <= b + 67;\nloop invariant i74: cnt <= b + 68;\nloop invariant i75: cnt <= b + 69;\nloop invariant i76: cnt <= b + 70;\nloop invariant i77: cnt <= b + 71;\nloop invariant i78: cnt <= b + 72;\nloop invariant i79: cnt <= b + 73;\nloop invariant i80: cnt <= b + 74;\nloop invariant i81: cnt <= b + 75;\nloop invariant i82: cnt <= b + 76;\nloop invariant i83: cnt <= b + 77;\nloop invariant i84: cnt <= b + 78;\nloop invariant i85: cnt <= b + 79;\nloop invariant i86: cnt <= b + 80;\nloop invariant i87: cnt <= b + 81;\nloop invariant i88: cnt <= b + 82;\nloop invariant i89: cnt <= b + 83;\nloop invariant i90: cnt <= b + 84;\nloop invariant i91: cnt <= b + 85;\nloop invariant i92: cnt <= b + 86;\nloop invariant i93: cnt <= b + 87;\nloop invariant i94: cnt <= b + 88;\nloop invariant i95: cnt <= b + 89;\nloop invariant i96: cnt <= b + 90;\nloop invariant i97: cnt <= b + 91;\nloop invariant i98: cnt <= b + 92;\nloop invariant i99: cnt <= b + 93;\nloop invariant i100: cnt <= b + 94;\nloop invariant i101: cnt <= b + 95;\nloop invariant i102: cnt <= b + 96;\nloop invariant i103: a <= res - cnt <= a + b;\nloop invariant i104: a + (b - cnt) <= res <= a + b;\nloop invariant i105: a <= res - (b - cnt) <= a + b;\nloop invariant i106: a + cnt <= res <= a + b;\nloop invariant i107: a + cnt <= res - (b - cnt) <= a + b;\nloop invariant i108: a + cnt <= res - cnt <= a + b;\nloop invariant i109: a + cnt <= res - cnt + cnt <= a + b;\nloop invariant i110: a <= 1000000;\nloop invariant i111: cnt = b - i;\nloop invariant i112: res = a + cnt;\nloop invariant i113: 1 <= cnt <= b;\nloop invariant i114: cnt == b - b + cnt;\nloop invariant i115: res == a + (b - b + cnt);\nloop invariant i116: 0 <= res - a <= b;\nloop invariant i117: res == a + (b - cnt);\nloop invariant i118: res <= a + b;\nloop invariant i119: cnt >= 0;\nloop invariant i120: res >= a;\nloop invariant i121: res == a + cnt - 1;\nloop invariant i122: cnt == b;\nloop invariant i123: res == a + b;\nloop invariant i124: cnt == 0;\nloop invariant i125: res == a;\nloop invariant i126: res == a + b ==> cnt == 0;\nloop invariant i127: cnt == b ==> res == a + b;\nloop invariant i128: cnt == 0 ==> res == a;\nloop invariant i129: cnt <= b ==> res == a + cnt - 1;\nloop invariant i130: cnt >= 0 ==> res == a + (b - cnt);\nloop invariant i131: a <= res <= a + b ==> cnt == b - res + a;\nloop invariant i132: a <= res <= a + b ==> cnt == b - res + a ==> res == a + b;\nloop invariant i133: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a;\nloop invariant i134: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a;\nloop invariant i135: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b;\nloop invariant i136: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0;\nloop invariant i137: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a;\nloop invariant i138: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a;\nloop invariant i139: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0;\nloop invariant i140: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a;\nloop invariant i141: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a;\nloop invariant i142: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0;\nloop invariant i143: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a;\nloop invariant i144: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a;\nloop invariant i145: res >= a + cnt;\nloop invariant i146: a + b <= res + cnt;\nloop invariant i147: a + b <= res + cnt ==> res == a + b;\nloop invariant i148: res + cnt <= a + b ==> cnt == 0;\nloop invariant i149: cnt <= b ==> res >= a;\nloop invariant i150: cnt > 0 ==> cnt <= b;\nloop invariant i151: cnt > 0 ==> res < a + b;\nloop invariant i152: cnt > 0 ==> res <= a + b;\nloop invariant i153: cnt > 0 ==> res + cnt <= a + b;\nloop invariant i154: cnt > 0 ==> res + cnt == a + b;\nloop invariant i155: cnt > 0 ==> res == a + b - cnt;\nloop invariant i156: 0 <= a <= 1000000;\nloop invariant i157: 0 <= res <= a + b;\nloop invariant i158: cnt == b - (res - a);\nloop invariant i159: res == a + cnt;\nloop invariant i160: res >= a + (1000000 - b);\nloop invariant i161: res >= a + b;\nloop invariant i162: res <= a + (1000000 - b);\nloop invariant i163: a <= res + cnt <= a + b;\nloop invariant i164: a + cnt <= res + b <= a + b;\nloop invariant i165: a + cnt <= res + cnt <= a + b;\nloop invariant i166: 0 <= cnt;\nloop invariant i167: a <= res;\nloop invariant i168: res <= a + cnt;\nloop invariant i169: a + cnt <= a + b;\nloop invariant i170: a + b <= a + b;\nloop invariant i171: cnt == b - res + a;\n*/\nwhile (cnt > 0) {\n\tcnt = cnt - 1;\n\tres = res + 1;\n    }\n    {;\n//@ assert(res == a + b);\n}\n\n    return 0;\n}",
        "combined_annotation_num_solver_calls": 23,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int a = unknown_int();\n    int b = unknown_int();\n    int res, cnt;\n    if (!(a <= 1000000)) return 0;\n    if (!(0 <= b && b <= 1000000)) return 0;\n    res = a;\n    cnt = b;\n    /*@\nloop invariant i1: 0 <= cnt <= b;\nloop invariant i2: a <= res <= a + b;\nloop invariant i3: 0 <= b <= 1000000;\n\nloop invariant i5: a <= a + cnt;\nloop invariant i6: cnt <= b;\nloop invariant i7: cnt <= b + 1;\nloop invariant i8: cnt <= b + 2;\nloop invariant i9: cnt <= b + 3;\nloop invariant i10: cnt <= b + 4;\nloop invariant i11: cnt <= b + 5;\nloop invariant i12: cnt <= b + 6;\nloop invariant i13: cnt <= b + 7;\nloop invariant i14: cnt <= b + 8;\nloop invariant i15: cnt <= b + 9;\nloop invariant i16: cnt <= b + 10;\nloop invariant i17: cnt <= b + 11;\nloop invariant i18: cnt <= b + 12;\nloop invariant i19: cnt <= b + 13;\nloop invariant i20: cnt <= b + 14;\nloop invariant i21: cnt <= b + 15;\nloop invariant i22: cnt <= b + 16;\nloop invariant i23: cnt <= b + 17;\nloop invariant i24: cnt <= b + 18;\nloop invariant i25: cnt <= b + 19;\nloop invariant i26: cnt <= b + 20;\nloop invariant i27: cnt <= b + 21;\nloop invariant i28: cnt <= b + 22;\nloop invariant i29: cnt <= b + 23;\nloop invariant i30: cnt <= b + 24;\nloop invariant i31: cnt <= b + 25;\nloop invariant i32: cnt <= b + 26;\nloop invariant i33: cnt <= b + 27;\nloop invariant i34: cnt <= b + 28;\nloop invariant i35: cnt <= b + 29;\nloop invariant i36: cnt <= b + 30;\nloop invariant i37: cnt <= b + 31;\nloop invariant i38: cnt <= b + 32;\nloop invariant i39: cnt <= b + 33;\nloop invariant i40: cnt <= b + 34;\nloop invariant i41: cnt <= b + 35;\nloop invariant i42: cnt <= b + 36;\nloop invariant i43: cnt <= b + 37;\nloop invariant i44: cnt <= b + 38;\nloop invariant i45: cnt <= b + 39;\nloop invariant i46: cnt <= b + 40;\nloop invariant i47: cnt <= b + 41;\nloop invariant i48: cnt <= b + 42;\nloop invariant i49: cnt <= b + 43;\nloop invariant i50: cnt <= b + 44;\nloop invariant i51: cnt <= b + 45;\nloop invariant i52: cnt <= b + 46;\nloop invariant i53: cnt <= b + 47;\nloop invariant i54: cnt <= b + 48;\nloop invariant i55: cnt <= b + 49;\nloop invariant i56: cnt <= b + 50;\nloop invariant i57: cnt <= b + 51;\nloop invariant i58: cnt <= b + 52;\nloop invariant i59: cnt <= b + 53;\nloop invariant i60: cnt <= b + 54;\nloop invariant i61: cnt <= b + 55;\nloop invariant i62: cnt <= b + 56;\nloop invariant i63: cnt <= b + 57;\nloop invariant i64: cnt <= b + 58;\nloop invariant i65: cnt <= b + 59;\nloop invariant i66: cnt <= b + 60;\nloop invariant i67: cnt <= b + 61;\nloop invariant i68: cnt <= b + 62;\nloop invariant i69: cnt <= b + 63;\nloop invariant i70: cnt <= b + 64;\nloop invariant i71: cnt <= b + 65;\nloop invariant i72: cnt <= b + 66;\nloop invariant i73: cnt <= b + 67;\nloop invariant i74: cnt <= b + 68;\nloop invariant i75: cnt <= b + 69;\nloop invariant i76: cnt <= b + 70;\nloop invariant i77: cnt <= b + 71;\nloop invariant i78: cnt <= b + 72;\nloop invariant i79: cnt <= b + 73;\nloop invariant i80: cnt <= b + 74;\nloop invariant i81: cnt <= b + 75;\nloop invariant i82: cnt <= b + 76;\nloop invariant i83: cnt <= b + 77;\nloop invariant i84: cnt <= b + 78;\nloop invariant i85: cnt <= b + 79;\nloop invariant i86: cnt <= b + 80;\nloop invariant i87: cnt <= b + 81;\nloop invariant i88: cnt <= b + 82;\nloop invariant i89: cnt <= b + 83;\nloop invariant i90: cnt <= b + 84;\nloop invariant i91: cnt <= b + 85;\nloop invariant i92: cnt <= b + 86;\nloop invariant i93: cnt <= b + 87;\nloop invariant i94: cnt <= b + 88;\nloop invariant i95: cnt <= b + 89;\nloop invariant i96: cnt <= b + 90;\nloop invariant i97: cnt <= b + 91;\nloop invariant i98: cnt <= b + 92;\nloop invariant i99: cnt <= b + 93;\nloop invariant i100: cnt <= b + 94;\nloop invariant i101: cnt <= b + 95;\nloop invariant i102: cnt <= b + 96;\n\nloop invariant i104: a + (b - cnt) <= res <= a + b;\nloop invariant i105: a <= res - (b - cnt) <= a + b;\n\n\n\n\nloop invariant i110: a <= 1000000;\n\n\n\nloop invariant i114: cnt == b - b + cnt;\n\nloop invariant i116: 0 <= res - a <= b;\nloop invariant i117: res == a + (b - cnt);\nloop invariant i118: res <= a + b;\nloop invariant i119: cnt >= 0;\nloop invariant i120: res >= a;\n\n\n\n\n\nloop invariant i126: res == a + b ==> cnt == 0;\n\n\n\nloop invariant i130: cnt >= 0 ==> res == a + (b - cnt);\nloop invariant i131: a <= res <= a + b ==> cnt == b - res + a;\n\n\nloop invariant i134: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a;\nloop invariant i135: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b;\nloop invariant i136: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0;\nloop invariant i137: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a;\nloop invariant i138: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a;\nloop invariant i139: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0;\nloop invariant i140: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a;\nloop invariant i141: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a;\nloop invariant i142: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0;\nloop invariant i143: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a;\nloop invariant i144: a <= res <= a + b ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> res == a + b ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a ==> cnt == 0 ==> res == a ==> cnt == b - res + a;\n\nloop invariant i146: a + b <= res + cnt;\n\n\nloop invariant i149: cnt <= b ==> res >= a;\nloop invariant i150: cnt > 0 ==> cnt <= b;\nloop invariant i151: cnt > 0 ==> res < a + b;\nloop invariant i152: cnt > 0 ==> res <= a + b;\nloop invariant i153: cnt > 0 ==> res + cnt <= a + b;\nloop invariant i154: cnt > 0 ==> res + cnt == a + b;\nloop invariant i155: cnt > 0 ==> res == a + b - cnt;\n\n\nloop invariant i158: cnt == b - (res - a);\n\n\n\n\nloop invariant i163: a <= res + cnt <= a + b;\n\nloop invariant i165: a + cnt <= res + cnt <= a + b;\nloop invariant i166: 0 <= cnt;\nloop invariant i167: a <= res;\n\nloop invariant i169: a + cnt <= a + b;\nloop invariant i170: a + b <= a + b;\nloop invariant i171: cnt == b - res + a;\n*/\nwhile (cnt > 0) {\n\tcnt = cnt - 1;\n\tres = res + 1;\n    }\n    {;\n//@ assert(res == a + b);\n}\n\n    return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c"
        ],
        "skipped": [],
        "total": 113,
        "success_count": 99,
        "failure_count": 14,
        "success_rate": 0.8761061946902655
    }
}