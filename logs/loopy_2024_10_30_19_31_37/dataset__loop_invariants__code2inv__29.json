{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/29.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  while ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= n - x;\nloop invariant n >= x;\nloop invariant n >= x + 1;\nloop invariant n < x + 1;\nloop invariant n <= x + 1;\nloop invariant n >= x + 2;\nloop invariant n < x + 2;\nloop invariant n <= x + 2;\nloop invariant n >= x + 3;\nloop invariant n < x + 3;\nloop invariant n <= x + 3;\nloop invariant n >= x + 4;\nloop invariant n < x + 4;\nloop invariant n <= x + 4;\nloop invariant n >= x + 5;\nloop invariant n < x + 5;\nloop invariant n <= x + 5;\nloop invariant n >= x + 6;\nloop invariant n < x + 6;\nloop invariant n <= x + 6;\nloop invariant n >= x + 7;\nloop invariant n < x + 7;\nloop invariant n <= x + 7;\nloop invariant n >= x + 8;\nloop invariant n < x + 8;\nloop invariant n <= x + 8;\nloop invariant n >= x + 9;\nloop invariant n < x + 9;\nloop invariant n <= x + 9;\nloop invariant n >= x + 10;\nloop invariant n < x + 10;\nloop invariant n <= x + 10;\nloop invariant n >= x + 11;\nloop invariant n < x + 11;\nloop invariant n <= x + 11;\nloop invariant n >= x + 12;\nloop invariant n < x + 12;\nloop invariant n <= x + 12;\nloop invariant n >= x + 13;\nloop invariant n < x + 13;\nloop invariant n <= x + 13;\nloop invariant n >= x + 14;\nloop invariant n < x + 14;\nloop invariant n <= x + 14;\nloop invariant n >= x + 15;\nloop invariant n < x + 15;\nloop invariant n <= x + 15;\nloop invariant n >= x + 16;\nloop invariant n < x + 16;\nloop invariant n <= x + 16;\nloop invariant n >= x + 17;\nloop invariant n < x + 17;\nloop invariant n <= x + 17;\nloop invariant n >= x + 18;\nloop invariant n < x + 18;\nloop invariant n <= x + 18;\nloop invariant n >= x + 19;\nloop invariant n < x + 19;\nloop invariant n <= x + 19;\nloop invariant n >= x + 20;\nloop invariant n < x + 20;\nloop invariant n <= x + 20;\nloop invariant n >= x + 21;\nloop invariant n < x + 21;\nloop invariant n <= x + 21;\nloop invariant n >= x + 22;\nloop invariant n < x + 22;\nloop invariant n <= x + 22;\nloop invariant n >= x + 23;\nloop invariant n < x + 23;\nloop invariant n <= x + 23;\nloop invariant n >= x + 24;\nloop invariant n < x + 24;\nloop invariant n <= x + 24;\nloop invariant n >= x + 25;\nloop invariant n < x + 25;\nloop invariant n <= x + 25;\nloop invariant n >= x + 26;\nloop invariant n < x + 26;\nloop invariant n <= x + 26;\nloop invariant n >= x + 27;\nloop invariant n < x + 27;\nloop invariant n <= x + 27;\nloop invariant n >= x + 28;\nloop invariant n < x + 28;\nloop invariant n <= x + 28;\nloop invariant n >= x + 29;\nloop invariant n < x + 29;\nloop invariant n <= x + 29;\nloop invariant n >= x + 30;\nloop invariant n < x + 30;\nloop invariant n <= x + 30;\nloop invariant n >= x + 31;\nloop invariant n < x + 31;\nloop invariant n <= x + 31;\nloop invariant n >= x + 32;\nloop invariant n < x + 32;\nloop invariant n <= x + 32;\nloop invariant n >= x + 33;\nloop invariant n < x + 33;\nloop invariant n <= x + 33;\n*/\n```",
            "```\n/*@\nloop invariant n >= 0 ==> x >= 0;\nloop invariant n >= 0 ==> x <= n;\n*/\n```",
            "```\n/*@\nloop invariant x == n - (i + 1);\nloop invariant (n >= 0) ==> (i <= n);\nloop invariant (n >= 0) ==> (i >= 0);\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant x == n - (x - n);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant x == n - (y - 1);\nloop invariant x >= 1;\nloop invariant x <= n;\nloop invariant y == n - x + 1;\nloop invariant x >= y;\nloop invariant x <= y;\nloop invariant x == 0 ==> y == n;\nloop invariant x >= 0 ==> y <= n;\nloop invariant 1 <= x <= n;\nloop invariant x == n - (y - 1);\nloop invariant x >= 1;\nloop invariant x <= n;\nloop invariant y == n - x + 1;\nloop invariant x >= y;\nloop invariant x <= y;\nloop invariant x == 0 ==> y == n;\nloop invariant x >= 0 ==> y <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 < n;\nloop invariant 0 <= x <= n;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x > 0 ==> x == n - (n - x);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant n >= 0;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x == n - (x - 1);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n;\nloop invariant n <= x;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant n >= 0 ==> x >= 0;\nloop invariant n >= 0 ==> x <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant n >= 0;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n; loop invariant x + 1 == n; loop invariant x == 0;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 100,
                "annotations": "```\n/*@\nloop invariant 0 <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= n - x;\nloop invariant n >= x;\nloop invariant n >= x + 1;\nloop invariant n < x + 1;\nloop invariant n <= x + 1;\nloop invariant n >= x + 2;\nloop invariant n < x + 2;\nloop invariant n <= x + 2;\nloop invariant n >= x + 3;\nloop invariant n < x + 3;\nloop invariant n <= x + 3;\nloop invariant n >= x + 4;\nloop invariant n < x + 4;\nloop invariant n <= x + 4;\nloop invariant n >= x + 5;\nloop invariant n < x + 5;\nloop invariant n <= x + 5;\nloop invariant n >= x + 6;\nloop invariant n < x + 6;\nloop invariant n <= x + 6;\nloop invariant n >= x + 7;\nloop invariant n < x + 7;\nloop invariant n <= x + 7;\nloop invariant n >= x + 8;\nloop invariant n < x + 8;\nloop invariant n <= x + 8;\nloop invariant n >= x + 9;\nloop invariant n < x + 9;\nloop invariant n <= x + 9;\nloop invariant n >= x + 10;\nloop invariant n < x + 10;\nloop invariant n <= x + 10;\nloop invariant n >= x + 11;\nloop invariant n < x + 11;\nloop invariant n <= x + 11;\nloop invariant n >= x + 12;\nloop invariant n < x + 12;\nloop invariant n <= x + 12;\nloop invariant n >= x + 13;\nloop invariant n < x + 13;\nloop invariant n <= x + 13;\nloop invariant n >= x + 14;\nloop invariant n < x + 14;\nloop invariant n <= x + 14;\nloop invariant n >= x + 15;\nloop invariant n < x + 15;\nloop invariant n <= x + 15;\nloop invariant n >= x + 16;\nloop invariant n < x + 16;\nloop invariant n <= x + 16;\nloop invariant n >= x + 17;\nloop invariant n < x + 17;\nloop invariant n <= x + 17;\nloop invariant n >= x + 18;\nloop invariant n < x + 18;\nloop invariant n <= x + 18;\nloop invariant n >= x + 19;\nloop invariant n < x + 19;\nloop invariant n <= x + 19;\nloop invariant n >= x + 20;\nloop invariant n < x + 20;\nloop invariant n <= x + 20;\nloop invariant n >= x + 21;\nloop invariant n < x + 21;\nloop invariant n <= x + 21;\nloop invariant n >= x + 22;\nloop invariant n < x + 22;\nloop invariant n <= x + 22;\nloop invariant n >= x + 23;\nloop invariant n < x + 23;\nloop invariant n <= x + 23;\nloop invariant n >= x + 24;\nloop invariant n < x + 24;\nloop invariant n <= x + 24;\nloop invariant n >= x + 25;\nloop invariant n < x + 25;\nloop invariant n <= x + 25;\nloop invariant n >= x + 26;\nloop invariant n < x + 26;\nloop invariant n <= x + 26;\nloop invariant n >= x + 27;\nloop invariant n < x + 27;\nloop invariant n <= x + 27;\nloop invariant n >= x + 28;\nloop invariant n < x + 28;\nloop invariant n <= x + 28;\nloop invariant n >= x + 29;\nloop invariant n < x + 29;\nloop invariant n <= x + 29;\nloop invariant n >= x + 30;\nloop invariant n < x + 30;\nloop invariant n <= x + 30;\nloop invariant n >= x + 31;\nloop invariant n < x + 31;\nloop invariant n <= x + 31;\nloop invariant n >= x + 32;\nloop invariant n < x + 32;\nloop invariant n <= x + 32;\nloop invariant n >= x + 33;\nloop invariant n < x + 33;\nloop invariant n <= x + 33;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\nloop invariant i3: x <= n;\n\nloop invariant i5: n >= x;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant n >= 0 ==> x >= 0;\nloop invariant n >= 0 ==> x <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\nloop invariant i1: n >= 0 ==> x >= 0;\nloop invariant i2: n >= 0 ==> x <= n;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant x == n - (i + 1);\nloop invariant (n >= 0) ==> (i <= n);\nloop invariant (n >= 0) ==> (i >= 0);\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\nloop invariant (x <= n);\nloop invariant (i >= 0);\nloop invariant (i <= n);\nloop invariant (x == n - (i + 1));\nloop invariant (x >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\n\n\nloop invariant i5: (x <= n);\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant x == n - (x - n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant x == n - (y - 1);\nloop invariant x >= 1;\nloop invariant x <= n;\nloop invariant y == n - x + 1;\nloop invariant x >= y;\nloop invariant x <= y;\nloop invariant x == 0 ==> y == n;\nloop invariant x >= 0 ==> y <= n;\nloop invariant 1 <= x <= n;\nloop invariant x == n - (y - 1);\nloop invariant x >= 1;\nloop invariant x <= n;\nloop invariant y == n - x + 1;\nloop invariant x >= y;\nloop invariant x <= y;\nloop invariant x == 0 ==> y == n;\nloop invariant x >= 0 ==> y <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\n\nloop invariant i4: x <= n;\n\n\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 < n;\nloop invariant 0 <= x <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x > 0 ==> x == n - (n - x);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\nloop invariant i2: x > 0 ==> x == n - (n - x);\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant n >= 0;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x == n - (x - 1);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\n\nloop invariant i4: x <= n;\n\nloop invariant i6: x == n - (n - x);\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= n;\nloop invariant n <= x;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant n >= 0 ==> x >= 0;\nloop invariant n >= 0 ==> x <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\nloop invariant i2: n >= 0 ==> x >= 0;\nloop invariant i3: n >= 0 ==> x <= n;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant n >= 0;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\n\nloop invariant i4: x <= n;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n; loop invariant x + 1 == n; loop invariant x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 122: unbound logic variable i. Ignoring loop annotation",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\nloop invariant i1: 1 <= x <= n;\nloop invariant i2: x >= 0;\nloop invariant i3: 0 <= n;\nloop invariant i4: x <= n;\nloop invariant i5: x >= n - x;\nloop invariant i6: n >= x;\nloop invariant i7: n >= x + 1;\nloop invariant i8: n < x + 1;\nloop invariant i9: n <= x + 1;\nloop invariant i10: n >= x + 2;\nloop invariant i11: n < x + 2;\nloop invariant i12: n <= x + 2;\nloop invariant i13: n >= x + 3;\nloop invariant i14: n < x + 3;\nloop invariant i15: n <= x + 3;\nloop invariant i16: n >= x + 4;\nloop invariant i17: n < x + 4;\nloop invariant i18: n <= x + 4;\nloop invariant i19: n >= x + 5;\nloop invariant i20: n < x + 5;\nloop invariant i21: n <= x + 5;\nloop invariant i22: n >= x + 6;\nloop invariant i23: n < x + 6;\nloop invariant i24: n <= x + 6;\nloop invariant i25: n >= x + 7;\nloop invariant i26: n < x + 7;\nloop invariant i27: n <= x + 7;\nloop invariant i28: n >= x + 8;\nloop invariant i29: n < x + 8;\nloop invariant i30: n <= x + 8;\nloop invariant i31: n >= x + 9;\nloop invariant i32: n < x + 9;\nloop invariant i33: n <= x + 9;\nloop invariant i34: n >= x + 10;\nloop invariant i35: n < x + 10;\nloop invariant i36: n <= x + 10;\nloop invariant i37: n >= x + 11;\nloop invariant i38: n < x + 11;\nloop invariant i39: n <= x + 11;\nloop invariant i40: n >= x + 12;\nloop invariant i41: n < x + 12;\nloop invariant i42: n <= x + 12;\nloop invariant i43: n >= x + 13;\nloop invariant i44: n < x + 13;\nloop invariant i45: n <= x + 13;\nloop invariant i46: n >= x + 14;\nloop invariant i47: n < x + 14;\nloop invariant i48: n <= x + 14;\nloop invariant i49: n >= x + 15;\nloop invariant i50: n < x + 15;\nloop invariant i51: n <= x + 15;\nloop invariant i52: n >= x + 16;\nloop invariant i53: n < x + 16;\nloop invariant i54: n <= x + 16;\nloop invariant i55: n >= x + 17;\nloop invariant i56: n < x + 17;\nloop invariant i57: n <= x + 17;\nloop invariant i58: n >= x + 18;\nloop invariant i59: n < x + 18;\nloop invariant i60: n <= x + 18;\nloop invariant i61: n >= x + 19;\nloop invariant i62: n < x + 19;\nloop invariant i63: n <= x + 19;\nloop invariant i64: n >= x + 20;\nloop invariant i65: n < x + 20;\nloop invariant i66: n <= x + 20;\nloop invariant i67: n >= x + 21;\nloop invariant i68: n < x + 21;\nloop invariant i69: n <= x + 21;\nloop invariant i70: n >= x + 22;\nloop invariant i71: n < x + 22;\nloop invariant i72: n <= x + 22;\nloop invariant i73: n >= x + 23;\nloop invariant i74: n < x + 23;\nloop invariant i75: n <= x + 23;\nloop invariant i76: n >= x + 24;\nloop invariant i77: n < x + 24;\nloop invariant i78: n <= x + 24;\nloop invariant i79: n >= x + 25;\nloop invariant i80: n < x + 25;\nloop invariant i81: n <= x + 25;\nloop invariant i82: n >= x + 26;\nloop invariant i83: n < x + 26;\nloop invariant i84: n <= x + 26;\nloop invariant i85: n >= x + 27;\nloop invariant i86: n < x + 27;\nloop invariant i87: n <= x + 27;\nloop invariant i88: n >= x + 28;\nloop invariant i89: n < x + 28;\nloop invariant i90: n <= x + 28;\nloop invariant i91: n >= x + 29;\nloop invariant i92: n < x + 29;\nloop invariant i93: n <= x + 29;\nloop invariant i94: n >= x + 30;\nloop invariant i95: n < x + 30;\nloop invariant i96: n <= x + 30;\nloop invariant i97: n >= x + 31;\nloop invariant i98: n < x + 31;\nloop invariant i99: n <= x + 31;\nloop invariant i100: n >= x + 32;\nloop invariant i101: n < x + 32;\nloop invariant i102: n <= x + 32;\nloop invariant i103: n >= x + 33;\nloop invariant i104: n < x + 33;\nloop invariant i105: n <= x + 33;\nloop invariant i106: n >= 0 ==> x >= 0;\nloop invariant i107: n >= 0 ==> x <= n;\nloop invariant i108: x == n - (i + 1);\nloop invariant i109: (n >= 0) ==> (i <= n);\nloop invariant i110: (n >= 0) ==> (i >= 0);\nloop invariant i111: (x >= 0);\nloop invariant i112: (x <= n);\nloop invariant i113: (i >= 0);\nloop invariant i114: (i <= n);\nloop invariant i115: (x == n - (i + 1));\nloop invariant i116: x == n - (x - n);\nloop invariant i117: x == n - (y - 1);\nloop invariant i118: x >= 1;\nloop invariant i119: y == n - x + 1;\nloop invariant i120: x >= y;\nloop invariant i121: x <= y;\nloop invariant i122: x == 0 ==> y == n;\nloop invariant i123: x >= 0 ==> y <= n;\nloop invariant i124: 0 < n;\nloop invariant i125: 0 <= x <= n;\nloop invariant i126: x > 0 ==> x == n - (n - x);\nloop invariant i127: n >= 0;\nloop invariant i128: x == n - (x - 1);\nloop invariant i129: x == n - (n - x);\nloop invariant i130: n <= x;\nloop invariant i131: 0 <= x <= n; loop invariant x + 1 == n; loop invariant x == 0;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 119,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\n\nloop invariant i4: x <= n;\n\nloop invariant i6: n >= x;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i106: n >= 0 ==> x >= 0;\nloop invariant i107: n >= 0 ==> x <= n;\n\n\n\n\nloop invariant i112: (x <= n);\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i126: x > 0 ==> x == n - (n - x);\n\n\nloop invariant i129: x == n - (n - x);\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c"
        ],
        "skipped": [],
        "total": 22,
        "success_count": 19,
        "failure_count": 3,
        "success_rate": 0.8636363636363636
    }
}