{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/9.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  while (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (x == 4) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 1 <= x <= 4;\nloop invariant 0 <= y <= 4;\nloop invariant (x - y) % 2 == 0 ==> x == y;\nloop invariant x >= 0 ==> x <= 4;\nloop invariant y >= 0 ==> y <= 4;\nloop invariant x >= y ==> x <= 4;\nloop invariant y >= x ==> y <= 4;\nloop invariant (x == 4) ==> (y != 0);\nloop invariant (x == 4) ==> (y != 1);\nloop invariant (x == 4) ==> (y != 2);\nloop invariant (x == 4) ==> (y != 3);\nloop invariant (x == 4) ==> (y != 4);\nloop invariant (x == 4) ==> (y != 5);\nloop invariant (x == 4) ==> (y != 6);\nloop invariant (x == 4) ==> (y != 7);\nloop invariant (x == 4) ==> (y != 8);\nloop invariant (x == 4) ==> (y != 9);\nloop invariant (x == 4) ==> (y != 10);\nloop invariant (x == 4) ==> (y != 11);\nloop invariant (x == 4) ==> (y != 12);\nloop invariant (x == 4) ==> (y != 13);\nloop invariant (x == 4) ==> (y != 14);\nloop invariant (x == 4) ==> (y != 15);\nloop invariant (x == 4) ==> (y != 16);\nloop invariant (x == 4) ==> (y != 17);\nloop invariant (x == 4) ==> (y != 18);\nloop invariant (x == 4) ==> (y != 19);\nloop invariant (x == 4) ==> (y != 20);\nloop invariant (x == 4) ==> (y != 21);\nloop invariant (x == 4) ==> (y != 22);\nloop invariant (x == 4) ==> (y != 23);\nloop invariant (x == 4) ==> (y != 24);\nloop invariant (x == 4) ==> (y != 25);\nloop invariant (x == 4) ==> (y != 26);\nloop invariant (x == 4) ==> (y != 27);\nloop invariant (x == 4) ==> (y != 28);\nloop invariant (x == 4) ==> (y != 29);\nloop invariant (x == 4) ==> (y != 30);\nloop invariant (x == 4) ==> (y != 31);\nloop invariant (x == 4) ==> (y != 32);\nloop invariant (x == 4) ==> (y != 33);\nloop invariant (x == 4) ==> (y != 34);\nloop invariant (x == 4) ==> (y != 35);\nloop invariant (x == 4) ==> (y != 36);\nloop invariant (x == 4) ==> (y != 37);\nloop invariant (x == 4) ==> (y != 38);\nloop invariant (x == 4) ==> (y != 39);\nloop invariant (x == 4) ==> (y != 40);\nloop invariant (x == 4) ==> (y != 41);\nloop invariant (x == 4) ==> (y != 42);\nloop invariant (x == 4) ==> (y != 43);\nloop invariant (x == 4) ==> (y != 44);\nloop invariant (x == 4) ==> (y != 45);\nloop invariant (x == 4) ==> (y != 46);\nloop invariant (x == 4) ==> (y != 47);\nloop invariant (x == 4) ==> (y != 48);\nloop invariant (x == 4) ==> (y != 49);\nloop invariant (x == 4) ==> (y != 50);\nloop invariant (x == 4) ==> (y != 51);\nloop invariant (x == 4) ==> (y != 52);\nloop invariant (x == 4) ==> (y != 53);\nloop invariant (x == 4) ==> (y != 54);\nloop invariant (x == 4) ==> (y != 55);\nloop invariant (x == 4) ==> (y != 56);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= (2 + y);\nloop invariant y <= 2;\nloop invariant x <= 4;\nloop invariant (x == 4 ==> y != 0);\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant y >= 2;\nloop invariant x >= y;\nloop invariant x >= 2 * y - 2;\nloop invariant x == 4 ==> y != 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 2;\nloop invariant 0 <= y <= 2;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 2;\nloop invariant y <= 2;\nloop invariant x + y <= 4;\nloop invariant x + y >= 0;\nloop invariant x <= 2 + 2 * y;\nloop invariant x >= 2 * y;\nloop invariant (x == 4) ==> (y == 2);\nloop invariant (x == 4) ==> (y == 0);\nloop invariant (x == 4) ==> (y == 1);\nloop invariant (x == 4) ==> (y == 3);\nloop invariant (x == 4) ==> (y == 4);\nloop invariant (x == 4) ==> (y == 5);\nloop invariant (x == 4) ==> (y == 6);\nloop invariant (x == 4) ==> (y == 7);\nloop invariant (x == 4) ==> (y == 8);\nloop invariant (x == 4) ==> (y == 9);\nloop invariant (x == 4) ==> (y == 10);\nloop invariant (x == 4) ==> (y == 11);\nloop invariant (x == 4) ==> (y == 12);\nloop invariant (x == 4) ==> (y == 13);\nloop invariant (x == 4) ==> (y == 14);\nloop invariant (x == 4) ==> (y == 15);\nloop invariant (x == 4) ==> (y == 16);\nloop invariant (x == 4) ==> (y == 17);\nloop invariant (x == 4) ==> (y == 18);\nloop invariant (x == 4) ==> (y == 19);\nloop invariant (x == 4) ==> (y == 20);\nloop invariant (x == 4) ==> (y == 21);\nloop invariant (x == 4) ==> (y == 22);\nloop invariant (x == 4) ==> (y == 23);\nloop invariant (x == 4) ==> (y == 24);\nloop invariant (x == 4) ==> (y == 25);\nloop invariant (x == 4) ==> (y == 26);\nloop invariant (x == 4) ==> (y == 27);\nloop invariant (x == 4) ==> (y == 28);\nloop invariant (x == 4) ==> (y == 29);\nloop invariant (x == 4) ==> (y == 30);\nloop invariant (x == 4) ==> (y == 31);\nloop invariant (x == 4) ==> (y == 32);\nloop invariant (x == 4) ==> (y == 33);\nloop invariant (x == 4) ==> (y == 34);\nloop invariant (x == 4) ==> (y == 35);\nloop invariant (x == 4) ==> (y == 36);\nloop invariant (x == 4) ==> (y == 37);\nloop invariant (x == 4) ==> (y == 38);\nloop invariant (x == 4) ==> (y == 39);\nloop invariant (x == 4) ==> (y == 40);\nloop invariant (x == 4) ==> (y == 41);\nloop invariant (x == 4) ==> (y == 42);\nloop invariant (x == 4) ==> (y == 43);\nloop invariant (x == 4) ==> (y == 44);\nloop invariant (x == 4) ==> (y == 45);\nloop invariant (x == 4) ==> (y == 46);\nloop invariant (x == 4) ==> (y == 47);\nloop invariant (x == 4) ==> (y == 48);\nloop invariant (x == 4) ==> (y == 49);\nloop invariant (x == 4) ==> (y == 50);\nloop invariant (x == 4) ==> (y == 51);\nloop invariant (x == 4) ==> (y == 52);\nloop invariant (x == 4) ==> (y == 53);\nloop invariant (x == 4) ==> (y == 54);\nloop invariant (x == 4) ==> (y == 55);\nloop invariant (x == 4) ==> (y == 56);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 4;\nloop invariant (x + y) >= 2;\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x <= 2);\nloop invariant (y <= 2);\nloop invariant (x + y) <= 8;\nloop invariant (x + y) >= (2 + (x - 2) * (y - 2) / 2);\nloop invariant (x + y) >= (2 + (y - 2) * (x - 2) / 2);\nloop invariant (x + y) >= (2 + (x - 2) * (y - 2) / 2);\nloop invariant (x + y) >= (2 + (y - 2) * (x - 2) / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 4;\nloop invariant x <= y;\nloop invariant x + y <= 4;\nloop invariant x + y >= 0;\nloop invariant y - x <= 4;\nloop invariant y - x >= 0;\nloop invariant (x == 4) ==> (y != 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 2;\nloop invariant 0 <= y <= 2;\nloop invariant x >= 0 ==> y >= 0;\nloop invariant x >= 2 ==> y >= 2;\nloop invariant x <= 2 ==> y <= 2;\nloop invariant x < 2 ==> y < 2;\nloop invariant x > 0 ==> y > 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 2;\nloop invariant 0 <= y <= 2;\nloop invariant x >= 2 * y;\nloop invariant x <= y + 2;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 4;\nloop invariant 0 <= y <= 4;\nloop invariant x <= y + 2;\nloop invariant y <= x - 2;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 4;\nloop invariant 0 <= y <= 4;\nloop invariant x <= y;\nloop invariant (x == 4) ==> (y != 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant x % 2 == 0;\nloop invariant y % 2 == 0;\nloop invariant x <= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 4;\nloop invariant x + y >= 0;\nloop invariant x + y <= 8;\nloop invariant x == 2 * (unknown() + 1) ==> x >= 2;\nloop invariant x == 2 * (unknown() + 1) ==> x <= 4;\nloop invariant y == 2 * (unknown() + 1) ==> y >= 2;\nloop invariant y == 2 * (unknown() + 1) ==> y <= 4;\nloop invariant (x <= 4) ==> (y != 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 4;\nloop invariant x >= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 4;\nloop invariant x + y >= 0;\nloop invariant x + y <= 8;\nloop invariant x + y == 2 * y;\nloop invariant y == (x + y) / 2;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 4;\nloop invariant 0 <= y <= 4;\nloop invariant (x - y) % 2 == 0 ==> x == y;\nloop invariant x >= 0 ==> x <= 4;\nloop invariant y >= 0 ==> y <= 4;\nloop invariant x >= y ==> x <= 4;\nloop invariant y >= x ==> y <= 4;\nloop invariant (x == 4) ==> (y != 0);\nloop invariant (x == 4) ==> (y != 1);\nloop invariant (x == 4) ==> (y != 2);\nloop invariant (x == 4) ==> (y != 3);\nloop invariant (x == 4) ==> (y != 4);\nloop invariant (x == 4) ==> (y != 5);\nloop invariant (x == 4) ==> (y != 6);\nloop invariant (x == 4) ==> (y != 7);\nloop invariant (x == 4) ==> (y != 8);\nloop invariant (x == 4) ==> (y != 9);\nloop invariant (x == 4) ==> (y != 10);\nloop invariant (x == 4) ==> (y != 11);\nloop invariant (x == 4) ==> (y != 12);\nloop invariant (x == 4) ==> (y != 13);\nloop invariant (x == 4) ==> (y != 14);\nloop invariant (x == 4) ==> (y != 15);\nloop invariant (x == 4) ==> (y != 16);\nloop invariant (x == 4) ==> (y != 17);\nloop invariant (x == 4) ==> (y != 18);\nloop invariant (x == 4) ==> (y != 19);\nloop invariant (x == 4) ==> (y != 20);\nloop invariant (x == 4) ==> (y != 21);\nloop invariant (x == 4) ==> (y != 22);\nloop invariant (x == 4) ==> (y != 23);\nloop invariant (x == 4) ==> (y != 24);\nloop invariant (x == 4) ==> (y != 25);\nloop invariant (x == 4) ==> (y != 26);\nloop invariant (x == 4) ==> (y != 27);\nloop invariant (x == 4) ==> (y != 28);\nloop invariant (x == 4) ==> (y != 29);\nloop invariant (x == 4) ==> (y != 30);\nloop invariant (x == 4) ==> (y != 31);\nloop invariant (x == 4) ==> (y != 32);\nloop invariant (x == 4) ==> (y != 33);\nloop invariant (x == 4) ==> (y != 34);\nloop invariant (x == 4) ==> (y != 35);\nloop invariant (x == 4) ==> (y != 36);\nloop invariant (x == 4) ==> (y != 37);\nloop invariant (x == 4) ==> (y != 38);\nloop invariant (x == 4) ==> (y != 39);\nloop invariant (x == 4) ==> (y != 40);\nloop invariant (x == 4) ==> (y != 41);\nloop invariant (x == 4) ==> (y != 42);\nloop invariant (x == 4) ==> (y != 43);\nloop invariant (x == 4) ==> (y != 44);\nloop invariant (x == 4) ==> (y != 45);\nloop invariant (x == 4) ==> (y != 46);\nloop invariant (x == 4) ==> (y != 47);\nloop invariant (x == 4) ==> (y != 48);\nloop invariant (x == 4) ==> (y != 49);\nloop invariant (x == 4) ==> (y != 50);\nloop invariant (x == 4) ==> (y != 51);\nloop invariant (x == 4) ==> (y != 52);\nloop invariant (x == 4) ==> (y != 53);\nloop invariant (x == 4) ==> (y != 54);\nloop invariant (x == 4) ==> (y != 55);\nloop invariant (x == 4) ==> (y != 56);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (x == 4) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= (2 + y);\nloop invariant y <= 2;\nloop invariant x <= 4;\nloop invariant (x == 4 ==> y != 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  /*@\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (x == 4) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  /*@\n\n*/\nwhile (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (x == 4) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant y >= 2;\nloop invariant x >= y;\nloop invariant x >= 2 * y - 2;\nloop invariant x == 4 ==> y != 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  /*@\n\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (x == 4) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 32,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2;\nloop invariant 0 <= y <= 2;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= 2;\nloop invariant y <= 2;\nloop invariant x + y <= 4;\nloop invariant x + y >= 0;\nloop invariant x <= 2 + 2 * y;\nloop invariant x >= 2 * y;\nloop invariant (x == 4) ==> (y == 2);\nloop invariant (x == 4) ==> (y == 0);\nloop invariant (x == 4) ==> (y == 1);\nloop invariant (x == 4) ==> (y == 3);\nloop invariant (x == 4) ==> (y == 4);\nloop invariant (x == 4) ==> (y == 5);\nloop invariant (x == 4) ==> (y == 6);\nloop invariant (x == 4) ==> (y == 7);\nloop invariant (x == 4) ==> (y == 8);\nloop invariant (x == 4) ==> (y == 9);\nloop invariant (x == 4) ==> (y == 10);\nloop invariant (x == 4) ==> (y == 11);\nloop invariant (x == 4) ==> (y == 12);\nloop invariant (x == 4) ==> (y == 13);\nloop invariant (x == 4) ==> (y == 14);\nloop invariant (x == 4) ==> (y == 15);\nloop invariant (x == 4) ==> (y == 16);\nloop invariant (x == 4) ==> (y == 17);\nloop invariant (x == 4) ==> (y == 18);\nloop invariant (x == 4) ==> (y == 19);\nloop invariant (x == 4) ==> (y == 20);\nloop invariant (x == 4) ==> (y == 21);\nloop invariant (x == 4) ==> (y == 22);\nloop invariant (x == 4) ==> (y == 23);\nloop invariant (x == 4) ==> (y == 24);\nloop invariant (x == 4) ==> (y == 25);\nloop invariant (x == 4) ==> (y == 26);\nloop invariant (x == 4) ==> (y == 27);\nloop invariant (x == 4) ==> (y == 28);\nloop invariant (x == 4) ==> (y == 29);\nloop invariant (x == 4) ==> (y == 30);\nloop invariant (x == 4) ==> (y == 31);\nloop invariant (x == 4) ==> (y == 32);\nloop invariant (x == 4) ==> (y == 33);\nloop invariant (x == 4) ==> (y == 34);\nloop invariant (x == 4) ==> (y == 35);\nloop invariant (x == 4) ==> (y == 36);\nloop invariant (x == 4) ==> (y == 37);\nloop invariant (x == 4) ==> (y == 38);\nloop invariant (x == 4) ==> (y == 39);\nloop invariant (x == 4) ==> (y == 40);\nloop invariant (x == 4) ==> (y == 41);\nloop invariant (x == 4) ==> (y == 42);\nloop invariant (x == 4) ==> (y == 43);\nloop invariant (x == 4) ==> (y == 44);\nloop invariant (x == 4) ==> (y == 45);\nloop invariant (x == 4) ==> (y == 46);\nloop invariant (x == 4) ==> (y == 47);\nloop invariant (x == 4) ==> (y == 48);\nloop invariant (x == 4) ==> (y == 49);\nloop invariant (x == 4) ==> (y == 50);\nloop invariant (x == 4) ==> (y == 51);\nloop invariant (x == 4) ==> (y == 52);\nloop invariant (x == 4) ==> (y == 53);\nloop invariant (x == 4) ==> (y == 54);\nloop invariant (x == 4) ==> (y == 55);\nloop invariant (x == 4) ==> (y == 56);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  /*@\n\n\nloop invariant i3: x >= 0;\nloop invariant i4: y >= 0;\n\n\n\nloop invariant i8: x + y >= 0;\nloop invariant i9: x <= 2 + 2 * y;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (x == 4) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 4;\nloop invariant (x + y) >= 2;\nloop invariant (x >= 0);\nloop invariant (y >= 0);\nloop invariant (x <= 2);\nloop invariant (y <= 2);\nloop invariant (x + y) <= 8;\nloop invariant (x + y) >= (2 + (x - 2) * (y - 2) / 2);\nloop invariant (x + y) >= (2 + (y - 2) * (x - 2) / 2);\nloop invariant (x + y) >= (2 + (x - 2) * (y - 2) / 2);\nloop invariant (x + y) >= (2 + (y - 2) * (x - 2) / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  /*@\n\n\n\nloop invariant i4: (x >= 0);\nloop invariant i5: (y >= 0);\n\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (x == 4) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 4;\nloop invariant x <= y;\nloop invariant x + y <= 4;\nloop invariant x + y >= 0;\nloop invariant y - x <= 4;\nloop invariant y - x >= 0;\nloop invariant (x == 4) ==> (y != 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  /*@\n\n\n\n\nloop invariant i5: x + y >= 0;\nloop invariant i6: y - x <= 4;\n\n\n*/\nwhile (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (x == 4) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2;\nloop invariant 0 <= y <= 2;\nloop invariant x >= 0 ==> y >= 0;\nloop invariant x >= 2 ==> y >= 2;\nloop invariant x <= 2 ==> y <= 2;\nloop invariant x < 2 ==> y < 2;\nloop invariant x > 0 ==> y > 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 2 ==> y == 2;\nloop invariant x == 1 ==> y == 1;\nloop invariant x == 1 ==> y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (x == 4) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2;\nloop invariant 0 <= y <= 2;\nloop invariant x >= 2 * y;\nloop invariant x <= y + 2;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\nloop invariant y <= x / 2;\nloop invariant y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant y <= 2;\nloop invariant x >= 2 * y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  /*@\n\n\n\nloop invariant i4: x <= y + 2;\n\n\nloop invariant i7: x >= 0;\n\nloop invariant i9: y >= 0;\n*/\nwhile (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (x == 4) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 4;\nloop invariant 0 <= y <= 4;\nloop invariant x <= y + 2;\nloop invariant y <= x - 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  /*@\n\n\nloop invariant i3: x <= y + 2;\n\n*/\nwhile (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (x == 4) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 4;\nloop invariant 0 <= y <= 4;\nloop invariant x <= y;\nloop invariant (x == 4) ==> (y != 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  /*@\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (x == 4) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 2;\nloop invariant x >= 0;\nloop invariant x <= 4;\nloop invariant y >= 0;\nloop invariant x % 2 == 0;\nloop invariant y % 2 == 0;\nloop invariant x <= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  /*@\n\nloop invariant i2: x >= 0;\n\nloop invariant i4: y >= 0;\n\n\n\n*/\nwhile (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (x == 4) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 4;\nloop invariant x + y >= 0;\nloop invariant x + y <= 8;\nloop invariant x == 2 * (unknown() + 1) ==> x >= 2;\nloop invariant x == 2 * (unknown() + 1) ==> x <= 4;\nloop invariant y == 2 * (unknown() + 1) ==> y >= 2;\nloop invariant y == 2 * (unknown() + 1) ==> y <= 4;\nloop invariant (x <= 4) ==> (y != 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  /*@\n\n\nloop invariant i3: x + y >= 0;\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (x == 4) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 4;\nloop invariant x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  /*@\n\n\n\n*/\nwhile (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (x == 4) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 4;\nloop invariant 0 <= y <= 4;\nloop invariant x + y >= 0;\nloop invariant x + y <= 8;\nloop invariant x + y == 2 * y;\nloop invariant y == (x + y) / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  /*@\n\n\nloop invariant i3: x + y >= 0;\n\n\n\n*/\nwhile (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (x == 4) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 185: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  /*@\nloop invariant i1: 1 <= x <= 4;\nloop invariant i2: 0 <= y <= 4;\nloop invariant i3: (x - y) % 2 == 0 ==> x == y;\nloop invariant i4: x >= 0 ==> x <= 4;\nloop invariant i5: y >= 0 ==> y <= 4;\nloop invariant i6: x >= y ==> x <= 4;\nloop invariant i7: y >= x ==> y <= 4;\nloop invariant i8: (x == 4) ==> (y != 0);\nloop invariant i9: (x == 4) ==> (y != 1);\nloop invariant i10: (x == 4) ==> (y != 2);\nloop invariant i11: (x == 4) ==> (y != 3);\nloop invariant i12: (x == 4) ==> (y != 4);\nloop invariant i13: (x == 4) ==> (y != 5);\nloop invariant i14: (x == 4) ==> (y != 6);\nloop invariant i15: (x == 4) ==> (y != 7);\nloop invariant i16: (x == 4) ==> (y != 8);\nloop invariant i17: (x == 4) ==> (y != 9);\nloop invariant i18: (x == 4) ==> (y != 10);\nloop invariant i19: (x == 4) ==> (y != 11);\nloop invariant i20: (x == 4) ==> (y != 12);\nloop invariant i21: (x == 4) ==> (y != 13);\nloop invariant i22: (x == 4) ==> (y != 14);\nloop invariant i23: (x == 4) ==> (y != 15);\nloop invariant i24: (x == 4) ==> (y != 16);\nloop invariant i25: (x == 4) ==> (y != 17);\nloop invariant i26: (x == 4) ==> (y != 18);\nloop invariant i27: (x == 4) ==> (y != 19);\nloop invariant i28: (x == 4) ==> (y != 20);\nloop invariant i29: (x == 4) ==> (y != 21);\nloop invariant i30: (x == 4) ==> (y != 22);\nloop invariant i31: (x == 4) ==> (y != 23);\nloop invariant i32: (x == 4) ==> (y != 24);\nloop invariant i33: (x == 4) ==> (y != 25);\nloop invariant i34: (x == 4) ==> (y != 26);\nloop invariant i35: (x == 4) ==> (y != 27);\nloop invariant i36: (x == 4) ==> (y != 28);\nloop invariant i37: (x == 4) ==> (y != 29);\nloop invariant i38: (x == 4) ==> (y != 30);\nloop invariant i39: (x == 4) ==> (y != 31);\nloop invariant i40: (x == 4) ==> (y != 32);\nloop invariant i41: (x == 4) ==> (y != 33);\nloop invariant i42: (x == 4) ==> (y != 34);\nloop invariant i43: (x == 4) ==> (y != 35);\nloop invariant i44: (x == 4) ==> (y != 36);\nloop invariant i45: (x == 4) ==> (y != 37);\nloop invariant i46: (x == 4) ==> (y != 38);\nloop invariant i47: (x == 4) ==> (y != 39);\nloop invariant i48: (x == 4) ==> (y != 40);\nloop invariant i49: (x == 4) ==> (y != 41);\nloop invariant i50: (x == 4) ==> (y != 42);\nloop invariant i51: (x == 4) ==> (y != 43);\nloop invariant i52: (x == 4) ==> (y != 44);\nloop invariant i53: (x == 4) ==> (y != 45);\nloop invariant i54: (x == 4) ==> (y != 46);\nloop invariant i55: (x == 4) ==> (y != 47);\nloop invariant i56: (x == 4) ==> (y != 48);\nloop invariant i57: (x == 4) ==> (y != 49);\nloop invariant i58: (x == 4) ==> (y != 50);\nloop invariant i59: (x == 4) ==> (y != 51);\nloop invariant i60: (x == 4) ==> (y != 52);\nloop invariant i61: (x == 4) ==> (y != 53);\nloop invariant i62: (x == 4) ==> (y != 54);\nloop invariant i63: (x == 4) ==> (y != 55);\nloop invariant i64: (x == 4) ==> (y != 56);\nloop invariant i65: 1 <= x <= (2 + y);\nloop invariant i66: y <= 2;\nloop invariant i67: x <= 4;\nloop invariant i68: (x == 4 ==> y != 0);\nloop invariant i69: 0 <= x <= 4;\nloop invariant i70: y >= 2;\nloop invariant i71: x >= y;\nloop invariant i72: x >= 2 * y - 2;\nloop invariant i73: x == 4 ==> y != 0;\nloop invariant i74: 0 <= x <= 2;\nloop invariant i75: 0 <= y <= 2;\nloop invariant i76: x >= 0;\nloop invariant i77: y >= 0;\nloop invariant i78: x <= 2;\nloop invariant i79: x + y <= 4;\nloop invariant i80: x + y >= 0;\nloop invariant i81: x <= 2 + 2 * y;\nloop invariant i82: x >= 2 * y;\nloop invariant i83: (x == 4) ==> (y == 2);\nloop invariant i84: (x == 4) ==> (y == 0);\nloop invariant i85: (x == 4) ==> (y == 1);\nloop invariant i86: (x == 4) ==> (y == 3);\nloop invariant i87: (x == 4) ==> (y == 4);\nloop invariant i88: (x == 4) ==> (y == 5);\nloop invariant i89: (x == 4) ==> (y == 6);\nloop invariant i90: (x == 4) ==> (y == 7);\nloop invariant i91: (x == 4) ==> (y == 8);\nloop invariant i92: (x == 4) ==> (y == 9);\nloop invariant i93: (x == 4) ==> (y == 10);\nloop invariant i94: (x == 4) ==> (y == 11);\nloop invariant i95: (x == 4) ==> (y == 12);\nloop invariant i96: (x == 4) ==> (y == 13);\nloop invariant i97: (x == 4) ==> (y == 14);\nloop invariant i98: (x == 4) ==> (y == 15);\nloop invariant i99: (x == 4) ==> (y == 16);\nloop invariant i100: (x == 4) ==> (y == 17);\nloop invariant i101: (x == 4) ==> (y == 18);\nloop invariant i102: (x == 4) ==> (y == 19);\nloop invariant i103: (x == 4) ==> (y == 20);\nloop invariant i104: (x == 4) ==> (y == 21);\nloop invariant i105: (x == 4) ==> (y == 22);\nloop invariant i106: (x == 4) ==> (y == 23);\nloop invariant i107: (x == 4) ==> (y == 24);\nloop invariant i108: (x == 4) ==> (y == 25);\nloop invariant i109: (x == 4) ==> (y == 26);\nloop invariant i110: (x == 4) ==> (y == 27);\nloop invariant i111: (x == 4) ==> (y == 28);\nloop invariant i112: (x == 4) ==> (y == 29);\nloop invariant i113: (x == 4) ==> (y == 30);\nloop invariant i114: (x == 4) ==> (y == 31);\nloop invariant i115: (x == 4) ==> (y == 32);\nloop invariant i116: (x == 4) ==> (y == 33);\nloop invariant i117: (x == 4) ==> (y == 34);\nloop invariant i118: (x == 4) ==> (y == 35);\nloop invariant i119: (x == 4) ==> (y == 36);\nloop invariant i120: (x == 4) ==> (y == 37);\nloop invariant i121: (x == 4) ==> (y == 38);\nloop invariant i122: (x == 4) ==> (y == 39);\nloop invariant i123: (x == 4) ==> (y == 40);\nloop invariant i124: (x == 4) ==> (y == 41);\nloop invariant i125: (x == 4) ==> (y == 42);\nloop invariant i126: (x == 4) ==> (y == 43);\nloop invariant i127: (x == 4) ==> (y == 44);\nloop invariant i128: (x == 4) ==> (y == 45);\nloop invariant i129: (x == 4) ==> (y == 46);\nloop invariant i130: (x == 4) ==> (y == 47);\nloop invariant i131: (x == 4) ==> (y == 48);\nloop invariant i132: (x == 4) ==> (y == 49);\nloop invariant i133: (x == 4) ==> (y == 50);\nloop invariant i134: (x == 4) ==> (y == 51);\nloop invariant i135: (x == 4) ==> (y == 52);\nloop invariant i136: (x == 4) ==> (y == 53);\nloop invariant i137: (x == 4) ==> (y == 54);\nloop invariant i138: (x == 4) ==> (y == 55);\nloop invariant i139: (x == 4) ==> (y == 56);\nloop invariant i140: (x + y) >= 2;\nloop invariant i141: (x >= 0);\nloop invariant i142: (y >= 0);\nloop invariant i143: (x <= 2);\nloop invariant i144: (y <= 2);\nloop invariant i145: (x + y) <= 8;\nloop invariant i146: (x + y) >= (2 + (x - 2) * (y - 2) / 2);\nloop invariant i147: (x + y) >= (2 + (y - 2) * (x - 2) / 2);\nloop invariant i148: x <= y;\nloop invariant i149: y - x <= 4;\nloop invariant i150: y - x >= 0;\nloop invariant i151: x >= 0 ==> y >= 0;\nloop invariant i152: x >= 2 ==> y >= 2;\nloop invariant i153: x <= 2 ==> y <= 2;\nloop invariant i154: x < 2 ==> y < 2;\nloop invariant i155: x > 0 ==> y > 0;\nloop invariant i156: x == 0 ==> y == 0;\nloop invariant i157: x == 2 ==> y == 2;\nloop invariant i158: x == 1 ==> y == 1;\nloop invariant i159: x == 1 ==> y == 0;\nloop invariant i160: x <= y + 2;\nloop invariant i161: y <= x / 2;\nloop invariant i162: y <= x - 2;\nloop invariant i163: x % 2 == 0;\nloop invariant i164: y % 2 == 0;\nloop invariant i165: x + y <= 8;\nloop invariant i166: x == 2 * (unknown() + 1) ==> x >= 2;\nloop invariant i167: x == 2 * (unknown() + 1) ==> x <= 4;\nloop invariant i168: y == 2 * (unknown() + 1) ==> y >= 2;\nloop invariant i169: y == 2 * (unknown() + 1) ==> y <= 4;\nloop invariant i170: (x <= 4) ==> (y != 0);\nloop invariant i171: x + y == 2 * y;\nloop invariant i172: y == (x + y) / 2;\n*/\nwhile (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (x == 4) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 67,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int x;\n  int y;\n  \n  assume((x >= 0));\n  assume((x <= 2));\n  assume((y <= 2));\n  assume((y >= 0));\n  \n  /*@\n\n\n\n\n\n\n\nloop invariant i8: (x == 4) ==> (y != 0);\nloop invariant i9: (x == 4) ==> (y != 1);\n\n\n\n\n\n\n\nloop invariant i17: (x == 4) ==> (y != 9);\nloop invariant i18: (x == 4) ==> (y != 10);\nloop invariant i19: (x == 4) ==> (y != 11);\nloop invariant i20: (x == 4) ==> (y != 12);\nloop invariant i21: (x == 4) ==> (y != 13);\nloop invariant i22: (x == 4) ==> (y != 14);\nloop invariant i23: (x == 4) ==> (y != 15);\nloop invariant i24: (x == 4) ==> (y != 16);\nloop invariant i25: (x == 4) ==> (y != 17);\nloop invariant i26: (x == 4) ==> (y != 18);\nloop invariant i27: (x == 4) ==> (y != 19);\nloop invariant i28: (x == 4) ==> (y != 20);\nloop invariant i29: (x == 4) ==> (y != 21);\nloop invariant i30: (x == 4) ==> (y != 22);\nloop invariant i31: (x == 4) ==> (y != 23);\nloop invariant i32: (x == 4) ==> (y != 24);\nloop invariant i33: (x == 4) ==> (y != 25);\nloop invariant i34: (x == 4) ==> (y != 26);\nloop invariant i35: (x == 4) ==> (y != 27);\nloop invariant i36: (x == 4) ==> (y != 28);\nloop invariant i37: (x == 4) ==> (y != 29);\nloop invariant i38: (x == 4) ==> (y != 30);\nloop invariant i39: (x == 4) ==> (y != 31);\nloop invariant i40: (x == 4) ==> (y != 32);\nloop invariant i41: (x == 4) ==> (y != 33);\nloop invariant i42: (x == 4) ==> (y != 34);\nloop invariant i43: (x == 4) ==> (y != 35);\nloop invariant i44: (x == 4) ==> (y != 36);\nloop invariant i45: (x == 4) ==> (y != 37);\nloop invariant i46: (x == 4) ==> (y != 38);\nloop invariant i47: (x == 4) ==> (y != 39);\nloop invariant i48: (x == 4) ==> (y != 40);\nloop invariant i49: (x == 4) ==> (y != 41);\nloop invariant i50: (x == 4) ==> (y != 42);\nloop invariant i51: (x == 4) ==> (y != 43);\nloop invariant i52: (x == 4) ==> (y != 44);\nloop invariant i53: (x == 4) ==> (y != 45);\nloop invariant i54: (x == 4) ==> (y != 46);\nloop invariant i55: (x == 4) ==> (y != 47);\nloop invariant i56: (x == 4) ==> (y != 48);\nloop invariant i57: (x == 4) ==> (y != 49);\nloop invariant i58: (x == 4) ==> (y != 50);\nloop invariant i59: (x == 4) ==> (y != 51);\nloop invariant i60: (x == 4) ==> (y != 52);\nloop invariant i61: (x == 4) ==> (y != 53);\nloop invariant i62: (x == 4) ==> (y != 54);\nloop invariant i63: (x == 4) ==> (y != 55);\nloop invariant i64: (x == 4) ==> (y != 56);\n\n\n\nloop invariant i68: (x == 4 ==> y != 0);\n\n\n\n\nloop invariant i73: x == 4 ==> y != 0;\n\n\nloop invariant i76: x >= 0;\nloop invariant i77: y >= 0;\n\n\nloop invariant i80: x + y >= 0;\nloop invariant i81: x <= 2 + 2 * y;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i141: (x >= 0);\nloop invariant i142: (y >= 0);\n\n\n\n\n\n\nloop invariant i149: y - x <= 4;\n\nloop invariant i151: x >= 0 ==> y >= 0;\n\n\n\n\n\n\n\n\nloop invariant i160: x <= y + 2;\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n    (x  = (x + 2));\n    (y  = (y + 2));\n    }\n\n  }\n  \nif ( (x == 4) )\n{;\n//@ assert( (y != 0) );\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c"
        ],
        "skipped": [],
        "total": 75,
        "success_count": 65,
        "failure_count": 10,
        "success_rate": 0.8666666666666667
    }
}