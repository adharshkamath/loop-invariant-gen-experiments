{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/4.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    while(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant z <= y ==> z <= y;\nloop invariant x == 0 ==> z == y;\nloop invariant x > 0 ==> (z >= y && z <= y);\nloop invariant x == 500 ==> (z >= y && z <= y);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x < 500;\nloop invariant y <= z;\nloop invariant x == (y + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant z >= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant 0 <= y <= z;\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant y >= (if x >= 0 || z > y then z else y);\nloop invariant z >= (if x >= 0 || z > y then z else y);\nloop invariant 0 <= x <= 500;\nloop invariant y >= (if x >= 0 || z > y then z else y);\nloop invariant z >= (if x >= 0 || z > y then z else y);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 500;\nloop invariant y <= z;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= z; loop invariant 0 <= x <= 500; loop invariant x >= z - y; loop invariant x >= z - (x - z) / 2; loop invariant x >= z - (x - z) * (x - z + 1) / 2; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) / 6; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) / 24; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) / 120; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) * (x + z + 3) / 720; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) * (x + z + 3) * (2 * x + z - 4) / 5040; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) * (x + z + 3) * (2 * x + z - 4) * (x + z + 5) / 40320; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) * (x + z + 3) * (2 * x + z - 4) * (x + z + 5) * (x + z + 7) / 362880; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) * (x + z + 3) * (2 * x + z - 4) * (x + z + 5) * (x + z + 7) * (2 * x + z - 8) / 3628800; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) * (x + z + 3) * (2 * x + z - 4) * (x + z + 5) * (x + z + 7) * (2 * x + z - 8) * (x + z + 9) / 39916800; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) * (x + z + 3) * (2 * x + z - 4) * (x + z + 5) * (x + z + 7) * (2 * x + z - 8) * (x + z + 9) * (x + z + 11) / 479001600;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 499;\nloop invariant 0 <= y <= 500;\nloop invariant 0 <= z <= 500;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant x >= (0 + y);\nloop invariant x >= (0 + z);\nloop invariant (y <= z) ==> (y <= x);\nloop invariant (y <= z) ==> (z <= x);\nloop invariant x >= (y + z - 1);\nloop invariant x >= (y + y);\nloop invariant x >= (z + z);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant y >= z;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant z >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant y <= z ==> x >= y;\nloop invariant x < 500 ==> x <= 500;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x < 500;\nloop invariant 0 <= y;\nloop invariant 0 <= z;\nloop invariant x >= 0;\nloop invariant x <= 500;\nloop invariant y <= z;\nloop invariant y <= x;\nloop invariant z <= x;\nloop invariant y <= x - 1;\nloop invariant z <= x - 1;\nloop invariant y <= x - z;\nloop invariant z <= x - y;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= z;\nloop invariant x >= 0;\nloop invariant x < 500;\nloop invariant (y == z) ==> (y <= x);\nloop invariant (y != z) ==> (y <= x);\nloop invariant (x < 500) ==> (y <= x);\nloop invariant (x < 500) ==> (z >= y);\nloop invariant (x == 500) ==> (y >= z);\nloop invariant (x == 500) ==> (x >= z);\nloop invariant (x == 500) ==> (x >= y);\nloop invariant (x == 500) ==> (y == z);\nloop invariant (x == 500) ==> (x == y);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant 0 <= y <= 500;\nloop invariant z >= y;\nloop invariant x + y >= z;\nloop invariant y <= z;\nloop invariant z >= x;\nloop invariant x + y >= z;\nloop invariant y >= x;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= z;\nloop invariant y >= x;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\n*/\n```",
            "```\n/*@\nloop invariant ! (z < y);\nloop invariant x <= 500;\nloop invariant 0 <= x <= 500;\nloop invariant 0 <= y <= 500;\nloop invariant 0 <= z <= 500;\nloop invariant y <= z ==> z >= y;\nloop invariant x < 500 ==> !(z < y);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant z <= y ==> z <= y;\nloop invariant x == 0 ==> z == y;\nloop invariant x > 0 ==> (z >= y && z <= y);\nloop invariant x == 500 ==> (z >= y && z <= y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 500;\n\n\nloop invariant i4: z <= y ==> z <= y;\n\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\nloop invariant (x - 1) <= z <= x;\nloop invariant (x - 1) <= z <= y;\nloop invariant (x - 1) <= y <= z;\nloop invariant (x - 1) <= x <= y;\nloop invariant (x - 1) <= y <= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 500;\n\n\n\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x < 500;\nloop invariant y <= z;\nloop invariant x == (y + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\n\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant z >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 500;\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant 0 <= y <= z;\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\nloop invariant (x >= 1) ==> (y <= z);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 500;\n\nloop invariant i3: (x >= 1) ==> (y <= z);\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant y >= (if x >= 0 || z > y then z else y);\nloop invariant z >= (if x >= 0 || z > y then z else y);\nloop invariant 0 <= x <= 500;\nloop invariant y >= (if x >= 0 || z > y then z else y);\nloop invariant z >= (if x >= 0 || z > y then z else y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 500;\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 500;\nloop invariant y <= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= z; loop invariant 0 <= x <= 500; loop invariant x >= z - y; loop invariant x >= z - (x - z) / 2; loop invariant x >= z - (x - z) * (x - z + 1) / 2; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) / 6; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) / 24; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) / 120; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) * (x + z + 3) / 720; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) * (x + z + 3) * (2 * x + z - 4) / 5040; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) * (x + z + 3) * (2 * x + z - 4) * (x + z + 5) / 40320; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) * (x + z + 3) * (2 * x + z - 4) * (x + z + 5) * (x + z + 7) / 362880; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) * (x + z + 3) * (2 * x + z - 4) * (x + z + 5) * (x + z + 7) * (2 * x + z - 8) / 3628800; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) * (x + z + 3) * (2 * x + z - 4) * (x + z + 5) * (x + z + 7) * (2 * x + z - 8) * (x + z + 9) / 39916800; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) * (x + z + 3) * (2 * x + z - 4) * (x + z + 5) * (x + z + 7) * (2 * x + z - 8) * (x + z + 9) * (x + z + 11) / 479001600;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 499;\nloop invariant 0 <= y <= 500;\nloop invariant 0 <= z <= 500;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant x >= (0 + y);\nloop invariant x >= (0 + z);\nloop invariant (y <= z) ==> (y <= x);\nloop invariant (y <= z) ==> (z <= x);\nloop invariant x >= (y + z - 1);\nloop invariant x >= (y + y);\nloop invariant x >= (z + z);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\n\n\n\nloop invariant i4: x >= 0;\n\n\n\n\n\n\n\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant y >= z;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant z >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 500;\n\n\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant y <= z ==> x >= y;\nloop invariant x < 500 ==> x <= 500;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 500;\n\n\n\nloop invariant i5: x < 500 ==> x <= 500;\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x < 500;\nloop invariant 0 <= y;\nloop invariant 0 <= z;\nloop invariant x >= 0;\nloop invariant x <= 500;\nloop invariant y <= z;\nloop invariant y <= x;\nloop invariant z <= x;\nloop invariant y <= x - 1;\nloop invariant z <= x - 1;\nloop invariant y <= x - z;\nloop invariant z <= x - y;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\nloop invariant z <= x - z;\nloop invariant y <= x - y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\n\n\n\nloop invariant i4: x >= 0;\nloop invariant i5: x <= 500;\n\n\n\n\n\n\n\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= z;\nloop invariant x >= 0;\nloop invariant x < 500;\nloop invariant (y == z) ==> (y <= x);\nloop invariant (y != z) ==> (y <= x);\nloop invariant (x < 500) ==> (y <= x);\nloop invariant (x < 500) ==> (z >= y);\nloop invariant (x == 500) ==> (y >= z);\nloop invariant (x == 500) ==> (x >= z);\nloop invariant (x == 500) ==> (x >= y);\nloop invariant (x == 500) ==> (y == z);\nloop invariant (x == 500) ==> (x == y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\n\nloop invariant i2: x >= 0;\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 500;\nloop invariant 0 <= y <= 500;\nloop invariant z >= y;\nloop invariant x + y >= z;\nloop invariant y <= z;\nloop invariant z >= x;\nloop invariant x + y >= z;\nloop invariant y >= x;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= z;\nloop invariant y >= x;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\nloop invariant z >= x;\nloop invariant x >= y;\nloop invariant y >= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 500;\n\n\n\n\n\n\n\n\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant ! (z < y);\nloop invariant x <= 500;\nloop invariant 0 <= x <= 500;\nloop invariant 0 <= y <= 500;\nloop invariant 0 <= z <= 500;\nloop invariant y <= z ==> z >= y;\nloop invariant x < 500 ==> !(z < y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\n\nloop invariant i2: x <= 500;\nloop invariant i3: 0 <= x <= 500;\n\n\nloop invariant i6: y <= z ==> z >= y;\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 31: unexpected token 'x'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 500;\nloop invariant i2: y >= 0;\nloop invariant i3: z >= 0;\nloop invariant i4: z <= y ==> z <= y;\nloop invariant i5: x == 0 ==> z == y;\nloop invariant i6: x > 0 ==> (z >= y && z <= y);\nloop invariant i7: x == 500 ==> (z >= y && z <= y);\nloop invariant i8: (x - 1) <= y <= x;\nloop invariant i9: (x - 1) <= z <= x;\nloop invariant i10: (x - 1) <= y <= z;\nloop invariant i11: (x - 1) <= z <= y;\nloop invariant i12: (x - 1) <= x <= y;\nloop invariant i13: 0 <= x < 500;\nloop invariant i14: y <= z;\nloop invariant i15: x == (y + (y - 1) * y / 2);\nloop invariant i16: z >= y;\nloop invariant i17: 0 <= y <= z;\nloop invariant i18: (x >= 1) ==> (y <= z);\nloop invariant i19: y >= (if x >= 0 || z > y then z else y);\nloop invariant i20: z >= (if x >= 0 || z > y then z else y);\nloop invariant i21: 1 <= x <= 500;\nloop invariant i22: 0 <= y <= z; loop invariant 0 <= x <= 500; loop invariant x >= z - y; loop invariant x >= z - (x - z) / 2; loop invariant x >= z - (x - z) * (x - z + 1) / 2; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) / 6; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) / 24; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) / 120; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) * (x + z + 3) / 720; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) * (x + z + 3) * (2 * x + z - 4) / 5040; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) * (x + z + 3) * (2 * x + z - 4) * (x + z + 5) / 40320; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) * (x + z + 3) * (2 * x + z - 4) * (x + z + 5) * (x + z + 7) / 362880; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) * (x + z + 3) * (2 * x + z - 4) * (x + z + 5) * (x + z + 7) * (2 * x + z - 8) / 3628800; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) * (x + z + 3) * (2 * x + z - 4) * (x + z + 5) * (x + z + 7) * (2 * x + z - 8) * (x + z + 9) / 39916800; loop invariant x >= z - (x - z) * (x - z + 1) * (2 * x - z - 1) * (x + z + 1) * (3 * x + z - 2) * (x + z + 3) * (2 * x + z - 4) * (x + z + 5) * (x + z + 7) * (2 * x + z - 8) * (x + z + 9) * (x + z + 11) / 479001600;\nloop invariant i23: 0 <= x <= 499;\nloop invariant i24: 0 <= y <= 500;\nloop invariant i25: 0 <= z <= 500;\nloop invariant i26: x >= 0;\nloop invariant i27: x >= (0 + y);\nloop invariant i28: x >= (0 + z);\nloop invariant i29: (y <= z) ==> (y <= x);\nloop invariant i30: (y <= z) ==> (z <= x);\nloop invariant i31: x >= (y + z - 1);\nloop invariant i32: x >= (y + y);\nloop invariant i33: x >= (z + z);\nloop invariant i34: y >= z;\nloop invariant i35: x >= 1;\nloop invariant i36: y <= z ==> x >= y;\nloop invariant i37: x < 500 ==> x <= 500;\nloop invariant i38: 0 <= y;\nloop invariant i39: 0 <= z;\nloop invariant i40: x <= 500;\nloop invariant i41: y <= x;\nloop invariant i42: z <= x;\nloop invariant i43: y <= x - 1;\nloop invariant i44: z <= x - 1;\nloop invariant i45: y <= x - z;\nloop invariant i46: z <= x - y;\nloop invariant i47: y <= x - y;\nloop invariant i48: z <= x - z;\nloop invariant i49: x < 500;\nloop invariant i50: (y == z) ==> (y <= x);\nloop invariant i51: (y != z) ==> (y <= x);\nloop invariant i52: (x < 500) ==> (y <= x);\nloop invariant i53: (x < 500) ==> (z >= y);\nloop invariant i54: (x == 500) ==> (y >= z);\nloop invariant i55: (x == 500) ==> (x >= z);\nloop invariant i56: (x == 500) ==> (x >= y);\nloop invariant i57: (x == 500) ==> (y == z);\nloop invariant i58: (x == 500) ==> (x == y);\nloop invariant i59: x + y >= z;\nloop invariant i60: z >= x;\nloop invariant i61: y >= x;\nloop invariant i62: x >= y;\nloop invariant i63: x >= z;\nloop invariant i64: ! (z < y);\nloop invariant i65: y <= z ==> z >= y;\nloop invariant i66: x < 500 ==> !(z < y);\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
        "combined_annotation_num_solver_calls": 15,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main()\n{\n    int x = 0;\n    int y, z;\n\n    /*@\nloop invariant i1: 0 <= x <= 500;\n\n\nloop invariant i4: z <= y ==> z <= y;\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i18: (x >= 1) ==> (y <= z);\n\n\n\n\n\n\n\nloop invariant i26: x >= 0;\n\n\n\n\n\n\n\n\n\n\nloop invariant i37: x < 500 ==> x <= 500;\n\n\nloop invariant i40: x <= 500;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i65: y <= z ==> z >= y;\n\n*/\nwhile(x < 500) {\n       x += 1;\n       if( z <= y) {\n          y = z;\n       }\n    }\n\n    {;\n//@ assert(z >= y);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c"
        ],
        "skipped": [],
        "total": 31,
        "success_count": 27,
        "failure_count": 4,
        "success_rate": 0.8709677419354839
    }
}