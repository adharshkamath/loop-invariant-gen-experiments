{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/74.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  while (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4294967295;\nloop invariant 0 <= y <= 4294967295;\nloop invariant z == (36 * y + c);\nloop invariant c == (c % 36);\nloop invariant y == (y % 128);\nloop invariant z == (36 * (y % 128) + c);\nloop invariant (c < 36) ==> (z >= 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 127;\nloop invariant 0 <= c <= 36;\nloop invariant c <= (36 * y);\nloop invariant z >= (36 * y);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c < 36;\nloop invariant 0 <= z <= 36 * y;\nloop invariant z == (36 * y) + c;\nloop invariant c == 0;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant y > 0;\nloop invariant z >= (36 * y);\nloop invariant z <= 36 * y;\nloop invariant c >= 0;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant c != 36;\nloop invariant c == (36 * y) - z;\nloop invariant z <= (36 * y);\nloop invariant z >= 0;\nloop invariant z == 0;\nloop invariant z == (c + (36 * y));\nloop invariant c == (z - (36 * y));\nloop invariant z <= (36 * y) + c;\nloop invariant z >= (36 * y) + c;\nloop invariant z == (36 * y) + (c - (36 * y));\nloop invariant c == (z - (36 * y));\nloop invariant c == (z - (36 * y)) + (36 * y);\nloop invariant c == z;\nloop invariant z == c;\nloop invariant c == (36 * y) - (z - c);\nloop invariant c == (z - (36 * y)) + c;\nloop invariant c == (z - (36 * y)) + (36 * y) - c;\nloop invariant c == (z - (36 * y)) + (36 * y) - c + (36 * y);\nloop invariant c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y);\nloop invariant c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y);\nloop invariant c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y) - (36 * y);\nloop invariant c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y);\nloop invariant c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y);\nloop invariant c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y);\nloop invariant c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y);\nloop invariant c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y);\nloop invariant c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c < 36;\nloop invariant z >= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z = 36 * y + c;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 127;\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= (36 * y);\nloop invariant 0 <= (x1 + x2 + x3) <= (3 * y);\nloop invariant 0 <= (x1 * x2 * x3) <= (y * y * y);\nloop invariant 0 <= (x1 * x2 + x1 * x3 + x2 * x3) <= (3 * y * y);\nloop invariant 0 <= (x1 + x2) <= (2 * y);\nloop invariant 0 <= (x1 * x2) <= (y * y);\nloop invariant 0 <= (x1 + x3) <= (2 * y);\nloop invariant 0 <= (x1 * x3) <= (y * y);\nloop invariant 0 <= (x2 + x3) <= (2 * y);\nloop invariant 0 <= (x2 * x3) <= (y * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3) <= (4 * y * y + y * y * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3) <= (5 * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y) <= (6 * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1) <= (7 * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c) <= (8 * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c + z) <= (9 * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c + z + x1 * x2 * x3) <= (10 * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c + z + x1 * x2 * x3 + x1 * x2) <= (11 * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c + z + x1 * x2 * x3 + x1 * x3) <= (12 * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c + z + x1 * x2 * x3 + x2 * x3) <= (13 * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c + z + x1 * x2 * x3 + x1 + x2) <= (14 * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c + z + x1 * x2 * x3 + x1 + x3) <= (15 * y);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant (c < 36) ==> (z >= 36 * y);\nloop invariant (c >= 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (z <= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= (1352 * y);\nloop invariant z == (36 * y + c);\nloop invariant c == (z - 36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant y >= (c / 36);\nloop invariant z >= (c + (c * c) / 2) + (36 * (y - c / 36));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 36 * y;\nloop invariant 36 * y <= 4351;\nloop invariant 0 <= y <= 127;\nloop invariant 0 <= x1 <= 127;\nloop invariant 0 <= x2 <= 127;\nloop invariant 0 <= x3 <= 127;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\n*/\n```",
            "```\n/*@\nloop invariant c >= 0;\nloop invariant c < 36;\nloop invariant z >= 36 * y;\nloop invariant z < (36 * y) + 36;\nloop invariant z >= 0;\nloop invariant z <= (36 * y) + 36;\nloop invariant c >= 0 ==> z >= (36 * y);\nloop invariant c >= 0 ==> z <= (36 * y) + 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= (36 * y) + 36;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 127;\nloop invariant c >= 0;\nloop invariant c < 36;\nloop invariant z >= 0;\nloop invariant z <= 4680;\nloop invariant z == (36 * y + c);\nloop invariant c == (y - 127);\n*/\n```",
            "```\n/*@\nloop invariant ( c <= 36 && c >= 0); loop invariant ( z <= (36 * (y + 1)) && z >= (36 * y) ); loop invariant ( y <= 127 && y >= 0 ); loop invariant ( c <= 36 ); loop invariant ( z <= (36 * (y + 1)) ); loop invariant ( z >= (36 * y) );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 127;\nloop invariant 0 <= z <= 4294967295;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c <= 36 ==> z == (36 * y) + c;\nloop invariant c > 36 ==> z >= 4294967295;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant z >= 36 * y;\nloop invariant c < 36 ==> z <= 36 * y + 35;\nloop invariant c < 36 ==> z >= 36 * y + c;\nloop invariant c < 36 ==> z >= 36 * y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= z <= 36 * y;\nloop invariant 0 <= c <= 36;\nloop invariant z == (36 * y + c);\nloop invariant (c < 36) ==> (z >= 0);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4294967295;\nloop invariant 0 <= y <= 4294967295;\nloop invariant z == (36 * y + c);\nloop invariant c == (c % 36);\nloop invariant y == (y % 128);\nloop invariant z == (36 * (y % 128) + c);\nloop invariant (c < 36) ==> (z >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: 0 <= z <= 4294967295;\nloop invariant i3: 0 <= y <= 4294967295;\nloop invariant i4: z == (36 * y + c);\n\n\n\nloop invariant i8: (c < 36) ==> (z >= 0);\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 127;\nloop invariant 0 <= c <= 36;\nloop invariant c <= (36 * y);\nloop invariant z >= (36 * y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: 0 <= c <= 36;\n\nloop invariant i4: z >= (36 * y);\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 27,
                "annotations": "```\n/*@\nloop invariant 0 <= c < 36;\nloop invariant 0 <= z <= 36 * y;\nloop invariant z == (36 * y) + c;\nloop invariant c == 0;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant y > 0;\nloop invariant z >= (36 * y);\nloop invariant z <= 36 * y;\nloop invariant c >= 0;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant c != 36;\nloop invariant c == (36 * y) - z;\nloop invariant z <= (36 * y);\nloop invariant z >= 0;\nloop invariant z == 0;\nloop invariant z == (c + (36 * y));\nloop invariant c == (z - (36 * y));\nloop invariant z <= (36 * y) + c;\nloop invariant z >= (36 * y) + c;\nloop invariant z == (36 * y) + (c - (36 * y));\nloop invariant c == (z - (36 * y));\nloop invariant c == (z - (36 * y)) + (36 * y);\nloop invariant c == z;\nloop invariant z == c;\nloop invariant c == (36 * y) - (z - c);\nloop invariant c == (z - (36 * y)) + c;\nloop invariant c == (z - (36 * y)) + (36 * y) - c;\nloop invariant c == (z - (36 * y)) + (36 * y) - c + (36 * y);\nloop invariant c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y);\nloop invariant c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y);\nloop invariant c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y) - (36 * y);\nloop invariant c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y);\nloop invariant c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y);\nloop invariant c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y);\nloop invariant c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y);\nloop invariant c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y);\nloop invariant c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\n\nloop invariant i3: z == (36 * y) + c;\n\nloop invariant i5: y >= 0;\nloop invariant i6: y >= 127;\nloop invariant i7: y > 0;\nloop invariant i8: z >= (36 * y);\n\nloop invariant i10: c >= 0;\n\n\n\n\n\nloop invariant i16: z >= 0;\n\nloop invariant i18: z == (c + (36 * y));\nloop invariant i19: c == (z - (36 * y));\nloop invariant i20: z <= (36 * y) + c;\nloop invariant i21: z >= (36 * y) + c;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c < 36;\nloop invariant z >= 36 * y;\nloop invariant z <= 36 * y + c;\nloop invariant z = 36 * y + c;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: z >= 36 * y;\nloop invariant i3: z <= 36 * y + c;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 127;\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= (36 * y);\nloop invariant 0 <= (x1 + x2 + x3) <= (3 * y);\nloop invariant 0 <= (x1 * x2 * x3) <= (y * y * y);\nloop invariant 0 <= (x1 * x2 + x1 * x3 + x2 * x3) <= (3 * y * y);\nloop invariant 0 <= (x1 + x2) <= (2 * y);\nloop invariant 0 <= (x1 * x2) <= (y * y);\nloop invariant 0 <= (x1 + x3) <= (2 * y);\nloop invariant 0 <= (x1 * x3) <= (y * y);\nloop invariant 0 <= (x2 + x3) <= (2 * y);\nloop invariant 0 <= (x2 * x3) <= (y * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3) <= (4 * y * y + y * y * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3) <= (5 * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y) <= (6 * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1) <= (7 * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c) <= (8 * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c + z) <= (9 * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c + z + x1 * x2 * x3) <= (10 * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c + z + x1 * x2 * x3 + x1 * x2) <= (11 * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c + z + x1 * x2 * x3 + x1 * x3) <= (12 * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c + z + x1 * x2 * x3 + x2 * x3) <= (13 * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c + z + x1 * x2 * x3 + x1 + x2) <= (14 * y);\nloop invariant 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c + z + x1 * x2 * x3 + x1 + x3) <= (15 * y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: 0 <= c <= 36;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant (c < 36) ==> (z >= 36 * y);\nloop invariant (c >= 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (z <= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant (c >= 36) ==> (z >= 36 * y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\nloop invariant i2: (c < 36) ==> (z >= 36 * y);\n\n\nloop invariant i5: (c >= 36) ==> (z >= 36 * y);\nloop invariant i6: (c < 36) ==> (c <= 36);\nloop invariant i7: (c < 36) ==> (z >= 36 * y + c - 1);\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= (1352 * y);\nloop invariant z == (36 * y + c);\nloop invariant c == (z - 36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= (1352 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\nloop invariant i3: z == (36 * y + c);\nloop invariant i4: c == (z - 36 * y);\nloop invariant i5: c >= 0;\nloop invariant i6: c <= 36;\nloop invariant i7: z >= 0;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant y >= (c / 36);\nloop invariant z >= (c + (c * c) / 2) + (36 * (y - c / 36));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 36 * y;\nloop invariant 36 * y <= 4351;\nloop invariant 0 <= y <= 127;\nloop invariant 0 <= x1 <= 127;\nloop invariant 0 <= x2 <= 127;\nloop invariant 0 <= x3 <= 127;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4351;\nloop invariant 0 <= c <= 35;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant c >= 0;\nloop invariant c < 36;\nloop invariant z >= 36 * y;\nloop invariant z < (36 * y) + 36;\nloop invariant z >= 0;\nloop invariant z <= (36 * y) + 36;\nloop invariant c >= 0 ==> z >= (36 * y);\nloop invariant c >= 0 ==> z <= (36 * y) + 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= (36 * y) + 36;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: c >= 0;\n\nloop invariant i3: z >= 36 * y;\n\nloop invariant i5: z >= 0;\n\nloop invariant i7: c >= 0 ==> z >= (36 * y);\n\nloop invariant i9: c < 36 ==> z >= 0;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 127;\nloop invariant c >= 0;\nloop invariant c < 36;\nloop invariant z >= 0;\nloop invariant z <= 4680;\nloop invariant z == (36 * y + c);\nloop invariant c == (y - 127);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: c >= 0;\n\nloop invariant i4: z >= 0;\n\nloop invariant i6: z == (36 * y + c);\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant ( c <= 36 && c >= 0); loop invariant ( z <= (36 * (y + 1)) && z >= (36 * y) ); loop invariant ( y <= 127 && y >= 0 ); loop invariant ( c <= 36 ); loop invariant ( z <= (36 * (y + 1)) ); loop invariant ( z >= (36 * y) );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: ( c <= 36 && c >= 0); loop invariant ( z <= (36 * (y + 1)) && z >= (36 * y) ); loop invariant ( y <= 127 && y >= 0 ); loop invariant ( c <= 36 ); loop invariant ( z <= (36 * (y + 1)) ); loop invariant ( z >= (36 * y) );\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 127;\nloop invariant 0 <= z <= 4294967295;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c <= 36 ==> z == (36 * y) + c;\nloop invariant c > 36 ==> z >= 4294967295;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: 0 <= z <= 4294967295;\nloop invariant i3: c == 0 ==> z == 36 * y;\nloop invariant i4: c <= 36 ==> z == (36 * y) + c;\nloop invariant i5: c > 36 ==> z >= 4294967295;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant z >= 36 * y;\nloop invariant c < 36 ==> z <= 36 * y + 35;\nloop invariant c < 36 ==> z >= 36 * y + c;\nloop invariant c < 36 ==> z >= 36 * y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: z >= 36 * y;\n\nloop invariant i4: c < 36 ==> z >= 36 * y + c;\nloop invariant i5: c < 36 ==> z >= 36 * y;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= z <= 36 * y;\nloop invariant 0 <= c <= 36;\nloop invariant z == (36 * y + c);\nloop invariant (c < 36) ==> (z >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: 0 <= c <= 36;\nloop invariant i3: z == (36 * y + c);\nloop invariant i4: (c < 36) ==> (z >= 0);\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 75: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 35;\nloop invariant i2: 0 <= z <= 4294967295;\nloop invariant i3: 0 <= y <= 4294967295;\nloop invariant i4: z == (36 * y + c);\nloop invariant i5: c == (c % 36);\nloop invariant i6: y == (y % 128);\nloop invariant i7: z == (36 * (y % 128) + c);\nloop invariant i8: (c < 36) ==> (z >= 0);\nloop invariant i9: 0 <= y <= 127;\nloop invariant i10: 0 <= c <= 36;\nloop invariant i11: c <= (36 * y);\nloop invariant i12: z >= (36 * y);\nloop invariant i13: 0 <= c < 36;\nloop invariant i14: 0 <= z <= 36 * y;\nloop invariant i15: z == (36 * y) + c;\nloop invariant i16: c == 0;\nloop invariant i17: y >= 0;\nloop invariant i18: y >= 127;\nloop invariant i19: y > 0;\nloop invariant i20: z <= 36 * y;\nloop invariant i21: c >= 0;\nloop invariant i22: c < 36;\nloop invariant i23: c <= 35;\nloop invariant i24: c != 36;\nloop invariant i25: c == (36 * y) - z;\nloop invariant i26: z <= (36 * y);\nloop invariant i27: z >= 0;\nloop invariant i28: z == 0;\nloop invariant i29: z == (c + (36 * y));\nloop invariant i30: c == (z - (36 * y));\nloop invariant i31: z <= (36 * y) + c;\nloop invariant i32: z >= (36 * y) + c;\nloop invariant i33: z == (36 * y) + (c - (36 * y));\nloop invariant i34: c == (z - (36 * y)) + (36 * y);\nloop invariant i35: c == z;\nloop invariant i36: z == c;\nloop invariant i37: c == (36 * y) - (z - c);\nloop invariant i38: c == (z - (36 * y)) + c;\nloop invariant i39: c == (z - (36 * y)) + (36 * y) - c;\nloop invariant i40: c == (z - (36 * y)) + (36 * y) - c + (36 * y);\nloop invariant i41: c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y);\nloop invariant i42: c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y);\nloop invariant i43: c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y) - (36 * y);\nloop invariant i44: c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y);\nloop invariant i45: c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y);\nloop invariant i46: c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y);\nloop invariant i47: c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y);\nloop invariant i48: c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y);\nloop invariant i49: c == (z - (36 * y)) + (36 * y) - c + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y) + (36 * y) - (36 * y);\nloop invariant i50: z >= 36 * y;\nloop invariant i51: z <= 36 * y + c;\nloop invariant i52: z = 36 * y + c;\nloop invariant i53: 0 <= z <= (36 * y);\nloop invariant i54: 0 <= (x1 + x2 + x3) <= (3 * y);\nloop invariant i55: 0 <= (x1 * x2 * x3) <= (y * y * y);\nloop invariant i56: 0 <= (x1 * x2 + x1 * x3 + x2 * x3) <= (3 * y * y);\nloop invariant i57: 0 <= (x1 + x2) <= (2 * y);\nloop invariant i58: 0 <= (x1 * x2) <= (y * y);\nloop invariant i59: 0 <= (x1 + x3) <= (2 * y);\nloop invariant i60: 0 <= (x1 * x3) <= (y * y);\nloop invariant i61: 0 <= (x2 + x3) <= (2 * y);\nloop invariant i62: 0 <= (x2 * x3) <= (y * y);\nloop invariant i63: 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3) <= (4 * y * y + y * y * y);\nloop invariant i64: 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3) <= (5 * y);\nloop invariant i65: 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y) <= (6 * y);\nloop invariant i66: 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1) <= (7 * y);\nloop invariant i67: 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c) <= (8 * y);\nloop invariant i68: 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c + z) <= (9 * y);\nloop invariant i69: 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c + z + x1 * x2 * x3) <= (10 * y);\nloop invariant i70: 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c + z + x1 * x2 * x3 + x1 * x2) <= (11 * y);\nloop invariant i71: 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c + z + x1 * x2 * x3 + x1 * x3) <= (12 * y);\nloop invariant i72: 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c + z + x1 * x2 * x3 + x2 * x3) <= (13 * y);\nloop invariant i73: 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c + z + x1 * x2 * x3 + x1 + x2) <= (14 * y);\nloop invariant i74: 0 <= (x1 * x2 * x3 + x1 * x2 + x1 * x3 + x2 * x3 + x1 + x2 + x3 + y + 1 + c + z + x1 * x2 * x3 + x1 + x3) <= (15 * y);\nloop invariant i75: (c < 36) ==> (z >= 36 * y);\nloop invariant i76: (c >= 36) ==> (z >= 0);\nloop invariant i77: (c < 36) ==> (z <= 36 * y + c - 1);\nloop invariant i78: (c >= 36) ==> (z >= 36 * y);\nloop invariant i79: (c < 36) ==> (c <= 36);\nloop invariant i80: (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant i81: 0 <= z <= (1352 * y);\nloop invariant i82: c == (z - 36 * y);\nloop invariant i83: c <= 36;\nloop invariant i84: z <= (1352 * y);\nloop invariant i85: y >= (c / 36);\nloop invariant i86: z >= (c + (c * c) / 2) + (36 * (y - c / 36));\nloop invariant i87: 36 * y <= 4351;\nloop invariant i88: 0 <= x1 <= 127;\nloop invariant i89: 0 <= x2 <= 127;\nloop invariant i90: 0 <= x3 <= 127;\nloop invariant i91: 0 <= z <= 4351;\nloop invariant i92: z < (36 * y) + 36;\nloop invariant i93: z <= (36 * y) + 36;\nloop invariant i94: c >= 0 ==> z >= (36 * y);\nloop invariant i95: c >= 0 ==> z <= (36 * y) + 36;\nloop invariant i96: c < 36 ==> z >= 0;\nloop invariant i97: c < 36 ==> z <= (36 * y) + 36;\nloop invariant i98: z <= 4680;\nloop invariant i99: c == (y - 127);\nloop invariant i100: ( c <= 36 && c >= 0); loop invariant ( z <= (36 * (y + 1)) && z >= (36 * y) ); loop invariant ( y <= 127 && y >= 0 ); loop invariant ( c <= 36 ); loop invariant ( z <= (36 * (y + 1)) ); loop invariant ( z >= (36 * y) );\nloop invariant i101: c == 0 ==> z == 36 * y;\nloop invariant i102: c <= 36 ==> z == (36 * y) + c;\nloop invariant i103: c > 36 ==> z >= 4294967295;\nloop invariant i104: c < 36 ==> z <= 36 * y + 35;\nloop invariant i105: c < 36 ==> z >= 36 * y + c;\nloop invariant i106: c < 36 ==> z >= 36 * y;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 40,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: 0 <= z <= 4294967295;\nloop invariant i3: 0 <= y <= 4294967295;\nloop invariant i4: z == (36 * y + c);\n\n\n\nloop invariant i8: (c < 36) ==> (z >= 0);\n\nloop invariant i10: 0 <= c <= 36;\nloop invariant i11: c <= (36 * y);\nloop invariant i12: z >= (36 * y);\n\n\nloop invariant i15: z == (36 * y) + c;\n\nloop invariant i17: y >= 0;\nloop invariant i18: y >= 127;\nloop invariant i19: y > 0;\n\nloop invariant i21: c >= 0;\n\n\n\n\n\nloop invariant i27: z >= 0;\n\nloop invariant i29: z == (c + (36 * y));\nloop invariant i30: c == (z - (36 * y));\nloop invariant i31: z <= (36 * y) + c;\nloop invariant i32: z >= (36 * y) + c;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i50: z >= 36 * y;\nloop invariant i51: z <= 36 * y + c;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i75: (c < 36) ==> (z >= 36 * y);\nloop invariant i76: (c >= 36) ==> (z >= 0);\n\nloop invariant i78: (c >= 36) ==> (z >= 36 * y);\nloop invariant i79: (c < 36) ==> (c <= 36);\nloop invariant i80: (c < 36) ==> (z >= 36 * y + c - 1);\nloop invariant i81: 0 <= z <= (1352 * y);\nloop invariant i82: c == (z - 36 * y);\nloop invariant i83: c <= 36;\nloop invariant i84: z <= (1352 * y);\nloop invariant i85: y >= (c / 36);\n\n\n\n\n\n\n\nloop invariant i93: z <= (36 * y) + 36;\nloop invariant i94: c >= 0 ==> z >= (36 * y);\nloop invariant i95: c >= 0 ==> z <= (36 * y) + 36;\nloop invariant i96: c < 36 ==> z >= 0;\nloop invariant i97: c < 36 ==> z <= (36 * y) + 36;\n\n\nloop invariant i100: ( c <= 36 && c >= 0); loop invariant ( z <= (36 * (y + 1)) && z >= (36 * y) ); loop invariant ( y <= 127 && y >= 0 ); loop invariant ( c <= 36 ); loop invariant ( z <= (36 * (y + 1)) ); loop invariant ( z >= (36 * y) );\nloop invariant i101: c == 0 ==> z == 36 * y;\nloop invariant i102: c <= 36 ==> z == (36 * y) + c;\nloop invariant i103: c > 36 ==> z >= 4294967295;\nloop invariant i104: c < 36 ==> z <= 36 * y + 35;\nloop invariant i105: c < 36 ==> z >= 36 * y + c;\nloop invariant i106: c < 36 ==> z >= 36 * y;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c"
        ],
        "skipped": [],
        "total": 62,
        "success_count": 53,
        "failure_count": 9,
        "success_rate": 0.8548387096774194
    }
}