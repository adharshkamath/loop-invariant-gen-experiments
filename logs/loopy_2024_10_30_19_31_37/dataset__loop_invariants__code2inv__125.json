{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/125.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  while ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y + 1;\nloop invariant x <= i;\nloop invariant y >= j - x + 1;\nloop invariant y <= j;\nloop invariant x <= y + 1;\nloop invariant y <= x + 1;\nloop invariant x <= i - y + 1;\nloop invariant y <= j - x + 1;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant x <= i;\nloop invariant y >= 0;\nloop invariant y <= j;\nloop invariant x == i - j + y;\nloop invariant x >= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i;\nloop invariant x == i - j + y;\nloop invariant x >= j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x - y = i - j;\nloop invariant x - y + 1 = j - i;\nloop invariant x - y + 2 = k - i;\nloop invariant x - y + 3 = l - i;\nloop invariant x - y + 4 = m - i;\nloop invariant x - y + 5 = n - i;\nloop invariant x - y + 6 = o - i;\nloop invariant x - y + 7 = p - i;\nloop invariant x - y + 8 = q - i;\nloop invariant x - y + 9 = r - i;\nloop invariant x - y + 10 = s - i;\nloop invariant x - y + 11 = t - i;\nloop invariant x - y + 12 = u - i;\nloop invariant x - y + 13 = v - i;\nloop invariant x - y + 14 = w - i;\nloop invariant x - y + 15 = x - i;\nloop invariant x - y + 16 = y - i;\nloop invariant x - y + 17 = z - i;\nloop invariant x - y + 18 = a - i;\nloop invariant x - y + 19 = b - i;\nloop invariant x - y + 20 = c - i;\nloop invariant x - y + 21 = d - i;\nloop invariant x - y + 22 = e - i;\nloop invariant x - y + 23 = f - i;\nloop invariant x - y + 24 = g - i;\nloop invariant x - y + 25 = h - i;\nloop invariant x - y + 26 = i - i;\nloop invariant x - y + 27 = j - i;\nloop invariant x - y + 28 = k - i;\nloop invariant x - y + 29 = l - i;\nloop invariant x - y + 30 = m - i;\nloop invariant x - y + 31 = n - i;\nloop invariant x - y + 32 = o - i;\nloop invariant x - y + 33 = p - i;\nloop invariant x - y + 34 = q - i;\nloop invariant x - y + 35 = r - i;\nloop invariant x - y + 36 = s - i;\nloop invariant x - y + 37 = t - i;\nloop invariant x - y + 38 = u - i;\nloop invariant x - y + 39 = v - i;\nloop invariant x - y + 40 = w - i;\nloop invariant x - y + 41 = x - i;\nloop invariant x - y + 42 = y - i;\nloop invariant x - y + 43 = z - i;\nloop invariant x - y + 44 = a - i;\nloop invariant x - y + 45 = b - i;\nloop invariant x - y + 46 = c - i;\nloop invariant x - y + 47 = d - i;\nloop invariant x - y + 48 = e - i;\nloop invariant x - y + 49 = f - i;\nloop invariant x - y + 50 = g - i;\nloop invariant x - y + 51 = h - i;\nloop invariant x - y + 52 = i - i;\nloop invariant x - y + 53 = j - i;\nloop invariant x - y + 54 = k - i;\nloop invariant x - y + 55 = l - i;\nloop invariant x - y + 56 = m - i;\nloop invariant x - y + 57 = n - i;\nloop invariant x - y + 58 = o - i;\nloop invariant x - y + 59 = p - i;\nloop invariant x - y + 60 = q - i;\nloop invariant x - y + 61 = r - i;\nloop invariant x - y + 62 = s - i;\nloop invariant x - y + 63 = t - i;\nloop invariant x - y + 64 = u - i;\nloop invariant x - y + 65 = v - i;\nloop invariant x - y + 66 = w - i;\nloop invariant x - y + 67 = x - i;\nloop invariant x - y + 68 = y - i;\nloop invariant x - y + 69 = z - i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= j - y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i; loop invariant 0 <= y <= j; loop invariant i >= j; loop invariant x >= i - y; loop invariant y >= 0; loop invariant x >= 0; loop invariant y >= j; loop invariant x >= j; loop invariant x >= y; loop invariant y >= 0; loop invariant y >= x; loop invariant x >= 0; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant y <= i - x;\nloop invariant i <= j + y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant i <= j;\nloop invariant x + y <= i + j;\nloop invariant x <= i + j - y;\nloop invariant y <= j + x - i;\nloop invariant x + y <= i + j;\n*/\n```",
            "```\n/*@\nloop invariant y < i;\nloop invariant x < i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant y >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant y >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant y >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant y >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant y >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant y >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant y >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant y >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant y >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant y >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant y == (j - x);\nloop invariant i >= 0;\nloop invariant x >= 0;\nloop invariant j >= 0;\nloop invariant y >= 0;\nloop invariant (! (x != 0)) ==> (y == 0);\nloop invariant (! (x != 0)) ==> (i == j);\nloop invariant (! (x != 0)) ==> (y >= 0);\nloop invariant (! (x != 0)) ==> (y <= j);\nloop invariant (! (x != 0)) ==> (i >= 0);\nloop invariant (! (x != 0)) ==> (i <= j);\nloop invariant (! (x != 0)) ==> (x >= 0);\nloop invariant (! (x != 0)) ==> (x <= i);\nloop invariant (! (x != 0)) ==> (x == j - i);\nloop invariant (! (x != 0)) ==> (y == x);\nloop invariant (! (x != 0)) ==> (y == j - i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (x == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= y;\nloop invariant x <= i + 1;\nloop invariant y <= j + 1;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= 0 ==> x <= i;\nloop invariant y >= 0 ==> y <= j;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y + 1;\nloop invariant x <= i;\nloop invariant y >= j - x + 1;\nloop invariant y <= j;\nloop invariant x <= y + 1;\nloop invariant y <= x + 1;\nloop invariant x <= i - y + 1;\nloop invariant y <= j - x + 1;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - y;\nloop invariant y >= j - x;\nloop invariant x <= i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\nloop invariant i4: x <= i;\nloop invariant i5: y <= j;\n\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant x <= i;\nloop invariant y >= 0;\nloop invariant y <= j;\nloop invariant x == i - j + y;\nloop invariant x >= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i;\nloop invariant x == i - j + y;\nloop invariant x >= j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\nloop invariant y != 0 ==> i != j;\nloop invariant x != 0 ==> i != j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\nloop invariant i2: x <= i;\n\nloop invariant i4: y <= j;\nloop invariant i5: x == i - j + y;\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j;\nloop invariant y == 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\nloop invariant i7: x <= i;\nloop invariant i8: y <= j;\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 72,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x - y = i - j;\nloop invariant x - y + 1 = j - i;\nloop invariant x - y + 2 = k - i;\nloop invariant x - y + 3 = l - i;\nloop invariant x - y + 4 = m - i;\nloop invariant x - y + 5 = n - i;\nloop invariant x - y + 6 = o - i;\nloop invariant x - y + 7 = p - i;\nloop invariant x - y + 8 = q - i;\nloop invariant x - y + 9 = r - i;\nloop invariant x - y + 10 = s - i;\nloop invariant x - y + 11 = t - i;\nloop invariant x - y + 12 = u - i;\nloop invariant x - y + 13 = v - i;\nloop invariant x - y + 14 = w - i;\nloop invariant x - y + 15 = x - i;\nloop invariant x - y + 16 = y - i;\nloop invariant x - y + 17 = z - i;\nloop invariant x - y + 18 = a - i;\nloop invariant x - y + 19 = b - i;\nloop invariant x - y + 20 = c - i;\nloop invariant x - y + 21 = d - i;\nloop invariant x - y + 22 = e - i;\nloop invariant x - y + 23 = f - i;\nloop invariant x - y + 24 = g - i;\nloop invariant x - y + 25 = h - i;\nloop invariant x - y + 26 = i - i;\nloop invariant x - y + 27 = j - i;\nloop invariant x - y + 28 = k - i;\nloop invariant x - y + 29 = l - i;\nloop invariant x - y + 30 = m - i;\nloop invariant x - y + 31 = n - i;\nloop invariant x - y + 32 = o - i;\nloop invariant x - y + 33 = p - i;\nloop invariant x - y + 34 = q - i;\nloop invariant x - y + 35 = r - i;\nloop invariant x - y + 36 = s - i;\nloop invariant x - y + 37 = t - i;\nloop invariant x - y + 38 = u - i;\nloop invariant x - y + 39 = v - i;\nloop invariant x - y + 40 = w - i;\nloop invariant x - y + 41 = x - i;\nloop invariant x - y + 42 = y - i;\nloop invariant x - y + 43 = z - i;\nloop invariant x - y + 44 = a - i;\nloop invariant x - y + 45 = b - i;\nloop invariant x - y + 46 = c - i;\nloop invariant x - y + 47 = d - i;\nloop invariant x - y + 48 = e - i;\nloop invariant x - y + 49 = f - i;\nloop invariant x - y + 50 = g - i;\nloop invariant x - y + 51 = h - i;\nloop invariant x - y + 52 = i - i;\nloop invariant x - y + 53 = j - i;\nloop invariant x - y + 54 = k - i;\nloop invariant x - y + 55 = l - i;\nloop invariant x - y + 56 = m - i;\nloop invariant x - y + 57 = n - i;\nloop invariant x - y + 58 = o - i;\nloop invariant x - y + 59 = p - i;\nloop invariant x - y + 60 = q - i;\nloop invariant x - y + 61 = r - i;\nloop invariant x - y + 62 = s - i;\nloop invariant x - y + 63 = t - i;\nloop invariant x - y + 64 = u - i;\nloop invariant x - y + 65 = v - i;\nloop invariant x - y + 66 = w - i;\nloop invariant x - y + 67 = x - i;\nloop invariant x - y + 68 = y - i;\nloop invariant x - y + 69 = z - i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= j - y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i; loop invariant 0 <= y <= j; loop invariant i >= j; loop invariant x >= i - y; loop invariant y >= 0; loop invariant x >= 0; loop invariant y >= j; loop invariant x >= j; loop invariant x >= y; loop invariant y >= 0; loop invariant y >= x; loop invariant x >= 0; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant y <= i - x;\nloop invariant i <= j + y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i <= j + y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= i - x;\nloop invariant x <= i;\nloop invariant y <= j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\nloop invariant i5: x <= i;\nloop invariant i6: y <= j;\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant y <= j;\nloop invariant i <= j;\nloop invariant x + y <= i + j;\nloop invariant x <= i + j - y;\nloop invariant y <= j + x - i;\nloop invariant x + y <= i + j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\nloop invariant i2: y <= j;\n\nloop invariant i4: x + y <= i + j;\nloop invariant i5: x <= i + j - y;\nloop invariant i6: y <= j + x - i;\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant y < i;\nloop invariant x < i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant y >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant y >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant y >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant y >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant y >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant y >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant y >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant y >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant y >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant y >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= (i + j - (i - j) * ((i - j) + 1) / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x <= i - j;\nloop invariant y <= j - i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\nloop invariant i4: x <= i;\nloop invariant i5: y <= j;\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant y == (j - x);\nloop invariant i >= 0;\nloop invariant x >= 0;\nloop invariant j >= 0;\nloop invariant y >= 0;\nloop invariant (! (x != 0)) ==> (y == 0);\nloop invariant (! (x != 0)) ==> (i == j);\nloop invariant (! (x != 0)) ==> (y >= 0);\nloop invariant (! (x != 0)) ==> (y <= j);\nloop invariant (! (x != 0)) ==> (i >= 0);\nloop invariant (! (x != 0)) ==> (i <= j);\nloop invariant (! (x != 0)) ==> (x >= 0);\nloop invariant (! (x != 0)) ==> (x <= i);\nloop invariant (! (x != 0)) ==> (x == j - i);\nloop invariant (! (x != 0)) ==> (y == x);\nloop invariant (! (x != 0)) ==> (y == j - i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (x == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\nloop invariant (! (x != 0)) ==> (y == i);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i13: (! (x != 0)) ==> (x >= 0);\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= y;\nloop invariant x <= i + 1;\nloop invariant y <= j + 1;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= 0 ==> x <= i;\nloop invariant y >= 0 ==> y <= j;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\nloop invariant y >= 0 ==> y <= j + 1;\nloop invariant x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x <= i + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\nloop invariant i5: x <= i;\nloop invariant i6: y <= j;\n\nloop invariant i8: x <= i + 1;\nloop invariant i9: y <= j + 1;\nloop invariant i10: x >= 0 ==> x <= i + 1;\nloop invariant i11: y >= 0 ==> y <= j + 1;\nloop invariant i12: x >= 0 ==> x <= i;\nloop invariant i13: y >= 0 ==> y <= j;\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 40: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\nloop invariant i1: 0 <= x <= y;\nloop invariant i2: x >= 0;\nloop invariant i3: y >= 0;\nloop invariant i4: x <= i;\nloop invariant i5: y <= j;\nloop invariant i6: x >= i - y + 1;\nloop invariant i7: y >= j - x + 1;\nloop invariant i8: x <= y + 1;\nloop invariant i9: y <= x + 1;\nloop invariant i10: x <= i - y + 1;\nloop invariant i11: y <= j - x + 1;\nloop invariant i12: x >= i - y;\nloop invariant i13: y >= j - x;\nloop invariant i14: x == i - j + y;\nloop invariant i15: x >= j;\nloop invariant i16: y <= i;\nloop invariant i17: y != 0 ==> i != j;\nloop invariant i18: x != 0 ==> i != j;\nloop invariant i19: 0 <= x <= i;\nloop invariant i20: 0 <= y <= j;\nloop invariant i21: x == i - j;\nloop invariant i22: y == 0;\nloop invariant i23: x - y = i - j;\nloop invariant i24: x - y + 1 = j - i;\nloop invariant i25: x - y + 2 = k - i;\nloop invariant i26: x - y + 3 = l - i;\nloop invariant i27: x - y + 4 = m - i;\nloop invariant i28: x - y + 5 = n - i;\nloop invariant i29: x - y + 6 = o - i;\nloop invariant i30: x - y + 7 = p - i;\nloop invariant i31: x - y + 8 = q - i;\nloop invariant i32: x - y + 9 = r - i;\nloop invariant i33: x - y + 10 = s - i;\nloop invariant i34: x - y + 11 = t - i;\nloop invariant i35: x - y + 12 = u - i;\nloop invariant i36: x - y + 13 = v - i;\nloop invariant i37: x - y + 14 = w - i;\nloop invariant i38: x - y + 15 = x - i;\nloop invariant i39: x - y + 16 = y - i;\nloop invariant i40: x - y + 17 = z - i;\nloop invariant i41: x - y + 18 = a - i;\nloop invariant i42: x - y + 19 = b - i;\nloop invariant i43: x - y + 20 = c - i;\nloop invariant i44: x - y + 21 = d - i;\nloop invariant i45: x - y + 22 = e - i;\nloop invariant i46: x - y + 23 = f - i;\nloop invariant i47: x - y + 24 = g - i;\nloop invariant i48: x - y + 25 = h - i;\nloop invariant i49: x - y + 26 = i - i;\nloop invariant i50: x - y + 27 = j - i;\nloop invariant i51: x - y + 28 = k - i;\nloop invariant i52: x - y + 29 = l - i;\nloop invariant i53: x - y + 30 = m - i;\nloop invariant i54: x - y + 31 = n - i;\nloop invariant i55: x - y + 32 = o - i;\nloop invariant i56: x - y + 33 = p - i;\nloop invariant i57: x - y + 34 = q - i;\nloop invariant i58: x - y + 35 = r - i;\nloop invariant i59: x - y + 36 = s - i;\nloop invariant i60: x - y + 37 = t - i;\nloop invariant i61: x - y + 38 = u - i;\nloop invariant i62: x - y + 39 = v - i;\nloop invariant i63: x - y + 40 = w - i;\nloop invariant i64: x - y + 41 = x - i;\nloop invariant i65: x - y + 42 = y - i;\nloop invariant i66: x - y + 43 = z - i;\nloop invariant i67: x - y + 44 = a - i;\nloop invariant i68: x - y + 45 = b - i;\nloop invariant i69: x - y + 46 = c - i;\nloop invariant i70: x - y + 47 = d - i;\nloop invariant i71: x - y + 48 = e - i;\nloop invariant i72: x - y + 49 = f - i;\nloop invariant i73: x - y + 50 = g - i;\nloop invariant i74: x - y + 51 = h - i;\nloop invariant i75: x - y + 52 = i - i;\nloop invariant i76: x - y + 53 = j - i;\nloop invariant i77: x - y + 54 = k - i;\nloop invariant i78: x - y + 55 = l - i;\nloop invariant i79: x - y + 56 = m - i;\nloop invariant i80: x - y + 57 = n - i;\nloop invariant i81: x - y + 58 = o - i;\nloop invariant i82: x - y + 59 = p - i;\nloop invariant i83: x - y + 60 = q - i;\nloop invariant i84: x - y + 61 = r - i;\nloop invariant i85: x - y + 62 = s - i;\nloop invariant i86: x - y + 63 = t - i;\nloop invariant i87: x - y + 64 = u - i;\nloop invariant i88: x - y + 65 = v - i;\nloop invariant i89: x - y + 66 = w - i;\nloop invariant i90: x - y + 67 = x - i;\nloop invariant i91: x - y + 68 = y - i;\nloop invariant i92: x - y + 69 = z - i;\nloop invariant i93: x >= j - y;\nloop invariant i94: 0 <= x <= i; loop invariant 0 <= y <= j; loop invariant i >= j; loop invariant x >= i - y; loop invariant y >= 0; loop invariant x >= 0; loop invariant y >= j; loop invariant x >= j; loop invariant x >= y; loop invariant y >= 0; loop invariant y >= x; loop invariant x >= 0; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y; loop invariant y >= 0; loop invariant x >= y;\nloop invariant i95: 0 <= x;\nloop invariant i96: 0 <= y;\nloop invariant i97: y <= i - x;\nloop invariant i98: i <= j + y;\nloop invariant i99: i <= j;\nloop invariant i100: x + y <= i + j;\nloop invariant i101: x <= i + j - y;\nloop invariant i102: y <= j + x - i;\nloop invariant i103: y < i;\nloop invariant i104: x < i;\nloop invariant i105: x >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant i106: y >= (i + j - (i - j) * ((i - j) + 1) / 2);\nloop invariant i107: i >= 0;\nloop invariant i108: j >= 0;\nloop invariant i109: i <= x;\nloop invariant i110: j <= y;\nloop invariant i111: x >= y;\nloop invariant i112: x >= i - j;\nloop invariant i113: y >= j - i;\nloop invariant i114: x <= i - j;\nloop invariant i115: y <= j - i;\nloop invariant i116: y == (j - x);\nloop invariant i117: (! (x != 0)) ==> (y == 0);\nloop invariant i118: (! (x != 0)) ==> (i == j);\nloop invariant i119: (! (x != 0)) ==> (y >= 0);\nloop invariant i120: (! (x != 0)) ==> (y <= j);\nloop invariant i121: (! (x != 0)) ==> (i >= 0);\nloop invariant i122: (! (x != 0)) ==> (i <= j);\nloop invariant i123: (! (x != 0)) ==> (x >= 0);\nloop invariant i124: (! (x != 0)) ==> (x <= i);\nloop invariant i125: (! (x != 0)) ==> (x == j - i);\nloop invariant i126: (! (x != 0)) ==> (y == x);\nloop invariant i127: (! (x != 0)) ==> (y == j - i);\nloop invariant i128: (! (x != 0)) ==> (y == i);\nloop invariant i129: (! (x != 0)) ==> (x == i);\nloop invariant i130: x <= i + 1;\nloop invariant i131: y <= j + 1;\nloop invariant i132: x >= 0 ==> x <= i + 1;\nloop invariant i133: y >= 0 ==> y <= j + 1;\nloop invariant i134: x >= 0 ==> x <= i;\nloop invariant i135: y >= 0 ==> y <= j;\nloop invariant i136: x >= 0 ==> x >= y;\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 84,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\nloop invariant i4: x <= i;\nloop invariant i5: y <= j;\n\n\n\n\n\n\n\n\nloop invariant i14: x == i - j + y;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i100: x + y <= i + j;\nloop invariant i101: x <= i + j - y;\nloop invariant i102: y <= j + x - i;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i120: (! (x != 0)) ==> (y <= j);\nloop invariant i121: (! (x != 0)) ==> (i >= 0);\n\nloop invariant i123: (! (x != 0)) ==> (x >= 0);\nloop invariant i124: (! (x != 0)) ==> (x <= i);\n\n\nloop invariant i127: (! (x != 0)) ==> (y == j - i);\n\n\nloop invariant i130: x <= i + 1;\nloop invariant i131: y <= j + 1;\nloop invariant i132: x >= 0 ==> x <= i + 1;\nloop invariant i133: y >= 0 ==> y <= j + 1;\nloop invariant i134: x >= 0 ==> x <= i;\nloop invariant i135: y >= 0 ==> y <= j;\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c"
        ],
        "failure": [],
        "skipped": [],
        "total": 2,
        "success_count": 2,
        "failure_count": 0,
        "success_rate": 1.0
    }
}