{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark23_conjunctive.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  \n  if (!(i==0 && j==0)) return 0;\n  while (i<100) {\n    j+=2;\n    i++;\n  }\n  {;\n//@ assert(j==200);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant j >= 0;\nloop invariant j == 2*i;\nloop invariant i == 100 ==> j == 200;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant 0 <= j <= 200;\nloop invariant j == 2*i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i < 100;\nloop invariant j < 200;\nloop invariant j == 2*i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant 198 <= j <= 202;\nloop invariant 198 <= i + j <= 202;\nloop invariant i + j >= 200 ==> j >= 200;\nloop invariant i + j >= 200 ==> j == 200 ==> i == 100;\nloop invariant i + j >= 200 ==> j == 200 ==> i < 100 ==> j == 198;\nloop invariant i + j >= 200 ==> j == 200 ==> i < 100 ==> j < 200 ==> i + j < 202;\nloop invariant i + j >= 200 ==> j == 200 ==> i < 100 ==> j < 200 ==> i + j <= 198;\nloop invariant i + j >= 200 ==> j == 200 ==> i < 100 ==> j < 200 ==> i + j < 198 ==> i + j >= 200;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant j >= 2*i;\nloop invariant j == 2*i + 2*(i-1);\nloop invariant j == 2*i + 2*(i-1) + 2*(i-2) + ... + 2*1;\nloop invariant j == i*(i+1);\nloop invariant j >= i*(i+1);\nloop invariant j >= i*(i+1) && j <= 200;\nloop invariant j == 200;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant 200 <= j <= 200;\nloop invariant i == j - 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant 2 <= j <= 200;\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant 0 <= j <= 200;\nloop invariant j == 2 * i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant j >= 0;\nloop invariant if i<100 then j==2*i else j==200;\nloop invariant i==0 ==> j==0;\nloop invariant j==200 ==> i==100;\nloop invariant if i==0 then j==0 else i==100 ==> j==200;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant j >= 0;\nloop invariant j <= 200;\nloop invariant i <= j;\nloop invariant j == 2*i;\nloop invariant i == 0 ==> j == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant 0 <= j <= 200;\nloop invariant j == 2*i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i < 100 ==> j < 200;\nloop invariant j < 200 ==> i < 100;\nloop invariant i >= 0 ==> 0 <= j <= 200;\nloop invariant j <= 200 ==> 0 <= i <= 100;\nloop invariant i <= 99 ==> j == 200;\nloop invariant j == 200 ==> i <= 99;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant j == 2 * i;\nloop invariant i + j == 200;\n*/\n```",
            "```\n/*@\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= 100;\nloop invariant j <= 200;\nloop invariant i <= j;\nloop invariant j == 2 * i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant 2 * i <= j <= 2 * i + 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant j == 2*i;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant j >= 0;\nloop invariant j == 2*i;\nloop invariant i == 100 ==> j == 200;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  \n  if (!(i==0 && j==0)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 100;\nloop invariant i2: j >= 0;\nloop invariant i3: j == 2*i;\nloop invariant i4: i == 100 ==> j == 200;\n*/\nwhile (i<100) {\n    j+=2;\n    i++;\n  }\n  {;\n//@ assert(j==200);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant 0 <= j <= 200;\nloop invariant j == 2*i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i < 100;\nloop invariant j < 200;\nloop invariant j == 2*i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  \n  if (!(i==0 && j==0)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 100;\nloop invariant i2: 0 <= j <= 200;\nloop invariant i3: j == 2*i;\nloop invariant i4: i >= 0;\nloop invariant i5: j >= 0;\n\n\n*/\nwhile (i<100) {\n    j+=2;\n    i++;\n  }\n  {;\n//@ assert(j==200);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant 198 <= j <= 202;\nloop invariant 198 <= i + j <= 202;\nloop invariant i + j >= 200 ==> j >= 200;\nloop invariant i + j >= 200 ==> j == 200 ==> i == 100;\nloop invariant i + j >= 200 ==> j == 200 ==> i < 100 ==> j == 198;\nloop invariant i + j >= 200 ==> j == 200 ==> i < 100 ==> j < 200 ==> i + j < 202;\nloop invariant i + j >= 200 ==> j == 200 ==> i < 100 ==> j < 200 ==> i + j <= 198;\nloop invariant i + j >= 200 ==> j == 200 ==> i < 100 ==> j < 200 ==> i + j < 198 ==> i + j >= 200;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  \n  if (!(i==0 && j==0)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 100;\n\n\n\n\n\nloop invariant i7: i + j >= 200 ==> j == 200 ==> i < 100 ==> j < 200 ==> i + j < 202;\nloop invariant i8: i + j >= 200 ==> j == 200 ==> i < 100 ==> j < 200 ==> i + j <= 198;\nloop invariant i9: i + j >= 200 ==> j == 200 ==> i < 100 ==> j < 200 ==> i + j < 198 ==> i + j >= 200;\n*/\nwhile (i<100) {\n    j+=2;\n    i++;\n  }\n  {;\n//@ assert(j==200);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant j >= 2*i;\nloop invariant j == 2*i + 2*(i-1);\nloop invariant j == 2*i + 2*(i-1) + 2*(i-2) + ... + 2*1;\nloop invariant j == i*(i+1);\nloop invariant j >= i*(i+1);\nloop invariant j >= i*(i+1) && j <= 200;\nloop invariant j == 200;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  \n  if (!(i==0 && j==0)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 100;\nloop invariant i2: j >= 2*i;\n\n\n\n\n\n\n*/\nwhile (i<100) {\n    j+=2;\n    i++;\n  }\n  {;\n//@ assert(j==200);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant 200 <= j <= 200;\nloop invariant i == j - 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  \n  if (!(i==0 && j==0)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 100;\n\n\n*/\nwhile (i<100) {\n    j+=2;\n    i++;\n  }\n  {;\n//@ assert(j==200);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant 2 <= j <= 200;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  \n  if (!(i==0 && j==0)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 100;\n\n*/\nwhile (i<100) {\n    j+=2;\n    i++;\n  }\n  {;\n//@ assert(j==200);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 158,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  \n  if (!(i==0 && j==0)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (i<100) {\n    j+=2;\n    i++;\n  }\n  {;\n//@ assert(j==200);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant 0 <= j <= 200;\nloop invariant j == 2 * i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  \n  if (!(i==0 && j==0)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 100;\nloop invariant i2: 0 <= j <= 200;\nloop invariant i3: j == 2 * i;\n*/\nwhile (i<100) {\n    j+=2;\n    i++;\n  }\n  {;\n//@ assert(j==200);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant j >= 0;\nloop invariant if i<100 then j==2*i else j==200;\nloop invariant i==0 ==> j==0;\nloop invariant j==200 ==> i==100;\nloop invariant if i==0 then j==0 else i==100 ==> j==200;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  \n  if (!(i==0 && j==0)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 100;\nloop invariant i2: j >= 0;\n\nloop invariant i4: i==0 ==> j==0;\n\n\n*/\nwhile (i<100) {\n    j+=2;\n    i++;\n  }\n  {;\n//@ assert(j==200);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant j >= 0;\nloop invariant j <= 200;\nloop invariant i <= j;\nloop invariant j == 2*i;\nloop invariant i == 0 ==> j == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  \n  if (!(i==0 && j==0)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 100;\nloop invariant i2: j >= 0;\nloop invariant i3: j <= 200;\nloop invariant i4: i <= j;\nloop invariant i5: j == 2*i;\nloop invariant i6: i == 0 ==> j == 0;\n*/\nwhile (i<100) {\n    j+=2;\n    i++;\n  }\n  {;\n//@ assert(j==200);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant 0 <= j <= 200;\nloop invariant j == 2*i;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i < 100 ==> j < 200;\nloop invariant j < 200 ==> i < 100;\nloop invariant i >= 0 ==> 0 <= j <= 200;\nloop invariant j <= 200 ==> 0 <= i <= 100;\nloop invariant i <= 99 ==> j == 200;\nloop invariant j == 200 ==> i <= 99;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\nloop invariant j <= 200 ==> i >= 0;\nloop invariant i >= 0 ==> j <= 200;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  \n  if (!(i==0 && j==0)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 100;\nloop invariant i2: 0 <= j <= 200;\nloop invariant i3: j == 2*i;\nloop invariant i4: i >= 0;\nloop invariant i5: j >= 0;\nloop invariant i6: i < 100 ==> j < 200;\nloop invariant i7: j < 200 ==> i < 100;\nloop invariant i8: i >= 0 ==> 0 <= j <= 200;\nloop invariant i9: j <= 200 ==> 0 <= i <= 100;\n\n\nloop invariant i12: i >= 0 ==> j <= 200;\nloop invariant i13: j <= 200 ==> i >= 0;\n*/\nwhile (i<100) {\n    j+=2;\n    i++;\n  }\n  {;\n//@ assert(j==200);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant j == 2 * i;\nloop invariant i + j == 200;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  \n  if (!(i==0 && j==0)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 100;\nloop invariant i2: j == 2 * i;\n\n*/\nwhile (i<100) {\n    j+=2;\n    i++;\n  }\n  {;\n//@ assert(j==200);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant i <= 100;\nloop invariant j <= 200;\nloop invariant i <= j;\nloop invariant j == 2 * i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  \n  if (!(i==0 && j==0)) return 0;\n  /*@\nloop invariant i1: i >= 0;\nloop invariant i2: j >= 0;\nloop invariant i3: i <= 100;\nloop invariant i4: j <= 200;\nloop invariant i5: i <= j;\nloop invariant i6: j == 2 * i;\n*/\nwhile (i<100) {\n    j+=2;\n    i++;\n  }\n  {;\n//@ assert(j==200);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant 2 * i <= j <= 2 * i + 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  \n  if (!(i==0 && j==0)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 100;\nloop invariant i2: 2 * i <= j <= 2 * i + 2;\n*/\nwhile (i<100) {\n    j+=2;\n    i++;\n  }\n  {;\n//@ assert(j==200);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 100;\nloop invariant j == 2*i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  \n  if (!(i==0 && j==0)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 100;\nloop invariant i2: j == 2*i;\n*/\nwhile (i<100) {\n    j+=2;\n    i++;\n  }\n  {;\n//@ assert(j==200);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 35: unexpected token '...'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  \n  if (!(i==0 && j==0)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 100;\nloop invariant i2: j >= 0;\nloop invariant i3: j == 2*i;\nloop invariant i4: i == 100 ==> j == 200;\nloop invariant i5: 0 <= j <= 200;\nloop invariant i6: i >= 0;\nloop invariant i7: i < 100;\nloop invariant i8: j < 200;\nloop invariant i9: 198 <= j <= 202;\nloop invariant i10: 198 <= i + j <= 202;\nloop invariant i11: i + j >= 200 ==> j >= 200;\nloop invariant i12: i + j >= 200 ==> j == 200 ==> i == 100;\nloop invariant i13: i + j >= 200 ==> j == 200 ==> i < 100 ==> j == 198;\nloop invariant i14: i + j >= 200 ==> j == 200 ==> i < 100 ==> j < 200 ==> i + j < 202;\nloop invariant i15: i + j >= 200 ==> j == 200 ==> i < 100 ==> j < 200 ==> i + j <= 198;\nloop invariant i16: i + j >= 200 ==> j == 200 ==> i < 100 ==> j < 200 ==> i + j < 198 ==> i + j >= 200;\nloop invariant i17: j >= 2*i;\nloop invariant i18: j == 2*i + 2*(i-1);\nloop invariant i19: j == 2*i + 2*(i-1) + 2*(i-2) + ... + 2*1;\nloop invariant i20: j == i*(i+1);\nloop invariant i21: j >= i*(i+1);\nloop invariant i22: j >= i*(i+1) && j <= 200;\nloop invariant i23: j == 200;\nloop invariant i24: 200 <= j <= 200;\nloop invariant i25: i == j - 100;\nloop invariant i26: 2 <= j <= 200;\nloop invariant i27: i1;\nloop invariant i28: i2;\nloop invariant i29: i3;\nloop invariant i30: i4;\nloop invariant i31: i5;\nloop invariant i32: i6;\nloop invariant i33: i7;\nloop invariant i34: i8;\nloop invariant i35: i9;\nloop invariant i36: i10;\nloop invariant i37: i11;\nloop invariant i38: i12;\nloop invariant i39: i13;\nloop invariant i40: i14;\nloop invariant i41: i15;\nloop invariant i42: i16;\nloop invariant i43: i17;\nloop invariant i44: i18;\nloop invariant i45: i19;\nloop invariant i46: i20;\nloop invariant i47: i21;\nloop invariant i48: i22;\nloop invariant i49: i23;\nloop invariant i50: i24;\nloop invariant i51: i25;\nloop invariant i52: i26;\nloop invariant i53: i27;\nloop invariant i54: i28;\nloop invariant i55: i29;\nloop invariant i56: i30;\nloop invariant i57: i31;\nloop invariant i58: i32;\nloop invariant i59: i33;\nloop invariant i60: i34;\nloop invariant i61: i35;\nloop invariant i62: i36;\nloop invariant i63: i37;\nloop invariant i64: i38;\nloop invariant i65: i39;\nloop invariant i66: i40;\nloop invariant i67: i41;\nloop invariant i68: i42;\nloop invariant i69: i43;\nloop invariant i70: i44;\nloop invariant i71: i45;\nloop invariant i72: i46;\nloop invariant i73: i47;\nloop invariant i74: i48;\nloop invariant i75: i49;\nloop invariant i76: i50;\nloop invariant i77: i51;\nloop invariant i78: i52;\nloop invariant i79: i53;\nloop invariant i80: i54;\nloop invariant i81: i55;\nloop invariant i82: i56;\nloop invariant i83: i57;\nloop invariant i84: i58;\nloop invariant i85: i59;\nloop invariant i86: i60;\nloop invariant i87: i61;\nloop invariant i88: i62;\nloop invariant i89: i63;\nloop invariant i90: i64;\nloop invariant i91: i65;\nloop invariant i92: i66;\nloop invariant i93: i67;\nloop invariant i94: i68;\nloop invariant i95: i69;\nloop invariant i96: i70;\nloop invariant i97: i71;\nloop invariant i98: i72;\nloop invariant i99: i73;\nloop invariant i100: i74;\nloop invariant i101: i75;\nloop invariant i102: i76;\nloop invariant i103: i77;\nloop invariant i104: i78;\nloop invariant i105: i79;\nloop invariant i106: i80;\nloop invariant i107: i81;\nloop invariant i108: i82;\nloop invariant i109: i83;\nloop invariant i110: i84;\nloop invariant i111: i85;\nloop invariant i112: i86;\nloop invariant i113: i87;\nloop invariant i114: i88;\nloop invariant i115: i89;\nloop invariant i116: i90;\nloop invariant i117: i91;\nloop invariant i118: i92;\nloop invariant i119: i93;\nloop invariant i120: i94;\nloop invariant i121: i95;\nloop invariant i122: i96;\nloop invariant i123: i97;\nloop invariant i124: i98;\nloop invariant i125: i99;\nloop invariant i126: i100;\nloop invariant i127: i101;\nloop invariant i128: i102;\nloop invariant i129: i103;\nloop invariant i130: i104;\nloop invariant i131: i105;\nloop invariant i132: i106;\nloop invariant i133: i107;\nloop invariant i134: i108;\nloop invariant i135: i109;\nloop invariant i136: i110;\nloop invariant i137: i111;\nloop invariant i138: i112;\nloop invariant i139: i113;\nloop invariant i140: i114;\nloop invariant i141: i115;\nloop invariant i142: i116;\nloop invariant i143: i117;\nloop invariant i144: i118;\nloop invariant i145: i119;\nloop invariant i146: i120;\nloop invariant i147: i121;\nloop invariant i148: i122;\nloop invariant i149: i123;\nloop invariant i150: i124;\nloop invariant i151: i125;\nloop invariant i152: i126;\nloop invariant i153: i127;\nloop invariant i154: i128;\nloop invariant i155: i129;\nloop invariant i156: i130;\nloop invariant i157: i131;\nloop invariant i158: i132;\nloop invariant i159: i133;\nloop invariant i160: i134;\nloop invariant i161: i135;\nloop invariant i162: i136;\nloop invariant i163: i137;\nloop invariant i164: i138;\nloop invariant i165: i139;\nloop invariant i166: i140;\nloop invariant i167: i141;\nloop invariant i168: i142;\nloop invariant i169: i143;\nloop invariant i170: i144;\nloop invariant i171: i145;\nloop invariant i172: i146;\nloop invariant i173: i147;\nloop invariant i174: i148;\nloop invariant i175: i149;\nloop invariant i176: i150;\nloop invariant i177: i151;\nloop invariant i178: i152;\nloop invariant i179: i153;\nloop invariant i180: i154;\nloop invariant i181: i155;\nloop invariant i182: i156;\nloop invariant i183: i157;\nloop invariant i184: i158;\nloop invariant i185: j == 2 * i;\nloop invariant i186: if i<100 then j==2*i else j==200;\nloop invariant i187: i==0 ==> j==0;\nloop invariant i188: j==200 ==> i==100;\nloop invariant i189: if i==0 then j==0 else i==100 ==> j==200;\nloop invariant i190: j <= 200;\nloop invariant i191: i <= j;\nloop invariant i192: i == 0 ==> j == 0;\nloop invariant i193: i < 100 ==> j < 200;\nloop invariant i194: j < 200 ==> i < 100;\nloop invariant i195: i >= 0 ==> 0 <= j <= 200;\nloop invariant i196: j <= 200 ==> 0 <= i <= 100;\nloop invariant i197: i <= 99 ==> j == 200;\nloop invariant i198: j == 200 ==> i <= 99;\nloop invariant i199: i >= 0 ==> j <= 200;\nloop invariant i200: j <= 200 ==> i >= 0;\nloop invariant i201: i + j == 200;\nloop invariant i202: i <= 100;\nloop invariant i203: 2 * i <= j <= 2 * i + 2;\n*/\nwhile (i<100) {\n    j+=2;\n    i++;\n  }\n  {;\n//@ assert(j==200);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 178,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  \n  if (!(i==0 && j==0)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= 100;\nloop invariant i2: j >= 0;\nloop invariant i3: j == 2*i;\nloop invariant i4: i == 100 ==> j == 200;\nloop invariant i5: 0 <= j <= 200;\nloop invariant i6: i >= 0;\n\n\n\n\n\nloop invariant i12: i + j >= 200 ==> j == 200 ==> i == 100;\nloop invariant i13: i + j >= 200 ==> j == 200 ==> i < 100 ==> j == 198;\nloop invariant i14: i + j >= 200 ==> j == 200 ==> i < 100 ==> j < 200 ==> i + j < 202;\nloop invariant i15: i + j >= 200 ==> j == 200 ==> i < 100 ==> j < 200 ==> i + j <= 198;\nloop invariant i16: i + j >= 200 ==> j == 200 ==> i < 100 ==> j < 200 ==> i + j < 198 ==> i + j >= 200;\nloop invariant i17: j >= 2*i;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i185: j == 2 * i;\n\nloop invariant i187: i==0 ==> j==0;\nloop invariant i188: j==200 ==> i==100;\n\nloop invariant i190: j <= 200;\nloop invariant i191: i <= j;\nloop invariant i192: i == 0 ==> j == 0;\nloop invariant i193: i < 100 ==> j < 200;\nloop invariant i194: j < 200 ==> i < 100;\nloop invariant i195: i >= 0 ==> 0 <= j <= 200;\nloop invariant i196: j <= 200 ==> 0 <= i <= 100;\n\n\nloop invariant i199: i >= 0 ==> j <= 200;\nloop invariant i200: j <= 200 ==> i >= 0;\n\nloop invariant i202: i <= 100;\nloop invariant i203: 2 * i <= j <= 2 * i + 2;\n*/\nwhile (i<100) {\n    j+=2;\n    i++;\n  }\n  {;\n//@ assert(j==200);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark16_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark17_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark19_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark20_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark21_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark22_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark23_conjunctive.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c"
        ],
        "skipped": [],
        "total": 144,
        "success_count": 127,
        "failure_count": 17,
        "success_rate": 0.8819444444444444
    }
}