{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/92.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n    int z1,z2,z3;\n\n    int x = 0;\n    int y = 0;\n\n    while(y >= 0){\n        y = y + x;\n    }\n\n    {;\n//@ assert( y>= 0);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= y <= x;\n*/\n```",
            "```\n/*@\nloop invariant Precondition1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= y;\nloop invariant y >= 0;\nloop invariant z1 <= z2 <= z3;\nloop invariant y == 0 ==> x == 0;\nloop invariant y == 0 ==> y == 0;\nloop invariant y == 0 ==> z1 == 0;\nloop invariant y == 0 ==> z2 == 0;\nloop invariant y == 0 ==> z3 == 0;\nloop invariant y == 0 ==> y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= x; loop invariant 0 <= x; loop invariant x < 0 ==> y < 0; loop invariant x >= 0 ==> y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant y <= 0;\nloop invariant x >= 0;\nloop invariant y >= -x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y;\nloop invariant (x >= 0 ==> x >= y);\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant y >= 0;\nloop invariant y <= 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
            "```\n/*@\nloop invariant y >= 0;\nloop invariant y >= x;\n*/\n```",
            "```\n/*@\nloop invariant y >= 0;\nloop invariant y <= x;\nloop invariant (x >= 0) ==> (y >= 0);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= y;\nloop invariant y >= 0;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 2 <= y <= 3;\nloop invariant x < y;\nloop invariant x >= 0;\nloop invariant y >= 0;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n    int z1,z2,z3;\n\n    int x = 0;\n    int y = 0;\n\n    /*@\n\n*/\nwhile(y >= 0){\n        y = y + x;\n    }\n\n    {;\n//@ assert( y>= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant Precondition1;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n    int z1,z2,z3;\n\n    int x = 0;\n    int y = 0;\n\n    /*@\n\nloop invariant i2: x >= 0;\nloop invariant i3: y >= 0;\nloop invariant i4: x <= y;\nloop invariant i5: y >= x;\n*/\nwhile(y >= 0){\n        y = y + x;\n    }\n\n    {;\n//@ assert( y>= 0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= y;\nloop invariant y >= 0;\nloop invariant z1 <= z2 <= z3;\nloop invariant y == 0 ==> x == 0;\nloop invariant y == 0 ==> y == 0;\nloop invariant y == 0 ==> z1 == 0;\nloop invariant y == 0 ==> z2 == 0;\nloop invariant y == 0 ==> z3 == 0;\nloop invariant y == 0 ==> y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n    int z1,z2,z3;\n\n    int x = 0;\n    int y = 0;\n\n    /*@\n\n\n\n\nloop invariant i5: y == 0 ==> y == 0;\n\n\n\nloop invariant i9: y == 0 ==> y >= 0;\n*/\nwhile(y >= 0){\n        y = y + x;\n    }\n\n    {;\n//@ assert( y>= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= x; loop invariant 0 <= x; loop invariant x < 0 ==> y < 0; loop invariant x >= 0 ==> y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n    int z1,z2,z3;\n\n    int x = 0;\n    int y = 0;\n\n    /*@\n\n*/\nwhile(y >= 0){\n        y = y + x;\n    }\n\n    {;\n//@ assert( y>= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant y <= 0;\nloop invariant x >= 0;\nloop invariant y >= -x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n    int z1,z2,z3;\n\n    int x = 0;\n    int y = 0;\n\n    /*@\n\nloop invariant i2: x >= 0;\nloop invariant i3: y >= -x;\n*/\nwhile(y >= 0){\n        y = y + x;\n    }\n\n    {;\n//@ assert( y>= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y;\nloop invariant (x >= 0 ==> x >= y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n    int z1,z2,z3;\n\n    int x = 0;\n    int y = 0;\n\n    /*@\n\n\n*/\nwhile(y >= 0){\n        y = y + x;\n    }\n\n    {;\n//@ assert( y>= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\nloop invariant y == x * (x + 1) / 2;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant y >= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n    int z1,z2,z3;\n\n    int x = 0;\n    int y = 0;\n\n    /*@\nloop invariant i1: x >= 0;\nloop invariant i2: y >= 0;\nloop invariant i3: y >= x;\n\n\n*/\nwhile(y >= 0){\n        y = y + x;\n    }\n\n    {;\n//@ assert( y>= 0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n    int z1,z2,z3;\n\n    int x = 0;\n    int y = 0;\n\n    /*@\n\n\n*/\nwhile(y >= 0){\n        y = y + x;\n    }\n\n    {;\n//@ assert( y>= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant y >= 0;\nloop invariant y <= 0;\nloop invariant x >= 0;\nloop invariant x <= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n    int z1,z2,z3;\n\n    int x = 0;\n    int y = 0;\n\n    /*@\nloop invariant i1: y >= 0;\nloop invariant i2: y <= 0;\nloop invariant i3: x >= 0;\nloop invariant i4: x <= 0;\n*/\nwhile(y >= 0){\n        y = y + x;\n    }\n\n    {;\n//@ assert( y>= 0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 158,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n    int z1,z2,z3;\n\n    int x = 0;\n    int y = 0;\n\n    /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(y >= 0){\n        y = y + x;\n    }\n\n    {;\n//@ assert( y>= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant y >= 0;\nloop invariant y >= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n    int z1,z2,z3;\n\n    int x = 0;\n    int y = 0;\n\n    /*@\n\nloop invariant i2: y >= x;\n*/\nwhile(y >= 0){\n        y = y + x;\n    }\n\n    {;\n//@ assert( y>= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant y >= 0;\nloop invariant y <= x;\nloop invariant (x >= 0) ==> (y >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n    int z1,z2,z3;\n\n    int x = 0;\n    int y = 0;\n\n    /*@\n\n\nloop invariant i3: (x >= 0) ==> (y >= 0);\n*/\nwhile(y >= 0){\n        y = y + x;\n    }\n\n    {;\n//@ assert( y>= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= y;\nloop invariant y >= 0;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n    int z1,z2,z3;\n\n    int x = 0;\n    int y = 0;\n\n    /*@\n\nloop invariant i2: y >= 0;\nloop invariant i3: x == 0;\nloop invariant i4: y == 0;\n*/\nwhile(y >= 0){\n        y = y + x;\n    }\n\n    {;\n//@ assert( y>= 0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n    int z1,z2,z3;\n\n    int x = 0;\n    int y = 0;\n\n    /*@\n\n\n*/\nwhile(y >= 0){\n        y = y + x;\n    }\n\n    {;\n//@ assert( y>= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 2 <= y <= 3;\nloop invariant x < y;\nloop invariant x >= 0;\nloop invariant y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n    int z1,z2,z3;\n\n    int x = 0;\n    int y = 0;\n\n    /*@\n\n\nloop invariant i3: x >= 0;\nloop invariant i4: y >= 0;\n*/\nwhile(y >= 0){\n        y = y + x;\n    }\n\n    {;\n//@ assert( y>= 0);\n}\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 15: unbound logic variable Precondition1. Ignoring loop annotation",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n    int z1,z2,z3;\n\n    int x = 0;\n    int y = 0;\n\n    /*@\nloop invariant i1: 0 <= y <= x;\nloop invariant i2: Precondition1;\nloop invariant i3: x >= 0;\nloop invariant i4: y >= 0;\nloop invariant i5: x <= y;\nloop invariant i6: y >= x;\nloop invariant i7: 1 <= x <= y;\nloop invariant i8: z1 <= z2 <= z3;\nloop invariant i9: y == 0 ==> x == 0;\nloop invariant i10: y == 0 ==> y == 0;\nloop invariant i11: y == 0 ==> z1 == 0;\nloop invariant i12: y == 0 ==> z2 == 0;\nloop invariant i13: y == 0 ==> z3 == 0;\nloop invariant i14: y == 0 ==> y >= 0;\nloop invariant i15: 0 <= y <= x; loop invariant 0 <= x; loop invariant x < 0 ==> y < 0; loop invariant x >= 0 ==> y >= 0;\nloop invariant i16: y <= 0;\nloop invariant i17: y >= -x;\nloop invariant i18: 0 <= y;\nloop invariant i19: (x >= 0 ==> x >= y);\nloop invariant i20: y == x * (x + 1) / 2;\nloop invariant i21: x >= y;\nloop invariant i22: 0 <= y <= 100000;\nloop invariant i23: x >= (1 + (y - 1) * y / 2);\nloop invariant i24: x <= 0;\nloop invariant i25: i1;\nloop invariant i26: i2;\nloop invariant i27: i3;\nloop invariant i28: i4;\nloop invariant i29: i5;\nloop invariant i30: i6;\nloop invariant i31: i7;\nloop invariant i32: i8;\nloop invariant i33: i9;\nloop invariant i34: i10;\nloop invariant i35: i11;\nloop invariant i36: i12;\nloop invariant i37: i13;\nloop invariant i38: i14;\nloop invariant i39: i15;\nloop invariant i40: i16;\nloop invariant i41: i17;\nloop invariant i42: i18;\nloop invariant i43: i19;\nloop invariant i44: i20;\nloop invariant i45: i21;\nloop invariant i46: i22;\nloop invariant i47: i23;\nloop invariant i48: i24;\nloop invariant i49: i25;\nloop invariant i50: i26;\nloop invariant i51: i27;\nloop invariant i52: i28;\nloop invariant i53: i29;\nloop invariant i54: i30;\nloop invariant i55: i31;\nloop invariant i56: i32;\nloop invariant i57: i33;\nloop invariant i58: i34;\nloop invariant i59: i35;\nloop invariant i60: i36;\nloop invariant i61: i37;\nloop invariant i62: i38;\nloop invariant i63: i39;\nloop invariant i64: i40;\nloop invariant i65: i41;\nloop invariant i66: i42;\nloop invariant i67: i43;\nloop invariant i68: i44;\nloop invariant i69: i45;\nloop invariant i70: i46;\nloop invariant i71: i47;\nloop invariant i72: i48;\nloop invariant i73: i49;\nloop invariant i74: i50;\nloop invariant i75: i51;\nloop invariant i76: i52;\nloop invariant i77: i53;\nloop invariant i78: i54;\nloop invariant i79: i55;\nloop invariant i80: i56;\nloop invariant i81: i57;\nloop invariant i82: i58;\nloop invariant i83: i59;\nloop invariant i84: i60;\nloop invariant i85: i61;\nloop invariant i86: i62;\nloop invariant i87: i63;\nloop invariant i88: i64;\nloop invariant i89: i65;\nloop invariant i90: i66;\nloop invariant i91: i67;\nloop invariant i92: i68;\nloop invariant i93: i69;\nloop invariant i94: i70;\nloop invariant i95: i71;\nloop invariant i96: i72;\nloop invariant i97: i73;\nloop invariant i98: i74;\nloop invariant i99: i75;\nloop invariant i100: i76;\nloop invariant i101: i77;\nloop invariant i102: i78;\nloop invariant i103: i79;\nloop invariant i104: i80;\nloop invariant i105: i81;\nloop invariant i106: i82;\nloop invariant i107: i83;\nloop invariant i108: i84;\nloop invariant i109: i85;\nloop invariant i110: i86;\nloop invariant i111: i87;\nloop invariant i112: i88;\nloop invariant i113: i89;\nloop invariant i114: i90;\nloop invariant i115: i91;\nloop invariant i116: i92;\nloop invariant i117: i93;\nloop invariant i118: i94;\nloop invariant i119: i95;\nloop invariant i120: i96;\nloop invariant i121: i97;\nloop invariant i122: i98;\nloop invariant i123: i99;\nloop invariant i124: i100;\nloop invariant i125: i101;\nloop invariant i126: i102;\nloop invariant i127: i103;\nloop invariant i128: i104;\nloop invariant i129: i105;\nloop invariant i130: i106;\nloop invariant i131: i107;\nloop invariant i132: i108;\nloop invariant i133: i109;\nloop invariant i134: i110;\nloop invariant i135: i111;\nloop invariant i136: i112;\nloop invariant i137: i113;\nloop invariant i138: i114;\nloop invariant i139: i115;\nloop invariant i140: i116;\nloop invariant i141: i117;\nloop invariant i142: i118;\nloop invariant i143: i119;\nloop invariant i144: i120;\nloop invariant i145: i121;\nloop invariant i146: i122;\nloop invariant i147: i123;\nloop invariant i148: i124;\nloop invariant i149: i125;\nloop invariant i150: i126;\nloop invariant i151: i127;\nloop invariant i152: i128;\nloop invariant i153: i129;\nloop invariant i154: i130;\nloop invariant i155: i131;\nloop invariant i156: i132;\nloop invariant i157: i133;\nloop invariant i158: i134;\nloop invariant i159: i135;\nloop invariant i160: i136;\nloop invariant i161: i137;\nloop invariant i162: i138;\nloop invariant i163: i139;\nloop invariant i164: i140;\nloop invariant i165: i141;\nloop invariant i166: i142;\nloop invariant i167: i143;\nloop invariant i168: i144;\nloop invariant i169: i145;\nloop invariant i170: i146;\nloop invariant i171: i147;\nloop invariant i172: i148;\nloop invariant i173: i149;\nloop invariant i174: i150;\nloop invariant i175: i151;\nloop invariant i176: i152;\nloop invariant i177: i153;\nloop invariant i178: i154;\nloop invariant i179: i155;\nloop invariant i180: i156;\nloop invariant i181: i157;\nloop invariant i182: i158;\nloop invariant i183: y <= x;\nloop invariant i184: (x >= 0) ==> (y >= 0);\nloop invariant i185: x == 0;\nloop invariant i186: y == 0;\nloop invariant i187: 2 <= y <= 3;\nloop invariant i188: x < y;\n*/\nwhile(y >= 0){\n        y = y + x;\n    }\n\n    {;\n//@ assert( y>= 0);\n}\n\n}",
        "combined_annotation_num_solver_calls": 164,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(){\n    int z1,z2,z3;\n\n    int x = 0;\n    int y = 0;\n\n    /*@\nloop invariant i1: 0 <= y <= x;\n\nloop invariant i3: x >= 0;\nloop invariant i4: y >= 0;\nloop invariant i5: x <= y;\nloop invariant i6: y >= x;\n\n\nloop invariant i9: y == 0 ==> x == 0;\nloop invariant i10: y == 0 ==> y == 0;\n\n\n\nloop invariant i14: y == 0 ==> y >= 0;\nloop invariant i15: 0 <= y <= x; loop invariant 0 <= x; loop invariant x < 0 ==> y < 0; loop invariant x >= 0 ==> y >= 0;\nloop invariant i16: y <= 0;\nloop invariant i17: y >= -x;\nloop invariant i18: 0 <= y;\nloop invariant i19: (x >= 0 ==> x >= y);\nloop invariant i20: y == x * (x + 1) / 2;\nloop invariant i21: x >= y;\nloop invariant i22: 0 <= y <= 100000;\n\nloop invariant i24: x <= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i183: y <= x;\nloop invariant i184: (x >= 0) ==> (y >= 0);\nloop invariant i185: x == 0;\nloop invariant i186: y == 0;\n\n\n*/\nwhile(y >= 0){\n        y = y + x;\n    }\n\n    {;\n//@ assert( y>= 0);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c"
        ],
        "skipped": [],
        "total": 78,
        "success_count": 68,
        "failure_count": 10,
        "success_rate": 0.8717948717948718
    }
}