{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  MAXPATHLEN = unknown_int();\n  if(MAXPATHLEN > 0 && MAXPATHLEN < 2147483647); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  for (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n\n    {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= pathbuf_off <= MAXPATHLEN + 1;\nloop invariant pathbuf_off + (MAXPATHLEN + 1) - 1 == bound_off;\nloop invariant bound_off < MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off == pathbuf_off;\nloop invariant glob2_pathlim_off == bound_off;\nloop invariant glob2_p_off == pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off < MAXPATHLEN + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= pathbuf_off;\nloop invariant bound_off >= pathbuf_off;\nloop invariant glob2_pathbuf_off == pathbuf_off;\nloop invariant glob2_pathlim_off == bound_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 1;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 2;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 3;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 4;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 5;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 6;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 7;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 8;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 9;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 10;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 11;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 12;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 13;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 14;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 15;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 16;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 17;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 18;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 19;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 20;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 21;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 22;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 23;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 24;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 25;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 26;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 27;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 28;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 29;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 30;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 31;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 32;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 33;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 34;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 35;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off - 1;\nloop invariant glob2_p_off <= glob2_pathlim_off - 1;\n*/\n```",
            "```\n/*@\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1);\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_p_off < glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_p_off < glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_p_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= pathbuf_off <= MAXPATHLEN + 1;\nloop invariant pathbuf_off + (MAXPATHLEN + 1) - 1 == bound_off;\nloop invariant bound_off < MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off == pathbuf_off;\nloop invariant glob2_pathlim_off == bound_off;\nloop invariant glob2_p_off == pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off < MAXPATHLEN + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  MAXPATHLEN = unknown_int();\n  if(MAXPATHLEN > 0 && MAXPATHLEN < 2147483647); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\nloop invariant i1: 0 <= pathbuf_off <= MAXPATHLEN + 1;\nloop invariant i2: pathbuf_off + (MAXPATHLEN + 1) - 1 == bound_off;\nloop invariant i3: bound_off < MAXPATHLEN + 1;\nloop invariant i4: glob2_pathbuf_off == pathbuf_off;\nloop invariant i5: glob2_pathlim_off == bound_off;\n\n\n\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n\n    {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= pathbuf_off;\nloop invariant bound_off >= pathbuf_off;\nloop invariant glob2_pathbuf_off == pathbuf_off;\nloop invariant glob2_pathlim_off == bound_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  MAXPATHLEN = unknown_int();\n  if(MAXPATHLEN > 0 && MAXPATHLEN < 2147483647); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\nloop invariant i1: 0 <= pathbuf_off;\nloop invariant i2: bound_off >= pathbuf_off;\nloop invariant i3: glob2_pathbuf_off == pathbuf_off;\nloop invariant i4: glob2_pathlim_off == bound_off;\n\nloop invariant i6: glob2_p_off >= glob2_pathbuf_off;\n\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n\n    {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 35,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 1;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 2;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 3;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 4;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 5;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 6;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 7;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 8;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 9;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 10;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 11;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 12;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 13;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 14;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 15;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 16;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 17;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 18;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 19;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 20;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 21;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 22;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 23;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 24;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 25;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 26;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 27;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 28;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 29;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 30;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 31;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 32;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 33;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 34;\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 35;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  MAXPATHLEN = unknown_int();\n  if(MAXPATHLEN > 0 && MAXPATHLEN < 2147483647); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n\n    {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  MAXPATHLEN = unknown_int();\n  if(MAXPATHLEN > 0 && MAXPATHLEN < 2147483647); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\nloop invariant i2: glob2_pathbuf_off <= glob2_p_off;\n\nloop invariant i4: glob2_pathbuf_off <= glob2_pathlim_off;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n\n    {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  MAXPATHLEN = unknown_int();\n  if(MAXPATHLEN > 0 && MAXPATHLEN < 2147483647); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\nloop invariant i1: 0 <= glob2_p_off;\n\n\nloop invariant i4: glob2_pathbuf_off <= glob2_pathlim_off;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n\n    {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= 0;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  MAXPATHLEN = unknown_int();\n  if(MAXPATHLEN > 0 && MAXPATHLEN < 2147483647); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\nloop invariant i2: glob2_p_off >= glob2_pathbuf_off;\nloop invariant i3: glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant i4: glob2_pathbuf_off >= 0;\nloop invariant i5: glob2_p_off >= 0;\nloop invariant i6: glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant i7: glob2_pathlim_off >= 0;\n\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n\n    {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off - 1;\nloop invariant glob2_p_off <= glob2_pathlim_off - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  MAXPATHLEN = unknown_int();\n  if(MAXPATHLEN > 0 && MAXPATHLEN < 2147483647); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n\n    {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off >= 0;\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant glob2_pathlim_off >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  MAXPATHLEN = unknown_int();\n  if(MAXPATHLEN > 0 && MAXPATHLEN < 2147483647); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\nloop invariant i1: glob2_p_off >= glob2_pathbuf_off;\n\nloop invariant i3: glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant i4: glob2_pathbuf_off >= 0;\nloop invariant i5: glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant i6: glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant i7: glob2_pathlim_off >= 0;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n\n    {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1);\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  MAXPATHLEN = unknown_int();\n  if(MAXPATHLEN > 0 && MAXPATHLEN < 2147483647); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n\nloop invariant i3: glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant i4: glob2_pathbuf_off <= glob2_p_off;\n\nloop invariant i6: glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant i7: glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1);\nloop invariant i8: glob2_pathlim_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant i9: glob2_pathlim_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant i10: glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant i11: glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant i12: glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n\n    {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  MAXPATHLEN = unknown_int();\n  if(MAXPATHLEN > 0 && MAXPATHLEN < 2147483647); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n\nloop invariant i3: glob2_p_off >= glob2_pathbuf_off;\nloop invariant i4: glob2_pathbuf_off <= glob2_pathlim_off;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n\n    {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  MAXPATHLEN = unknown_int();\n  if(MAXPATHLEN > 0 && MAXPATHLEN < 2147483647); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n\nloop invariant i3: glob2_pathbuf_off <= glob2_pathlim_off;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n\n    {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  MAXPATHLEN = unknown_int();\n  if(MAXPATHLEN > 0 && MAXPATHLEN < 2147483647); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\nloop invariant i1: 0 <= glob2_p_off;\n\n\nloop invariant i4: glob2_p_off >= glob2_pathbuf_off;\n\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n\n    {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off < MAXPATHLEN + 1;\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant glob2_p_off < glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= MAXPATHLEN;\nloop invariant glob2_p_off >= glob2_pathbuf_off;\nloop invariant glob2_p_off >= 0;\nloop invariant glob2_p_off < glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  MAXPATHLEN = unknown_int();\n  if(MAXPATHLEN > 0 && MAXPATHLEN < 2147483647); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\nloop invariant i2: glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant i3: glob2_pathbuf_off < MAXPATHLEN + 1;\nloop invariant i4: glob2_pathlim_off < MAXPATHLEN + 1;\n\n\n\nloop invariant i8: glob2_p_off >= glob2_pathbuf_off;\nloop invariant i9: glob2_p_off >= 0;\n\n\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n\n    {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  MAXPATHLEN = unknown_int();\n  if(MAXPATHLEN > 0 && MAXPATHLEN < 2147483647); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\nloop invariant i1: 0 <= glob2_p_off;\n\n\nloop invariant i4: glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant i5: glob2_pathbuf_off <= glob2_pathlim_off;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n\n    {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_p_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant glob2_p_off <= glob2_pathlim_off;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  MAXPATHLEN = unknown_int();\n  if(MAXPATHLEN > 0 && MAXPATHLEN < 2147483647); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\n\n\nloop invariant i3: glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant i4: glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant i5: glob2_pathbuf_off <= glob2_p_off + 1;\n\nloop invariant i7: glob2_pathbuf_off <= glob2_pathlim_off;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n\n    {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "loop invariant 0 <= pathbuf_off <= MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant pathbuf_off + (MAXPATHLEN + 1) - 1 == bound_off is partially proven to be inductive.\nloop invariant bound_off < MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant glob2_pathbuf_off == pathbuf_off is partially proven to be inductive.\nloop invariant glob2_pathlim_off == bound_off is partially proven to be inductive.\nloop invariant glob2_p_off == pathbuf_off is established but not preserved.\nloop invariant glob2_p_off <= glob2_pathlim_off is partially proven to be inductive.\nloop invariant glob2_p_off < MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant 0 <= pathbuf_off is partially proven to be inductive.\nloop invariant bound_off >= pathbuf_off is partially proven to be inductive.\nloop invariant glob2_p_off >= glob2_pathbuf_off is partially proven to be inductive.\nloop invariant glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 is partially proven to be inductive.\nloop invariant 0 <= glob2_p_off <= glob2_pathlim_off is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 1 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 2 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 3 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 4 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 5 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 6 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 7 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 8 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 9 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 10 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 11 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 12 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 13 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 14 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 15 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 16 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 17 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 18 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 19 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 20 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 21 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 22 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 23 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 24 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 25 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 26 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 27 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 28 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 29 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 30 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 31 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 32 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 33 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 34 is partially proven to be inductive.\nloop invariant glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 35 is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_p_off is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off is partially proven to be inductive.\nloop invariant 0 <= glob2_p_off is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off is partially proven to be inductive.\nloop invariant glob2_pathbuf_off >= 0 is partially proven to be inductive.\nloop invariant glob2_p_off >= 0 is partially proven to be inductive.\nloop invariant glob2_pathlim_off <= MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant glob2_pathlim_off >= 0 is partially proven to be inductive.\nloop invariant glob2_p_off <= glob2_pathlim_off - 1 is partially proven to be inductive.\nloop invariant glob2_pathlim_off >= glob2_pathbuf_off is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off + 1 is partially proven to be inductive.\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) is partially proven to be inductive.\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + MAXPATHLEN is partially proven to be inductive.\nloop invariant glob2_pathlim_off <= glob2_pathbuf_off + MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN is partially proven to be inductive.\nloop invariant glob2_pathbuf_off < MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant glob2_pathlim_off < MAXPATHLEN + 1 is partially proven to be inductive.\nloop invariant glob2_p_off < glob2_pathlim_off + 1 is partially proven to be inductive.\nloop invariant glob2_p_off <= MAXPATHLEN is partially proven to be inductive.\nloop invariant glob2_p_off < glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1 is partially proven to be inductive.\nloop invariant glob2_p_off <= glob2_pathlim_off + 1 is partially proven to be inductive.\nloop invariant glob2_pathbuf_off <= glob2_p_off + 1 is partially proven to be inductive.\nAssertion 0 <= glob2_p_off: Partially proven\nAssertion glob2_p_off < MAXPATHLEN + 1: Partially proven",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  MAXPATHLEN = unknown_int();\n  if(MAXPATHLEN > 0 && MAXPATHLEN < 2147483647); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\nloop invariant i1: 0 <= pathbuf_off <= MAXPATHLEN + 1;\nloop invariant i2: pathbuf_off + (MAXPATHLEN + 1) - 1 == bound_off;\nloop invariant i3: bound_off < MAXPATHLEN + 1;\nloop invariant i4: glob2_pathbuf_off == pathbuf_off;\nloop invariant i5: glob2_pathlim_off == bound_off;\nloop invariant i6: glob2_p_off == pathbuf_off;\nloop invariant i7: glob2_p_off <= glob2_pathlim_off;\nloop invariant i8: glob2_p_off < MAXPATHLEN + 1;\nloop invariant i9: 0 <= pathbuf_off;\nloop invariant i10: bound_off >= pathbuf_off;\nloop invariant i11: glob2_p_off >= glob2_pathbuf_off;\nloop invariant i12: glob2_p_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant i13: 0 <= glob2_p_off <= glob2_pathlim_off;\nloop invariant i14: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 1;\nloop invariant i15: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 2;\nloop invariant i16: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 3;\nloop invariant i17: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 4;\nloop invariant i18: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 5;\nloop invariant i19: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 6;\nloop invariant i20: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 7;\nloop invariant i21: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 8;\nloop invariant i22: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 9;\nloop invariant i23: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 10;\nloop invariant i24: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 11;\nloop invariant i25: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 12;\nloop invariant i26: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 13;\nloop invariant i27: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 14;\nloop invariant i28: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 15;\nloop invariant i29: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 16;\nloop invariant i30: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 17;\nloop invariant i31: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 18;\nloop invariant i32: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 19;\nloop invariant i33: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 20;\nloop invariant i34: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 21;\nloop invariant i35: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 22;\nloop invariant i36: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 23;\nloop invariant i37: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 24;\nloop invariant i38: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 25;\nloop invariant i39: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 26;\nloop invariant i40: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 27;\nloop invariant i41: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 28;\nloop invariant i42: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 29;\nloop invariant i43: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 30;\nloop invariant i44: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 31;\nloop invariant i45: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 32;\nloop invariant i46: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 33;\nloop invariant i47: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 34;\nloop invariant i48: glob2_p_off == glob2_pathbuf_off || glob2_p_off == glob2_pathbuf_off + 35;\nloop invariant i49: glob2_pathbuf_off <= glob2_p_off;\nloop invariant i50: glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant i51: 0 <= glob2_p_off;\nloop invariant i52: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off;\nloop invariant i53: glob2_pathbuf_off >= 0;\nloop invariant i54: glob2_p_off >= 0;\nloop invariant i55: glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant i56: glob2_pathlim_off >= 0;\nloop invariant i57: glob2_p_off <= glob2_pathlim_off - 1;\nloop invariant i58: glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant i59: glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant i60: glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1);\nloop invariant i61: glob2_pathlim_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant i62: glob2_pathlim_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant i63: glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant i64: glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant i65: glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant i66: glob2_p_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant i67: glob2_pathbuf_off < MAXPATHLEN + 1;\nloop invariant i68: glob2_pathlim_off < MAXPATHLEN + 1;\nloop invariant i69: glob2_p_off < glob2_pathlim_off + 1;\nloop invariant i70: glob2_p_off <= MAXPATHLEN;\nloop invariant i71: glob2_p_off < glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant i72: glob2_pathbuf_off <= glob2_p_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant i73: glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant i74: glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant i75: glob2_pathbuf_off <= glob2_p_off + 1;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n\n    {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
        "combined_annotation_num_solver_calls": 47,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int MAXPATHLEN;\n  int pathbuf_off;\n\n  int bound_off;\n\n  int glob2_p_off;\n  int glob2_pathbuf_off;\n  int glob2_pathlim_off;\n\n  MAXPATHLEN = unknown_int();\n  if(MAXPATHLEN > 0 && MAXPATHLEN < 2147483647); else goto END;\n\n  pathbuf_off = 0;\n  bound_off = pathbuf_off + (MAXPATHLEN + 1) - 1;\n\n  glob2_pathbuf_off = pathbuf_off;\n  glob2_pathlim_off = bound_off;\n\n  /*@\nloop invariant i1: 0 <= pathbuf_off <= MAXPATHLEN + 1;\nloop invariant i2: pathbuf_off + (MAXPATHLEN + 1) - 1 == bound_off;\nloop invariant i3: bound_off < MAXPATHLEN + 1;\nloop invariant i4: glob2_pathbuf_off == pathbuf_off;\nloop invariant i5: glob2_pathlim_off == bound_off;\n\n\n\nloop invariant i9: 0 <= pathbuf_off;\nloop invariant i10: bound_off >= pathbuf_off;\nloop invariant i11: glob2_p_off >= glob2_pathbuf_off;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i49: glob2_pathbuf_off <= glob2_p_off;\nloop invariant i50: glob2_pathbuf_off <= glob2_pathlim_off;\nloop invariant i51: 0 <= glob2_p_off;\n\nloop invariant i53: glob2_pathbuf_off >= 0;\nloop invariant i54: glob2_p_off >= 0;\nloop invariant i55: glob2_pathlim_off <= MAXPATHLEN + 1;\nloop invariant i56: glob2_pathlim_off >= 0;\n\nloop invariant i58: glob2_pathlim_off >= glob2_pathbuf_off;\nloop invariant i59: glob2_pathbuf_off <= glob2_pathlim_off + 1;\nloop invariant i60: glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1);\nloop invariant i61: glob2_pathlim_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant i62: glob2_pathlim_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\nloop invariant i63: glob2_pathbuf_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant i64: glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN;\nloop invariant i65: glob2_pathbuf_off <= glob2_pathbuf_off + MAXPATHLEN + 1;\n\nloop invariant i67: glob2_pathbuf_off < MAXPATHLEN + 1;\nloop invariant i68: glob2_pathlim_off < MAXPATHLEN + 1;\n\n\n\n\nloop invariant i73: glob2_pathbuf_off <= glob2_pathlim_off <= glob2_pathbuf_off + (MAXPATHLEN + 1) - 1;\nloop invariant i74: glob2_p_off <= glob2_pathlim_off + 1;\nloop invariant i75: glob2_pathbuf_off <= glob2_p_off + 1;\n*/\nfor (glob2_p_off = glob2_pathbuf_off;\n      glob2_p_off <= glob2_pathlim_off;\n      glob2_p_off++) {\n    \n    {;\n//@ assert(0 <= glob2_p_off );\n}\n\n    {;\n//@ assert(glob2_p_off < MAXPATHLEN + 1);\n}\n\n  }\n\n END:  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c"
        ],
        "skipped": [],
        "total": 103,
        "success_count": 92,
        "failure_count": 11,
        "success_rate": 0.8932038834951457
    }
}