{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/71.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  while (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= c;\nloop invariant 0 <= z;\nloop invariant 36 * y <= z;\nloop invariant c <= 36;\nloop invariant y <= z / 36;\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (y <= z / 36);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (36 * y <= z);\nloop invariant (c < 36) ==> (0 <= c);\nloop invariant (c < 36) ==> (0 <= z);\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (y <= z / 36);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (36 * y <= z);\nloop invariant (c < 36) ==> (0 <= c);\nloop invariant (c < 36) ==> (0 <= z);\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (y <= z / 36);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (36 * y <= z);\nloop invariant (c < 36) ==> (0 <= c);\nloop invariant (c < 36) ==> (0 <= z);\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (y <= z / 36);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (36 * y <= z);\nloop invariant (c < 36) ==> (0 <= c);\nloop invariant (c < 36) ==> (0 <= z);\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (y <= z / 36);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (36 * y <= z);\nloop invariant (c < 36) ==> (0 <= c);\nloop invariant (c < 36) ==> (0 <= z);\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (y <= z / 36);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (36 * y <= z);\nloop invariant (c < 36) ==> (0 <= c);\nloop invariant (c < 36) ==> (0 <= z);\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (y <= z / 36);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (36 * y <= z);\nloop invariant (c < 36) ==> (0 <= c);\nloop invariant (c < 36) ==> (0 <= z);\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (y <= z / 36);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (36 * y <= z);\nloop invariant (c < 36) ==> (0 <= c);\nloop invariant (c < 36) ==> (0 <= z);\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (y <= z / 36);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (36 * y <= z);\nloop invariant (c < 36) ==> (0 <= c);\nloop invariant (c < 36) ==> (0 <= z);\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (y <= z / 36);\nloop invariant (c < 36) ==> (c <= 36);\n*/\n```",
            "```\n/*@\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z = 36 * y;\nloop invariant c >= 0;\nloop invariant c <= 35;\nloop invariant c < 36;\nloop invariant z >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= z <= 36\\*y;\nloop invariant 0 <= c <= 36;\nloop invariant (c == 36) ==> (z == 36\\*y);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= z <= (36 * y);\nloop invariant 0 <= c <= 36;\nloop invariant z == (36 * y) + c;\nloop invariant c == z - (36 * y);\nloop invariant y == z / 36;\nloop invariant c == z % 36;\nloop invariant 0 <= z <= (36 * y);\nloop invariant 0 <= c <= 36;\nloop invariant z == (36 * y) + c;\nloop invariant c == z - (36 * y);\nloop invariant y == z / 36;\nloop invariant c == z % 36;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= 36 * y + 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= 36 * y + 36;\nloop invariant c == z - 36 * y;\nloop invariant z == c + 36 * y;\nloop invariant c < 36 ==> z == c + 36 * y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant c == 0 ==> y == (z / 36);\nloop invariant c < 36 ==> (z >= 36 * (c + 1));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant c < 36 ==> y >= 0;\nloop invariant c < 36 ==> y >= 127;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z <= (36 * (y + 1));\nloop invariant c < 36 ==> z <= 4147;\nloop invariant c < 36 ==> y <= 115;\nloop invariant c >= 36 ==> z >= 4148;\nloop invariant c >= 36 ==> y <= 116;\nloop invariant c >= 36 ==> y >= 115;\nloop invariant c >= 36 ==> z <= 4148;\nloop invariant c >= 36 ==> z <= 4148;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 36 * y <= z <= 36 * y + c;\nloop invariant 0 <= y <= 127;\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= 4488;\nloop invariant 0 <= c <= 36 ==> z >= 36 * y;\nloop invariant z >= 36 * y ==> c <= 36;\nloop invariant z >= 36 * y ==> c >= 0;\nloop invariant c >= 0 ==> z >= 36 * y;\nloop invariant c >= 0 ==> c <= 36;\nloop invariant c >= 0 ==> z <= 36 * y + c;\nloop invariant c <= 36 ==> z >= 36 * y;\nloop invariant c <= 36 ==> c >= 0;\nloop invariant c <= 36 ==> z <= 36 * y + c;\nloop invariant c <= 36 ==> c <= 0;\nloop invariant c <= 36 ==> z >= 36 * y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= z <= 36 * y + 36;\nloop invariant 0 <= c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 36 * y;\nloop invariant z <= 36 * y + 36 * c;\nloop invariant c <= z - 36 * y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= (36 * y + c);\nloop invariant z <= ((36 * y) + 36);\nloop invariant z >= ((36 * y) + 0);\nloop invariant c <= ((36 * y) + 36);\nloop invariant c >= ((36 * y) + 0);\nloop invariant z >= (36 * y);\nloop invariant z <= (36 * y + c);\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= z <= 256*127;\nloop invariant 0 <= c <= 36;\nloop invariant z == (36*y + c);\nloop invariant c == (c + 1) ==> (z == (z + 1));\nloop invariant c < 36 ==> (z >= 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= 36 * y;\nloop invariant c >= 0;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant 36 * y >= 0;\nloop invariant 36 * y <= 4476;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z >= 36 * y;\nloop invariant z <= 36 * y;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36 ==> c == 36;\nloop invariant 4572 <= z <= 4573 ==> z == 4573;\nloop invariant c < 36 ==> c < 36;\nloop invariant z < 4572 ==> z < 4572;\nloop invariant c < 36 ==> z >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= z <= 36 * y;\nloop invariant 0 <= c <= 36;\nloop invariant z = (36 * y + c);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= c <= 36;\nloop invariant 0 <= z <= 36 * y;\nloop invariant c <= 36;\nloop invariant z <= (36 * y + (c - 1));\nloop invariant z >= (c - 1);\nloop invariant c >= 0;\nloop invariant z >= 0;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant 127 <= y <= 127;\nloop invariant 127 <= y;\nloop invariant 0 <= z <= 36 * 127;\nloop invariant z <= (36 * 127);\nloop invariant z >= 0;\nloop invariant z >= (c - 1);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z <= (36 * y + (c - 1));\nloop invariant z >= (c - 1);\nloop invariant z >= 0;\nloop invariant z <= 36 * 127;\nloop invariant z >= 0;\nloop invariant z <= (36 * 127);\nloop invariant z >= 0;\nloop invariant z <= (36 * 127);\nloop invariant z >= 0;\nloop invariant z <= (36 * y + (c - 1));\nloop invariant z >= (c - 1);\nloop invariant z >= 0;\nloop invariant z <= (36 * 127);\nloop invariant z >= 0;\nloop invariant z <= (36 * 127);\nloop invariant z >= 0;\nloop invariant z <= (36 * y + (c - 1));\nloop invariant z >= (c - 1);\nloop invariant z >= 0;\nloop invariant z <= (36 * 127);\nloop invariant z >= 0;\nloop invariant z <= (36 * 127);\nloop invariant z >= 0;\nloop invariant z <= (36 * y + (c - 1));\nloop invariant z >= (c - 1);\nloop invariant z >= 0;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= c;\nloop invariant 0 <= z;\nloop invariant 36 * y <= z;\nloop invariant c <= 36;\nloop invariant y <= z / 36;\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (y <= z / 36);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (36 * y <= z);\nloop invariant (c < 36) ==> (0 <= c);\nloop invariant (c < 36) ==> (0 <= z);\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (y <= z / 36);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (36 * y <= z);\nloop invariant (c < 36) ==> (0 <= c);\nloop invariant (c < 36) ==> (0 <= z);\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (y <= z / 36);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (36 * y <= z);\nloop invariant (c < 36) ==> (0 <= c);\nloop invariant (c < 36) ==> (0 <= z);\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (y <= z / 36);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (36 * y <= z);\nloop invariant (c < 36) ==> (0 <= c);\nloop invariant (c < 36) ==> (0 <= z);\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (y <= z / 36);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (36 * y <= z);\nloop invariant (c < 36) ==> (0 <= c);\nloop invariant (c < 36) ==> (0 <= z);\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (y <= z / 36);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (36 * y <= z);\nloop invariant (c < 36) ==> (0 <= c);\nloop invariant (c < 36) ==> (0 <= z);\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (y <= z / 36);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (36 * y <= z);\nloop invariant (c < 36) ==> (0 <= c);\nloop invariant (c < 36) ==> (0 <= z);\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (y <= z / 36);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (36 * y <= z);\nloop invariant (c < 36) ==> (0 <= c);\nloop invariant (c < 36) ==> (0 <= z);\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (y <= z / 36);\nloop invariant (c < 36) ==> (c <= 36);\nloop invariant (c < 36) ==> (36 * y <= z);\nloop invariant (c < 36) ==> (0 <= c);\nloop invariant (c < 36) ==> (0 <= z);\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (y <= z / 36);\nloop invariant (c < 36) ==> (c <= 36);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c;\nloop invariant i2: 0 <= z;\nloop invariant i3: 36 * y <= z;\nloop invariant i4: c <= 36;\nloop invariant i5: y <= z / 36;\nloop invariant i6: (c < 36) ==> (z >= 0);\nloop invariant i7: (c < 36) ==> (y <= z / 36);\nloop invariant i8: (c < 36) ==> (c <= 36);\nloop invariant i9: (c < 36) ==> (36 * y <= z);\nloop invariant i10: (c < 36) ==> (0 <= c);\nloop invariant i11: (c < 36) ==> (0 <= z);\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z = 36 * y;\nloop invariant c >= 0;\nloop invariant c <= 35;\nloop invariant c < 36;\nloop invariant z >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: y >= 0;\nloop invariant i2: y >= 127;\n\nloop invariant i4: c >= 0;\n\n\nloop invariant i7: z >= 0;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= z <= 36\\*y;\nloop invariant 0 <= c <= 36;\nloop invariant (c == 36) ==> (z == 36\\*y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: 0 <= c <= 36;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= z <= (36 * y);\nloop invariant 0 <= c <= 36;\nloop invariant z == (36 * y) + c;\nloop invariant c == z - (36 * y);\nloop invariant y == z / 36;\nloop invariant c == z % 36;\nloop invariant 0 <= z <= (36 * y);\nloop invariant 0 <= c <= 36;\nloop invariant z == (36 * y) + c;\nloop invariant c == z - (36 * y);\nloop invariant y == z / 36;\nloop invariant c == z % 36;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: 0 <= c <= 36;\nloop invariant i3: z == (36 * y) + c;\nloop invariant i4: c == z - (36 * y);\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= 36 * y + 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= 36 * y + 36;\nloop invariant c == z - 36 * y;\nloop invariant z == c + 36 * y;\nloop invariant c < 36 ==> z == c + 36 * y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\nloop invariant i2: 0 <= z <= 36 * y + 36;\nloop invariant i3: c >= 0;\nloop invariant i4: c <= 36;\nloop invariant i5: z >= 36 * y;\nloop invariant i6: z <= 36 * y + 36;\nloop invariant i7: c == z - 36 * y;\nloop invariant i8: z == c + 36 * y;\nloop invariant i9: c < 36 ==> z == c + 36 * y;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant c == 0 ==> y == (z / 36);\nloop invariant c < 36 ==> (z >= 36 * (c + 1));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant c < 36 ==> y >= 0;\nloop invariant c < 36 ==> y >= 127;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z <= (36 * (y + 1));\nloop invariant c < 36 ==> z <= 4147;\nloop invariant c < 36 ==> y <= 115;\nloop invariant c >= 36 ==> z >= 4148;\nloop invariant c >= 36 ==> y <= 116;\nloop invariant c >= 36 ==> y >= 115;\nloop invariant c >= 36 ==> z <= 4148;\nloop invariant c >= 36 ==> z <= 4148;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: c < 36 ==> y >= 0;\nloop invariant i3: c < 36 ==> y >= 127;\nloop invariant i4: c < 36 ==> z >= 36 * y;\n\n\n\nloop invariant i8: c >= 36 ==> z >= 4148;\n\nloop invariant i10: c >= 36 ==> y >= 115;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 36 * y <= z <= 36 * y + c;\nloop invariant 0 <= y <= 127;\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= 4488;\nloop invariant 0 <= c <= 36 ==> z >= 36 * y;\nloop invariant z >= 36 * y ==> c <= 36;\nloop invariant z >= 36 * y ==> c >= 0;\nloop invariant c >= 0 ==> z >= 36 * y;\nloop invariant c >= 0 ==> c <= 36;\nloop invariant c >= 0 ==> z <= 36 * y + c;\nloop invariant c <= 36 ==> z >= 36 * y;\nloop invariant c <= 36 ==> c >= 0;\nloop invariant c <= 36 ==> z <= 36 * y + c;\nloop invariant c <= 36 ==> c <= 0;\nloop invariant c <= 36 ==> z >= 36 * y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\nloop invariant i2: 36 * y <= z <= 36 * y + c;\n\n\nloop invariant i5: 0 <= c <= 36 ==> z >= 36 * y;\nloop invariant i6: z >= 36 * y ==> c <= 36;\nloop invariant i7: z >= 36 * y ==> c >= 0;\nloop invariant i8: c >= 0 ==> z >= 36 * y;\nloop invariant i9: c >= 0 ==> c <= 36;\nloop invariant i10: c >= 0 ==> z <= 36 * y + c;\nloop invariant i11: c <= 36 ==> z >= 36 * y;\nloop invariant i12: c <= 36 ==> c >= 0;\nloop invariant i13: c <= 36 ==> z <= 36 * y + c;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= z <= 36 * y + 36;\nloop invariant 0 <= c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 36 * y;\nloop invariant z <= 36 * y + 36 * c;\nloop invariant c <= z - 36 * y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: 0 <= c <= 36;\nloop invariant i3: y >= 0;\nloop invariant i4: y >= 127;\nloop invariant i5: z >= 36 * y;\nloop invariant i6: z <= 36 * y + 36 * c;\nloop invariant i7: c <= z - 36 * y;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= (36 * y + c);\nloop invariant z <= ((36 * y) + 36);\nloop invariant z >= ((36 * y) + 0);\nloop invariant c <= ((36 * y) + 36);\nloop invariant c >= ((36 * y) + 0);\nloop invariant z >= (36 * y);\nloop invariant z <= (36 * y + c);\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z <= (36 * y + 36);\nloop invariant z >= (36 * y);\nloop invariant c <= 36;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\nloop invariant i2: 0 <= z <= (36 * y + c);\nloop invariant i3: z <= ((36 * y) + 36);\nloop invariant i4: z >= ((36 * y) + 0);\nloop invariant i5: c <= ((36 * y) + 36);\n\nloop invariant i7: z >= (36 * y);\nloop invariant i8: z <= (36 * y + c);\nloop invariant i9: z <= (36 * y + 36);\nloop invariant i10: c <= 36;\nloop invariant i11: c >= 0;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= z <= 256*127;\nloop invariant 0 <= c <= 36;\nloop invariant z == (36*y + c);\nloop invariant c == (c + 1) ==> (z == (z + 1));\nloop invariant c < 36 ==> (z >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: 0 <= c <= 36;\nloop invariant i3: z == (36*y + c);\nloop invariant i4: c == (c + 1) ==> (z == (z + 1));\nloop invariant i5: c < 36 ==> (z >= 0);\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= 36 * y;\nloop invariant c >= 0;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant 36 * y >= 0;\nloop invariant 36 * y <= 4476;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant z >= 36 * y;\nloop invariant z <= 36 * y;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4476;\nloop invariant c >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\nloop invariant i3: c >= 0;\nloop invariant i4: y >= 0;\nloop invariant i5: y >= 127;\nloop invariant i6: 36 * y >= 0;\n\nloop invariant i8: z >= 0;\n\nloop invariant i10: c <= 36;\nloop invariant i11: z >= 36 * y;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36 ==> c == 36;\nloop invariant 4572 <= z <= 4573 ==> z == 4573;\nloop invariant c < 36 ==> c < 36;\nloop invariant z < 4572 ==> z < 4572;\nloop invariant c < 36 ==> z >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\n\nloop invariant i3: c < 36 ==> c < 36;\nloop invariant i4: z < 4572 ==> z < 4572;\nloop invariant i5: c < 36 ==> z >= 0;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= z <= 36 * y;\nloop invariant 0 <= c <= 36;\nloop invariant z = (36 * y + c);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: 0 <= c <= 36;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 1 <= c <= 36;\nloop invariant 0 <= z <= 36 * y;\nloop invariant c <= 36;\nloop invariant z <= (36 * y + (c - 1));\nloop invariant z >= (c - 1);\nloop invariant c >= 0;\nloop invariant z >= 0;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant 127 <= y <= 127;\nloop invariant 127 <= y;\nloop invariant 0 <= z <= 36 * 127;\nloop invariant z <= (36 * 127);\nloop invariant z >= 0;\nloop invariant z >= (c - 1);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z <= (36 * y + (c - 1));\nloop invariant z >= (c - 1);\nloop invariant z >= 0;\nloop invariant z <= 36 * 127;\nloop invariant z >= 0;\nloop invariant z <= (36 * 127);\nloop invariant z >= 0;\nloop invariant z <= (36 * 127);\nloop invariant z >= 0;\nloop invariant z <= (36 * y + (c - 1));\nloop invariant z >= (c - 1);\nloop invariant z >= 0;\nloop invariant z <= (36 * 127);\nloop invariant z >= 0;\nloop invariant z <= (36 * 127);\nloop invariant z >= 0;\nloop invariant z <= (36 * y + (c - 1));\nloop invariant z >= (c - 1);\nloop invariant z >= 0;\nloop invariant z <= (36 * 127);\nloop invariant z >= 0;\nloop invariant z <= (36 * 127);\nloop invariant z >= 0;\nloop invariant z <= (36 * y + (c - 1));\nloop invariant z >= (c - 1);\nloop invariant z >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\n\nloop invariant i3: c <= 36;\n\nloop invariant i5: z >= (c - 1);\nloop invariant i6: c >= 0;\nloop invariant i7: z >= 0;\nloop invariant i8: y >= 0;\nloop invariant i9: y >= 127;\n\nloop invariant i11: 127 <= y;\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 34: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c;\nloop invariant i2: 0 <= z;\nloop invariant i3: 36 * y <= z;\nloop invariant i4: c <= 36;\nloop invariant i5: y <= z / 36;\nloop invariant i6: (c < 36) ==> (z >= 0);\nloop invariant i7: (c < 36) ==> (y <= z / 36);\nloop invariant i8: (c < 36) ==> (c <= 36);\nloop invariant i9: (c < 36) ==> (36 * y <= z);\nloop invariant i10: (c < 36) ==> (0 <= c);\nloop invariant i11: (c < 36) ==> (0 <= z);\nloop invariant i12: y >= 0;\nloop invariant i13: y >= 127;\nloop invariant i14: z = 36 * y;\nloop invariant i15: c >= 0;\nloop invariant i16: c <= 35;\nloop invariant i17: c < 36;\nloop invariant i18: z >= 0;\nloop invariant i19: 0 <= z <= 36\\*y;\nloop invariant i20: 0 <= c <= 36;\nloop invariant i21: (c == 36) ==> (z == 36\\*y);\nloop invariant i22: 0 <= z <= (36 * y);\nloop invariant i23: z == (36 * y) + c;\nloop invariant i24: c == z - (36 * y);\nloop invariant i25: y == z / 36;\nloop invariant i26: c == z % 36;\nloop invariant i27: 0 <= z <= 36 * y + 36;\nloop invariant i28: z >= 36 * y;\nloop invariant i29: z <= 36 * y + 36;\nloop invariant i30: c == z - 36 * y;\nloop invariant i31: z == c + 36 * y;\nloop invariant i32: c < 36 ==> z == c + 36 * y;\nloop invariant i33: 0 <= c <= 35;\nloop invariant i34: c == 0 ==> y == (z / 36);\nloop invariant i35: c < 36 ==> (z >= 36 * (c + 1));\nloop invariant i36: c < 36 ==> y >= 0;\nloop invariant i37: c < 36 ==> y >= 127;\nloop invariant i38: c < 36 ==> z >= 36 * y;\nloop invariant i39: c < 36 ==> z <= (36 * (y + 1));\nloop invariant i40: c < 36 ==> z <= 4147;\nloop invariant i41: c < 36 ==> y <= 115;\nloop invariant i42: c >= 36 ==> z >= 4148;\nloop invariant i43: c >= 36 ==> y <= 116;\nloop invariant i44: c >= 36 ==> y >= 115;\nloop invariant i45: c >= 36 ==> z <= 4148;\nloop invariant i46: 36 * y <= z <= 36 * y + c;\nloop invariant i47: 0 <= y <= 127;\nloop invariant i48: 0 <= z <= 4488;\nloop invariant i49: 0 <= c <= 36 ==> z >= 36 * y;\nloop invariant i50: z >= 36 * y ==> c <= 36;\nloop invariant i51: z >= 36 * y ==> c >= 0;\nloop invariant i52: c >= 0 ==> z >= 36 * y;\nloop invariant i53: c >= 0 ==> c <= 36;\nloop invariant i54: c >= 0 ==> z <= 36 * y + c;\nloop invariant i55: c <= 36 ==> z >= 36 * y;\nloop invariant i56: c <= 36 ==> c >= 0;\nloop invariant i57: c <= 36 ==> z <= 36 * y + c;\nloop invariant i58: c <= 36 ==> c <= 0;\nloop invariant i59: z <= 36 * y + 36 * c;\nloop invariant i60: c <= z - 36 * y;\nloop invariant i61: 0 <= z <= (36 * y + c);\nloop invariant i62: z <= ((36 * y) + 36);\nloop invariant i63: z >= ((36 * y) + 0);\nloop invariant i64: c <= ((36 * y) + 36);\nloop invariant i65: c >= ((36 * y) + 0);\nloop invariant i66: z >= (36 * y);\nloop invariant i67: z <= (36 * y + c);\nloop invariant i68: z <= (36 * y + 36);\nloop invariant i69: 0 <= z <= 256*127;\nloop invariant i70: z == (36*y + c);\nloop invariant i71: c == (c + 1) ==> (z == (z + 1));\nloop invariant i72: c < 36 ==> (z >= 0);\nloop invariant i73: 0 <= z <= 36 * y;\nloop invariant i74: 36 * y >= 0;\nloop invariant i75: 36 * y <= 4476;\nloop invariant i76: z <= 4476;\nloop invariant i77: z <= 36 * y;\nloop invariant i78: 0 <= c <= 36 ==> c == 36;\nloop invariant i79: 4572 <= z <= 4573 ==> z == 4573;\nloop invariant i80: c < 36 ==> c < 36;\nloop invariant i81: z < 4572 ==> z < 4572;\nloop invariant i82: c < 36 ==> z >= 0;\nloop invariant i83: z = (36 * y + c);\nloop invariant i84: 1 <= c <= 36;\nloop invariant i85: z <= (36 * y + (c - 1));\nloop invariant i86: z >= (c - 1);\nloop invariant i87: 127 <= y <= 127;\nloop invariant i88: 127 <= y;\nloop invariant i89: 0 <= z <= 36 * 127;\nloop invariant i90: z <= (36 * 127);\nloop invariant i91: z <= 36 * 127;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 25,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c;\nloop invariant i2: 0 <= z;\nloop invariant i3: 36 * y <= z;\nloop invariant i4: c <= 36;\nloop invariant i5: y <= z / 36;\nloop invariant i6: (c < 36) ==> (z >= 0);\nloop invariant i7: (c < 36) ==> (y <= z / 36);\nloop invariant i8: (c < 36) ==> (c <= 36);\nloop invariant i9: (c < 36) ==> (36 * y <= z);\nloop invariant i10: (c < 36) ==> (0 <= c);\nloop invariant i11: (c < 36) ==> (0 <= z);\nloop invariant i12: y >= 0;\nloop invariant i13: y >= 127;\n\nloop invariant i15: c >= 0;\n\n\nloop invariant i18: z >= 0;\n\nloop invariant i20: 0 <= c <= 36;\n\n\nloop invariant i23: z == (36 * y) + c;\nloop invariant i24: c == z - (36 * y);\n\n\nloop invariant i27: 0 <= z <= 36 * y + 36;\nloop invariant i28: z >= 36 * y;\nloop invariant i29: z <= 36 * y + 36;\nloop invariant i30: c == z - 36 * y;\nloop invariant i31: z == c + 36 * y;\nloop invariant i32: c < 36 ==> z == c + 36 * y;\n\nloop invariant i34: c == 0 ==> y == (z / 36);\nloop invariant i35: c < 36 ==> (z >= 36 * (c + 1));\nloop invariant i36: c < 36 ==> y >= 0;\nloop invariant i37: c < 36 ==> y >= 127;\nloop invariant i38: c < 36 ==> z >= 36 * y;\nloop invariant i39: c < 36 ==> z <= (36 * (y + 1));\n\n\nloop invariant i42: c >= 36 ==> z >= 4148;\n\nloop invariant i44: c >= 36 ==> y >= 115;\n\nloop invariant i46: 36 * y <= z <= 36 * y + c;\n\n\nloop invariant i49: 0 <= c <= 36 ==> z >= 36 * y;\nloop invariant i50: z >= 36 * y ==> c <= 36;\nloop invariant i51: z >= 36 * y ==> c >= 0;\nloop invariant i52: c >= 0 ==> z >= 36 * y;\nloop invariant i53: c >= 0 ==> c <= 36;\nloop invariant i54: c >= 0 ==> z <= 36 * y + c;\nloop invariant i55: c <= 36 ==> z >= 36 * y;\nloop invariant i56: c <= 36 ==> c >= 0;\nloop invariant i57: c <= 36 ==> z <= 36 * y + c;\n\nloop invariant i59: z <= 36 * y + 36 * c;\nloop invariant i60: c <= z - 36 * y;\nloop invariant i61: 0 <= z <= (36 * y + c);\nloop invariant i62: z <= ((36 * y) + 36);\nloop invariant i63: z >= ((36 * y) + 0);\nloop invariant i64: c <= ((36 * y) + 36);\n\nloop invariant i66: z >= (36 * y);\nloop invariant i67: z <= (36 * y + c);\nloop invariant i68: z <= (36 * y + 36);\n\nloop invariant i70: z == (36*y + c);\nloop invariant i71: c == (c + 1) ==> (z == (z + 1));\nloop invariant i72: c < 36 ==> (z >= 0);\n\nloop invariant i74: 36 * y >= 0;\n\n\n\n\n\nloop invariant i80: c < 36 ==> c < 36;\nloop invariant i81: z < 4572 ==> z < 4572;\nloop invariant i82: c < 36 ==> z >= 0;\n\n\n\nloop invariant i86: z >= (c - 1);\n\nloop invariant i88: 127 <= y;\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c"
        ],
        "skipped": [],
        "total": 60,
        "success_count": 51,
        "failure_count": 9,
        "success_rate": 0.85
    }
}