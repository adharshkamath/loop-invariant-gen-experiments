{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/67.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    while (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= n + 1;\nloop invariant 0 <= y <= n;\nloop invariant y == n - x;\nloop invariant y >= 0 ==> (n > 0);\nloop invariant x <= n ==> (n > 0);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\n*/\n```",
            "```\n/*@\nloop invariant n > 0 ==> 0 <= y <= 1;\nloop invariant n > 0 ==> 0 <= x <= n;\nloop invariant n > 0 ==> x > y;\nloop invariant n > 0 ==> x >= n ==> y = 0;\nloop invariant n > 0 ==> x < n ==> y > 0;\nloop invariant n > 0 ==> x > y ==> y = n - x;\nloop invariant n > 0 ==> x < n ==> y > n - x;\nloop invariant n > 0 ==> x > y ==> x >= n;\nloop invariant n > 0 ==> x < n ==> x <= n - 1;\nloop invariant n > 0 ==> y > 0 ==> y > n - x;\nloop invariant n > 0 ==> y > 0 ==> y <= n - x;\nloop invariant n > 0 ==> y = 0 ==> y = n - x;\nloop invariant n > 0 ==> y > 0 ==> y = n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> y <= n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> x = n - y;\nloop invariant n > 0 ==> y > 0 ==> x >= n - y;\nloop invariant n > 0 ==> y > 0 ==> x <= n - y + 1;\nloop invariant n > 0 ==> y > 0 ==> y = n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> y <= n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> x = n - y;\nloop invariant n > 0 ==> y > 0 ==> x >= n - y;\nloop invariant n > 0 ==> y > 0 ==> x <= n - y + 1;\nloop invariant n > 0 ==> y > 0 ==> y = n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> y <= n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> x = n - y;\nloop invariant n > 0 ==> y > 0 ==> x >= n - y;\nloop invariant n > 0 ==> y > 0 ==> x <= n - y + 1;\nloop invariant n > 0 ==> y > 0 ==> y = n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> y <= n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> x = n - y;\nloop invariant n > 0 ==> y > 0 ==> x >= n - y;\nloop invariant n > 0 ==> y > 0 ==> x <= n - y + 1;\nloop invariant n > 0 ==> y > 0 ==> y = n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> y <= n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> x = n - y;\nloop invariant n > 0 ==> y > 0 ==> x >= n - y;\nloop invariant n > 0 ==> y > 0 ==> x <= n - y + 1;\nloop invariant n > 0 ==> y > 0 ==> y = n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> y <= n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> x = n - y;\nloop invariant n > 0 ==> y > 0 ==> x >= n - y;\nloop invariant n > 0 ==> y > 0 ==> x <= n - y + 1;\nloop invariant n > 0 ==> y > 0 ==> y = n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> y <= n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> x = n - y;\nloop invariant n > 0 ==> y > 0 ==> x >= n - y;\nloop invariant n > 0 ==> y > 0 ==> x <= n - y + 1;\nloop invariant n > 0 ==> y > 0 ==> y = n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> y <= n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> x = n - y;\nloop invariant n > 0 ==> y > 0 ==> x >= n - y;\nloop invariant n > 0 ==> y > 0 ==> x <= n - y + 1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 1 + n;\nloop invariant y >= n - x;\nloop invariant x <= y;\nloop invariant y == (n - x);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= n + 1;\nloop invariant y = n - x;\nloop invariant x <= n;\nloop invariant y >= 0;\nloop invariant n > 0 ==> y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 < x <= n;\nloop invariant (n - x) >= 0;\nloop invariant (n - x) <= n;\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant 0 <= y <= n - x + 1;\nloop invariant y = n - x + 1;\nloop invariant x + y <= 2 * n;\nloop invariant x + y = 2 * n;\nloop invariant x = n;\nloop invariant x = n ==> y = 0;\nloop invariant x = n ==> y = 0 ==> n > 0;\nloop invariant x = n ==> y = 0 ==> n > 0 ==> y >= 0;\nloop invariant 1 <= x <= n;\nloop invariant 0 <= y <= n - x + 1;\nloop invariant y = n - x + 1;\nloop invariant x + y <= 2 * n;\nloop invariant x + y = 2 * n;\nloop invariant x = n;\nloop invariant x = n ==> y = 0;\nloop invariant x = n ==> y = 0 ==> n > 0;\nloop invariant x = n ==> y = 0 ==> n > 0 ==> y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant y = n - x;\nloop invariant n >= 0;\n*/\n```",
            "```\n/*@\nloop invariant y >= 0;\nloop invariant x > 0;\nloop invariant x <= n + 1;\nloop invariant y <= n - x + 1;\nloop invariant x + y <= n + 1;\nloop invariant n - x + 1 >= 0;\nloop invariant n - x + 1 <= n;\nloop invariant n - x + 1 >= y;\nloop invariant n - x + 1 >= 0;\nloop invariant n - x + 1 <= n;\nloop invariant n - x + 1 >= y ==> y >= 0;\nloop invariant n - x + 1 <= n ==> y <= n;\nloop invariant n - x + 1 >= y ==> y >= 0 ==> y >= 0;\nloop invariant n - x + 1 <= n ==> y <= n ==> y <= n;\nloop invariant x > 0 ==> x > 0;\nloop invariant x <= n + 1 ==> x <= n + 1;\nloop invariant y <= n - x + 1 ==> y <= n - x + 1;\nloop invariant x + y <= n + 1 ==> x + y <= n + 1;\nloop invariant n - x + 1 >= 0 ==> n - x + 1 >= 0;\nloop invariant n - x + 1 <= n ==> n - x + 1 <= n;\nloop invariant n - x + 1 >= y ==> n - x + 1 >= y ==> y >= 0;\nloop invariant n - x + 1 <= n ==> y <= n ==> y <= n;\nloop invariant x > 0 ==> x > 0 ==> x > 0;\nloop invariant x <= n + 1 ==> x <= n + 1 ==> x <= n + 1;\nloop invariant y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1;\nloop invariant x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1;\nloop invariant n - x + 1 >= 0 ==> n - x + 1 >= 0 ==> n - x + 1 >= 0;\nloop invariant n - x + 1 <= n ==> n - x + 1 <= n ==> n - x + 1 <= n;\nloop invariant n - x + 1 >= y ==> n - x + 1 >= y ==> y >= 0 ==> y >= 0;\nloop invariant n - x + 1 <= n ==> y <= n ==> y <= n ==> y <= n;\nloop invariant x > 0 ==> x > 0 ==> x > 0 ==> x > 0;\nloop invariant x <= n + 1 ==> x <= n + 1 ==> x <= n + 1 ==> x <= n + 1;\nloop invariant y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1;\nloop invariant x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1;\nloop invariant n - x + 1 >= 0 ==> n - x + 1 >= 0 ==> n - x + 1 >= 0 ==> n - x + 1 >= 0;\nloop invariant n - x + 1 <= n ==> n - x + 1 <= n ==> n - x + 1 <= n ==> n - x + 1 <= n;\nloop invariant n - x + 1 >= y ==> n - x + 1 >= y ==> y >= 0 ==> y >= 0 ==> y >= 0;\nloop invariant n - x + 1 <= n ==> y <= n ==> y <= n ==> y <= n ==> y <= n;\nloop invariant x > 0 ==> x > 0 ==> x > 0 ==> x > 0 ==> x > 0;\nloop invariant x <= n + 1 ==> x <= n + 1 ==> x <= n + 1 ==> x <= n + 1 ==> x <= n + 1;\nloop invariant y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1;\nloop invariant x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n + 1;\nloop invariant y = n - x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant y = n - x;\nloop invariant x <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= y;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\n*/\n```",
            "```\n/*@\nloop invariant x <= n;\nloop invariant y = n - x + 1;\nloop invariant n > 0;\nloop invariant x > 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= n + 1;\nloop invariant 0 <= y <= n;\nloop invariant y == n - x;\n*/\n```",
            "```\n/*@\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant n > 0 ==> n - x == y;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= n + 1;\nloop invariant 0 <= y <= n - x;\nloop invariant n > 0 ==> y >= 0;\nloop invariant n <= 0 ==> y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n + 1;\nloop invariant x > y;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant x <= n + 1;\nloop invariant n > 0 ==> (y >= 0);\nloop invariant n > 0 ==> (y <= n - x);\nloop invariant n > 0 ==> (x <= n + 1);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n + 1;\nloop invariant 0 <= y <= n;\nloop invariant y == n - x;\nloop invariant y >= 0 ==> (n > 0);\nloop invariant x <= n ==> (n > 0);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\nloop invariant y >= 0 ==> (x <= n + 1);\nloop invariant y >= 0 ==> (y <= n);\nloop invariant y >= 0 ==> (y == n - x);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n\nloop invariant i5: x <= n ==> (n > 0);\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 10,
                "annotations": "```\n/*@\nloop invariant n > 0 ==> 0 <= y <= 1;\nloop invariant n > 0 ==> 0 <= x <= n;\nloop invariant n > 0 ==> x > y;\nloop invariant n > 0 ==> x >= n ==> y = 0;\nloop invariant n > 0 ==> x < n ==> y > 0;\nloop invariant n > 0 ==> x > y ==> y = n - x;\nloop invariant n > 0 ==> x < n ==> y > n - x;\nloop invariant n > 0 ==> x > y ==> x >= n;\nloop invariant n > 0 ==> x < n ==> x <= n - 1;\nloop invariant n > 0 ==> y > 0 ==> y > n - x;\nloop invariant n > 0 ==> y > 0 ==> y <= n - x;\nloop invariant n > 0 ==> y = 0 ==> y = n - x;\nloop invariant n > 0 ==> y > 0 ==> y = n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> y <= n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> x = n - y;\nloop invariant n > 0 ==> y > 0 ==> x >= n - y;\nloop invariant n > 0 ==> y > 0 ==> x <= n - y + 1;\nloop invariant n > 0 ==> y > 0 ==> y = n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> y <= n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> x = n - y;\nloop invariant n > 0 ==> y > 0 ==> x >= n - y;\nloop invariant n > 0 ==> y > 0 ==> x <= n - y + 1;\nloop invariant n > 0 ==> y > 0 ==> y = n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> y <= n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> x = n - y;\nloop invariant n > 0 ==> y > 0 ==> x >= n - y;\nloop invariant n > 0 ==> y > 0 ==> x <= n - y + 1;\nloop invariant n > 0 ==> y > 0 ==> y = n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> y <= n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> x = n - y;\nloop invariant n > 0 ==> y > 0 ==> x >= n - y;\nloop invariant n > 0 ==> y > 0 ==> x <= n - y + 1;\nloop invariant n > 0 ==> y > 0 ==> y = n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> y <= n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> x = n - y;\nloop invariant n > 0 ==> y > 0 ==> x >= n - y;\nloop invariant n > 0 ==> y > 0 ==> x <= n - y + 1;\nloop invariant n > 0 ==> y > 0 ==> y = n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> y <= n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> x = n - y;\nloop invariant n > 0 ==> y > 0 ==> x >= n - y;\nloop invariant n > 0 ==> y > 0 ==> x <= n - y + 1;\nloop invariant n > 0 ==> y > 0 ==> y = n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> y <= n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> x = n - y;\nloop invariant n > 0 ==> y > 0 ==> x >= n - y;\nloop invariant n > 0 ==> y > 0 ==> x <= n - y + 1;\nloop invariant n > 0 ==> y > 0 ==> y = n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> y <= n - x + 1;\nloop invariant n > 0 ==> y > 0 ==> x = n - y;\nloop invariant n > 0 ==> y > 0 ==> x >= n - y;\nloop invariant n > 0 ==> y > 0 ==> x <= n - y + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n\n\n\n\n\nloop invariant i9: n > 0 ==> x < n ==> x <= n - 1;\n\n\n\n\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 1 + n;\nloop invariant y >= n - x;\nloop invariant x <= y;\nloop invariant y == (n - x);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= n + 1;\nloop invariant y = n - x;\nloop invariant x <= n;\nloop invariant y >= 0;\nloop invariant n > 0 ==> y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 < x <= n;\nloop invariant (n - x) >= 0;\nloop invariant (n - x) <= n;\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\nloop invariant (n - x) <= (n - (x - 1));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\nloop invariant i3: (n - x) <= n;\nloop invariant i4: (n - x) <= (n - (x - 1));\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant 0 <= y <= n - x + 1;\nloop invariant y = n - x + 1;\nloop invariant x + y <= 2 * n;\nloop invariant x + y = 2 * n;\nloop invariant x = n;\nloop invariant x = n ==> y = 0;\nloop invariant x = n ==> y = 0 ==> n > 0;\nloop invariant x = n ==> y = 0 ==> n > 0 ==> y >= 0;\nloop invariant 1 <= x <= n;\nloop invariant 0 <= y <= n - x + 1;\nloop invariant y = n - x + 1;\nloop invariant x + y <= 2 * n;\nloop invariant x + y = 2 * n;\nloop invariant x = n;\nloop invariant x = n ==> y = 0;\nloop invariant x = n ==> y = 0 ==> n > 0;\nloop invariant x = n ==> y = 0 ==> n > 0 ==> y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n\n\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant y = n - x;\nloop invariant n >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant y >= 0;\nloop invariant x > 0;\nloop invariant x <= n + 1;\nloop invariant y <= n - x + 1;\nloop invariant x + y <= n + 1;\nloop invariant n - x + 1 >= 0;\nloop invariant n - x + 1 <= n;\nloop invariant n - x + 1 >= y;\nloop invariant n - x + 1 >= 0;\nloop invariant n - x + 1 <= n;\nloop invariant n - x + 1 >= y ==> y >= 0;\nloop invariant n - x + 1 <= n ==> y <= n;\nloop invariant n - x + 1 >= y ==> y >= 0 ==> y >= 0;\nloop invariant n - x + 1 <= n ==> y <= n ==> y <= n;\nloop invariant x > 0 ==> x > 0;\nloop invariant x <= n + 1 ==> x <= n + 1;\nloop invariant y <= n - x + 1 ==> y <= n - x + 1;\nloop invariant x + y <= n + 1 ==> x + y <= n + 1;\nloop invariant n - x + 1 >= 0 ==> n - x + 1 >= 0;\nloop invariant n - x + 1 <= n ==> n - x + 1 <= n;\nloop invariant n - x + 1 >= y ==> n - x + 1 >= y ==> y >= 0;\nloop invariant n - x + 1 <= n ==> y <= n ==> y <= n;\nloop invariant x > 0 ==> x > 0 ==> x > 0;\nloop invariant x <= n + 1 ==> x <= n + 1 ==> x <= n + 1;\nloop invariant y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1;\nloop invariant x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1;\nloop invariant n - x + 1 >= 0 ==> n - x + 1 >= 0 ==> n - x + 1 >= 0;\nloop invariant n - x + 1 <= n ==> n - x + 1 <= n ==> n - x + 1 <= n;\nloop invariant n - x + 1 >= y ==> n - x + 1 >= y ==> y >= 0 ==> y >= 0;\nloop invariant n - x + 1 <= n ==> y <= n ==> y <= n ==> y <= n;\nloop invariant x > 0 ==> x > 0 ==> x > 0 ==> x > 0;\nloop invariant x <= n + 1 ==> x <= n + 1 ==> x <= n + 1 ==> x <= n + 1;\nloop invariant y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1;\nloop invariant x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1;\nloop invariant n - x + 1 >= 0 ==> n - x + 1 >= 0 ==> n - x + 1 >= 0 ==> n - x + 1 >= 0;\nloop invariant n - x + 1 <= n ==> n - x + 1 <= n ==> n - x + 1 <= n ==> n - x + 1 <= n;\nloop invariant n - x + 1 >= y ==> n - x + 1 >= y ==> y >= 0 ==> y >= 0 ==> y >= 0;\nloop invariant n - x + 1 <= n ==> y <= n ==> y <= n ==> y <= n ==> y <= n;\nloop invariant x > 0 ==> x > 0 ==> x > 0 ==> x > 0 ==> x > 0;\nloop invariant x <= n + 1 ==> x <= n + 1 ==> x <= n + 1 ==> x <= n + 1 ==> x <= n + 1;\nloop invariant y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1;\nloop invariant x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\nloop invariant i2: x > 0;\n\n\n\n\nloop invariant i7: n - x + 1 <= n;\n\n\n\nloop invariant i11: n - x + 1 >= y ==> y >= 0 ==> y >= 0;\nloop invariant i12: n - x + 1 <= n ==> y <= n ==> y <= n;\nloop invariant i13: x > 0 ==> x > 0;\nloop invariant i14: x <= n + 1 ==> x <= n + 1;\nloop invariant i15: y <= n - x + 1 ==> y <= n - x + 1;\nloop invariant i16: x + y <= n + 1 ==> x + y <= n + 1;\nloop invariant i17: n - x + 1 >= 0 ==> n - x + 1 >= 0;\nloop invariant i18: n - x + 1 <= n ==> n - x + 1 <= n;\n\nloop invariant i20: x > 0 ==> x > 0 ==> x > 0;\nloop invariant i21: x <= n + 1 ==> x <= n + 1 ==> x <= n + 1;\nloop invariant i22: y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1;\nloop invariant i23: x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1;\nloop invariant i24: n - x + 1 >= 0 ==> n - x + 1 >= 0 ==> n - x + 1 >= 0;\nloop invariant i25: n - x + 1 <= n ==> n - x + 1 <= n ==> n - x + 1 <= n;\nloop invariant i26: n - x + 1 >= y ==> n - x + 1 >= y ==> y >= 0 ==> y >= 0;\nloop invariant i27: n - x + 1 <= n ==> y <= n ==> y <= n ==> y <= n;\nloop invariant i28: x > 0 ==> x > 0 ==> x > 0 ==> x > 0;\nloop invariant i29: x <= n + 1 ==> x <= n + 1 ==> x <= n + 1 ==> x <= n + 1;\nloop invariant i30: y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1;\nloop invariant i31: x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1;\nloop invariant i32: n - x + 1 >= 0 ==> n - x + 1 >= 0 ==> n - x + 1 >= 0 ==> n - x + 1 >= 0;\nloop invariant i33: n - x + 1 <= n ==> n - x + 1 <= n ==> n - x + 1 <= n ==> n - x + 1 <= n;\nloop invariant i34: n - x + 1 >= y ==> n - x + 1 >= y ==> y >= 0 ==> y >= 0 ==> y >= 0;\nloop invariant i35: n - x + 1 <= n ==> y <= n ==> y <= n ==> y <= n ==> y <= n;\nloop invariant i36: x > 0 ==> x > 0 ==> x > 0 ==> x > 0 ==> x > 0;\nloop invariant i37: x <= n + 1 ==> x <= n + 1 ==> x <= n + 1 ==> x <= n + 1 ==> x <= n + 1;\nloop invariant i38: y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1;\nloop invariant i39: x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1;\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n + 1;\nloop invariant y = n - x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant y = n - x;\nloop invariant x <= n;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= y;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant x <= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n\n\n\nloop invariant i7: y <= y;\nloop invariant i8: x <= x;\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x <= n;\nloop invariant y = n - x + 1;\nloop invariant n > 0;\nloop invariant x > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\nloop invariant i4: x > 0;\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= n + 1;\nloop invariant 0 <= y <= n;\nloop invariant y == n - x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x <= n;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant n > 0 ==> n - x == y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\nloop invariant i2: x >= 1;\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= n + 1;\nloop invariant 0 <= y <= n - x;\nloop invariant n > 0 ==> y >= 0;\nloop invariant n <= 0 ==> y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n + 1;\nloop invariant x > y;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant x <= n + 1;\nloop invariant n > 0 ==> (y >= 0);\nloop invariant n > 0 ==> (y <= n - x);\nloop invariant n > 0 ==> (x <= n + 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n\n\n\n\nloop invariant i8: n > 0 ==> (x <= n + 1);\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 23: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\nloop invariant i1: 0 <= x <= n + 1;\nloop invariant i2: 0 <= y <= n;\nloop invariant i3: y == n - x;\nloop invariant i4: y >= 0 ==> (n > 0);\nloop invariant i5: x <= n ==> (n > 0);\nloop invariant i6: y >= 0 ==> (x <= n + 1);\nloop invariant i7: y >= 0 ==> (y <= n);\nloop invariant i8: y >= 0 ==> (y == n - x);\nloop invariant i9: n > 0 ==> 0 <= y <= 1;\nloop invariant i10: n > 0 ==> 0 <= x <= n;\nloop invariant i11: n > 0 ==> x > y;\nloop invariant i12: n > 0 ==> x >= n ==> y = 0;\nloop invariant i13: n > 0 ==> x < n ==> y > 0;\nloop invariant i14: n > 0 ==> x > y ==> y = n - x;\nloop invariant i15: n > 0 ==> x < n ==> y > n - x;\nloop invariant i16: n > 0 ==> x > y ==> x >= n;\nloop invariant i17: n > 0 ==> x < n ==> x <= n - 1;\nloop invariant i18: n > 0 ==> y > 0 ==> y > n - x;\nloop invariant i19: n > 0 ==> y > 0 ==> y <= n - x;\nloop invariant i20: n > 0 ==> y = 0 ==> y = n - x;\nloop invariant i21: n > 0 ==> y > 0 ==> y = n - x + 1;\nloop invariant i22: n > 0 ==> y > 0 ==> y <= n - x + 1;\nloop invariant i23: n > 0 ==> y > 0 ==> x = n - y;\nloop invariant i24: n > 0 ==> y > 0 ==> x >= n - y;\nloop invariant i25: n > 0 ==> y > 0 ==> x <= n - y + 1;\nloop invariant i26: 1 <= x <= 1 + n;\nloop invariant i27: y >= n - x;\nloop invariant i28: x <= y;\nloop invariant i29: y == (n - x);\nloop invariant i30: 1 <= x <= n + 1;\nloop invariant i31: y = n - x;\nloop invariant i32: x <= n;\nloop invariant i33: y >= 0;\nloop invariant i34: n > 0 ==> y >= 0;\nloop invariant i35: 0 < x <= n;\nloop invariant i36: (n - x) >= 0;\nloop invariant i37: (n - x) <= n;\nloop invariant i38: (n - x) <= (n - (x - 1));\nloop invariant i39: 1 <= x <= n;\nloop invariant i40: 0 <= y <= n - x + 1;\nloop invariant i41: y = n - x + 1;\nloop invariant i42: x + y <= 2 * n;\nloop invariant i43: x + y = 2 * n;\nloop invariant i44: x = n;\nloop invariant i45: x = n ==> y = 0;\nloop invariant i46: x = n ==> y = 0 ==> n > 0;\nloop invariant i47: x = n ==> y = 0 ==> n > 0 ==> y >= 0;\nloop invariant i48: 0 <= x <= n;\nloop invariant i49: n >= 0;\nloop invariant i50: x > 0;\nloop invariant i51: x <= n + 1;\nloop invariant i52: y <= n - x + 1;\nloop invariant i53: x + y <= n + 1;\nloop invariant i54: n - x + 1 >= 0;\nloop invariant i55: n - x + 1 <= n;\nloop invariant i56: n - x + 1 >= y;\nloop invariant i57: n - x + 1 >= y ==> y >= 0;\nloop invariant i58: n - x + 1 <= n ==> y <= n;\nloop invariant i59: n - x + 1 >= y ==> y >= 0 ==> y >= 0;\nloop invariant i60: n - x + 1 <= n ==> y <= n ==> y <= n;\nloop invariant i61: x > 0 ==> x > 0;\nloop invariant i62: x <= n + 1 ==> x <= n + 1;\nloop invariant i63: y <= n - x + 1 ==> y <= n - x + 1;\nloop invariant i64: x + y <= n + 1 ==> x + y <= n + 1;\nloop invariant i65: n - x + 1 >= 0 ==> n - x + 1 >= 0;\nloop invariant i66: n - x + 1 <= n ==> n - x + 1 <= n;\nloop invariant i67: n - x + 1 >= y ==> n - x + 1 >= y ==> y >= 0;\nloop invariant i68: x > 0 ==> x > 0 ==> x > 0;\nloop invariant i69: x <= n + 1 ==> x <= n + 1 ==> x <= n + 1;\nloop invariant i70: y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1;\nloop invariant i71: x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1;\nloop invariant i72: n - x + 1 >= 0 ==> n - x + 1 >= 0 ==> n - x + 1 >= 0;\nloop invariant i73: n - x + 1 <= n ==> n - x + 1 <= n ==> n - x + 1 <= n;\nloop invariant i74: n - x + 1 >= y ==> n - x + 1 >= y ==> y >= 0 ==> y >= 0;\nloop invariant i75: n - x + 1 <= n ==> y <= n ==> y <= n ==> y <= n;\nloop invariant i76: x > 0 ==> x > 0 ==> x > 0 ==> x > 0;\nloop invariant i77: x <= n + 1 ==> x <= n + 1 ==> x <= n + 1 ==> x <= n + 1;\nloop invariant i78: y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1;\nloop invariant i79: x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1;\nloop invariant i80: n - x + 1 >= 0 ==> n - x + 1 >= 0 ==> n - x + 1 >= 0 ==> n - x + 1 >= 0;\nloop invariant i81: n - x + 1 <= n ==> n - x + 1 <= n ==> n - x + 1 <= n ==> n - x + 1 <= n;\nloop invariant i82: n - x + 1 >= y ==> n - x + 1 >= y ==> y >= 0 ==> y >= 0 ==> y >= 0;\nloop invariant i83: n - x + 1 <= n ==> y <= n ==> y <= n ==> y <= n ==> y <= n;\nloop invariant i84: x > 0 ==> x > 0 ==> x > 0 ==> x > 0 ==> x > 0;\nloop invariant i85: x <= n + 1 ==> x <= n + 1 ==> x <= n + 1 ==> x <= n + 1 ==> x <= n + 1;\nloop invariant i86: y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1;\nloop invariant i87: x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1;\nloop invariant i88: y <= n;\nloop invariant i89: y <= y;\nloop invariant i90: x <= x;\nloop invariant i91: n > 0;\nloop invariant i92: x >= 1;\nloop invariant i93: y <= n - x;\nloop invariant i94: n > 0 ==> n - x == y;\nloop invariant i95: 0 <= y <= n - x;\nloop invariant i96: n <= 0 ==> y >= 0;\nloop invariant i97: x > y;\nloop invariant i98: n > 0 ==> (y >= 0);\nloop invariant i99: n > 0 ==> (y <= n - x);\nloop invariant i100: n > 0 ==> (x <= n + 1);\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
        "combined_annotation_num_solver_calls": 24,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n\nloop invariant i5: x <= n ==> (n > 0);\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i17: n > 0 ==> x < n ==> x <= n - 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i37: (n - x) <= n;\nloop invariant i38: (n - x) <= (n - (x - 1));\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i50: x > 0;\n\n\n\n\nloop invariant i55: n - x + 1 <= n;\n\n\n\nloop invariant i59: n - x + 1 >= y ==> y >= 0 ==> y >= 0;\nloop invariant i60: n - x + 1 <= n ==> y <= n ==> y <= n;\nloop invariant i61: x > 0 ==> x > 0;\nloop invariant i62: x <= n + 1 ==> x <= n + 1;\nloop invariant i63: y <= n - x + 1 ==> y <= n - x + 1;\nloop invariant i64: x + y <= n + 1 ==> x + y <= n + 1;\nloop invariant i65: n - x + 1 >= 0 ==> n - x + 1 >= 0;\nloop invariant i66: n - x + 1 <= n ==> n - x + 1 <= n;\n\nloop invariant i68: x > 0 ==> x > 0 ==> x > 0;\nloop invariant i69: x <= n + 1 ==> x <= n + 1 ==> x <= n + 1;\nloop invariant i70: y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1;\nloop invariant i71: x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1;\nloop invariant i72: n - x + 1 >= 0 ==> n - x + 1 >= 0 ==> n - x + 1 >= 0;\nloop invariant i73: n - x + 1 <= n ==> n - x + 1 <= n ==> n - x + 1 <= n;\nloop invariant i74: n - x + 1 >= y ==> n - x + 1 >= y ==> y >= 0 ==> y >= 0;\nloop invariant i75: n - x + 1 <= n ==> y <= n ==> y <= n ==> y <= n;\nloop invariant i76: x > 0 ==> x > 0 ==> x > 0 ==> x > 0;\nloop invariant i77: x <= n + 1 ==> x <= n + 1 ==> x <= n + 1 ==> x <= n + 1;\nloop invariant i78: y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1;\nloop invariant i79: x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1;\nloop invariant i80: n - x + 1 >= 0 ==> n - x + 1 >= 0 ==> n - x + 1 >= 0 ==> n - x + 1 >= 0;\nloop invariant i81: n - x + 1 <= n ==> n - x + 1 <= n ==> n - x + 1 <= n ==> n - x + 1 <= n;\nloop invariant i82: n - x + 1 >= y ==> n - x + 1 >= y ==> y >= 0 ==> y >= 0 ==> y >= 0;\nloop invariant i83: n - x + 1 <= n ==> y <= n ==> y <= n ==> y <= n ==> y <= n;\nloop invariant i84: x > 0 ==> x > 0 ==> x > 0 ==> x > 0 ==> x > 0;\nloop invariant i85: x <= n + 1 ==> x <= n + 1 ==> x <= n + 1 ==> x <= n + 1 ==> x <= n + 1;\nloop invariant i86: y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1 ==> y <= n - x + 1;\nloop invariant i87: x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1 ==> x + y <= n + 1;\n\nloop invariant i89: y <= y;\nloop invariant i90: x <= x;\n\nloop invariant i92: x >= 1;\n\n\n\n\n\n\n\nloop invariant i100: n > 0 ==> (x <= n + 1);\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        {;\n//@ assert(y >= 0);\n}\n\n    }\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c"
        ],
        "skipped": [],
        "total": 57,
        "success_count": 49,
        "failure_count": 8,
        "success_rate": 0.8596491228070176
    }
}