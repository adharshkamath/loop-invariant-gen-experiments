{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/35.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 40) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= c;\nloop invariant c <= 1;\nloop invariant c != 40;\nloop invariant c == 1;\nloop invariant c != 1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= c <= 40;\nloop invariant (if (unknown()) then c < 40 else c >= 40);\nloop invariant (if (unknown() && c != 40) then c >= 0 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown()) then c < 40 else c >= 40);\nloop invariant (if (unknown() && c != 40 && !unknown()) then c >= 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40) then c < 40 else c >= 40);\nloop invariant (if (unknown() && c != 40 && !unknown() && c == 40) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40 && unknown()) then c < 40 else c >= 40);\nloop invariant (if (unknown() && c != 40 && !unknown() && c == 40 && unknown()) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40 && !unknown()) then c < 40 else c >= 40);\nloop invariant (if (unknown() && c != 40 && !unknown() && c == 40 && !unknown()) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40 && unknown() && c != 40) then c < 40 else c >= 40);\nloop invariant (if (unknown() && c != 40 && !unknown() && c == 40 && unknown() && c != 40) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40 && !unknown() && c == 40) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40 && unknown() && c != 40 && unknown()) then c < 40 else c >= 40);\nloop invariant (if (unknown() && c != 40 && !unknown() && c == 40 && unknown() && c != 40 && unknown()) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40 && !unknown() && c == 40 && unknown()) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && !unknown() && c == 40 && unknown() && c != 40 && !unknown()) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40 && unknown() && c != 40 && !unknown()) then c < 40 else c >= 40);\nloop invariant (if (unknown() && c != 40 && !unknown() && c == 40 && unknown() && c != 40 && unknown() && c != 40) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40 && !unknown() && c == 40 && unknown() && c != 40) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && !unknown() && c == 40 && unknown() && c != 40 && unknown() && c != 40 && unknown()) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40 && unknown() && c != 40 && !unknown() && c == 40) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40 && !unknown() && c == 40 && unknown() && c != 40 && unknown()) then c == 1 else c >= 40);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant c >= 0;\nloop invariant c <= 40;\nloop invariant c == 40 ==> c == 1;\nloop invariant c != 40 ==> c >= 0;\nloop invariant c != 40 ==> c <= 40;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 40;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant (if (unknown()) then (if (unknown()) then (c != 40) else (c == 40)) else (c >= 0));\n*/\n```",
            "```\n/*@\nloop invariant c <= 40;\nloop invariant c >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 1;loop invariant c != 40 ==> c == 1;loop invariant c == 40 ==> c == 40;loop invariant c != 40 ==> c >= 0;loop invariant c == 40 ==> c >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant (c == 0) ==> (unknown() == 1);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 0) ==> (unknown() == 1);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 0) ==> (unknown() == 1);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 0) ==> (unknown() == 1);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 0) ==> (unknown() == 1);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 0) ==> (unknown() == 1);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 0) ==> (unknown() == 1);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 0) ==> (unknown() == 1);\nloop invariant (c == 40) ==> (unknown() == 0);\n*/\n```",
            "```\n/*@\nloop invariant c <= 40;\nloop invariant c >= 0;\nloop invariant (unknown() ==> (c >= 0));\nloop invariant ((c != 40) ==> (c >= 0));\nloop invariant ((c != 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant c >= 0;\nloop invariant c <= 40;\nloop invariant 0 <= c <= 40;\nloop invariant c >= 0;\nloop invariant c <= 40;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 0;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 1;\nloop invariant (c <= 40) ==> (c == 0);\nloop invariant (c == 40) ==> (c == 1);\nloop invariant (c == 1) ==> (c == 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant (c == 0) ==> !unknown();\nloop invariant (c == 40) ==> !unknown();\nloop invariant c >= 0;\nloop invariant c <= 40;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant ( (c != 40) || (c == 1) );\nloop invariant ( (c == 40) || (c < 40) );\nloop invariant ( (c != 40) || (c >= 0) );\nloop invariant ( (c == 40) || (c > 0) );\nloop invariant ( (c != 40) || (c <= 40) );\nloop invariant ( (c == 40) || (c < 40) || (c > 0) );\nloop invariant ( (c != 40) || (c <= 40) || (c > 0) );\nloop invariant ( (c == 40) || (c < 40) || (c <= 40) );\nloop invariant ( (c != 40) || (c <= 40) || (c <= 40) );\nloop invariant ( (c == 40) || (c < 40) || (c <= 40) || (c > 0) );\nloop invariant ( (c != 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) );\nloop invariant ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant if (unknown()) then c == 40 else c == 0;\nloop invariant if (unknown()) then (c != 40) else (c >= 0);\nloop invariant if (unknown()) then (c != 40) else (c <= 40);\nloop invariant if (unknown()) then (c != 40) else (c = 1);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= c;\nloop invariant c <= 1;\nloop invariant c != 40;\nloop invariant c == 1;\nloop invariant c != 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c;\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 40) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 24,
                "annotations": "```\n/*@\nloop invariant 1 <= c <= 40;\nloop invariant (if (unknown()) then c < 40 else c >= 40);\nloop invariant (if (unknown() && c != 40) then c >= 0 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown()) then c < 40 else c >= 40);\nloop invariant (if (unknown() && c != 40 && !unknown()) then c >= 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40) then c < 40 else c >= 40);\nloop invariant (if (unknown() && c != 40 && !unknown() && c == 40) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40 && unknown()) then c < 40 else c >= 40);\nloop invariant (if (unknown() && c != 40 && !unknown() && c == 40 && unknown()) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40 && !unknown()) then c < 40 else c >= 40);\nloop invariant (if (unknown() && c != 40 && !unknown() && c == 40 && !unknown()) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40 && unknown() && c != 40) then c < 40 else c >= 40);\nloop invariant (if (unknown() && c != 40 && !unknown() && c == 40 && unknown() && c != 40) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40 && !unknown() && c == 40) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40 && unknown() && c != 40 && unknown()) then c < 40 else c >= 40);\nloop invariant (if (unknown() && c != 40 && !unknown() && c == 40 && unknown() && c != 40 && unknown()) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40 && !unknown() && c == 40 && unknown()) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && !unknown() && c == 40 && unknown() && c != 40 && !unknown()) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40 && unknown() && c != 40 && !unknown()) then c < 40 else c >= 40);\nloop invariant (if (unknown() && c != 40 && !unknown() && c == 40 && unknown() && c != 40 && unknown() && c != 40) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40 && !unknown() && c == 40 && unknown() && c != 40) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && !unknown() && c == 40 && unknown() && c != 40 && unknown() && c != 40 && unknown()) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40 && unknown() && c != 40 && !unknown() && c == 40) then c == 1 else c >= 40);\nloop invariant (if (unknown() && c != 40 && unknown() && c != 40 && !unknown() && c == 40 && unknown() && c != 40 && unknown()) then c == 1 else c >= 40);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 40) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant c >= 0;\nloop invariant c <= 40;\nloop invariant c == 40 ==> c == 1;\nloop invariant c != 40 ==> c >= 0;\nloop invariant c != 40 ==> c <= 40;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\nloop invariant c != 40 ==> c == 1 || c == 0;\nloop invariant c != 40 ==> c == 0 || c == 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 40;\nloop invariant i2: c >= 0;\nloop invariant i3: c <= 40;\n\nloop invariant i5: c != 40 ==> c >= 0;\nloop invariant i6: c != 40 ==> c <= 40;\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 40) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 40;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 40;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 40) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant (if (unknown()) then (if (unknown()) then (c != 40) else (c == 40)) else (c >= 0));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 40;\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 40) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant c <= 40;\nloop invariant c >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: c <= 40;\nloop invariant i2: c >= 0;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 40) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 1;loop invariant c != 40 ==> c == 1;loop invariant c == 40 ==> c == 40;loop invariant c != 40 ==> c >= 0;loop invariant c == 40 ==> c >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 1;loop invariant c != 40 ==> c == 1;loop invariant c == 40 ==> c == 40;loop invariant c != 40 ==> c >= 0;loop invariant c == 40 ==> c >= 0;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 40) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant (c == 0) ==> (unknown() == 1);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 0) ==> (unknown() == 1);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 0) ==> (unknown() == 1);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 0) ==> (unknown() == 1);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 0) ==> (unknown() == 1);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 0) ==> (unknown() == 1);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 0) ==> (unknown() == 1);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 40) ==> (unknown() == 0);\nloop invariant (c == 0) ==> (unknown() == 1);\nloop invariant (c == 40) ==> (unknown() == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 40;\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 40) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant c <= 40;\nloop invariant c >= 0;\nloop invariant (unknown() ==> (c >= 0));\nloop invariant ((c != 40) ==> (c >= 0));\nloop invariant ((c != 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\nloop invariant ((c == 40) ==> (c == 1));\nloop invariant ((c == 40) ==> (c >= 0));\nloop invariant ((c == 40) ==> (c <= 40));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: c <= 40;\nloop invariant i2: c >= 0;\n\nloop invariant i4: ((c != 40) ==> (c >= 0));\nloop invariant i5: ((c != 40) ==> (c <= 40));\n\nloop invariant i7: ((c == 40) ==> (c >= 0));\nloop invariant i8: ((c == 40) ==> (c <= 40));\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 40) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant c >= 0;\nloop invariant c <= 40;\nloop invariant 0 <= c <= 40;\nloop invariant c >= 0;\nloop invariant c <= 40;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 40;\nloop invariant i2: c >= 0;\nloop invariant i3: c <= 40;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 40) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 0;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant c <= 40 ==> c != 40 ==> c <= 40;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\n\nloop invariant i2: c <= 40 ==> c != 40 ==> c >= 0;\nloop invariant i3: c <= 40 ==> c != 40 ==> c <= 40;\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 40) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 1;\nloop invariant (c <= 40) ==> (c == 0);\nloop invariant (c == 40) ==> (c == 1);\nloop invariant (c == 1) ==> (c == 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\n\n\n\nloop invariant i4: (c == 1) ==> (c == 1);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 40) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant (c == 0) ==> !unknown();\nloop invariant (c == 40) ==> !unknown();\nloop invariant c >= 0;\nloop invariant c <= 40;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 40;\n\n\nloop invariant i4: c >= 0;\nloop invariant i5: c <= 40;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 40) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant ( (c != 40) || (c == 1) );\nloop invariant ( (c == 40) || (c < 40) );\nloop invariant ( (c != 40) || (c >= 0) );\nloop invariant ( (c == 40) || (c > 0) );\nloop invariant ( (c != 40) || (c <= 40) );\nloop invariant ( (c == 40) || (c < 40) || (c > 0) );\nloop invariant ( (c != 40) || (c <= 40) || (c > 0) );\nloop invariant ( (c == 40) || (c < 40) || (c <= 40) );\nloop invariant ( (c != 40) || (c <= 40) || (c <= 40) );\nloop invariant ( (c == 40) || (c < 40) || (c <= 40) || (c > 0) );\nloop invariant ( (c != 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) );\nloop invariant ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 40;\n\nloop invariant i3: ( (c == 40) || (c < 40) );\nloop invariant i4: ( (c != 40) || (c >= 0) );\n\nloop invariant i6: ( (c != 40) || (c <= 40) );\nloop invariant i7: ( (c == 40) || (c < 40) || (c > 0) );\nloop invariant i8: ( (c != 40) || (c <= 40) || (c > 0) );\nloop invariant i9: ( (c == 40) || (c < 40) || (c <= 40) );\nloop invariant i10: ( (c != 40) || (c <= 40) || (c <= 40) );\nloop invariant i11: ( (c == 40) || (c < 40) || (c <= 40) || (c > 0) );\nloop invariant i12: ( (c != 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant i13: ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) );\nloop invariant i14: ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant i15: ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant i16: ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant i17: ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant i18: ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant i19: ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant i20: ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant i21: ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant i22: ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant i23: ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant i24: ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant i25: ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant i26: ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 40) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant if (unknown()) then c == 40 else c == 0;\nloop invariant if (unknown()) then (c != 40) else (c >= 0);\nloop invariant if (unknown()) then (c != 40) else (c <= 40);\nloop invariant if (unknown()) then (c != 40) else (c = 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 40;\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 40) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 22: unexpected token '('",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c;\nloop invariant i2: c <= 1;\nloop invariant i3: c != 40;\nloop invariant i4: c == 1;\nloop invariant i5: c != 1;\nloop invariant i6: 1 <= c <= 40;\nloop invariant i7: (if (unknown()) then c < 40 else c >= 40);\nloop invariant i8: (if (unknown() && c != 40) then c >= 0 else c >= 40);\nloop invariant i9: (if (unknown() && c != 40 && unknown()) then c < 40 else c >= 40);\nloop invariant i10: (if (unknown() && c != 40 && !unknown()) then c >= 1 else c >= 40);\nloop invariant i11: (if (unknown() && c != 40 && unknown() && c != 40) then c < 40 else c >= 40);\nloop invariant i12: (if (unknown() && c != 40 && !unknown() && c == 40) then c == 1 else c >= 40);\nloop invariant i13: (if (unknown() && c != 40 && unknown() && c != 40 && unknown()) then c < 40 else c >= 40);\nloop invariant i14: (if (unknown() && c != 40 && !unknown() && c == 40 && unknown()) then c == 1 else c >= 40);\nloop invariant i15: (if (unknown() && c != 40 && unknown() && c != 40 && !unknown()) then c < 40 else c >= 40);\nloop invariant i16: (if (unknown() && c != 40 && !unknown() && c == 40 && !unknown()) then c == 1 else c >= 40);\nloop invariant i17: (if (unknown() && c != 40 && unknown() && c != 40 && unknown() && c != 40) then c < 40 else c >= 40);\nloop invariant i18: (if (unknown() && c != 40 && !unknown() && c == 40 && unknown() && c != 40) then c == 1 else c >= 40);\nloop invariant i19: (if (unknown() && c != 40 && unknown() && c != 40 && !unknown() && c == 40) then c == 1 else c >= 40);\nloop invariant i20: (if (unknown() && c != 40 && unknown() && c != 40 && unknown() && c != 40 && unknown()) then c < 40 else c >= 40);\nloop invariant i21: (if (unknown() && c != 40 && !unknown() && c == 40 && unknown() && c != 40 && unknown()) then c == 1 else c >= 40);\nloop invariant i22: (if (unknown() && c != 40 && unknown() && c != 40 && !unknown() && c == 40 && unknown()) then c == 1 else c >= 40);\nloop invariant i23: (if (unknown() && c != 40 && !unknown() && c == 40 && unknown() && c != 40 && !unknown()) then c == 1 else c >= 40);\nloop invariant i24: (if (unknown() && c != 40 && unknown() && c != 40 && unknown() && c != 40 && !unknown()) then c < 40 else c >= 40);\nloop invariant i25: (if (unknown() && c != 40 && !unknown() && c == 40 && unknown() && c != 40 && unknown() && c != 40) then c == 1 else c >= 40);\nloop invariant i26: (if (unknown() && c != 40 && unknown() && c != 40 && !unknown() && c == 40 && unknown() && c != 40) then c == 1 else c >= 40);\nloop invariant i27: (if (unknown() && c != 40 && !unknown() && c == 40 && unknown() && c != 40 && unknown() && c != 40 && unknown()) then c == 1 else c >= 40);\nloop invariant i28: (if (unknown() && c != 40 && unknown() && c != 40 && unknown() && c != 40 && !unknown() && c == 40) then c == 1 else c >= 40);\nloop invariant i29: (if (unknown() && c != 40 && unknown() && c != 40 && !unknown() && c == 40 && unknown() && c != 40 && unknown()) then c == 1 else c >= 40);\nloop invariant i30: 0 <= c <= 40;\nloop invariant i31: c >= 0;\nloop invariant i32: c <= 40;\nloop invariant i33: c == 40 ==> c == 1;\nloop invariant i34: c != 40 ==> c >= 0;\nloop invariant i35: c != 40 ==> c <= 40;\nloop invariant i36: c != 40 ==> c == 0 || c == 1;\nloop invariant i37: c != 40 ==> c == 1 || c == 0;\nloop invariant i38: (if (unknown()) then (if (unknown()) then (c != 40) else (c == 40)) else (c >= 0));\nloop invariant i39: 0 <= c <= 1;loop invariant c != 40 ==> c == 1;loop invariant c == 40 ==> c == 40;loop invariant c != 40 ==> c >= 0;loop invariant c == 40 ==> c >= 0;\nloop invariant i40: (c == 0) ==> (unknown() == 1);\nloop invariant i41: (c == 40) ==> (unknown() == 0);\nloop invariant i42: (unknown() ==> (c >= 0));\nloop invariant i43: ((c != 40) ==> (c >= 0));\nloop invariant i44: ((c != 40) ==> (c <= 40));\nloop invariant i45: ((c == 40) ==> (c == 1));\nloop invariant i46: ((c == 40) ==> (c >= 0));\nloop invariant i47: ((c == 40) ==> (c <= 40));\nloop invariant i48: c <= 40 ==> c != 40 ==> c >= 0;\nloop invariant i49: c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant i50: c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant i51: 0 <= c <= 1;\nloop invariant i52: (c <= 40) ==> (c == 0);\nloop invariant i53: (c == 40) ==> (c == 1);\nloop invariant i54: (c == 1) ==> (c == 1);\nloop invariant i55: (c == 0) ==> !unknown();\nloop invariant i56: (c == 40) ==> !unknown();\nloop invariant i57: ( (c != 40) || (c == 1) );\nloop invariant i58: ( (c == 40) || (c < 40) );\nloop invariant i59: ( (c != 40) || (c >= 0) );\nloop invariant i60: ( (c == 40) || (c > 0) );\nloop invariant i61: ( (c != 40) || (c <= 40) );\nloop invariant i62: ( (c == 40) || (c < 40) || (c > 0) );\nloop invariant i63: ( (c != 40) || (c <= 40) || (c > 0) );\nloop invariant i64: ( (c == 40) || (c < 40) || (c <= 40) );\nloop invariant i65: ( (c != 40) || (c <= 40) || (c <= 40) );\nloop invariant i66: ( (c == 40) || (c < 40) || (c <= 40) || (c > 0) );\nloop invariant i67: ( (c != 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant i68: ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) );\nloop invariant i69: ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant i70: ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant i71: ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant i72: ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant i73: ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant i74: ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant i75: ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant i76: ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant i77: ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant i78: ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant i79: ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant i80: ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant i81: ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant i82: if (unknown()) then c == 40 else c == 0;\nloop invariant i83: if (unknown()) then (c != 40) else (c >= 0);\nloop invariant i84: if (unknown()) then (c != 40) else (c <= 40);\nloop invariant i85: if (unknown()) then (c != 40) else (c = 1);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 40) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 37,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c;\nloop invariant i2: c <= 1;\nloop invariant i3: c != 40;\n\nloop invariant i5: c != 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i30: 0 <= c <= 40;\nloop invariant i31: c >= 0;\nloop invariant i32: c <= 40;\nloop invariant i33: c == 40 ==> c == 1;\nloop invariant i34: c != 40 ==> c >= 0;\nloop invariant i35: c != 40 ==> c <= 40;\nloop invariant i36: c != 40 ==> c == 0 || c == 1;\nloop invariant i37: c != 40 ==> c == 1 || c == 0;\n\nloop invariant i39: 0 <= c <= 1;loop invariant c != 40 ==> c == 1;loop invariant c == 40 ==> c == 40;loop invariant c != 40 ==> c >= 0;loop invariant c == 40 ==> c >= 0;\n\n\n\nloop invariant i43: ((c != 40) ==> (c >= 0));\nloop invariant i44: ((c != 40) ==> (c <= 40));\nloop invariant i45: ((c == 40) ==> (c == 1));\nloop invariant i46: ((c == 40) ==> (c >= 0));\nloop invariant i47: ((c == 40) ==> (c <= 40));\nloop invariant i48: c <= 40 ==> c != 40 ==> c >= 0;\nloop invariant i49: c <= 40 ==> c != 40 ==> c <= 40;\nloop invariant i50: c <= 40 ==> c != 40 ==> c >= 1;\nloop invariant i51: 0 <= c <= 1;\nloop invariant i52: (c <= 40) ==> (c == 0);\nloop invariant i53: (c == 40) ==> (c == 1);\nloop invariant i54: (c == 1) ==> (c == 1);\n\n\nloop invariant i57: ( (c != 40) || (c == 1) );\nloop invariant i58: ( (c == 40) || (c < 40) );\nloop invariant i59: ( (c != 40) || (c >= 0) );\nloop invariant i60: ( (c == 40) || (c > 0) );\nloop invariant i61: ( (c != 40) || (c <= 40) );\nloop invariant i62: ( (c == 40) || (c < 40) || (c > 0) );\nloop invariant i63: ( (c != 40) || (c <= 40) || (c > 0) );\nloop invariant i64: ( (c == 40) || (c < 40) || (c <= 40) );\nloop invariant i65: ( (c != 40) || (c <= 40) || (c <= 40) );\nloop invariant i66: ( (c == 40) || (c < 40) || (c <= 40) || (c > 0) );\nloop invariant i67: ( (c != 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant i68: ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) );\nloop invariant i69: ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant i70: ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant i71: ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant i72: ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant i73: ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant i74: ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant i75: ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant i76: ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant i77: ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant i78: ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant i79: ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c > 0) );\nloop invariant i80: ( (c == 40) || (c < 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\nloop invariant i81: ( (c != 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) || (c <= 40) );\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != 40) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c"
        ],
        "skipped": [],
        "total": 26,
        "success_count": 22,
        "failure_count": 4,
        "success_rate": 0.8461538461538461
    }
}