{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  while (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= 4294967295;\nloop invariant 1 <= y <= 4294967296;\nloop invariant 2 <= z <= 4294967297;\nloop invariant w = x - 1;\nloop invariant x <= z <= y;\nloop invariant y <= z + 1;\nloop invariant y <= z + 2;\nloop invariant y <= z + 3;\nloop invariant y <= z + 4;\nloop invariant y <= z + 5;\nloop invariant y <= z + 6;\nloop invariant y <= z + 7;\nloop invariant y <= z + 8;\nloop invariant y <= z + 9;\nloop invariant y <= z + 10;\nloop invariant y <= z + 11;\nloop invariant y <= z + 12;\nloop invariant y <= z + 13;\nloop invariant y <= z + 14;\nloop invariant y <= z + 15;\nloop invariant y <= z + 16;\nloop invariant y <= z + 17;\nloop invariant y <= z + 18;\nloop invariant y <= z + 19;\nloop invariant y <= z + 20;\nloop invariant y <= z + 21;\nloop invariant y <= z + 22;\nloop invariant y <= z + 23;\nloop invariant y <= z + 24;\nloop invariant y <= z + 25;\nloop invariant y <= z + 26;\nloop invariant y <= z + 27;\nloop invariant y <= z + 28;\nloop invariant y <= z + 29;\nloop invariant y <= z + 30;\nloop invariant y <= z + 31;\nloop invariant y <= z + 32;\nloop invariant y <= z + 33;\nloop invariant y <= z + 34;\nloop invariant y <= z + 35;\nloop invariant y <= z + 36;\nloop invariant y <= z + 37;\nloop invariant y <= z + 38;\nloop invariant y <= z + 39;\nloop invariant y <= z + 40;\nloop invariant y <= z + 41;\nloop invariant y <= z + 42;\nloop invariant y <= z + 43;\nloop invariant y <= z + 44;\nloop invariant y <= z + 45;\nloop invariant y <= z + 46;\nloop invariant y <= z + 47;\nloop invariant y <= z + 48;\nloop invariant y <= z + 49;\nloop invariant y <= z + 50;\nloop invariant y <= z + 51;\nloop invariant y <= z + 52;\nloop invariant y <= z + 53;\nloop invariant y <= z + 54;\nloop invariant y <= z + 55;\nloop invariant y <= z + 56;\nloop invariant y <= z + 57;\nloop invariant y <= z + 58;\nloop invariant y <= z + 59;\nloop invariant y <= z + 60;\nloop invariant y <= z + 61;\nloop invariant y <= z + 62;\nloop invariant y <= z + 63;\nloop invariant y <= z + 64;\nloop invariant y <= z + 65;\nloop invariant y <= z + 66;\nloop invariant y <= z + 67;\nloop invariant y <= z + 68;\nloop invariant y <= z + 69;\nloop invariant y <= z + 70;\nloop invariant y <= z + 71;\nloop invariant y <= z + 72;\nloop invariant y <= z + 73;\nloop invariant y <= z + 74;\nloop invariant y <= z + 75;\nloop invariant y <= z + 76;\nloop invariant y <= z + 77;\nloop invariant y <= z + 78;\nloop invariant y <= z + 79;\nloop invariant y <= z + 80;\nloop invariant y <= z + 81;\nloop invariant y <= z + 82;\nloop invariant y <= z + 83;\nloop invariant y <= z + 84;\nloop invariant y <= z + 85;\nloop invariant y <= z + 86;\nloop invariant y <= z + 87;\nloop invariant y <= z + 88;\nloop invariant y <= z + 89;\nloop invariant y <= z + 90;\nloop invariant y <= z + 91;\nloop invariant y <= z + 92;\nloop invariant y <= z + 93;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y < z;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= x <= z;\nloop invariant w <= z <= y <= x <= z + 1;\nloop invariant z - 1 <= y <= x <= z;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant y == z;\nloop invariant x >= y;\nloop invariant y == z ==> (x == z);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x <= z;\nloop invariant y <= z;\nloop invariant y == z;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= z <= 2^32 - 1;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= w <= unknown_uint();\nloop invariant w == x;\nloop invariant w + 1 == y;\nloop invariant x + 1 == z;\nloop invariant (unknown_uint() ==> y == z);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= w <= y <= z;\nloop invariant x == w;\nloop invariant y == w + 1;\nloop invariant z == x + 1;\nloop invariant unknown_uint() ==> w >= 0;\nloop invariant unknown_uint() ==> w <= y;\nloop invariant unknown_uint() ==> w <= z;\nloop invariant unknown_uint() ==> x == w;\nloop invariant unknown_uint() ==> x <= y;\nloop invariant unknown_uint() ==> x <= z;\nloop invariant unknown_uint() ==> y == w + 1;\nloop invariant unknown_uint() ==> y <= z;\nloop invariant unknown_uint() ==> z == x + 1;\nloop invariant unknown_uint() ==> w <= y - 1;\nloop invariant unknown_uint() ==> w <= z - 1;\nloop invariant unknown_uint() ==> y <= z;\nloop invariant unknown_uint() ==> w >= 0;\nloop invariant unknown_uint() ==> x >= 0;\nloop invariant unknown_uint() ==> y >= 0;\nloop invariant unknown_uint() ==> z >= 0;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y <= z; /* x is between 0 and y, y is between x and z */ loop invariant x + 1 <= y <= z; /* y is between x + 1 and z */ loop invariant x + 1 <= y + 1 <= z + 1; /* y + 1 is between x + 1 and z + 1 */ loop invariant x + 1 <= y + 1 <= z + 1 ==> y == z;\n*/\n```",
            "```\n/*@\nloop invariant x = y + z - 1 ==> x >= y;\nloop invariant y = y + 1;\nloop invariant z = z + 1;\nloop invariant z >= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= w <= 4294967295;\nloop invariant 0 <= x <= 4294967295;\nloop invariant 1 <= y <= 4294967295;\nloop invariant 1 <= z <= 4294967295;\nloop invariant x == w;\nloop invariant y == w + 1;\nloop invariant z == x + 1;\nloop invariant y == z;\nloop invariant y == z ==> y <= 4294967295;\nloop invariant y == z ==> z <= 4294967295;\nloop invariant y == z ==> x == w;\nloop invariant y != z ==> y >= 0;\nloop invariant y != z ==> z >= 1;\nloop invariant y != z ==> x == w;\nloop invariant w >= 0;\nloop invariant w <= 4294967295;\nloop invariant x >= 0;\nloop invariant x <= 4294967295;\nloop invariant y >= 1;\nloop invariant y <= 4294967295;\nloop invariant z >= 1;\nloop invariant z <= 4294967295;\n*/\n```",
            "```\n/*@\nloop invariant y >= x; loop invariant z = y + 1; loop invariant z > x; loop invariant x >= w; loop invariant y >= w + 1; loop invariant z >= w + 2; loop invariant x >= w; loop invariant y > w; loop invariant z > w + 1; loop invariant y >= x; loop invariant x < y; loop invariant x <= y; loop invariant x < z; loop invariant x <= z; loop invariant x >= w; loop invariant x > w; loop invariant x < w + 2; loop invariant x <= w + 1; loop invariant y > w; loop invariant y < w + 2; loop invariant y <= w + 1; loop invariant z > w; loop invariant z < w + 3; loop invariant z <= w + 2;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= y <= z;\nloop invariant y <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant 1 <= y <= z;\nloop invariant 1 <= y <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= w <= 2147483647;\nloop invariant w == x;\nloop invariant w + 1 == y;\nloop invariant x + 1 == z;\nloop invariant w == x && w + 1 == y && x + 1 == z ==> unknown_uint();\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 96,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 4294967295;\nloop invariant 1 <= y <= 4294967296;\nloop invariant 2 <= z <= 4294967297;\nloop invariant w = x - 1;\nloop invariant x <= z <= y;\nloop invariant y <= z + 1;\nloop invariant y <= z + 2;\nloop invariant y <= z + 3;\nloop invariant y <= z + 4;\nloop invariant y <= z + 5;\nloop invariant y <= z + 6;\nloop invariant y <= z + 7;\nloop invariant y <= z + 8;\nloop invariant y <= z + 9;\nloop invariant y <= z + 10;\nloop invariant y <= z + 11;\nloop invariant y <= z + 12;\nloop invariant y <= z + 13;\nloop invariant y <= z + 14;\nloop invariant y <= z + 15;\nloop invariant y <= z + 16;\nloop invariant y <= z + 17;\nloop invariant y <= z + 18;\nloop invariant y <= z + 19;\nloop invariant y <= z + 20;\nloop invariant y <= z + 21;\nloop invariant y <= z + 22;\nloop invariant y <= z + 23;\nloop invariant y <= z + 24;\nloop invariant y <= z + 25;\nloop invariant y <= z + 26;\nloop invariant y <= z + 27;\nloop invariant y <= z + 28;\nloop invariant y <= z + 29;\nloop invariant y <= z + 30;\nloop invariant y <= z + 31;\nloop invariant y <= z + 32;\nloop invariant y <= z + 33;\nloop invariant y <= z + 34;\nloop invariant y <= z + 35;\nloop invariant y <= z + 36;\nloop invariant y <= z + 37;\nloop invariant y <= z + 38;\nloop invariant y <= z + 39;\nloop invariant y <= z + 40;\nloop invariant y <= z + 41;\nloop invariant y <= z + 42;\nloop invariant y <= z + 43;\nloop invariant y <= z + 44;\nloop invariant y <= z + 45;\nloop invariant y <= z + 46;\nloop invariant y <= z + 47;\nloop invariant y <= z + 48;\nloop invariant y <= z + 49;\nloop invariant y <= z + 50;\nloop invariant y <= z + 51;\nloop invariant y <= z + 52;\nloop invariant y <= z + 53;\nloop invariant y <= z + 54;\nloop invariant y <= z + 55;\nloop invariant y <= z + 56;\nloop invariant y <= z + 57;\nloop invariant y <= z + 58;\nloop invariant y <= z + 59;\nloop invariant y <= z + 60;\nloop invariant y <= z + 61;\nloop invariant y <= z + 62;\nloop invariant y <= z + 63;\nloop invariant y <= z + 64;\nloop invariant y <= z + 65;\nloop invariant y <= z + 66;\nloop invariant y <= z + 67;\nloop invariant y <= z + 68;\nloop invariant y <= z + 69;\nloop invariant y <= z + 70;\nloop invariant y <= z + 71;\nloop invariant y <= z + 72;\nloop invariant y <= z + 73;\nloop invariant y <= z + 74;\nloop invariant y <= z + 75;\nloop invariant y <= z + 76;\nloop invariant y <= z + 77;\nloop invariant y <= z + 78;\nloop invariant y <= z + 79;\nloop invariant y <= z + 80;\nloop invariant y <= z + 81;\nloop invariant y <= z + 82;\nloop invariant y <= z + 83;\nloop invariant y <= z + 84;\nloop invariant y <= z + 85;\nloop invariant y <= z + 86;\nloop invariant y <= z + 87;\nloop invariant y <= z + 88;\nloop invariant y <= z + 89;\nloop invariant y <= z + 90;\nloop invariant y <= z + 91;\nloop invariant y <= z + 92;\nloop invariant y <= z + 93;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\nloop invariant i1: 0 <= x <= 4294967295;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y < z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= x <= z;\nloop invariant w <= z <= y <= x <= z + 1;\nloop invariant z - 1 <= y <= x <= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant y == z;\nloop invariant x >= y;\nloop invariant y == z ==> (x == z);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\n\nloop invariant i3: y == z;\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x <= z;\nloop invariant y <= z;\nloop invariant y == z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\n\nloop invariant i3: y <= z;\nloop invariant i4: y == z;\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= z <= 2^32 - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= w <= unknown_uint();\nloop invariant w == x;\nloop invariant w + 1 == y;\nloop invariant x + 1 == z;\nloop invariant (unknown_uint() ==> y == z);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\nloop invariant i2: w == x;\n\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 23,
                "annotations": "```\n/*@\nloop invariant 0 <= w <= y <= z;\nloop invariant x == w;\nloop invariant y == w + 1;\nloop invariant z == x + 1;\nloop invariant unknown_uint() ==> w >= 0;\nloop invariant unknown_uint() ==> w <= y;\nloop invariant unknown_uint() ==> w <= z;\nloop invariant unknown_uint() ==> x == w;\nloop invariant unknown_uint() ==> x <= y;\nloop invariant unknown_uint() ==> x <= z;\nloop invariant unknown_uint() ==> y == w + 1;\nloop invariant unknown_uint() ==> y <= z;\nloop invariant unknown_uint() ==> z == x + 1;\nloop invariant unknown_uint() ==> w <= y - 1;\nloop invariant unknown_uint() ==> w <= z - 1;\nloop invariant unknown_uint() ==> y <= z;\nloop invariant unknown_uint() ==> w >= 0;\nloop invariant unknown_uint() ==> x >= 0;\nloop invariant unknown_uint() ==> y >= 0;\nloop invariant unknown_uint() ==> z >= 0;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\nloop invariant unknown_uint() ==> y == z - 1;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x - 1;\nloop invariant unknown_uint() ==> x == y - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\nloop invariant i2: x == w;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y <= z; /* x is between 0 and y, y is between x and z */ loop invariant x + 1 <= y <= z; /* y is between x + 1 and z */ loop invariant x + 1 <= y + 1 <= z + 1; /* y + 1 is between x + 1 and z + 1 */ loop invariant x + 1 <= y + 1 <= z + 1 ==> y == z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x = y + z - 1 ==> x >= y;\nloop invariant y = y + 1;\nloop invariant z = z + 1;\nloop invariant z >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\n\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= w <= 4294967295;\nloop invariant 0 <= x <= 4294967295;\nloop invariant 1 <= y <= 4294967295;\nloop invariant 1 <= z <= 4294967295;\nloop invariant x == w;\nloop invariant y == w + 1;\nloop invariant z == x + 1;\nloop invariant y == z;\nloop invariant y == z ==> y <= 4294967295;\nloop invariant y == z ==> z <= 4294967295;\nloop invariant y == z ==> x == w;\nloop invariant y != z ==> y >= 0;\nloop invariant y != z ==> z >= 1;\nloop invariant y != z ==> x == w;\nloop invariant w >= 0;\nloop invariant w <= 4294967295;\nloop invariant x >= 0;\nloop invariant x <= 4294967295;\nloop invariant y >= 1;\nloop invariant y <= 4294967295;\nloop invariant z >= 1;\nloop invariant z <= 4294967295;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\nloop invariant i1: 0 <= w <= 4294967295;\nloop invariant i2: 0 <= x <= 4294967295;\n\n\nloop invariant i5: x == w;\n\n\nloop invariant i8: y == z;\nloop invariant i9: y == z ==> y <= 4294967295;\nloop invariant i10: y == z ==> z <= 4294967295;\nloop invariant i11: y == z ==> x == w;\nloop invariant i12: y != z ==> y >= 0;\nloop invariant i13: y != z ==> z >= 1;\nloop invariant i14: y != z ==> x == w;\nloop invariant i15: w >= 0;\nloop invariant i16: w <= 4294967295;\nloop invariant i17: x >= 0;\nloop invariant i18: x <= 4294967295;\n\nloop invariant i20: y <= 4294967295;\n\nloop invariant i22: z <= 4294967295;\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant y >= x; loop invariant z = y + 1; loop invariant z > x; loop invariant x >= w; loop invariant y >= w + 1; loop invariant z >= w + 2; loop invariant x >= w; loop invariant y > w; loop invariant z > w + 1; loop invariant y >= x; loop invariant x < y; loop invariant x <= y; loop invariant x < z; loop invariant x <= z; loop invariant x >= w; loop invariant x > w; loop invariant x < w + 2; loop invariant x <= w + 1; loop invariant y > w; loop invariant y < w + 2; loop invariant y <= w + 1; loop invariant z > w; loop invariant z < w + 3; loop invariant z <= w + 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= y <= z;\nloop invariant y <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant 1 <= y <= z;\nloop invariant 1 <= y <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\nloop invariant 1 <= z <= z;\nloop invariant y - 1 <= x <= y - 1;\nloop invariant y - 1 <= w <= y - 1;\nloop invariant 0 <= w <= 0;\nloop invariant 1 <= x <= y;\nloop invariant 2 <= y <= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= w <= 2147483647;\nloop invariant w == x;\nloop invariant w + 1 == y;\nloop invariant x + 1 == z;\nloop invariant w == x && w + 1 == y && x + 1 == z ==> unknown_uint();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\nloop invariant i2: w == x;\n\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 18: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\nloop invariant i1: 0 <= x <= 4294967295;\nloop invariant i2: 1 <= y <= 4294967296;\nloop invariant i3: 2 <= z <= 4294967297;\nloop invariant i4: w = x - 1;\nloop invariant i5: x <= z <= y;\nloop invariant i6: y <= z + 1;\nloop invariant i7: y <= z + 2;\nloop invariant i8: y <= z + 3;\nloop invariant i9: y <= z + 4;\nloop invariant i10: y <= z + 5;\nloop invariant i11: y <= z + 6;\nloop invariant i12: y <= z + 7;\nloop invariant i13: y <= z + 8;\nloop invariant i14: y <= z + 9;\nloop invariant i15: y <= z + 10;\nloop invariant i16: y <= z + 11;\nloop invariant i17: y <= z + 12;\nloop invariant i18: y <= z + 13;\nloop invariant i19: y <= z + 14;\nloop invariant i20: y <= z + 15;\nloop invariant i21: y <= z + 16;\nloop invariant i22: y <= z + 17;\nloop invariant i23: y <= z + 18;\nloop invariant i24: y <= z + 19;\nloop invariant i25: y <= z + 20;\nloop invariant i26: y <= z + 21;\nloop invariant i27: y <= z + 22;\nloop invariant i28: y <= z + 23;\nloop invariant i29: y <= z + 24;\nloop invariant i30: y <= z + 25;\nloop invariant i31: y <= z + 26;\nloop invariant i32: y <= z + 27;\nloop invariant i33: y <= z + 28;\nloop invariant i34: y <= z + 29;\nloop invariant i35: y <= z + 30;\nloop invariant i36: y <= z + 31;\nloop invariant i37: y <= z + 32;\nloop invariant i38: y <= z + 33;\nloop invariant i39: y <= z + 34;\nloop invariant i40: y <= z + 35;\nloop invariant i41: y <= z + 36;\nloop invariant i42: y <= z + 37;\nloop invariant i43: y <= z + 38;\nloop invariant i44: y <= z + 39;\nloop invariant i45: y <= z + 40;\nloop invariant i46: y <= z + 41;\nloop invariant i47: y <= z + 42;\nloop invariant i48: y <= z + 43;\nloop invariant i49: y <= z + 44;\nloop invariant i50: y <= z + 45;\nloop invariant i51: y <= z + 46;\nloop invariant i52: y <= z + 47;\nloop invariant i53: y <= z + 48;\nloop invariant i54: y <= z + 49;\nloop invariant i55: y <= z + 50;\nloop invariant i56: y <= z + 51;\nloop invariant i57: y <= z + 52;\nloop invariant i58: y <= z + 53;\nloop invariant i59: y <= z + 54;\nloop invariant i60: y <= z + 55;\nloop invariant i61: y <= z + 56;\nloop invariant i62: y <= z + 57;\nloop invariant i63: y <= z + 58;\nloop invariant i64: y <= z + 59;\nloop invariant i65: y <= z + 60;\nloop invariant i66: y <= z + 61;\nloop invariant i67: y <= z + 62;\nloop invariant i68: y <= z + 63;\nloop invariant i69: y <= z + 64;\nloop invariant i70: y <= z + 65;\nloop invariant i71: y <= z + 66;\nloop invariant i72: y <= z + 67;\nloop invariant i73: y <= z + 68;\nloop invariant i74: y <= z + 69;\nloop invariant i75: y <= z + 70;\nloop invariant i76: y <= z + 71;\nloop invariant i77: y <= z + 72;\nloop invariant i78: y <= z + 73;\nloop invariant i79: y <= z + 74;\nloop invariant i80: y <= z + 75;\nloop invariant i81: y <= z + 76;\nloop invariant i82: y <= z + 77;\nloop invariant i83: y <= z + 78;\nloop invariant i84: y <= z + 79;\nloop invariant i85: y <= z + 80;\nloop invariant i86: y <= z + 81;\nloop invariant i87: y <= z + 82;\nloop invariant i88: y <= z + 83;\nloop invariant i89: y <= z + 84;\nloop invariant i90: y <= z + 85;\nloop invariant i91: y <= z + 86;\nloop invariant i92: y <= z + 87;\nloop invariant i93: y <= z + 88;\nloop invariant i94: y <= z + 89;\nloop invariant i95: y <= z + 90;\nloop invariant i96: y <= z + 91;\nloop invariant i97: y <= z + 92;\nloop invariant i98: y <= z + 93;\nloop invariant i99: 0 <= y < z;\nloop invariant i100: 0 <= y <= x <= z;\nloop invariant i101: w <= z <= y <= x <= z + 1;\nloop invariant i102: z - 1 <= y <= x <= z;\nloop invariant i103: 0 <= y <= 100000;\nloop invariant i104: x >= (1 + (y - 1) * y / 2);\nloop invariant i105: y == z;\nloop invariant i106: x >= y;\nloop invariant i107: y == z ==> (x == z);\nloop invariant i108: 0 <= x <= y;\nloop invariant i109: x <= z;\nloop invariant i110: y <= z;\nloop invariant i111: 0 <= y <= z <= 2^32 - 1;\nloop invariant i112: 0 <= w <= unknown_uint();\nloop invariant i113: w == x;\nloop invariant i114: w + 1 == y;\nloop invariant i115: x + 1 == z;\nloop invariant i116: (unknown_uint() ==> y == z);\nloop invariant i117: 0 <= w <= y <= z;\nloop invariant i118: x == w;\nloop invariant i119: y == w + 1;\nloop invariant i120: z == x + 1;\nloop invariant i121: unknown_uint() ==> w >= 0;\nloop invariant i122: unknown_uint() ==> w <= y;\nloop invariant i123: unknown_uint() ==> w <= z;\nloop invariant i124: unknown_uint() ==> x == w;\nloop invariant i125: unknown_uint() ==> x <= y;\nloop invariant i126: unknown_uint() ==> x <= z;\nloop invariant i127: unknown_uint() ==> y == w + 1;\nloop invariant i128: unknown_uint() ==> y <= z;\nloop invariant i129: unknown_uint() ==> z == x + 1;\nloop invariant i130: unknown_uint() ==> w <= y - 1;\nloop invariant i131: unknown_uint() ==> w <= z - 1;\nloop invariant i132: unknown_uint() ==> x >= 0;\nloop invariant i133: unknown_uint() ==> y >= 0;\nloop invariant i134: unknown_uint() ==> z >= 0;\nloop invariant i135: unknown_uint() ==> w == x - 1;\nloop invariant i136: unknown_uint() ==> x == y - 1;\nloop invariant i137: unknown_uint() ==> y == z - 1;\nloop invariant i138: unknown_uint() ==> w == x;\nloop invariant i139: unknown_uint() ==> x == y;\nloop invariant i140: unknown_uint() ==> y == z;\nloop invariant i141: 0 <= x <= y <= z; /* x is between 0 and y, y is between x and z */ loop invariant x + 1 <= y <= z; /* y is between x + 1 and z */ loop invariant x + 1 <= y + 1 <= z + 1; /* y + 1 is between x + 1 and z + 1 */ loop invariant x + 1 <= y + 1 <= z + 1 ==> y == z;\nloop invariant i142: x = y + z - 1 ==> x >= y;\nloop invariant i143: y = y + 1;\nloop invariant i144: z = z + 1;\nloop invariant i145: z >= y;\nloop invariant i146: 0 <= w <= 4294967295;\nloop invariant i147: 1 <= y <= 4294967295;\nloop invariant i148: 1 <= z <= 4294967295;\nloop invariant i149: y == z ==> y <= 4294967295;\nloop invariant i150: y == z ==> z <= 4294967295;\nloop invariant i151: y == z ==> x == w;\nloop invariant i152: y != z ==> y >= 0;\nloop invariant i153: y != z ==> z >= 1;\nloop invariant i154: y != z ==> x == w;\nloop invariant i155: w >= 0;\nloop invariant i156: w <= 4294967295;\nloop invariant i157: x >= 0;\nloop invariant i158: x <= 4294967295;\nloop invariant i159: y >= 1;\nloop invariant i160: y <= 4294967295;\nloop invariant i161: z >= 1;\nloop invariant i162: z <= 4294967295;\nloop invariant i163: y >= x; loop invariant z = y + 1; loop invariant z > x; loop invariant x >= w; loop invariant y >= w + 1; loop invariant z >= w + 2; loop invariant x >= w; loop invariant y > w; loop invariant z > w + 1; loop invariant y >= x; loop invariant x < y; loop invariant x <= y; loop invariant x < z; loop invariant x <= z; loop invariant x >= w; loop invariant x > w; loop invariant x < w + 2; loop invariant x <= w + 1; loop invariant y > w; loop invariant y < w + 2; loop invariant y <= w + 1; loop invariant z > w; loop invariant z < w + 3; loop invariant z <= w + 2;\nloop invariant i164: 1 <= y <= z;\nloop invariant i165: y - 1 <= x <= y - 1;\nloop invariant i166: y - 1 <= w <= y - 1;\nloop invariant i167: 0 <= w <= 0;\nloop invariant i168: 1 <= x <= y;\nloop invariant i169: 2 <= y <= z;\nloop invariant i170: 1 <= z <= z;\nloop invariant i171: 0 <= w <= 2147483647;\nloop invariant i172: w == x && w + 1 == y && x + 1 == z ==> unknown_uint();\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 45,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\nloop invariant i1: 0 <= x <= 4294967295;\n\n\n\n\nloop invariant i6: y <= z + 1;\nloop invariant i7: y <= z + 2;\nloop invariant i8: y <= z + 3;\nloop invariant i9: y <= z + 4;\nloop invariant i10: y <= z + 5;\nloop invariant i11: y <= z + 6;\nloop invariant i12: y <= z + 7;\nloop invariant i13: y <= z + 8;\nloop invariant i14: y <= z + 9;\nloop invariant i15: y <= z + 10;\nloop invariant i16: y <= z + 11;\nloop invariant i17: y <= z + 12;\nloop invariant i18: y <= z + 13;\nloop invariant i19: y <= z + 14;\nloop invariant i20: y <= z + 15;\nloop invariant i21: y <= z + 16;\nloop invariant i22: y <= z + 17;\nloop invariant i23: y <= z + 18;\nloop invariant i24: y <= z + 19;\nloop invariant i25: y <= z + 20;\nloop invariant i26: y <= z + 21;\nloop invariant i27: y <= z + 22;\nloop invariant i28: y <= z + 23;\nloop invariant i29: y <= z + 24;\nloop invariant i30: y <= z + 25;\nloop invariant i31: y <= z + 26;\nloop invariant i32: y <= z + 27;\nloop invariant i33: y <= z + 28;\nloop invariant i34: y <= z + 29;\nloop invariant i35: y <= z + 30;\nloop invariant i36: y <= z + 31;\nloop invariant i37: y <= z + 32;\nloop invariant i38: y <= z + 33;\nloop invariant i39: y <= z + 34;\nloop invariant i40: y <= z + 35;\nloop invariant i41: y <= z + 36;\nloop invariant i42: y <= z + 37;\nloop invariant i43: y <= z + 38;\nloop invariant i44: y <= z + 39;\nloop invariant i45: y <= z + 40;\nloop invariant i46: y <= z + 41;\nloop invariant i47: y <= z + 42;\nloop invariant i48: y <= z + 43;\nloop invariant i49: y <= z + 44;\nloop invariant i50: y <= z + 45;\nloop invariant i51: y <= z + 46;\nloop invariant i52: y <= z + 47;\nloop invariant i53: y <= z + 48;\nloop invariant i54: y <= z + 49;\nloop invariant i55: y <= z + 50;\nloop invariant i56: y <= z + 51;\nloop invariant i57: y <= z + 52;\nloop invariant i58: y <= z + 53;\nloop invariant i59: y <= z + 54;\nloop invariant i60: y <= z + 55;\nloop invariant i61: y <= z + 56;\nloop invariant i62: y <= z + 57;\nloop invariant i63: y <= z + 58;\nloop invariant i64: y <= z + 59;\nloop invariant i65: y <= z + 60;\nloop invariant i66: y <= z + 61;\nloop invariant i67: y <= z + 62;\nloop invariant i68: y <= z + 63;\nloop invariant i69: y <= z + 64;\nloop invariant i70: y <= z + 65;\nloop invariant i71: y <= z + 66;\nloop invariant i72: y <= z + 67;\nloop invariant i73: y <= z + 68;\nloop invariant i74: y <= z + 69;\nloop invariant i75: y <= z + 70;\nloop invariant i76: y <= z + 71;\nloop invariant i77: y <= z + 72;\nloop invariant i78: y <= z + 73;\nloop invariant i79: y <= z + 74;\nloop invariant i80: y <= z + 75;\nloop invariant i81: y <= z + 76;\nloop invariant i82: y <= z + 77;\nloop invariant i83: y <= z + 78;\nloop invariant i84: y <= z + 79;\nloop invariant i85: y <= z + 80;\nloop invariant i86: y <= z + 81;\nloop invariant i87: y <= z + 82;\nloop invariant i88: y <= z + 83;\nloop invariant i89: y <= z + 84;\nloop invariant i90: y <= z + 85;\nloop invariant i91: y <= z + 86;\nloop invariant i92: y <= z + 87;\nloop invariant i93: y <= z + 88;\nloop invariant i94: y <= z + 89;\nloop invariant i95: y <= z + 90;\nloop invariant i96: y <= z + 91;\nloop invariant i97: y <= z + 92;\nloop invariant i98: y <= z + 93;\n\n\n\n\n\n\nloop invariant i105: y == z;\n\n\n\n\nloop invariant i110: y <= z;\n\n\nloop invariant i113: w == x;\n\n\n\n\nloop invariant i118: x == w;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i145: z >= y;\nloop invariant i146: 0 <= w <= 4294967295;\n\n\nloop invariant i149: y == z ==> y <= 4294967295;\nloop invariant i150: y == z ==> z <= 4294967295;\nloop invariant i151: y == z ==> x == w;\nloop invariant i152: y != z ==> y >= 0;\nloop invariant i153: y != z ==> z >= 1;\nloop invariant i154: y != z ==> x == w;\nloop invariant i155: w >= 0;\nloop invariant i156: w <= 4294967295;\nloop invariant i157: x >= 0;\nloop invariant i158: x <= 4294967295;\n\nloop invariant i160: y <= 4294967295;\n\nloop invariant i162: z <= 4294967295;\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c"
        ],
        "skipped": [],
        "total": 101,
        "success_count": 90,
        "failure_count": 11,
        "success_rate": 0.8910891089108911
    }
}