{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark33_linear.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!(x>=0)) return 0;\n  while (x<100 && x>=0) {\n    x++;\n  }\n  {;\n//@ assert(x>=100);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= 0;\nloop invariant x < 100 ==> x + 1 >= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x < 100;\nloop invariant x >= 0 ==> x < 100;\nloop invariant x >= 0 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= (x - 1);\nloop invariant x <= (x + 1);\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\n*/\n```",
            "```\n/*@\nloop invariant x <= 100;\nloop invariant 0 <= x && x >= 0;\nloop invariant x >= x;\nloop invariant x <= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= 100 == (x >= 100 && x < 100);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 100;\nloop invariant x >= 100 ==> x == 100;\nloop invariant x < 100 ==> x == 100 - 1;\nloop invariant x < 100 && x >= 0;\nloop invariant x < 100 ==> x == 99;\nloop invariant x < 100 ==> x == 98;\nloop invariant x < 100 ==> x == 97;\nloop invariant x < 100 ==> x == 96;\nloop invariant x < 100 ==> x == 95;\nloop invariant x < 100 ==> x == 94;\nloop invariant x < 100 ==> x == 93;\nloop invariant x < 100 ==> x == 92;\nloop invariant x < 100 ==> x == 91;\nloop invariant x < 100 ==> x == 90;\nloop invariant x < 100 ==> x == 89;\nloop invariant x < 100 ==> x == 88;\nloop invariant x < 100 ==> x == 87;\nloop invariant x < 100 ==> x == 86;\nloop invariant x < 100 ==> x == 85;\nloop invariant x < 100 ==> x == 84;\nloop invariant x < 100 ==> x == 83;\nloop invariant x < 100 ==> x == 82;\nloop invariant x < 100 ==> x == 81;\nloop invariant x < 100 ==> x == 80;\nloop invariant x < 100 ==> x == 79;\nloop invariant x < 100 ==> x == 78;\nloop invariant x < 100 ==> x == 77;\nloop invariant x < 100 ==> x == 76;\nloop invariant x < 100 ==> x == 75;\nloop invariant x < 100 ==> x == 74;\nloop invariant x < 100 ==> x == 73;\nloop invariant x < 100 ==> x == 72;\nloop invariant x < 100 ==> x == 71;\nloop invariant x < 100 ==> x == 70;\nloop invariant x < 100 ==> x == 69;\nloop invariant x < 100 ==> x == 68;\nloop invariant x < 100 ==> x == 67;\nloop invariant x < 100 ==> x == 66;\nloop invariant x < 100 ==> x == 65;\nloop invariant x < 100 ==> x == 64;\nloop invariant x < 100 ==> x == 63;\nloop invariant x < 100 ==> x == 62;\nloop invariant x < 100 ==> x == 61;\nloop invariant x < 100 ==> x == 60;\nloop invariant x < 100 ==> x == 59;\nloop invariant x < 100 ==> x == 58;\nloop invariant x < 100 ==> x == 57;\nloop invariant x < 100 ==> x == 56;\nloop invariant x < 100 ==> x == 55;\nloop invariant x < 100 ==> x == 54;\nloop invariant x < 100 ==> x == 53;\nloop invariant x < 100 ==> x == 52;\nloop invariant x < 100 ==> x == 51;\nloop invariant x < 100 ==> x == 50;\nloop invariant x < 100 ==> x == 49;\nloop invariant x < 100 ==> x == 48;\nloop invariant x < 100 ==> x == 47;\nloop invariant x < 100 ==> x == 46;\nloop invariant x < 100 ==> x == 45;\nloop invariant x < 100 ==> x == 44;\nloop invariant x < 100 ==> x == 43;\nloop invariant x < 100 ==> x == 42;\nloop invariant x < 100 ==> x == 41;\nloop invariant x < 100 ==> x == 40;\nloop invariant x < 100 ==> x == 39;\nloop invariant x < 100 ==> x == 38;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x == (x + 1) ==> x >= 0;\nloop invariant x == (x + 1) ==> x < 100;\nloop invariant x == (x + 1) ==> x >= 0 ==> x < 100;\nloop invariant x == (x + 1) ==> (x >= 0 && x < 100);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x < 100;\nloop invariant x >= 0;\nloop invariant x <= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= 0;\nloop invariant x >= 100 ==> x <= 100;\nloop invariant x >= 100 ==> x >= 100;\nloop invariant x >= 100 ==> x >= 0;\nloop invariant x >= 100 ==> x <= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= 0;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x <= 99;\nloop invariant x >= 0 ==> x <= 100;\nloop invariant x >= 0 ==> x >= 0;\nloop invariant x >= 0 ==> x < 100;\nloop invariant x >= 0 ==> x == 0;\nloop invariant x >= 0 ==> x == 100;\nloop invariant x >= 0 ==> x == 99;\nloop invariant x >= 0 ==> x == 1;\nloop invariant x >= 0 ==> x == 2;\nloop invariant x >= 0 ==> x == 3;\nloop invariant x >= 0 ==> x == 4;\nloop invariant x >= 0 ==> x == 5;\nloop invariant x >= 0 ==> x == 6;\nloop invariant x >= 0 ==> x == 7;\nloop invariant x >= 0 ==> x == 8;\nloop invariant x >= 0 ==> x == 9;\nloop invariant x >= 0 ==> x == 10;\nloop invariant x >= 0 ==> x == 11;\nloop invariant x >= 0 ==> x == 12;\nloop invariant x >= 0 ==> x == 13;\nloop invariant x >= 0 ==> x == 14;\nloop invariant x >= 0 ==> x == 15;\nloop invariant x >= 0 ==> x == 16;\nloop invariant x >= 0 ==> x == 17;\nloop invariant x >= 0 ==> x == 18;\nloop invariant x >= 0 ==> x == 19;\nloop invariant x >= 0 ==> x == 20;\nloop invariant x >= 0 ==> x == 21;\nloop invariant x >= 0 ==> x == 22;\nloop invariant x >= 0 ==> x == 23;\nloop invariant x >= 0 ==> x == 24;\nloop invariant x >= 0 ==> x == 25;\nloop invariant x >= 0 ==> x == 26;\nloop invariant x >= 0 ==> x == 27;\nloop invariant x >= 0 ==> x == 28;\nloop invariant x >= 0 ==> x == 29;\nloop invariant x >= 0 ==> x == 30;\nloop invariant x >= 0 ==> x == 31;\nloop invariant x >= 0 ==> x == 32;\nloop invariant x >= 0 ==> x == 33;\nloop invariant x >= 0 ==> x == 34;\nloop invariant x >= 0 ==> x == 35;\nloop invariant x >= 0 ==> x == 36;\nloop invariant x >= 0 ==> x == 37;\nloop invariant x >= 0 ==> x == 38;\nloop invariant x >= 0 ==> x == 39;\nloop invariant x >= 0 ==> x == 40;\nloop invariant x >= 0 ==> x == 41;\nloop invariant x >= 0 ==> x == 42;\nloop invariant x >= 0 ==> x == 43;\nloop invariant x >= 0 ==> x == 44;\nloop invariant x >= 0 ==> x == 45;\nloop invariant x >= 0 ==> x == 46;\nloop invariant x >= 0 ==> x == 47;\nloop invariant x >= 0 ==> x == 48;\nloop invariant x >= 0 ==> x == 49;\nloop invariant x >= 0 ==> x == 50;\nloop invariant x >= 0 ==> x == 51;\nloop invariant x >= 0 ==> x == 52;\nloop invariant x >= 0 ==> x == 53;\nloop invariant x >= 0 ==> x == 54;\nloop invariant x >= 0 ==> x == 55;\nloop invariant x >= 0 ==> x == 56;\nloop invariant x >= 0 ==> x == 57;\nloop invariant x >= 0 ==> x == 58;\nloop invariant x >= 0 ==> x == 59;\nloop invariant x >= 0 ==> x == 60;\nloop invariant x >= 0 ==> x == 61;\nloop invariant x >= 0 ==> x == 62;\nloop invariant x >= 0 ==> x == 63;\nloop invariant x >= 0 ==> x == 64;\nloop invariant x >= 0 ==> x == 65;\nloop invariant x >= 0 ==> x == 66;\nloop invariant x >= 0 ==> x == 67;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= 0;\nloop invariant x < 100;\nloop invariant x >= 0;\nloop invariant x < 100;\nloop invariant x == 100 ==> x < 100;\nloop invariant x == 100 ==> x >= 0;\nloop invariant x == 100 ==> x <= 100;\nloop invariant x == 100 ==> x == x;\nloop invariant x == 100 ==> x != x;\nloop invariant x == 100 ==> x != 0;\nloop invariant x == 100 ==> x != 1;\nloop invariant x == 100 ==> x != 2;\nloop invariant x == 100 ==> x != 3;\nloop invariant x == 100 ==> x != 4;\nloop invariant x == 100 ==> x != 5;\nloop invariant x == 100 ==> x != 6;\nloop invariant x == 100 ==> x != 7;\nloop invariant x == 100 ==> x != 8;\nloop invariant x == 100 ==> x != 9;\nloop invariant x == 100 ==> x != 10;\nloop invariant x == 100 ==> x != 11;\nloop invariant x == 100 ==> x != 12;\nloop invariant x == 100 ==> x != 13;\nloop invariant x == 100 ==> x != 14;\nloop invariant x == 100 ==> x != 15;\nloop invariant x == 100 ==> x != 16;\nloop invariant x == 100 ==> x != 17;\nloop invariant x == 100 ==> x != 18;\nloop invariant x == 100 ==> x != 19;\nloop invariant x == 100 ==> x != 20;\nloop invariant x == 100 ==> x != 21;\nloop invariant x == 100 ==> x != 22;\nloop invariant x == 100 ==> x != 23;\nloop invariant x == 100 ==> x != 24;\nloop invariant x == 100 ==> x != 25;\nloop invariant x == 100 ==> x != 26;\nloop invariant x == 100 ==> x != 27;\nloop invariant x == 100 ==> x != 28;\nloop invariant x == 100 ==> x != 29;\nloop invariant x == 100 ==> x != 30;\nloop invariant x == 100 ==> x != 31;\nloop invariant x == 100 ==> x != 32;\nloop invariant x == 100 ==> x != 33;\nloop invariant x == 100 ==> x != 34;\nloop invariant x == 100 ==> x != 35;\nloop invariant x == 100 ==> x != 36;\nloop invariant x == 100 ==> x != 37;\nloop invariant x == 100 ==> x != 38;\nloop invariant x == 100 ==> x != 39;\nloop invariant x == 100 ==> x != 40;\nloop invariant x == 100 ==> x != 41;\nloop invariant x == 100 ==> x != 42;\nloop invariant x == 100 ==> x != 43;\nloop invariant x == 100 ==> x != 44;\nloop invariant x == 100 ==> x != 45;\nloop invariant x == 100 ==> x != 46;\nloop invariant x == 100 ==> x != 47;\nloop invariant x == 100 ==> x != 48;\nloop invariant x == 100 ==> x != 49;\nloop invariant x == 100 ==> x != 50;\nloop invariant x == 100 ==> x != 51;\nloop invariant x == 100 ==> x != 52;\nloop invariant x == 100 ==> x != 53;\nloop invariant x == 100 ==> x != 54;\nloop invariant x == 100 ==> x != 55;\nloop invariant x == 100 ==> x != 56;\nloop invariant x == 100 ==> x != 57;\nloop invariant x == 100 ==> x != 58;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100000;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= 100 ==> x >= 0;\nloop invariant x >= 0 ==> x < 100;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= 0;\nloop invariant x < 100 ==> x + 1 >= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!(x>=0)) return 0;\n  /*@\n\nloop invariant i2: x >= 0;\n\n*/\nwhile (x<100 && x>=0) {\n    x++;\n  }\n  {;\n//@ assert(x>=100);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!(x>=0)) return 0;\n  /*@\n\n*/\nwhile (x<100 && x>=0) {\n    x++;\n  }\n  {;\n//@ assert(x>=100);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x < 100;\nloop invariant x >= 0 ==> x < 100;\nloop invariant x >= 0 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!(x>=0)) return 0;\n  /*@\n\n\nloop invariant i3: x >= 0 ==> x >= 0;\nloop invariant i4: x < 100 ==> x < 100;\n*/\nwhile (x<100 && x>=0) {\n    x++;\n  }\n  {;\n//@ assert(x>=100);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= (x - 1);\nloop invariant x <= (x + 1);\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x < 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!(x>=0)) return 0;\n  /*@\n\nloop invariant i2: x >= (x - 1);\nloop invariant i3: x <= (x + 1);\nloop invariant i4: x < 100 ==> x >= 0;\nloop invariant i5: x < 100 ==> x < 100;\n*/\nwhile (x<100 && x>=0) {\n    x++;\n  }\n  {;\n//@ assert(x>=100);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant x <= 100;\nloop invariant 0 <= x && x >= 0;\nloop invariant x >= x;\nloop invariant x <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!(x>=0)) return 0;\n  /*@\n\nloop invariant i2: 0 <= x && x >= 0;\nloop invariant i3: x >= x;\n*/\nwhile (x<100 && x>=0) {\n    x++;\n  }\n  {;\n//@ assert(x>=100);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= 100 == (x >= 100 && x < 100);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!(x>=0)) return 0;\n  /*@\n\n\n*/\nwhile (x<100 && x>=0) {\n    x++;\n  }\n  {;\n//@ assert(x>=100);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 32,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 100;\nloop invariant x >= 100 ==> x == 100;\nloop invariant x < 100 ==> x == 100 - 1;\nloop invariant x < 100 && x >= 0;\nloop invariant x < 100 ==> x == 99;\nloop invariant x < 100 ==> x == 98;\nloop invariant x < 100 ==> x == 97;\nloop invariant x < 100 ==> x == 96;\nloop invariant x < 100 ==> x == 95;\nloop invariant x < 100 ==> x == 94;\nloop invariant x < 100 ==> x == 93;\nloop invariant x < 100 ==> x == 92;\nloop invariant x < 100 ==> x == 91;\nloop invariant x < 100 ==> x == 90;\nloop invariant x < 100 ==> x == 89;\nloop invariant x < 100 ==> x == 88;\nloop invariant x < 100 ==> x == 87;\nloop invariant x < 100 ==> x == 86;\nloop invariant x < 100 ==> x == 85;\nloop invariant x < 100 ==> x == 84;\nloop invariant x < 100 ==> x == 83;\nloop invariant x < 100 ==> x == 82;\nloop invariant x < 100 ==> x == 81;\nloop invariant x < 100 ==> x == 80;\nloop invariant x < 100 ==> x == 79;\nloop invariant x < 100 ==> x == 78;\nloop invariant x < 100 ==> x == 77;\nloop invariant x < 100 ==> x == 76;\nloop invariant x < 100 ==> x == 75;\nloop invariant x < 100 ==> x == 74;\nloop invariant x < 100 ==> x == 73;\nloop invariant x < 100 ==> x == 72;\nloop invariant x < 100 ==> x == 71;\nloop invariant x < 100 ==> x == 70;\nloop invariant x < 100 ==> x == 69;\nloop invariant x < 100 ==> x == 68;\nloop invariant x < 100 ==> x == 67;\nloop invariant x < 100 ==> x == 66;\nloop invariant x < 100 ==> x == 65;\nloop invariant x < 100 ==> x == 64;\nloop invariant x < 100 ==> x == 63;\nloop invariant x < 100 ==> x == 62;\nloop invariant x < 100 ==> x == 61;\nloop invariant x < 100 ==> x == 60;\nloop invariant x < 100 ==> x == 59;\nloop invariant x < 100 ==> x == 58;\nloop invariant x < 100 ==> x == 57;\nloop invariant x < 100 ==> x == 56;\nloop invariant x < 100 ==> x == 55;\nloop invariant x < 100 ==> x == 54;\nloop invariant x < 100 ==> x == 53;\nloop invariant x < 100 ==> x == 52;\nloop invariant x < 100 ==> x == 51;\nloop invariant x < 100 ==> x == 50;\nloop invariant x < 100 ==> x == 49;\nloop invariant x < 100 ==> x == 48;\nloop invariant x < 100 ==> x == 47;\nloop invariant x < 100 ==> x == 46;\nloop invariant x < 100 ==> x == 45;\nloop invariant x < 100 ==> x == 44;\nloop invariant x < 100 ==> x == 43;\nloop invariant x < 100 ==> x == 42;\nloop invariant x < 100 ==> x == 41;\nloop invariant x < 100 ==> x == 40;\nloop invariant x < 100 ==> x == 39;\nloop invariant x < 100 ==> x == 38;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!(x>=0)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (x<100 && x>=0) {\n    x++;\n  }\n  {;\n//@ assert(x>=100);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x == (x + 1) ==> x >= 0;\nloop invariant x == (x + 1) ==> x < 100;\nloop invariant x == (x + 1) ==> x >= 0 ==> x < 100;\nloop invariant x == (x + 1) ==> (x >= 0 && x < 100);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!(x>=0)) return 0;\n  /*@\n\nloop invariant i2: x == (x + 1) ==> x >= 0;\nloop invariant i3: x == (x + 1) ==> x < 100;\nloop invariant i4: x == (x + 1) ==> x >= 0 ==> x < 100;\nloop invariant i5: x == (x + 1) ==> (x >= 0 && x < 100);\n*/\nwhile (x<100 && x>=0) {\n    x++;\n  }\n  {;\n//@ assert(x>=100);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x < 100;\nloop invariant x >= 0;\nloop invariant x <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!(x>=0)) return 0;\n  /*@\n\nloop invariant i2: x >= 0;\n\n*/\nwhile (x<100 && x>=0) {\n    x++;\n  }\n  {;\n//@ assert(x>=100);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!(x>=0)) return 0;\n  /*@\n\nloop invariant i2: x >= 0;\n*/\nwhile (x<100 && x>=0) {\n    x++;\n  }\n  {;\n//@ assert(x>=100);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= 0;\nloop invariant x >= 100 ==> x <= 100;\nloop invariant x >= 100 ==> x >= 100;\nloop invariant x >= 100 ==> x >= 0;\nloop invariant x >= 100 ==> x <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!(x>=0)) return 0;\n  /*@\n\nloop invariant i2: x >= 0;\n\nloop invariant i4: x >= 100 ==> x >= 100;\nloop invariant i5: x >= 100 ==> x >= 0;\n*/\nwhile (x<100 && x>=0) {\n    x++;\n  }\n  {;\n//@ assert(x>=100);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 35,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= 0;\nloop invariant x < 100 ==> x >= 0;\nloop invariant x < 100 ==> x <= 99;\nloop invariant x >= 0 ==> x <= 100;\nloop invariant x >= 0 ==> x >= 0;\nloop invariant x >= 0 ==> x < 100;\nloop invariant x >= 0 ==> x == 0;\nloop invariant x >= 0 ==> x == 100;\nloop invariant x >= 0 ==> x == 99;\nloop invariant x >= 0 ==> x == 1;\nloop invariant x >= 0 ==> x == 2;\nloop invariant x >= 0 ==> x == 3;\nloop invariant x >= 0 ==> x == 4;\nloop invariant x >= 0 ==> x == 5;\nloop invariant x >= 0 ==> x == 6;\nloop invariant x >= 0 ==> x == 7;\nloop invariant x >= 0 ==> x == 8;\nloop invariant x >= 0 ==> x == 9;\nloop invariant x >= 0 ==> x == 10;\nloop invariant x >= 0 ==> x == 11;\nloop invariant x >= 0 ==> x == 12;\nloop invariant x >= 0 ==> x == 13;\nloop invariant x >= 0 ==> x == 14;\nloop invariant x >= 0 ==> x == 15;\nloop invariant x >= 0 ==> x == 16;\nloop invariant x >= 0 ==> x == 17;\nloop invariant x >= 0 ==> x == 18;\nloop invariant x >= 0 ==> x == 19;\nloop invariant x >= 0 ==> x == 20;\nloop invariant x >= 0 ==> x == 21;\nloop invariant x >= 0 ==> x == 22;\nloop invariant x >= 0 ==> x == 23;\nloop invariant x >= 0 ==> x == 24;\nloop invariant x >= 0 ==> x == 25;\nloop invariant x >= 0 ==> x == 26;\nloop invariant x >= 0 ==> x == 27;\nloop invariant x >= 0 ==> x == 28;\nloop invariant x >= 0 ==> x == 29;\nloop invariant x >= 0 ==> x == 30;\nloop invariant x >= 0 ==> x == 31;\nloop invariant x >= 0 ==> x == 32;\nloop invariant x >= 0 ==> x == 33;\nloop invariant x >= 0 ==> x == 34;\nloop invariant x >= 0 ==> x == 35;\nloop invariant x >= 0 ==> x == 36;\nloop invariant x >= 0 ==> x == 37;\nloop invariant x >= 0 ==> x == 38;\nloop invariant x >= 0 ==> x == 39;\nloop invariant x >= 0 ==> x == 40;\nloop invariant x >= 0 ==> x == 41;\nloop invariant x >= 0 ==> x == 42;\nloop invariant x >= 0 ==> x == 43;\nloop invariant x >= 0 ==> x == 44;\nloop invariant x >= 0 ==> x == 45;\nloop invariant x >= 0 ==> x == 46;\nloop invariant x >= 0 ==> x == 47;\nloop invariant x >= 0 ==> x == 48;\nloop invariant x >= 0 ==> x == 49;\nloop invariant x >= 0 ==> x == 50;\nloop invariant x >= 0 ==> x == 51;\nloop invariant x >= 0 ==> x == 52;\nloop invariant x >= 0 ==> x == 53;\nloop invariant x >= 0 ==> x == 54;\nloop invariant x >= 0 ==> x == 55;\nloop invariant x >= 0 ==> x == 56;\nloop invariant x >= 0 ==> x == 57;\nloop invariant x >= 0 ==> x == 58;\nloop invariant x >= 0 ==> x == 59;\nloop invariant x >= 0 ==> x == 60;\nloop invariant x >= 0 ==> x == 61;\nloop invariant x >= 0 ==> x == 62;\nloop invariant x >= 0 ==> x == 63;\nloop invariant x >= 0 ==> x == 64;\nloop invariant x >= 0 ==> x == 65;\nloop invariant x >= 0 ==> x == 66;\nloop invariant x >= 0 ==> x == 67;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!(x>=0)) return 0;\n  /*@\n\nloop invariant i2: x >= 0;\nloop invariant i3: x < 100 ==> x >= 0;\nloop invariant i4: x < 100 ==> x <= 99;\n\nloop invariant i6: x >= 0 ==> x >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (x<100 && x>=0) {\n    x++;\n  }\n  {;\n//@ assert(x>=100);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= 0;\nloop invariant x < 100;\nloop invariant x >= 0;\nloop invariant x < 100;\nloop invariant x == 100 ==> x < 100;\nloop invariant x == 100 ==> x >= 0;\nloop invariant x == 100 ==> x <= 100;\nloop invariant x == 100 ==> x == x;\nloop invariant x == 100 ==> x != x;\nloop invariant x == 100 ==> x != 0;\nloop invariant x == 100 ==> x != 1;\nloop invariant x == 100 ==> x != 2;\nloop invariant x == 100 ==> x != 3;\nloop invariant x == 100 ==> x != 4;\nloop invariant x == 100 ==> x != 5;\nloop invariant x == 100 ==> x != 6;\nloop invariant x == 100 ==> x != 7;\nloop invariant x == 100 ==> x != 8;\nloop invariant x == 100 ==> x != 9;\nloop invariant x == 100 ==> x != 10;\nloop invariant x == 100 ==> x != 11;\nloop invariant x == 100 ==> x != 12;\nloop invariant x == 100 ==> x != 13;\nloop invariant x == 100 ==> x != 14;\nloop invariant x == 100 ==> x != 15;\nloop invariant x == 100 ==> x != 16;\nloop invariant x == 100 ==> x != 17;\nloop invariant x == 100 ==> x != 18;\nloop invariant x == 100 ==> x != 19;\nloop invariant x == 100 ==> x != 20;\nloop invariant x == 100 ==> x != 21;\nloop invariant x == 100 ==> x != 22;\nloop invariant x == 100 ==> x != 23;\nloop invariant x == 100 ==> x != 24;\nloop invariant x == 100 ==> x != 25;\nloop invariant x == 100 ==> x != 26;\nloop invariant x == 100 ==> x != 27;\nloop invariant x == 100 ==> x != 28;\nloop invariant x == 100 ==> x != 29;\nloop invariant x == 100 ==> x != 30;\nloop invariant x == 100 ==> x != 31;\nloop invariant x == 100 ==> x != 32;\nloop invariant x == 100 ==> x != 33;\nloop invariant x == 100 ==> x != 34;\nloop invariant x == 100 ==> x != 35;\nloop invariant x == 100 ==> x != 36;\nloop invariant x == 100 ==> x != 37;\nloop invariant x == 100 ==> x != 38;\nloop invariant x == 100 ==> x != 39;\nloop invariant x == 100 ==> x != 40;\nloop invariant x == 100 ==> x != 41;\nloop invariant x == 100 ==> x != 42;\nloop invariant x == 100 ==> x != 43;\nloop invariant x == 100 ==> x != 44;\nloop invariant x == 100 ==> x != 45;\nloop invariant x == 100 ==> x != 46;\nloop invariant x == 100 ==> x != 47;\nloop invariant x == 100 ==> x != 48;\nloop invariant x == 100 ==> x != 49;\nloop invariant x == 100 ==> x != 50;\nloop invariant x == 100 ==> x != 51;\nloop invariant x == 100 ==> x != 52;\nloop invariant x == 100 ==> x != 53;\nloop invariant x == 100 ==> x != 54;\nloop invariant x == 100 ==> x != 55;\nloop invariant x == 100 ==> x != 56;\nloop invariant x == 100 ==> x != 57;\nloop invariant x == 100 ==> x != 58;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!(x>=0)) return 0;\n  /*@\n\nloop invariant i2: x >= 0;\n\n\nloop invariant i5: x == 100 ==> x >= 0;\nloop invariant i6: x == 100 ==> x <= 100;\nloop invariant i7: x == 100 ==> x == x;\n\nloop invariant i9: x == 100 ==> x != 0;\nloop invariant i10: x == 100 ==> x != 1;\nloop invariant i11: x == 100 ==> x != 2;\nloop invariant i12: x == 100 ==> x != 3;\nloop invariant i13: x == 100 ==> x != 4;\nloop invariant i14: x == 100 ==> x != 5;\nloop invariant i15: x == 100 ==> x != 6;\nloop invariant i16: x == 100 ==> x != 7;\nloop invariant i17: x == 100 ==> x != 8;\nloop invariant i18: x == 100 ==> x != 9;\nloop invariant i19: x == 100 ==> x != 10;\nloop invariant i20: x == 100 ==> x != 11;\nloop invariant i21: x == 100 ==> x != 12;\nloop invariant i22: x == 100 ==> x != 13;\nloop invariant i23: x == 100 ==> x != 14;\nloop invariant i24: x == 100 ==> x != 15;\nloop invariant i25: x == 100 ==> x != 16;\nloop invariant i26: x == 100 ==> x != 17;\nloop invariant i27: x == 100 ==> x != 18;\nloop invariant i28: x == 100 ==> x != 19;\nloop invariant i29: x == 100 ==> x != 20;\nloop invariant i30: x == 100 ==> x != 21;\nloop invariant i31: x == 100 ==> x != 22;\nloop invariant i32: x == 100 ==> x != 23;\nloop invariant i33: x == 100 ==> x != 24;\nloop invariant i34: x == 100 ==> x != 25;\nloop invariant i35: x == 100 ==> x != 26;\nloop invariant i36: x == 100 ==> x != 27;\nloop invariant i37: x == 100 ==> x != 28;\nloop invariant i38: x == 100 ==> x != 29;\nloop invariant i39: x == 100 ==> x != 30;\nloop invariant i40: x == 100 ==> x != 31;\nloop invariant i41: x == 100 ==> x != 32;\nloop invariant i42: x == 100 ==> x != 33;\nloop invariant i43: x == 100 ==> x != 34;\nloop invariant i44: x == 100 ==> x != 35;\nloop invariant i45: x == 100 ==> x != 36;\nloop invariant i46: x == 100 ==> x != 37;\nloop invariant i47: x == 100 ==> x != 38;\nloop invariant i48: x == 100 ==> x != 39;\nloop invariant i49: x == 100 ==> x != 40;\nloop invariant i50: x == 100 ==> x != 41;\nloop invariant i51: x == 100 ==> x != 42;\nloop invariant i52: x == 100 ==> x != 43;\nloop invariant i53: x == 100 ==> x != 44;\nloop invariant i54: x == 100 ==> x != 45;\nloop invariant i55: x == 100 ==> x != 46;\nloop invariant i56: x == 100 ==> x != 47;\nloop invariant i57: x == 100 ==> x != 48;\nloop invariant i58: x == 100 ==> x != 49;\nloop invariant i59: x == 100 ==> x != 50;\nloop invariant i60: x == 100 ==> x != 51;\nloop invariant i61: x == 100 ==> x != 52;\nloop invariant i62: x == 100 ==> x != 53;\nloop invariant i63: x == 100 ==> x != 54;\nloop invariant i64: x == 100 ==> x != 55;\nloop invariant i65: x == 100 ==> x != 56;\nloop invariant i66: x == 100 ==> x != 57;\nloop invariant i67: x == 100 ==> x != 58;\n*/\nwhile (x<100 && x>=0) {\n    x++;\n  }\n  {;\n//@ assert(x>=100);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100000;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!(x>=0)) return 0;\n  /*@\n\nloop invariant i2: x >= 0;\n*/\nwhile (x<100 && x>=0) {\n    x++;\n  }\n  {;\n//@ assert(x>=100);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= 100 ==> x >= 0;\nloop invariant x >= 0 ==> x < 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!(x>=0)) return 0;\n  /*@\n\nloop invariant i2: x >= 100 ==> x >= 0;\n\n*/\nwhile (x<100 && x>=0) {\n    x++;\n  }\n  {;\n//@ assert(x>=100);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "loop invariant 0 <= x <= 100 is preserved but not established.\nloop invariant x >= 0 is partially proven to be inductive.\nloop invariant x < 100 ==> x + 1 >= 100 is preserved but not established.\nloop invariant 0 <= x < 100 is preserved but not established.\nloop invariant x >= 0 ==> x < 100 is partially proven to be inductive.\nloop invariant x >= 0 ==> x >= 0 is partially proven to be inductive.\nloop invariant x < 100 ==> x < 100 is partially proven to be inductive.\nloop invariant x >= (x - 1) is partially proven to be inductive.\nloop invariant x <= (x + 1) is partially proven to be inductive.\nloop invariant x < 100 ==> x >= 0 is partially proven to be inductive.\nloop invariant x <= 100 is partially proven to be inductive.\nloop invariant 0 <= x && x >= 0 is partially proven to be inductive.\nloop invariant x >= x is partially proven to be inductive.\nloop invariant x >= 100 == (x >= 100 && x < 100) is preserved but not established.\nloop invariant 1 <= x <= 100 is partially proven to be inductive.\nloop invariant x >= 100 ==> x == 100 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 100 - 1 is partially proven to be inductive.\nloop invariant x < 100 && x >= 0 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 99 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 98 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 97 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 96 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 95 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 94 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 93 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 92 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 91 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 90 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 89 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 88 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 87 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 86 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 85 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 84 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 83 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 82 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 81 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 80 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 79 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 78 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 77 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 76 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 75 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 74 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 73 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 72 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 71 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 70 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 69 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 68 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 67 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 66 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 65 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 64 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 63 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 62 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 61 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 60 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 59 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 58 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 57 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 56 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 55 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 54 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 53 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 52 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 51 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 50 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 49 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 48 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 47 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 46 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 45 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 44 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 43 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 42 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 41 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 40 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 39 is partially proven to be inductive.\nloop invariant x < 100 ==> x == 38 is partially proven to be inductive.\nloop invariant x == (x + 1) ==> x >= 0 is partially proven to be inductive.\nloop invariant x == (x + 1) ==> x < 100 is partially proven to be inductive.\nloop invariant x == (x + 1) ==> x >= 0 ==> x < 100 is partially proven to be inductive.\nloop invariant x == (x + 1) ==> (x >= 0 && x < 100) is partially proven to be inductive.\nloop invariant x >= 100 ==> x <= 100 is partially proven to be inductive.\nloop invariant x >= 100 ==> x >= 100 is partially proven to be inductive.\nloop invariant x >= 100 ==> x >= 0 is partially proven to be inductive.\nloop invariant x < 100 ==> x <= 99 is partially proven to be inductive.\nloop invariant x >= 0 ==> x <= 100 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 0 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 100 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 99 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 1 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 2 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 3 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 4 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 5 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 6 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 7 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 8 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 9 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 10 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 11 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 12 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 13 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 14 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 15 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 16 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 17 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 18 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 19 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 20 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 21 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 22 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 23 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 24 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 25 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 26 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 27 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 28 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 29 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 30 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 31 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 32 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 33 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 34 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 35 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 36 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 37 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 38 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 39 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 40 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 41 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 42 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 43 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 44 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 45 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 46 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 47 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 48 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 49 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 50 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 51 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 52 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 53 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 54 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 55 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 56 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 57 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 58 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 59 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 60 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 61 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 62 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 63 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 64 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 65 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 66 is partially proven to be inductive.\nloop invariant x >= 0 ==> x == 67 is partially proven to be inductive.\nloop invariant x < 100 is partially proven to be inductive.\nloop invariant x == 100 ==> x < 100 is partially proven to be inductive.\nloop invariant x == 100 ==> x >= 0 is partially proven to be inductive.\nloop invariant x == 100 ==> x <= 100 is partially proven to be inductive.\nloop invariant x == 100 ==> x == x is partially proven to be inductive.\nloop invariant x == 100 ==> x != x is partially proven to be inductive.\nloop invariant x == 100 ==> x != 0 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 1 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 2 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 3 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 4 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 5 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 6 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 7 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 8 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 9 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 10 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 11 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 12 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 13 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 14 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 15 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 16 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 17 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 18 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 19 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 20 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 21 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 22 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 23 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 24 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 25 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 26 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 27 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 28 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 29 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 30 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 31 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 32 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 33 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 34 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 35 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 36 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 37 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 38 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 39 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 40 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 41 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 42 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 43 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 44 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 45 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 46 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 47 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 48 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 49 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 50 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 51 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 52 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 53 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 54 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 55 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 56 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 57 is partially proven to be inductive.\nloop invariant x == 100 ==> x != 58 is partially proven to be inductive.\nloop invariant 0 <= x <= 100000 is partially proven to be inductive.\nAssertion x >= 100: Partially proven",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!(x>=0)) return 0;\n  /*@\nloop invariant i1: 0 <= x <= 100;\nloop invariant i2: x >= 0;\nloop invariant i3: x < 100 ==> x + 1 >= 100;\nloop invariant i4: 0 <= x < 100;\nloop invariant i5: x >= 0 ==> x < 100;\nloop invariant i6: x >= 0 ==> x >= 0;\nloop invariant i7: x < 100 ==> x < 100;\nloop invariant i8: x >= (x - 1);\nloop invariant i9: x <= (x + 1);\nloop invariant i10: x < 100 ==> x >= 0;\nloop invariant i11: x <= 100;\nloop invariant i12: 0 <= x && x >= 0;\nloop invariant i13: x >= x;\nloop invariant i14: x >= 100 == (x >= 100 && x < 100);\nloop invariant i15: 1 <= x <= 100;\nloop invariant i16: x >= 100 ==> x == 100;\nloop invariant i17: x < 100 ==> x == 100 - 1;\nloop invariant i18: x < 100 && x >= 0;\nloop invariant i19: x < 100 ==> x == 99;\nloop invariant i20: x < 100 ==> x == 98;\nloop invariant i21: x < 100 ==> x == 97;\nloop invariant i22: x < 100 ==> x == 96;\nloop invariant i23: x < 100 ==> x == 95;\nloop invariant i24: x < 100 ==> x == 94;\nloop invariant i25: x < 100 ==> x == 93;\nloop invariant i26: x < 100 ==> x == 92;\nloop invariant i27: x < 100 ==> x == 91;\nloop invariant i28: x < 100 ==> x == 90;\nloop invariant i29: x < 100 ==> x == 89;\nloop invariant i30: x < 100 ==> x == 88;\nloop invariant i31: x < 100 ==> x == 87;\nloop invariant i32: x < 100 ==> x == 86;\nloop invariant i33: x < 100 ==> x == 85;\nloop invariant i34: x < 100 ==> x == 84;\nloop invariant i35: x < 100 ==> x == 83;\nloop invariant i36: x < 100 ==> x == 82;\nloop invariant i37: x < 100 ==> x == 81;\nloop invariant i38: x < 100 ==> x == 80;\nloop invariant i39: x < 100 ==> x == 79;\nloop invariant i40: x < 100 ==> x == 78;\nloop invariant i41: x < 100 ==> x == 77;\nloop invariant i42: x < 100 ==> x == 76;\nloop invariant i43: x < 100 ==> x == 75;\nloop invariant i44: x < 100 ==> x == 74;\nloop invariant i45: x < 100 ==> x == 73;\nloop invariant i46: x < 100 ==> x == 72;\nloop invariant i47: x < 100 ==> x == 71;\nloop invariant i48: x < 100 ==> x == 70;\nloop invariant i49: x < 100 ==> x == 69;\nloop invariant i50: x < 100 ==> x == 68;\nloop invariant i51: x < 100 ==> x == 67;\nloop invariant i52: x < 100 ==> x == 66;\nloop invariant i53: x < 100 ==> x == 65;\nloop invariant i54: x < 100 ==> x == 64;\nloop invariant i55: x < 100 ==> x == 63;\nloop invariant i56: x < 100 ==> x == 62;\nloop invariant i57: x < 100 ==> x == 61;\nloop invariant i58: x < 100 ==> x == 60;\nloop invariant i59: x < 100 ==> x == 59;\nloop invariant i60: x < 100 ==> x == 58;\nloop invariant i61: x < 100 ==> x == 57;\nloop invariant i62: x < 100 ==> x == 56;\nloop invariant i63: x < 100 ==> x == 55;\nloop invariant i64: x < 100 ==> x == 54;\nloop invariant i65: x < 100 ==> x == 53;\nloop invariant i66: x < 100 ==> x == 52;\nloop invariant i67: x < 100 ==> x == 51;\nloop invariant i68: x < 100 ==> x == 50;\nloop invariant i69: x < 100 ==> x == 49;\nloop invariant i70: x < 100 ==> x == 48;\nloop invariant i71: x < 100 ==> x == 47;\nloop invariant i72: x < 100 ==> x == 46;\nloop invariant i73: x < 100 ==> x == 45;\nloop invariant i74: x < 100 ==> x == 44;\nloop invariant i75: x < 100 ==> x == 43;\nloop invariant i76: x < 100 ==> x == 42;\nloop invariant i77: x < 100 ==> x == 41;\nloop invariant i78: x < 100 ==> x == 40;\nloop invariant i79: x < 100 ==> x == 39;\nloop invariant i80: x < 100 ==> x == 38;\nloop invariant i81: x == (x + 1) ==> x >= 0;\nloop invariant i82: x == (x + 1) ==> x < 100;\nloop invariant i83: x == (x + 1) ==> x >= 0 ==> x < 100;\nloop invariant i84: x == (x + 1) ==> (x >= 0 && x < 100);\nloop invariant i85: x >= 100 ==> x <= 100;\nloop invariant i86: x >= 100 ==> x >= 100;\nloop invariant i87: x >= 100 ==> x >= 0;\nloop invariant i88: x < 100 ==> x <= 99;\nloop invariant i89: x >= 0 ==> x <= 100;\nloop invariant i90: x >= 0 ==> x == 0;\nloop invariant i91: x >= 0 ==> x == 100;\nloop invariant i92: x >= 0 ==> x == 99;\nloop invariant i93: x >= 0 ==> x == 1;\nloop invariant i94: x >= 0 ==> x == 2;\nloop invariant i95: x >= 0 ==> x == 3;\nloop invariant i96: x >= 0 ==> x == 4;\nloop invariant i97: x >= 0 ==> x == 5;\nloop invariant i98: x >= 0 ==> x == 6;\nloop invariant i99: x >= 0 ==> x == 7;\nloop invariant i100: x >= 0 ==> x == 8;\nloop invariant i101: x >= 0 ==> x == 9;\nloop invariant i102: x >= 0 ==> x == 10;\nloop invariant i103: x >= 0 ==> x == 11;\nloop invariant i104: x >= 0 ==> x == 12;\nloop invariant i105: x >= 0 ==> x == 13;\nloop invariant i106: x >= 0 ==> x == 14;\nloop invariant i107: x >= 0 ==> x == 15;\nloop invariant i108: x >= 0 ==> x == 16;\nloop invariant i109: x >= 0 ==> x == 17;\nloop invariant i110: x >= 0 ==> x == 18;\nloop invariant i111: x >= 0 ==> x == 19;\nloop invariant i112: x >= 0 ==> x == 20;\nloop invariant i113: x >= 0 ==> x == 21;\nloop invariant i114: x >= 0 ==> x == 22;\nloop invariant i115: x >= 0 ==> x == 23;\nloop invariant i116: x >= 0 ==> x == 24;\nloop invariant i117: x >= 0 ==> x == 25;\nloop invariant i118: x >= 0 ==> x == 26;\nloop invariant i119: x >= 0 ==> x == 27;\nloop invariant i120: x >= 0 ==> x == 28;\nloop invariant i121: x >= 0 ==> x == 29;\nloop invariant i122: x >= 0 ==> x == 30;\nloop invariant i123: x >= 0 ==> x == 31;\nloop invariant i124: x >= 0 ==> x == 32;\nloop invariant i125: x >= 0 ==> x == 33;\nloop invariant i126: x >= 0 ==> x == 34;\nloop invariant i127: x >= 0 ==> x == 35;\nloop invariant i128: x >= 0 ==> x == 36;\nloop invariant i129: x >= 0 ==> x == 37;\nloop invariant i130: x >= 0 ==> x == 38;\nloop invariant i131: x >= 0 ==> x == 39;\nloop invariant i132: x >= 0 ==> x == 40;\nloop invariant i133: x >= 0 ==> x == 41;\nloop invariant i134: x >= 0 ==> x == 42;\nloop invariant i135: x >= 0 ==> x == 43;\nloop invariant i136: x >= 0 ==> x == 44;\nloop invariant i137: x >= 0 ==> x == 45;\nloop invariant i138: x >= 0 ==> x == 46;\nloop invariant i139: x >= 0 ==> x == 47;\nloop invariant i140: x >= 0 ==> x == 48;\nloop invariant i141: x >= 0 ==> x == 49;\nloop invariant i142: x >= 0 ==> x == 50;\nloop invariant i143: x >= 0 ==> x == 51;\nloop invariant i144: x >= 0 ==> x == 52;\nloop invariant i145: x >= 0 ==> x == 53;\nloop invariant i146: x >= 0 ==> x == 54;\nloop invariant i147: x >= 0 ==> x == 55;\nloop invariant i148: x >= 0 ==> x == 56;\nloop invariant i149: x >= 0 ==> x == 57;\nloop invariant i150: x >= 0 ==> x == 58;\nloop invariant i151: x >= 0 ==> x == 59;\nloop invariant i152: x >= 0 ==> x == 60;\nloop invariant i153: x >= 0 ==> x == 61;\nloop invariant i154: x >= 0 ==> x == 62;\nloop invariant i155: x >= 0 ==> x == 63;\nloop invariant i156: x >= 0 ==> x == 64;\nloop invariant i157: x >= 0 ==> x == 65;\nloop invariant i158: x >= 0 ==> x == 66;\nloop invariant i159: x >= 0 ==> x == 67;\nloop invariant i160: x < 100;\nloop invariant i161: x == 100 ==> x < 100;\nloop invariant i162: x == 100 ==> x >= 0;\nloop invariant i163: x == 100 ==> x <= 100;\nloop invariant i164: x == 100 ==> x == x;\nloop invariant i165: x == 100 ==> x != x;\nloop invariant i166: x == 100 ==> x != 0;\nloop invariant i167: x == 100 ==> x != 1;\nloop invariant i168: x == 100 ==> x != 2;\nloop invariant i169: x == 100 ==> x != 3;\nloop invariant i170: x == 100 ==> x != 4;\nloop invariant i171: x == 100 ==> x != 5;\nloop invariant i172: x == 100 ==> x != 6;\nloop invariant i173: x == 100 ==> x != 7;\nloop invariant i174: x == 100 ==> x != 8;\nloop invariant i175: x == 100 ==> x != 9;\nloop invariant i176: x == 100 ==> x != 10;\nloop invariant i177: x == 100 ==> x != 11;\nloop invariant i178: x == 100 ==> x != 12;\nloop invariant i179: x == 100 ==> x != 13;\nloop invariant i180: x == 100 ==> x != 14;\nloop invariant i181: x == 100 ==> x != 15;\nloop invariant i182: x == 100 ==> x != 16;\nloop invariant i183: x == 100 ==> x != 17;\nloop invariant i184: x == 100 ==> x != 18;\nloop invariant i185: x == 100 ==> x != 19;\nloop invariant i186: x == 100 ==> x != 20;\nloop invariant i187: x == 100 ==> x != 21;\nloop invariant i188: x == 100 ==> x != 22;\nloop invariant i189: x == 100 ==> x != 23;\nloop invariant i190: x == 100 ==> x != 24;\nloop invariant i191: x == 100 ==> x != 25;\nloop invariant i192: x == 100 ==> x != 26;\nloop invariant i193: x == 100 ==> x != 27;\nloop invariant i194: x == 100 ==> x != 28;\nloop invariant i195: x == 100 ==> x != 29;\nloop invariant i196: x == 100 ==> x != 30;\nloop invariant i197: x == 100 ==> x != 31;\nloop invariant i198: x == 100 ==> x != 32;\nloop invariant i199: x == 100 ==> x != 33;\nloop invariant i200: x == 100 ==> x != 34;\nloop invariant i201: x == 100 ==> x != 35;\nloop invariant i202: x == 100 ==> x != 36;\nloop invariant i203: x == 100 ==> x != 37;\nloop invariant i204: x == 100 ==> x != 38;\nloop invariant i205: x == 100 ==> x != 39;\nloop invariant i206: x == 100 ==> x != 40;\nloop invariant i207: x == 100 ==> x != 41;\nloop invariant i208: x == 100 ==> x != 42;\nloop invariant i209: x == 100 ==> x != 43;\nloop invariant i210: x == 100 ==> x != 44;\nloop invariant i211: x == 100 ==> x != 45;\nloop invariant i212: x == 100 ==> x != 46;\nloop invariant i213: x == 100 ==> x != 47;\nloop invariant i214: x == 100 ==> x != 48;\nloop invariant i215: x == 100 ==> x != 49;\nloop invariant i216: x == 100 ==> x != 50;\nloop invariant i217: x == 100 ==> x != 51;\nloop invariant i218: x == 100 ==> x != 52;\nloop invariant i219: x == 100 ==> x != 53;\nloop invariant i220: x == 100 ==> x != 54;\nloop invariant i221: x == 100 ==> x != 55;\nloop invariant i222: x == 100 ==> x != 56;\nloop invariant i223: x == 100 ==> x != 57;\nloop invariant i224: x == 100 ==> x != 58;\nloop invariant i225: 0 <= x <= 100000;\n*/\nwhile (x<100 && x>=0) {\n    x++;\n  }\n  {;\n//@ assert(x>=100);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 57,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  \n  if (!(x>=0)) return 0;\n  /*@\n\nloop invariant i2: x >= 0;\n\n\n\nloop invariant i6: x >= 0 ==> x >= 0;\nloop invariant i7: x < 100 ==> x < 100;\nloop invariant i8: x >= (x - 1);\nloop invariant i9: x <= (x + 1);\nloop invariant i10: x < 100 ==> x >= 0;\n\nloop invariant i12: 0 <= x && x >= 0;\nloop invariant i13: x >= x;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i81: x == (x + 1) ==> x >= 0;\nloop invariant i82: x == (x + 1) ==> x < 100;\nloop invariant i83: x == (x + 1) ==> x >= 0 ==> x < 100;\nloop invariant i84: x == (x + 1) ==> (x >= 0 && x < 100);\n\nloop invariant i86: x >= 100 ==> x >= 100;\nloop invariant i87: x >= 100 ==> x >= 0;\nloop invariant i88: x < 100 ==> x <= 99;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i162: x == 100 ==> x >= 0;\nloop invariant i163: x == 100 ==> x <= 100;\nloop invariant i164: x == 100 ==> x == x;\n\nloop invariant i166: x == 100 ==> x != 0;\nloop invariant i167: x == 100 ==> x != 1;\nloop invariant i168: x == 100 ==> x != 2;\nloop invariant i169: x == 100 ==> x != 3;\nloop invariant i170: x == 100 ==> x != 4;\nloop invariant i171: x == 100 ==> x != 5;\nloop invariant i172: x == 100 ==> x != 6;\nloop invariant i173: x == 100 ==> x != 7;\nloop invariant i174: x == 100 ==> x != 8;\nloop invariant i175: x == 100 ==> x != 9;\nloop invariant i176: x == 100 ==> x != 10;\nloop invariant i177: x == 100 ==> x != 11;\nloop invariant i178: x == 100 ==> x != 12;\nloop invariant i179: x == 100 ==> x != 13;\nloop invariant i180: x == 100 ==> x != 14;\nloop invariant i181: x == 100 ==> x != 15;\nloop invariant i182: x == 100 ==> x != 16;\nloop invariant i183: x == 100 ==> x != 17;\nloop invariant i184: x == 100 ==> x != 18;\nloop invariant i185: x == 100 ==> x != 19;\nloop invariant i186: x == 100 ==> x != 20;\nloop invariant i187: x == 100 ==> x != 21;\nloop invariant i188: x == 100 ==> x != 22;\nloop invariant i189: x == 100 ==> x != 23;\nloop invariant i190: x == 100 ==> x != 24;\nloop invariant i191: x == 100 ==> x != 25;\nloop invariant i192: x == 100 ==> x != 26;\nloop invariant i193: x == 100 ==> x != 27;\nloop invariant i194: x == 100 ==> x != 28;\nloop invariant i195: x == 100 ==> x != 29;\nloop invariant i196: x == 100 ==> x != 30;\nloop invariant i197: x == 100 ==> x != 31;\nloop invariant i198: x == 100 ==> x != 32;\nloop invariant i199: x == 100 ==> x != 33;\nloop invariant i200: x == 100 ==> x != 34;\nloop invariant i201: x == 100 ==> x != 35;\nloop invariant i202: x == 100 ==> x != 36;\nloop invariant i203: x == 100 ==> x != 37;\nloop invariant i204: x == 100 ==> x != 38;\nloop invariant i205: x == 100 ==> x != 39;\nloop invariant i206: x == 100 ==> x != 40;\nloop invariant i207: x == 100 ==> x != 41;\nloop invariant i208: x == 100 ==> x != 42;\nloop invariant i209: x == 100 ==> x != 43;\nloop invariant i210: x == 100 ==> x != 44;\nloop invariant i211: x == 100 ==> x != 45;\nloop invariant i212: x == 100 ==> x != 46;\nloop invariant i213: x == 100 ==> x != 47;\nloop invariant i214: x == 100 ==> x != 48;\nloop invariant i215: x == 100 ==> x != 49;\nloop invariant i216: x == 100 ==> x != 50;\nloop invariant i217: x == 100 ==> x != 51;\nloop invariant i218: x == 100 ==> x != 52;\nloop invariant i219: x == 100 ==> x != 53;\nloop invariant i220: x == 100 ==> x != 54;\nloop invariant i221: x == 100 ==> x != 55;\nloop invariant i222: x == 100 ==> x != 56;\nloop invariant i223: x == 100 ==> x != 57;\nloop invariant i224: x == 100 ==> x != 58;\n\n*/\nwhile (x<100 && x>=0) {\n    x++;\n  }\n  {;\n//@ assert(x>=100);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark16_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark17_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark19_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark20_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark21_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark22_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark23_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark25_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark26_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark27_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark29_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark30_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark31_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark32_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark33_linear.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c"
        ],
        "skipped": [],
        "total": 152,
        "success_count": 135,
        "failure_count": 17,
        "success_rate": 0.8881578947368421
    }
}