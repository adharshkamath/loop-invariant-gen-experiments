{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  while (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= v <= 255;\nloop invariant 0 <= s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= v;\nloop invariant s >= i * v;\nloop invariant v <= (65025 - s) / (n - i);\nloop invariant s <= (n * (n + 1)) / 2 - i * (n - i + 1) / 2;\nloop invariant \\forall unsigned char j; 0 <= j <= n ==> 0 <= \\old(s) + j <= 65025;\nloop invariant \\forall unsigned char j; 0 <= j <= n ==> 0 <= \\old(s) + j * j <= 65025;\n*/\n```",
            "```\n/*@\nloop invariant n <= i <= n;\nloop invariant n <= v <= 255;\nloop invariant i <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant s <= (i * (v + 1));\nloop invariant s >= ((v * (i - 1)) + i);\nloop invariant n == 0 ==> (s == 0);\nloop invariant s < v ==> n == 0;\nloop invariant n <= i ==> (i == n) ==> (s <= v);\nloop invariant n <= i ==> (i == n) ==> (v >= s);\nloop invariant n <= i ==> (i == n) ==> (s >= v);\nloop invariant n <= i ==> (i == n) ==> (s == v);\nloop invariant n <= i ==> (i == n) ==> (s <= 255);\nloop invariant n <= i ==> (i == n) ==> (s >= 0);\nloop invariant n <= i ==> (i == n) ==> (v == s);\nloop invariant n <= i ==> (i == n) ==> (v <= 255);\nloop invariant n <= i ==> (i == n) ==> (v >= 0);\nloop invariant n <= i ==> (i == n) ==> (s <= (v + 1) * i);\nloop invariant n <= i ==> (i == n) ==> (s >= (v - 1) * i);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i);\nloop invariant n <= i ==> (i == n) ==> (s <= (v * i) + i);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i));\nloop invariant n <= i ==> (i == n) ==> (s <= (v * i) + i - 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i + 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i);\nloop invariant n <= i ==> (i == n) ==> (s <= (v * i) + i - 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i + 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i);\nloop invariant n <= i ==> (i == n) ==> (s <= (v * i) + i - 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i + 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i);\nloop invariant n <= i ==> (i == n) ==> (s <= (v * i) + i - 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i + 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i);\nloop invariant n <= i ==> (i == n) ==> (s <= (v * i) + i - 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i + 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i);\nloop invariant n <= i ==> (i == n) ==> (s <= (v * i) + i - 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i + 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i);\nloop invariant n <= i ==> (i == n) ==> (s <= (v * i) + i - 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i + 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i);\nloop invariant n <= i ==> (i == n) ==> (s <= (v * i) + i - 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i + 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i);\nloop invariant n <= i ==> (i == n) ==> (s <= (v * i) + i - 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= v <= 255;\nloop invariant 0 <= s <= (255 * n);\nloop invariant s >= (v * i);\nloop invariant s <= (v * i) + (255 * (n - i));\nloop invariant s <= (255 * n);\nloop invariant s < v ==> i == n;\nloop invariant s > 65025 ==> i >= n;\nloop invariant s < v ==> i == n ==> n == 0;\nloop invariant s > 65025 ==> i >= n ==> n == 0;\nloop invariant s < v ==> i == n ==> n == 0 ==> v == 0;\nloop invariant s > 65025 ==> i >= n ==> n == 0 ==> v == 0;\nloop invariant s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0;\nloop invariant s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0;\nloop invariant s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0;\nloop invariant s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0;\nloop invariant s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0;\nloop invariant s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0;\nloop invariant s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0;\nloop invariant s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0;\nloop invariant s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0;\nloop invariant s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0;\nloop invariant s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0;\nloop invariant s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0;\nloop invariant s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0;\nloop invariant s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= v <= 255;\nloop invariant 0 <= s <= 65025;\nloop invariant s >= i * v;\nloop invariant s <= i * v + (255 * i) / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i < n;\nloop invariant 0 <= v < 255;\nloop invariant 0 <= s;\nloop invariant i + 1 < n ==> i < n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= s <= 65025;\nloop invariant 0 <= i <= n;\nloop invariant s >= i * v;\nloop invariant s <= (i + 1) * v;\nloop invariant s >= v;\nloop invariant s <= 65025;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= s <= 65025;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v <= 65025;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v <= 65025;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v <= 65025;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v <= 65025;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v <= 65025;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v <= 65025;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v <= 65025;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v <= 65025;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v <= 65025;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v <= 65025;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\n*/\n```",
            "```\n/*@\nloop invariant n >= 1;\nloop invariant 0 <= s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v < 256;\nloop invariant v >= 0;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= v <= 255;\nloop invariant 0 <= s <= 65025;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\n*/\n```",
            "```\n/*@\nloop invariant s + v <= s + (n - i) * v + (n - i) * (n - i - 1) / 2;\nloop invariant v >= 0;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= 65025;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s >= 0;\nloop invariant s + v >= 0;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i) * v;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i) * v + v;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i + 1) * v;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= 65025;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s >= 0;\nloop invariant s + v >= 0;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i) * v;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i) * v + v;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i + 1) * v;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= 65025;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s >= 0;\nloop invariant s + v >= 0;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i) * v;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i) * v + v;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i + 1) * v;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= 65025;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s >= 0;\nloop invariant s + v >= 0;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i) * v;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= n <= 255;\nloop invariant 0 <= v <= 255;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= s <= 65535;\nloop invariant n <= s ==> s <= 65025;\nloop invariant i == n ==> s <= 65025;\nloop invariant i == n ==> v >= n;\nloop invariant i <= n && v == 0 ==> s == 0;\nloop invariant i <= n && v >= 1 ==> s >= n;\nloop invariant i <= n && v >= 1 ==> s >= v;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= v <= 255;\nloop invariant 0 <= s <= 65535;\nloop invariant s <= v + s;\nloop invariant s >= v + s - v;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65535;\nloop invariant v <= s;\nloop invariant s <= 65025;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant s >= 0;\nloop invariant 0 <= v <= 255;\nloop invariant s + v == s;\nloop invariant i + 1 == i;\nloop invariant i == n ==> s >= v;\nloop invariant s <= 65025;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= s <= n * 255;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= v <= 255;\nloop invariant s <= 65025;\nloop invariant s >= 0;\nloop invariant i <= n;\nloop invariant s >= 0;\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s + v <= 65025;\nloop invariant s + v >= 0;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= v <= 255;\nloop invariant 0 <= s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant s == (i * v);\nloop invariant s <= (i * 255);\nloop invariant s >= (i * v);\nloop invariant i >= 0;\nloop invariant v >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 0 <= v <= 255;\nloop invariant i2: 0 <= s <= 65025;\nloop invariant i3: i <= n;\n\nloop invariant i5: s <= (i * 255);\n\nloop invariant i7: i >= 0;\nloop invariant i8: v >= 0;\nloop invariant i9: v <= 255;\nloop invariant i10: s >= 0;\nloop invariant i11: s <= 65025;\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= v;\nloop invariant s >= i * v;\nloop invariant v <= (65025 - s) / (n - i);\nloop invariant s <= (n * (n + 1)) / 2 - i * (n - i + 1) / 2;\nloop invariant \\forall unsigned char j; 0 <= j <= n ==> 0 <= \\old(s) + j <= 65025;\nloop invariant \\forall unsigned char j; 0 <= j <= n ==> 0 <= \\old(s) + j * j <= 65025;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: 0 <= v;\n\n\n\n\n\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant n <= i <= n;\nloop invariant n <= v <= 255;\nloop invariant i <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant s <= (i * (v + 1));\nloop invariant s >= ((v * (i - 1)) + i);\nloop invariant n == 0 ==> (s == 0);\nloop invariant s < v ==> n == 0;\nloop invariant n <= i ==> (i == n) ==> (s <= v);\nloop invariant n <= i ==> (i == n) ==> (v >= s);\nloop invariant n <= i ==> (i == n) ==> (s >= v);\nloop invariant n <= i ==> (i == n) ==> (s == v);\nloop invariant n <= i ==> (i == n) ==> (s <= 255);\nloop invariant n <= i ==> (i == n) ==> (s >= 0);\nloop invariant n <= i ==> (i == n) ==> (v == s);\nloop invariant n <= i ==> (i == n) ==> (v <= 255);\nloop invariant n <= i ==> (i == n) ==> (v >= 0);\nloop invariant n <= i ==> (i == n) ==> (s <= (v + 1) * i);\nloop invariant n <= i ==> (i == n) ==> (s >= (v - 1) * i);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i);\nloop invariant n <= i ==> (i == n) ==> (s <= (v * i) + i);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i));\nloop invariant n <= i ==> (i == n) ==> (s <= (v * i) + i - 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i + 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i);\nloop invariant n <= i ==> (i == n) ==> (s <= (v * i) + i - 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i + 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i);\nloop invariant n <= i ==> (i == n) ==> (s <= (v * i) + i - 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i + 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i);\nloop invariant n <= i ==> (i == n) ==> (s <= (v * i) + i - 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i + 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i);\nloop invariant n <= i ==> (i == n) ==> (s <= (v * i) + i - 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i + 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i);\nloop invariant n <= i ==> (i == n) ==> (s <= (v * i) + i - 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i + 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i);\nloop invariant n <= i ==> (i == n) ==> (s <= (v * i) + i - 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i + 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i);\nloop invariant n <= i ==> (i == n) ==> (s <= (v * i) + i - 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i + 1);\nloop invariant n <= i ==> (i == n) ==> (s >= (v * i) - i);\nloop invariant n <= i ==> (i == n) ==> (s <= (v * i) + i - 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\n\n\nloop invariant i3: i <= 255;\nloop invariant i4: s >= 0;\n\n\n\nloop invariant i8: n == 0 ==> (s == 0);\n\n\n\n\n\n\nloop invariant i15: n <= i ==> (i == n) ==> (s >= 0);\n\nloop invariant i17: n <= i ==> (i == n) ==> (v <= 255);\nloop invariant i18: n <= i ==> (i == n) ==> (v >= 0);\n\n\n\n\n\n\n\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= v <= 255;\nloop invariant 0 <= s <= (255 * n);\nloop invariant s >= (v * i);\nloop invariant s <= (v * i) + (255 * (n - i));\nloop invariant s <= (255 * n);\nloop invariant s < v ==> i == n;\nloop invariant s > 65025 ==> i >= n;\nloop invariant s < v ==> i == n ==> n == 0;\nloop invariant s > 65025 ==> i >= n ==> n == 0;\nloop invariant s < v ==> i == n ==> n == 0 ==> v == 0;\nloop invariant s > 65025 ==> i >= n ==> n == 0 ==> v == 0;\nloop invariant s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0;\nloop invariant s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0;\nloop invariant s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0;\nloop invariant s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0;\nloop invariant s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0;\nloop invariant s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0;\nloop invariant s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0;\nloop invariant s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0;\nloop invariant s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0;\nloop invariant s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0;\nloop invariant s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0;\nloop invariant s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0;\nloop invariant s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0;\nloop invariant s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: 0 <= v <= 255;\n\n\n\n\n\n\n\n\nloop invariant i11: s < v ==> i == n ==> n == 0 ==> v == 0;\nloop invariant i12: s > 65025 ==> i >= n ==> n == 0 ==> v == 0;\nloop invariant i13: s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0;\nloop invariant i14: s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0;\nloop invariant i15: s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0;\nloop invariant i16: s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0;\nloop invariant i17: s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0;\nloop invariant i18: s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0;\nloop invariant i19: s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0;\nloop invariant i20: s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0;\nloop invariant i21: s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0;\nloop invariant i22: s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0;\nloop invariant i23: s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0;\nloop invariant i24: s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0;\nloop invariant i25: s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0;\nloop invariant i26: s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0;\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= v <= 255;\nloop invariant 0 <= s <= 65025;\nloop invariant s >= i * v;\nloop invariant s <= i * v + (255 * i) / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: 0 <= v <= 255;\n\n\n\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i < n;\nloop invariant 0 <= v < 255;\nloop invariant 0 <= s;\nloop invariant i + 1 < n ==> i < n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\n\n\nloop invariant i3: 0 <= s;\nloop invariant i4: i + 1 < n ==> i < n;\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= s <= 65025;\nloop invariant 0 <= i <= n;\nloop invariant s >= i * v;\nloop invariant s <= (i + 1) * v;\nloop invariant s >= v;\nloop invariant s <= 65025;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\n\nloop invariant i2: 0 <= i <= n;\n\n\n\n\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= s <= 65025;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v <= 65025;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v <= 65025;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v <= 65025;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v <= 65025;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v <= 65025;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v <= 65025;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v <= 65025;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v <= 65025;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v <= 65025;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v <= 65025;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\nloop invariant s == (v + s) ==> v >= 0;\nloop invariant s == (v + s) ==> i < n;\nloop invariant s == (v + s) ==> i >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\n\nloop invariant i3: s == (v + s) ==> v >= 0;\n\nloop invariant i5: s == (v + s) ==> i >= 0;\nloop invariant i6: s == (v + s) ==> v <= 65025;\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant n >= 1;\nloop invariant 0 <= s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v < 256;\nloop invariant v >= 0;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: n >= 1;\n\nloop invariant i3: 0 <= v <= 255;\nloop invariant i4: i >= 0;\nloop invariant i5: i <= n;\nloop invariant i6: v < 256;\nloop invariant i7: v >= 0;\nloop invariant i8: n <= 255;\nloop invariant i9: s >= 0;\n\nloop invariant i11: v <= 255;\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= v <= 255;\nloop invariant 0 <= s <= 65025;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 0 <= v <= 255;\n\nloop invariant i3: i <= n;\nloop invariant i4: i >= 0;\nloop invariant i5: v >= 0;\nloop invariant i6: v <= 255;\nloop invariant i7: s >= 0;\n\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant s + v <= s + (n - i) * v + (n - i) * (n - i - 1) / 2;\nloop invariant v >= 0;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= 65025;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s >= 0;\nloop invariant s + v >= 0;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i) * v;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i) * v + v;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i + 1) * v;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= 65025;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s >= 0;\nloop invariant s + v >= 0;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i) * v;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i) * v + v;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i + 1) * v;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= 65025;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s >= 0;\nloop invariant s + v >= 0;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i) * v;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i) * v + v;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i + 1) * v;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= 65025;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s >= 0;\nloop invariant s + v >= 0;\nloop invariant s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i) * v;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\n\nloop invariant i2: v >= 0;\n\nloop invariant i4: i <= n;\nloop invariant i5: i >= 0;\nloop invariant i6: s >= 0;\nloop invariant i7: s + v >= 0;\nloop invariant i8: s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i) * v;\nloop invariant i9: s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i) * v + v;\nloop invariant i10: s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i + 1) * v;\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 1 <= n <= 255;\nloop invariant 0 <= v <= 255;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= s <= 65535;\nloop invariant n <= s ==> s <= 65025;\nloop invariant i == n ==> s <= 65025;\nloop invariant i == n ==> v >= n;\nloop invariant i <= n && v == 0 ==> s == 0;\nloop invariant i <= n && v >= 1 ==> s >= n;\nloop invariant i <= n && v >= 1 ==> s >= v;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 1 <= n <= 255;\nloop invariant i2: 0 <= v <= 255;\nloop invariant i3: 0 <= i <= n;\n\n\n\n\n\n\n\n\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= v <= 255;\nloop invariant 0 <= s <= 65535;\nloop invariant s <= v + s;\nloop invariant s >= v + s - v;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65535;\nloop invariant v <= s;\nloop invariant s <= 65025;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: 0 <= v <= 255;\n\nloop invariant i4: s <= v + s;\nloop invariant i5: s >= v + s - v;\nloop invariant i6: v >= 0;\nloop invariant i7: v <= 255;\nloop invariant i8: s >= 0;\n\n\n\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant s >= 0;\nloop invariant 0 <= v <= 255;\nloop invariant s + v == s;\nloop invariant i + 1 == i;\nloop invariant i == n ==> s >= v;\nloop invariant s <= 65025;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: s >= 0;\nloop invariant i3: 0 <= v <= 255;\n\n\n\n\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= s <= n * 255;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= v <= 255;\nloop invariant s <= 65025;\nloop invariant s >= 0;\nloop invariant i <= n;\nloop invariant s >= 0;\nloop invariant i >= 0;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s + v <= 65025;\nloop invariant s + v >= 0;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v <= s;\nloop invariant s + v >= s;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant s + v >= v;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\n\nloop invariant i2: 0 <= i <= n;\nloop invariant i3: 0 <= v <= 255;\n\nloop invariant i5: s >= 0;\nloop invariant i6: i <= n;\nloop invariant i7: i >= 0;\nloop invariant i8: v >= 0;\nloop invariant i9: v <= 255;\n\nloop invariant i11: s + v >= 0;\nloop invariant i12: s + v >= v;\n\nloop invariant i14: s + v >= s;\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 34: \\old undefined in this context. Ignoring loop annotation",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 0 <= v <= 255;\nloop invariant i2: 0 <= s <= 65025;\nloop invariant i3: i <= n;\nloop invariant i4: s == (i * v);\nloop invariant i5: s <= (i * 255);\nloop invariant i6: s >= (i * v);\nloop invariant i7: i >= 0;\nloop invariant i8: v >= 0;\nloop invariant i9: v <= 255;\nloop invariant i10: s >= 0;\nloop invariant i11: s <= 65025;\nloop invariant i12: 0 <= i <= n;\nloop invariant i13: 0 <= v;\nloop invariant i14: s >= i * v;\nloop invariant i15: v <= (65025 - s) / (n - i);\nloop invariant i16: s <= (n * (n + 1)) / 2 - i * (n - i + 1) / 2;\nloop invariant i17: \\forall unsigned char j; 0 <= j <= n ==> 0 <= \\old(s) + j <= 65025;\nloop invariant i18: \\forall unsigned char j; 0 <= j <= n ==> 0 <= \\old(s) + j * j <= 65025;\nloop invariant i19: n <= i <= n;\nloop invariant i20: n <= v <= 255;\nloop invariant i21: i <= 255;\nloop invariant i22: s <= (i * (v + 1));\nloop invariant i23: s >= ((v * (i - 1)) + i);\nloop invariant i24: n == 0 ==> (s == 0);\nloop invariant i25: s < v ==> n == 0;\nloop invariant i26: n <= i ==> (i == n) ==> (s <= v);\nloop invariant i27: n <= i ==> (i == n) ==> (v >= s);\nloop invariant i28: n <= i ==> (i == n) ==> (s >= v);\nloop invariant i29: n <= i ==> (i == n) ==> (s == v);\nloop invariant i30: n <= i ==> (i == n) ==> (s <= 255);\nloop invariant i31: n <= i ==> (i == n) ==> (s >= 0);\nloop invariant i32: n <= i ==> (i == n) ==> (v == s);\nloop invariant i33: n <= i ==> (i == n) ==> (v <= 255);\nloop invariant i34: n <= i ==> (i == n) ==> (v >= 0);\nloop invariant i35: n <= i ==> (i == n) ==> (s <= (v + 1) * i);\nloop invariant i36: n <= i ==> (i == n) ==> (s >= (v - 1) * i);\nloop invariant i37: n <= i ==> (i == n) ==> (s >= (v * i) - i);\nloop invariant i38: n <= i ==> (i == n) ==> (s <= (v * i) + i);\nloop invariant i39: n <= i ==> (i == n) ==> (s >= (v * i));\nloop invariant i40: n <= i ==> (i == n) ==> (s <= (v * i) + i - 1);\nloop invariant i41: n <= i ==> (i == n) ==> (s >= (v * i) - i + 1);\nloop invariant i42: 0 <= s <= (255 * n);\nloop invariant i43: s >= (v * i);\nloop invariant i44: s <= (v * i) + (255 * (n - i));\nloop invariant i45: s <= (255 * n);\nloop invariant i46: s < v ==> i == n;\nloop invariant i47: s > 65025 ==> i >= n;\nloop invariant i48: s < v ==> i == n ==> n == 0;\nloop invariant i49: s > 65025 ==> i >= n ==> n == 0;\nloop invariant i50: s < v ==> i == n ==> n == 0 ==> v == 0;\nloop invariant i51: s > 65025 ==> i >= n ==> n == 0 ==> v == 0;\nloop invariant i52: s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0;\nloop invariant i53: s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0;\nloop invariant i54: s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0;\nloop invariant i55: s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0;\nloop invariant i56: s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0;\nloop invariant i57: s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0;\nloop invariant i58: s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0;\nloop invariant i59: s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0;\nloop invariant i60: s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0;\nloop invariant i61: s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0;\nloop invariant i62: s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0;\nloop invariant i63: s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0;\nloop invariant i64: s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0;\nloop invariant i65: s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0;\nloop invariant i66: s <= i * v + (255 * i) / 2;\nloop invariant i67: 0 <= i < n;\nloop invariant i68: 0 <= v < 255;\nloop invariant i69: 0 <= s;\nloop invariant i70: i + 1 < n ==> i < n;\nloop invariant i71: s <= (i + 1) * v;\nloop invariant i72: s >= v;\nloop invariant i73: s == (v + s) ==> v >= 0;\nloop invariant i74: s == (v + s) ==> i < n;\nloop invariant i75: s == (v + s) ==> i >= 0;\nloop invariant i76: s == (v + s) ==> v <= 65025;\nloop invariant i77: n >= 1;\nloop invariant i78: v < 256;\nloop invariant i79: n <= 255;\nloop invariant i80: s + v <= s + (n - i) * v + (n - i) * (n - i - 1) / 2;\nloop invariant i81: s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= 65025;\nloop invariant i82: s + v >= 0;\nloop invariant i83: s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i) * v;\nloop invariant i84: s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i) * v + v;\nloop invariant i85: s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i + 1) * v;\nloop invariant i86: 1 <= n <= 255;\nloop invariant i87: 0 <= s <= 65535;\nloop invariant i88: n <= s ==> s <= 65025;\nloop invariant i89: i == n ==> s <= 65025;\nloop invariant i90: i == n ==> v >= n;\nloop invariant i91: i <= n && v == 0 ==> s == 0;\nloop invariant i92: i <= n && v >= 1 ==> s >= n;\nloop invariant i93: i <= n && v >= 1 ==> s >= v;\nloop invariant i94: i <= n && v >= 1 ==> s <= (n * (n + 1)) / 2;\nloop invariant i95: s <= v + s;\nloop invariant i96: s >= v + s - v;\nloop invariant i97: s <= 65535;\nloop invariant i98: v <= s;\nloop invariant i99: s + v == s;\nloop invariant i100: i + 1 == i;\nloop invariant i101: i == n ==> s >= v;\nloop invariant i102: 0 <= s <= n * 255;\nloop invariant i103: s + v <= 65025;\nloop invariant i104: s + v >= v;\nloop invariant i105: s + v <= s;\nloop invariant i106: s + v >= s;\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 14,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 0 <= v <= 255;\nloop invariant i2: 0 <= s <= 65025;\nloop invariant i3: i <= n;\n\nloop invariant i5: s <= (i * 255);\n\nloop invariant i7: i >= 0;\nloop invariant i8: v >= 0;\nloop invariant i9: v <= 255;\nloop invariant i10: s >= 0;\nloop invariant i11: s <= 65025;\nloop invariant i12: 0 <= i <= n;\nloop invariant i13: 0 <= v;\n\n\n\n\n\n\n\nloop invariant i21: i <= 255;\n\n\nloop invariant i24: n == 0 ==> (s == 0);\nloop invariant i25: s < v ==> n == 0;\n\n\nloop invariant i28: n <= i ==> (i == n) ==> (s >= v);\n\n\nloop invariant i31: n <= i ==> (i == n) ==> (s >= 0);\n\nloop invariant i33: n <= i ==> (i == n) ==> (v <= 255);\nloop invariant i34: n <= i ==> (i == n) ==> (v >= 0);\n\n\n\n\n\n\n\nloop invariant i42: 0 <= s <= (255 * n);\n\n\nloop invariant i45: s <= (255 * n);\nloop invariant i46: s < v ==> i == n;\nloop invariant i47: s > 65025 ==> i >= n;\nloop invariant i48: s < v ==> i == n ==> n == 0;\nloop invariant i49: s > 65025 ==> i >= n ==> n == 0;\nloop invariant i50: s < v ==> i == n ==> n == 0 ==> v == 0;\nloop invariant i51: s > 65025 ==> i >= n ==> n == 0 ==> v == 0;\nloop invariant i52: s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0;\nloop invariant i53: s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0;\nloop invariant i54: s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0;\nloop invariant i55: s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0;\nloop invariant i56: s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0;\nloop invariant i57: s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0;\nloop invariant i58: s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0;\nloop invariant i59: s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0;\nloop invariant i60: s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0;\nloop invariant i61: s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0;\nloop invariant i62: s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0;\nloop invariant i63: s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0;\nloop invariant i64: s < v ==> i == n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0;\nloop invariant i65: s > 65025 ==> i >= n ==> n == 0 ==> v == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0 ==> i == 0 ==> v == 0 ==> n == 0 ==> s == 0;\n\n\n\nloop invariant i69: 0 <= s;\nloop invariant i70: i + 1 < n ==> i < n;\n\nloop invariant i72: s >= v;\nloop invariant i73: s == (v + s) ==> v >= 0;\n\nloop invariant i75: s == (v + s) ==> i >= 0;\nloop invariant i76: s == (v + s) ==> v <= 65025;\nloop invariant i77: n >= 1;\nloop invariant i78: v < 256;\nloop invariant i79: n <= 255;\n\n\nloop invariant i82: s + v >= 0;\nloop invariant i83: s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i) * v;\nloop invariant i84: s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i) * v + v;\nloop invariant i85: s + (n - i) * v + (n - i) * (n - i - 1) / 2 <= s + (n - i) * v + (n - i) * (n - i - 1) / 2 + (n - i + 1) * v;\nloop invariant i86: 1 <= n <= 255;\nloop invariant i87: 0 <= s <= 65535;\nloop invariant i88: n <= s ==> s <= 65025;\nloop invariant i89: i == n ==> s <= 65025;\n\n\n\nloop invariant i93: i <= n && v >= 1 ==> s >= v;\n\nloop invariant i95: s <= v + s;\nloop invariant i96: s >= v + s - v;\nloop invariant i97: s <= 65535;\nloop invariant i98: v <= s;\n\n\nloop invariant i101: i == n ==> s >= v;\nloop invariant i102: 0 <= s <= n * 255;\n\nloop invariant i104: s + v >= v;\n\nloop invariant i106: s + v >= s;\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c"
        ],
        "skipped": [],
        "total": 102,
        "success_count": 91,
        "failure_count": 11,
        "success_rate": 0.8921568627450981
    }
}