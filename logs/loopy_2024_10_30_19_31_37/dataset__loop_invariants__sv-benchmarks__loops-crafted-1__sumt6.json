{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt6.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  while( l < n ) {\n\t\n\t  if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3+v2) == l);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= n <= SIZE;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant 0 <= l <= n;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= l;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= i <= l;\nloop invariant 0 <= v4 <= l;\nloop invariant 0 <= v3 <= l;\nloop invariant 0 <= v2 <= l;\nloop invariant l <= n;\nloop invariant i >= j;\nloop invariant j >= k;\nloop invariant v4 >= v3;\nloop invariant v3 >= v2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant (i + j + k + v4 + v3 + v2) == l;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i;\nloop invariant 0 <= j;\nloop invariant 0 <= k;\nloop invariant 0 <= v2;\nloop invariant 0 <= v3;\nloop invariant 0 <= v4;\nloop invariant i + j + k + v4 + v3 + v2 == l;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant i + j + k + v4 + v3 + v2 <= l;\nloop invariant i + j + k + v4 + v3 + v2 + (n - l) >= n;\nloop invariant (i + j + k + v4 + v3 + v2) % 2 == l % 2;\nloop invariant (i + j + k + v4 + v3 + v2) % 3 == l % 3;\nloop invariant (i + j + k + v4 + v3 + v2) % 4 == l % 4;\nloop invariant (i + j + k + v4 + v3 + v2) % 5 == l % 5;\nloop invariant (i + j + k + v4 + v3 + v2) % 6 == l % 6;\nloop invariant l % 2 == 0 ==> i + j + k + v4 + v3 + v2 % 2 == 0;\nloop invariant l % 3 == 0 ==> i + j + k + v4 + v3 + v2 % 3 == 0;\nloop invariant l % 4 == 0 ==> i + j + k + v4 + v3 + v2 % 4 == 0;\nloop invariant l % 5 == 0 ==> i + j + k + v4 + v3 + v2 % 5 == 0;\nloop invariant l % 6 == 0 ==> i + j + k + v4 + v3 + v2 % 6 == 0;\nloop invariant l % 2 == 1 ==> i + j + k + v4 + v3 + v2 % 2 == 1;\nloop invariant l % 3 == 1 ==> i + j + k + v4 + v3 + v2 % 3 == 1;\nloop invariant l % 4 == 1 ==> i + j + k + v4 + v3 + v2 % 4 == 1;\nloop invariant l % 5 == 1 ==> i + j + k + v4 + v3 + v2 % 5 == 1;\nloop invariant l % 6 == 1 ==> i + j + k + v4 + v3 + v2 % 6 == 1;\nloop invariant l % 2 == 0 ==> i + j + k + v4 + v3 + v2 % 2 == l % 2;\nloop invariant l % 3 == 0 ==> i + j + k + v4 + v3 + v2 % 3 == l % 3;\nloop invariant l % 4 == 0 ==> i + j + k + v4 + v3 + v2 % 4 == l % 4;\nloop invariant l % 5 == 0 ==> i + j + k + v4 + v3 + v2 % 5 == l % 5;\nloop invariant l % 6 == 0 ==> i + j + k + v4 + v3 + v2 % 6 == l % 6;\nloop invariant l % 2 == 1 ==> i + j + k + v4 + v3 + v2 % 2 == l % 2;\nloop invariant l % 3 == 1 ==> i + j + k + v4 + v3 + v2 % 3 == l % 3;\nloop invariant l % 4 == 1 ==> i + j + k + v4 + v3 + v2 % 4 == l % 4;\nloop invariant l % 5 == 1 ==> i + j + k + v4 + v3 + v2 % 5 == l % 5;\nloop invariant l % 6 == 1 ==> i + j + k + v4 + v3 + v2 % 6 == l % 6;\nloop invariant l % 2 == 0 ==> i + j + k + v4 + v3 + v2 % 2 == l % 2;\nloop invariant l % 3 == 0 ==> i + j + k + v4 + v3 + v2 % 3 == l % 3;\nloop invariant l % 4 == 0 ==> i + j + k + v4 + v3 + v2 % 4 == l % 4;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant (i + j + k + v4 + v3 + v2) == n;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant (i + j + k + v4 + v3 + v2) == n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i;\nloop invariant 0 <= j;\nloop invariant 0 <= k;\nloop invariant 0 <= v2;\nloop invariant 0 <= v3;\nloop invariant 0 <= v4;\nloop invariant i <= l;\nloop invariant j <= l;\nloop invariant k <= l;\nloop invariant v2 <= l;\nloop invariant v3 <= l;\nloop invariant v4 <= l;\nloop invariant n <= l;\nloop invariant l <= SIZE;\nloop invariant (i + j + k + v4 + v3 + v2) == l;\n*/\n```",
            "```\n/*@\nloop invariant i1 <= l <= n;\nloop invariant l < n ==> i1 <= i <= i1 + l / 3;\nloop invariant l < n ==> j1 <= j <= j1 + l / 2;\nloop invariant l < n ==> k1 <= k <= k1 + l;\nloop invariant l < n ==> v21 <= v2 <= v21 + l / 6;\nloop invariant l < n ==> v31 <= v3 <= v31 + l / 5;\nloop invariant l < n ==> v41 <= v4 <= v41 + l / 4;\nloop invariant l < n ==> l%6 != 0 ==> v2 == v21;\nloop invariant l < n ==> l%5 != 0 ==> v3 == v31;\nloop invariant l < n ==> l%4 != 0 ==> v4 == v41;\nloop invariant l < n ==> l%3 != 0 ==> i == i1;\nloop invariant l < n ==> l%2 != 0 ==> j == j1;\nloop invariant l < n ==> l%6 == 0 ==> v2 == v21 + 1;\nloop invariant l < n ==> l%5 == 0 ==> v3 == v31 + 1;\nloop invariant l < n ==> l%4 == 0 ==> v4 == v41 + 1;\nloop invariant l < n ==> l%3 == 0 ==> i == i1 + l / 3;\nloop invariant l < n ==> l%2 == 0 ==> j == j1 + l / 2;\nloop invariant l < n ==> l%6 != 0 ==> k == k1;\nloop invariant l < n ==> l%5 != 0 ==> k == k1;\nloop invariant l < n ==> l%4 != 0 ==> k == k1;\nloop invariant l < n ==> l%3 != 0 ==> k == k1;\nloop invariant l < n ==> l%2 != 0 ==> k == k1;\nloop invariant l == n ==> (i+j+k+v4+v3+v2) == l;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n/2;\nloop invariant 0 <= v2 <= n/6;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant 0 <= l <= n;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant k <= l;\nloop invariant j <= l;\nloop invariant i <= l;\nloop invariant v4 <= l;\nloop invariant v3 <= l;\nloop invariant v2 <= l;\nloop invariant 0 <= l;\nloop invariant l <= n;\nloop invariant k <= n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant v4 <= n;\nloop invariant v3 <= n;\nloop invariant v2 <= n;\nloop invariant n <= SIZE;\nloop invariant k <= SIZE;\nloop invariant j <= SIZE;\nloop invariant i <= SIZE;\nloop invariant v4 <= SIZE;\nloop invariant v3 <= SIZE;\nloop invariant v2 <= SIZE;\nloop invariant SIZE <= 20000001;\n*/\n```",
            "```\n/*@\nloop invariant v2 = (l / 6);\nloop invariant v3 = (l / 5);\nloop invariant v4 = (l / 4);\nloop invariant i = (l / 3);\nloop invariant j = (l / 2);\nloop invariant k = (l % 2 == 0 ? l / 2 : 0);\nloop invariant l <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= i <= l/3;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l;\nloop invariant (i+j+k+v4+v3+v2) <= l;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l;\nloop invariant 0 <= j <= l;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant (i+j+k+v4+v3+v2) == l ==> (i+j+k+v4+v3+v2) == n;\nloop invariant n <= SIZE;\nloop invariant n <= l;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= n <= SIZE;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant 0 <= l <= n;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\nloop invariant i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i + j + k + v4 + v3 + v2 == l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= n <= SIZE;\nloop invariant i2: 0 <= i <= n;\nloop invariant i3: 0 <= j <= n;\nloop invariant i4: 0 <= k <= n;\nloop invariant i5: 0 <= v2 <= n;\nloop invariant i6: 0 <= v3 <= n;\nloop invariant i7: 0 <= v4 <= n;\nloop invariant i8: 0 <= l <= n;\n\nloop invariant i10: i + j + k + v4 + v3 + v2 == l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3+v2) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= l;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= i <= l;\nloop invariant 0 <= v4 <= l;\nloop invariant 0 <= v3 <= l;\nloop invariant 0 <= v2 <= l;\nloop invariant l <= n;\nloop invariant i >= j;\nloop invariant j >= k;\nloop invariant v4 >= v3;\nloop invariant v3 >= v2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= j <= l;\nloop invariant i2: 0 <= k <= l;\nloop invariant i3: 0 <= i <= l;\nloop invariant i4: 0 <= v4 <= l;\nloop invariant i5: 0 <= v3 <= l;\nloop invariant i6: 0 <= v2 <= l;\nloop invariant i7: l <= n;\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3+v2) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant (i + j + k + v4 + v3 + v2) == l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: (i + j + k + v4 + v3 + v2) == l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3+v2) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i;\nloop invariant 0 <= j;\nloop invariant 0 <= k;\nloop invariant 0 <= v2;\nloop invariant 0 <= v3;\nloop invariant 0 <= v4;\nloop invariant i + j + k + v4 + v3 + v2 == l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i;\nloop invariant i3: 0 <= j;\nloop invariant i4: 0 <= k;\nloop invariant i5: 0 <= v2;\nloop invariant i6: 0 <= v3;\nloop invariant i7: 0 <= v4;\nloop invariant i8: i + j + k + v4 + v3 + v2 == l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3+v2) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant i + j + k + v4 + v3 + v2 <= l;\nloop invariant i + j + k + v4 + v3 + v2 + (n - l) >= n;\nloop invariant (i + j + k + v4 + v3 + v2) % 2 == l % 2;\nloop invariant (i + j + k + v4 + v3 + v2) % 3 == l % 3;\nloop invariant (i + j + k + v4 + v3 + v2) % 4 == l % 4;\nloop invariant (i + j + k + v4 + v3 + v2) % 5 == l % 5;\nloop invariant (i + j + k + v4 + v3 + v2) % 6 == l % 6;\nloop invariant l % 2 == 0 ==> i + j + k + v4 + v3 + v2 % 2 == 0;\nloop invariant l % 3 == 0 ==> i + j + k + v4 + v3 + v2 % 3 == 0;\nloop invariant l % 4 == 0 ==> i + j + k + v4 + v3 + v2 % 4 == 0;\nloop invariant l % 5 == 0 ==> i + j + k + v4 + v3 + v2 % 5 == 0;\nloop invariant l % 6 == 0 ==> i + j + k + v4 + v3 + v2 % 6 == 0;\nloop invariant l % 2 == 1 ==> i + j + k + v4 + v3 + v2 % 2 == 1;\nloop invariant l % 3 == 1 ==> i + j + k + v4 + v3 + v2 % 3 == 1;\nloop invariant l % 4 == 1 ==> i + j + k + v4 + v3 + v2 % 4 == 1;\nloop invariant l % 5 == 1 ==> i + j + k + v4 + v3 + v2 % 5 == 1;\nloop invariant l % 6 == 1 ==> i + j + k + v4 + v3 + v2 % 6 == 1;\nloop invariant l % 2 == 0 ==> i + j + k + v4 + v3 + v2 % 2 == l % 2;\nloop invariant l % 3 == 0 ==> i + j + k + v4 + v3 + v2 % 3 == l % 3;\nloop invariant l % 4 == 0 ==> i + j + k + v4 + v3 + v2 % 4 == l % 4;\nloop invariant l % 5 == 0 ==> i + j + k + v4 + v3 + v2 % 5 == l % 5;\nloop invariant l % 6 == 0 ==> i + j + k + v4 + v3 + v2 % 6 == l % 6;\nloop invariant l % 2 == 1 ==> i + j + k + v4 + v3 + v2 % 2 == l % 2;\nloop invariant l % 3 == 1 ==> i + j + k + v4 + v3 + v2 % 3 == l % 3;\nloop invariant l % 4 == 1 ==> i + j + k + v4 + v3 + v2 % 4 == l % 4;\nloop invariant l % 5 == 1 ==> i + j + k + v4 + v3 + v2 % 5 == l % 5;\nloop invariant l % 6 == 1 ==> i + j + k + v4 + v3 + v2 % 6 == l % 6;\nloop invariant l % 2 == 0 ==> i + j + k + v4 + v3 + v2 % 2 == l % 2;\nloop invariant l % 3 == 0 ==> i + j + k + v4 + v3 + v2 % 3 == l % 3;\nloop invariant l % 4 == 0 ==> i + j + k + v4 + v3 + v2 % 4 == l % 4;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i <= n;\nloop invariant i3: 0 <= k <= n;\nloop invariant i4: 0 <= j <= n;\nloop invariant i5: 0 <= v2 <= n;\nloop invariant i6: 0 <= v3 <= n;\nloop invariant i7: 0 <= v4 <= n;\nloop invariant i8: i + j + k + v4 + v3 + v2 <= l;\nloop invariant i9: i + j + k + v4 + v3 + v2 + (n - l) >= n;\nloop invariant i10: (i + j + k + v4 + v3 + v2) % 2 == l % 2;\nloop invariant i11: (i + j + k + v4 + v3 + v2) % 3 == l % 3;\nloop invariant i12: (i + j + k + v4 + v3 + v2) % 4 == l % 4;\nloop invariant i13: (i + j + k + v4 + v3 + v2) % 5 == l % 5;\nloop invariant i14: (i + j + k + v4 + v3 + v2) % 6 == l % 6;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3+v2) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant (i + j + k + v4 + v3 + v2) == n;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant (i + j + k + v4 + v3 + v2) == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3+v2) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i;\nloop invariant 0 <= j;\nloop invariant 0 <= k;\nloop invariant 0 <= v2;\nloop invariant 0 <= v3;\nloop invariant 0 <= v4;\nloop invariant i <= l;\nloop invariant j <= l;\nloop invariant k <= l;\nloop invariant v2 <= l;\nloop invariant v3 <= l;\nloop invariant v4 <= l;\nloop invariant n <= l;\nloop invariant l <= SIZE;\nloop invariant (i + j + k + v4 + v3 + v2) == l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= i;\nloop invariant i2: 0 <= j;\nloop invariant i3: 0 <= k;\nloop invariant i4: 0 <= v2;\nloop invariant i5: 0 <= v3;\nloop invariant i6: 0 <= v4;\nloop invariant i7: i <= l;\nloop invariant i8: j <= l;\nloop invariant i9: k <= l;\nloop invariant i10: v2 <= l;\nloop invariant i11: v3 <= l;\nloop invariant i12: v4 <= l;\n\n\nloop invariant i15: (i + j + k + v4 + v3 + v2) == l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3+v2) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 23,
                "annotations": "```\n/*@\nloop invariant i1 <= l <= n;\nloop invariant l < n ==> i1 <= i <= i1 + l / 3;\nloop invariant l < n ==> j1 <= j <= j1 + l / 2;\nloop invariant l < n ==> k1 <= k <= k1 + l;\nloop invariant l < n ==> v21 <= v2 <= v21 + l / 6;\nloop invariant l < n ==> v31 <= v3 <= v31 + l / 5;\nloop invariant l < n ==> v41 <= v4 <= v41 + l / 4;\nloop invariant l < n ==> l%6 != 0 ==> v2 == v21;\nloop invariant l < n ==> l%5 != 0 ==> v3 == v31;\nloop invariant l < n ==> l%4 != 0 ==> v4 == v41;\nloop invariant l < n ==> l%3 != 0 ==> i == i1;\nloop invariant l < n ==> l%2 != 0 ==> j == j1;\nloop invariant l < n ==> l%6 == 0 ==> v2 == v21 + 1;\nloop invariant l < n ==> l%5 == 0 ==> v3 == v31 + 1;\nloop invariant l < n ==> l%4 == 0 ==> v4 == v41 + 1;\nloop invariant l < n ==> l%3 == 0 ==> i == i1 + l / 3;\nloop invariant l < n ==> l%2 == 0 ==> j == j1 + l / 2;\nloop invariant l < n ==> l%6 != 0 ==> k == k1;\nloop invariant l < n ==> l%5 != 0 ==> k == k1;\nloop invariant l < n ==> l%4 != 0 ==> k == k1;\nloop invariant l < n ==> l%3 != 0 ==> k == k1;\nloop invariant l < n ==> l%2 != 0 ==> k == k1;\nloop invariant l == n ==> (i+j+k+v4+v3+v2) == l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3+v2) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n/2;\nloop invariant 0 <= v2 <= n/6;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant 0 <= l <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\n\n\n\n\n\n\nloop invariant i7: 0 <= l <= n;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3+v2) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3+v2) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant k <= l;\nloop invariant j <= l;\nloop invariant i <= l;\nloop invariant v4 <= l;\nloop invariant v3 <= l;\nloop invariant v2 <= l;\nloop invariant 0 <= l;\nloop invariant l <= n;\nloop invariant k <= n;\nloop invariant j <= n;\nloop invariant i <= n;\nloop invariant v4 <= n;\nloop invariant v3 <= n;\nloop invariant v2 <= n;\nloop invariant n <= SIZE;\nloop invariant k <= SIZE;\nloop invariant j <= SIZE;\nloop invariant i <= SIZE;\nloop invariant v4 <= SIZE;\nloop invariant v3 <= SIZE;\nloop invariant v2 <= SIZE;\nloop invariant SIZE <= 20000001;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: k <= l;\nloop invariant i2: j <= l;\nloop invariant i3: i <= l;\nloop invariant i4: v4 <= l;\nloop invariant i5: v3 <= l;\nloop invariant i6: v2 <= l;\nloop invariant i7: 0 <= l;\nloop invariant i8: l <= n;\nloop invariant i9: k <= n;\nloop invariant i10: j <= n;\nloop invariant i11: i <= n;\nloop invariant i12: v4 <= n;\nloop invariant i13: v3 <= n;\nloop invariant i14: v2 <= n;\nloop invariant i15: n <= SIZE;\nloop invariant i16: k <= SIZE;\nloop invariant i17: j <= SIZE;\nloop invariant i18: i <= SIZE;\nloop invariant i19: v4 <= SIZE;\nloop invariant i20: v3 <= SIZE;\nloop invariant i21: v2 <= SIZE;\nloop invariant i22: SIZE <= 20000001;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3+v2) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant v2 = (l / 6);\nloop invariant v3 = (l / 5);\nloop invariant v4 = (l / 4);\nloop invariant i = (l / 3);\nloop invariant j = (l / 2);\nloop invariant k = (l % 2 == 0 ? l / 2 : 0);\nloop invariant l <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\n\n\n\n\n\n\nloop invariant i7: l <= n;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3+v2) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= i <= l/3;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l;\nloop invariant (i+j+k+v4+v3+v2) <= l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\n\n\n\nloop invariant i7: 0 <= k <= l;\nloop invariant i8: (i+j+k+v4+v3+v2) <= l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3+v2) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3+v2) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l;\nloop invariant 0 <= j <= l;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant (i+j+k+v4+v3+v2) == l ==> (i+j+k+v4+v3+v2) == n;\nloop invariant n <= SIZE;\nloop invariant n <= l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i <= l;\nloop invariant i3: 0 <= j <= l;\nloop invariant i4: 0 <= k <= l;\n\n\n\n\nloop invariant i9: n <= SIZE;\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3+v2) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 124: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= n <= SIZE;\nloop invariant i2: 0 <= i <= n;\nloop invariant i3: 0 <= j <= n;\nloop invariant i4: 0 <= k <= n;\nloop invariant i5: 0 <= v2 <= n;\nloop invariant i6: 0 <= v3 <= n;\nloop invariant i7: 0 <= v4 <= n;\nloop invariant i8: 0 <= l <= n;\nloop invariant i9: i + j + k + v4 + v3 + v2 + l == n;\nloop invariant i10: i + j + k + v4 + v3 + v2 == l;\nloop invariant i11: 0 <= j <= l;\nloop invariant i12: 0 <= k <= l;\nloop invariant i13: 0 <= i <= l;\nloop invariant i14: 0 <= v4 <= l;\nloop invariant i15: 0 <= v3 <= l;\nloop invariant i16: 0 <= v2 <= l;\nloop invariant i17: l <= n;\nloop invariant i18: i >= j;\nloop invariant i19: j >= k;\nloop invariant i20: v4 >= v3;\nloop invariant i21: v3 >= v2;\nloop invariant i22: (i + j + k + v4 + v3 + v2) == l;\nloop invariant i23: 0 <= i;\nloop invariant i24: 0 <= j;\nloop invariant i25: 0 <= k;\nloop invariant i26: 0 <= v2;\nloop invariant i27: 0 <= v3;\nloop invariant i28: 0 <= v4;\nloop invariant i29: i + j + k + v4 + v3 + v2 <= l;\nloop invariant i30: i + j + k + v4 + v3 + v2 + (n - l) >= n;\nloop invariant i31: (i + j + k + v4 + v3 + v2) % 2 == l % 2;\nloop invariant i32: (i + j + k + v4 + v3 + v2) % 3 == l % 3;\nloop invariant i33: (i + j + k + v4 + v3 + v2) % 4 == l % 4;\nloop invariant i34: (i + j + k + v4 + v3 + v2) % 5 == l % 5;\nloop invariant i35: (i + j + k + v4 + v3 + v2) % 6 == l % 6;\nloop invariant i36: l % 2 == 0 ==> i + j + k + v4 + v3 + v2 % 2 == 0;\nloop invariant i37: l % 3 == 0 ==> i + j + k + v4 + v3 + v2 % 3 == 0;\nloop invariant i38: l % 4 == 0 ==> i + j + k + v4 + v3 + v2 % 4 == 0;\nloop invariant i39: l % 5 == 0 ==> i + j + k + v4 + v3 + v2 % 5 == 0;\nloop invariant i40: l % 6 == 0 ==> i + j + k + v4 + v3 + v2 % 6 == 0;\nloop invariant i41: l % 2 == 1 ==> i + j + k + v4 + v3 + v2 % 2 == 1;\nloop invariant i42: l % 3 == 1 ==> i + j + k + v4 + v3 + v2 % 3 == 1;\nloop invariant i43: l % 4 == 1 ==> i + j + k + v4 + v3 + v2 % 4 == 1;\nloop invariant i44: l % 5 == 1 ==> i + j + k + v4 + v3 + v2 % 5 == 1;\nloop invariant i45: l % 6 == 1 ==> i + j + k + v4 + v3 + v2 % 6 == 1;\nloop invariant i46: l % 2 == 0 ==> i + j + k + v4 + v3 + v2 % 2 == l % 2;\nloop invariant i47: l % 3 == 0 ==> i + j + k + v4 + v3 + v2 % 3 == l % 3;\nloop invariant i48: l % 4 == 0 ==> i + j + k + v4 + v3 + v2 % 4 == l % 4;\nloop invariant i49: l % 5 == 0 ==> i + j + k + v4 + v3 + v2 % 5 == l % 5;\nloop invariant i50: l % 6 == 0 ==> i + j + k + v4 + v3 + v2 % 6 == l % 6;\nloop invariant i51: l % 2 == 1 ==> i + j + k + v4 + v3 + v2 % 2 == l % 2;\nloop invariant i52: l % 3 == 1 ==> i + j + k + v4 + v3 + v2 % 3 == l % 3;\nloop invariant i53: l % 4 == 1 ==> i + j + k + v4 + v3 + v2 % 4 == l % 4;\nloop invariant i54: l % 5 == 1 ==> i + j + k + v4 + v3 + v2 % 5 == l % 5;\nloop invariant i55: l % 6 == 1 ==> i + j + k + v4 + v3 + v2 % 6 == l % 6;\nloop invariant i56: (i + j + k + v4 + v3 + v2) == n;\nloop invariant i57: i <= l;\nloop invariant i58: j <= l;\nloop invariant i59: k <= l;\nloop invariant i60: v2 <= l;\nloop invariant i61: v3 <= l;\nloop invariant i62: v4 <= l;\nloop invariant i63: n <= l;\nloop invariant i64: l <= SIZE;\nloop invariant i65: i1 <= l <= n;\nloop invariant i66: l < n ==> i1 <= i <= i1 + l / 3;\nloop invariant i67: l < n ==> j1 <= j <= j1 + l / 2;\nloop invariant i68: l < n ==> k1 <= k <= k1 + l;\nloop invariant i69: l < n ==> v21 <= v2 <= v21 + l / 6;\nloop invariant i70: l < n ==> v31 <= v3 <= v31 + l / 5;\nloop invariant i71: l < n ==> v41 <= v4 <= v41 + l / 4;\nloop invariant i72: l < n ==> l%6 != 0 ==> v2 == v21;\nloop invariant i73: l < n ==> l%5 != 0 ==> v3 == v31;\nloop invariant i74: l < n ==> l%4 != 0 ==> v4 == v41;\nloop invariant i75: l < n ==> l%3 != 0 ==> i == i1;\nloop invariant i76: l < n ==> l%2 != 0 ==> j == j1;\nloop invariant i77: l < n ==> l%6 == 0 ==> v2 == v21 + 1;\nloop invariant i78: l < n ==> l%5 == 0 ==> v3 == v31 + 1;\nloop invariant i79: l < n ==> l%4 == 0 ==> v4 == v41 + 1;\nloop invariant i80: l < n ==> l%3 == 0 ==> i == i1 + l / 3;\nloop invariant i81: l < n ==> l%2 == 0 ==> j == j1 + l / 2;\nloop invariant i82: l < n ==> l%6 != 0 ==> k == k1;\nloop invariant i83: l < n ==> l%5 != 0 ==> k == k1;\nloop invariant i84: l < n ==> l%4 != 0 ==> k == k1;\nloop invariant i85: l < n ==> l%3 != 0 ==> k == k1;\nloop invariant i86: l < n ==> l%2 != 0 ==> k == k1;\nloop invariant i87: l == n ==> (i+j+k+v4+v3+v2) == l;\nloop invariant i88: 0 <= j <= n/2;\nloop invariant i89: 0 <= k <= n/2;\nloop invariant i90: 0 <= v2 <= n/6;\nloop invariant i91: 0 <= v3 <= n/5;\nloop invariant i92: 0 <= v4 <= n/4;\nloop invariant i93: 0 <= l;\nloop invariant i94: k <= n;\nloop invariant i95: j <= n;\nloop invariant i96: i <= n;\nloop invariant i97: v4 <= n;\nloop invariant i98: v3 <= n;\nloop invariant i99: v2 <= n;\nloop invariant i100: n <= SIZE;\nloop invariant i101: k <= SIZE;\nloop invariant i102: j <= SIZE;\nloop invariant i103: i <= SIZE;\nloop invariant i104: v4 <= SIZE;\nloop invariant i105: v3 <= SIZE;\nloop invariant i106: v2 <= SIZE;\nloop invariant i107: SIZE <= 20000001;\nloop invariant i108: v2 = (l / 6);\nloop invariant i109: v3 = (l / 5);\nloop invariant i110: v4 = (l / 4);\nloop invariant i111: i = (l / 3);\nloop invariant i112: j = (l / 2);\nloop invariant i113: k = (l % 2 == 0 ? l / 2 : 0);\nloop invariant i114: 0 <= v2 <= l/6;\nloop invariant i115: 0 <= v3 <= l/5;\nloop invariant i116: 0 <= v4 <= l/4;\nloop invariant i117: 0 <= i <= l/3;\nloop invariant i118: 0 <= j <= l/2;\nloop invariant i119: (i+j+k+v4+v3+v2) <= l;\nloop invariant i120: (i+j+k+v4+v3+v2) == l ==> (i+j+k+v4+v3+v2) == n;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3+v2) == l);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 41,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= n <= SIZE;\nloop invariant i2: 0 <= i <= n;\nloop invariant i3: 0 <= j <= n;\nloop invariant i4: 0 <= k <= n;\nloop invariant i5: 0 <= v2 <= n;\nloop invariant i6: 0 <= v3 <= n;\nloop invariant i7: 0 <= v4 <= n;\nloop invariant i8: 0 <= l <= n;\n\nloop invariant i10: i + j + k + v4 + v3 + v2 == l;\nloop invariant i11: 0 <= j <= l;\nloop invariant i12: 0 <= k <= l;\nloop invariant i13: 0 <= i <= l;\nloop invariant i14: 0 <= v4 <= l;\nloop invariant i15: 0 <= v3 <= l;\nloop invariant i16: 0 <= v2 <= l;\nloop invariant i17: l <= n;\n\n\n\n\nloop invariant i22: (i + j + k + v4 + v3 + v2) == l;\nloop invariant i23: 0 <= i;\nloop invariant i24: 0 <= j;\nloop invariant i25: 0 <= k;\nloop invariant i26: 0 <= v2;\nloop invariant i27: 0 <= v3;\nloop invariant i28: 0 <= v4;\nloop invariant i29: i + j + k + v4 + v3 + v2 <= l;\nloop invariant i30: i + j + k + v4 + v3 + v2 + (n - l) >= n;\nloop invariant i31: (i + j + k + v4 + v3 + v2) % 2 == l % 2;\nloop invariant i32: (i + j + k + v4 + v3 + v2) % 3 == l % 3;\nloop invariant i33: (i + j + k + v4 + v3 + v2) % 4 == l % 4;\nloop invariant i34: (i + j + k + v4 + v3 + v2) % 5 == l % 5;\nloop invariant i35: (i + j + k + v4 + v3 + v2) % 6 == l % 6;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i57: i <= l;\nloop invariant i58: j <= l;\nloop invariant i59: k <= l;\nloop invariant i60: v2 <= l;\nloop invariant i61: v3 <= l;\nloop invariant i62: v4 <= l;\n\nloop invariant i64: l <= SIZE;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i87: l == n ==> (i+j+k+v4+v3+v2) == l;\n\n\n\n\n\nloop invariant i93: 0 <= l;\nloop invariant i94: k <= n;\nloop invariant i95: j <= n;\nloop invariant i96: i <= n;\nloop invariant i97: v4 <= n;\nloop invariant i98: v3 <= n;\nloop invariant i99: v2 <= n;\nloop invariant i100: n <= SIZE;\nloop invariant i101: k <= SIZE;\nloop invariant i102: j <= SIZE;\nloop invariant i103: i <= SIZE;\nloop invariant i104: v4 <= SIZE;\nloop invariant i105: v3 <= SIZE;\nloop invariant i106: v2 <= SIZE;\nloop invariant i107: SIZE <= 20000001;\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i119: (i+j+k+v4+v3+v2) <= l;\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3+v2) == l);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark16_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark17_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark19_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark20_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark21_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark22_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark23_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark25_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark26_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark27_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark29_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark30_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark31_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark32_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark33_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark34_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark35_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark36_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark37_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark38_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark39_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark40_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark41_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark42_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark43_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark45_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark46_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark47_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark48_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark49_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark50_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark51_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark52_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark53_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/Mono1_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/iftelse.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/loopv1.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/loopv3.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_11.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_8.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sum_natnum.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt2.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt3.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt4.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt5.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt6.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_10.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_12.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_9.c"
        ],
        "skipped": [],
        "total": 186,
        "success_count": 166,
        "failure_count": 20,
        "success_rate": 0.8924731182795699
    }
}