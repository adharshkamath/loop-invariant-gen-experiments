{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark27_linear.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  while (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant i + k <= j + k;\nloop invariant k >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i < j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant k > j;\nloop invariant k < i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= j;\nloop invariant i <= k <= 2*i;\nloop invariant j-i <= k;\nloop invariant k-j <= i;\nloop invariant j-i <= j-i;\nloop invariant k-j <= k-j;\nloop invariant i <= j;\nloop invariant k <= 2*j;\nloop invariant k <= 2*i;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= j;\nloop invariant k >= j-i;\nloop invariant k <= j-i+1;\n*/\n```",
            "```\n/*@\nloop invariant i <= j;\nloop invariant k >= i-j;\nloop invariant k >= 0;\nloop invariant k <= k+1;\nloop invariant k <= i;\nloop invariant k <= j;\nloop invariant k <= i+j;\nloop invariant k <= 2*j;\nloop invariant k <= 2*i;\nloop invariant k <= 3*i;\nloop invariant k <= 3*j;\nloop invariant k <= 4*i;\nloop invariant k <= 4*j;\nloop invariant k <= 5*i;\nloop invariant k <= 5*j;\nloop invariant k <= 6*i;\nloop invariant k <= 6*j;\nloop invariant k <= 7*i;\nloop invariant k <= 7*j;\nloop invariant k <= 8*i;\nloop invariant k <= 8*j;\nloop invariant k <= 9*i;\nloop invariant k <= 9*j;\nloop invariant k <= 10*i;\nloop invariant k <= 10*j;\nloop invariant k <= 11*i;\nloop invariant k <= 11*j;\nloop invariant k <= 12*i;\nloop invariant k <= 12*j;\nloop invariant k <= 13*i;\nloop invariant k <= 13*j;\nloop invariant k <= 14*i;\nloop invariant k <= 14*j;\nloop invariant k <= 15*i;\nloop invariant k <= 15*j;\nloop invariant k <= 16*i;\nloop invariant k <= 16*j;\nloop invariant k <= 17*i;\nloop invariant k <= 17*j;\nloop invariant k <= 18*i;\nloop invariant k <= 18*j;\nloop invariant k <= 19*i;\nloop invariant k <= 19*j;\nloop invariant k <= 20*i;\nloop invariant k <= 20*j;\nloop invariant k <= 21*i;\nloop invariant k <= 21*j;\nloop invariant k <= 22*i;\nloop invariant k <= 22*j;\nloop invariant k <= 23*i;\nloop invariant k <= 23*j;\nloop invariant k <= 24*i;\nloop invariant k <= 24*j;\nloop invariant k <= 25*i;\nloop invariant k <= 25*j;\nloop invariant k <= 26*i;\nloop invariant k <= 26*j;\nloop invariant k <= 27*i;\nloop invariant k <= 27*j;\nloop invariant k <= 28*i;\nloop invariant k <= 28*j;\nloop invariant k <= 29*i;\nloop invariant k <= 29*j;\nloop invariant k <= 30*i;\nloop invariant k <= 30*j;\nloop invariant k <= 31*i;\nloop invariant k <= 31*j;\nloop invariant k <= 32*i;\nloop invariant k <= 32*j;\nloop invariant k <= 33*i;\nloop invariant k <= 33*j;\nloop invariant k <= 34*i;\nloop invariant k <= 34*j;\nloop invariant k <= 35*i;\nloop invariant k <= 35*j;\nloop invariant k <= 36*i;\nloop invariant k <= 36*j;\nloop invariant k <= 37*i;\nloop invariant k <= 37*j;\nloop invariant k <= 38*i;\nloop invariant k <= 38*j;\nloop invariant k <= 39*i;\nloop invariant k <= 39*j;\nloop invariant k <= 40*i;\nloop invariant k <= 40*j;\nloop invariant k <= 41*i;\nloop invariant k <= 41*j;\nloop invariant k <= 42*i;\nloop invariant k <= 42*j;\nloop invariant k <= 43*i;\nloop invariant k <= 43*j;\nloop invariant k <= 44*i;\nloop invariant k <= 44*j;\nloop invariant k <= 45*i;\nloop invariant k <= 45*j;\nloop invariant k <= 46*i;\nloop invariant k <= 46*j;\nloop invariant k <= 47*i;\nloop invariant k <= 47*j;\nloop invariant k <= 48*i;\nloop invariant k <= 48*j;\nloop invariant k <= 49*i;\nloop invariant k <= 49*j;\nloop invariant k <= 50*i;\nloop invariant k <= 50*j;\nloop invariant k <= 51*i;\nloop invariant k <= 51*j;\nloop invariant k <= 52*i;\nloop invariant k <= 52*j;\nloop invariant k <= 53*i;\nloop invariant k <= 53*j;\nloop invariant k <= 54*i;\nloop invariant k <= 54*j;\nloop invariant k <= 55*i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j; loop invariant i <= k; loop invariant j <= k + i; loop invariant k <= i + j; loop invariant k > 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant k >= i;\nloop invariant k <= i + j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant i <= k <= i + j;\nloop invariant k > 0 ==> k > 0;\nloop invariant i == j ==> i == j;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant 0 <= k <= i;\nloop invariant k >= i - j;\nloop invariant k <= i;\nloop invariant i < j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant i <= k;\nloop invariant k >= i;\nloop invariant k <= j;\n*/\n```",
            "```\n/*@\nloop invariant i > j ==> k >= 0;\nloop invariant i > j ==> k <= 1 + j - i;\nloop invariant i > j ==> k == i - j + 1;\nloop invariant i > j ==> i >= j;\nloop invariant i > j ==> i < j + k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> i < j + k;\nloop invariant i > j ==> i < j + k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant i <= k <= i + j;\nloop invariant (i == j ==> k > 0);\nloop invariant (i < j ==> k <= i + j);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j;\nloop invariant 0 <= i;\nloop invariant i <= j;\nloop invariant k >= 0;\nloop invariant k >= i-j;\nloop invariant k <= i-j;\nloop invariant k >= i;\nloop invariant k <= i;\nloop invariant k >= j;\nloop invariant k <= j;\nloop invariant k >= i + j;\nloop invariant k <= i+j;\nloop invariant k >= i - j;\nloop invariant k <= i - j;\nloop invariant k >= j - i;\nloop invariant k <= j - i;\nloop invariant k >= 0 ==> k > 0;\nloop invariant k >= i - j ==> k > 0;\nloop invariant k <= i - j ==> k > 0;\nloop invariant k >= j - i ==> k > 0;\nloop invariant k <= j - i ==> k > 0;\nloop invariant k >= i ==> k > 0;\nloop invariant k <= i ==> k > 0;\nloop invariant k >= j ==> k > 0;\nloop invariant k <= j ==> k > 0;\nloop invariant k >= i + j ==> k > 0;\nloop invariant k <= i + j ==> k > 0;\nloop invariant k >= i - j ==> k > 0;\nloop invariant k <= i - j ==> k > 0;\nloop invariant k >= j - i ==> k > 0;\nloop invariant k <= j - i ==> k > 0;\nloop invariant k >= 0 ==> k > 0 && k >= 0;\nloop invariant k >= i - j ==> k > 0 && k >= 0;\nloop invariant k <= i - j ==> k > 0 && k >= 0;\nloop invariant k >= j - i ==> k > 0 && k >= 0;\nloop invariant k <= j - i ==> k > 0 && k >= 0;\nloop invariant k >= i ==> k > 0 && k >= 0;\nloop invariant k <= i ==> k > 0 && k >= 0;\nloop invariant k >= j ==> k > 0 && k >= 0;\nloop invariant k <= j ==> k > 0 && k >= 0;\nloop invariant k >= i + j ==> k > 0 && k >= 0;\nloop invariant k <= i + j ==> k > 0 && k >= 0;\nloop invariant k >= i - j ==> k > 0 && k >= 0;\nloop invariant k <= i - j ==> k > 0 && k >= 0;\nloop invariant k >= j - i ==> k > 0 && k >= 0;\nloop invariant k <= j - i ==> k > 0 && k >= 0;\nloop invariant k >= 0 ==> k > 0 ==> k > 0;\nloop invariant k >= i - j ==> k > 0 ==> k > 0;\nloop invariant k <= i - j ==> k > 0 ==> k > 0;\nloop invariant k >= j - i ==> k > 0 ==> k > 0;\nloop invariant k <= j - i ==> k > 0 ==> k > 0;\nloop invariant k >= i ==> k > 0 ==> k > 0;\nloop invariant k <= i ==> k > 0 ==> k > 0;\nloop invariant k >= j ==> k > 0 ==> k > 0;\nloop invariant k <= j ==> k > 0 ==> k > 0;\nloop invariant k >= i + j ==> k > 0 ==> k > 0;\nloop invariant k <= i + j ==> k > 0 ==> k > 0;\nloop invariant k >= i - j ==> k > 0 ==> k > 0;\nloop invariant k <= i - j ==> k > 0 ==> k > 0;\nloop invariant k >= j - i ==> k > 0 ==> k > 0;\nloop invariant k <= j - i ==> k > 0 ==> k > 0;\nloop invariant k >= 0 ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant k >= i - j ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant k <= i - j ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant k >= j - i ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant k <= j - i ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant k >= i ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant k <= i ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant k >= j ==> k > 0 ==> k > 0 && k >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant k >= i;\nloop invariant k >= j;\nloop invariant k >= i-j;\nloop invariant k <= i+j;\nloop invariant k <= i+j+1;\nloop invariant k <= i+j+2;\nloop invariant k <= i+j+3;\nloop invariant k <= i+j+4;\nloop invariant k <= i+j+5;\nloop invariant k <= i+j+6;\nloop invariant k <= i+j+7;\nloop invariant k <= i+j+8;\nloop invariant k <= i+j+9;\nloop invariant k <= i+j+10;\nloop invariant k <= i+j+11;\nloop invariant k <= i+j+12;\nloop invariant k <= i+j+13;\nloop invariant k <= i+j+14;\nloop invariant k <= i+j+15;\nloop invariant k <= i+j+16;\nloop invariant k <= i+j+17;\nloop invariant k <= i+j+18;\nloop invariant k <= i+j+19;\nloop invariant k <= i+j+20;\nloop invariant k <= i+j+21;\nloop invariant k <= i+j+22;\nloop invariant k <= i+j+23;\nloop invariant k <= i+j+24;\nloop invariant k <= i+j+25;\nloop invariant k <= i+j+26;\nloop invariant k <= i+j+27;\nloop invariant k <= i+j+28;\nloop invariant k <= i+j+29;\nloop invariant k <= i+j+30;\nloop invariant k <= i+j+31;\nloop invariant k <= i+j+32;\nloop invariant k <= i+j+33;\nloop invariant k <= i+j+34;\nloop invariant k <= i+j+35;\nloop invariant k <= i+j+36;\nloop invariant k <= i+j+37;\nloop invariant k <= i+j+38;\nloop invariant k <= i+j+39;\nloop invariant k <= i+j+40;\nloop invariant k <= i+j+41;\nloop invariant k <= i+j+42;\nloop invariant k <= i+j+43;\nloop invariant k <= i+j+44;\nloop invariant k <= i+j+45;\nloop invariant k <= i+j+46;\nloop invariant k <= i+j+47;\nloop invariant k <= i+j+48;\nloop invariant k <= i+j+49;\nloop invariant k <= i+j+50;\nloop invariant k <= i+j+51;\nloop invariant k <= i+j+52;\nloop invariant k <= i+j+53;\nloop invariant k <= i+j+54;\nloop invariant k <= i+j+55;\nloop invariant k <= i+j+56;\nloop invariant k <= i+j+57;\nloop invariant k <= i+j+58;\nloop invariant k <= i+j+59;\nloop invariant k <= i+j+60;\nloop invariant k <= i+j+61;\nloop invariant k <= i+j+62;\nloop invariant k <= i+j+63;\nloop invariant k <= i+j+64;\nloop invariant k <= i+j+65;\nloop invariant k <= i+j+66;\nloop invariant k <= i+j+67;\nloop invariant k <= i+j+68;\nloop invariant k <= i+j+69;\nloop invariant k <= i+j+70;\nloop invariant k <= i+j+71;\nloop invariant k <= i+j+72;\nloop invariant k <= i+j+73;\nloop invariant k <= i+j+74;\nloop invariant k <= i+j+75;\nloop invariant k <= i+j+76;\nloop invariant k <= i+j+77;\nloop invariant k <= i+j+78;\nloop invariant k <= i+j+79;\nloop invariant k <= i+j+80;\nloop invariant k <= i+j+81;\nloop invariant k <= i+j+82;\nloop invariant k <= i+j+83;\nloop invariant k <= i+j+84;\nloop invariant k <= i+j+85;\nloop invariant k <= i+j+86;\nloop invariant k <= i+j+87;\nloop invariant k <= i+j+88;\nloop invariant k <= i+j+89;\nloop invariant k <= i+j+90;\nloop invariant k <= i+j+91;\nloop invariant k <= i+j+92;\nloop invariant k <= i+j+93;\nloop invariant k <= i+j+94;\nloop invariant k <= i+j+95;\nloop invariant k <= i+j+96;\nloop invariant k <= i+j+97;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant i + k <= j + k;\nloop invariant k >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\nloop invariant i2: i + k <= j + k;\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i < j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant k > j;\nloop invariant k < i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\nloop invariant j < k;\nloop invariant k == i + j;\nloop invariant k > 0;\nloop invariant k == i + j;\nloop invariant i == k - j;\nloop invariant i < k;\nloop invariant j == i + 1;\nloop invariant j > i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= j;\nloop invariant i <= k <= 2*i;\nloop invariant j-i <= k;\nloop invariant k-j <= i;\nloop invariant j-i <= j-i;\nloop invariant k-j <= k-j;\nloop invariant i <= j;\nloop invariant k <= 2*j;\nloop invariant k <= 2*i;\nloop invariant i <= k;\nloop invariant j <= k;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\nloop invariant i <= 2*j;\nloop invariant j <= 2*i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n\n\n\nloop invariant i5: j-i <= j-i;\nloop invariant i6: k-j <= k-j;\nloop invariant i7: i <= j;\n\n\n\n\n\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= j;\nloop invariant k >= j-i;\nloop invariant k <= j-i+1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant i <= j;\nloop invariant k >= i-j;\nloop invariant k >= 0;\nloop invariant k <= k+1;\nloop invariant k <= i;\nloop invariant k <= j;\nloop invariant k <= i+j;\nloop invariant k <= 2*j;\nloop invariant k <= 2*i;\nloop invariant k <= 3*i;\nloop invariant k <= 3*j;\nloop invariant k <= 4*i;\nloop invariant k <= 4*j;\nloop invariant k <= 5*i;\nloop invariant k <= 5*j;\nloop invariant k <= 6*i;\nloop invariant k <= 6*j;\nloop invariant k <= 7*i;\nloop invariant k <= 7*j;\nloop invariant k <= 8*i;\nloop invariant k <= 8*j;\nloop invariant k <= 9*i;\nloop invariant k <= 9*j;\nloop invariant k <= 10*i;\nloop invariant k <= 10*j;\nloop invariant k <= 11*i;\nloop invariant k <= 11*j;\nloop invariant k <= 12*i;\nloop invariant k <= 12*j;\nloop invariant k <= 13*i;\nloop invariant k <= 13*j;\nloop invariant k <= 14*i;\nloop invariant k <= 14*j;\nloop invariant k <= 15*i;\nloop invariant k <= 15*j;\nloop invariant k <= 16*i;\nloop invariant k <= 16*j;\nloop invariant k <= 17*i;\nloop invariant k <= 17*j;\nloop invariant k <= 18*i;\nloop invariant k <= 18*j;\nloop invariant k <= 19*i;\nloop invariant k <= 19*j;\nloop invariant k <= 20*i;\nloop invariant k <= 20*j;\nloop invariant k <= 21*i;\nloop invariant k <= 21*j;\nloop invariant k <= 22*i;\nloop invariant k <= 22*j;\nloop invariant k <= 23*i;\nloop invariant k <= 23*j;\nloop invariant k <= 24*i;\nloop invariant k <= 24*j;\nloop invariant k <= 25*i;\nloop invariant k <= 25*j;\nloop invariant k <= 26*i;\nloop invariant k <= 26*j;\nloop invariant k <= 27*i;\nloop invariant k <= 27*j;\nloop invariant k <= 28*i;\nloop invariant k <= 28*j;\nloop invariant k <= 29*i;\nloop invariant k <= 29*j;\nloop invariant k <= 30*i;\nloop invariant k <= 30*j;\nloop invariant k <= 31*i;\nloop invariant k <= 31*j;\nloop invariant k <= 32*i;\nloop invariant k <= 32*j;\nloop invariant k <= 33*i;\nloop invariant k <= 33*j;\nloop invariant k <= 34*i;\nloop invariant k <= 34*j;\nloop invariant k <= 35*i;\nloop invariant k <= 35*j;\nloop invariant k <= 36*i;\nloop invariant k <= 36*j;\nloop invariant k <= 37*i;\nloop invariant k <= 37*j;\nloop invariant k <= 38*i;\nloop invariant k <= 38*j;\nloop invariant k <= 39*i;\nloop invariant k <= 39*j;\nloop invariant k <= 40*i;\nloop invariant k <= 40*j;\nloop invariant k <= 41*i;\nloop invariant k <= 41*j;\nloop invariant k <= 42*i;\nloop invariant k <= 42*j;\nloop invariant k <= 43*i;\nloop invariant k <= 43*j;\nloop invariant k <= 44*i;\nloop invariant k <= 44*j;\nloop invariant k <= 45*i;\nloop invariant k <= 45*j;\nloop invariant k <= 46*i;\nloop invariant k <= 46*j;\nloop invariant k <= 47*i;\nloop invariant k <= 47*j;\nloop invariant k <= 48*i;\nloop invariant k <= 48*j;\nloop invariant k <= 49*i;\nloop invariant k <= 49*j;\nloop invariant k <= 50*i;\nloop invariant k <= 50*j;\nloop invariant k <= 51*i;\nloop invariant k <= 51*j;\nloop invariant k <= 52*i;\nloop invariant k <= 52*j;\nloop invariant k <= 53*i;\nloop invariant k <= 53*j;\nloop invariant k <= 54*i;\nloop invariant k <= 54*j;\nloop invariant k <= 55*i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\nloop invariant i1: i <= j;\nloop invariant i2: k >= i-j;\n\nloop invariant i4: k <= k+1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j; loop invariant i <= k; loop invariant j <= k + i; loop invariant k <= i + j; loop invariant k > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant k >= i;\nloop invariant k <= i + j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant i <= k <= i + j;\nloop invariant k > 0 ==> k > 0;\nloop invariant i == j ==> i == j;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant k > 0 ==> k > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n\nloop invariant i3: k > 0 ==> k > 0;\nloop invariant i4: i == j ==> i == j;\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant 0 <= k <= i;\nloop invariant k >= i - j;\nloop invariant k <= i;\nloop invariant i < j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n\nloop invariant i3: k >= i - j;\n\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant i <= k;\nloop invariant k >= i;\nloop invariant k <= j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n\n\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant i > j ==> k >= 0;\nloop invariant i > j ==> k <= 1 + j - i;\nloop invariant i > j ==> k == i - j + 1;\nloop invariant i > j ==> i >= j;\nloop invariant i > j ==> i < j + k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> i < j + k;\nloop invariant i > j ==> i < j + k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\nloop invariant i > j ==> j < i - k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\nloop invariant i1: i > j ==> k >= 0;\nloop invariant i2: i > j ==> k <= 1 + j - i;\nloop invariant i3: i > j ==> k == i - j + 1;\nloop invariant i4: i > j ==> i >= j;\nloop invariant i5: i > j ==> i < j + k;\nloop invariant i6: i > j ==> j < i - k;\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant i <= k <= i + j;\nloop invariant (i == j ==> k > 0);\nloop invariant (i < j ==> k <= i + j);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n\n\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 14,
                "annotations": "```\n/*@\nloop invariant 0 <= j;\nloop invariant 0 <= i;\nloop invariant i <= j;\nloop invariant k >= 0;\nloop invariant k >= i-j;\nloop invariant k <= i-j;\nloop invariant k >= i;\nloop invariant k <= i;\nloop invariant k >= j;\nloop invariant k <= j;\nloop invariant k >= i + j;\nloop invariant k <= i+j;\nloop invariant k >= i - j;\nloop invariant k <= i - j;\nloop invariant k >= j - i;\nloop invariant k <= j - i;\nloop invariant k >= 0 ==> k > 0;\nloop invariant k >= i - j ==> k > 0;\nloop invariant k <= i - j ==> k > 0;\nloop invariant k >= j - i ==> k > 0;\nloop invariant k <= j - i ==> k > 0;\nloop invariant k >= i ==> k > 0;\nloop invariant k <= i ==> k > 0;\nloop invariant k >= j ==> k > 0;\nloop invariant k <= j ==> k > 0;\nloop invariant k >= i + j ==> k > 0;\nloop invariant k <= i + j ==> k > 0;\nloop invariant k >= i - j ==> k > 0;\nloop invariant k <= i - j ==> k > 0;\nloop invariant k >= j - i ==> k > 0;\nloop invariant k <= j - i ==> k > 0;\nloop invariant k >= 0 ==> k > 0 && k >= 0;\nloop invariant k >= i - j ==> k > 0 && k >= 0;\nloop invariant k <= i - j ==> k > 0 && k >= 0;\nloop invariant k >= j - i ==> k > 0 && k >= 0;\nloop invariant k <= j - i ==> k > 0 && k >= 0;\nloop invariant k >= i ==> k > 0 && k >= 0;\nloop invariant k <= i ==> k > 0 && k >= 0;\nloop invariant k >= j ==> k > 0 && k >= 0;\nloop invariant k <= j ==> k > 0 && k >= 0;\nloop invariant k >= i + j ==> k > 0 && k >= 0;\nloop invariant k <= i + j ==> k > 0 && k >= 0;\nloop invariant k >= i - j ==> k > 0 && k >= 0;\nloop invariant k <= i - j ==> k > 0 && k >= 0;\nloop invariant k >= j - i ==> k > 0 && k >= 0;\nloop invariant k <= j - i ==> k > 0 && k >= 0;\nloop invariant k >= 0 ==> k > 0 ==> k > 0;\nloop invariant k >= i - j ==> k > 0 ==> k > 0;\nloop invariant k <= i - j ==> k > 0 ==> k > 0;\nloop invariant k >= j - i ==> k > 0 ==> k > 0;\nloop invariant k <= j - i ==> k > 0 ==> k > 0;\nloop invariant k >= i ==> k > 0 ==> k > 0;\nloop invariant k <= i ==> k > 0 ==> k > 0;\nloop invariant k >= j ==> k > 0 ==> k > 0;\nloop invariant k <= j ==> k > 0 ==> k > 0;\nloop invariant k >= i + j ==> k > 0 ==> k > 0;\nloop invariant k <= i + j ==> k > 0 ==> k > 0;\nloop invariant k >= i - j ==> k > 0 ==> k > 0;\nloop invariant k <= i - j ==> k > 0 ==> k > 0;\nloop invariant k >= j - i ==> k > 0 ==> k > 0;\nloop invariant k <= j - i ==> k > 0 ==> k > 0;\nloop invariant k >= 0 ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant k >= i - j ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant k <= i - j ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant k >= j - i ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant k <= j - i ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant k >= i ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant k <= i ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant k >= j ==> k > 0 ==> k > 0 && k >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n\nloop invariant i3: i <= j;\n\nloop invariant i5: k >= i-j;\n\n\n\n\n\n\n\nloop invariant i13: k >= i - j;\n\n\n\n\n\nloop invariant i19: k <= i - j ==> k > 0;\nloop invariant i20: k >= j - i ==> k > 0;\n\n\n\n\n\n\n\n\n\nloop invariant i30: k <= i - j ==> k > 0 && k >= 0;\nloop invariant i31: k >= j - i ==> k > 0 && k >= 0;\n\n\n\n\n\n\n\nloop invariant i39: k >= 0 ==> k > 0 ==> k > 0;\nloop invariant i40: k >= i - j ==> k > 0 ==> k > 0;\nloop invariant i41: k <= i - j ==> k > 0 ==> k > 0;\nloop invariant i42: k >= j - i ==> k > 0 ==> k > 0;\nloop invariant i43: k <= j - i ==> k > 0 ==> k > 0;\nloop invariant i44: k >= i ==> k > 0 ==> k > 0;\nloop invariant i45: k <= i ==> k > 0 ==> k > 0;\nloop invariant i46: k >= j ==> k > 0 ==> k > 0;\nloop invariant i47: k <= j ==> k > 0 ==> k > 0;\nloop invariant i48: k >= i + j ==> k > 0 ==> k > 0;\nloop invariant i49: k <= i + j ==> k > 0 ==> k > 0;\nloop invariant i50: k >= 0 ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i51: k >= i - j ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i52: k <= i - j ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i53: k >= j - i ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i54: k <= j - i ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i55: k >= i ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i56: k <= i ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i57: k >= j ==> k > 0 ==> k > 0 && k >= 0;\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 99,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant k >= i;\nloop invariant k >= j;\nloop invariant k >= i-j;\nloop invariant k <= i+j;\nloop invariant k <= i+j+1;\nloop invariant k <= i+j+2;\nloop invariant k <= i+j+3;\nloop invariant k <= i+j+4;\nloop invariant k <= i+j+5;\nloop invariant k <= i+j+6;\nloop invariant k <= i+j+7;\nloop invariant k <= i+j+8;\nloop invariant k <= i+j+9;\nloop invariant k <= i+j+10;\nloop invariant k <= i+j+11;\nloop invariant k <= i+j+12;\nloop invariant k <= i+j+13;\nloop invariant k <= i+j+14;\nloop invariant k <= i+j+15;\nloop invariant k <= i+j+16;\nloop invariant k <= i+j+17;\nloop invariant k <= i+j+18;\nloop invariant k <= i+j+19;\nloop invariant k <= i+j+20;\nloop invariant k <= i+j+21;\nloop invariant k <= i+j+22;\nloop invariant k <= i+j+23;\nloop invariant k <= i+j+24;\nloop invariant k <= i+j+25;\nloop invariant k <= i+j+26;\nloop invariant k <= i+j+27;\nloop invariant k <= i+j+28;\nloop invariant k <= i+j+29;\nloop invariant k <= i+j+30;\nloop invariant k <= i+j+31;\nloop invariant k <= i+j+32;\nloop invariant k <= i+j+33;\nloop invariant k <= i+j+34;\nloop invariant k <= i+j+35;\nloop invariant k <= i+j+36;\nloop invariant k <= i+j+37;\nloop invariant k <= i+j+38;\nloop invariant k <= i+j+39;\nloop invariant k <= i+j+40;\nloop invariant k <= i+j+41;\nloop invariant k <= i+j+42;\nloop invariant k <= i+j+43;\nloop invariant k <= i+j+44;\nloop invariant k <= i+j+45;\nloop invariant k <= i+j+46;\nloop invariant k <= i+j+47;\nloop invariant k <= i+j+48;\nloop invariant k <= i+j+49;\nloop invariant k <= i+j+50;\nloop invariant k <= i+j+51;\nloop invariant k <= i+j+52;\nloop invariant k <= i+j+53;\nloop invariant k <= i+j+54;\nloop invariant k <= i+j+55;\nloop invariant k <= i+j+56;\nloop invariant k <= i+j+57;\nloop invariant k <= i+j+58;\nloop invariant k <= i+j+59;\nloop invariant k <= i+j+60;\nloop invariant k <= i+j+61;\nloop invariant k <= i+j+62;\nloop invariant k <= i+j+63;\nloop invariant k <= i+j+64;\nloop invariant k <= i+j+65;\nloop invariant k <= i+j+66;\nloop invariant k <= i+j+67;\nloop invariant k <= i+j+68;\nloop invariant k <= i+j+69;\nloop invariant k <= i+j+70;\nloop invariant k <= i+j+71;\nloop invariant k <= i+j+72;\nloop invariant k <= i+j+73;\nloop invariant k <= i+j+74;\nloop invariant k <= i+j+75;\nloop invariant k <= i+j+76;\nloop invariant k <= i+j+77;\nloop invariant k <= i+j+78;\nloop invariant k <= i+j+79;\nloop invariant k <= i+j+80;\nloop invariant k <= i+j+81;\nloop invariant k <= i+j+82;\nloop invariant k <= i+j+83;\nloop invariant k <= i+j+84;\nloop invariant k <= i+j+85;\nloop invariant k <= i+j+86;\nloop invariant k <= i+j+87;\nloop invariant k <= i+j+88;\nloop invariant k <= i+j+89;\nloop invariant k <= i+j+90;\nloop invariant k <= i+j+91;\nloop invariant k <= i+j+92;\nloop invariant k <= i+j+93;\nloop invariant k <= i+j+94;\nloop invariant k <= i+j+95;\nloop invariant k <= i+j+96;\nloop invariant k <= i+j+97;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n\n\nloop invariant i4: k >= i-j;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= k;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\nloop invariant k <= i;\nloop invariant i < j;\nloop invariant k >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n\n\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "loop invariant 0 <= i <= j is preserved but not established.\nloop invariant i + k <= j + k is partially proven to be inductive.\nloop invariant k >= 1 is preserved but not established.\nloop invariant 0 <= i < j is partially proven to be inductive.\nloop invariant k > 0 is partially proven to be inductive.\nloop invariant k == i + j is preserved but not established.\nloop invariant k > j is preserved but not established.\nloop invariant k < i + j is preserved but not established.\nloop invariant i == k - j is partially proven to be inductive.\nloop invariant i < k is partially proven to be inductive.\nloop invariant j == i + 1 is partially proven to be inductive.\nloop invariant j > i is partially proven to be inductive.\nloop invariant j < k is partially proven to be inductive.\nloop invariant 1 <= i <= j is partially proven to be inductive.\nloop invariant i <= k <= 2*i is partially proven to be inductive.\nloop invariant j-i <= k is partially proven to be inductive.\nloop invariant k-j <= i is partially proven to be inductive.\nloop invariant j-i <= j-i is partially proven to be inductive.\nloop invariant k-j <= k-j is partially proven to be inductive.\nloop invariant i <= j is partially proven to be inductive.\nloop invariant k <= 2*j is partially proven to be inductive.\nloop invariant k <= 2*i is partially proven to be inductive.\nloop invariant i <= k is partially proven to be inductive.\nloop invariant j <= k is partially proven to be inductive.\nloop invariant i <= 2*j is partially proven to be inductive.\nloop invariant j <= 2*i is partially proven to be inductive.\nloop invariant k >= j-i is partially proven to be inductive.\nloop invariant k <= j-i+1 is partially proven to be inductive.\nloop invariant k >= i-j is partially proven to be inductive.\nloop invariant k >= 0 is partially proven to be inductive.\nloop invariant k <= k+1 is partially proven to be inductive.\nloop invariant k <= i is partially proven to be inductive.\nloop invariant k <= j is partially proven to be inductive.\nloop invariant k <= i+j is partially proven to be inductive.\nloop invariant k <= 3*i is partially proven to be inductive.\nloop invariant k <= 3*j is partially proven to be inductive.\nloop invariant k <= 4*i is partially proven to be inductive.\nloop invariant k <= 4*j is partially proven to be inductive.\nloop invariant k <= 5*i is partially proven to be inductive.\nloop invariant k <= 5*j is partially proven to be inductive.\nloop invariant k <= 6*i is partially proven to be inductive.\nloop invariant k <= 6*j is partially proven to be inductive.\nloop invariant k <= 7*i is partially proven to be inductive.\nloop invariant k <= 7*j is partially proven to be inductive.\nloop invariant k <= 8*i is partially proven to be inductive.\nloop invariant k <= 8*j is partially proven to be inductive.\nloop invariant k <= 9*i is partially proven to be inductive.\nloop invariant k <= 9*j is partially proven to be inductive.\nloop invariant k <= 10*i is partially proven to be inductive.\nloop invariant k <= 10*j is partially proven to be inductive.\nloop invariant k <= 11*i is partially proven to be inductive.\nloop invariant k <= 11*j is partially proven to be inductive.\nloop invariant k <= 12*i is partially proven to be inductive.\nloop invariant k <= 12*j is partially proven to be inductive.\nloop invariant k <= 13*i is partially proven to be inductive.\nloop invariant k <= 13*j is partially proven to be inductive.\nloop invariant k <= 14*i is partially proven to be inductive.\nloop invariant k <= 14*j is partially proven to be inductive.\nloop invariant k <= 15*i is partially proven to be inductive.\nloop invariant k <= 15*j is partially proven to be inductive.\nloop invariant k <= 16*i is partially proven to be inductive.\nloop invariant k <= 16*j is partially proven to be inductive.\nloop invariant k <= 17*i is partially proven to be inductive.\nloop invariant k <= 17*j is partially proven to be inductive.\nloop invariant k <= 18*i is partially proven to be inductive.\nloop invariant k <= 18*j is partially proven to be inductive.\nloop invariant k <= 19*i is partially proven to be inductive.\nloop invariant k <= 19*j is partially proven to be inductive.\nloop invariant k <= 20*i is partially proven to be inductive.\nloop invariant k <= 20*j is partially proven to be inductive.\nloop invariant k <= 21*i is partially proven to be inductive.\nloop invariant k <= 21*j is partially proven to be inductive.\nloop invariant k <= 22*i is partially proven to be inductive.\nloop invariant k <= 22*j is partially proven to be inductive.\nloop invariant k <= 23*i is partially proven to be inductive.\nloop invariant k <= 23*j is partially proven to be inductive.\nloop invariant k <= 24*i is partially proven to be inductive.\nloop invariant k <= 24*j is partially proven to be inductive.\nloop invariant k <= 25*i is partially proven to be inductive.\nloop invariant k <= 25*j is partially proven to be inductive.\nloop invariant k <= 26*i is partially proven to be inductive.\nloop invariant k <= 26*j is partially proven to be inductive.\nloop invariant k <= 27*i is partially proven to be inductive.\nloop invariant k <= 27*j is partially proven to be inductive.\nloop invariant k <= 28*i is partially proven to be inductive.\nloop invariant k <= 28*j is partially proven to be inductive.\nloop invariant k <= 29*i is partially proven to be inductive.\nloop invariant k <= 29*j is partially proven to be inductive.\nloop invariant k <= 30*i is partially proven to be inductive.\nloop invariant k <= 30*j is partially proven to be inductive.\nloop invariant k <= 31*i is partially proven to be inductive.\nloop invariant k <= 31*j is partially proven to be inductive.\nloop invariant k <= 32*i is partially proven to be inductive.\nloop invariant k <= 32*j is partially proven to be inductive.\nloop invariant k <= 33*i is partially proven to be inductive.\nloop invariant k <= 33*j is partially proven to be inductive.\nloop invariant k <= 34*i is partially proven to be inductive.\nloop invariant k <= 34*j is partially proven to be inductive.\nloop invariant k <= 35*i is partially proven to be inductive.\nloop invariant k <= 35*j is partially proven to be inductive.\nloop invariant k <= 36*i is partially proven to be inductive.\nloop invariant k <= 36*j is partially proven to be inductive.\nloop invariant k <= 37*i is partially proven to be inductive.\nloop invariant k <= 37*j is partially proven to be inductive.\nloop invariant k <= 38*i is partially proven to be inductive.\nloop invariant k <= 38*j is partially proven to be inductive.\nloop invariant k <= 39*i is partially proven to be inductive.\nloop invariant k <= 39*j is partially proven to be inductive.\nloop invariant k <= 40*i is partially proven to be inductive.\nloop invariant k <= 40*j is partially proven to be inductive.\nloop invariant k <= 41*i is partially proven to be inductive.\nloop invariant k <= 41*j is partially proven to be inductive.\nloop invariant k <= 42*i is partially proven to be inductive.\nloop invariant k <= 42*j is partially proven to be inductive.\nloop invariant k <= 43*i is partially proven to be inductive.\nloop invariant k <= 43*j is partially proven to be inductive.\nloop invariant k <= 44*i is partially proven to be inductive.\nloop invariant k <= 44*j is partially proven to be inductive.\nloop invariant k <= 45*i is partially proven to be inductive.\nloop invariant k <= 45*j is partially proven to be inductive.\nloop invariant k <= 46*i is partially proven to be inductive.\nloop invariant k <= 46*j is partially proven to be inductive.\nloop invariant k <= 47*i is partially proven to be inductive.\nloop invariant k <= 47*j is partially proven to be inductive.\nloop invariant k <= 48*i is partially proven to be inductive.\nloop invariant k <= 48*j is partially proven to be inductive.\nloop invariant k <= 49*i is partially proven to be inductive.\nloop invariant k <= 49*j is partially proven to be inductive.\nloop invariant k <= 50*i is partially proven to be inductive.\nloop invariant k <= 50*j is partially proven to be inductive.\nloop invariant k <= 51*i is partially proven to be inductive.\nloop invariant k <= 51*j is partially proven to be inductive.\nloop invariant k <= 52*i is partially proven to be inductive.\nloop invariant k <= 52*j is partially proven to be inductive.\nloop invariant k <= 53*i is partially proven to be inductive.\nloop invariant k <= 53*j is partially proven to be inductive.\nloop invariant k <= 54*i is partially proven to be inductive.\nloop invariant k <= 54*j is partially proven to be inductive.\nloop invariant k <= 55*i is partially proven to be inductive.\nloop invariant 0 <= i <= j; loop invariant i <= k; loop invariant j <= k + i; loop invariant k <= i + j; loop invariant k > 0 is partially proven to be inductive.\nloop invariant k >= i is partially proven to be inductive.\nloop invariant k <= i + j is partially proven to be inductive.\nloop invariant i <= k <= i + j is partially proven to be inductive.\nloop invariant k > 0 ==> k > 0 is partially proven to be inductive.\nloop invariant i == j ==> i == j is partially proven to be inductive.\nloop invariant 0 <= k <= i is partially proven to be inductive.\nloop invariant k >= i - j is partially proven to be inductive.\nloop invariant i < j is partially proven to be inductive.\nloop invariant i > j ==> k >= 0 is partially proven to be inductive.\nloop invariant i > j ==> k <= 1 + j - i is partially proven to be inductive.\nloop invariant i > j ==> k == i - j + 1 is partially proven to be inductive.\nloop invariant i > j ==> i >= j is partially proven to be inductive.\nloop invariant i > j ==> i < j + k is partially proven to be inductive.\nloop invariant i > j ==> j < i - k is partially proven to be inductive.\nloop invariant (i == j ==> k > 0) is partially proven to be inductive.\nloop invariant (i < j ==> k <= i + j) is partially proven to be inductive.\nloop invariant 0 <= j is partially proven to be inductive.\nloop invariant 0 <= i is partially proven to be inductive.\nloop invariant k <= i-j is partially proven to be inductive.\nloop invariant k >= j is partially proven to be inductive.\nloop invariant k >= i + j is partially proven to be inductive.\nloop invariant k <= i - j is partially proven to be inductive.\nloop invariant k >= j - i is partially proven to be inductive.\nloop invariant k <= j - i is partially proven to be inductive.\nloop invariant k >= 0 ==> k > 0 is partially proven to be inductive.\nloop invariant k >= i - j ==> k > 0 is partially proven to be inductive.\nloop invariant k <= i - j ==> k > 0 is partially proven to be inductive.\nloop invariant k >= j - i ==> k > 0 is partially proven to be inductive.\nloop invariant k <= j - i ==> k > 0 is partially proven to be inductive.\nloop invariant k >= i ==> k > 0 is partially proven to be inductive.\nloop invariant k <= i ==> k > 0 is partially proven to be inductive.\nloop invariant k >= j ==> k > 0 is partially proven to be inductive.\nloop invariant k <= j ==> k > 0 is partially proven to be inductive.\nloop invariant k >= i + j ==> k > 0 is partially proven to be inductive.\nloop invariant k <= i + j ==> k > 0 is partially proven to be inductive.\nloop invariant k >= 0 ==> k > 0 && k >= 0 is partially proven to be inductive.\nloop invariant k >= i - j ==> k > 0 && k >= 0 is partially proven to be inductive.\nloop invariant k <= i - j ==> k > 0 && k >= 0 is partially proven to be inductive.\nloop invariant k >= j - i ==> k > 0 && k >= 0 is partially proven to be inductive.\nloop invariant k <= j - i ==> k > 0 && k >= 0 is partially proven to be inductive.\nloop invariant k >= i ==> k > 0 && k >= 0 is partially proven to be inductive.\nloop invariant k <= i ==> k > 0 && k >= 0 is partially proven to be inductive.\nloop invariant k >= j ==> k > 0 && k >= 0 is partially proven to be inductive.\nloop invariant k <= j ==> k > 0 && k >= 0 is partially proven to be inductive.\nloop invariant k >= i + j ==> k > 0 && k >= 0 is partially proven to be inductive.\nloop invariant k <= i + j ==> k > 0 && k >= 0 is partially proven to be inductive.\nloop invariant k >= 0 ==> k > 0 ==> k > 0 is partially proven to be inductive.\nloop invariant k >= i - j ==> k > 0 ==> k > 0 is partially proven to be inductive.\nloop invariant k <= i - j ==> k > 0 ==> k > 0 is partially proven to be inductive.\nloop invariant k >= j - i ==> k > 0 ==> k > 0 is partially proven to be inductive.\nloop invariant k <= j - i ==> k > 0 ==> k > 0 is partially proven to be inductive.\nloop invariant k >= i ==> k > 0 ==> k > 0 is partially proven to be inductive.\nloop invariant k <= i ==> k > 0 ==> k > 0 is partially proven to be inductive.\nloop invariant k >= j ==> k > 0 ==> k > 0 is partially proven to be inductive.\nloop invariant k <= j ==> k > 0 ==> k > 0 is partially proven to be inductive.\nloop invariant k >= i + j ==> k > 0 ==> k > 0 is partially proven to be inductive.\nloop invariant k <= i + j ==> k > 0 ==> k > 0 is partially proven to be inductive.\nloop invariant k >= 0 ==> k > 0 ==> k > 0 && k >= 0 is partially proven to be inductive.\nloop invariant k >= i - j ==> k > 0 ==> k > 0 && k >= 0 is partially proven to be inductive.\nloop invariant k <= i - j ==> k > 0 ==> k > 0 && k >= 0 is partially proven to be inductive.\nloop invariant k >= j - i ==> k > 0 ==> k > 0 && k >= 0 is partially proven to be inductive.\nloop invariant k <= j - i ==> k > 0 ==> k > 0 && k >= 0 is partially proven to be inductive.\nloop invariant k >= i ==> k > 0 ==> k > 0 && k >= 0 is partially proven to be inductive.\nloop invariant k <= i ==> k > 0 ==> k > 0 && k >= 0 is partially proven to be inductive.\nloop invariant k >= j ==> k > 0 ==> k > 0 && k >= 0 is partially proven to be inductive.\nloop invariant k <= i+j+1 is partially proven to be inductive.\nloop invariant k <= i+j+2 is partially proven to be inductive.\nloop invariant k <= i+j+3 is partially proven to be inductive.\nloop invariant k <= i+j+4 is partially proven to be inductive.\nloop invariant k <= i+j+5 is partially proven to be inductive.\nloop invariant k <= i+j+6 is partially proven to be inductive.\nloop invariant k <= i+j+7 is partially proven to be inductive.\nloop invariant k <= i+j+8 is partially proven to be inductive.\nloop invariant k <= i+j+9 is partially proven to be inductive.\nloop invariant k <= i+j+10 is partially proven to be inductive.\nloop invariant k <= i+j+11 is partially proven to be inductive.\nloop invariant k <= i+j+12 is partially proven to be inductive.\nloop invariant k <= i+j+13 is partially proven to be inductive.\nloop invariant k <= i+j+14 is partially proven to be inductive.\nloop invariant k <= i+j+15 is partially proven to be inductive.\nloop invariant k <= i+j+16 is partially proven to be inductive.\nloop invariant k <= i+j+17 is partially proven to be inductive.\nloop invariant k <= i+j+18 is partially proven to be inductive.\nloop invariant k <= i+j+19 is partially proven to be inductive.\nloop invariant k <= i+j+20 is partially proven to be inductive.\nloop invariant k <= i+j+21 is partially proven to be inductive.\nloop invariant k <= i+j+22 is partially proven to be inductive.\nloop invariant k <= i+j+23 is partially proven to be inductive.\nloop invariant k <= i+j+24 is partially proven to be inductive.\nloop invariant k <= i+j+25 is partially proven to be inductive.\nloop invariant k <= i+j+26 is partially proven to be inductive.\nloop invariant k <= i+j+27 is partially proven to be inductive.\nloop invariant k <= i+j+28 is partially proven to be inductive.\nloop invariant k <= i+j+29 is partially proven to be inductive.\nloop invariant k <= i+j+30 is partially proven to be inductive.\nloop invariant k <= i+j+31 is partially proven to be inductive.\nloop invariant k <= i+j+32 is partially proven to be inductive.\nloop invariant k <= i+j+33 is partially proven to be inductive.\nloop invariant k <= i+j+34 is partially proven to be inductive.\nloop invariant k <= i+j+35 is partially proven to be inductive.\nloop invariant k <= i+j+36 is partially proven to be inductive.\nloop invariant k <= i+j+37 is partially proven to be inductive.\nloop invariant k <= i+j+38 is partially proven to be inductive.\nloop invariant k <= i+j+39 is partially proven to be inductive.\nloop invariant k <= i+j+40 is partially proven to be inductive.\nloop invariant k <= i+j+41 is partially proven to be inductive.\nloop invariant k <= i+j+42 is partially proven to be inductive.\nloop invariant k <= i+j+43 is partially proven to be inductive.\nloop invariant k <= i+j+44 is partially proven to be inductive.\nloop invariant k <= i+j+45 is partially proven to be inductive.\nloop invariant k <= i+j+46 is partially proven to be inductive.\nloop invariant k <= i+j+47 is partially proven to be inductive.\nloop invariant k <= i+j+48 is partially proven to be inductive.\nloop invariant k <= i+j+49 is partially proven to be inductive.\nloop invariant k <= i+j+50 is partially proven to be inductive.\nloop invariant k <= i+j+51 is partially proven to be inductive.\nloop invariant k <= i+j+52 is partially proven to be inductive.\nloop invariant k <= i+j+53 is partially proven to be inductive.\nloop invariant k <= i+j+54 is partially proven to be inductive.\nloop invariant k <= i+j+55 is partially proven to be inductive.\nloop invariant k <= i+j+56 is partially proven to be inductive.\nloop invariant k <= i+j+57 is partially proven to be inductive.\nloop invariant k <= i+j+58 is partially proven to be inductive.\nloop invariant k <= i+j+59 is partially proven to be inductive.\nloop invariant k <= i+j+60 is partially proven to be inductive.\nloop invariant k <= i+j+61 is partially proven to be inductive.\nloop invariant k <= i+j+62 is partially proven to be inductive.\nloop invariant k <= i+j+63 is partially proven to be inductive.\nloop invariant k <= i+j+64 is partially proven to be inductive.\nloop invariant k <= i+j+65 is partially proven to be inductive.\nloop invariant k <= i+j+66 is partially proven to be inductive.\nloop invariant k <= i+j+67 is partially proven to be inductive.\nloop invariant k <= i+j+68 is partially proven to be inductive.\nloop invariant k <= i+j+69 is partially proven to be inductive.\nloop invariant k <= i+j+70 is partially proven to be inductive.\nloop invariant k <= i+j+71 is partially proven to be inductive.\nloop invariant k <= i+j+72 is partially proven to be inductive.\nloop invariant k <= i+j+73 is partially proven to be inductive.\nloop invariant k <= i+j+74 is partially proven to be inductive.\nloop invariant k <= i+j+75 is partially proven to be inductive.\nloop invariant k <= i+j+76 is partially proven to be inductive.\nloop invariant k <= i+j+77 is partially proven to be inductive.\nloop invariant k <= i+j+78 is partially proven to be inductive.\nloop invariant k <= i+j+79 is partially proven to be inductive.\nloop invariant k <= i+j+80 is partially proven to be inductive.\nloop invariant k <= i+j+81 is partially proven to be inductive.\nloop invariant k <= i+j+82 is partially proven to be inductive.\nloop invariant k <= i+j+83 is partially proven to be inductive.\nloop invariant k <= i+j+84 is partially proven to be inductive.\nloop invariant k <= i+j+85 is partially proven to be inductive.\nloop invariant k <= i+j+86 is partially proven to be inductive.\nloop invariant k <= i+j+87 is partially proven to be inductive.\nloop invariant k <= i+j+88 is partially proven to be inductive.\nloop invariant k <= i+j+89 is partially proven to be inductive.\nloop invariant k <= i+j+90 is partially proven to be inductive.\nloop invariant k <= i+j+91 is partially proven to be inductive.\nloop invariant k <= i+j+92 is partially proven to be inductive.\nloop invariant k <= i+j+93 is partially proven to be inductive.\nloop invariant k <= i+j+94 is partially proven to be inductive.\nloop invariant k <= i+j+95 is partially proven to be inductive.\nloop invariant k <= i+j+96 is partially proven to be inductive.\nloop invariant k <= i+j+97 is partially proven to be inductive.\nloop invariant 0 <= k is partially proven to be inductive.\nAssertion k > 0: Partially proven",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= j;\nloop invariant i2: i + k <= j + k;\nloop invariant i3: k >= 1;\nloop invariant i4: 0 <= i < j;\nloop invariant i5: k > 0;\nloop invariant i6: k == i + j;\nloop invariant i7: k > j;\nloop invariant i8: k < i + j;\nloop invariant i9: i == k - j;\nloop invariant i10: i < k;\nloop invariant i11: j == i + 1;\nloop invariant i12: j > i;\nloop invariant i13: j < k;\nloop invariant i14: 1 <= i <= j;\nloop invariant i15: i <= k <= 2*i;\nloop invariant i16: j-i <= k;\nloop invariant i17: k-j <= i;\nloop invariant i18: j-i <= j-i;\nloop invariant i19: k-j <= k-j;\nloop invariant i20: i <= j;\nloop invariant i21: k <= 2*j;\nloop invariant i22: k <= 2*i;\nloop invariant i23: i <= k;\nloop invariant i24: j <= k;\nloop invariant i25: i <= 2*j;\nloop invariant i26: j <= 2*i;\nloop invariant i27: k >= j-i;\nloop invariant i28: k <= j-i+1;\nloop invariant i29: k >= i-j;\nloop invariant i30: k >= 0;\nloop invariant i31: k <= k+1;\nloop invariant i32: k <= i;\nloop invariant i33: k <= j;\nloop invariant i34: k <= i+j;\nloop invariant i35: k <= 3*i;\nloop invariant i36: k <= 3*j;\nloop invariant i37: k <= 4*i;\nloop invariant i38: k <= 4*j;\nloop invariant i39: k <= 5*i;\nloop invariant i40: k <= 5*j;\nloop invariant i41: k <= 6*i;\nloop invariant i42: k <= 6*j;\nloop invariant i43: k <= 7*i;\nloop invariant i44: k <= 7*j;\nloop invariant i45: k <= 8*i;\nloop invariant i46: k <= 8*j;\nloop invariant i47: k <= 9*i;\nloop invariant i48: k <= 9*j;\nloop invariant i49: k <= 10*i;\nloop invariant i50: k <= 10*j;\nloop invariant i51: k <= 11*i;\nloop invariant i52: k <= 11*j;\nloop invariant i53: k <= 12*i;\nloop invariant i54: k <= 12*j;\nloop invariant i55: k <= 13*i;\nloop invariant i56: k <= 13*j;\nloop invariant i57: k <= 14*i;\nloop invariant i58: k <= 14*j;\nloop invariant i59: k <= 15*i;\nloop invariant i60: k <= 15*j;\nloop invariant i61: k <= 16*i;\nloop invariant i62: k <= 16*j;\nloop invariant i63: k <= 17*i;\nloop invariant i64: k <= 17*j;\nloop invariant i65: k <= 18*i;\nloop invariant i66: k <= 18*j;\nloop invariant i67: k <= 19*i;\nloop invariant i68: k <= 19*j;\nloop invariant i69: k <= 20*i;\nloop invariant i70: k <= 20*j;\nloop invariant i71: k <= 21*i;\nloop invariant i72: k <= 21*j;\nloop invariant i73: k <= 22*i;\nloop invariant i74: k <= 22*j;\nloop invariant i75: k <= 23*i;\nloop invariant i76: k <= 23*j;\nloop invariant i77: k <= 24*i;\nloop invariant i78: k <= 24*j;\nloop invariant i79: k <= 25*i;\nloop invariant i80: k <= 25*j;\nloop invariant i81: k <= 26*i;\nloop invariant i82: k <= 26*j;\nloop invariant i83: k <= 27*i;\nloop invariant i84: k <= 27*j;\nloop invariant i85: k <= 28*i;\nloop invariant i86: k <= 28*j;\nloop invariant i87: k <= 29*i;\nloop invariant i88: k <= 29*j;\nloop invariant i89: k <= 30*i;\nloop invariant i90: k <= 30*j;\nloop invariant i91: k <= 31*i;\nloop invariant i92: k <= 31*j;\nloop invariant i93: k <= 32*i;\nloop invariant i94: k <= 32*j;\nloop invariant i95: k <= 33*i;\nloop invariant i96: k <= 33*j;\nloop invariant i97: k <= 34*i;\nloop invariant i98: k <= 34*j;\nloop invariant i99: k <= 35*i;\nloop invariant i100: k <= 35*j;\nloop invariant i101: k <= 36*i;\nloop invariant i102: k <= 36*j;\nloop invariant i103: k <= 37*i;\nloop invariant i104: k <= 37*j;\nloop invariant i105: k <= 38*i;\nloop invariant i106: k <= 38*j;\nloop invariant i107: k <= 39*i;\nloop invariant i108: k <= 39*j;\nloop invariant i109: k <= 40*i;\nloop invariant i110: k <= 40*j;\nloop invariant i111: k <= 41*i;\nloop invariant i112: k <= 41*j;\nloop invariant i113: k <= 42*i;\nloop invariant i114: k <= 42*j;\nloop invariant i115: k <= 43*i;\nloop invariant i116: k <= 43*j;\nloop invariant i117: k <= 44*i;\nloop invariant i118: k <= 44*j;\nloop invariant i119: k <= 45*i;\nloop invariant i120: k <= 45*j;\nloop invariant i121: k <= 46*i;\nloop invariant i122: k <= 46*j;\nloop invariant i123: k <= 47*i;\nloop invariant i124: k <= 47*j;\nloop invariant i125: k <= 48*i;\nloop invariant i126: k <= 48*j;\nloop invariant i127: k <= 49*i;\nloop invariant i128: k <= 49*j;\nloop invariant i129: k <= 50*i;\nloop invariant i130: k <= 50*j;\nloop invariant i131: k <= 51*i;\nloop invariant i132: k <= 51*j;\nloop invariant i133: k <= 52*i;\nloop invariant i134: k <= 52*j;\nloop invariant i135: k <= 53*i;\nloop invariant i136: k <= 53*j;\nloop invariant i137: k <= 54*i;\nloop invariant i138: k <= 54*j;\nloop invariant i139: k <= 55*i;\nloop invariant i140: 0 <= i <= j; loop invariant i <= k; loop invariant j <= k + i; loop invariant k <= i + j; loop invariant k > 0;\nloop invariant i141: k >= i;\nloop invariant i142: k <= i + j;\nloop invariant i143: i <= k <= i + j;\nloop invariant i144: k > 0 ==> k > 0;\nloop invariant i145: i == j ==> i == j;\nloop invariant i146: 0 <= k <= i;\nloop invariant i147: k >= i - j;\nloop invariant i148: i < j;\nloop invariant i149: i > j ==> k >= 0;\nloop invariant i150: i > j ==> k <= 1 + j - i;\nloop invariant i151: i > j ==> k == i - j + 1;\nloop invariant i152: i > j ==> i >= j;\nloop invariant i153: i > j ==> i < j + k;\nloop invariant i154: i > j ==> j < i - k;\nloop invariant i155: (i == j ==> k > 0);\nloop invariant i156: (i < j ==> k <= i + j);\nloop invariant i157: 0 <= j;\nloop invariant i158: 0 <= i;\nloop invariant i159: k <= i-j;\nloop invariant i160: k >= j;\nloop invariant i161: k >= i + j;\nloop invariant i162: k <= i - j;\nloop invariant i163: k >= j - i;\nloop invariant i164: k <= j - i;\nloop invariant i165: k >= 0 ==> k > 0;\nloop invariant i166: k >= i - j ==> k > 0;\nloop invariant i167: k <= i - j ==> k > 0;\nloop invariant i168: k >= j - i ==> k > 0;\nloop invariant i169: k <= j - i ==> k > 0;\nloop invariant i170: k >= i ==> k > 0;\nloop invariant i171: k <= i ==> k > 0;\nloop invariant i172: k >= j ==> k > 0;\nloop invariant i173: k <= j ==> k > 0;\nloop invariant i174: k >= i + j ==> k > 0;\nloop invariant i175: k <= i + j ==> k > 0;\nloop invariant i176: k >= 0 ==> k > 0 && k >= 0;\nloop invariant i177: k >= i - j ==> k > 0 && k >= 0;\nloop invariant i178: k <= i - j ==> k > 0 && k >= 0;\nloop invariant i179: k >= j - i ==> k > 0 && k >= 0;\nloop invariant i180: k <= j - i ==> k > 0 && k >= 0;\nloop invariant i181: k >= i ==> k > 0 && k >= 0;\nloop invariant i182: k <= i ==> k > 0 && k >= 0;\nloop invariant i183: k >= j ==> k > 0 && k >= 0;\nloop invariant i184: k <= j ==> k > 0 && k >= 0;\nloop invariant i185: k >= i + j ==> k > 0 && k >= 0;\nloop invariant i186: k <= i + j ==> k > 0 && k >= 0;\nloop invariant i187: k >= 0 ==> k > 0 ==> k > 0;\nloop invariant i188: k >= i - j ==> k > 0 ==> k > 0;\nloop invariant i189: k <= i - j ==> k > 0 ==> k > 0;\nloop invariant i190: k >= j - i ==> k > 0 ==> k > 0;\nloop invariant i191: k <= j - i ==> k > 0 ==> k > 0;\nloop invariant i192: k >= i ==> k > 0 ==> k > 0;\nloop invariant i193: k <= i ==> k > 0 ==> k > 0;\nloop invariant i194: k >= j ==> k > 0 ==> k > 0;\nloop invariant i195: k <= j ==> k > 0 ==> k > 0;\nloop invariant i196: k >= i + j ==> k > 0 ==> k > 0;\nloop invariant i197: k <= i + j ==> k > 0 ==> k > 0;\nloop invariant i198: k >= 0 ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i199: k >= i - j ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i200: k <= i - j ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i201: k >= j - i ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i202: k <= j - i ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i203: k >= i ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i204: k <= i ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i205: k >= j ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i206: k <= i+j+1;\nloop invariant i207: k <= i+j+2;\nloop invariant i208: k <= i+j+3;\nloop invariant i209: k <= i+j+4;\nloop invariant i210: k <= i+j+5;\nloop invariant i211: k <= i+j+6;\nloop invariant i212: k <= i+j+7;\nloop invariant i213: k <= i+j+8;\nloop invariant i214: k <= i+j+9;\nloop invariant i215: k <= i+j+10;\nloop invariant i216: k <= i+j+11;\nloop invariant i217: k <= i+j+12;\nloop invariant i218: k <= i+j+13;\nloop invariant i219: k <= i+j+14;\nloop invariant i220: k <= i+j+15;\nloop invariant i221: k <= i+j+16;\nloop invariant i222: k <= i+j+17;\nloop invariant i223: k <= i+j+18;\nloop invariant i224: k <= i+j+19;\nloop invariant i225: k <= i+j+20;\nloop invariant i226: k <= i+j+21;\nloop invariant i227: k <= i+j+22;\nloop invariant i228: k <= i+j+23;\nloop invariant i229: k <= i+j+24;\nloop invariant i230: k <= i+j+25;\nloop invariant i231: k <= i+j+26;\nloop invariant i232: k <= i+j+27;\nloop invariant i233: k <= i+j+28;\nloop invariant i234: k <= i+j+29;\nloop invariant i235: k <= i+j+30;\nloop invariant i236: k <= i+j+31;\nloop invariant i237: k <= i+j+32;\nloop invariant i238: k <= i+j+33;\nloop invariant i239: k <= i+j+34;\nloop invariant i240: k <= i+j+35;\nloop invariant i241: k <= i+j+36;\nloop invariant i242: k <= i+j+37;\nloop invariant i243: k <= i+j+38;\nloop invariant i244: k <= i+j+39;\nloop invariant i245: k <= i+j+40;\nloop invariant i246: k <= i+j+41;\nloop invariant i247: k <= i+j+42;\nloop invariant i248: k <= i+j+43;\nloop invariant i249: k <= i+j+44;\nloop invariant i250: k <= i+j+45;\nloop invariant i251: k <= i+j+46;\nloop invariant i252: k <= i+j+47;\nloop invariant i253: k <= i+j+48;\nloop invariant i254: k <= i+j+49;\nloop invariant i255: k <= i+j+50;\nloop invariant i256: k <= i+j+51;\nloop invariant i257: k <= i+j+52;\nloop invariant i258: k <= i+j+53;\nloop invariant i259: k <= i+j+54;\nloop invariant i260: k <= i+j+55;\nloop invariant i261: k <= i+j+56;\nloop invariant i262: k <= i+j+57;\nloop invariant i263: k <= i+j+58;\nloop invariant i264: k <= i+j+59;\nloop invariant i265: k <= i+j+60;\nloop invariant i266: k <= i+j+61;\nloop invariant i267: k <= i+j+62;\nloop invariant i268: k <= i+j+63;\nloop invariant i269: k <= i+j+64;\nloop invariant i270: k <= i+j+65;\nloop invariant i271: k <= i+j+66;\nloop invariant i272: k <= i+j+67;\nloop invariant i273: k <= i+j+68;\nloop invariant i274: k <= i+j+69;\nloop invariant i275: k <= i+j+70;\nloop invariant i276: k <= i+j+71;\nloop invariant i277: k <= i+j+72;\nloop invariant i278: k <= i+j+73;\nloop invariant i279: k <= i+j+74;\nloop invariant i280: k <= i+j+75;\nloop invariant i281: k <= i+j+76;\nloop invariant i282: k <= i+j+77;\nloop invariant i283: k <= i+j+78;\nloop invariant i284: k <= i+j+79;\nloop invariant i285: k <= i+j+80;\nloop invariant i286: k <= i+j+81;\nloop invariant i287: k <= i+j+82;\nloop invariant i288: k <= i+j+83;\nloop invariant i289: k <= i+j+84;\nloop invariant i290: k <= i+j+85;\nloop invariant i291: k <= i+j+86;\nloop invariant i292: k <= i+j+87;\nloop invariant i293: k <= i+j+88;\nloop invariant i294: k <= i+j+89;\nloop invariant i295: k <= i+j+90;\nloop invariant i296: k <= i+j+91;\nloop invariant i297: k <= i+j+92;\nloop invariant i298: k <= i+j+93;\nloop invariant i299: k <= i+j+94;\nloop invariant i300: k <= i+j+95;\nloop invariant i301: k <= i+j+96;\nloop invariant i302: k <= i+j+97;\nloop invariant i303: 0 <= k;\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 108,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\nloop invariant i2: i + k <= j + k;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i18: j-i <= j-i;\nloop invariant i19: k-j <= k-j;\nloop invariant i20: i <= j;\n\n\n\n\n\n\n\n\nloop invariant i29: k >= i-j;\n\nloop invariant i31: k <= k+1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i144: k > 0 ==> k > 0;\nloop invariant i145: i == j ==> i == j;\n\nloop invariant i147: k >= i - j;\n\nloop invariant i149: i > j ==> k >= 0;\nloop invariant i150: i > j ==> k <= 1 + j - i;\nloop invariant i151: i > j ==> k == i - j + 1;\nloop invariant i152: i > j ==> i >= j;\nloop invariant i153: i > j ==> i < j + k;\nloop invariant i154: i > j ==> j < i - k;\nloop invariant i155: (i == j ==> k > 0);\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i167: k <= i - j ==> k > 0;\nloop invariant i168: k >= j - i ==> k > 0;\n\n\n\n\n\n\n\n\n\nloop invariant i178: k <= i - j ==> k > 0 && k >= 0;\nloop invariant i179: k >= j - i ==> k > 0 && k >= 0;\n\n\n\n\n\n\n\nloop invariant i187: k >= 0 ==> k > 0 ==> k > 0;\nloop invariant i188: k >= i - j ==> k > 0 ==> k > 0;\nloop invariant i189: k <= i - j ==> k > 0 ==> k > 0;\nloop invariant i190: k >= j - i ==> k > 0 ==> k > 0;\nloop invariant i191: k <= j - i ==> k > 0 ==> k > 0;\nloop invariant i192: k >= i ==> k > 0 ==> k > 0;\nloop invariant i193: k <= i ==> k > 0 ==> k > 0;\nloop invariant i194: k >= j ==> k > 0 ==> k > 0;\nloop invariant i195: k <= j ==> k > 0 ==> k > 0;\nloop invariant i196: k >= i + j ==> k > 0 ==> k > 0;\nloop invariant i197: k <= i + j ==> k > 0 ==> k > 0;\nloop invariant i198: k >= 0 ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i199: k >= i - j ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i200: k <= i - j ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i201: k >= j - i ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i202: k <= j - i ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i203: k >= i ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i204: k <= i ==> k > 0 ==> k > 0 && k >= 0;\nloop invariant i205: k >= j ==> k > 0 ==> k > 0 && k >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark16_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark17_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark19_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark20_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark21_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark22_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark23_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark25_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark26_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark27_linear.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c"
        ],
        "skipped": [],
        "total": 147,
        "success_count": 130,
        "failure_count": 17,
        "success_rate": 0.8843537414965986
    }
}