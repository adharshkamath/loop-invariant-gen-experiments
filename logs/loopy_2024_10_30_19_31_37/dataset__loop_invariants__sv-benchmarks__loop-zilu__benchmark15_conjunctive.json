{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int low = unknown_int();\n  int mid = unknown_int();\n  int high = unknown_int();\n  if (!(low == 0 && mid >= 1 && high == 2*mid)) return 0;\n  while (mid > 0) {\n    low = low + 1;\n    high = high - 1;\n    mid = mid - 1;\n  }\n  {;\n//@ assert(low == high);\n}\n\n  return 0;\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= low <= high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= mid <= 1;\nloop invariant 0 <= low <= 1;\nloop invariant 2 < high <= 2;\nloop invariant low <= high;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= low <= high;\nloop invariant low + high <= 2*mid;\nloop invariant mid > 0 ==> low == high;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= low;\nloop invariant 0 <= mid;\nloop invariant mid <= high;\nloop invariant low <= high;\nloop invariant low + mid + high == 3*mid;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= low <= high;\nloop invariant low <= mid <= high;\nloop invariant low + mid + high == 3*mid;\nloop invariant mid >= 0;\nloop invariant low == high ==> mid == 0;\nloop invariant !(low == high) ==> mid > 0;\nloop invariant low == high ==> low == mid;\nloop invariant !(low == high) ==> low < mid;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= low <= high;\nloop invariant high - low == mid;\nloop invariant mid <= mid';\nloop invariant low' - low == 1;\nloop invariant high' - high == 1;\nloop invariant high' == low;\nloop invariant mid' == 0;\nloop invariant high < 0 ==> low < 0;\nloop invariant mid < 0 ==> low < 0;\nloop invariant low < 0 ==> low' < 0;\nloop invariant high < 0 ==> high' < 0;\nloop invariant high' < 0 ==> low < 0;\nloop invariant mid < 0 ==> low' < 0;\nloop invariant low < 0 ==> low' < 0;\nloop invariant high' < 0 ==> high < 0;\nloop invariant mid < 0 ==> high < 0;\nloop invariant low < 0 ==> high < 0;\nloop invariant low' < 0 ==> low < 0;\nloop invariant low' < 0 ==> high' < 0;\nloop invariant high' < 0 ==> low' < 0;\nloop invariant high' < 0 ==> high < 0;\nloop invariant mid < 0 ==> low' < 0;\nloop invariant low' < 0 ==> mid < 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= mid <= high - low;\nloop invariant (high - mid) == low;\nloop invariant (low >= mid) == (mid <= 0);\nloop invariant (mid > 0) ==> (low < high);\nloop invariant (mid > 0) ==> (high > low);\nloop invariant (mid > 0) ==> (low <= high - 1);\nloop invariant (mid > 0) ==> (high - 1 >= low);\nloop invariant (mid > 0) ==> (low <= mid);\nloop invariant (mid > 0) ==> (mid <= high - low);\nloop invariant (mid > 0) ==> (high - low >= mid);\nloop invariant (mid > 0) ==> (low < high - 1);\nloop invariant (mid > 0) ==> (high - 1 > low);\nloop invariant (mid > 0) ==> (low <= mid - 1);\nloop invariant (mid > 0) ==> (mid - 1 <= high - low);\nloop invariant (mid > 0) ==> (high - low >= mid - 1);\nloop invariant (mid > 0) ==> (low < high - 2);\nloop invariant (mid > 0) ==> (high - 2 > low);\nloop invariant (mid > 0) ==> (low <= mid - 2);\nloop invariant (mid > 0) ==> (mid - 2 <= high - low);\nloop invariant (mid > 0) ==> (high - low >= mid - 2);\nloop invariant (mid > 0) ==> (low < high - 3);\nloop invariant (mid > 0) ==> (high - 3 > low);\nloop invariant (mid > 0) ==> (low <= mid - 3);\nloop invariant (mid > 0) ==> (mid - 3 <= high - low);\nloop invariant (mid > 0) ==> (high - low >= mid - 3);\nloop invariant (mid > 0) ==> (low < high - 4);\nloop invariant (mid > 0) ==> (high - 4 > low);\nloop invariant (mid > 0) ==> (low <= mid - 4);\nloop invariant (mid > 0) ==> (mid - 4 <= high - low);\nloop invariant (mid > 0) ==> (high - low >= mid - 4);\nloop invariant (mid > 0) ==> (low < high - 5);\nloop invariant (mid > 0) ==> (high - 5 > low);\nloop invariant (mid > 0) ==> (low <= mid - 5);\nloop invariant (mid > 0) ==> (mid - 5 <= high - low);\nloop invariant (mid > 0) ==> (high - low >= mid - 5);\nloop invariant (mid > 0) ==> (low < high - 6);\nloop invariant (mid > 0) ==> (high - 6 > low);\nloop invariant (mid > 0) ==> (low <= mid - 6);\nloop invariant (mid > 0) ==> (mid - 6 <= high - low);\nloop invariant (mid > 0) ==> (high - low >= mid - 6);\nloop invariant (mid > 0) ==> (low < high - 7);\nloop invariant (mid > 0) ==> (high - 7 > low);\nloop invariant (mid > 0) ==> (low <= mid - 7);\nloop invariant (mid > 0) ==> (mid - 7 <= high - low);\nloop invariant (mid > 0) ==> (high - low >= mid - 7);\nloop invariant (mid > 0) ==> (low < high - 8);\nloop invariant (mid > 0) ==> (high - 8 > low);\nloop invariant (mid > 0) ==> (low <= mid - 8);\nloop invariant (mid > 0) ==> (mid - 8 <= high - low);\nloop invariant (mid > 0) ==> (high - low >= mid - 8);\nloop invariant (mid > 0) ==> (low < high - 9);\nloop invariant (mid > 0) ==> (high - 9 > low);\nloop invariant (mid > 0) ==> (low <= mid - 9);\nloop invariant (mid > 0) ==> (mid - 9 <= high - low);\nloop invariant (mid > 0) ==> (high - low >= mid - 9);\nloop invariant (mid > 0) ==> (low < high - 10);\nloop invariant (mid > 0) ==> (high - 10 > low);\nloop invariant (mid > 0) ==> (low <= mid - 10);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= low <= low;\nloop invariant low <= mid <= mid;\nloop invariant low <= high <= high;\nloop invariant low <= mid + low <= mid + low;\nloop invariant low + mid + low <= high <= high;\nloop invariant low + mid + low == high;\nloop invariant high == mid + low;\nloop invariant low == mid + low;\nloop invariant low == mid + low;\nloop invariant mid == 0;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= low <= mid <= high <= 2 * mid;\nloop invariant low + mid + high == 3 * mid;\nloop invariant mid == 0 ==> low == high;\nloop invariant low + high == 2 * mid ==> mid == 0;\nloop invariant mid == 0 ==> low == high;\nloop invariant low == high ==> mid == 0;\nloop invariant mid == 0 ==> low == high;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\n*/\n```",
            "```\n/*@\nloop invariant low + mid = mid + high;\nloop invariant mid <= high;\nloop invariant low <= mid;\nloop invariant low <= high;\nloop invariant mid >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= low <= high; loop invariant low <= mid <= high; loop invariant low <= high <= 2*mid; loop invariant low == high ==> mid == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= low <= high;\nloop invariant 0 <= mid <= high;\nloop invariant low + mid + high == 3*mid;\nloop invariant low + mid + high == 2*high;\nloop invariant low <= high;\nloop invariant high >= low;\nloop invariant mid >= 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= mid <= mid<=high;\nloop invariant low = high - mid;\nloop invariant low<=high;\nloop invariant low>=0;\nloop invariant mid>=0;\nloop invariant high>=0;\nloop invariant mid+low+high = mid+mid+1+mid;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= low <= 2*mid;\nloop invariant 1 <= mid <= 2*mid;\nloop invariant 2*mid <= high <= 4*mid;\nloop invariant low <= high;\nloop invariant low + mid <= high;\nloop invariant low + mid + high <= 6*mid;\nloop invariant low + mid + high + mid <= 8*mid;\nloop invariant low + mid + high + 2*mid <= 10*mid;\nloop invariant low + mid + high + 3*mid <= 12*mid;\nloop invariant low + mid + high + 4*mid <= 14*mid;\nloop invariant low + mid + high + 5*mid <= 16*mid;\nloop invariant low + mid + high + 6*mid <= 18*mid;\nloop invariant low + mid + high + 7*mid <= 20*mid;\nloop invariant low + mid + high + 8*mid <= 22*mid;\nloop invariant low + mid + high + 9*mid <= 24*mid;\nloop invariant low + mid + high + 10*mid <= 26*mid;\nloop invariant low + mid + high + 11*mid <= 28*mid;\nloop invariant low + mid + high + 12*mid <= 30*mid;\nloop invariant low + mid + high + 13*mid <= 32*mid;\nloop invariant low + mid + high + 14*mid <= 34*mid;\nloop invariant low + mid + high + 15*mid <= 36*mid;\nloop invariant low + mid + high + 16*mid <= 38*mid;\nloop invariant low + mid + high + 17*mid <= 40*mid;\nloop invariant low + mid + high + 18*mid <= 42*mid;\nloop invariant low + mid + high + 19*mid <= 44*mid;\nloop invariant low + mid + high + 20*mid <= 46*mid;\nloop invariant low + mid + high + 21*mid <= 48*mid;\nloop invariant low + mid + high + 22*mid <= 50*mid;\nloop invariant low + mid + high + 23*mid <= 52*mid;\nloop invariant low + mid + high + 24*mid <= 54*mid;\nloop invariant low + mid + high + 25*mid <= 56*mid;\nloop invariant low + mid + high + 26*mid <= 58*mid;\nloop invariant low + mid + high + 27*mid <= 60*mid;\nloop invariant low + mid + high + 28*mid <= 62*mid;\nloop invariant low + mid + high + 29*mid <= 64*mid;\nloop invariant low + mid + high + 30*mid <= 66*mid;\nloop invariant low + mid + high + 31*mid <= 68*mid;\nloop invariant low + mid + high + 32*mid <= 70*mid;\nloop invariant low + mid + high + 33*mid <= 72*mid;\nloop invariant low + mid + high + 34*mid <= 74*mid;\nloop invariant low + mid + high + 35*mid <= 76*mid;\nloop invariant low + mid + high + 36*mid <= 78*mid;\nloop invariant low + mid + high + 37*mid <= 80*mid;\nloop invariant low + mid + high + 38*mid <= 82*mid;\nloop invariant low + mid + high + 39*mid <= 84*mid;\nloop invariant low + mid + high + 40*mid <= 86*mid;\nloop invariant low + mid + high + 41*mid <= 88*mid;\nloop invariant low + mid + high + 42*mid <= 90*mid;\nloop invariant low + mid + high + 43*mid <= 92*mid;\nloop invariant low + mid + high + 44*mid <= 94*mid;\nloop invariant low + mid + high + 45*mid <= 96*mid;\nloop invariant low + mid + high + 46*mid <= 98*mid;\nloop invariant low + mid + high + 47*mid <= 100*mid;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= low <= high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\nloop invariant low == high;\nloop invariant low >= high;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int low = unknown_int();\n  int mid = unknown_int();\n  int high = unknown_int();\n  if (!(low == 0 && mid >= 1 && high == 2*mid)) return 0;\n  /*@\n\n\n\n\n*/\nwhile (mid > 0) {\n    low = low + 1;\n    high = high - 1;\n    mid = mid - 1;\n  }\n  {;\n//@ assert(low == high);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= mid <= 1;\nloop invariant 0 <= low <= 1;\nloop invariant 2 < high <= 2;\nloop invariant low <= high;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int low = unknown_int();\n  int mid = unknown_int();\n  int high = unknown_int();\n  if (!(low == 0 && mid >= 1 && high == 2*mid)) return 0;\n  /*@\n\n\n\n\n*/\nwhile (mid > 0) {\n    low = low + 1;\n    high = high - 1;\n    mid = mid - 1;\n  }\n  {;\n//@ assert(low == high);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= low <= high;\nloop invariant low + high <= 2*mid;\nloop invariant mid > 0 ==> low == high;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int low = unknown_int();\n  int mid = unknown_int();\n  int high = unknown_int();\n  if (!(low == 0 && mid >= 1 && high == 2*mid)) return 0;\n  /*@\n\n\n\n*/\nwhile (mid > 0) {\n    low = low + 1;\n    high = high - 1;\n    mid = mid - 1;\n  }\n  {;\n//@ assert(low == high);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= low;\nloop invariant 0 <= mid;\nloop invariant mid <= high;\nloop invariant low <= high;\nloop invariant low + mid + high == 3*mid;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int low = unknown_int();\n  int mid = unknown_int();\n  int high = unknown_int();\n  if (!(low == 0 && mid >= 1 && high == 2*mid)) return 0;\n  /*@\nloop invariant i1: 0 <= low;\nloop invariant i2: 0 <= mid;\nloop invariant i3: mid <= high;\n\n\n*/\nwhile (mid > 0) {\n    low = low + 1;\n    high = high - 1;\n    mid = mid - 1;\n  }\n  {;\n//@ assert(low == high);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= low <= high;\nloop invariant low <= mid <= high;\nloop invariant low + mid + high == 3*mid;\nloop invariant mid >= 0;\nloop invariant low == high ==> mid == 0;\nloop invariant !(low == high) ==> mid > 0;\nloop invariant low == high ==> low == mid;\nloop invariant !(low == high) ==> low < mid;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int low = unknown_int();\n  int mid = unknown_int();\n  int high = unknown_int();\n  if (!(low == 0 && mid >= 1 && high == 2*mid)) return 0;\n  /*@\n\n\n\nloop invariant i4: mid >= 0;\n\n\n\n\n*/\nwhile (mid > 0) {\n    low = low + 1;\n    high = high - 1;\n    mid = mid - 1;\n  }\n  {;\n//@ assert(low == high);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int low = unknown_int();\n  int mid = unknown_int();\n  int high = unknown_int();\n  if (!(low == 0 && mid >= 1 && high == 2*mid)) return 0;\n  /*@\n\n*/\nwhile (mid > 0) {\n    low = low + 1;\n    high = high - 1;\n    mid = mid - 1;\n  }\n  {;\n//@ assert(low == high);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= low <= high;\nloop invariant high - low == mid;\nloop invariant mid <= mid';\nloop invariant low' - low == 1;\nloop invariant high' - high == 1;\nloop invariant high' == low;\nloop invariant mid' == 0;\nloop invariant high < 0 ==> low < 0;\nloop invariant mid < 0 ==> low < 0;\nloop invariant low < 0 ==> low' < 0;\nloop invariant high < 0 ==> high' < 0;\nloop invariant high' < 0 ==> low < 0;\nloop invariant mid < 0 ==> low' < 0;\nloop invariant low < 0 ==> low' < 0;\nloop invariant high' < 0 ==> high < 0;\nloop invariant mid < 0 ==> high < 0;\nloop invariant low < 0 ==> high < 0;\nloop invariant low' < 0 ==> low < 0;\nloop invariant low' < 0 ==> high' < 0;\nloop invariant high' < 0 ==> low' < 0;\nloop invariant high' < 0 ==> high < 0;\nloop invariant mid < 0 ==> low' < 0;\nloop invariant low' < 0 ==> mid < 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int low = unknown_int();\n  int mid = unknown_int();\n  int high = unknown_int();\n  if (!(low == 0 && mid >= 1 && high == 2*mid)) return 0;\n  /*@\nloop invariant i1: 0 <= low <= high;\nloop invariant i2: high - low == mid;\n\nloop invariant i4: low' - low == 1;\nloop invariant i5: high' - high == 1;\nloop invariant i6: high' == low;\nloop invariant i7: mid' == 0;\nloop invariant i8: high < 0 ==> low < 0;\nloop invariant i9: mid < 0 ==> low < 0;\nloop invariant i10: low < 0 ==> low' < 0;\nloop invariant i11: high < 0 ==> high' < 0;\nloop invariant i12: high' < 0 ==> low < 0;\nloop invariant i13: mid < 0 ==> low' < 0;\nloop invariant i14: high' < 0 ==> high < 0;\nloop invariant i15: mid < 0 ==> high < 0;\nloop invariant i16: low < 0 ==> high < 0;\nloop invariant i17: low' < 0 ==> low < 0;\nloop invariant i18: low' < 0 ==> high' < 0;\nloop invariant i19: high' < 0 ==> low' < 0;\nloop invariant i20: low' < 0 ==> mid < 0;\n*/\nwhile (mid > 0) {\n    low = low + 1;\n    high = high - 1;\n    mid = mid - 1;\n  }\n  {;\n//@ assert(low == high);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 22,
                "annotations": "```\n/*@\nloop invariant 0 <= mid <= high - low;\nloop invariant (high - mid) == low;\nloop invariant (low >= mid) == (mid <= 0);\nloop invariant (mid > 0) ==> (low < high);\nloop invariant (mid > 0) ==> (high > low);\nloop invariant (mid > 0) ==> (low <= high - 1);\nloop invariant (mid > 0) ==> (high - 1 >= low);\nloop invariant (mid > 0) ==> (low <= mid);\nloop invariant (mid > 0) ==> (mid <= high - low);\nloop invariant (mid > 0) ==> (high - low >= mid);\nloop invariant (mid > 0) ==> (low < high - 1);\nloop invariant (mid > 0) ==> (high - 1 > low);\nloop invariant (mid > 0) ==> (low <= mid - 1);\nloop invariant (mid > 0) ==> (mid - 1 <= high - low);\nloop invariant (mid > 0) ==> (high - low >= mid - 1);\nloop invariant (mid > 0) ==> (low < high - 2);\nloop invariant (mid > 0) ==> (high - 2 > low);\nloop invariant (mid > 0) ==> (low <= mid - 2);\nloop invariant (mid > 0) ==> (mid - 2 <= high - low);\nloop invariant (mid > 0) ==> (high - low >= mid - 2);\nloop invariant (mid > 0) ==> (low < high - 3);\nloop invariant (mid > 0) ==> (high - 3 > low);\nloop invariant (mid > 0) ==> (low <= mid - 3);\nloop invariant (mid > 0) ==> (mid - 3 <= high - low);\nloop invariant (mid > 0) ==> (high - low >= mid - 3);\nloop invariant (mid > 0) ==> (low < high - 4);\nloop invariant (mid > 0) ==> (high - 4 > low);\nloop invariant (mid > 0) ==> (low <= mid - 4);\nloop invariant (mid > 0) ==> (mid - 4 <= high - low);\nloop invariant (mid > 0) ==> (high - low >= mid - 4);\nloop invariant (mid > 0) ==> (low < high - 5);\nloop invariant (mid > 0) ==> (high - 5 > low);\nloop invariant (mid > 0) ==> (low <= mid - 5);\nloop invariant (mid > 0) ==> (mid - 5 <= high - low);\nloop invariant (mid > 0) ==> (high - low >= mid - 5);\nloop invariant (mid > 0) ==> (low < high - 6);\nloop invariant (mid > 0) ==> (high - 6 > low);\nloop invariant (mid > 0) ==> (low <= mid - 6);\nloop invariant (mid > 0) ==> (mid - 6 <= high - low);\nloop invariant (mid > 0) ==> (high - low >= mid - 6);\nloop invariant (mid > 0) ==> (low < high - 7);\nloop invariant (mid > 0) ==> (high - 7 > low);\nloop invariant (mid > 0) ==> (low <= mid - 7);\nloop invariant (mid > 0) ==> (mid - 7 <= high - low);\nloop invariant (mid > 0) ==> (high - low >= mid - 7);\nloop invariant (mid > 0) ==> (low < high - 8);\nloop invariant (mid > 0) ==> (high - 8 > low);\nloop invariant (mid > 0) ==> (low <= mid - 8);\nloop invariant (mid > 0) ==> (mid - 8 <= high - low);\nloop invariant (mid > 0) ==> (high - low >= mid - 8);\nloop invariant (mid > 0) ==> (low < high - 9);\nloop invariant (mid > 0) ==> (high - 9 > low);\nloop invariant (mid > 0) ==> (low <= mid - 9);\nloop invariant (mid > 0) ==> (mid - 9 <= high - low);\nloop invariant (mid > 0) ==> (high - low >= mid - 9);\nloop invariant (mid > 0) ==> (low < high - 10);\nloop invariant (mid > 0) ==> (high - 10 > low);\nloop invariant (mid > 0) ==> (low <= mid - 10);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int low = unknown_int();\n  int mid = unknown_int();\n  int high = unknown_int();\n  if (!(low == 0 && mid >= 1 && high == 2*mid)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (mid > 0) {\n    low = low + 1;\n    high = high - 1;\n    mid = mid - 1;\n  }\n  {;\n//@ assert(low == high);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= low <= low;\nloop invariant low <= mid <= mid;\nloop invariant low <= high <= high;\nloop invariant low <= mid + low <= mid + low;\nloop invariant low + mid + low <= high <= high;\nloop invariant low + mid + low == high;\nloop invariant high == mid + low;\nloop invariant low == mid + low;\nloop invariant low == mid + low;\nloop invariant mid == 0;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\nloop invariant mid == mid;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int low = unknown_int();\n  int mid = unknown_int();\n  int high = unknown_int();\n  if (!(low == 0 && mid >= 1 && high == 2*mid)) return 0;\n  /*@\nloop invariant i1: 0 <= low <= low;\n\n\nloop invariant i4: low <= mid + low <= mid + low;\n\n\n\n\n\nloop invariant i10: mid == mid;\n*/\nwhile (mid > 0) {\n    low = low + 1;\n    high = high - 1;\n    mid = mid - 1;\n  }\n  {;\n//@ assert(low == high);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= low <= mid <= high <= 2 * mid;\nloop invariant low + mid + high == 3 * mid;\nloop invariant mid == 0 ==> low == high;\nloop invariant low + high == 2 * mid ==> mid == 0;\nloop invariant mid == 0 ==> low == high;\nloop invariant low == high ==> mid == 0;\nloop invariant mid == 0 ==> low == high;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\nloop invariant low == high ==> mid == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int low = unknown_int();\n  int mid = unknown_int();\n  int high = unknown_int();\n  if (!(low == 0 && mid >= 1 && high == 2*mid)) return 0;\n  /*@\n\n\n\n\n\n*/\nwhile (mid > 0) {\n    low = low + 1;\n    high = high - 1;\n    mid = mid - 1;\n  }\n  {;\n//@ assert(low == high);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant low + mid = mid + high;\nloop invariant mid <= high;\nloop invariant low <= mid;\nloop invariant low <= high;\nloop invariant mid >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int low = unknown_int();\n  int mid = unknown_int();\n  int high = unknown_int();\n  if (!(low == 0 && mid >= 1 && high == 2*mid)) return 0;\n  /*@\n\nloop invariant i2: mid <= high;\n\n\n\n*/\nwhile (mid > 0) {\n    low = low + 1;\n    high = high - 1;\n    mid = mid - 1;\n  }\n  {;\n//@ assert(low == high);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= low <= high; loop invariant low <= mid <= high; loop invariant low <= high <= 2*mid; loop invariant low == high ==> mid == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int low = unknown_int();\n  int mid = unknown_int();\n  int high = unknown_int();\n  if (!(low == 0 && mid >= 1 && high == 2*mid)) return 0;\n  /*@\n\n*/\nwhile (mid > 0) {\n    low = low + 1;\n    high = high - 1;\n    mid = mid - 1;\n  }\n  {;\n//@ assert(low == high);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= low <= high;\nloop invariant 0 <= mid <= high;\nloop invariant low + mid + high == 3*mid;\nloop invariant low + mid + high == 2*high;\nloop invariant low <= high;\nloop invariant high >= low;\nloop invariant mid >= 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\nloop invariant low == high;\nloop invariant mid == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int low = unknown_int();\n  int mid = unknown_int();\n  int high = unknown_int();\n  if (!(low == 0 && mid >= 1 && high == 2*mid)) return 0;\n  /*@\n\nloop invariant i2: 0 <= mid <= high;\n\n\n\n\nloop invariant i7: mid >= 0;\n\n\n*/\nwhile (mid > 0) {\n    low = low + 1;\n    high = high - 1;\n    mid = mid - 1;\n  }\n  {;\n//@ assert(low == high);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= mid <= mid<=high;\nloop invariant low = high - mid;\nloop invariant low<=high;\nloop invariant low>=0;\nloop invariant mid>=0;\nloop invariant high>=0;\nloop invariant mid+low+high = mid+mid+1+mid;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\nloop invariant low<=high;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int low = unknown_int();\n  int mid = unknown_int();\n  int high = unknown_int();\n  if (!(low == 0 && mid >= 1 && high == 2*mid)) return 0;\n  /*@\nloop invariant i1: 0 <= mid <= mid<=high;\n\n\nloop invariant i4: low>=0;\nloop invariant i5: mid>=0;\nloop invariant i6: high>=0;\n\n*/\nwhile (mid > 0) {\n    low = low + 1;\n    high = high - 1;\n    mid = mid - 1;\n  }\n  {;\n//@ assert(low == high);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 49,
                "annotations": "```\n/*@\nloop invariant 1 <= low <= 2*mid;\nloop invariant 1 <= mid <= 2*mid;\nloop invariant 2*mid <= high <= 4*mid;\nloop invariant low <= high;\nloop invariant low + mid <= high;\nloop invariant low + mid + high <= 6*mid;\nloop invariant low + mid + high + mid <= 8*mid;\nloop invariant low + mid + high + 2*mid <= 10*mid;\nloop invariant low + mid + high + 3*mid <= 12*mid;\nloop invariant low + mid + high + 4*mid <= 14*mid;\nloop invariant low + mid + high + 5*mid <= 16*mid;\nloop invariant low + mid + high + 6*mid <= 18*mid;\nloop invariant low + mid + high + 7*mid <= 20*mid;\nloop invariant low + mid + high + 8*mid <= 22*mid;\nloop invariant low + mid + high + 9*mid <= 24*mid;\nloop invariant low + mid + high + 10*mid <= 26*mid;\nloop invariant low + mid + high + 11*mid <= 28*mid;\nloop invariant low + mid + high + 12*mid <= 30*mid;\nloop invariant low + mid + high + 13*mid <= 32*mid;\nloop invariant low + mid + high + 14*mid <= 34*mid;\nloop invariant low + mid + high + 15*mid <= 36*mid;\nloop invariant low + mid + high + 16*mid <= 38*mid;\nloop invariant low + mid + high + 17*mid <= 40*mid;\nloop invariant low + mid + high + 18*mid <= 42*mid;\nloop invariant low + mid + high + 19*mid <= 44*mid;\nloop invariant low + mid + high + 20*mid <= 46*mid;\nloop invariant low + mid + high + 21*mid <= 48*mid;\nloop invariant low + mid + high + 22*mid <= 50*mid;\nloop invariant low + mid + high + 23*mid <= 52*mid;\nloop invariant low + mid + high + 24*mid <= 54*mid;\nloop invariant low + mid + high + 25*mid <= 56*mid;\nloop invariant low + mid + high + 26*mid <= 58*mid;\nloop invariant low + mid + high + 27*mid <= 60*mid;\nloop invariant low + mid + high + 28*mid <= 62*mid;\nloop invariant low + mid + high + 29*mid <= 64*mid;\nloop invariant low + mid + high + 30*mid <= 66*mid;\nloop invariant low + mid + high + 31*mid <= 68*mid;\nloop invariant low + mid + high + 32*mid <= 70*mid;\nloop invariant low + mid + high + 33*mid <= 72*mid;\nloop invariant low + mid + high + 34*mid <= 74*mid;\nloop invariant low + mid + high + 35*mid <= 76*mid;\nloop invariant low + mid + high + 36*mid <= 78*mid;\nloop invariant low + mid + high + 37*mid <= 80*mid;\nloop invariant low + mid + high + 38*mid <= 82*mid;\nloop invariant low + mid + high + 39*mid <= 84*mid;\nloop invariant low + mid + high + 40*mid <= 86*mid;\nloop invariant low + mid + high + 41*mid <= 88*mid;\nloop invariant low + mid + high + 42*mid <= 90*mid;\nloop invariant low + mid + high + 43*mid <= 92*mid;\nloop invariant low + mid + high + 44*mid <= 94*mid;\nloop invariant low + mid + high + 45*mid <= 96*mid;\nloop invariant low + mid + high + 46*mid <= 98*mid;\nloop invariant low + mid + high + 47*mid <= 100*mid;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int low = unknown_int();\n  int mid = unknown_int();\n  int high = unknown_int();\n  if (!(low == 0 && mid >= 1 && high == 2*mid)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (mid > 0) {\n    low = low + 1;\n    high = high - 1;\n    mid = mid - 1;\n  }\n  {;\n//@ assert(low == high);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 38: lexical error, illegal character '",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int low = unknown_int();\n  int mid = unknown_int();\n  int high = unknown_int();\n  if (!(low == 0 && mid >= 1 && high == 2*mid)) return 0;\n  /*@\nloop invariant i1: 0 <= low <= high;\nloop invariant i2: mid == 0;\nloop invariant i3: low == high;\nloop invariant i4: low >= high;\nloop invariant i5: 0 <= mid <= 1;\nloop invariant i6: 0 <= low <= 1;\nloop invariant i7: 2 < high <= 2;\nloop invariant i8: low <= high;\nloop invariant i9: low + high <= 2*mid;\nloop invariant i10: mid > 0 ==> low == high;\nloop invariant i11: 0 <= low;\nloop invariant i12: 0 <= mid;\nloop invariant i13: mid <= high;\nloop invariant i14: low + mid + high == 3*mid;\nloop invariant i15: low <= mid <= high;\nloop invariant i16: mid >= 0;\nloop invariant i17: low == high ==> mid == 0;\nloop invariant i18: !(low == high) ==> mid > 0;\nloop invariant i19: low == high ==> low == mid;\nloop invariant i20: !(low == high) ==> low < mid;\nloop invariant i21: high - low == mid;\nloop invariant i22: mid <= mid';\nloop invariant i23: low' - low == 1;\nloop invariant i24: high' - high == 1;\nloop invariant i25: high' == low;\nloop invariant i26: mid' == 0;\nloop invariant i27: high < 0 ==> low < 0;\nloop invariant i28: mid < 0 ==> low < 0;\nloop invariant i29: low < 0 ==> low' < 0;\nloop invariant i30: high < 0 ==> high' < 0;\nloop invariant i31: high' < 0 ==> low < 0;\nloop invariant i32: mid < 0 ==> low' < 0;\nloop invariant i33: high' < 0 ==> high < 0;\nloop invariant i34: mid < 0 ==> high < 0;\nloop invariant i35: low < 0 ==> high < 0;\nloop invariant i36: low' < 0 ==> low < 0;\nloop invariant i37: low' < 0 ==> high' < 0;\nloop invariant i38: high' < 0 ==> low' < 0;\nloop invariant i39: low' < 0 ==> mid < 0;\nloop invariant i40: 0 <= mid <= high - low;\nloop invariant i41: (high - mid) == low;\nloop invariant i42: (low >= mid) == (mid <= 0);\nloop invariant i43: (mid > 0) ==> (low < high);\nloop invariant i44: (mid > 0) ==> (high > low);\nloop invariant i45: (mid > 0) ==> (low <= high - 1);\nloop invariant i46: (mid > 0) ==> (high - 1 >= low);\nloop invariant i47: (mid > 0) ==> (low <= mid);\nloop invariant i48: (mid > 0) ==> (mid <= high - low);\nloop invariant i49: (mid > 0) ==> (high - low >= mid);\nloop invariant i50: (mid > 0) ==> (low < high - 1);\nloop invariant i51: (mid > 0) ==> (high - 1 > low);\nloop invariant i52: (mid > 0) ==> (low <= mid - 1);\nloop invariant i53: (mid > 0) ==> (mid - 1 <= high - low);\nloop invariant i54: (mid > 0) ==> (high - low >= mid - 1);\nloop invariant i55: (mid > 0) ==> (low < high - 2);\nloop invariant i56: (mid > 0) ==> (high - 2 > low);\nloop invariant i57: (mid > 0) ==> (low <= mid - 2);\nloop invariant i58: (mid > 0) ==> (mid - 2 <= high - low);\nloop invariant i59: (mid > 0) ==> (high - low >= mid - 2);\nloop invariant i60: (mid > 0) ==> (low < high - 3);\nloop invariant i61: (mid > 0) ==> (high - 3 > low);\nloop invariant i62: (mid > 0) ==> (low <= mid - 3);\nloop invariant i63: (mid > 0) ==> (mid - 3 <= high - low);\nloop invariant i64: (mid > 0) ==> (high - low >= mid - 3);\nloop invariant i65: (mid > 0) ==> (low < high - 4);\nloop invariant i66: (mid > 0) ==> (high - 4 > low);\nloop invariant i67: (mid > 0) ==> (low <= mid - 4);\nloop invariant i68: (mid > 0) ==> (mid - 4 <= high - low);\nloop invariant i69: (mid > 0) ==> (high - low >= mid - 4);\nloop invariant i70: (mid > 0) ==> (low < high - 5);\nloop invariant i71: (mid > 0) ==> (high - 5 > low);\nloop invariant i72: (mid > 0) ==> (low <= mid - 5);\nloop invariant i73: (mid > 0) ==> (mid - 5 <= high - low);\nloop invariant i74: (mid > 0) ==> (high - low >= mid - 5);\nloop invariant i75: (mid > 0) ==> (low < high - 6);\nloop invariant i76: (mid > 0) ==> (high - 6 > low);\nloop invariant i77: (mid > 0) ==> (low <= mid - 6);\nloop invariant i78: (mid > 0) ==> (mid - 6 <= high - low);\nloop invariant i79: (mid > 0) ==> (high - low >= mid - 6);\nloop invariant i80: (mid > 0) ==> (low < high - 7);\nloop invariant i81: (mid > 0) ==> (high - 7 > low);\nloop invariant i82: (mid > 0) ==> (low <= mid - 7);\nloop invariant i83: (mid > 0) ==> (mid - 7 <= high - low);\nloop invariant i84: (mid > 0) ==> (high - low >= mid - 7);\nloop invariant i85: (mid > 0) ==> (low < high - 8);\nloop invariant i86: (mid > 0) ==> (high - 8 > low);\nloop invariant i87: (mid > 0) ==> (low <= mid - 8);\nloop invariant i88: (mid > 0) ==> (mid - 8 <= high - low);\nloop invariant i89: (mid > 0) ==> (high - low >= mid - 8);\nloop invariant i90: (mid > 0) ==> (low < high - 9);\nloop invariant i91: (mid > 0) ==> (high - 9 > low);\nloop invariant i92: (mid > 0) ==> (low <= mid - 9);\nloop invariant i93: (mid > 0) ==> (mid - 9 <= high - low);\nloop invariant i94: (mid > 0) ==> (high - low >= mid - 9);\nloop invariant i95: (mid > 0) ==> (low < high - 10);\nloop invariant i96: (mid > 0) ==> (high - 10 > low);\nloop invariant i97: (mid > 0) ==> (low <= mid - 10);\nloop invariant i98: 0 <= low <= low;\nloop invariant i99: low <= mid <= mid;\nloop invariant i100: low <= high <= high;\nloop invariant i101: low <= mid + low <= mid + low;\nloop invariant i102: low + mid + low <= high <= high;\nloop invariant i103: low + mid + low == high;\nloop invariant i104: high == mid + low;\nloop invariant i105: low == mid + low;\nloop invariant i106: mid == mid;\nloop invariant i107: 0 <= low <= mid <= high <= 2 * mid;\nloop invariant i108: low + mid + high == 3 * mid;\nloop invariant i109: mid == 0 ==> low == high;\nloop invariant i110: low + high == 2 * mid ==> mid == 0;\nloop invariant i111: low + mid = mid + high;\nloop invariant i112: low <= mid;\nloop invariant i113: mid >= 1;\nloop invariant i114: 0 <= low <= high; loop invariant low <= mid <= high; loop invariant low <= high <= 2*mid; loop invariant low == high ==> mid == 0;\nloop invariant i115: 0 <= mid <= high;\nloop invariant i116: low + mid + high == 2*high;\nloop invariant i117: high >= low;\nloop invariant i118: 0 <= mid <= mid<=high;\nloop invariant i119: low = high - mid;\nloop invariant i120: low<=high;\nloop invariant i121: low>=0;\nloop invariant i122: mid>=0;\nloop invariant i123: high>=0;\nloop invariant i124: mid+low+high = mid+mid+1+mid;\nloop invariant i125: 1 <= low <= 2*mid;\nloop invariant i126: 1 <= mid <= 2*mid;\nloop invariant i127: 2*mid <= high <= 4*mid;\nloop invariant i128: low + mid <= high;\nloop invariant i129: low + mid + high <= 6*mid;\nloop invariant i130: low + mid + high + mid <= 8*mid;\nloop invariant i131: low + mid + high + 2*mid <= 10*mid;\nloop invariant i132: low + mid + high + 3*mid <= 12*mid;\nloop invariant i133: low + mid + high + 4*mid <= 14*mid;\nloop invariant i134: low + mid + high + 5*mid <= 16*mid;\nloop invariant i135: low + mid + high + 6*mid <= 18*mid;\nloop invariant i136: low + mid + high + 7*mid <= 20*mid;\nloop invariant i137: low + mid + high + 8*mid <= 22*mid;\nloop invariant i138: low + mid + high + 9*mid <= 24*mid;\nloop invariant i139: low + mid + high + 10*mid <= 26*mid;\nloop invariant i140: low + mid + high + 11*mid <= 28*mid;\nloop invariant i141: low + mid + high + 12*mid <= 30*mid;\nloop invariant i142: low + mid + high + 13*mid <= 32*mid;\nloop invariant i143: low + mid + high + 14*mid <= 34*mid;\nloop invariant i144: low + mid + high + 15*mid <= 36*mid;\nloop invariant i145: low + mid + high + 16*mid <= 38*mid;\nloop invariant i146: low + mid + high + 17*mid <= 40*mid;\nloop invariant i147: low + mid + high + 18*mid <= 42*mid;\nloop invariant i148: low + mid + high + 19*mid <= 44*mid;\nloop invariant i149: low + mid + high + 20*mid <= 46*mid;\nloop invariant i150: low + mid + high + 21*mid <= 48*mid;\nloop invariant i151: low + mid + high + 22*mid <= 50*mid;\nloop invariant i152: low + mid + high + 23*mid <= 52*mid;\nloop invariant i153: low + mid + high + 24*mid <= 54*mid;\nloop invariant i154: low + mid + high + 25*mid <= 56*mid;\nloop invariant i155: low + mid + high + 26*mid <= 58*mid;\nloop invariant i156: low + mid + high + 27*mid <= 60*mid;\nloop invariant i157: low + mid + high + 28*mid <= 62*mid;\nloop invariant i158: low + mid + high + 29*mid <= 64*mid;\nloop invariant i159: low + mid + high + 30*mid <= 66*mid;\nloop invariant i160: low + mid + high + 31*mid <= 68*mid;\nloop invariant i161: low + mid + high + 32*mid <= 70*mid;\nloop invariant i162: low + mid + high + 33*mid <= 72*mid;\nloop invariant i163: low + mid + high + 34*mid <= 74*mid;\nloop invariant i164: low + mid + high + 35*mid <= 76*mid;\nloop invariant i165: low + mid + high + 36*mid <= 78*mid;\nloop invariant i166: low + mid + high + 37*mid <= 80*mid;\nloop invariant i167: low + mid + high + 38*mid <= 82*mid;\nloop invariant i168: low + mid + high + 39*mid <= 84*mid;\nloop invariant i169: low + mid + high + 40*mid <= 86*mid;\nloop invariant i170: low + mid + high + 41*mid <= 88*mid;\nloop invariant i171: low + mid + high + 42*mid <= 90*mid;\nloop invariant i172: low + mid + high + 43*mid <= 92*mid;\nloop invariant i173: low + mid + high + 44*mid <= 94*mid;\nloop invariant i174: low + mid + high + 45*mid <= 96*mid;\nloop invariant i175: low + mid + high + 46*mid <= 98*mid;\nloop invariant i176: low + mid + high + 47*mid <= 100*mid;\n*/\nwhile (mid > 0) {\n    low = low + 1;\n    high = high - 1;\n    mid = mid - 1;\n  }\n  {;\n//@ assert(low == high);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 3,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int low = unknown_int();\n  int mid = unknown_int();\n  int high = unknown_int();\n  if (!(low == 0 && mid >= 1 && high == 2*mid)) return 0;\n  /*@\nloop invariant i1: 0 <= low <= high;\nloop invariant i2: mid == 0;\nloop invariant i3: low == high;\nloop invariant i4: low >= high;\nloop invariant i5: 0 <= mid <= 1;\nloop invariant i6: 0 <= low <= 1;\nloop invariant i7: 2 < high <= 2;\nloop invariant i8: low <= high;\nloop invariant i9: low + high <= 2*mid;\nloop invariant i10: mid > 0 ==> low == high;\nloop invariant i11: 0 <= low;\nloop invariant i12: 0 <= mid;\nloop invariant i13: mid <= high;\nloop invariant i14: low + mid + high == 3*mid;\nloop invariant i15: low <= mid <= high;\nloop invariant i16: mid >= 0;\nloop invariant i17: low == high ==> mid == 0;\nloop invariant i18: !(low == high) ==> mid > 0;\nloop invariant i19: low == high ==> low == mid;\nloop invariant i20: !(low == high) ==> low < mid;\nloop invariant i21: high - low == mid;\n\nloop invariant i23: low' - low == 1;\nloop invariant i24: high' - high == 1;\nloop invariant i25: high' == low;\nloop invariant i26: mid' == 0;\nloop invariant i27: high < 0 ==> low < 0;\nloop invariant i28: mid < 0 ==> low < 0;\nloop invariant i29: low < 0 ==> low' < 0;\nloop invariant i30: high < 0 ==> high' < 0;\nloop invariant i31: high' < 0 ==> low < 0;\nloop invariant i32: mid < 0 ==> low' < 0;\nloop invariant i33: high' < 0 ==> high < 0;\nloop invariant i34: mid < 0 ==> high < 0;\nloop invariant i35: low < 0 ==> high < 0;\nloop invariant i36: low' < 0 ==> low < 0;\nloop invariant i37: low' < 0 ==> high' < 0;\nloop invariant i38: high' < 0 ==> low' < 0;\nloop invariant i39: low' < 0 ==> mid < 0;\nloop invariant i40: 0 <= mid <= high - low;\nloop invariant i41: (high - mid) == low;\nloop invariant i42: (low >= mid) == (mid <= 0);\nloop invariant i43: (mid > 0) ==> (low < high);\nloop invariant i44: (mid > 0) ==> (high > low);\nloop invariant i45: (mid > 0) ==> (low <= high - 1);\nloop invariant i46: (mid > 0) ==> (high - 1 >= low);\nloop invariant i47: (mid > 0) ==> (low <= mid);\nloop invariant i48: (mid > 0) ==> (mid <= high - low);\nloop invariant i49: (mid > 0) ==> (high - low >= mid);\nloop invariant i50: (mid > 0) ==> (low < high - 1);\nloop invariant i51: (mid > 0) ==> (high - 1 > low);\nloop invariant i52: (mid > 0) ==> (low <= mid - 1);\nloop invariant i53: (mid > 0) ==> (mid - 1 <= high - low);\nloop invariant i54: (mid > 0) ==> (high - low >= mid - 1);\nloop invariant i55: (mid > 0) ==> (low < high - 2);\nloop invariant i56: (mid > 0) ==> (high - 2 > low);\nloop invariant i57: (mid > 0) ==> (low <= mid - 2);\nloop invariant i58: (mid > 0) ==> (mid - 2 <= high - low);\nloop invariant i59: (mid > 0) ==> (high - low >= mid - 2);\nloop invariant i60: (mid > 0) ==> (low < high - 3);\nloop invariant i61: (mid > 0) ==> (high - 3 > low);\nloop invariant i62: (mid > 0) ==> (low <= mid - 3);\nloop invariant i63: (mid > 0) ==> (mid - 3 <= high - low);\nloop invariant i64: (mid > 0) ==> (high - low >= mid - 3);\nloop invariant i65: (mid > 0) ==> (low < high - 4);\nloop invariant i66: (mid > 0) ==> (high - 4 > low);\nloop invariant i67: (mid > 0) ==> (low <= mid - 4);\nloop invariant i68: (mid > 0) ==> (mid - 4 <= high - low);\nloop invariant i69: (mid > 0) ==> (high - low >= mid - 4);\nloop invariant i70: (mid > 0) ==> (low < high - 5);\nloop invariant i71: (mid > 0) ==> (high - 5 > low);\nloop invariant i72: (mid > 0) ==> (low <= mid - 5);\nloop invariant i73: (mid > 0) ==> (mid - 5 <= high - low);\nloop invariant i74: (mid > 0) ==> (high - low >= mid - 5);\nloop invariant i75: (mid > 0) ==> (low < high - 6);\nloop invariant i76: (mid > 0) ==> (high - 6 > low);\nloop invariant i77: (mid > 0) ==> (low <= mid - 6);\nloop invariant i78: (mid > 0) ==> (mid - 6 <= high - low);\nloop invariant i79: (mid > 0) ==> (high - low >= mid - 6);\nloop invariant i80: (mid > 0) ==> (low < high - 7);\nloop invariant i81: (mid > 0) ==> (high - 7 > low);\nloop invariant i82: (mid > 0) ==> (low <= mid - 7);\nloop invariant i83: (mid > 0) ==> (mid - 7 <= high - low);\nloop invariant i84: (mid > 0) ==> (high - low >= mid - 7);\nloop invariant i85: (mid > 0) ==> (low < high - 8);\nloop invariant i86: (mid > 0) ==> (high - 8 > low);\nloop invariant i87: (mid > 0) ==> (low <= mid - 8);\nloop invariant i88: (mid > 0) ==> (mid - 8 <= high - low);\nloop invariant i89: (mid > 0) ==> (high - low >= mid - 8);\nloop invariant i90: (mid > 0) ==> (low < high - 9);\nloop invariant i91: (mid > 0) ==> (high - 9 > low);\nloop invariant i92: (mid > 0) ==> (low <= mid - 9);\nloop invariant i93: (mid > 0) ==> (mid - 9 <= high - low);\nloop invariant i94: (mid > 0) ==> (high - low >= mid - 9);\nloop invariant i95: (mid > 0) ==> (low < high - 10);\nloop invariant i96: (mid > 0) ==> (high - 10 > low);\nloop invariant i97: (mid > 0) ==> (low <= mid - 10);\nloop invariant i98: 0 <= low <= low;\nloop invariant i99: low <= mid <= mid;\nloop invariant i100: low <= high <= high;\nloop invariant i101: low <= mid + low <= mid + low;\nloop invariant i102: low + mid + low <= high <= high;\nloop invariant i103: low + mid + low == high;\nloop invariant i104: high == mid + low;\nloop invariant i105: low == mid + low;\nloop invariant i106: mid == mid;\nloop invariant i107: 0 <= low <= mid <= high <= 2 * mid;\nloop invariant i108: low + mid + high == 3 * mid;\nloop invariant i109: mid == 0 ==> low == high;\nloop invariant i110: low + high == 2 * mid ==> mid == 0;\nloop invariant i111: low + mid = mid + high;\nloop invariant i112: low <= mid;\nloop invariant i113: mid >= 1;\nloop invariant i114: 0 <= low <= high; loop invariant low <= mid <= high; loop invariant low <= high <= 2*mid; loop invariant low == high ==> mid == 0;\nloop invariant i115: 0 <= mid <= high;\nloop invariant i116: low + mid + high == 2*high;\nloop invariant i117: high >= low;\nloop invariant i118: 0 <= mid <= mid<=high;\nloop invariant i119: low = high - mid;\nloop invariant i120: low<=high;\nloop invariant i121: low>=0;\nloop invariant i122: mid>=0;\nloop invariant i123: high>=0;\nloop invariant i124: mid+low+high = mid+mid+1+mid;\nloop invariant i125: 1 <= low <= 2*mid;\nloop invariant i126: 1 <= mid <= 2*mid;\nloop invariant i127: 2*mid <= high <= 4*mid;\nloop invariant i128: low + mid <= high;\nloop invariant i129: low + mid + high <= 6*mid;\nloop invariant i130: low + mid + high + mid <= 8*mid;\nloop invariant i131: low + mid + high + 2*mid <= 10*mid;\nloop invariant i132: low + mid + high + 3*mid <= 12*mid;\nloop invariant i133: low + mid + high + 4*mid <= 14*mid;\nloop invariant i134: low + mid + high + 5*mid <= 16*mid;\nloop invariant i135: low + mid + high + 6*mid <= 18*mid;\nloop invariant i136: low + mid + high + 7*mid <= 20*mid;\nloop invariant i137: low + mid + high + 8*mid <= 22*mid;\nloop invariant i138: low + mid + high + 9*mid <= 24*mid;\nloop invariant i139: low + mid + high + 10*mid <= 26*mid;\nloop invariant i140: low + mid + high + 11*mid <= 28*mid;\nloop invariant i141: low + mid + high + 12*mid <= 30*mid;\nloop invariant i142: low + mid + high + 13*mid <= 32*mid;\nloop invariant i143: low + mid + high + 14*mid <= 34*mid;\nloop invariant i144: low + mid + high + 15*mid <= 36*mid;\nloop invariant i145: low + mid + high + 16*mid <= 38*mid;\nloop invariant i146: low + mid + high + 17*mid <= 40*mid;\nloop invariant i147: low + mid + high + 18*mid <= 42*mid;\nloop invariant i148: low + mid + high + 19*mid <= 44*mid;\nloop invariant i149: low + mid + high + 20*mid <= 46*mid;\nloop invariant i150: low + mid + high + 21*mid <= 48*mid;\nloop invariant i151: low + mid + high + 22*mid <= 50*mid;\nloop invariant i152: low + mid + high + 23*mid <= 52*mid;\nloop invariant i153: low + mid + high + 24*mid <= 54*mid;\nloop invariant i154: low + mid + high + 25*mid <= 56*mid;\nloop invariant i155: low + mid + high + 26*mid <= 58*mid;\nloop invariant i156: low + mid + high + 27*mid <= 60*mid;\nloop invariant i157: low + mid + high + 28*mid <= 62*mid;\nloop invariant i158: low + mid + high + 29*mid <= 64*mid;\nloop invariant i159: low + mid + high + 30*mid <= 66*mid;\nloop invariant i160: low + mid + high + 31*mid <= 68*mid;\nloop invariant i161: low + mid + high + 32*mid <= 70*mid;\nloop invariant i162: low + mid + high + 33*mid <= 72*mid;\nloop invariant i163: low + mid + high + 34*mid <= 74*mid;\nloop invariant i164: low + mid + high + 35*mid <= 76*mid;\nloop invariant i165: low + mid + high + 36*mid <= 78*mid;\nloop invariant i166: low + mid + high + 37*mid <= 80*mid;\nloop invariant i167: low + mid + high + 38*mid <= 82*mid;\nloop invariant i168: low + mid + high + 39*mid <= 84*mid;\nloop invariant i169: low + mid + high + 40*mid <= 86*mid;\nloop invariant i170: low + mid + high + 41*mid <= 88*mid;\nloop invariant i171: low + mid + high + 42*mid <= 90*mid;\nloop invariant i172: low + mid + high + 43*mid <= 92*mid;\nloop invariant i173: low + mid + high + 44*mid <= 94*mid;\nloop invariant i174: low + mid + high + 45*mid <= 96*mid;\nloop invariant i175: low + mid + high + 46*mid <= 98*mid;\nloop invariant i176: low + mid + high + 47*mid <= 100*mid;\n*/\nwhile (mid > 0) {\n    low = low + 1;\n    high = high - 1;\n    mid = mid - 1;\n  }\n  {;\n//@ assert(low == high);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c"
        ],
        "skipped": [],
        "total": 136,
        "success_count": 119,
        "failure_count": 17,
        "success_rate": 0.875
    }
}