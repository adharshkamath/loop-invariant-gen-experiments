{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/46.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c == n) ==> (c == 1);\nloop invariant unknown() ==> (c == n);\nloop invariant !unknown() ==> (c <= n);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= c <= n;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant c == 1 ==> c == n;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= c <= n;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= n;\nloop invariant c <= n ==> c <= n + 1;\nloop invariant c > n ==> c <= n + 1;\nloop invariant c <= n ==> c <= n;\nloop invariant c > n ==> c <= n;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= c <= n;\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\nloop invariant c == 1 ==> (c <= n && c >= 1);\nloop invariant c != 1 ==> (c <= n && c != 1);\nloop invariant c != n ==> (c <= n && c != n);\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\nloop invariant c == 1 ==> (c <= n && c >= 1);\nloop invariant c != 1 ==> (c <= n && c != 1);\nloop invariant c != n ==> (c <= n && c != n);\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\nloop invariant c == 1 ==> (c <= n && c >= 1);\nloop invariant c != 1 ==> (c <= n && c != 1);\nloop invariant c != n ==> (c <= n && c != n);\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\nloop invariant c == 1 ==> (c <= n && c >= 1);\nloop invariant c != 1 ==> (c <= n && c != 1);\nloop invariant c != n ==> (c <= n && c != n);\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\nloop invariant c == 1 ==> (c <= n && c >= 1);\nloop invariant c != 1 ==> (c <= n && c != 1);\nloop invariant c != n ==> (c <= n && c != n);\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\nloop invariant c == 1 ==> (c <= n && c >= 1);\nloop invariant c != 1 ==> (c <= n && c != 1);\nloop invariant c != n ==> (c <= n && c != n);\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\nloop invariant c == 1 ==> (c <= n && c >= 1);\nloop invariant c != 1 ==> (c <= n && c != 1);\nloop invariant c != n ==> (c <= n && c != n);\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\nloop invariant c == 1 ==> (c <= n && c >= 1);\nloop invariant c != 1 ==> (c <= n && c != 1);\nloop invariant c != n ==> (c <= n && c != n);\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\nloop invariant c == 1 ==> (c <= n && c >= 1);\nloop invariant c != 1 ==> (c <= n && c != 1);\nloop invariant c != n ==> (c <= n && c != n);\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\nloop invariant c == 1 ==> (c <= n && c >= 1);\nloop invariant c != 1 ==> (c <= n && c != 1);\nloop invariant c != n ==> (c <= n && c != n);\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (If c == n then c == 1 else c <= n);\nloop invariant (If c != n then c >= 1 else c == n);\nloop invariant (If c == n then c == 1 else c <= n ==> (If c != n then c >= 1 else c == n));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c != n) ==> (c <= n);\n*/\n```",
            "```\n/*@\nloop invariant c >= 0;\nloop invariant c <= n;\n*/\n```",
            "```\n/*@\nloop invariant c <= n;\nloop invariant n > 0;\nloop invariant n >= 1;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant if (unknown()) then (c <= n) ==> (c <= n) else (c == n) ==> (c == 1);\nloop invariant if (unknown()) then (c == n) ==> (c == n) else (c != n) ==> (c == 1);\nloop invariant (c == n) ==> (c == 1);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c == 1) ==> (c == 1);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\nloop invariant n <= 1;\nloop invariant 1 <= c;\nloop invariant c == n;\nloop invariant c != n;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == 1;\nloop invariant n != 1;\nloop invariant c == 1;\nloop invariant c != 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c != n;\nloop invariant c == n ==> c == n;\nloop invariant c != n ==> c != n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n;\nloop invariant c == n ==> c == n ==> c != n;\nloop invariant c != n ==> c != n ==> c != n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n;\nloop invariant c == n ==> c == n ==> c != n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c != n;\nloop invariant c == n ==> c == n ==> c != n ==> c == n ==> c != n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n;\nloop invariant c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n;\nloop invariant c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n;\nloop invariant c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n ==> c != n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n;\nloop invariant c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n ==> c != n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n;\nloop invariant c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n ==> c != n ==> c == n ==> c != n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n;\nloop invariant c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\n*/\n```",
            "```\n/*@\nloop invariant ( n > 0 ==> n >= c );\nloop invariant ( (c >= 0) ==> (c <= n) );\nloop invariant ( c > 0 ==> (c == n) ==> (c == 1) );\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: 0 <= n;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: 0 <= n;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c == n) ==> (c == 1);\nloop invariant unknown() ==> (c == n);\nloop invariant !unknown() ==> (c <= n);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c != n) ==> (c >= 0);\nloop invariant (c != n) ==> (c <= n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n\n\n\n\nloop invariant i6: (c != n) ==> (c >= 0);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= c <= n;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant c == 1 ==> c == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 1 <= c <= n;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= n;\nloop invariant c <= n ==> c <= n + 1;\nloop invariant c > n ==> c <= n + 1;\nloop invariant c <= n ==> c <= n;\nloop invariant c > n ==> c <= n;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\nloop invariant c <= n ==> c >= 1;\nloop invariant c > n ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c > n ==> c >= 0;\nloop invariant c <= n ==> c <= c;\nloop invariant c > n ==> c <= c;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: c <= n ==> c >= 0;\nloop invariant i3: c > n ==> c >= n;\nloop invariant i4: c <= n ==> c <= n + 1;\n\nloop invariant i6: c <= n ==> c <= n;\n\nloop invariant i8: c <= n ==> c <= c;\nloop invariant i9: c > n ==> c <= c;\n\nloop invariant i11: c > n ==> c >= 1;\nloop invariant i12: c > n ==> c >= 0;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 1 <= c <= n;\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\nloop invariant c == 1 ==> (c <= n && c >= 1);\nloop invariant c != 1 ==> (c <= n && c != 1);\nloop invariant c != n ==> (c <= n && c != n);\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\nloop invariant c == 1 ==> (c <= n && c >= 1);\nloop invariant c != 1 ==> (c <= n && c != 1);\nloop invariant c != n ==> (c <= n && c != n);\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\nloop invariant c == 1 ==> (c <= n && c >= 1);\nloop invariant c != 1 ==> (c <= n && c != 1);\nloop invariant c != n ==> (c <= n && c != n);\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\nloop invariant c == 1 ==> (c <= n && c >= 1);\nloop invariant c != 1 ==> (c <= n && c != 1);\nloop invariant c != n ==> (c <= n && c != n);\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\nloop invariant c == 1 ==> (c <= n && c >= 1);\nloop invariant c != 1 ==> (c <= n && c != 1);\nloop invariant c != n ==> (c <= n && c != n);\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\nloop invariant c == 1 ==> (c <= n && c >= 1);\nloop invariant c != 1 ==> (c <= n && c != 1);\nloop invariant c != n ==> (c <= n && c != n);\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\nloop invariant c == 1 ==> (c <= n && c >= 1);\nloop invariant c != 1 ==> (c <= n && c != 1);\nloop invariant c != n ==> (c <= n && c != n);\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\nloop invariant c == 1 ==> (c <= n && c >= 1);\nloop invariant c != 1 ==> (c <= n && c != 1);\nloop invariant c != n ==> (c <= n && c != n);\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\nloop invariant c == 1 ==> (c <= n && c >= 1);\nloop invariant c != 1 ==> (c <= n && c != 1);\nloop invariant c != n ==> (c <= n && c != n);\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\nloop invariant c == 1 ==> (c <= n && c >= 1);\nloop invariant c != 1 ==> (c <= n && c != 1);\nloop invariant c != n ==> (c <= n && c != n);\nloop invariant c == n ==> (c <= n && c >= n);\nloop invariant c < n ==> (c <= n && c < n);\nloop invariant c > n ==> (c <= n && c > n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: c == n ==> (c <= n && c >= n);\nloop invariant i3: c < n ==> (c <= n && c < n);\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (If c == n then c == 1 else c <= n);\nloop invariant (If c != n then c >= 1 else c == n);\nloop invariant (If c == n then c == 1 else c <= n ==> (If c != n then c >= 1 else c == n));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c != n) ==> (c <= n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: (c == n) ==> (c <= n);\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant c >= 0;\nloop invariant c <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: c >= 0;\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant c <= n;\nloop invariant n > 0;\nloop invariant n >= 1;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: c <= n;\nloop invariant i2: n > 0;\nloop invariant i3: n >= 1;\nloop invariant i4: c >= 0;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant if (unknown()) then (c <= n) ==> (c <= n) else (c == n) ==> (c == 1);\nloop invariant if (unknown()) then (c == n) ==> (c == n) else (c != n) ==> (c == 1);\nloop invariant (c == n) ==> (c == 1);\nloop invariant (c != n) ==> (c <= n);\nloop invariant (c == 1) ==> (c == 1);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\nloop invariant (c <= n) ==> (c <= n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n\n\n\n\nloop invariant i6: (c == 1) ==> (c == 1);\nloop invariant i7: (c <= n) ==> (c <= n);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\nloop invariant n <= 1;\nloop invariant 1 <= c;\nloop invariant c == n;\nloop invariant c != n;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == 1;\nloop invariant n != 1;\nloop invariant c == 1;\nloop invariant c != 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\nloop invariant c >= 1;\nloop invariant c <= n;\nloop invariant c >= n;\nloop invariant n >= 1;\nloop invariant n >= c;\nloop invariant n == c;\nloop invariant n != c;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c <= n;\nloop invariant i2: 0 <= n;\n\n\n\n\nloop invariant i7: c <= n;\n\nloop invariant i9: n >= c;\n\n\n\nloop invariant i13: n >= 1;\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c != n;\nloop invariant c == n ==> c == n;\nloop invariant c != n ==> c != n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n;\nloop invariant c == n ==> c == n ==> c != n;\nloop invariant c != n ==> c != n ==> c != n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n;\nloop invariant c == n ==> c == n ==> c != n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c != n;\nloop invariant c == n ==> c == n ==> c != n ==> c == n ==> c != n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n;\nloop invariant c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n;\nloop invariant c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n;\nloop invariant c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n ==> c != n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n;\nloop invariant c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n ==> c != n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n;\nloop invariant c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n ==> c != n ==> c == n ==> c != n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n;\nloop invariant c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n;\nloop invariant c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: 0 <= n;\n\nloop invariant i4: c >= 0;\nloop invariant i5: c == n ==> c <= n;\nloop invariant i6: c == n ==> c >= 0;\n\nloop invariant i8: c != n ==> c >= 0;\nloop invariant i9: c != n ==> c != n;\nloop invariant i10: c == n ==> c == n;\n\nloop invariant i12: c != n ==> c != n ==> c != n;\n\n\nloop invariant i15: c != n ==> c != n ==> c != n ==> c != n;\nloop invariant i16: c == n ==> c == n ==> c != n ==> c == n;\n\nloop invariant i18: c != n ==> c != n ==> c != n ==> c != n ==> c != n;\nloop invariant i19: c == n ==> c == n ==> c != n ==> c == n ==> c != n;\nloop invariant i20: c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n;\n\nloop invariant i22: c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n;\nloop invariant i23: c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n;\nloop invariant i24: c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n;\nloop invariant i25: c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c == n;\nloop invariant i26: c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n;\nloop invariant i27: c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n ==> c != n;\nloop invariant i28: c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c == n;\nloop invariant i29: c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n;\nloop invariant i30: c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n ==> c != n ==> c == n;\nloop invariant i31: c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n;\nloop invariant i32: c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n;\nloop invariant i33: c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n ==> c != n ==> c == n ==> c != n;\nloop invariant i34: c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n;\nloop invariant i35: c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n;\nloop invariant i36: c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n;\nloop invariant i37: c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n;\nloop invariant i38: c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant ( n > 0 ==> n >= c );\nloop invariant ( (c >= 0) ==> (c <= n) );\nloop invariant ( c > 0 ==> (c == n) ==> (c == 1) );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: ( n > 0 ==> n >= c );\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 21: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c <= n;\nloop invariant i2: 0 <= n;\nloop invariant i3: (c == n) ==> (c == 1);\nloop invariant i4: unknown() ==> (c == n);\nloop invariant i5: !unknown() ==> (c <= n);\nloop invariant i6: (c != n) ==> (c <= n);\nloop invariant i7: (c != n) ==> (c >= 0);\nloop invariant i8: 1 <= c <= n;\nloop invariant i9: c <= n;\nloop invariant i10: c >= 1;\nloop invariant i11: c == 1 ==> c == n;\nloop invariant i12: c <= n ==> c >= 0;\nloop invariant i13: c > n ==> c >= n;\nloop invariant i14: c <= n ==> c <= n + 1;\nloop invariant i15: c > n ==> c <= n + 1;\nloop invariant i16: c <= n ==> c <= n;\nloop invariant i17: c > n ==> c <= n;\nloop invariant i18: c <= n ==> c <= c;\nloop invariant i19: c > n ==> c <= c;\nloop invariant i20: c <= n ==> c >= 1;\nloop invariant i21: c > n ==> c >= 1;\nloop invariant i22: c > n ==> c >= 0;\nloop invariant i23: c == n ==> (c <= n && c >= n);\nloop invariant i24: c < n ==> (c <= n && c < n);\nloop invariant i25: c > n ==> (c <= n && c > n);\nloop invariant i26: c == 1 ==> (c <= n && c >= 1);\nloop invariant i27: c != 1 ==> (c <= n && c != 1);\nloop invariant i28: c != n ==> (c <= n && c != n);\nloop invariant i29: (If c == n then c == 1 else c <= n);\nloop invariant i30: (If c != n then c >= 1 else c == n);\nloop invariant i31: (If c == n then c == 1 else c <= n ==> (If c != n then c >= 1 else c == n));\nloop invariant i32: (c == n) ==> (c <= n);\nloop invariant i33: c >= 0;\nloop invariant i34: n > 0;\nloop invariant i35: n >= 1;\nloop invariant i36: if (unknown()) then (c <= n) ==> (c <= n) else (c == n) ==> (c == 1);\nloop invariant i37: if (unknown()) then (c == n) ==> (c == n) else (c != n) ==> (c == 1);\nloop invariant i38: (c == 1) ==> (c == 1);\nloop invariant i39: (c <= n) ==> (c <= n);\nloop invariant i40: n <= 1;\nloop invariant i41: 1 <= c;\nloop invariant i42: c == n;\nloop invariant i43: c != n;\nloop invariant i44: c >= n;\nloop invariant i45: n >= c;\nloop invariant i46: n == c;\nloop invariant i47: n != c;\nloop invariant i48: n == 1;\nloop invariant i49: n != 1;\nloop invariant i50: c == 1;\nloop invariant i51: c != 1;\nloop invariant i52: c == n ==> c <= n;\nloop invariant i53: c == n ==> c >= 0;\nloop invariant i54: c != n ==> c <= n;\nloop invariant i55: c != n ==> c >= 0;\nloop invariant i56: c != n ==> c != n;\nloop invariant i57: c == n ==> c == n;\nloop invariant i58: c != n ==> c != n ==> c == n;\nloop invariant i59: c != n ==> c != n ==> c != n;\nloop invariant i60: c == n ==> c == n ==> c != n;\nloop invariant i61: c != n ==> c != n ==> c != n ==> c == n;\nloop invariant i62: c != n ==> c != n ==> c != n ==> c != n;\nloop invariant i63: c == n ==> c == n ==> c != n ==> c == n;\nloop invariant i64: c != n ==> c != n ==> c != n ==> c != n ==> c == n;\nloop invariant i65: c != n ==> c != n ==> c != n ==> c != n ==> c != n;\nloop invariant i66: c == n ==> c == n ==> c != n ==> c == n ==> c != n;\nloop invariant i67: c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n;\nloop invariant i68: c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n;\nloop invariant i69: c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n;\nloop invariant i70: c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n;\nloop invariant i71: c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n;\nloop invariant i72: c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c == n;\nloop invariant i73: c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n;\nloop invariant i74: c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n ==> c != n;\nloop invariant i75: c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c == n;\nloop invariant i76: c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n;\nloop invariant i77: c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n ==> c != n ==> c == n;\nloop invariant i78: c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n;\nloop invariant i79: c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n;\nloop invariant i80: c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n ==> c != n ==> c == n ==> c != n;\nloop invariant i81: c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n;\nloop invariant i82: c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n;\nloop invariant i83: c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n;\nloop invariant i84: c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n;\nloop invariant i85: c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n;\nloop invariant i86: ( n > 0 ==> n >= c );\nloop invariant i87: ( (c >= 0) ==> (c <= n) );\nloop invariant i88: ( c > 0 ==> (c == n) ==> (c == 1) );\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 25,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c <= n;\nloop invariant i2: 0 <= n;\n\n\n\nloop invariant i6: (c != n) ==> (c <= n);\nloop invariant i7: (c != n) ==> (c >= 0);\n\nloop invariant i9: c <= n;\n\n\nloop invariant i12: c <= n ==> c >= 0;\nloop invariant i13: c > n ==> c >= n;\nloop invariant i14: c <= n ==> c <= n + 1;\nloop invariant i15: c > n ==> c <= n + 1;\nloop invariant i16: c <= n ==> c <= n;\nloop invariant i17: c > n ==> c <= n;\nloop invariant i18: c <= n ==> c <= c;\nloop invariant i19: c > n ==> c <= c;\n\nloop invariant i21: c > n ==> c >= 1;\nloop invariant i22: c > n ==> c >= 0;\nloop invariant i23: c == n ==> (c <= n && c >= n);\nloop invariant i24: c < n ==> (c <= n && c < n);\nloop invariant i25: c > n ==> (c <= n && c > n);\nloop invariant i26: c == 1 ==> (c <= n && c >= 1);\nloop invariant i27: c != 1 ==> (c <= n && c != 1);\nloop invariant i28: c != n ==> (c <= n && c != n);\n\n\n\nloop invariant i32: (c == n) ==> (c <= n);\nloop invariant i33: c >= 0;\nloop invariant i34: n > 0;\nloop invariant i35: n >= 1;\n\n\nloop invariant i38: (c == 1) ==> (c == 1);\nloop invariant i39: (c <= n) ==> (c <= n);\n\n\n\n\n\nloop invariant i45: n >= c;\n\n\n\n\n\n\nloop invariant i52: c == n ==> c <= n;\nloop invariant i53: c == n ==> c >= 0;\nloop invariant i54: c != n ==> c <= n;\nloop invariant i55: c != n ==> c >= 0;\nloop invariant i56: c != n ==> c != n;\nloop invariant i57: c == n ==> c == n;\n\nloop invariant i59: c != n ==> c != n ==> c != n;\n\n\nloop invariant i62: c != n ==> c != n ==> c != n ==> c != n;\nloop invariant i63: c == n ==> c == n ==> c != n ==> c == n;\n\nloop invariant i65: c != n ==> c != n ==> c != n ==> c != n ==> c != n;\nloop invariant i66: c == n ==> c == n ==> c != n ==> c == n ==> c != n;\nloop invariant i67: c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n;\n\nloop invariant i69: c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n;\nloop invariant i70: c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n;\nloop invariant i71: c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n;\nloop invariant i72: c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c == n;\nloop invariant i73: c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n;\nloop invariant i74: c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n ==> c != n;\nloop invariant i75: c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c == n;\nloop invariant i76: c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n;\nloop invariant i77: c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n ==> c != n ==> c == n;\nloop invariant i78: c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n;\nloop invariant i79: c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n;\nloop invariant i80: c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n ==> c != n ==> c == n ==> c != n;\nloop invariant i81: c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n;\nloop invariant i82: c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n;\nloop invariant i83: c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n ==> c == n ==> c != n ==> c == n ==> c != n ==> c == n;\nloop invariant i84: c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n;\nloop invariant i85: c != n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n ==> c != n ==> c != n ==> c == n ==> c != n ==> c != n;\nloop invariant i86: ( n > 0 ==> n >= c );\nloop invariant i87: ( (c >= 0) ==> (c <= n) );\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c"
        ],
        "skipped": [],
        "total": 38,
        "success_count": 34,
        "failure_count": 4,
        "success_rate": 0.8947368421052632
    }
}