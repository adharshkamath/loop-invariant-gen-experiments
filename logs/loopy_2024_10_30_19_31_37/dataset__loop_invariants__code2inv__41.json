{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/41.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c <= n;\nloop invariant c <= n + 1;\nloop invariant c <= n + 2;\nloop invariant c <= n + 3;\nloop invariant c <= n + 4;\nloop invariant c <= n + 5;\nloop invariant c <= n + 6;\nloop invariant c <= n + 7;\nloop invariant c <= n + 8;\nloop invariant c <= n + 9;\nloop invariant c <= n + 10;\nloop invariant c <= n + 11;\nloop invariant c <= n + 12;\nloop invariant c <= n + 13;\nloop invariant c <= n + 14;\nloop invariant c <= n + 15;\nloop invariant c <= n + 16;\nloop invariant c <= n + 17;\nloop invariant c <= n + 18;\nloop invariant c <= n + 19;\nloop invariant c <= n + 20;\nloop invariant c <= n + 21;\nloop invariant c <= n + 22;\nloop invariant c <= n + 23;\nloop invariant c <= n + 24;\nloop invariant c <= n + 25;\nloop invariant c <= n + 26;\nloop invariant c <= n + 27;\nloop invariant c <= n + 28;\nloop invariant c <= n + 29;\nloop invariant c <= n + 30;\nloop invariant c <= n + 31;\nloop invariant c <= n + 32;\nloop invariant c <= n + 33;\nloop invariant c <= n + 34;\nloop invariant c <= n + 35;\nloop invariant c <= n + 36;\nloop invariant c <= n + 37;\nloop invariant c <= n + 38;\nloop invariant c <= n + 39;\nloop invariant c <= n + 40;\nloop invariant c <= n + 41;\nloop invariant c <= n + 42;\nloop invariant c <= n + 43;\nloop invariant c <= n + 44;\nloop invariant c <= n + 45;\nloop invariant c <= n + 46;\nloop invariant c <= n + 47;\nloop invariant c <= n + 48;\nloop invariant c <= n + 49;\nloop invariant c <= n + 50;\nloop invariant c <= n + 51;\nloop invariant c <= n + 52;\nloop invariant c <= n + 53;\nloop invariant c <= n + 54;\nloop invariant c <= n + 55;\nloop invariant c <= n + 56;\nloop invariant c <= n + 57;\nloop invariant c <= n + 58;\nloop invariant c <= n + 59;\nloop invariant c <= n + 60;\nloop invariant c <= n + 61;\nloop invariant c <= n + 62;\nloop invariant c <= n + 63;\nloop invariant c <= n + 64;\nloop invariant c <= n + 65;\nloop invariant c <= n + 66;\nloop invariant c <= n + 67;\nloop invariant c <= n + 68;\nloop invariant c <= n + 69;\nloop invariant c <= n + 70;\nloop invariant c <= n + 71;\nloop invariant c <= n + 72;\nloop invariant c <= n + 73;\nloop invariant c <= n + 74;\nloop invariant c <= n + 75;\nloop invariant c <= n + 76;\nloop invariant c <= n + 77;\nloop invariant c <= n + 78;\nloop invariant c <= n + 79;\nloop invariant c <= n + 80;\nloop invariant c <= n + 81;\nloop invariant c <= n + 82;\nloop invariant c <= n + 83;\nloop invariant c <= n + 84;\nloop invariant c <= n + 85;\nloop invariant c <= n + 86;\nloop invariant c <= n + 87;\nloop invariant c <= n + 88;\nloop invariant c <= n + 89;\nloop invariant c <= n + 90;\nloop invariant c <= n + 91;\nloop invariant c <= n + 92;\nloop invariant c <= n + 93;\nloop invariant c <= n + 94;\nloop invariant c <= n + 95;\nloop invariant c <= n + 96;\nloop invariant c <= n + 97;\nloop invariant c <= n + 98;\nloop invariant c <= n + 99;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= c <= n;\nloop invariant (c >= n) ==> (c == n + 1);\nloop invariant (c <= n) ==> (c >= 1);\nloop invariant c != n ==> c < n;\nloop invariant c != n ==> c > 0;\nloop invariant c > n ==> c <= n;\nloop invariant c > n ==> c > 0;\nloop invariant c < n ==> c >= 1;\nloop invariant c < n ==> c <= n;\nloop invariant c < n ==> c != n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c <= n;\nloop invariant 0 <= n;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= c <= n + 1;\nloop invariant if unknown() then c = 0 else c in {1, n};\nloop invariant unknown() ==> c >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= c <= 2 * n;\nloop invariant n <= c ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c > n ==> c <= c + 1;\nloop invariant c > n ==> c <= n;\nloop invariant c == n ==> c <= c + 1;\nloop invariant c == n ==> c <= n;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\n*/\n```",
            "```\n/*@\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\nloop invariant 0 <= c;\nloop invariant c <= n;\nloop invariant c == n ==> c == 1;\nloop invariant c == n ==> c == n;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= n;\nloop invariant 0 <= c <= n;\nloop invariant c == n ==> (c < n);\nloop invariant c == n ==> (c == n);\nloop invariant c == n ==> (c == 1);\nloop invariant c != n ==> (c <= n);\nloop invariant c != n ==> (c <= n);\nloop invariant c != n ==> (c != n);\nloop invariant c != n ==> (c != 1);\nloop invariant c != n ==> (c != n);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c + 1 <= n ==> c + 1 <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n + 1;\nloop invariant c <= n;\nloop invariant c >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c <= n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant n <= c ==> (c == n + 1);\nloop invariant c < n ==> (c >= 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c;\nloop invariant 0 <= n;\nloop invariant c <= n;\nloop invariant 1 <= c ==> c == n;\nloop invariant (c == n) ==> c <= n;\nloop invariant c <= n ==> c == n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c;\nloop invariant 0 <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant n > 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant n != c ==> c <= n;\nloop invariant n != c ==> c >= 0;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c >= 1;\nloop invariant (c <= n) ==> (c != n);\nloop invariant (c > n) ==> (c == n);\nloop invariant (c == 1) ==> (c != n);\nloop invariant (c == n) ==> (c == n);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 101,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c <= n;\nloop invariant c <= n + 1;\nloop invariant c <= n + 2;\nloop invariant c <= n + 3;\nloop invariant c <= n + 4;\nloop invariant c <= n + 5;\nloop invariant c <= n + 6;\nloop invariant c <= n + 7;\nloop invariant c <= n + 8;\nloop invariant c <= n + 9;\nloop invariant c <= n + 10;\nloop invariant c <= n + 11;\nloop invariant c <= n + 12;\nloop invariant c <= n + 13;\nloop invariant c <= n + 14;\nloop invariant c <= n + 15;\nloop invariant c <= n + 16;\nloop invariant c <= n + 17;\nloop invariant c <= n + 18;\nloop invariant c <= n + 19;\nloop invariant c <= n + 20;\nloop invariant c <= n + 21;\nloop invariant c <= n + 22;\nloop invariant c <= n + 23;\nloop invariant c <= n + 24;\nloop invariant c <= n + 25;\nloop invariant c <= n + 26;\nloop invariant c <= n + 27;\nloop invariant c <= n + 28;\nloop invariant c <= n + 29;\nloop invariant c <= n + 30;\nloop invariant c <= n + 31;\nloop invariant c <= n + 32;\nloop invariant c <= n + 33;\nloop invariant c <= n + 34;\nloop invariant c <= n + 35;\nloop invariant c <= n + 36;\nloop invariant c <= n + 37;\nloop invariant c <= n + 38;\nloop invariant c <= n + 39;\nloop invariant c <= n + 40;\nloop invariant c <= n + 41;\nloop invariant c <= n + 42;\nloop invariant c <= n + 43;\nloop invariant c <= n + 44;\nloop invariant c <= n + 45;\nloop invariant c <= n + 46;\nloop invariant c <= n + 47;\nloop invariant c <= n + 48;\nloop invariant c <= n + 49;\nloop invariant c <= n + 50;\nloop invariant c <= n + 51;\nloop invariant c <= n + 52;\nloop invariant c <= n + 53;\nloop invariant c <= n + 54;\nloop invariant c <= n + 55;\nloop invariant c <= n + 56;\nloop invariant c <= n + 57;\nloop invariant c <= n + 58;\nloop invariant c <= n + 59;\nloop invariant c <= n + 60;\nloop invariant c <= n + 61;\nloop invariant c <= n + 62;\nloop invariant c <= n + 63;\nloop invariant c <= n + 64;\nloop invariant c <= n + 65;\nloop invariant c <= n + 66;\nloop invariant c <= n + 67;\nloop invariant c <= n + 68;\nloop invariant c <= n + 69;\nloop invariant c <= n + 70;\nloop invariant c <= n + 71;\nloop invariant c <= n + 72;\nloop invariant c <= n + 73;\nloop invariant c <= n + 74;\nloop invariant c <= n + 75;\nloop invariant c <= n + 76;\nloop invariant c <= n + 77;\nloop invariant c <= n + 78;\nloop invariant c <= n + 79;\nloop invariant c <= n + 80;\nloop invariant c <= n + 81;\nloop invariant c <= n + 82;\nloop invariant c <= n + 83;\nloop invariant c <= n + 84;\nloop invariant c <= n + 85;\nloop invariant c <= n + 86;\nloop invariant c <= n + 87;\nloop invariant c <= n + 88;\nloop invariant c <= n + 89;\nloop invariant c <= n + 90;\nloop invariant c <= n + 91;\nloop invariant c <= n + 92;\nloop invariant c <= n + 93;\nloop invariant c <= n + 94;\nloop invariant c <= n + 95;\nloop invariant c <= n + 96;\nloop invariant c <= n + 97;\nloop invariant c <= n + 98;\nloop invariant c <= n + 99;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= c <= n;\nloop invariant (c >= n) ==> (c == n + 1);\nloop invariant (c <= n) ==> (c >= 1);\nloop invariant c != n ==> c < n;\nloop invariant c != n ==> c > 0;\nloop invariant c > n ==> c <= n;\nloop invariant c > n ==> c > 0;\nloop invariant c < n ==> c >= 1;\nloop invariant c < n ==> c <= n;\nloop invariant c < n ==> c != n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: (c >= n) ==> (c == n + 1);\n\nloop invariant i4: c != n ==> c < n;\n\nloop invariant i6: c > n ==> c <= n;\nloop invariant i7: c > n ==> c > 0;\n\nloop invariant i9: c < n ==> c <= n;\nloop invariant i10: c < n ==> c != n;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c <= n;\nloop invariant 0 <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n\nloop invariant i3: 0 <= n;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= c <= n + 1;\nloop invariant if unknown() then c = 0 else c in {1, n};\nloop invariant unknown() ==> c >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 1 <= c <= 2 * n;\nloop invariant n <= c ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c > n ==> c <= c + 1;\nloop invariant c > n ==> c <= n;\nloop invariant c == n ==> c <= c + 1;\nloop invariant c == n ==> c <= n;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\nloop invariant c != n ==> c <= c + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n\nloop invariant i3: c <= n ==> c <= n;\nloop invariant i4: c > n ==> c <= c + 1;\n\nloop invariant i6: c == n ==> c <= c + 1;\nloop invariant i7: c == n ==> c <= n;\nloop invariant i8: c != n ==> c <= c + 1;\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: c >= 0;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\nloop invariant 0 <= c;\nloop invariant c <= n;\nloop invariant c == n ==> c == 1;\nloop invariant c == n ==> c == n;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c <= n;\nloop invariant i2: 0 <= n;\nloop invariant i3: 0 <= c;\nloop invariant i4: c <= n;\nloop invariant i5: c == n ==> c == 1;\nloop invariant i6: c == n ==> c == n;\nloop invariant i7: c != n ==> c <= n;\nloop invariant i8: c != n ==> c >= 0;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= n;\nloop invariant 0 <= c <= n;\nloop invariant c == n ==> (c < n);\nloop invariant c == n ==> (c == n);\nloop invariant c == n ==> (c == 1);\nloop invariant c != n ==> (c <= n);\nloop invariant c != n ==> (c <= n);\nloop invariant c != n ==> (c != n);\nloop invariant c != n ==> (c != 1);\nloop invariant c != n ==> (c != n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= n;\nloop invariant i2: 0 <= c <= n;\nloop invariant i3: c == n ==> (c < n);\nloop invariant i4: c == n ==> (c == n);\nloop invariant i5: c == n ==> (c == 1);\nloop invariant i6: c != n ==> (c <= n);\nloop invariant i7: c != n ==> (c != n);\nloop invariant i8: c != n ==> (c != 1);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c + 1 <= n ==> c + 1 <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: c + 1 <= n ==> c + 1 <= n;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n + 1;\nloop invariant c <= n;\nloop invariant c >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n\nloop invariant i3: c >= 0;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c <= n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant (c == n) ==> (c == 0 || c == 1 || c == n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: (c <= n) ==> (c == 0 || c == 1 || c == n);\nloop invariant i3: (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant i4: (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant i5: (c == 1) ==> (c == 0 || c == 1 || c == n);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant n <= c ==> (c == n + 1);\nloop invariant c < n ==> (c >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c <= n;\nloop invariant i2: n <= c ==> (c == n + 1);\nloop invariant i3: c < n ==> (c >= 0);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c;\nloop invariant 0 <= n;\nloop invariant c <= n;\nloop invariant 1 <= c ==> c == n;\nloop invariant (c == n) ==> c <= n;\nloop invariant c <= n ==> c == n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c;\nloop invariant i2: 0 <= n;\n\n\nloop invariant i5: (c == n) ==> c <= n;\n\nloop invariant i7: c <= n ==> c <= n;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= c;\nloop invariant 0 <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant n > 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant n != c ==> c <= n;\nloop invariant n != c ==> c >= 0;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\nloop invariant c == n ==> c == n;\nloop invariant c == n ==> c >= n;\nloop invariant c == n ==> c <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c;\nloop invariant i2: 0 <= n;\nloop invariant i3: c <= n;\nloop invariant i4: c >= 0;\nloop invariant i5: n > 0;\nloop invariant i6: c != n ==> c <= n;\nloop invariant i7: c != n ==> c >= 0;\nloop invariant i8: n != c ==> c <= n;\nloop invariant i9: n != c ==> c >= 0;\nloop invariant i10: c == n ==> c >= n;\nloop invariant i11: c == n ==> c <= n;\nloop invariant i12: c == n ==> c == n;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c >= 1;\nloop invariant (c <= n) ==> (c != n);\nloop invariant (c > n) ==> (c == n);\nloop invariant (c == 1) ==> (c != n);\nloop invariant (c == n) ==> (c == n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c <= n;\n\nloop invariant i3: (c <= n) ==> (c != n);\nloop invariant i4: (c > n) ==> (c == n);\nloop invariant i5: (c == 1) ==> (c != n);\nloop invariant i6: (c == n) ==> (c == n);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 131: unexpected token 'unknown'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c <= n;\nloop invariant i2: c <= n;\nloop invariant i3: c <= n + 1;\nloop invariant i4: c <= n + 2;\nloop invariant i5: c <= n + 3;\nloop invariant i6: c <= n + 4;\nloop invariant i7: c <= n + 5;\nloop invariant i8: c <= n + 6;\nloop invariant i9: c <= n + 7;\nloop invariant i10: c <= n + 8;\nloop invariant i11: c <= n + 9;\nloop invariant i12: c <= n + 10;\nloop invariant i13: c <= n + 11;\nloop invariant i14: c <= n + 12;\nloop invariant i15: c <= n + 13;\nloop invariant i16: c <= n + 14;\nloop invariant i17: c <= n + 15;\nloop invariant i18: c <= n + 16;\nloop invariant i19: c <= n + 17;\nloop invariant i20: c <= n + 18;\nloop invariant i21: c <= n + 19;\nloop invariant i22: c <= n + 20;\nloop invariant i23: c <= n + 21;\nloop invariant i24: c <= n + 22;\nloop invariant i25: c <= n + 23;\nloop invariant i26: c <= n + 24;\nloop invariant i27: c <= n + 25;\nloop invariant i28: c <= n + 26;\nloop invariant i29: c <= n + 27;\nloop invariant i30: c <= n + 28;\nloop invariant i31: c <= n + 29;\nloop invariant i32: c <= n + 30;\nloop invariant i33: c <= n + 31;\nloop invariant i34: c <= n + 32;\nloop invariant i35: c <= n + 33;\nloop invariant i36: c <= n + 34;\nloop invariant i37: c <= n + 35;\nloop invariant i38: c <= n + 36;\nloop invariant i39: c <= n + 37;\nloop invariant i40: c <= n + 38;\nloop invariant i41: c <= n + 39;\nloop invariant i42: c <= n + 40;\nloop invariant i43: c <= n + 41;\nloop invariant i44: c <= n + 42;\nloop invariant i45: c <= n + 43;\nloop invariant i46: c <= n + 44;\nloop invariant i47: c <= n + 45;\nloop invariant i48: c <= n + 46;\nloop invariant i49: c <= n + 47;\nloop invariant i50: c <= n + 48;\nloop invariant i51: c <= n + 49;\nloop invariant i52: c <= n + 50;\nloop invariant i53: c <= n + 51;\nloop invariant i54: c <= n + 52;\nloop invariant i55: c <= n + 53;\nloop invariant i56: c <= n + 54;\nloop invariant i57: c <= n + 55;\nloop invariant i58: c <= n + 56;\nloop invariant i59: c <= n + 57;\nloop invariant i60: c <= n + 58;\nloop invariant i61: c <= n + 59;\nloop invariant i62: c <= n + 60;\nloop invariant i63: c <= n + 61;\nloop invariant i64: c <= n + 62;\nloop invariant i65: c <= n + 63;\nloop invariant i66: c <= n + 64;\nloop invariant i67: c <= n + 65;\nloop invariant i68: c <= n + 66;\nloop invariant i69: c <= n + 67;\nloop invariant i70: c <= n + 68;\nloop invariant i71: c <= n + 69;\nloop invariant i72: c <= n + 70;\nloop invariant i73: c <= n + 71;\nloop invariant i74: c <= n + 72;\nloop invariant i75: c <= n + 73;\nloop invariant i76: c <= n + 74;\nloop invariant i77: c <= n + 75;\nloop invariant i78: c <= n + 76;\nloop invariant i79: c <= n + 77;\nloop invariant i80: c <= n + 78;\nloop invariant i81: c <= n + 79;\nloop invariant i82: c <= n + 80;\nloop invariant i83: c <= n + 81;\nloop invariant i84: c <= n + 82;\nloop invariant i85: c <= n + 83;\nloop invariant i86: c <= n + 84;\nloop invariant i87: c <= n + 85;\nloop invariant i88: c <= n + 86;\nloop invariant i89: c <= n + 87;\nloop invariant i90: c <= n + 88;\nloop invariant i91: c <= n + 89;\nloop invariant i92: c <= n + 90;\nloop invariant i93: c <= n + 91;\nloop invariant i94: c <= n + 92;\nloop invariant i95: c <= n + 93;\nloop invariant i96: c <= n + 94;\nloop invariant i97: c <= n + 95;\nloop invariant i98: c <= n + 96;\nloop invariant i99: c <= n + 97;\nloop invariant i100: c <= n + 98;\nloop invariant i101: c <= n + 99;\nloop invariant i102: 1 <= c <= n;\nloop invariant i103: (c >= n) ==> (c == n + 1);\nloop invariant i104: (c <= n) ==> (c >= 1);\nloop invariant i105: c != n ==> c < n;\nloop invariant i106: c != n ==> c > 0;\nloop invariant i107: c > n ==> c <= n;\nloop invariant i108: c > n ==> c > 0;\nloop invariant i109: c < n ==> c >= 1;\nloop invariant i110: c < n ==> c <= n;\nloop invariant i111: c < n ==> c != n;\nloop invariant i112: 0 <= n;\nloop invariant i113: 1 <= c <= n + 1;\nloop invariant i114: if unknown() then c = 0 else c in {1, n};\nloop invariant i115: unknown() ==> c >= 0;\nloop invariant i116: 1 <= c <= 2 * n;\nloop invariant i117: n <= c ==> c <= n;\nloop invariant i118: c <= n ==> c <= n;\nloop invariant i119: c > n ==> c <= c + 1;\nloop invariant i120: c == n ==> c <= c + 1;\nloop invariant i121: c == n ==> c <= n;\nloop invariant i122: c != n ==> c <= c + 1;\nloop invariant i123: c != n ==> c <= n;\nloop invariant i124: c >= 0;\nloop invariant i125: 0 <= c;\nloop invariant i126: c == n ==> c == 1;\nloop invariant i127: c == n ==> c == n;\nloop invariant i128: c != n ==> c >= 0;\nloop invariant i129: c == n ==> (c < n);\nloop invariant i130: c == n ==> (c == n);\nloop invariant i131: c == n ==> (c == 1);\nloop invariant i132: c != n ==> (c <= n);\nloop invariant i133: c != n ==> (c != n);\nloop invariant i134: c != n ==> (c != 1);\nloop invariant i135: c + 1 <= n ==> c + 1 <= n;\nloop invariant i136: 0 <= c <= n + 1;\nloop invariant i137: (c <= n) ==> (c == 0 || c == 1 || c == n);\nloop invariant i138: (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant i139: (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant i140: (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant i141: n <= c ==> (c == n + 1);\nloop invariant i142: c < n ==> (c >= 0);\nloop invariant i143: 1 <= c ==> c == n;\nloop invariant i144: (c == n) ==> c <= n;\nloop invariant i145: c <= n ==> c == n;\nloop invariant i146: n > 0;\nloop invariant i147: n != c ==> c <= n;\nloop invariant i148: n != c ==> c >= 0;\nloop invariant i149: c == n ==> c >= n;\nloop invariant i150: c >= 1;\nloop invariant i151: (c <= n) ==> (c != n);\nloop invariant i152: (c > n) ==> (c == n);\nloop invariant i153: (c == 1) ==> (c != n);\nloop invariant i154: (c == n) ==> (c == n);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 11,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c <= n;\nloop invariant i2: c <= n;\nloop invariant i3: c <= n + 1;\nloop invariant i4: c <= n + 2;\nloop invariant i5: c <= n + 3;\nloop invariant i6: c <= n + 4;\nloop invariant i7: c <= n + 5;\nloop invariant i8: c <= n + 6;\nloop invariant i9: c <= n + 7;\nloop invariant i10: c <= n + 8;\nloop invariant i11: c <= n + 9;\nloop invariant i12: c <= n + 10;\nloop invariant i13: c <= n + 11;\nloop invariant i14: c <= n + 12;\nloop invariant i15: c <= n + 13;\nloop invariant i16: c <= n + 14;\nloop invariant i17: c <= n + 15;\nloop invariant i18: c <= n + 16;\nloop invariant i19: c <= n + 17;\nloop invariant i20: c <= n + 18;\nloop invariant i21: c <= n + 19;\nloop invariant i22: c <= n + 20;\nloop invariant i23: c <= n + 21;\nloop invariant i24: c <= n + 22;\nloop invariant i25: c <= n + 23;\nloop invariant i26: c <= n + 24;\nloop invariant i27: c <= n + 25;\nloop invariant i28: c <= n + 26;\nloop invariant i29: c <= n + 27;\nloop invariant i30: c <= n + 28;\nloop invariant i31: c <= n + 29;\nloop invariant i32: c <= n + 30;\nloop invariant i33: c <= n + 31;\nloop invariant i34: c <= n + 32;\nloop invariant i35: c <= n + 33;\nloop invariant i36: c <= n + 34;\nloop invariant i37: c <= n + 35;\nloop invariant i38: c <= n + 36;\nloop invariant i39: c <= n + 37;\nloop invariant i40: c <= n + 38;\nloop invariant i41: c <= n + 39;\nloop invariant i42: c <= n + 40;\nloop invariant i43: c <= n + 41;\nloop invariant i44: c <= n + 42;\nloop invariant i45: c <= n + 43;\nloop invariant i46: c <= n + 44;\nloop invariant i47: c <= n + 45;\nloop invariant i48: c <= n + 46;\nloop invariant i49: c <= n + 47;\nloop invariant i50: c <= n + 48;\nloop invariant i51: c <= n + 49;\nloop invariant i52: c <= n + 50;\nloop invariant i53: c <= n + 51;\nloop invariant i54: c <= n + 52;\nloop invariant i55: c <= n + 53;\nloop invariant i56: c <= n + 54;\nloop invariant i57: c <= n + 55;\nloop invariant i58: c <= n + 56;\nloop invariant i59: c <= n + 57;\nloop invariant i60: c <= n + 58;\nloop invariant i61: c <= n + 59;\nloop invariant i62: c <= n + 60;\nloop invariant i63: c <= n + 61;\nloop invariant i64: c <= n + 62;\nloop invariant i65: c <= n + 63;\nloop invariant i66: c <= n + 64;\nloop invariant i67: c <= n + 65;\nloop invariant i68: c <= n + 66;\nloop invariant i69: c <= n + 67;\nloop invariant i70: c <= n + 68;\nloop invariant i71: c <= n + 69;\nloop invariant i72: c <= n + 70;\nloop invariant i73: c <= n + 71;\nloop invariant i74: c <= n + 72;\nloop invariant i75: c <= n + 73;\nloop invariant i76: c <= n + 74;\nloop invariant i77: c <= n + 75;\nloop invariant i78: c <= n + 76;\nloop invariant i79: c <= n + 77;\nloop invariant i80: c <= n + 78;\nloop invariant i81: c <= n + 79;\nloop invariant i82: c <= n + 80;\nloop invariant i83: c <= n + 81;\nloop invariant i84: c <= n + 82;\nloop invariant i85: c <= n + 83;\nloop invariant i86: c <= n + 84;\nloop invariant i87: c <= n + 85;\nloop invariant i88: c <= n + 86;\nloop invariant i89: c <= n + 87;\nloop invariant i90: c <= n + 88;\nloop invariant i91: c <= n + 89;\nloop invariant i92: c <= n + 90;\nloop invariant i93: c <= n + 91;\nloop invariant i94: c <= n + 92;\nloop invariant i95: c <= n + 93;\nloop invariant i96: c <= n + 94;\nloop invariant i97: c <= n + 95;\nloop invariant i98: c <= n + 96;\nloop invariant i99: c <= n + 97;\nloop invariant i100: c <= n + 98;\nloop invariant i101: c <= n + 99;\n\nloop invariant i103: (c >= n) ==> (c == n + 1);\n\nloop invariant i105: c != n ==> c < n;\n\nloop invariant i107: c > n ==> c <= n;\nloop invariant i108: c > n ==> c > 0;\n\nloop invariant i110: c < n ==> c <= n;\nloop invariant i111: c < n ==> c != n;\nloop invariant i112: 0 <= n;\n\n\n\n\nloop invariant i117: n <= c ==> c <= n;\nloop invariant i118: c <= n ==> c <= n;\nloop invariant i119: c > n ==> c <= c + 1;\nloop invariant i120: c == n ==> c <= c + 1;\nloop invariant i121: c == n ==> c <= n;\nloop invariant i122: c != n ==> c <= c + 1;\nloop invariant i123: c != n ==> c <= n;\nloop invariant i124: c >= 0;\nloop invariant i125: 0 <= c;\nloop invariant i126: c == n ==> c == 1;\nloop invariant i127: c == n ==> c == n;\nloop invariant i128: c != n ==> c >= 0;\nloop invariant i129: c == n ==> (c < n);\nloop invariant i130: c == n ==> (c == n);\nloop invariant i131: c == n ==> (c == 1);\nloop invariant i132: c != n ==> (c <= n);\nloop invariant i133: c != n ==> (c != n);\nloop invariant i134: c != n ==> (c != 1);\nloop invariant i135: c + 1 <= n ==> c + 1 <= n;\nloop invariant i136: 0 <= c <= n + 1;\nloop invariant i137: (c <= n) ==> (c == 0 || c == 1 || c == n);\nloop invariant i138: (c == n) ==> (c == 0 || c == 1 || c == n);\nloop invariant i139: (c == 0) ==> (c == 0 || c == 1 || c == n);\nloop invariant i140: (c == 1) ==> (c == 0 || c == 1 || c == n);\nloop invariant i141: n <= c ==> (c == n + 1);\nloop invariant i142: c < n ==> (c >= 0);\nloop invariant i143: 1 <= c ==> c == n;\nloop invariant i144: (c == n) ==> c <= n;\n\nloop invariant i146: n > 0;\nloop invariant i147: n != c ==> c <= n;\nloop invariant i148: n != c ==> c >= 0;\nloop invariant i149: c == n ==> c >= n;\n\nloop invariant i151: (c <= n) ==> (c != n);\nloop invariant i152: (c > n) ==> (c == n);\nloop invariant i153: (c == 1) ==> (c != n);\nloop invariant i154: (c == n) ==> (c == n);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c <= n) );\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c"
        ],
        "skipped": [],
        "total": 33,
        "success_count": 29,
        "failure_count": 4,
        "success_rate": 0.8787878787878788
    }
}