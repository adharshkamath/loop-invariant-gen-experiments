{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt5.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  while( l < n ) {\n\t\n\t  if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3) == l);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n/2;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n/2;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant (i+j+k+v4+v3) <= l;\nloop invariant (i+j+k+v4+v3) <= n;\nloop invariant (i+j+k+v4+v3+l) > 0;\nloop invariant 0 <= (i+j+k+v4+v3+l) <= 2*n;\nloop invariant 0 <= n <= SIZE;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n/3;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant (i+j+k+v4+v3) <= l;\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (l-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant 0 <= i <= n/3;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n;\nloop invariant (i+j+k+v4+v3) <= l;\nloop invariant (i+j+k+v4+v3) == l ==> (i+j+k+v4+v3) == l;\nloop invariant l == n ==> (i+j+k+v4+v3) == l;\n*/\n```",
            "```\n/*@\nloop invariant v3 <= n;\nloop invariant v4 <= n;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant l <= n;\nloop invariant v3 + v4 + i + j + k <= n;\nloop invariant l <= n;\nloop invariant v3 + v4 + i + j + k == n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n / 3;\nloop invariant 0 <= j <= n / 2;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v3 <= n / 5;\nloop invariant 0 <= v4 <= n / 4;\nloop invariant i + j + k + v4 + v3 <= l;\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant v3 >= 0;\nloop invariant v4 >= 0;\nloop invariant (i + j + k + v4 + v3) + l == n;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant v3 >= 0;\nloop invariant v4 >= 0;\nloop invariant (i + j + k + v4 + v3) + l == n;\nloop invariant 0 <= l <= n;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant v3 >= 0;\nloop invariant v4 >= 0;\nloop invariant (i + j + k + v4 + v3) + l == n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant i + j + k + v4 + v3 == l;\nloop invariant i <= l;\nloop invariant j <= l;\nloop invariant k <= l;\nloop invariant v4 <= l;\nloop invariant v3 <= l;\nloop invariant i + j + k + v4 + v3 <= n;\nloop invariant i + j + k + v4 + v3 >= 0;\nloop invariant i + j + k + v4 + v3 >= l;\nloop invariant (i + j + k + v4 + v3) % 5 == 0 ==> v3 == (i + j + k + v4 + v3) / 5;\nloop invariant (i + j + k + v4 + v3) % 4 == 0 ==> v4 == (i + j + k + v4 + v3) / 4;\nloop invariant (i + j + k + v4 + v3) % 3 == 0 ==> i == (i + j + k + v4 + v3) / 3;\nloop invariant (i + j + k + v4 + v3) % 2 == 0 ==> j == (i + j + k + v4 + v3) / 2;\nloop invariant j == 0 ==> (i + k + v4 + v3) % 2 == 0;\nloop invariant k == 0 ==> (i + j + v4 + v3) % 3 == 0;\nloop invariant v4 == 0 ==> (i + j + k + v3) % 4 == 0;\nloop invariant v3 == 0 ==> (i + j + k + v4) % 5 == 0;\nloop invariant (i + j + k + v4 + v3) % 5 == 0 ==> k <= (i + j + v4 + v3) / 5;\nloop invariant (i + j + k + v4 + v3) % 4 == 0 ==> k <= (i + j + v4 + v3) / 4 - v4 / 4;\nloop invariant (i + j + k + v4 + v3) % 3 == 0 ==> k <= (i + j + v4 + v3) / 3 - v4 / 3 - v3 / 3;\nloop invariant (i + j + k + v4 + v3) % 2 == 0 ==> k <= (i + j + v4 + v3) / 2 - v4 / 2 - v3 / 2 - j / 2;\nloop invariant j == 0 ==> k <= (i + v4 + v3) / 2;\nloop invariant k == 0 ==> j <= (i + v4 + v3) / 3 - v4 / 3 - v3 / 3;\nloop invariant v4 == 0 ==> j <= (i + v3) / 4 - v3 / 4;\nloop invariant v3 == 0 ==> j <= (i + v4) / 5 - v4 / 5;\nloop invariant v4 == 0 ==> i <= (j + v3) / 4;\nloop invariant v3 == 0 ==> i <= (j + v4) / 5 - v4 / 5;\nloop invariant v4 == 0 ==> i <= (j + v3) / 3 - v3 / 3;\nloop invariant v3 == 0 ==> i <= (j + v4) / 2 - v4 / 2;\nloop invariant j == 0 ==> i <= (v4 + v3) / 2;\nloop invariant k == 0 ==> i <= (v4 + v3) / 3 - v4 / 3 - v3 / 3;\nloop invariant v4 == 0 ==> i <= (v3) / 4 - v3 / 4;\nloop invariant v3 == 0 ==> i <= (v4) / 5 - v4 / 5;\nloop invariant v4 == 0 ==> v3 <= (i) / 4 - i / 4;\nloop invariant v3 == 0 ==> v4 <= (i) / 5 - i / 5;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n/2;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n/3;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant (i + j + k + v4 + v3) == l;\nloop invariant l == n || ((l%5) && (l%4) && (l%3) && (l%2));\n*/\n```",
            "```\n/*@\nloop invariant i = (l/3) * (l/3 + 1) / 2;\nloop invariant j = (l/2) * (l/2 + 1) / 2;\nloop invariant k = (l/4) * (l/4 + 1) / 2;\nloop invariant v3 = (l/5) * (l/5 + 1) / 2;\nloop invariant v4 = (l/4) * (l/4 + 1) / 2;\nloop invariant i + j + k + v4 + v3 = l;\nloop invariant n >= l;\nloop invariant n <= SIZE;\nloop invariant k >= 0;\nloop invariant k <= l/4;\nloop invariant j >= 0;\nloop invariant j <= l/2;\nloop invariant i >= 0;\nloop invariant i <= l/3;\nloop invariant v3 >= 0;\nloop invariant v3 <= l/5;\nloop invariant v4 >= 0;\nloop invariant v4 <= l/4;\nloop invariant 0 <= l%5;\nloop invariant 0 <= l%4;\nloop invariant 0 <= l%3;\nloop invariant 0 <= l%2;\nloop invariant l%5 <= 4;\nloop invariant l%4 <= 3;\nloop invariant l%3 <= 2;\nloop invariant l%2 <= 1;\nloop invariant 0 <= i;\nloop invariant i <= l/3;\nloop invariant 0 <= j;\nloop invariant j <= l/2;\nloop invariant 0 <= k;\nloop invariant k <= l/4;\nloop invariant 0 <= v3;\nloop invariant v3 <= l/5;\nloop invariant 0 <= v4;\nloop invariant v4 <= l/4;\nloop invariant 0 <= l;\nloop invariant l <= n;\nloop invariant n <= SIZE;\nloop invariant k >= 0;\nloop invariant k <= l/4;\nloop invariant j >= 0;\nloop invariant j <= l/2;\nloop invariant i >= 0;\nloop invariant i <= l/3;\nloop invariant v3 >= 0;\nloop invariant v3 <= l/5;\nloop invariant v4 >= 0;\nloop invariant v4 <= l/4;\nloop invariant 0 <= l%5;\nloop invariant 0 <= l%4;\nloop invariant 0 <= l%3;\nloop invariant 0 <= l%2;\nloop invariant l%5 <= 4;\nloop invariant l%4 <= 3;\nloop invariant l%3 <= 2;\nloop invariant l%2 <= 1;\nloop invariant 0 <= i;\nloop invariant i <= l/3;\nloop invariant 0 <= j;\nloop invariant j <= l/2;\nloop invariant 0 <= k;\nloop invariant k <= l/4;\nloop invariant 0 <= v3;\nloop invariant v3 <= l/5;\nloop invariant 0 <= v4;\nloop invariant v4 <= l/4;\nloop invariant 0 <= l;\nloop invariant l <= n;\nloop invariant n <= SIZE;\nloop invariant k >= 0;\nloop invariant k <= l/4;\nloop invariant j >= 0;\nloop invariant j <= l/2;\nloop invariant i >= 0;\nloop invariant i <= l/3;\nloop invariant v3 >= 0;\nloop invariant v3 <= l/5;\nloop invariant v4 >= 0;\nloop invariant v4 <= l/4;\nloop invariant 0 <= l%5;\nloop invariant 0 <= l%4;\nloop invariant 0 <= l%3;\nloop invariant 0 <= l%2;\nloop invariant l%5 <= 4;\nloop invariant l%4 <= 3;\nloop invariant l%3 <= 2;\nloop invariant l%2 <= 1;\nloop invariant 0 <= i;\nloop invariant i <= l/3;\nloop invariant 0 <= j;\nloop invariant j <= l/2;\nloop invariant 0 <= k;\nloop invariant k <= l/4;\nloop invariant 0 <= v3;\nloop invariant v3 <= l/5;\nloop invariant 0 <= v4;\nloop invariant v4 <= l/4;\nloop invariant 0 <= l;\nloop invariant l <= n;\nloop invariant n <= SIZE;\nloop invariant k >= 0;\nloop invariant k <= l/4;\nloop invariant j >= 0;\nloop invariant j <= l/2;\nloop invariant i >= 0;\nloop invariant i <= l/3;\nloop invariant v3 >= 0;\nloop invariant v3 <= l/5;\nloop invariant v4 >= 0;\nloop invariant v4 <= l/4;\nloop invariant 0 <= l%5;\nloop invariant 0 <= l%4;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= l <= SIZE;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant 0 <= i <= n/3;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n;\nloop invariant i + j + k + v4 + v3 == l;\nloop invariant if(l%5==0) v3 == l/5 else v3 == (l-1)/5;\nloop invariant if(l%4==0) v4 == l/4 else v4 == (l-1)/4;\nloop invariant if(l%3==0) i == l/3 else i == (l-1)/3;\nloop invariant if(l%2==0) j == l/2 else j == (l-1)/2;\nloop invariant if(l%5==0 && l%4==0) v3+v4 == 2*l/20 else v3+v4 <= l/20;\nloop invariant if(l%3==0 && l%2==0) i+j == 2*l/6 else i+j <= l/6;\nloop invariant if(l%5==0 && l%3==0 && l%2==0) i+j+v3+v4 == 2*l/15 else i+j+v3+v4 <= l/15;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) i+j+v3+v4+k == 2*l/5 else i+j+v3+v4+k <= l/5;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) i+j+v3+v4+k == l else i+j+v3+v4+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l;\nloop invariant 0 <= j <= l;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= v3 <= l;\nloop invariant 0 <= v4 <= l;\nloop invariant (i + j + k + v4 + v3) == l;\nloop invariant (i + j + k + v4 + v3) <= n;\nloop invariant (l % 5) == 0 ==> (v3 <= l/5);\nloop invariant (l % 5) != 0 ==> (v3 == 0);\nloop invariant (l % 4) == 0 ==> (v4 <= l/4);\nloop invariant (l % 4) != 0 ==> (v4 == 0);\nloop invariant (l % 3) == 0 ==> (i <= l/3);\nloop invariant (l % 3) != 0 ==> (i == 0);\nloop invariant (l % 2) == 0 ==> (j <= l/2);\nloop invariant (l % 2) != 0 ==> (j == 0);\nloop invariant k >= 0;\nloop invariant k <= l;\nloop invariant k <= (n - l);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\n*/\n```",
            "```\n/*@\nloop invariant n >= 0;\nloop invariant l >= 0 ==> l < n;\nloop invariant l >= 0 ==> i >= 0;\nloop invariant l >= 0 ==> j >= 0;\nloop invariant l >= 0 ==> k >= 0;\nloop invariant l >= 0 ==> v3 >= 0;\nloop invariant l >= 0 ==> v4 >= 0;\nloop invariant l >= 0 ==> i + j + k + v4 + v3 == l;\nloop invariant l >= 0 ==> l <= n;\nloop invariant l >= 0 ==> (l%5 != 0 ==> v3 == 0);\nloop invariant l >= 0 ==> (l%4 != 0 ==> v4 == 0);\nloop invariant l >= 0 ==> (l%3 != 0 ==> i == 0);\nloop invariant l >= 0 ==> (l%2 != 0 ==> j == 0);\nloop invariant l >= 0 ==> (l%5 == 0 ==> v3 == 1);\nloop invariant l >= 0 ==> (l%4 == 0 ==> v4 == 1);\nloop invariant l >= 0 ==> (l%3 == 0 ==> i == 1);\nloop invariant l >= 0 ==> (l%2 == 0 ==> j == 1);\nloop invariant l >= 0 ==> (l%5 != 0 ==> v3 == 0);\nloop invariant l >= 0 ==> (l%4 != 0 ==> v4 == 0);\nloop invariant l >= 0 ==> (l%3 != 0 ==> i == 0);\nloop invariant l >= 0 ==> (l%2 != 0 ==> j == 0);\nloop invariant l >= 0 ==> (l%5 == 0 ==> v3 == 1);\nloop invariant l >= 0 ==> (l%4 == 0 ==> v4 == 1);\nloop invariant l >= 0 ==> (l%3 == 0 ==> i == 1);\nloop invariant l >= 0 ==> (l%2 == 0 ==> j == 1);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n/2;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n/2;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant (i+j+k+v4+v3) <= l;\nloop invariant (i+j+k+v4+v3) <= n;\nloop invariant (i+j+k+v4+v3+l) > 0;\nloop invariant 0 <= (i+j+k+v4+v3+l) <= 2*n;\nloop invariant 0 <= n <= SIZE;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\n\n\n\nloop invariant i7: (i+j+k+v4+v3) <= l;\nloop invariant i8: (i+j+k+v4+v3) <= n;\n\nloop invariant i10: 0 <= (i+j+k+v4+v3+l) <= 2*n;\nloop invariant i11: 0 <= n <= SIZE;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n/3;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant (i+j+k+v4+v3) <= l;\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (l-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant (i+2*j+2*k+1*v4+1*v3) <= (n-1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\nloop invariant i4: 0 <= k <= n;\n\n\nloop invariant i7: (i+j+k+v4+v3) <= l;\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant 0 <= i <= n/3;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n;\nloop invariant (i+j+k+v4+v3) <= l;\nloop invariant (i+j+k+v4+v3) == l ==> (i+j+k+v4+v3) == l;\nloop invariant l == n ==> (i+j+k+v4+v3) == l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\n\n\nloop invariant i6: 0 <= k <= n;\nloop invariant i7: (i+j+k+v4+v3) <= l;\nloop invariant i8: (i+j+k+v4+v3) == l ==> (i+j+k+v4+v3) == l;\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant v3 <= n;\nloop invariant v4 <= n;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant l <= n;\nloop invariant v3 + v4 + i + j + k <= n;\nloop invariant l <= n;\nloop invariant v3 + v4 + i + j + k == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\n\n\n\n\n\nloop invariant i6: l <= n;\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n / 3;\nloop invariant 0 <= j <= n / 2;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v3 <= n / 5;\nloop invariant 0 <= v4 <= n / 4;\nloop invariant i + j + k + v4 + v3 <= l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\nloop invariant i4: 0 <= k <= n;\n\n\nloop invariant i7: i + j + k + v4 + v3 <= l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant v3 >= 0;\nloop invariant v4 >= 0;\nloop invariant (i + j + k + v4 + v3) + l == n;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant v3 >= 0;\nloop invariant v4 >= 0;\nloop invariant (i + j + k + v4 + v3) + l == n;\nloop invariant 0 <= l <= n;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant v3 >= 0;\nloop invariant v4 >= 0;\nloop invariant (i + j + k + v4 + v3) + l == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: i >= 0;\nloop invariant i3: j >= 0;\nloop invariant i4: k >= 0;\nloop invariant i5: v3 >= 0;\nloop invariant i6: v4 >= 0;\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant i + j + k + v4 + v3 == l;\nloop invariant i <= l;\nloop invariant j <= l;\nloop invariant k <= l;\nloop invariant v4 <= l;\nloop invariant v3 <= l;\nloop invariant i + j + k + v4 + v3 <= n;\nloop invariant i + j + k + v4 + v3 >= 0;\nloop invariant i + j + k + v4 + v3 >= l;\nloop invariant (i + j + k + v4 + v3) % 5 == 0 ==> v3 == (i + j + k + v4 + v3) / 5;\nloop invariant (i + j + k + v4 + v3) % 4 == 0 ==> v4 == (i + j + k + v4 + v3) / 4;\nloop invariant (i + j + k + v4 + v3) % 3 == 0 ==> i == (i + j + k + v4 + v3) / 3;\nloop invariant (i + j + k + v4 + v3) % 2 == 0 ==> j == (i + j + k + v4 + v3) / 2;\nloop invariant j == 0 ==> (i + k + v4 + v3) % 2 == 0;\nloop invariant k == 0 ==> (i + j + v4 + v3) % 3 == 0;\nloop invariant v4 == 0 ==> (i + j + k + v3) % 4 == 0;\nloop invariant v3 == 0 ==> (i + j + k + v4) % 5 == 0;\nloop invariant (i + j + k + v4 + v3) % 5 == 0 ==> k <= (i + j + v4 + v3) / 5;\nloop invariant (i + j + k + v4 + v3) % 4 == 0 ==> k <= (i + j + v4 + v3) / 4 - v4 / 4;\nloop invariant (i + j + k + v4 + v3) % 3 == 0 ==> k <= (i + j + v4 + v3) / 3 - v4 / 3 - v3 / 3;\nloop invariant (i + j + k + v4 + v3) % 2 == 0 ==> k <= (i + j + v4 + v3) / 2 - v4 / 2 - v3 / 2 - j / 2;\nloop invariant j == 0 ==> k <= (i + v4 + v3) / 2;\nloop invariant k == 0 ==> j <= (i + v4 + v3) / 3 - v4 / 3 - v3 / 3;\nloop invariant v4 == 0 ==> j <= (i + v3) / 4 - v3 / 4;\nloop invariant v3 == 0 ==> j <= (i + v4) / 5 - v4 / 5;\nloop invariant v4 == 0 ==> i <= (j + v3) / 4;\nloop invariant v3 == 0 ==> i <= (j + v4) / 5 - v4 / 5;\nloop invariant v4 == 0 ==> i <= (j + v3) / 3 - v3 / 3;\nloop invariant v3 == 0 ==> i <= (j + v4) / 2 - v4 / 2;\nloop invariant j == 0 ==> i <= (v4 + v3) / 2;\nloop invariant k == 0 ==> i <= (v4 + v3) / 3 - v4 / 3 - v3 / 3;\nloop invariant v4 == 0 ==> i <= (v3) / 4 - v3 / 4;\nloop invariant v3 == 0 ==> i <= (v4) / 5 - v4 / 5;\nloop invariant v4 == 0 ==> v3 <= (i) / 4 - i / 4;\nloop invariant v3 == 0 ==> v4 <= (i) / 5 - i / 5;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: i + j + k + v4 + v3 == l;\nloop invariant i3: i <= l;\nloop invariant i4: j <= l;\nloop invariant i5: k <= l;\nloop invariant i6: v4 <= l;\nloop invariant i7: v3 <= l;\nloop invariant i8: i + j + k + v4 + v3 <= n;\nloop invariant i9: i + j + k + v4 + v3 >= 0;\nloop invariant i10: i + j + k + v4 + v3 >= l;\n\n\n\n\n\n\n\nloop invariant i18: v3 == 0 ==> (i + j + k + v4) % 5 == 0;\n\n\n\n\n\n\n\nloop invariant i26: v3 == 0 ==> j <= (i + v4) / 5 - v4 / 5;\n\nloop invariant i28: v3 == 0 ==> i <= (j + v4) / 5 - v4 / 5;\n\nloop invariant i30: v3 == 0 ==> i <= (j + v4) / 2 - v4 / 2;\n\n\n\nloop invariant i34: v3 == 0 ==> i <= (v4) / 5 - v4 / 5;\n\nloop invariant i36: v3 == 0 ==> v4 <= (i) / 5 - i / 5;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n/2;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n/3;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant (i + j + k + v4 + v3) == l;\nloop invariant l == n || ((l%5) && (l%4) && (l%3) && (l%2));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\n\n\n\nloop invariant i7: (i + j + k + v4 + v3) == l;\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant i = (l/3) * (l/3 + 1) / 2;\nloop invariant j = (l/2) * (l/2 + 1) / 2;\nloop invariant k = (l/4) * (l/4 + 1) / 2;\nloop invariant v3 = (l/5) * (l/5 + 1) / 2;\nloop invariant v4 = (l/4) * (l/4 + 1) / 2;\nloop invariant i + j + k + v4 + v3 = l;\nloop invariant n >= l;\nloop invariant n <= SIZE;\nloop invariant k >= 0;\nloop invariant k <= l/4;\nloop invariant j >= 0;\nloop invariant j <= l/2;\nloop invariant i >= 0;\nloop invariant i <= l/3;\nloop invariant v3 >= 0;\nloop invariant v3 <= l/5;\nloop invariant v4 >= 0;\nloop invariant v4 <= l/4;\nloop invariant 0 <= l%5;\nloop invariant 0 <= l%4;\nloop invariant 0 <= l%3;\nloop invariant 0 <= l%2;\nloop invariant l%5 <= 4;\nloop invariant l%4 <= 3;\nloop invariant l%3 <= 2;\nloop invariant l%2 <= 1;\nloop invariant 0 <= i;\nloop invariant i <= l/3;\nloop invariant 0 <= j;\nloop invariant j <= l/2;\nloop invariant 0 <= k;\nloop invariant k <= l/4;\nloop invariant 0 <= v3;\nloop invariant v3 <= l/5;\nloop invariant 0 <= v4;\nloop invariant v4 <= l/4;\nloop invariant 0 <= l;\nloop invariant l <= n;\nloop invariant n <= SIZE;\nloop invariant k >= 0;\nloop invariant k <= l/4;\nloop invariant j >= 0;\nloop invariant j <= l/2;\nloop invariant i >= 0;\nloop invariant i <= l/3;\nloop invariant v3 >= 0;\nloop invariant v3 <= l/5;\nloop invariant v4 >= 0;\nloop invariant v4 <= l/4;\nloop invariant 0 <= l%5;\nloop invariant 0 <= l%4;\nloop invariant 0 <= l%3;\nloop invariant 0 <= l%2;\nloop invariant l%5 <= 4;\nloop invariant l%4 <= 3;\nloop invariant l%3 <= 2;\nloop invariant l%2 <= 1;\nloop invariant 0 <= i;\nloop invariant i <= l/3;\nloop invariant 0 <= j;\nloop invariant j <= l/2;\nloop invariant 0 <= k;\nloop invariant k <= l/4;\nloop invariant 0 <= v3;\nloop invariant v3 <= l/5;\nloop invariant 0 <= v4;\nloop invariant v4 <= l/4;\nloop invariant 0 <= l;\nloop invariant l <= n;\nloop invariant n <= SIZE;\nloop invariant k >= 0;\nloop invariant k <= l/4;\nloop invariant j >= 0;\nloop invariant j <= l/2;\nloop invariant i >= 0;\nloop invariant i <= l/3;\nloop invariant v3 >= 0;\nloop invariant v3 <= l/5;\nloop invariant v4 >= 0;\nloop invariant v4 <= l/4;\nloop invariant 0 <= l%5;\nloop invariant 0 <= l%4;\nloop invariant 0 <= l%3;\nloop invariant 0 <= l%2;\nloop invariant l%5 <= 4;\nloop invariant l%4 <= 3;\nloop invariant l%3 <= 2;\nloop invariant l%2 <= 1;\nloop invariant 0 <= i;\nloop invariant i <= l/3;\nloop invariant 0 <= j;\nloop invariant j <= l/2;\nloop invariant 0 <= k;\nloop invariant k <= l/4;\nloop invariant 0 <= v3;\nloop invariant v3 <= l/5;\nloop invariant 0 <= v4;\nloop invariant v4 <= l/4;\nloop invariant 0 <= l;\nloop invariant l <= n;\nloop invariant n <= SIZE;\nloop invariant k >= 0;\nloop invariant k <= l/4;\nloop invariant j >= 0;\nloop invariant j <= l/2;\nloop invariant i >= 0;\nloop invariant i <= l/3;\nloop invariant v3 >= 0;\nloop invariant v3 <= l/5;\nloop invariant v4 >= 0;\nloop invariant v4 <= l/4;\nloop invariant 0 <= l%5;\nloop invariant 0 <= l%4;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\n\n\n\n\n\n\nloop invariant i7: n >= l;\nloop invariant i8: n <= SIZE;\nloop invariant i9: k >= 0;\n\nloop invariant i11: j >= 0;\n\nloop invariant i13: i >= 0;\n\nloop invariant i15: v3 >= 0;\n\nloop invariant i17: v4 >= 0;\n\nloop invariant i19: 0 <= l%5;\nloop invariant i20: 0 <= l%4;\nloop invariant i21: 0 <= l%3;\nloop invariant i22: 0 <= l%2;\nloop invariant i23: l%5 <= 4;\nloop invariant i24: l%4 <= 3;\nloop invariant i25: l%3 <= 2;\nloop invariant i26: l%2 <= 1;\nloop invariant i27: 0 <= i;\nloop invariant i28: 0 <= j;\nloop invariant i29: 0 <= k;\nloop invariant i30: 0 <= v3;\nloop invariant i31: 0 <= v4;\nloop invariant i32: 0 <= l;\nloop invariant i33: l <= n;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 12,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= l <= SIZE;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant 0 <= i <= n/3;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n;\nloop invariant i + j + k + v4 + v3 == l;\nloop invariant if(l%5==0) v3 == l/5 else v3 == (l-1)/5;\nloop invariant if(l%4==0) v4 == l/4 else v4 == (l-1)/4;\nloop invariant if(l%3==0) i == l/3 else i == (l-1)/3;\nloop invariant if(l%2==0) j == l/2 else j == (l-1)/2;\nloop invariant if(l%5==0 && l%4==0) v3+v4 == 2*l/20 else v3+v4 <= l/20;\nloop invariant if(l%3==0 && l%2==0) i+j == 2*l/6 else i+j <= l/6;\nloop invariant if(l%5==0 && l%3==0 && l%2==0) i+j+v3+v4 == 2*l/15 else i+j+v3+v4 <= l/15;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) i+j+v3+v4+k == 2*l/5 else i+j+v3+v4+k <= l/5;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) i+j+v3+v4+k == l else i+j+v3+v4+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\n\n\n\n\nloop invariant i8: i + j + k + v4 + v3 == l;\n\n\n\n\n\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l;\nloop invariant 0 <= j <= l;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= v3 <= l;\nloop invariant 0 <= v4 <= l;\nloop invariant (i + j + k + v4 + v3) == l;\nloop invariant (i + j + k + v4 + v3) <= n;\nloop invariant (l % 5) == 0 ==> (v3 <= l/5);\nloop invariant (l % 5) != 0 ==> (v3 == 0);\nloop invariant (l % 4) == 0 ==> (v4 <= l/4);\nloop invariant (l % 4) != 0 ==> (v4 == 0);\nloop invariant (l % 3) == 0 ==> (i <= l/3);\nloop invariant (l % 3) != 0 ==> (i == 0);\nloop invariant (l % 2) == 0 ==> (j <= l/2);\nloop invariant (l % 2) != 0 ==> (j == 0);\nloop invariant k >= 0;\nloop invariant k <= l;\nloop invariant k <= (n - l);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i <= l;\nloop invariant i3: 0 <= j <= l;\nloop invariant i4: 0 <= k <= l;\nloop invariant i5: 0 <= v3 <= l;\nloop invariant i6: 0 <= v4 <= l;\nloop invariant i7: (i + j + k + v4 + v3) == l;\nloop invariant i8: (i + j + k + v4 + v3) <= n;\n\n\n\n\n\n\n\n\nloop invariant i17: k >= 0;\nloop invariant i18: k <= l;\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant n >= 0;\nloop invariant l >= 0 ==> l < n;\nloop invariant l >= 0 ==> i >= 0;\nloop invariant l >= 0 ==> j >= 0;\nloop invariant l >= 0 ==> k >= 0;\nloop invariant l >= 0 ==> v3 >= 0;\nloop invariant l >= 0 ==> v4 >= 0;\nloop invariant l >= 0 ==> i + j + k + v4 + v3 == l;\nloop invariant l >= 0 ==> l <= n;\nloop invariant l >= 0 ==> (l%5 != 0 ==> v3 == 0);\nloop invariant l >= 0 ==> (l%4 != 0 ==> v4 == 0);\nloop invariant l >= 0 ==> (l%3 != 0 ==> i == 0);\nloop invariant l >= 0 ==> (l%2 != 0 ==> j == 0);\nloop invariant l >= 0 ==> (l%5 == 0 ==> v3 == 1);\nloop invariant l >= 0 ==> (l%4 == 0 ==> v4 == 1);\nloop invariant l >= 0 ==> (l%3 == 0 ==> i == 1);\nloop invariant l >= 0 ==> (l%2 == 0 ==> j == 1);\nloop invariant l >= 0 ==> (l%5 != 0 ==> v3 == 0);\nloop invariant l >= 0 ==> (l%4 != 0 ==> v4 == 0);\nloop invariant l >= 0 ==> (l%3 != 0 ==> i == 0);\nloop invariant l >= 0 ==> (l%2 != 0 ==> j == 0);\nloop invariant l >= 0 ==> (l%5 == 0 ==> v3 == 1);\nloop invariant l >= 0 ==> (l%4 == 0 ==> v4 == 1);\nloop invariant l >= 0 ==> (l%3 == 0 ==> i == 1);\nloop invariant l >= 0 ==> (l%2 == 0 ==> j == 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: n >= 0;\n\nloop invariant i3: l >= 0 ==> i >= 0;\nloop invariant i4: l >= 0 ==> j >= 0;\nloop invariant i5: l >= 0 ==> k >= 0;\nloop invariant i6: l >= 0 ==> v3 >= 0;\nloop invariant i7: l >= 0 ==> v4 >= 0;\nloop invariant i8: l >= 0 ==> i + j + k + v4 + v3 == l;\nloop invariant i9: l >= 0 ==> l <= n;\n\n\n\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3) == l);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 97: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i <= n/2;\nloop invariant i3: 0 <= j <= n/2;\nloop invariant i4: 0 <= k <= n/2;\nloop invariant i5: 0 <= v3 <= n/5;\nloop invariant i6: 0 <= v4 <= n/4;\nloop invariant i7: (i+j+k+v4+v3) <= l;\nloop invariant i8: (i+j+k+v4+v3) <= n;\nloop invariant i9: (i+j+k+v4+v3+l) > 0;\nloop invariant i10: 0 <= (i+j+k+v4+v3+l) <= 2*n;\nloop invariant i11: 0 <= n <= SIZE;\nloop invariant i12: 0 <= i <= n/3;\nloop invariant i13: 0 <= k <= n;\nloop invariant i14: (i+2*j+2*k+1*v4+1*v3) <= (l-1);\nloop invariant i15: (i+2*j+2*k+1*v4+1*v3) <= (n-1);\nloop invariant i16: (i+j+k+v4+v3) == l ==> (i+j+k+v4+v3) == l;\nloop invariant i17: l == n ==> (i+j+k+v4+v3) == l;\nloop invariant i18: v3 <= n;\nloop invariant i19: v4 <= n;\nloop invariant i20: i <= n;\nloop invariant i21: j <= n;\nloop invariant i22: k <= n;\nloop invariant i23: l <= n;\nloop invariant i24: v3 + v4 + i + j + k <= n;\nloop invariant i25: v3 + v4 + i + j + k == n;\nloop invariant i26: 0 <= i <= n;\nloop invariant i27: 0 <= j <= n;\nloop invariant i28: 0 <= v3 <= n;\nloop invariant i29: 0 <= v4 <= n;\nloop invariant i30: 0 <= i <= n / 3;\nloop invariant i31: 0 <= j <= n / 2;\nloop invariant i32: 0 <= v3 <= n / 5;\nloop invariant i33: 0 <= v4 <= n / 4;\nloop invariant i34: i + j + k + v4 + v3 <= l;\nloop invariant i35: i1;\nloop invariant i36: i2;\nloop invariant i37: i >= 0;\nloop invariant i38: j >= 0;\nloop invariant i39: k >= 0;\nloop invariant i40: v3 >= 0;\nloop invariant i41: v4 >= 0;\nloop invariant i42: (i + j + k + v4 + v3) + l == n;\nloop invariant i43: i + j + k + v4 + v3 == l;\nloop invariant i44: i <= l;\nloop invariant i45: j <= l;\nloop invariant i46: k <= l;\nloop invariant i47: v4 <= l;\nloop invariant i48: v3 <= l;\nloop invariant i49: i + j + k + v4 + v3 <= n;\nloop invariant i50: i + j + k + v4 + v3 >= 0;\nloop invariant i51: i + j + k + v4 + v3 >= l;\nloop invariant i52: (i + j + k + v4 + v3) % 5 == 0 ==> v3 == (i + j + k + v4 + v3) / 5;\nloop invariant i53: (i + j + k + v4 + v3) % 4 == 0 ==> v4 == (i + j + k + v4 + v3) / 4;\nloop invariant i54: (i + j + k + v4 + v3) % 3 == 0 ==> i == (i + j + k + v4 + v3) / 3;\nloop invariant i55: (i + j + k + v4 + v3) % 2 == 0 ==> j == (i + j + k + v4 + v3) / 2;\nloop invariant i56: j == 0 ==> (i + k + v4 + v3) % 2 == 0;\nloop invariant i57: k == 0 ==> (i + j + v4 + v3) % 3 == 0;\nloop invariant i58: v4 == 0 ==> (i + j + k + v3) % 4 == 0;\nloop invariant i59: v3 == 0 ==> (i + j + k + v4) % 5 == 0;\nloop invariant i60: (i + j + k + v4 + v3) % 5 == 0 ==> k <= (i + j + v4 + v3) / 5;\nloop invariant i61: (i + j + k + v4 + v3) % 4 == 0 ==> k <= (i + j + v4 + v3) / 4 - v4 / 4;\nloop invariant i62: (i + j + k + v4 + v3) % 3 == 0 ==> k <= (i + j + v4 + v3) / 3 - v4 / 3 - v3 / 3;\nloop invariant i63: (i + j + k + v4 + v3) % 2 == 0 ==> k <= (i + j + v4 + v3) / 2 - v4 / 2 - v3 / 2 - j / 2;\nloop invariant i64: j == 0 ==> k <= (i + v4 + v3) / 2;\nloop invariant i65: k == 0 ==> j <= (i + v4 + v3) / 3 - v4 / 3 - v3 / 3;\nloop invariant i66: v4 == 0 ==> j <= (i + v3) / 4 - v3 / 4;\nloop invariant i67: v3 == 0 ==> j <= (i + v4) / 5 - v4 / 5;\nloop invariant i68: v4 == 0 ==> i <= (j + v3) / 4;\nloop invariant i69: v3 == 0 ==> i <= (j + v4) / 5 - v4 / 5;\nloop invariant i70: v4 == 0 ==> i <= (j + v3) / 3 - v3 / 3;\nloop invariant i71: v3 == 0 ==> i <= (j + v4) / 2 - v4 / 2;\nloop invariant i72: j == 0 ==> i <= (v4 + v3) / 2;\nloop invariant i73: k == 0 ==> i <= (v4 + v3) / 3 - v4 / 3 - v3 / 3;\nloop invariant i74: v4 == 0 ==> i <= (v3) / 4 - v3 / 4;\nloop invariant i75: v3 == 0 ==> i <= (v4) / 5 - v4 / 5;\nloop invariant i76: v4 == 0 ==> v3 <= (i) / 4 - i / 4;\nloop invariant i77: v3 == 0 ==> v4 <= (i) / 5 - i / 5;\nloop invariant i78: 0 <= k <= n/3;\nloop invariant i79: (i + j + k + v4 + v3) == l;\nloop invariant i80: l == n || ((l%5) && (l%4) && (l%3) && (l%2));\nloop invariant i81: i = (l/3) * (l/3 + 1) / 2;\nloop invariant i82: j = (l/2) * (l/2 + 1) / 2;\nloop invariant i83: k = (l/4) * (l/4 + 1) / 2;\nloop invariant i84: v3 = (l/5) * (l/5 + 1) / 2;\nloop invariant i85: v4 = (l/4) * (l/4 + 1) / 2;\nloop invariant i86: i + j + k + v4 + v3 = l;\nloop invariant i87: n >= l;\nloop invariant i88: n <= SIZE;\nloop invariant i89: k <= l/4;\nloop invariant i90: j <= l/2;\nloop invariant i91: i <= l/3;\nloop invariant i92: v3 <= l/5;\nloop invariant i93: v4 <= l/4;\nloop invariant i94: 0 <= l%5;\nloop invariant i95: 0 <= l%4;\nloop invariant i96: 0 <= l%3;\nloop invariant i97: 0 <= l%2;\nloop invariant i98: l%5 <= 4;\nloop invariant i99: l%4 <= 3;\nloop invariant i100: l%3 <= 2;\nloop invariant i101: l%2 <= 1;\nloop invariant i102: 0 <= i;\nloop invariant i103: 0 <= j;\nloop invariant i104: 0 <= k;\nloop invariant i105: 0 <= v3;\nloop invariant i106: 0 <= v4;\nloop invariant i107: 0 <= l;\nloop invariant i108: 0 <= l <= SIZE;\nloop invariant i109: if(l%5==0) v3 == l/5 else v3 == (l-1)/5;\nloop invariant i110: if(l%4==0) v4 == l/4 else v4 == (l-1)/4;\nloop invariant i111: if(l%3==0) i == l/3 else i == (l-1)/3;\nloop invariant i112: if(l%2==0) j == l/2 else j == (l-1)/2;\nloop invariant i113: if(l%5==0 && l%4==0) v3+v4 == 2*l/20 else v3+v4 <= l/20;\nloop invariant i114: if(l%3==0 && l%2==0) i+j == 2*l/6 else i+j <= l/6;\nloop invariant i115: if(l%5==0 && l%3==0 && l%2==0) i+j+v3+v4 == 2*l/15 else i+j+v3+v4 <= l/15;\nloop invariant i116: if(l%5==0 && l%4==0 && l%3==0 && l%2==0) i+j+v3+v4+k == 2*l/5 else i+j+v3+v4+k <= l/5;\nloop invariant i117: if(l%5==0 && l%4==0 && l%3==0 && l%2==0) i+j+v3+v4+k == l else i+j+v3+v4+k <= l;\nloop invariant i118: if(l%5==0 && l%4==0 && l%3==0 && l%2==0) v3+v4+i+j+k == l else v3+v4+i+j+k <= l;\nloop invariant i119: 0 <= i <= l;\nloop invariant i120: 0 <= j <= l;\nloop invariant i121: 0 <= k <= l;\nloop invariant i122: 0 <= v3 <= l;\nloop invariant i123: 0 <= v4 <= l;\nloop invariant i124: (i + j + k + v4 + v3) <= n;\nloop invariant i125: (l % 5) == 0 ==> (v3 <= l/5);\nloop invariant i126: (l % 5) != 0 ==> (v3 == 0);\nloop invariant i127: (l % 4) == 0 ==> (v4 <= l/4);\nloop invariant i128: (l % 4) != 0 ==> (v4 == 0);\nloop invariant i129: (l % 3) == 0 ==> (i <= l/3);\nloop invariant i130: (l % 3) != 0 ==> (i == 0);\nloop invariant i131: (l % 2) == 0 ==> (j <= l/2);\nloop invariant i132: (l % 2) != 0 ==> (j == 0);\nloop invariant i133: k <= (n - l);\nloop invariant i134: n >= 0;\nloop invariant i135: l >= 0 ==> l < n;\nloop invariant i136: l >= 0 ==> i >= 0;\nloop invariant i137: l >= 0 ==> j >= 0;\nloop invariant i138: l >= 0 ==> k >= 0;\nloop invariant i139: l >= 0 ==> v3 >= 0;\nloop invariant i140: l >= 0 ==> v4 >= 0;\nloop invariant i141: l >= 0 ==> i + j + k + v4 + v3 == l;\nloop invariant i142: l >= 0 ==> l <= n;\nloop invariant i143: l >= 0 ==> (l%5 != 0 ==> v3 == 0);\nloop invariant i144: l >= 0 ==> (l%4 != 0 ==> v4 == 0);\nloop invariant i145: l >= 0 ==> (l%3 != 0 ==> i == 0);\nloop invariant i146: l >= 0 ==> (l%2 != 0 ==> j == 0);\nloop invariant i147: l >= 0 ==> (l%5 == 0 ==> v3 == 1);\nloop invariant i148: l >= 0 ==> (l%4 == 0 ==> v4 == 1);\nloop invariant i149: l >= 0 ==> (l%3 == 0 ==> i == 1);\nloop invariant i150: l >= 0 ==> (l%2 == 0 ==> j == 1);\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3) == l);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 40,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\n\n\n\nloop invariant i7: (i+j+k+v4+v3) <= l;\nloop invariant i8: (i+j+k+v4+v3) <= n;\n\nloop invariant i10: 0 <= (i+j+k+v4+v3+l) <= 2*n;\nloop invariant i11: 0 <= n <= SIZE;\n\nloop invariant i13: 0 <= k <= n;\n\n\nloop invariant i16: (i+j+k+v4+v3) == l ==> (i+j+k+v4+v3) == l;\nloop invariant i17: l == n ==> (i+j+k+v4+v3) == l;\nloop invariant i18: v3 <= n;\nloop invariant i19: v4 <= n;\nloop invariant i20: i <= n;\nloop invariant i21: j <= n;\nloop invariant i22: k <= n;\nloop invariant i23: l <= n;\nloop invariant i24: v3 + v4 + i + j + k <= n;\n\nloop invariant i26: 0 <= i <= n;\nloop invariant i27: 0 <= j <= n;\nloop invariant i28: 0 <= v3 <= n;\nloop invariant i29: 0 <= v4 <= n;\n\n\n\n\nloop invariant i34: i + j + k + v4 + v3 <= l;\n\n\nloop invariant i37: i >= 0;\nloop invariant i38: j >= 0;\nloop invariant i39: k >= 0;\nloop invariant i40: v3 >= 0;\nloop invariant i41: v4 >= 0;\n\nloop invariant i43: i + j + k + v4 + v3 == l;\nloop invariant i44: i <= l;\nloop invariant i45: j <= l;\nloop invariant i46: k <= l;\nloop invariant i47: v4 <= l;\nloop invariant i48: v3 <= l;\nloop invariant i49: i + j + k + v4 + v3 <= n;\nloop invariant i50: i + j + k + v4 + v3 >= 0;\nloop invariant i51: i + j + k + v4 + v3 >= l;\n\n\n\n\n\n\n\nloop invariant i59: v3 == 0 ==> (i + j + k + v4) % 5 == 0;\n\n\n\n\n\n\n\nloop invariant i67: v3 == 0 ==> j <= (i + v4) / 5 - v4 / 5;\n\nloop invariant i69: v3 == 0 ==> i <= (j + v4) / 5 - v4 / 5;\n\nloop invariant i71: v3 == 0 ==> i <= (j + v4) / 2 - v4 / 2;\n\n\n\nloop invariant i75: v3 == 0 ==> i <= (v4) / 5 - v4 / 5;\n\nloop invariant i77: v3 == 0 ==> v4 <= (i) / 5 - i / 5;\n\nloop invariant i79: (i + j + k + v4 + v3) == l;\n\n\n\n\n\n\n\nloop invariant i87: n >= l;\nloop invariant i88: n <= SIZE;\n\n\n\n\n\nloop invariant i94: 0 <= l%5;\nloop invariant i95: 0 <= l%4;\nloop invariant i96: 0 <= l%3;\nloop invariant i97: 0 <= l%2;\nloop invariant i98: l%5 <= 4;\nloop invariant i99: l%4 <= 3;\nloop invariant i100: l%3 <= 2;\nloop invariant i101: l%2 <= 1;\nloop invariant i102: 0 <= i;\nloop invariant i103: 0 <= j;\nloop invariant i104: 0 <= k;\nloop invariant i105: 0 <= v3;\nloop invariant i106: 0 <= v4;\nloop invariant i107: 0 <= l;\nloop invariant i108: 0 <= l <= SIZE;\n\n\n\n\n\n\n\n\n\n\nloop invariant i119: 0 <= i <= l;\nloop invariant i120: 0 <= j <= l;\nloop invariant i121: 0 <= k <= l;\nloop invariant i122: 0 <= v3 <= l;\nloop invariant i123: 0 <= v4 <= l;\nloop invariant i124: (i + j + k + v4 + v3) <= n;\n\n\n\n\n\n\n\n\n\nloop invariant i134: n >= 0;\n\nloop invariant i136: l >= 0 ==> i >= 0;\nloop invariant i137: l >= 0 ==> j >= 0;\nloop invariant i138: l >= 0 ==> k >= 0;\nloop invariant i139: l >= 0 ==> v3 >= 0;\nloop invariant i140: l >= 0 ==> v4 >= 0;\nloop invariant i141: l >= 0 ==> i + j + k + v4 + v3 == l;\nloop invariant i142: l >= 0 ==> l <= n;\n\n\n\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n  }\n  {;\n//@ assert((i+j+k+v4+v3) == l);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark16_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark17_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark19_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark20_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark21_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark22_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark23_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark25_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark26_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark27_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark29_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark30_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark31_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark32_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark33_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark34_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark35_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark36_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark37_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark38_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark39_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark40_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark41_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark42_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark43_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark45_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark46_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark47_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark48_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark49_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark50_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark51_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark52_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark53_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/Mono1_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/iftelse.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/loopv1.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/loopv3.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_11.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_8.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sum_natnum.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt2.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt3.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt4.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt5.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_10.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_12.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_9.c"
        ],
        "skipped": [],
        "total": 185,
        "success_count": 165,
        "failure_count": 20,
        "success_rate": 0.8918918918918919
    }
}