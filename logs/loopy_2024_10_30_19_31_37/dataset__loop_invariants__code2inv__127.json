{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/127.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  while ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= i <= x;\nloop invariant 0 <= j <= y;\nloop invariant i <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i == j ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant i != j ==> y != 0;\nloop invariant x != 0 ==> y != 0;\nloop invariant x == 0 ==> i == j;\nloop invariant x == 0 ==> j == i;\nloop invariant x == 0 ==> y == 0;\nloop invariant x != 0 ==> i <= j;\nloop invariant x != 0 ==> j >= i;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= y;\nloop invariant x != 0 ==> j >= i;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= j;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 100000;\nloop invariant y <= 100000;\nloop invariant 1 <= y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000 + y;\nloop invariant y <= x;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant y <= x;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant y <= i - x;\nloop invariant y == j - i + x;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j + y;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= i;\nloop invariant 1 <= y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant y >= (j - i) * (j - i + 1) / 2;\nloop invariant x >= i + (j - i) * (j - i + 1) / 2;\nloop invariant (y != 0) ==> (i != j);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant y >= x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x != 0 ==> y != 0;\nloop invariant x == 0 ==> y == 0;\n*/\n```",
            "```\n/*@\nloop invariant loop invariant 0 <= y <= z1;\nloop invariant x >= z2;\nloop invariant z3 == 0;\nloop invariant z2 == (y - 1);\nloop invariant z1 == x;\nloop invariant i == (x + 1);\nloop invariant j == (y + 1);\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= 1073741824;\nloop invariant z2 <= 1073741824;\nloop invariant z3 <= 1073741824;\nloop invariant z1 >= z2;\nloop invariant z2 >= z3;\nloop invariant z3 <= z1;\nloop invariant z2 <= z1;\nloop invariant z1 <= z2;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= (i - j);\nloop invariant y >= (j - i);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x = i - j;\nloop invariant y = j - x;\nloop invariant x != 0 ==> (i != j);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= (i - j);\nloop invariant x + y >= (i + j);\nloop invariant x + y + z1 + z2 + z3 == i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) >= i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) <= i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) < i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) > i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) >= i + j ==> (x + y + z1 + z2 + z3) <= i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) >= i + j ==> (x + y + z1 + z2 + z3) < i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) >= i + j ==> (x + y + z1 + z2 + z3) > i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) <= i + j ==> (x + y + z1 + z2 + z3) >= i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) <= i + j ==> (x + y + z1 + z2 + z3) < i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) <= i + j ==> (x + y + z1 + z2 + z3) > i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) < i + j ==> (x + y + z1 + z2 + z3) >= i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) < i + j ==> (x + y + z1 + z2 + z3) <= i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) < i + j ==> (x + y + z1 + z2 + z3) > i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) > i + j ==> (x + y + z1 + z2 + z3) >= i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) > i + j ==> (x + y + z1 + z2 + z3) <= i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) > i + j ==> (x + y + z1 + z2 + z3) < i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) >= i + j ==> (x + y + z1 + z2 + z3) <= i + j ==> (x + y + z1 + z2 + z3) < i + j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= x;\nloop invariant 0 <= j <= y;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= y || x == 0;\nloop invariant i >= j || x == 0;\nloop invariant i >= 0 || x == 0;\nloop invariant j >= 0 || x == 0;\nloop invariant i <= j || x == 0;\nloop invariant j <= x || x == 0;\nloop invariant x >= j || x == 0;\nloop invariant i == j || x == 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= y || x == 0;\nloop invariant i >= j || x == 0;\nloop invariant i >= 0 || x == 0;\nloop invariant j >= 0 || x == 0;\nloop invariant i <= j || x == 0;\nloop invariant j <= x || x == 0;\nloop invariant x >= j || x == 0;\nloop invariant i == j || x == 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= y || x == 0;\nloop invariant i >= j || x == 0;\nloop invariant i >= 0 || x == 0;\nloop invariant j >= 0 || x == 0;\nloop invariant i <= j || x == 0;\nloop invariant j <= x || x == 0;\nloop invariant x >= j || x == 0;\nloop invariant i == j || x == 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= y || x == 0;\nloop invariant i >= j || x == 0;\nloop invariant i >= 0 || x == 0;\nloop invariant j >= 0 || x == 0;\nloop invariant i <= j || x == 0;\nloop invariant j <= x || x == 0;\nloop invariant x >= j || x == 0;\nloop invariant i == j || x == 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= y || x == 0;\nloop invariant i >= j || x == 0;\nloop invariant i >= 0 || x == 0;\nloop invariant j >= 0 || x == 0;\nloop invariant i <= j || x == 0;\nloop invariant j <= x || x == 0;\nloop invariant x >= j || x == 0;\nloop invariant i == j || x == 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= y || x == 0;\nloop invariant i >= j || x == 0;\nloop invariant i >= 0 || x == 0;\nloop invariant j >= 0 || x == 0;\nloop invariant i <= j || x == 0;\nloop invariant j <= x || x == 0;\nloop invariant x >= j || x == 0;\nloop invariant i == j || x == 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= y || x == 0;\nloop invariant i >= j || x == 0;\nloop invariant i >= 0 || x == 0;\nloop invariant j >= 0 || x == 0;\nloop invariant i <= j || x == 0;\nloop invariant j <= x || x == 0;\nloop invariant x >= j || x == 0;\nloop invariant i == j || x == 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= y || x == 0;\nloop invariant i >= j || x == 0;\nloop invariant i >= 0 || x == 0;\nloop invariant j >= 0 || x == 0;\nloop invariant i <= j || x == 0;\nloop invariant j <= x || x == 0;\nloop invariant x >= j || x == 0;\nloop invariant i == j || x == 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= y || x == 0;\nloop invariant i >= j || x == 0;\nloop invariant i >= 0 || x == 0;\nloop invariant j >= 0 || x == 0;\nloop invariant i <= j || x == 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= i;\nloop invariant 1 <= y <= j;\nloop invariant x >= (1 + (i - 1) * i / 2);\nloop invariant y >= (1 + (j - 1) * j / 2);\nloop invariant !(i == j) ==> (x != y);\nloop invariant x >= y;\nloop invariant y >= x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i - (x + y) >= 0;\nloop invariant j - (x + y) >= 0;\nloop invariant i - x >= y;\nloop invariant i - x <= j;\nloop invariant j - x >= y;\nloop invariant j - x <= i;\nloop invariant i - y >= x;\nloop invariant i - y <= j;\nloop invariant j - y >= x;\nloop invariant j - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= y;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= x;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= y;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= x;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= y;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= x;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= y;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= x;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= y;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= x;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= y;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= x;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= y;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= x;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= y;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= x;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= y;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= x;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= y;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= x;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= x;\nloop invariant 0 <= j <= y;\nloop invariant i <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i == j ==> y == 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant i != j ==> y != 0;\nloop invariant x != 0 ==> y != 0;\nloop invariant x == 0 ==> i == j;\nloop invariant x == 0 ==> j == i;\nloop invariant x == 0 ==> y == 0;\nloop invariant x != 0 ==> i <= j;\nloop invariant x != 0 ==> j >= i;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= y;\nloop invariant x != 0 ==> j >= i;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= j;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\nloop invariant x != 0 ==> i >= 0;\nloop invariant x != 0 ==> i <= x;\nloop invariant x != 0 ==> j >= 0;\nloop invariant x != 0 ==> j <= x;\nloop invariant x != 0 ==> y >= 0;\nloop invariant x != 0 ==> y <= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 100000;\nloop invariant y <= 100000;\nloop invariant 1 <= y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000 + y;\nloop invariant y <= x;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant y <= x;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant y <= i - x;\nloop invariant y == j - i + x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\nloop invariant i4: y == j - i + x;\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\nloop invariant i5: x <= i;\nloop invariant i6: y <= j;\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - j + y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\nloop invariant i3: x <= i;\nloop invariant i4: y <= j;\nloop invariant i5: x == i - j + y;\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= i;\nloop invariant 1 <= y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\nloop invariant i3: x + y <= i + j;\n\n\nloop invariant i6: x <= i;\nloop invariant i7: y <= j;\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant y >= (j - i) * (j - i + 1) / 2;\nloop invariant x >= i + (j - i) * (j - i + 1) / 2;\nloop invariant (y != 0) ==> (i != j);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant y >= x;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x != 0 ==> y != 0;\nloop invariant x == 0 ==> y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant loop invariant 0 <= y <= z1;\nloop invariant x >= z2;\nloop invariant z3 == 0;\nloop invariant z2 == (y - 1);\nloop invariant z1 == x;\nloop invariant i == (x + 1);\nloop invariant j == (y + 1);\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= 1073741824;\nloop invariant z2 <= 1073741824;\nloop invariant z3 <= 1073741824;\nloop invariant z1 >= z2;\nloop invariant z2 >= z3;\nloop invariant z3 <= z1;\nloop invariant z2 <= z1;\nloop invariant z1 <= z2;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\nloop invariant z3 <= z2;\nloop invariant z1 <= z2;\nloop invariant z2 <= z1;\nloop invariant z1 >= z3;\nloop invariant z2 >= z3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= (i - j);\nloop invariant y >= (j - i);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x = i - j;\nloop invariant y = j - x;\nloop invariant x != 0 ==> (i != j);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= (i - j);\nloop invariant x + y >= (i + j);\nloop invariant x + y + z1 + z2 + z3 == i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) >= i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) <= i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) < i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) > i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) >= i + j ==> (x + y + z1 + z2 + z3) <= i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) >= i + j ==> (x + y + z1 + z2 + z3) < i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) >= i + j ==> (x + y + z1 + z2 + z3) > i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) <= i + j ==> (x + y + z1 + z2 + z3) >= i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) <= i + j ==> (x + y + z1 + z2 + z3) < i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) <= i + j ==> (x + y + z1 + z2 + z3) > i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) < i + j ==> (x + y + z1 + z2 + z3) >= i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) < i + j ==> (x + y + z1 + z2 + z3) <= i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) < i + j ==> (x + y + z1 + z2 + z3) > i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) > i + j ==> (x + y + z1 + z2 + z3) >= i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) > i + j ==> (x + y + z1 + z2 + z3) <= i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) > i + j ==> (x + y + z1 + z2 + z3) < i + j;\nloop invariant x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) >= i + j ==> (x + y + z1 + z2 + z3) <= i + j ==> (x + y + z1 + z2 + z3) < i + j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\nloop invariant i6: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) >= i + j;\nloop invariant i7: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) <= i + j;\n\n\nloop invariant i10: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) >= i + j ==> (x + y + z1 + z2 + z3) <= i + j;\n\n\nloop invariant i13: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) <= i + j ==> (x + y + z1 + z2 + z3) >= i + j;\n\n\nloop invariant i16: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) < i + j ==> (x + y + z1 + z2 + z3) >= i + j;\nloop invariant i17: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) < i + j ==> (x + y + z1 + z2 + z3) <= i + j;\nloop invariant i18: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) < i + j ==> (x + y + z1 + z2 + z3) > i + j;\nloop invariant i19: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) > i + j ==> (x + y + z1 + z2 + z3) >= i + j;\nloop invariant i20: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) > i + j ==> (x + y + z1 + z2 + z3) <= i + j;\nloop invariant i21: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) > i + j ==> (x + y + z1 + z2 + z3) < i + j;\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= x;\nloop invariant 0 <= j <= y;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= y || x == 0;\nloop invariant i >= j || x == 0;\nloop invariant i >= 0 || x == 0;\nloop invariant j >= 0 || x == 0;\nloop invariant i <= j || x == 0;\nloop invariant j <= x || x == 0;\nloop invariant x >= j || x == 0;\nloop invariant i == j || x == 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= y || x == 0;\nloop invariant i >= j || x == 0;\nloop invariant i >= 0 || x == 0;\nloop invariant j >= 0 || x == 0;\nloop invariant i <= j || x == 0;\nloop invariant j <= x || x == 0;\nloop invariant x >= j || x == 0;\nloop invariant i == j || x == 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= y || x == 0;\nloop invariant i >= j || x == 0;\nloop invariant i >= 0 || x == 0;\nloop invariant j >= 0 || x == 0;\nloop invariant i <= j || x == 0;\nloop invariant j <= x || x == 0;\nloop invariant x >= j || x == 0;\nloop invariant i == j || x == 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= y || x == 0;\nloop invariant i >= j || x == 0;\nloop invariant i >= 0 || x == 0;\nloop invariant j >= 0 || x == 0;\nloop invariant i <= j || x == 0;\nloop invariant j <= x || x == 0;\nloop invariant x >= j || x == 0;\nloop invariant i == j || x == 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= y || x == 0;\nloop invariant i >= j || x == 0;\nloop invariant i >= 0 || x == 0;\nloop invariant j >= 0 || x == 0;\nloop invariant i <= j || x == 0;\nloop invariant j <= x || x == 0;\nloop invariant x >= j || x == 0;\nloop invariant i == j || x == 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= y || x == 0;\nloop invariant i >= j || x == 0;\nloop invariant i >= 0 || x == 0;\nloop invariant j >= 0 || x == 0;\nloop invariant i <= j || x == 0;\nloop invariant j <= x || x == 0;\nloop invariant x >= j || x == 0;\nloop invariant i == j || x == 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= y || x == 0;\nloop invariant i >= j || x == 0;\nloop invariant i >= 0 || x == 0;\nloop invariant j >= 0 || x == 0;\nloop invariant i <= j || x == 0;\nloop invariant j <= x || x == 0;\nloop invariant x >= j || x == 0;\nloop invariant i == j || x == 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= y || x == 0;\nloop invariant i >= j || x == 0;\nloop invariant i >= 0 || x == 0;\nloop invariant j >= 0 || x == 0;\nloop invariant i <= j || x == 0;\nloop invariant j <= x || x == 0;\nloop invariant x >= j || x == 0;\nloop invariant i == j || x == 0;\nloop invariant i <= x;\nloop invariant j <= y;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant x >= y || x == 0;\nloop invariant i >= j || x == 0;\nloop invariant i >= 0 || x == 0;\nloop invariant j >= 0 || x == 0;\nloop invariant i <= j || x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= i;\nloop invariant 1 <= y <= j;\nloop invariant x >= (1 + (i - 1) * i / 2);\nloop invariant y >= (1 + (j - 1) * j / 2);\nloop invariant !(i == j) ==> (x != y);\nloop invariant x >= y;\nloop invariant y >= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\nloop invariant i5: !(i == j) ==> (x != y);\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant i - (x + y) >= 0;\nloop invariant j - (x + y) >= 0;\nloop invariant i - x >= y;\nloop invariant i - x <= j;\nloop invariant j - x >= y;\nloop invariant j - x <= i;\nloop invariant i - y >= x;\nloop invariant i - y <= j;\nloop invariant j - y >= x;\nloop invariant j - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= y;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= x;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= y;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= x;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= y;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= x;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= y;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= x;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= y;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= x;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= y;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= x;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= y;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= x;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= y;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= x;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= y;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= x;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= y;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= x;\nloop invariant j - x - y <= i;\nloop invariant i - x - y >= 0;\nloop invariant i - x - y <= j;\nloop invariant j - x - y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\nloop invariant i6: x <= i;\nloop invariant i7: y <= j;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 69: unexpected token 'invariant'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\nloop invariant i1: 0 <= i <= x;\nloop invariant i2: 0 <= j <= y;\nloop invariant i3: i <= j;\nloop invariant i4: x >= 0;\nloop invariant i5: y >= 0;\nloop invariant i6: i == j ==> y == 0;\nloop invariant i7: x == 0 ==> y == 0;\nloop invariant i8: i != j ==> y != 0;\nloop invariant i9: x != 0 ==> y != 0;\nloop invariant i10: x == 0 ==> i == j;\nloop invariant i11: x == 0 ==> j == i;\nloop invariant i12: x != 0 ==> i <= j;\nloop invariant i13: x != 0 ==> j >= i;\nloop invariant i14: x != 0 ==> y >= 0;\nloop invariant i15: x != 0 ==> y <= x;\nloop invariant i16: x != 0 ==> i >= 0;\nloop invariant i17: x != 0 ==> i <= y;\nloop invariant i18: x != 0 ==> j <= x;\nloop invariant i19: x != 0 ==> y >= j;\nloop invariant i20: x != 0 ==> i <= x;\nloop invariant i21: x != 0 ==> j >= 0;\nloop invariant i22: 1 <= x <= 100000;\nloop invariant i23: y <= 100000;\nloop invariant i24: 1 <= y <= 100000;\nloop invariant i25: x >= y;\nloop invariant i26: x <= 100000 + y;\nloop invariant i27: y <= x;\nloop invariant i28: x <= 100000;\nloop invariant i29: x >= 1;\nloop invariant i30: 0 <= x <= i;\nloop invariant i31: 0 <= y <= j;\nloop invariant i32: y <= i - x;\nloop invariant i33: y == j - i + x;\nloop invariant i34: 1 <= x <= i;\nloop invariant i35: x <= i;\nloop invariant i36: y <= j;\nloop invariant i37: i >= 0;\nloop invariant i38: j >= 0;\nloop invariant i39: 0 <= x;\nloop invariant i40: 0 <= y;\nloop invariant i41: x == i - j + y;\nloop invariant i42: 1 <= y <= j;\nloop invariant i43: x + y <= i + j;\nloop invariant i44: y >= (j - i) * (j - i + 1) / 2;\nloop invariant i45: x >= i + (j - i) * (j - i + 1) / 2;\nloop invariant i46: (y != 0) ==> (i != j);\nloop invariant i47: 0 <= x <= y;\nloop invariant i48: y >= x;\nloop invariant i49: loop invariant 0 <= y <= z1;\nloop invariant i50: x >= z2;\nloop invariant i51: z3 == 0;\nloop invariant i52: z2 == (y - 1);\nloop invariant i53: z1 == x;\nloop invariant i54: i == (x + 1);\nloop invariant i55: j == (y + 1);\nloop invariant i56: z1 >= 0;\nloop invariant i57: z2 >= 0;\nloop invariant i58: z3 >= 0;\nloop invariant i59: z1 <= 1073741824;\nloop invariant i60: z2 <= 1073741824;\nloop invariant i61: z3 <= 1073741824;\nloop invariant i62: z1 >= z2;\nloop invariant i63: z2 >= z3;\nloop invariant i64: z3 <= z1;\nloop invariant i65: z2 <= z1;\nloop invariant i66: z1 <= z2;\nloop invariant i67: z1 >= z3;\nloop invariant i68: z3 <= z2;\nloop invariant i69: x >= (i - j);\nloop invariant i70: y >= (j - i);\nloop invariant i71: x = i - j;\nloop invariant i72: y = j - x;\nloop invariant i73: x != 0 ==> (i != j);\nloop invariant i74: x + y >= (i + j);\nloop invariant i75: x + y + z1 + z2 + z3 == i + j;\nloop invariant i76: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) >= i + j;\nloop invariant i77: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) <= i + j;\nloop invariant i78: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) < i + j;\nloop invariant i79: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) > i + j;\nloop invariant i80: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) >= i + j ==> (x + y + z1 + z2 + z3) <= i + j;\nloop invariant i81: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) >= i + j ==> (x + y + z1 + z2 + z3) < i + j;\nloop invariant i82: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) >= i + j ==> (x + y + z1 + z2 + z3) > i + j;\nloop invariant i83: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) <= i + j ==> (x + y + z1 + z2 + z3) >= i + j;\nloop invariant i84: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) <= i + j ==> (x + y + z1 + z2 + z3) < i + j;\nloop invariant i85: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) <= i + j ==> (x + y + z1 + z2 + z3) > i + j;\nloop invariant i86: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) < i + j ==> (x + y + z1 + z2 + z3) >= i + j;\nloop invariant i87: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) < i + j ==> (x + y + z1 + z2 + z3) <= i + j;\nloop invariant i88: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) < i + j ==> (x + y + z1 + z2 + z3) > i + j;\nloop invariant i89: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) > i + j ==> (x + y + z1 + z2 + z3) >= i + j;\nloop invariant i90: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) > i + j ==> (x + y + z1 + z2 + z3) <= i + j;\nloop invariant i91: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) > i + j ==> (x + y + z1 + z2 + z3) < i + j;\nloop invariant i92: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) >= i + j ==> (x + y + z1 + z2 + z3) <= i + j ==> (x + y + z1 + z2 + z3) < i + j;\nloop invariant i93: x >= i;\nloop invariant i94: y >= j;\nloop invariant i95: x >= y || x == 0;\nloop invariant i96: i >= j || x == 0;\nloop invariant i97: i >= 0 || x == 0;\nloop invariant i98: j >= 0 || x == 0;\nloop invariant i99: i <= j || x == 0;\nloop invariant i100: j <= x || x == 0;\nloop invariant i101: x >= j || x == 0;\nloop invariant i102: i == j || x == 0;\nloop invariant i103: i <= x;\nloop invariant i104: j <= y;\nloop invariant i105: x >= (1 + (i - 1) * i / 2);\nloop invariant i106: y >= (1 + (j - 1) * j / 2);\nloop invariant i107: !(i == j) ==> (x != y);\nloop invariant i108: i - (x + y) >= 0;\nloop invariant i109: j - (x + y) >= 0;\nloop invariant i110: i - x >= y;\nloop invariant i111: i - x <= j;\nloop invariant i112: j - x >= y;\nloop invariant i113: j - x <= i;\nloop invariant i114: i - y >= x;\nloop invariant i115: i - y <= j;\nloop invariant i116: j - y >= x;\nloop invariant i117: j - y <= i;\nloop invariant i118: i - x - y >= 0;\nloop invariant i119: i - x - y <= j;\nloop invariant i120: j - x - y >= 0;\nloop invariant i121: j - x - y <= i;\nloop invariant i122: i - x - y >= y;\nloop invariant i123: j - x - y >= x;\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 22,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i33: y == j - i + x;\n\nloop invariant i35: x <= i;\nloop invariant i36: y <= j;\n\n\n\n\nloop invariant i41: x == i - j + y;\n\nloop invariant i43: x + y <= i + j;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i76: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) >= i + j;\nloop invariant i77: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) <= i + j;\n\n\nloop invariant i80: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) >= i + j ==> (x + y + z1 + z2 + z3) <= i + j;\n\n\nloop invariant i83: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) <= i + j ==> (x + y + z1 + z2 + z3) >= i + j;\n\n\nloop invariant i86: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) < i + j ==> (x + y + z1 + z2 + z3) >= i + j;\nloop invariant i87: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) < i + j ==> (x + y + z1 + z2 + z3) <= i + j;\nloop invariant i88: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) < i + j ==> (x + y + z1 + z2 + z3) > i + j;\nloop invariant i89: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) > i + j ==> (x + y + z1 + z2 + z3) >= i + j;\nloop invariant i90: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) > i + j ==> (x + y + z1 + z2 + z3) <= i + j;\nloop invariant i91: x + y + z1 + z2 + z3 == i + j ==> (x + y + z1 + z2 + z3) > i + j ==> (x + y + z1 + z2 + z3) < i + j;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i107: !(i == j) ==> (x != y);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (y != 0) )\n{;\n//@ assert( (i != j) );\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c"
        ],
        "failure": [],
        "skipped": [],
        "total": 4,
        "success_count": 4,
        "failure_count": 0,
        "success_rate": 1.0
    }
}