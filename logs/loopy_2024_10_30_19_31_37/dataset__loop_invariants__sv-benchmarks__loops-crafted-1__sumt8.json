{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt8.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  while( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant n <= SIZE;\nloop invariant 0 <= i <= l;\nloop invariant 0 <= j <= l;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= v1 <= l;\nloop invariant 0 <= v2 <= l;\nloop invariant 0 <= v3 <= l;\nloop invariant 0 <= v4 <= l;\nloop invariant 0 <= v5 <= l;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= v5 <= l/8;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) <= l;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) >= l;\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= l;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= i <= l;\nloop invariant 0 <= v1 <= l;\nloop invariant 0 <= v2 <= l;\nloop invariant 0 <= v3 <= l;\nloop invariant 0 <= v4 <= l;\nloop invariant 0 <= v5 <= l;\nloop invariant j + k + i + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant l <= n;\nloop invariant (if l <= n then j + k + i + v1 + v2 + v3 + v4 + v5 == l else true);\nloop invariant (if k == 0 then v5 == l else true);\nloop invariant (if j == 0 then v4 == l else true);\nloop invariant (if i == 0 then v3 == l else true);\nloop invariant (if v1 == 0 then v2 == l else true);\nloop invariant (if v2 == 0 then v1 == l else true);\nloop invariant (if v3 == 0 then v2 == l else true);\nloop invariant (if v4 == 0 then v1 == l else true);\nloop invariant (if v5 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v3 == l else true);\nloop invariant (if v2 == 0 then v3 == l else true);\nloop invariant (if v3 == 0 then v4 == l else true);\nloop invariant (if v4 == 0 then v5 == l else true);\nloop invariant (if v5 == 0 then v4 == l else true);\nloop invariant (if v1 == 0 then v5 == l else true);\nloop invariant (if v1 == 0 then v4 == l else true);\nloop invariant (if v1 == 0 then v3 == l else true);\nloop invariant (if v1 == 0 then v2 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= v1 <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant 0 <= v5 <= n;\nloop invariant l <= n;\nloop invariant l <= SIZE;\nloop invariant k <= j;\nloop invariant j <= i;\nloop invariant i <= v1;\nloop invariant v1 <= v2;\nloop invariant v2 <= v3;\nloop invariant v3 <= v4;\nloop invariant v4 <= v5;\nloop invariant v5 <= l;\nloop invariant k + j + i + v1 + v2 + v3 + v4 + v5 == l;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= l;\nloop invariant 0 <= j <= l;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= v1 <= l;\nloop invariant 0 <= v2 <= l;\nloop invariant 0 <= v3 <= l;\nloop invariant 0 <= v4 <= l;\nloop invariant 0 <= v5 <= l;\nloop invariant 0 <= n <= SIZE;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant l == n;\nloop invariant n <= l;\nloop invariant i <= l;\nloop invariant j <= l;\nloop invariant k <= l;\nloop invariant v1 <= l;\nloop invariant v2 <= l;\nloop invariant v3 <= l;\nloop invariant v4 <= l;\nloop invariant v5 <= l;\nloop invariant l <= n;\nloop invariant n <= SIZE;\nloop invariant l <= SIZE;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant i <= l;\nloop invariant j <= l;\nloop invariant k <= l;\nloop invariant v1 <= l;\nloop invariant v2 <= l;\nloop invariant v3 <= l;\nloop invariant v4 <= l;\nloop invariant v5 <= l;\nloop invariant i == (l / 2);\nloop invariant j == (l / 2);\nloop invariant k == l - (i + j);\nloop invariant v1 == (l / 7);\nloop invariant v2 == (l / 6);\nloop invariant v3 == (l / 5);\nloop invariant v4 == (l / 4);\nloop invariant v5 == (l / 8);\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant i == (l / 2) ==> i <= l;\nloop invariant j == (l / 2) ==> j <= l;\nloop invariant k == l - (i + j) ==> k <= l;\nloop invariant v1 == (l / 7) ==> v1 <= l;\nloop invariant v2 == (l / 6) ==> v2 <= l;\nloop invariant v3 == (l / 5) ==> v3 <= l;\nloop invariant v4 == (l / 4) ==> v4 <= l;\nloop invariant v5 == (l / 8) ==> v5 <= l;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 == l ==> i + j + k + v1 + v2 + v3 + v4 + v5 <= l;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= v5 <= l/8;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= v1 <= l;\nloop invariant n%8 == 0 || v1 + 1 == l;\nloop invariant 0 <= v2 <= l;\nloop invariant n%6 == 0 || v2 + 1 == l;\nloop invariant 0 <= v3 <= l;\nloop invariant n%5 == 0 || v3 + 1 == l;\nloop invariant 0 <= v4 <= l;\nloop invariant n%4 == 0 || v4 + 1 == l;\nloop invariant 0 <= v5 <= l;\nloop invariant n%8 == 0 || v5 + 1 == l;\nloop invariant 0 <= i <= l;\nloop invariant n%2 == 0 || i + 1 == l;\nloop invariant 0 <= j <= l;\nloop invariant n%2 == 0 || j + 1 == l;\nloop invariant 0 <= k <= l;\nloop invariant n%2 == 0 || k + 1 == l;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant n%2 == 0 || (i+j+k+v1+v2+v3+v4+v5) == l;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v1 <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant 0 <= v5 <= n;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= n;\nloop invariant l <= n;\nloop invariant j%2 == 0;\nloop invariant k%2 == 1;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) >= l;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) >= 0;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i;\nloop invariant i <= n;\nloop invariant 0 <= j;\nloop invariant j <= n;\nloop invariant 0 <= k;\nloop invariant k <= n;\nloop invariant 0 <= l;\nloop invariant l <= n;\nloop invariant 0 <= v1;\nloop invariant v1 <= n;\nloop invariant 0 <= v2;\nloop invariant v2 <= n;\nloop invariant 0 <= v3;\nloop invariant v3 <= n;\nloop invariant 0 <= v4;\nloop invariant v4 <= n;\nloop invariant 0 <= v5;\nloop invariant v5 <= n;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant [i == 0 ==> j == 0];\nloop invariant [i == 0 ==> k == 0];\nloop invariant [i == 0 ==> l == 0];\nloop invariant [i == 0 ==> v1 == 0];\nloop invariant [i == 0 ==> v2 == 0];\nloop invariant [i == 0 ==> v3 == 0];\nloop invariant [i == 0 ==> v4 == 0];\nloop invariant [i == 0 ==> v5 == 0];\nloop invariant [i == 1 ==> j == 0];\nloop invariant [i == 1 ==> k == 1];\nloop invariant [i == 1 ==> l == 2];\nloop invariant [i == 1 ==> v1 == 1];\nloop invariant [i == 1 ==> v2 == 1];\nloop invariant [i == 1 ==> v3 == 1];\nloop invariant [i == 1 ==> v4 == 1];\nloop invariant [i == 1 ==> v5 == 1];\nloop invariant [i == 2 ==> j == 1];\nloop invariant [i == 2 ==> k == 3];\nloop invariant [i == 2 ==> l == 4];\nloop invariant [i == 2 ==> v1 == 2];\nloop invariant [i == 2 ==> v2 == 2];\nloop invariant [i == 2 ==> v3 == 2];\nloop invariant [i == 2 ==> v4 == 2];\nloop invariant [i == 2 ==> v5 == 2];\nloop invariant [i == 3 ==> j == 3];\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= (n / 2);\nloop invariant 0 <= j <= (n / 2);\nloop invariant 0 <= k <= (n / 2);\nloop invariant 0 <= v1 <= (n / 7);\nloop invariant 0 <= v2 <= (n / 6);\nloop invariant 0 <= v3 <= (n / 5);\nloop invariant 0 <= v4 <= (n / 4);\nloop invariant 0 <= v5 <= (n / 8);\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant l == (i + j + k + v1 + v2 + v3 + v4 + v5);\nloop invariant l >= (i + j + k + v1 + v2 + v3 + v4 + v5);\nloop invariant l <= (i + j + k + v1 + v2 + v3 + v4 + v5);\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\n*/\n```",
            "```\n/*@\nloop invariant l >= 0;\nloop invariant l < n;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant v4 >= 0;\nloop invariant v5 >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant (v1 + v2 + v3 + v4 + v5 + i + j + k) >= 0;\nloop invariant (v1 + v2 + v3 + v4 + v5 + i + j + k) <= n;\nloop invariant (v1 + v2 + v3 + v4 + v5 + i + j + k) >= l;\nloop invariant v1 <= (n - l);\nloop invariant v2 <= (n - l);\nloop invariant v3 <= (n - l);\nloop invariant v4 <= (n - l);\nloop invariant v5 <= (n - l);\nloop invariant i <= (n - l);\nloop invariant j <= (n - l);\nloop invariant k <= (n - l);\nloop invariant (v1 mod 8) == 0 || (v1 mod 7) == 0 || (v1 mod 6) == 0 || (v1 mod 5) == 0 || (v1 mod 4) == 0 || (v1 mod 3) == 0 || (v1 mod 2) == 0;\nloop invariant (v2 mod 8) == 0 || (v2 mod 7) == 0 || (v2 mod 6) == 0 || (v2 mod 5) == 0 || (v2 mod 4) == 0 || (v2 mod 3) == 0 || (v2 mod 2) == 0;\nloop invariant (v3 mod 8) == 0 || (v3 mod 7) == 0 || (v3 mod 6) == 0 || (v3 mod 5) == 0 || (v3 mod 4) == 0 || (v3 mod 3) == 0 || (v3 mod 2) == 0;\nloop invariant (v4 mod 8) == 0 || (v4 mod 7) == 0 || (v4 mod 6) == 0 || (v4 mod 5) == 0 || (v4 mod 4) == 0 || (v4 mod 3) == 0 || (v4 mod 2) == 0;\nloop invariant (v5 mod 8) == 0 || (v5 mod 7) == 0 || (v5 mod 6) == 0 || (v5 mod 5) == 0 || (v5 mod 4) == 0 || (v5 mod 3) == 0 || (v5 mod 2) == 0;\nloop invariant (i mod 8) == 0 || (i mod 7) == 0 || (i mod 6) == 0 || (i mod 5) == 0 || (i mod 4) == 0 || (i mod 3) == 0 || (i mod 2) == 0;\nloop invariant (j mod 8) == 0 || (j mod 7) == 0 || (j mod 6) == 0 || (j mod 5) == 0 || (j mod 4) == 0 || (j mod 3) == 0 || (j mod 2) == 0;\nloop invariant (k mod 8) == 0 || (k mod 7) == 0 || (k mod 6) == 0 || (k mod 5) == 0 || (k mod 4) == 0 || (k mod 3) == 0 || (k mod 2) == 0;\nloop invariant (v1 + v2 + v3 + v4 + v5 + i + j + k) == l;\nloop invariant (v1 + v2 + v3 + v4 + v5 + i + j + k) == l;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= (n/2);\nloop invariant 0 <= j <= (n/2);\nloop invariant 0 <= k <= (n/2);\nloop invariant 0 <= v1 <= (n/7);\nloop invariant 0 <= v2 <= (n/6);\nloop invariant 0 <= v3 <= (n/5);\nloop invariant 0 <= v4 <= (n/4);\nloop invariant 0 <= v5 <= (n/8);\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 = l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant n <= SIZE;\nloop invariant 0 <= i <= l;\nloop invariant 0 <= j <= l;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= v1 <= l;\nloop invariant 0 <= v2 <= l;\nloop invariant 0 <= v3 <= l;\nloop invariant 0 <= v4 <= l;\nloop invariant 0 <= v5 <= l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: n <= SIZE;\nloop invariant i3: 0 <= i <= l;\nloop invariant i4: 0 <= j <= l;\nloop invariant i5: 0 <= k <= l;\nloop invariant i6: 0 <= v1 <= l;\nloop invariant i7: 0 <= v2 <= l;\nloop invariant i8: 0 <= v3 <= l;\nloop invariant i9: 0 <= v4 <= l;\nloop invariant i10: 0 <= v5 <= l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 25,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= v5 <= l/8;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) <= l;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) >= l;\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i <= l/2;\n\nloop invariant i4: 0 <= k <= l/2;\n\n\n\n\n\nloop invariant i10: (i+j+k+v1+v2+v3+v4+v5) <= l;\nloop invariant i11: (i+j+k+v1+v2+v3+v4+v5) >= l;\nloop invariant i12: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 17,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= l;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= i <= l;\nloop invariant 0 <= v1 <= l;\nloop invariant 0 <= v2 <= l;\nloop invariant 0 <= v3 <= l;\nloop invariant 0 <= v4 <= l;\nloop invariant 0 <= v5 <= l;\nloop invariant j + k + i + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant l <= n;\nloop invariant (if l <= n then j + k + i + v1 + v2 + v3 + v4 + v5 == l else true);\nloop invariant (if k == 0 then v5 == l else true);\nloop invariant (if j == 0 then v4 == l else true);\nloop invariant (if i == 0 then v3 == l else true);\nloop invariant (if v1 == 0 then v2 == l else true);\nloop invariant (if v2 == 0 then v1 == l else true);\nloop invariant (if v3 == 0 then v2 == l else true);\nloop invariant (if v4 == 0 then v1 == l else true);\nloop invariant (if v5 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v3 == l else true);\nloop invariant (if v2 == 0 then v3 == l else true);\nloop invariant (if v3 == 0 then v4 == l else true);\nloop invariant (if v4 == 0 then v5 == l else true);\nloop invariant (if v5 == 0 then v4 == l else true);\nloop invariant (if v1 == 0 then v5 == l else true);\nloop invariant (if v1 == 0 then v4 == l else true);\nloop invariant (if v1 == 0 then v3 == l else true);\nloop invariant (if v1 == 0 then v2 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\nloop invariant (if v1 == 0 then v1 == l else true);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= j <= l;\nloop invariant i2: 0 <= k <= l;\nloop invariant i3: 0 <= i <= l;\nloop invariant i4: 0 <= v1 <= l;\nloop invariant i5: 0 <= v2 <= l;\nloop invariant i6: 0 <= v3 <= l;\nloop invariant i7: 0 <= v4 <= l;\nloop invariant i8: 0 <= v5 <= l;\nloop invariant i9: j + k + i + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant i10: l <= n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= v1 <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant 0 <= v5 <= n;\nloop invariant l <= n;\nloop invariant l <= SIZE;\nloop invariant k <= j;\nloop invariant j <= i;\nloop invariant i <= v1;\nloop invariant v1 <= v2;\nloop invariant v2 <= v3;\nloop invariant v3 <= v4;\nloop invariant v4 <= v5;\nloop invariant v5 <= l;\nloop invariant k + j + i + v1 + v2 + v3 + v4 + v5 == l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= k <= n;\nloop invariant i2: 0 <= j <= n;\nloop invariant i3: 0 <= i <= n;\nloop invariant i4: 0 <= v1 <= n;\nloop invariant i5: 0 <= v2 <= n;\nloop invariant i6: 0 <= v3 <= n;\nloop invariant i7: 0 <= v4 <= n;\nloop invariant i8: 0 <= v5 <= n;\nloop invariant i9: l <= n;\n\n\n\n\n\n\n\n\nloop invariant i18: v5 <= l;\nloop invariant i19: k + j + i + v1 + v2 + v3 + v4 + v5 == l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= l;\nloop invariant 0 <= j <= l;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= v1 <= l;\nloop invariant 0 <= v2 <= l;\nloop invariant 0 <= v3 <= l;\nloop invariant 0 <= v4 <= l;\nloop invariant 0 <= v5 <= l;\nloop invariant 0 <= n <= SIZE;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant l == n;\nloop invariant n <= l;\nloop invariant i <= l;\nloop invariant j <= l;\nloop invariant k <= l;\nloop invariant v1 <= l;\nloop invariant v2 <= l;\nloop invariant v3 <= l;\nloop invariant v4 <= l;\nloop invariant v5 <= l;\nloop invariant l <= n;\nloop invariant n <= SIZE;\nloop invariant l <= SIZE;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= l;\nloop invariant i2: 0 <= j <= l;\nloop invariant i3: 0 <= k <= l;\nloop invariant i4: 0 <= v1 <= l;\nloop invariant i5: 0 <= v2 <= l;\nloop invariant i6: 0 <= v3 <= l;\nloop invariant i7: 0 <= v4 <= l;\nloop invariant i8: 0 <= v5 <= l;\nloop invariant i9: 0 <= n <= SIZE;\nloop invariant i10: i + j + k + v1 + v2 + v3 + v4 + v5 == l;\n\n\nloop invariant i13: i <= l;\nloop invariant i14: j <= l;\nloop invariant i15: k <= l;\nloop invariant i16: v1 <= l;\nloop invariant i17: v2 <= l;\nloop invariant i18: v3 <= l;\nloop invariant i19: v4 <= l;\nloop invariant i20: v5 <= l;\nloop invariant i21: l <= n;\nloop invariant i22: n <= SIZE;\nloop invariant i23: l <= SIZE;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant i <= l;\nloop invariant j <= l;\nloop invariant k <= l;\nloop invariant v1 <= l;\nloop invariant v2 <= l;\nloop invariant v3 <= l;\nloop invariant v4 <= l;\nloop invariant v5 <= l;\nloop invariant i == (l / 2);\nloop invariant j == (l / 2);\nloop invariant k == l - (i + j);\nloop invariant v1 == (l / 7);\nloop invariant v2 == (l / 6);\nloop invariant v3 == (l / 5);\nloop invariant v4 == (l / 4);\nloop invariant v5 == (l / 8);\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant i == (l / 2) ==> i <= l;\nloop invariant j == (l / 2) ==> j <= l;\nloop invariant k == l - (i + j) ==> k <= l;\nloop invariant v1 == (l / 7) ==> v1 <= l;\nloop invariant v2 == (l / 6) ==> v2 <= l;\nloop invariant v3 == (l / 5) ==> v3 <= l;\nloop invariant v4 == (l / 4) ==> v4 <= l;\nloop invariant v5 == (l / 8) ==> v5 <= l;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 == l ==> i + j + k + v1 + v2 + v3 + v4 + v5 <= l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: i <= l;\nloop invariant i3: j <= l;\nloop invariant i4: k <= l;\nloop invariant i5: v1 <= l;\nloop invariant i6: v2 <= l;\nloop invariant i7: v3 <= l;\nloop invariant i8: v4 <= l;\nloop invariant i9: v5 <= l;\n\n\n\n\n\n\n\n\nloop invariant i18: i + j + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant i19: i == (l / 2) ==> i <= l;\nloop invariant i20: j == (l / 2) ==> j <= l;\nloop invariant i21: k == l - (i + j) ==> k <= l;\nloop invariant i22: v1 == (l / 7) ==> v1 <= l;\nloop invariant i23: v2 == (l / 6) ==> v2 <= l;\nloop invariant i24: v3 == (l / 5) ==> v3 <= l;\nloop invariant i25: v4 == (l / 4) ==> v4 <= l;\nloop invariant i26: v5 == (l / 8) ==> v5 <= l;\nloop invariant i27: i + j + k + v1 + v2 + v3 + v4 + v5 == l ==> i + j + k + v1 + v2 + v3 + v4 + v5 <= l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant 0 <= v5 <= l/8;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i <= l/2;\n\nloop invariant i4: 0 <= k <= l/2;\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= v1 <= l;\nloop invariant n%8 == 0 || v1 + 1 == l;\nloop invariant 0 <= v2 <= l;\nloop invariant n%6 == 0 || v2 + 1 == l;\nloop invariant 0 <= v3 <= l;\nloop invariant n%5 == 0 || v3 + 1 == l;\nloop invariant 0 <= v4 <= l;\nloop invariant n%4 == 0 || v4 + 1 == l;\nloop invariant 0 <= v5 <= l;\nloop invariant n%8 == 0 || v5 + 1 == l;\nloop invariant 0 <= i <= l;\nloop invariant n%2 == 0 || i + 1 == l;\nloop invariant 0 <= j <= l;\nloop invariant n%2 == 0 || j + 1 == l;\nloop invariant 0 <= k <= l;\nloop invariant n%2 == 0 || k + 1 == l;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant n%2 == 0 || (i+j+k+v1+v2+v3+v4+v5) == l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= v1 <= l;\n\nloop invariant i4: 0 <= v2 <= l;\n\nloop invariant i6: 0 <= v3 <= l;\n\nloop invariant i8: 0 <= v4 <= l;\n\nloop invariant i10: 0 <= v5 <= l;\n\nloop invariant i12: 0 <= i <= l;\n\nloop invariant i14: 0 <= j <= l;\n\nloop invariant i16: 0 <= k <= l;\n\nloop invariant i18: (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant i19: n%2 == 0 || (i+j+k+v1+v2+v3+v4+v5) == l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v1 <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant 0 <= v5 <= n;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= n;\nloop invariant l <= n;\nloop invariant j%2 == 0;\nloop invariant k%2 == 1;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) >= l;\nloop invariant (i+j+k+v1+v2+v3+v4+v5) >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: 0 <= j <= n;\nloop invariant i3: 0 <= k <= n;\nloop invariant i4: 0 <= v1 <= n;\nloop invariant i5: 0 <= v2 <= n;\nloop invariant i6: 0 <= v3 <= n;\nloop invariant i7: 0 <= v4 <= n;\nloop invariant i8: 0 <= v5 <= n;\nloop invariant i9: (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant i10: (i + j + k + v1 + v2 + v3 + v4 + v5) <= n;\nloop invariant i11: l <= n;\n\n\nloop invariant i14: (i+j+k+v1+v2+v3+v4+v5) >= l;\nloop invariant i15: (i+j+k+v1+v2+v3+v4+v5) >= 0;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= i;\nloop invariant i <= n;\nloop invariant 0 <= j;\nloop invariant j <= n;\nloop invariant 0 <= k;\nloop invariant k <= n;\nloop invariant 0 <= l;\nloop invariant l <= n;\nloop invariant 0 <= v1;\nloop invariant v1 <= n;\nloop invariant 0 <= v2;\nloop invariant v2 <= n;\nloop invariant 0 <= v3;\nloop invariant v3 <= n;\nloop invariant 0 <= v4;\nloop invariant v4 <= n;\nloop invariant 0 <= v5;\nloop invariant v5 <= n;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= i;\nloop invariant i2: i <= n;\nloop invariant i3: 0 <= j;\nloop invariant i4: j <= n;\nloop invariant i5: 0 <= k;\nloop invariant i6: k <= n;\nloop invariant i7: 0 <= l;\nloop invariant i8: l <= n;\nloop invariant i9: 0 <= v1;\nloop invariant i10: v1 <= n;\nloop invariant i11: 0 <= v2;\nloop invariant i12: v2 <= n;\nloop invariant i13: 0 <= v3;\nloop invariant i14: v3 <= n;\nloop invariant i15: 0 <= v4;\nloop invariant i16: v4 <= n;\nloop invariant i17: 0 <= v5;\nloop invariant i18: v5 <= n;\nloop invariant i19: (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 125,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant [i == 0 ==> j == 0];\nloop invariant [i == 0 ==> k == 0];\nloop invariant [i == 0 ==> l == 0];\nloop invariant [i == 0 ==> v1 == 0];\nloop invariant [i == 0 ==> v2 == 0];\nloop invariant [i == 0 ==> v3 == 0];\nloop invariant [i == 0 ==> v4 == 0];\nloop invariant [i == 0 ==> v5 == 0];\nloop invariant [i == 1 ==> j == 0];\nloop invariant [i == 1 ==> k == 1];\nloop invariant [i == 1 ==> l == 2];\nloop invariant [i == 1 ==> v1 == 1];\nloop invariant [i == 1 ==> v2 == 1];\nloop invariant [i == 1 ==> v3 == 1];\nloop invariant [i == 1 ==> v4 == 1];\nloop invariant [i == 1 ==> v5 == 1];\nloop invariant [i == 2 ==> j == 1];\nloop invariant [i == 2 ==> k == 3];\nloop invariant [i == 2 ==> l == 4];\nloop invariant [i == 2 ==> v1 == 2];\nloop invariant [i == 2 ==> v2 == 2];\nloop invariant [i == 2 ==> v3 == 2];\nloop invariant [i == 2 ==> v4 == 2];\nloop invariant [i == 2 ==> v5 == 2];\nloop invariant [i == 3 ==> j == 3];\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= (n / 2);\nloop invariant 0 <= j <= (n / 2);\nloop invariant 0 <= k <= (n / 2);\nloop invariant 0 <= v1 <= (n / 7);\nloop invariant 0 <= v2 <= (n / 6);\nloop invariant 0 <= v3 <= (n / 5);\nloop invariant 0 <= v4 <= (n / 4);\nloop invariant 0 <= v5 <= (n / 8);\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant l == (i + j + k + v1 + v2 + v3 + v4 + v5);\nloop invariant l >= (i + j + k + v1 + v2 + v3 + v4 + v5);\nloop invariant l <= (i + j + k + v1 + v2 + v3 + v4 + v5);\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\n\n\n\n\n\n\nloop invariant i10: (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant i11: (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\nloop invariant i12: (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant i13: l == (i + j + k + v1 + v2 + v3 + v4 + v5);\nloop invariant i14: l >= (i + j + k + v1 + v2 + v3 + v4 + v5);\nloop invariant i15: l <= (i + j + k + v1 + v2 + v3 + v4 + v5);\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant l >= 0;\nloop invariant l < n;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant v4 >= 0;\nloop invariant v5 >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant (v1 + v2 + v3 + v4 + v5 + i + j + k) >= 0;\nloop invariant (v1 + v2 + v3 + v4 + v5 + i + j + k) <= n;\nloop invariant (v1 + v2 + v3 + v4 + v5 + i + j + k) >= l;\nloop invariant v1 <= (n - l);\nloop invariant v2 <= (n - l);\nloop invariant v3 <= (n - l);\nloop invariant v4 <= (n - l);\nloop invariant v5 <= (n - l);\nloop invariant i <= (n - l);\nloop invariant j <= (n - l);\nloop invariant k <= (n - l);\nloop invariant (v1 mod 8) == 0 || (v1 mod 7) == 0 || (v1 mod 6) == 0 || (v1 mod 5) == 0 || (v1 mod 4) == 0 || (v1 mod 3) == 0 || (v1 mod 2) == 0;\nloop invariant (v2 mod 8) == 0 || (v2 mod 7) == 0 || (v2 mod 6) == 0 || (v2 mod 5) == 0 || (v2 mod 4) == 0 || (v2 mod 3) == 0 || (v2 mod 2) == 0;\nloop invariant (v3 mod 8) == 0 || (v3 mod 7) == 0 || (v3 mod 6) == 0 || (v3 mod 5) == 0 || (v3 mod 4) == 0 || (v3 mod 3) == 0 || (v3 mod 2) == 0;\nloop invariant (v4 mod 8) == 0 || (v4 mod 7) == 0 || (v4 mod 6) == 0 || (v4 mod 5) == 0 || (v4 mod 4) == 0 || (v4 mod 3) == 0 || (v4 mod 2) == 0;\nloop invariant (v5 mod 8) == 0 || (v5 mod 7) == 0 || (v5 mod 6) == 0 || (v5 mod 5) == 0 || (v5 mod 4) == 0 || (v5 mod 3) == 0 || (v5 mod 2) == 0;\nloop invariant (i mod 8) == 0 || (i mod 7) == 0 || (i mod 6) == 0 || (i mod 5) == 0 || (i mod 4) == 0 || (i mod 3) == 0 || (i mod 2) == 0;\nloop invariant (j mod 8) == 0 || (j mod 7) == 0 || (j mod 6) == 0 || (j mod 5) == 0 || (j mod 4) == 0 || (j mod 3) == 0 || (j mod 2) == 0;\nloop invariant (k mod 8) == 0 || (k mod 7) == 0 || (k mod 6) == 0 || (k mod 5) == 0 || (k mod 4) == 0 || (k mod 3) == 0 || (k mod 2) == 0;\nloop invariant (v1 + v2 + v3 + v4 + v5 + i + j + k) == l;\nloop invariant (v1 + v2 + v3 + v4 + v5 + i + j + k) == l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: l >= 0;\n\nloop invariant i3: v1 >= 0;\nloop invariant i4: v2 >= 0;\nloop invariant i5: v3 >= 0;\nloop invariant i6: v4 >= 0;\nloop invariant i7: v5 >= 0;\nloop invariant i8: i >= 0;\nloop invariant i9: j >= 0;\nloop invariant i10: k >= 0;\nloop invariant i11: (v1 + v2 + v3 + v4 + v5 + i + j + k) >= 0;\nloop invariant i12: (v1 + v2 + v3 + v4 + v5 + i + j + k) <= n;\nloop invariant i13: (v1 + v2 + v3 + v4 + v5 + i + j + k) >= l;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i30: (v1 + v2 + v3 + v4 + v5 + i + j + k) == l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= (n/2);\nloop invariant 0 <= j <= (n/2);\nloop invariant 0 <= k <= (n/2);\nloop invariant 0 <= v1 <= (n/7);\nloop invariant 0 <= v2 <= (n/6);\nloop invariant 0 <= v3 <= (n/5);\nloop invariant 0 <= v4 <= (n/4);\nloop invariant 0 <= v5 <= (n/8);\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 = l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4 + v5) <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\n\n\n\n\n\n\n\nloop invariant i11: (i + j + k + v1 + v2 + v3 + v4 + v5) <= n;\nloop invariant i12: i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i13: i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 63: unexpected token 'l'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: n <= SIZE;\nloop invariant i3: 0 <= i <= l;\nloop invariant i4: 0 <= j <= l;\nloop invariant i5: 0 <= k <= l;\nloop invariant i6: 0 <= v1 <= l;\nloop invariant i7: 0 <= v2 <= l;\nloop invariant i8: 0 <= v3 <= l;\nloop invariant i9: 0 <= v4 <= l;\nloop invariant i10: 0 <= v5 <= l;\nloop invariant i11: 0 <= i <= l/2;\nloop invariant i12: 0 <= j <= l/2;\nloop invariant i13: 0 <= k <= l/2;\nloop invariant i14: 0 <= v1 <= l/7;\nloop invariant i15: 0 <= v2 <= l/6;\nloop invariant i16: 0 <= v3 <= l/5;\nloop invariant i17: 0 <= v4 <= l/4;\nloop invariant i18: 0 <= v5 <= l/8;\nloop invariant i19: (i+j+k+v1+v2+v3+v4+v5) <= l;\nloop invariant i20: (i+j+k+v1+v2+v3+v4+v5) >= l;\nloop invariant i21: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l);\nloop invariant i22: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l);\nloop invariant i23: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l);\nloop invariant i24: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l);\nloop invariant i25: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l);\nloop invariant i26: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l);\nloop invariant i27: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l);\nloop invariant i28: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l);\nloop invariant i29: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l);\nloop invariant i30: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l);\nloop invariant i31: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant i32: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant i33: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant i34: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant i35: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant i36: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant i37: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant i38: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant i39: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant i40: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant i41: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant i42: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant i43: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant i44: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l+l);\nloop invariant i45: j + k + i + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant i46: l <= n;\nloop invariant i47: (if l <= n then j + k + i + v1 + v2 + v3 + v4 + v5 == l else true);\nloop invariant i48: (if k == 0 then v5 == l else true);\nloop invariant i49: (if j == 0 then v4 == l else true);\nloop invariant i50: (if i == 0 then v3 == l else true);\nloop invariant i51: (if v1 == 0 then v2 == l else true);\nloop invariant i52: (if v2 == 0 then v1 == l else true);\nloop invariant i53: (if v3 == 0 then v2 == l else true);\nloop invariant i54: (if v4 == 0 then v1 == l else true);\nloop invariant i55: (if v5 == 0 then v1 == l else true);\nloop invariant i56: (if v1 == 0 then v3 == l else true);\nloop invariant i57: (if v2 == 0 then v3 == l else true);\nloop invariant i58: (if v3 == 0 then v4 == l else true);\nloop invariant i59: (if v4 == 0 then v5 == l else true);\nloop invariant i60: (if v5 == 0 then v4 == l else true);\nloop invariant i61: (if v1 == 0 then v5 == l else true);\nloop invariant i62: (if v1 == 0 then v4 == l else true);\nloop invariant i63: (if v1 == 0 then v1 == l else true);\nloop invariant i64: 0 <= k <= n;\nloop invariant i65: 0 <= j <= n;\nloop invariant i66: 0 <= i <= n;\nloop invariant i67: 0 <= v1 <= n;\nloop invariant i68: 0 <= v2 <= n;\nloop invariant i69: 0 <= v3 <= n;\nloop invariant i70: 0 <= v4 <= n;\nloop invariant i71: 0 <= v5 <= n;\nloop invariant i72: l <= SIZE;\nloop invariant i73: k <= j;\nloop invariant i74: j <= i;\nloop invariant i75: i <= v1;\nloop invariant i76: v1 <= v2;\nloop invariant i77: v2 <= v3;\nloop invariant i78: v3 <= v4;\nloop invariant i79: v4 <= v5;\nloop invariant i80: v5 <= l;\nloop invariant i81: k + j + i + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant i82: 0 <= n <= SIZE;\nloop invariant i83: i + j + k + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant i84: l == n;\nloop invariant i85: n <= l;\nloop invariant i86: i <= l;\nloop invariant i87: j <= l;\nloop invariant i88: k <= l;\nloop invariant i89: v1 <= l;\nloop invariant i90: v2 <= l;\nloop invariant i91: v3 <= l;\nloop invariant i92: v4 <= l;\nloop invariant i93: i == (l / 2);\nloop invariant i94: j == (l / 2);\nloop invariant i95: k == l - (i + j);\nloop invariant i96: v1 == (l / 7);\nloop invariant i97: v2 == (l / 6);\nloop invariant i98: v3 == (l / 5);\nloop invariant i99: v4 == (l / 4);\nloop invariant i100: v5 == (l / 8);\nloop invariant i101: i == (l / 2) ==> i <= l;\nloop invariant i102: j == (l / 2) ==> j <= l;\nloop invariant i103: k == l - (i + j) ==> k <= l;\nloop invariant i104: v1 == (l / 7) ==> v1 <= l;\nloop invariant i105: v2 == (l / 6) ==> v2 <= l;\nloop invariant i106: v3 == (l / 5) ==> v3 <= l;\nloop invariant i107: v4 == (l / 4) ==> v4 <= l;\nloop invariant i108: v5 == (l / 8) ==> v5 <= l;\nloop invariant i109: i + j + k + v1 + v2 + v3 + v4 + v5 == l ==> i + j + k + v1 + v2 + v3 + v4 + v5 <= l;\nloop invariant i110: n%8 == 0 || v1 + 1 == l;\nloop invariant i111: n%6 == 0 || v2 + 1 == l;\nloop invariant i112: n%5 == 0 || v3 + 1 == l;\nloop invariant i113: n%4 == 0 || v4 + 1 == l;\nloop invariant i114: n%8 == 0 || v5 + 1 == l;\nloop invariant i115: n%2 == 0 || i + 1 == l;\nloop invariant i116: n%2 == 0 || j + 1 == l;\nloop invariant i117: n%2 == 0 || k + 1 == l;\nloop invariant i118: (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant i119: n%2 == 0 || (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant i120: (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant i121: (i + j + k + v1 + v2 + v3 + v4 + v5) <= n;\nloop invariant i122: j%2 == 0;\nloop invariant i123: k%2 == 1;\nloop invariant i124: (i+j+k+v1+v2+v3+v4+v5) >= 0;\nloop invariant i125: 0 <= i;\nloop invariant i126: i <= n;\nloop invariant i127: 0 <= j;\nloop invariant i128: j <= n;\nloop invariant i129: 0 <= k;\nloop invariant i130: k <= n;\nloop invariant i131: 0 <= l;\nloop invariant i132: 0 <= v1;\nloop invariant i133: v1 <= n;\nloop invariant i134: 0 <= v2;\nloop invariant i135: v2 <= n;\nloop invariant i136: 0 <= v3;\nloop invariant i137: v3 <= n;\nloop invariant i138: 0 <= v4;\nloop invariant i139: v4 <= n;\nloop invariant i140: 0 <= v5;\nloop invariant i141: v5 <= n;\nloop invariant i142: (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\nloop invariant i143: i1;\nloop invariant i144: i2;\nloop invariant i145: i3;\nloop invariant i146: i4;\nloop invariant i147: i5;\nloop invariant i148: i6;\nloop invariant i149: i7;\nloop invariant i150: i8;\nloop invariant i151: i9;\nloop invariant i152: i10;\nloop invariant i153: i11;\nloop invariant i154: i12;\nloop invariant i155: i13;\nloop invariant i156: i14;\nloop invariant i157: i15;\nloop invariant i158: i16;\nloop invariant i159: i17;\nloop invariant i160: i18;\nloop invariant i161: i19;\nloop invariant i162: i20;\nloop invariant i163: i21;\nloop invariant i164: i22;\nloop invariant i165: i23;\nloop invariant i166: i24;\nloop invariant i167: i25;\nloop invariant i168: i26;\nloop invariant i169: i27;\nloop invariant i170: i28;\nloop invariant i171: i29;\nloop invariant i172: i30;\nloop invariant i173: i31;\nloop invariant i174: i32;\nloop invariant i175: i33;\nloop invariant i176: i34;\nloop invariant i177: i35;\nloop invariant i178: i36;\nloop invariant i179: i37;\nloop invariant i180: i38;\nloop invariant i181: i39;\nloop invariant i182: i40;\nloop invariant i183: i41;\nloop invariant i184: i42;\nloop invariant i185: i43;\nloop invariant i186: i44;\nloop invariant i187: i45;\nloop invariant i188: i46;\nloop invariant i189: i47;\nloop invariant i190: i48;\nloop invariant i191: i49;\nloop invariant i192: i50;\nloop invariant i193: i51;\nloop invariant i194: i52;\nloop invariant i195: i53;\nloop invariant i196: i54;\nloop invariant i197: i55;\nloop invariant i198: i56;\nloop invariant i199: i57;\nloop invariant i200: i58;\nloop invariant i201: i59;\nloop invariant i202: i60;\nloop invariant i203: i61;\nloop invariant i204: i62;\nloop invariant i205: i63;\nloop invariant i206: i64;\nloop invariant i207: i65;\nloop invariant i208: i66;\nloop invariant i209: i67;\nloop invariant i210: i68;\nloop invariant i211: i69;\nloop invariant i212: i70;\nloop invariant i213: i71;\nloop invariant i214: i72;\nloop invariant i215: i73;\nloop invariant i216: i74;\nloop invariant i217: i75;\nloop invariant i218: i76;\nloop invariant i219: i77;\nloop invariant i220: i78;\nloop invariant i221: i79;\nloop invariant i222: i80;\nloop invariant i223: i81;\nloop invariant i224: i82;\nloop invariant i225: i83;\nloop invariant i226: i84;\nloop invariant i227: i85;\nloop invariant i228: i86;\nloop invariant i229: i87;\nloop invariant i230: i88;\nloop invariant i231: i89;\nloop invariant i232: i90;\nloop invariant i233: i91;\nloop invariant i234: i92;\nloop invariant i235: i93;\nloop invariant i236: i94;\nloop invariant i237: i95;\nloop invariant i238: i96;\nloop invariant i239: i97;\nloop invariant i240: i98;\nloop invariant i241: i99;\nloop invariant i242: i100;\nloop invariant i243: [i == 0 ==> j == 0];\nloop invariant i244: [i == 0 ==> k == 0];\nloop invariant i245: [i == 0 ==> l == 0];\nloop invariant i246: [i == 0 ==> v1 == 0];\nloop invariant i247: [i == 0 ==> v2 == 0];\nloop invariant i248: [i == 0 ==> v3 == 0];\nloop invariant i249: [i == 0 ==> v4 == 0];\nloop invariant i250: [i == 0 ==> v5 == 0];\nloop invariant i251: [i == 1 ==> j == 0];\nloop invariant i252: [i == 1 ==> k == 1];\nloop invariant i253: [i == 1 ==> l == 2];\nloop invariant i254: [i == 1 ==> v1 == 1];\nloop invariant i255: [i == 1 ==> v2 == 1];\nloop invariant i256: [i == 1 ==> v3 == 1];\nloop invariant i257: [i == 1 ==> v4 == 1];\nloop invariant i258: [i == 1 ==> v5 == 1];\nloop invariant i259: [i == 2 ==> j == 1];\nloop invariant i260: [i == 2 ==> k == 3];\nloop invariant i261: [i == 2 ==> l == 4];\nloop invariant i262: [i == 2 ==> v1 == 2];\nloop invariant i263: [i == 2 ==> v2 == 2];\nloop invariant i264: [i == 2 ==> v3 == 2];\nloop invariant i265: [i == 2 ==> v4 == 2];\nloop invariant i266: [i == 2 ==> v5 == 2];\nloop invariant i267: [i == 3 ==> j == 3];\nloop invariant i268: 0 <= i <= (n / 2);\nloop invariant i269: 0 <= j <= (n / 2);\nloop invariant i270: 0 <= k <= (n / 2);\nloop invariant i271: 0 <= v1 <= (n / 7);\nloop invariant i272: 0 <= v2 <= (n / 6);\nloop invariant i273: 0 <= v3 <= (n / 5);\nloop invariant i274: 0 <= v4 <= (n / 4);\nloop invariant i275: 0 <= v5 <= (n / 8);\nloop invariant i276: (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\nloop invariant i277: l == (i + j + k + v1 + v2 + v3 + v4 + v5);\nloop invariant i278: l >= (i + j + k + v1 + v2 + v3 + v4 + v5);\nloop invariant i279: l <= (i + j + k + v1 + v2 + v3 + v4 + v5);\nloop invariant i280: l >= 0;\nloop invariant i281: l < n;\nloop invariant i282: v1 >= 0;\nloop invariant i283: v2 >= 0;\nloop invariant i284: v3 >= 0;\nloop invariant i285: v4 >= 0;\nloop invariant i286: v5 >= 0;\nloop invariant i287: i >= 0;\nloop invariant i288: j >= 0;\nloop invariant i289: k >= 0;\nloop invariant i290: (v1 + v2 + v3 + v4 + v5 + i + j + k) >= 0;\nloop invariant i291: (v1 + v2 + v3 + v4 + v5 + i + j + k) <= n;\nloop invariant i292: (v1 + v2 + v3 + v4 + v5 + i + j + k) >= l;\nloop invariant i293: v1 <= (n - l);\nloop invariant i294: v2 <= (n - l);\nloop invariant i295: v3 <= (n - l);\nloop invariant i296: v4 <= (n - l);\nloop invariant i297: v5 <= (n - l);\nloop invariant i298: i <= (n - l);\nloop invariant i299: j <= (n - l);\nloop invariant i300: k <= (n - l);\nloop invariant i301: (v1 mod 8) == 0 || (v1 mod 7) == 0 || (v1 mod 6) == 0 || (v1 mod 5) == 0 || (v1 mod 4) == 0 || (v1 mod 3) == 0 || (v1 mod 2) == 0;\nloop invariant i302: (v2 mod 8) == 0 || (v2 mod 7) == 0 || (v2 mod 6) == 0 || (v2 mod 5) == 0 || (v2 mod 4) == 0 || (v2 mod 3) == 0 || (v2 mod 2) == 0;\nloop invariant i303: (v3 mod 8) == 0 || (v3 mod 7) == 0 || (v3 mod 6) == 0 || (v3 mod 5) == 0 || (v3 mod 4) == 0 || (v3 mod 3) == 0 || (v3 mod 2) == 0;\nloop invariant i304: (v4 mod 8) == 0 || (v4 mod 7) == 0 || (v4 mod 6) == 0 || (v4 mod 5) == 0 || (v4 mod 4) == 0 || (v4 mod 3) == 0 || (v4 mod 2) == 0;\nloop invariant i305: (v5 mod 8) == 0 || (v5 mod 7) == 0 || (v5 mod 6) == 0 || (v5 mod 5) == 0 || (v5 mod 4) == 0 || (v5 mod 3) == 0 || (v5 mod 2) == 0;\nloop invariant i306: (i mod 8) == 0 || (i mod 7) == 0 || (i mod 6) == 0 || (i mod 5) == 0 || (i mod 4) == 0 || (i mod 3) == 0 || (i mod 2) == 0;\nloop invariant i307: (j mod 8) == 0 || (j mod 7) == 0 || (j mod 6) == 0 || (j mod 5) == 0 || (j mod 4) == 0 || (j mod 3) == 0 || (j mod 2) == 0;\nloop invariant i308: (k mod 8) == 0 || (k mod 7) == 0 || (k mod 6) == 0 || (k mod 5) == 0 || (k mod 4) == 0 || (k mod 3) == 0 || (k mod 2) == 0;\nloop invariant i309: (v1 + v2 + v3 + v4 + v5 + i + j + k) == l;\nloop invariant i310: 0 <= i <= (n/2);\nloop invariant i311: 0 <= j <= (n/2);\nloop invariant i312: 0 <= k <= (n/2);\nloop invariant i313: 0 <= v1 <= (n/7);\nloop invariant i314: 0 <= v2 <= (n/6);\nloop invariant i315: 0 <= v3 <= (n/5);\nloop invariant i316: 0 <= v4 <= (n/4);\nloop invariant i317: 0 <= v5 <= (n/8);\nloop invariant i318: i + j + k + v1 + v2 + v3 + v4 + v5 = l;\nloop invariant i319: i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i320: i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 187,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0, v5=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: n <= SIZE;\nloop invariant i3: 0 <= i <= l;\nloop invariant i4: 0 <= j <= l;\nloop invariant i5: 0 <= k <= l;\nloop invariant i6: 0 <= v1 <= l;\nloop invariant i7: 0 <= v2 <= l;\nloop invariant i8: 0 <= v3 <= l;\nloop invariant i9: 0 <= v4 <= l;\nloop invariant i10: 0 <= v5 <= l;\n\n\nloop invariant i13: 0 <= k <= l/2;\n\n\n\n\n\nloop invariant i19: (i+j+k+v1+v2+v3+v4+v5) <= l;\nloop invariant i20: (i+j+k+v1+v2+v3+v4+v5) >= l;\nloop invariant i21: (i+j+k+v1+v2+v3+v4+v5+l) == (l+l);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i45: j + k + i + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant i46: l <= n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i64: 0 <= k <= n;\nloop invariant i65: 0 <= j <= n;\nloop invariant i66: 0 <= i <= n;\nloop invariant i67: 0 <= v1 <= n;\nloop invariant i68: 0 <= v2 <= n;\nloop invariant i69: 0 <= v3 <= n;\nloop invariant i70: 0 <= v4 <= n;\nloop invariant i71: 0 <= v5 <= n;\nloop invariant i72: l <= SIZE;\n\n\n\n\n\n\n\nloop invariant i80: v5 <= l;\nloop invariant i81: k + j + i + v1 + v2 + v3 + v4 + v5 == l;\nloop invariant i82: 0 <= n <= SIZE;\nloop invariant i83: i + j + k + v1 + v2 + v3 + v4 + v5 == l;\n\n\nloop invariant i86: i <= l;\nloop invariant i87: j <= l;\nloop invariant i88: k <= l;\nloop invariant i89: v1 <= l;\nloop invariant i90: v2 <= l;\nloop invariant i91: v3 <= l;\nloop invariant i92: v4 <= l;\n\n\n\n\n\n\n\n\nloop invariant i101: i == (l / 2) ==> i <= l;\nloop invariant i102: j == (l / 2) ==> j <= l;\nloop invariant i103: k == l - (i + j) ==> k <= l;\nloop invariant i104: v1 == (l / 7) ==> v1 <= l;\nloop invariant i105: v2 == (l / 6) ==> v2 <= l;\nloop invariant i106: v3 == (l / 5) ==> v3 <= l;\nloop invariant i107: v4 == (l / 4) ==> v4 <= l;\nloop invariant i108: v5 == (l / 8) ==> v5 <= l;\nloop invariant i109: i + j + k + v1 + v2 + v3 + v4 + v5 == l ==> i + j + k + v1 + v2 + v3 + v4 + v5 <= l;\n\n\n\n\n\n\n\n\nloop invariant i118: (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant i119: n%2 == 0 || (i+j+k+v1+v2+v3+v4+v5) == l;\nloop invariant i120: (i + j + k + v1 + v2 + v3 + v4 + v5) <= l;\nloop invariant i121: (i + j + k + v1 + v2 + v3 + v4 + v5) <= n;\n\n\nloop invariant i124: (i+j+k+v1+v2+v3+v4+v5) >= 0;\nloop invariant i125: 0 <= i;\nloop invariant i126: i <= n;\nloop invariant i127: 0 <= j;\nloop invariant i128: j <= n;\nloop invariant i129: 0 <= k;\nloop invariant i130: k <= n;\nloop invariant i131: 0 <= l;\nloop invariant i132: 0 <= v1;\nloop invariant i133: v1 <= n;\nloop invariant i134: 0 <= v2;\nloop invariant i135: v2 <= n;\nloop invariant i136: 0 <= v3;\nloop invariant i137: v3 <= n;\nloop invariant i138: 0 <= v4;\nloop invariant i139: v4 <= n;\nloop invariant i140: 0 <= v5;\nloop invariant i141: v5 <= n;\nloop invariant i142: (i + j + k + v1 + v2 + v3 + v4 + v5) == l;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i270: 0 <= k <= (n / 2);\n\n\n\n\n\nloop invariant i276: (i + j + k + v1 + v2 + v3 + v4 + v5) >= l;\nloop invariant i277: l == (i + j + k + v1 + v2 + v3 + v4 + v5);\nloop invariant i278: l >= (i + j + k + v1 + v2 + v3 + v4 + v5);\nloop invariant i279: l <= (i + j + k + v1 + v2 + v3 + v4 + v5);\nloop invariant i280: l >= 0;\n\nloop invariant i282: v1 >= 0;\nloop invariant i283: v2 >= 0;\nloop invariant i284: v3 >= 0;\nloop invariant i285: v4 >= 0;\nloop invariant i286: v5 >= 0;\nloop invariant i287: i >= 0;\nloop invariant i288: j >= 0;\nloop invariant i289: k >= 0;\nloop invariant i290: (v1 + v2 + v3 + v4 + v5 + i + j + k) >= 0;\nloop invariant i291: (v1 + v2 + v3 + v4 + v5 + i + j + k) <= n;\nloop invariant i292: (v1 + v2 + v3 + v4 + v5 + i + j + k) >= l;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i309: (v1 + v2 + v3 + v4 + v5 + i + j + k) == l;\n\n\nloop invariant i312: 0 <= k <= (n/2);\n\n\n\n\n\n\nloop invariant i319: i + j + k + v1 + v2 + v3 + v4 + v5 >= 0;\nloop invariant i320: i + j + k + v1 + v2 + v3 + v4 + v5 <= n;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%8))\n\t    v5 = v5 + 1;\n\t  else if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4+v5) == l);\n}\n\n  }\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark16_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark17_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark19_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark20_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark21_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark22_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark23_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark25_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark26_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark27_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark29_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark30_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark31_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark32_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark33_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark34_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark35_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark36_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark37_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark38_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark39_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark40_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark41_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark42_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark43_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark45_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark46_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark47_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark48_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark49_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark50_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark51_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark52_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark53_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/Mono1_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/iftelse.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/loopv1.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/loopv3.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_11.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_8.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sum_natnum.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt2.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt3.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt4.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt5.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt6.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt7.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt8.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_10.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_12.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_9.c"
        ],
        "skipped": [],
        "total": 188,
        "success_count": 168,
        "failure_count": 20,
        "success_rate": 0.8936170212765957
    }
}