{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x == y && y >=0)) return 0;\n  while (x!=0) {\n    x--;\n    y--;\n    if (x<0 || y<0) break;\n  }\n  {;\n//@ assert(y==0);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 1 <= x <= y;\nloop invariant x <= y && x >= 0 && y >= 0;\nloop invariant x <= y;\nloop invariant y == 0 ==> x == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant y >= 0;\nloop invariant x == y;\nloop invariant x >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y == 0;\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
            "```\n/*@\nloop invariant - x <= y && x >= 0 && y >= 0 && x <= 100000 && y <= 100000;\nloop invariant - (y - 1) * y / 2 <= x <= (y + 1) * (y + 1) / 2;\nloop invariant - x >= (y - 1) * y / 2 && x <= (y + 1) * (y + 1) / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= x;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x - y >= 0;\nloop invariant x - y <= x;\nloop invariant y - x >= -x;\nloop invariant y - x <= 0;\nloop invariant x - y >= 0 ==> y - x <= x;\nloop invariant x - y <= x ==> y - x >= -x;\nloop invariant x - y >= 0 ==> x - y <= x;\nloop invariant x - y <= x ==> x - y >= 0;\nloop invariant x >= y ==> y >= 0;\nloop invariant x >= y ==> x >= 0;\nloop invariant x >= y ==> y - x <= x;\nloop invariant y >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant y >= 0 ==> y - x <= x;\nloop invariant x >= y ==> x - y >= 0;\nloop invariant y >= 0 ==> x - y >= 0;\nloop invariant x >= y ==> x - y <= x;\nloop invariant x >= 0 ==> x - y >= 0;\nloop invariant y >= 0 ==> x - y <= x;\nloop invariant x >= y ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> x - y <= x;\nloop invariant x >= 0 ==> x - y <= x;\nloop invariant y >= 0 ==> y - x <= x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> x - y >= 0;\nloop invariant x >= 0 ==> x - y >= 0;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x <= x;\nloop invariant y >= 0 ==> x - y <= x;\nloop invariant x >= 0 ==> x - y <= x;\nloop invariant y >= 0 ==> y - x <= x;\nloop invariant x >= 0 ==> y - x <= x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\n*/\n```",
            "```\n/*@\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x == y || x < y;\nloop invariant x <= y + 1;\nloop invariant y <= x + 1;\nloop invariant x >= 0 ==> y >= 0;\nloop invariant y >= 0 ==> x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant (x + y) % 2 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 2147483647;\nloop invariant 0 <= y <= 2147483647;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y + 1;\nloop invariant y <= x + 1;\nloop invariant x >= y - 1;\nloop invariant y >= x - 1;\nloop invariant x >= y - 2;\nloop invariant y >= x - 2;\nloop invariant x >= y - 3;\nloop invariant y >= x - 3;\nloop invariant x >= y - 4;\nloop invariant y >= x - 4;\nloop invariant x >= y - 5;\nloop invariant y >= x - 5;\nloop invariant x >= y - 6;\nloop invariant y >= x - 6;\nloop invariant x >= y - 7;\nloop invariant y >= x - 7;\nloop invariant x >= y - 8;\nloop invariant y >= x - 8;\nloop invariant x >= y - 9;\nloop invariant y >= x - 9;\nloop invariant x >= y - 10;\nloop invariant y >= x - 10;\nloop invariant x >= y - 11;\nloop invariant y >= x - 11;\nloop invariant x >= y - 12;\nloop invariant y >= x - 12;\nloop invariant x >= y - 13;\nloop invariant y >= x - 13;\nloop invariant x >= y - 14;\nloop invariant y >= x - 14;\nloop invariant x >= y - 15;\nloop invariant y >= x - 15;\nloop invariant x >= y - 16;\nloop invariant y >= x - 16;\nloop invariant x >= y - 17;\nloop invariant y >= x - 17;\nloop invariant x >= y - 18;\nloop invariant y >= x - 18;\nloop invariant x >= y - 19;\nloop invariant y >= x - 19;\nloop invariant x >= y - 20;\nloop invariant y >= x - 20;\nloop invariant x >= y - 21;\nloop invariant y >= x - 21;\nloop invariant x >= y - 22;\nloop invariant y >= x - 22;\nloop invariant x >= y - 23;\nloop invariant y >= x - 23;\nloop invariant x >= y - 24;\nloop invariant y >= x - 24;\nloop invariant x >= y - 25;\nloop invariant y >= x - 25;\nloop invariant x >= y - 26;\nloop invariant y >= x - 26;\nloop invariant x >= y - 27;\nloop invariant y >= x - 27;\nloop invariant x >= y - 28;\nloop invariant y >= x - 28;\nloop invariant x >= y - 29;\nloop invariant y >= x - 29;\nloop invariant x >= y - 30;\nloop invariant y >= x - 30;\nloop invariant x >= y - 31;\nloop invariant y >= x - 31;\nloop invariant x >= y - 32;\nloop invariant y >= x - 32;\nloop invariant x >= y - 33;\nloop invariant y >= x - 33;\nloop invariant x >= y - 34;\nloop invariant y >= x - 34;\nloop invariant x >= y - 35;\nloop invariant y >= x - 35;\nloop invariant x >= y - 36;\nloop invariant y >= x - 36;\nloop invariant x >= y - 37;\nloop invariant y >= x - 37;\nloop invariant x >= y - 38;\nloop invariant y >= x - 38;\nloop invariant x >= y - 39;\nloop invariant y >= x - 39;\nloop invariant x >= y - 40;\nloop invariant y >= x - 40;\nloop invariant x >= y - 41;\nloop invariant y >= x - 41;\nloop invariant x >= y - 42;\nloop invariant y >= x - 42;\nloop invariant x >= y - 43;\nloop invariant y >= x - 43;\nloop invariant x >= y - 44;\nloop invariant y >= x - 44;\nloop invariant x >= y - 45;\nloop invariant y >= x - 45;\nloop invariant x >= y - 46;\nloop invariant y >= x - 46;\nloop invariant x >= y - 47;\nloop invariant y >= x - 47;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 2147483647;\nloop invariant 1 <= y <= 2147483647;\nloop invariant x + 1 <= y ==> x == 0;\nloop invariant x + 1 <= y ==> y == 0;\nloop invariant y + 1 <= x ==> x == 0;\nloop invariant y + 1 <= x ==> y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x == y;\nloop invariant x >= 0;\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 2147483647;\nloop invariant 0 <= y <= 2147483647;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x - y <= 2147483647;\nloop invariant x - y >= -2147483647;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y; loop invariant 0 <= y <= x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x == y ==> (x >= 0 && x <= 100000);\nloop invariant x != y ==> (x >= 0 && x <= 100000 && y >= 0 && y <= 100000);\nloop invariant (x != 0 && y != 0) ==> (x >= 0 && x <= 100000 && y >= 0 && y <= 100000);\nloop invariant x == 0 ==> (y == 0);\nloop invariant y == 0 ==> (x == 0);\nloop invariant x <= y ==> y <= 100000;\nloop invariant x >= y ==> x >= 0;\nloop invariant y >= x ==> y >= 0;\nloop invariant x != 0 ==> (x >= 0 && x <= 100000);\nloop invariant y != 0 ==> (y >= 0 && y <= 100000);\nloop invariant x <= y ==> y <= 100000;\nloop invariant x >= y ==> x >= 0;\nloop invariant y >= x ==> y >= 0;\nloop invariant x != 0 ==> (x >= 0 && x <= 100000);\nloop invariant y != 0 ==> (y >= 0 && y <= 100000);\nloop invariant x <= y ==> y <= 100000;\nloop invariant x >= y ==> x >= 0;\nloop invariant y >= x ==> y >= 0;\nloop invariant x != 0 ==> (x >= 0 && x <= 100000);\nloop invariant y != 0 ==> (y >= 0 && y <= 100000);\nloop invariant x <= y ==> y <= 100000;\nloop invariant x >= y ==> x >= 0;\nloop invariant y >= x ==> y >= 0;\nloop invariant x != 0 ==> (x >= 0 && x <= 100000);\nloop invariant y != 0 ==> (y >= 0 && y <= 100000);\nloop invariant x <= y ==> y <= 100000;\nloop invariant x >= y ==> x >= 0;\nloop invariant y >= x ==> y >= 0;\nloop invariant x != 0 ==> (x >= 0 && x <= 100000);\nloop invariant y != 0 ==> (y >= 0 && y <= 100000);\nloop invariant x <= y ==> y <= 100000;\nloop invariant x >= y ==> x >= 0;\nloop invariant y >= x ==> y >= 0;\nloop invariant x != 0 ==> (x >= 0 && x <= 100000);\nloop invariant y != 0 ==> (y >= 0 && y <= 100000);\nloop invariant x <= y ==> y <= 100000;\nloop invariant x >= y ==> x >= 0;\nloop invariant y >= x ==> y >= 0;\nloop invariant x != 0 ==> (x >= 0 && x <= 100000);\nloop invariant y != 0 ==> (y >= 0 && y <= 100000);\nloop invariant x <= y ==> y <= 100000;\nloop invariant x >= y ==> x >= 0;\nloop invariant y >= x ==> y >= 0;\nloop invariant x != 0 ==> (x >= 0 && x <= 100000);\nloop invariant y != 0 ==> (y >= 0 && y <= 100000);\nloop invariant x <= y ==> y <= 100000;\nloop invariant x >= y ==> x >= 0;\nloop invariant y >= x ==> y >= 0;\nloop invariant x != 0 ==> (x >= 0 && x <= 100000);\nloop invariant y != 0 ==> (y >= 0 && y <= 100000);\nloop invariant x <= y ==> y <= 100000;\nloop invariant x >= y ==> x >= 0;\nloop invariant y >= x ==> y >= 0;\nloop invariant x != 0 ==> (x >= 0 && x <= 100000);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= y;\nloop invariant x <= y && x >= 0 && y >= 0;\nloop invariant x <= y;\nloop invariant y == 0 ==> x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x == y && y >=0)) return 0;\n  /*@\n\nloop invariant i2: x <= y && x >= 0 && y >= 0;\nloop invariant i3: x <= y;\nloop invariant i4: y == 0 ==> x == 0;\n*/\nwhile (x!=0) {\n    x--;\n    y--;\n    if (x<0 || y<0) break;\n  }\n  {;\n//@ assert(y==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant y >= 0;\nloop invariant x == y;\nloop invariant x >= 0;\nloop invariant y >= x;\nloop invariant y >= 0;\nloop invariant y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x == y && y >=0)) return 0;\n  /*@\nloop invariant i1: 0 <= x <= y;\nloop invariant i2: y >= 0;\nloop invariant i3: x == y;\nloop invariant i4: x >= 0;\nloop invariant i5: y >= x;\n\n*/\nwhile (x!=0) {\n    x--;\n    y--;\n    if (x<0 || y<0) break;\n  }\n  {;\n//@ assert(y==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 158,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x == y && y >=0)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (x!=0) {\n    x--;\n    y--;\n    if (x<0 || y<0) break;\n  }\n  {;\n//@ assert(y==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant - x <= y && x >= 0 && y >= 0 && x <= 100000 && y <= 100000;\nloop invariant - (y - 1) * y / 2 <= x <= (y + 1) * (y + 1) / 2;\nloop invariant - x >= (y - 1) * y / 2 && x <= (y + 1) * (y + 1) / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x == y && y >=0)) return 0;\n  /*@\n\n\n\n*/\nwhile (x!=0) {\n    x--;\n    y--;\n    if (x<0 || y<0) break;\n  }\n  {;\n//@ assert(y==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= x;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x - y >= 0;\nloop invariant x - y <= x;\nloop invariant y - x >= -x;\nloop invariant y - x <= 0;\nloop invariant x - y >= 0 ==> y - x <= x;\nloop invariant x - y <= x ==> y - x >= -x;\nloop invariant x - y >= 0 ==> x - y <= x;\nloop invariant x - y <= x ==> x - y >= 0;\nloop invariant x >= y ==> y >= 0;\nloop invariant x >= y ==> x >= 0;\nloop invariant x >= y ==> y - x <= x;\nloop invariant y >= 0 ==> x >= y;\nloop invariant x >= 0 ==> x >= y;\nloop invariant y >= 0 ==> y - x <= x;\nloop invariant x >= y ==> x - y >= 0;\nloop invariant y >= 0 ==> x - y >= 0;\nloop invariant x >= y ==> x - y <= x;\nloop invariant x >= 0 ==> x - y >= 0;\nloop invariant y >= 0 ==> x - y <= x;\nloop invariant x >= y ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> x - y <= x;\nloop invariant x >= 0 ==> x - y <= x;\nloop invariant y >= 0 ==> y - x <= x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> x - y >= 0;\nloop invariant x >= 0 ==> x - y >= 0;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x <= x;\nloop invariant y >= 0 ==> x - y <= x;\nloop invariant x >= 0 ==> x - y <= x;\nloop invariant y >= 0 ==> y - x <= x;\nloop invariant x >= 0 ==> y - x <= x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\nloop invariant y >= 0 ==> y - x >= -x;\nloop invariant x >= 0 ==> y - x >= -x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x == y && y >=0)) return 0;\n  /*@\nloop invariant i1: 0 <= y <= x;\nloop invariant i2: x >= y;\nloop invariant i3: y >= 0;\nloop invariant i4: x >= 0;\nloop invariant i5: x - y >= 0;\nloop invariant i6: x - y <= x;\nloop invariant i7: y - x >= -x;\nloop invariant i8: y - x <= 0;\nloop invariant i9: x - y >= 0 ==> y - x <= x;\nloop invariant i10: x - y <= x ==> y - x >= -x;\nloop invariant i11: x - y >= 0 ==> x - y <= x;\nloop invariant i12: x - y <= x ==> x - y >= 0;\nloop invariant i13: x >= y ==> y >= 0;\nloop invariant i14: x >= y ==> x >= 0;\nloop invariant i15: x >= y ==> y - x <= x;\nloop invariant i16: y >= 0 ==> x >= y;\nloop invariant i17: x >= 0 ==> x >= y;\nloop invariant i18: y >= 0 ==> y - x <= x;\nloop invariant i19: x >= y ==> x - y >= 0;\nloop invariant i20: y >= 0 ==> x - y >= 0;\nloop invariant i21: x >= y ==> x - y <= x;\nloop invariant i22: x >= 0 ==> x - y >= 0;\nloop invariant i23: y >= 0 ==> x - y <= x;\nloop invariant i24: x >= y ==> y - x >= -x;\nloop invariant i25: y >= 0 ==> y - x >= -x;\nloop invariant i26: x >= 0 ==> y - x >= -x;\nloop invariant i27: x >= 0 ==> x - y <= x;\nloop invariant i28: x >= 0 ==> y - x <= x;\n*/\nwhile (x!=0) {\n    x--;\n    y--;\n    if (x<0 || y<0) break;\n  }\n  {;\n//@ assert(y==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x == y || x < y;\nloop invariant x <= y + 1;\nloop invariant y <= x + 1;\nloop invariant x >= 0 ==> y >= 0;\nloop invariant y >= 0 ==> x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x == y && y >=0)) return 0;\n  /*@\nloop invariant i1: x >= y;\nloop invariant i2: x >= 0;\nloop invariant i3: y >= 0;\nloop invariant i4: x == y || x < y;\nloop invariant i5: x <= y + 1;\nloop invariant i6: y <= x + 1;\nloop invariant i7: x >= 0 ==> y >= 0;\nloop invariant i8: y >= 0 ==> x >= 0;\n*/\nwhile (x!=0) {\n    x--;\n    y--;\n    if (x<0 || y<0) break;\n  }\n  {;\n//@ assert(y==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant (x + y) % 2 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x == y && y >=0)) return 0;\n  /*@\nloop invariant i1: 0 <= x <= y;\nloop invariant i2: (x + y) % 2 == 0;\n*/\nwhile (x!=0) {\n    x--;\n    y--;\n    if (x<0 || y<0) break;\n  }\n  {;\n//@ assert(y==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2147483647;\nloop invariant 0 <= y <= 2147483647;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= y + 1;\nloop invariant y <= x + 1;\nloop invariant x >= y - 1;\nloop invariant y >= x - 1;\nloop invariant x >= y - 2;\nloop invariant y >= x - 2;\nloop invariant x >= y - 3;\nloop invariant y >= x - 3;\nloop invariant x >= y - 4;\nloop invariant y >= x - 4;\nloop invariant x >= y - 5;\nloop invariant y >= x - 5;\nloop invariant x >= y - 6;\nloop invariant y >= x - 6;\nloop invariant x >= y - 7;\nloop invariant y >= x - 7;\nloop invariant x >= y - 8;\nloop invariant y >= x - 8;\nloop invariant x >= y - 9;\nloop invariant y >= x - 9;\nloop invariant x >= y - 10;\nloop invariant y >= x - 10;\nloop invariant x >= y - 11;\nloop invariant y >= x - 11;\nloop invariant x >= y - 12;\nloop invariant y >= x - 12;\nloop invariant x >= y - 13;\nloop invariant y >= x - 13;\nloop invariant x >= y - 14;\nloop invariant y >= x - 14;\nloop invariant x >= y - 15;\nloop invariant y >= x - 15;\nloop invariant x >= y - 16;\nloop invariant y >= x - 16;\nloop invariant x >= y - 17;\nloop invariant y >= x - 17;\nloop invariant x >= y - 18;\nloop invariant y >= x - 18;\nloop invariant x >= y - 19;\nloop invariant y >= x - 19;\nloop invariant x >= y - 20;\nloop invariant y >= x - 20;\nloop invariant x >= y - 21;\nloop invariant y >= x - 21;\nloop invariant x >= y - 22;\nloop invariant y >= x - 22;\nloop invariant x >= y - 23;\nloop invariant y >= x - 23;\nloop invariant x >= y - 24;\nloop invariant y >= x - 24;\nloop invariant x >= y - 25;\nloop invariant y >= x - 25;\nloop invariant x >= y - 26;\nloop invariant y >= x - 26;\nloop invariant x >= y - 27;\nloop invariant y >= x - 27;\nloop invariant x >= y - 28;\nloop invariant y >= x - 28;\nloop invariant x >= y - 29;\nloop invariant y >= x - 29;\nloop invariant x >= y - 30;\nloop invariant y >= x - 30;\nloop invariant x >= y - 31;\nloop invariant y >= x - 31;\nloop invariant x >= y - 32;\nloop invariant y >= x - 32;\nloop invariant x >= y - 33;\nloop invariant y >= x - 33;\nloop invariant x >= y - 34;\nloop invariant y >= x - 34;\nloop invariant x >= y - 35;\nloop invariant y >= x - 35;\nloop invariant x >= y - 36;\nloop invariant y >= x - 36;\nloop invariant x >= y - 37;\nloop invariant y >= x - 37;\nloop invariant x >= y - 38;\nloop invariant y >= x - 38;\nloop invariant x >= y - 39;\nloop invariant y >= x - 39;\nloop invariant x >= y - 40;\nloop invariant y >= x - 40;\nloop invariant x >= y - 41;\nloop invariant y >= x - 41;\nloop invariant x >= y - 42;\nloop invariant y >= x - 42;\nloop invariant x >= y - 43;\nloop invariant y >= x - 43;\nloop invariant x >= y - 44;\nloop invariant y >= x - 44;\nloop invariant x >= y - 45;\nloop invariant y >= x - 45;\nloop invariant x >= y - 46;\nloop invariant y >= x - 46;\nloop invariant x >= y - 47;\nloop invariant y >= x - 47;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x == y && y >=0)) return 0;\n  /*@\nloop invariant i1: 0 <= x <= 2147483647;\nloop invariant i2: 0 <= y <= 2147483647;\nloop invariant i3: x >= y;\nloop invariant i4: x >= 0;\nloop invariant i5: y >= 0;\nloop invariant i6: x <= y + 1;\nloop invariant i7: y <= x + 1;\nloop invariant i8: x >= y - 1;\nloop invariant i9: y >= x - 1;\nloop invariant i10: x >= y - 2;\nloop invariant i11: y >= x - 2;\nloop invariant i12: x >= y - 3;\nloop invariant i13: y >= x - 3;\nloop invariant i14: x >= y - 4;\nloop invariant i15: y >= x - 4;\nloop invariant i16: x >= y - 5;\nloop invariant i17: y >= x - 5;\nloop invariant i18: x >= y - 6;\nloop invariant i19: y >= x - 6;\nloop invariant i20: x >= y - 7;\nloop invariant i21: y >= x - 7;\nloop invariant i22: x >= y - 8;\nloop invariant i23: y >= x - 8;\nloop invariant i24: x >= y - 9;\nloop invariant i25: y >= x - 9;\nloop invariant i26: x >= y - 10;\nloop invariant i27: y >= x - 10;\nloop invariant i28: x >= y - 11;\nloop invariant i29: y >= x - 11;\nloop invariant i30: x >= y - 12;\nloop invariant i31: y >= x - 12;\nloop invariant i32: x >= y - 13;\nloop invariant i33: y >= x - 13;\nloop invariant i34: x >= y - 14;\nloop invariant i35: y >= x - 14;\nloop invariant i36: x >= y - 15;\nloop invariant i37: y >= x - 15;\nloop invariant i38: x >= y - 16;\nloop invariant i39: y >= x - 16;\nloop invariant i40: x >= y - 17;\nloop invariant i41: y >= x - 17;\nloop invariant i42: x >= y - 18;\nloop invariant i43: y >= x - 18;\nloop invariant i44: x >= y - 19;\nloop invariant i45: y >= x - 19;\nloop invariant i46: x >= y - 20;\nloop invariant i47: y >= x - 20;\nloop invariant i48: x >= y - 21;\nloop invariant i49: y >= x - 21;\nloop invariant i50: x >= y - 22;\nloop invariant i51: y >= x - 22;\nloop invariant i52: x >= y - 23;\nloop invariant i53: y >= x - 23;\nloop invariant i54: x >= y - 24;\nloop invariant i55: y >= x - 24;\nloop invariant i56: x >= y - 25;\nloop invariant i57: y >= x - 25;\nloop invariant i58: x >= y - 26;\nloop invariant i59: y >= x - 26;\nloop invariant i60: x >= y - 27;\nloop invariant i61: y >= x - 27;\nloop invariant i62: x >= y - 28;\nloop invariant i63: y >= x - 28;\nloop invariant i64: x >= y - 29;\nloop invariant i65: y >= x - 29;\nloop invariant i66: x >= y - 30;\nloop invariant i67: y >= x - 30;\nloop invariant i68: x >= y - 31;\nloop invariant i69: y >= x - 31;\nloop invariant i70: x >= y - 32;\nloop invariant i71: y >= x - 32;\nloop invariant i72: x >= y - 33;\nloop invariant i73: y >= x - 33;\nloop invariant i74: x >= y - 34;\nloop invariant i75: y >= x - 34;\nloop invariant i76: x >= y - 35;\nloop invariant i77: y >= x - 35;\nloop invariant i78: x >= y - 36;\nloop invariant i79: y >= x - 36;\nloop invariant i80: x >= y - 37;\nloop invariant i81: y >= x - 37;\nloop invariant i82: x >= y - 38;\nloop invariant i83: y >= x - 38;\nloop invariant i84: x >= y - 39;\nloop invariant i85: y >= x - 39;\nloop invariant i86: x >= y - 40;\nloop invariant i87: y >= x - 40;\nloop invariant i88: x >= y - 41;\nloop invariant i89: y >= x - 41;\nloop invariant i90: x >= y - 42;\nloop invariant i91: y >= x - 42;\nloop invariant i92: x >= y - 43;\nloop invariant i93: y >= x - 43;\nloop invariant i94: x >= y - 44;\nloop invariant i95: y >= x - 44;\nloop invariant i96: x >= y - 45;\nloop invariant i97: y >= x - 45;\nloop invariant i98: x >= y - 46;\nloop invariant i99: y >= x - 46;\nloop invariant i100: x >= y - 47;\nloop invariant i101: y >= x - 47;\n*/\nwhile (x!=0) {\n    x--;\n    y--;\n    if (x<0 || y<0) break;\n  }\n  {;\n//@ assert(y==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x == y && y >=0)) return 0;\n  /*@\n\n\n*/\nwhile (x!=0) {\n    x--;\n    y--;\n    if (x<0 || y<0) break;\n  }\n  {;\n//@ assert(y==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 2147483647;\nloop invariant 1 <= y <= 2147483647;\nloop invariant x + 1 <= y ==> x == 0;\nloop invariant x + 1 <= y ==> y == 0;\nloop invariant y + 1 <= x ==> x == 0;\nloop invariant y + 1 <= x ==> y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x == y && y >=0)) return 0;\n  /*@\n\n\nloop invariant i3: x + 1 <= y ==> x == 0;\nloop invariant i4: x + 1 <= y ==> y == 0;\nloop invariant i5: y + 1 <= x ==> x == 0;\nloop invariant i6: y + 1 <= x ==> y == 0;\n*/\nwhile (x!=0) {\n    x--;\n    y--;\n    if (x<0 || y<0) break;\n  }\n  {;\n//@ assert(y==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x == y;\nloop invariant x >= 0;\nloop invariant y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x == y && y >=0)) return 0;\n  /*@\nloop invariant i1: 0 <= x <= y;\nloop invariant i2: x == y;\nloop invariant i3: x >= 0;\nloop invariant i4: y >= 0;\n*/\nwhile (x!=0) {\n    x--;\n    y--;\n    if (x<0 || y<0) break;\n  }\n  {;\n//@ assert(y==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2147483647;\nloop invariant 0 <= y <= 2147483647;\nloop invariant x >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x - y <= 2147483647;\nloop invariant x - y >= -2147483647;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x == y && y >=0)) return 0;\n  /*@\nloop invariant i1: 0 <= x <= 2147483647;\nloop invariant i2: 0 <= y <= 2147483647;\nloop invariant i3: x >= y;\nloop invariant i4: x >= 0;\nloop invariant i5: y >= 0;\nloop invariant i6: x - y <= 2147483647;\nloop invariant i7: x - y >= -2147483647;\n*/\nwhile (x!=0) {\n    x--;\n    y--;\n    if (x<0 || y<0) break;\n  }\n  {;\n//@ assert(y==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y; loop invariant 0 <= y <= x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x == y && y >=0)) return 0;\n  /*@\n\n*/\nwhile (x!=0) {\n    x--;\n    y--;\n    if (x<0 || y<0) break;\n  }\n  {;\n//@ assert(y==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x == y && y >=0)) return 0;\n  /*@\n\n*/\nwhile (x!=0) {\n    x--;\n    y--;\n    if (x<0 || y<0) break;\n  }\n  {;\n//@ assert(y==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x == y ==> (x >= 0 && x <= 100000);\nloop invariant x != y ==> (x >= 0 && x <= 100000 && y >= 0 && y <= 100000);\nloop invariant (x != 0 && y != 0) ==> (x >= 0 && x <= 100000 && y >= 0 && y <= 100000);\nloop invariant x == 0 ==> (y == 0);\nloop invariant y == 0 ==> (x == 0);\nloop invariant x <= y ==> y <= 100000;\nloop invariant x >= y ==> x >= 0;\nloop invariant y >= x ==> y >= 0;\nloop invariant x != 0 ==> (x >= 0 && x <= 100000);\nloop invariant y != 0 ==> (y >= 0 && y <= 100000);\nloop invariant x <= y ==> y <= 100000;\nloop invariant x >= y ==> x >= 0;\nloop invariant y >= x ==> y >= 0;\nloop invariant x != 0 ==> (x >= 0 && x <= 100000);\nloop invariant y != 0 ==> (y >= 0 && y <= 100000);\nloop invariant x <= y ==> y <= 100000;\nloop invariant x >= y ==> x >= 0;\nloop invariant y >= x ==> y >= 0;\nloop invariant x != 0 ==> (x >= 0 && x <= 100000);\nloop invariant y != 0 ==> (y >= 0 && y <= 100000);\nloop invariant x <= y ==> y <= 100000;\nloop invariant x >= y ==> x >= 0;\nloop invariant y >= x ==> y >= 0;\nloop invariant x != 0 ==> (x >= 0 && x <= 100000);\nloop invariant y != 0 ==> (y >= 0 && y <= 100000);\nloop invariant x <= y ==> y <= 100000;\nloop invariant x >= y ==> x >= 0;\nloop invariant y >= x ==> y >= 0;\nloop invariant x != 0 ==> (x >= 0 && x <= 100000);\nloop invariant y != 0 ==> (y >= 0 && y <= 100000);\nloop invariant x <= y ==> y <= 100000;\nloop invariant x >= y ==> x >= 0;\nloop invariant y >= x ==> y >= 0;\nloop invariant x != 0 ==> (x >= 0 && x <= 100000);\nloop invariant y != 0 ==> (y >= 0 && y <= 100000);\nloop invariant x <= y ==> y <= 100000;\nloop invariant x >= y ==> x >= 0;\nloop invariant y >= x ==> y >= 0;\nloop invariant x != 0 ==> (x >= 0 && x <= 100000);\nloop invariant y != 0 ==> (y >= 0 && y <= 100000);\nloop invariant x <= y ==> y <= 100000;\nloop invariant x >= y ==> x >= 0;\nloop invariant y >= x ==> y >= 0;\nloop invariant x != 0 ==> (x >= 0 && x <= 100000);\nloop invariant y != 0 ==> (y >= 0 && y <= 100000);\nloop invariant x <= y ==> y <= 100000;\nloop invariant x >= y ==> x >= 0;\nloop invariant y >= x ==> y >= 0;\nloop invariant x != 0 ==> (x >= 0 && x <= 100000);\nloop invariant y != 0 ==> (y >= 0 && y <= 100000);\nloop invariant x <= y ==> y <= 100000;\nloop invariant x >= y ==> x >= 0;\nloop invariant y >= x ==> y >= 0;\nloop invariant x != 0 ==> (x >= 0 && x <= 100000);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x == y && y >=0)) return 0;\n  /*@\nloop invariant i1: 0 <= x <= y;\n\n\n\nloop invariant i5: x != y ==> (x >= 0 && x <= 100000 && y >= 0 && y <= 100000);\n\n\nloop invariant i8: y == 0 ==> (x == 0);\n\nloop invariant i10: x >= y ==> x >= 0;\nloop invariant i11: y >= x ==> y >= 0;\n\n\n*/\nwhile (x!=0) {\n    x--;\n    y--;\n    if (x<0 || y<0) break;\n  }\n  {;\n//@ assert(y==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 326: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x == y && y >=0)) return 0;\n  /*@\nloop invariant i1: 1 <= x <= y;\nloop invariant i2: x <= y && x >= 0 && y >= 0;\nloop invariant i3: x <= y;\nloop invariant i4: y == 0 ==> x == 0;\nloop invariant i5: 0 <= x <= y;\nloop invariant i6: y >= 0;\nloop invariant i7: x == y;\nloop invariant i8: x >= 0;\nloop invariant i9: y >= x;\nloop invariant i10: y == 0;\nloop invariant i11: i1;\nloop invariant i12: i2;\nloop invariant i13: i3;\nloop invariant i14: i4;\nloop invariant i15: i5;\nloop invariant i16: i6;\nloop invariant i17: i7;\nloop invariant i18: i8;\nloop invariant i19: i9;\nloop invariant i20: i10;\nloop invariant i21: i11;\nloop invariant i22: i12;\nloop invariant i23: i13;\nloop invariant i24: i14;\nloop invariant i25: i15;\nloop invariant i26: i16;\nloop invariant i27: i17;\nloop invariant i28: i18;\nloop invariant i29: i19;\nloop invariant i30: i20;\nloop invariant i31: i21;\nloop invariant i32: i22;\nloop invariant i33: i23;\nloop invariant i34: i24;\nloop invariant i35: i25;\nloop invariant i36: i26;\nloop invariant i37: i27;\nloop invariant i38: i28;\nloop invariant i39: i29;\nloop invariant i40: i30;\nloop invariant i41: i31;\nloop invariant i42: i32;\nloop invariant i43: i33;\nloop invariant i44: i34;\nloop invariant i45: i35;\nloop invariant i46: i36;\nloop invariant i47: i37;\nloop invariant i48: i38;\nloop invariant i49: i39;\nloop invariant i50: i40;\nloop invariant i51: i41;\nloop invariant i52: i42;\nloop invariant i53: i43;\nloop invariant i54: i44;\nloop invariant i55: i45;\nloop invariant i56: i46;\nloop invariant i57: i47;\nloop invariant i58: i48;\nloop invariant i59: i49;\nloop invariant i60: i50;\nloop invariant i61: i51;\nloop invariant i62: i52;\nloop invariant i63: i53;\nloop invariant i64: i54;\nloop invariant i65: i55;\nloop invariant i66: i56;\nloop invariant i67: i57;\nloop invariant i68: i58;\nloop invariant i69: i59;\nloop invariant i70: i60;\nloop invariant i71: i61;\nloop invariant i72: i62;\nloop invariant i73: i63;\nloop invariant i74: i64;\nloop invariant i75: i65;\nloop invariant i76: i66;\nloop invariant i77: i67;\nloop invariant i78: i68;\nloop invariant i79: i69;\nloop invariant i80: i70;\nloop invariant i81: i71;\nloop invariant i82: i72;\nloop invariant i83: i73;\nloop invariant i84: i74;\nloop invariant i85: i75;\nloop invariant i86: i76;\nloop invariant i87: i77;\nloop invariant i88: i78;\nloop invariant i89: i79;\nloop invariant i90: i80;\nloop invariant i91: i81;\nloop invariant i92: i82;\nloop invariant i93: i83;\nloop invariant i94: i84;\nloop invariant i95: i85;\nloop invariant i96: i86;\nloop invariant i97: i87;\nloop invariant i98: i88;\nloop invariant i99: i89;\nloop invariant i100: i90;\nloop invariant i101: i91;\nloop invariant i102: i92;\nloop invariant i103: i93;\nloop invariant i104: i94;\nloop invariant i105: i95;\nloop invariant i106: i96;\nloop invariant i107: i97;\nloop invariant i108: i98;\nloop invariant i109: i99;\nloop invariant i110: i100;\nloop invariant i111: i101;\nloop invariant i112: i102;\nloop invariant i113: i103;\nloop invariant i114: i104;\nloop invariant i115: i105;\nloop invariant i116: i106;\nloop invariant i117: i107;\nloop invariant i118: i108;\nloop invariant i119: i109;\nloop invariant i120: i110;\nloop invariant i121: i111;\nloop invariant i122: i112;\nloop invariant i123: i113;\nloop invariant i124: i114;\nloop invariant i125: i115;\nloop invariant i126: i116;\nloop invariant i127: i117;\nloop invariant i128: i118;\nloop invariant i129: i119;\nloop invariant i130: i120;\nloop invariant i131: i121;\nloop invariant i132: i122;\nloop invariant i133: i123;\nloop invariant i134: i124;\nloop invariant i135: i125;\nloop invariant i136: i126;\nloop invariant i137: i127;\nloop invariant i138: i128;\nloop invariant i139: i129;\nloop invariant i140: i130;\nloop invariant i141: i131;\nloop invariant i142: i132;\nloop invariant i143: i133;\nloop invariant i144: i134;\nloop invariant i145: i135;\nloop invariant i146: i136;\nloop invariant i147: i137;\nloop invariant i148: i138;\nloop invariant i149: i139;\nloop invariant i150: i140;\nloop invariant i151: i141;\nloop invariant i152: i142;\nloop invariant i153: i143;\nloop invariant i154: i144;\nloop invariant i155: i145;\nloop invariant i156: i146;\nloop invariant i157: i147;\nloop invariant i158: i148;\nloop invariant i159: i149;\nloop invariant i160: i150;\nloop invariant i161: i151;\nloop invariant i162: i152;\nloop invariant i163: i153;\nloop invariant i164: i154;\nloop invariant i165: i155;\nloop invariant i166: i156;\nloop invariant i167: i157;\nloop invariant i168: i158;\nloop invariant i169: - x <= y && x >= 0 && y >= 0 && x <= 100000 && y <= 100000;\nloop invariant i170: - (y - 1) * y / 2 <= x <= (y + 1) * (y + 1) / 2;\nloop invariant i171: - x >= (y - 1) * y / 2 && x <= (y + 1) * (y + 1) / 2;\nloop invariant i172: 0 <= y <= x;\nloop invariant i173: x >= y;\nloop invariant i174: x - y >= 0;\nloop invariant i175: x - y <= x;\nloop invariant i176: y - x >= -x;\nloop invariant i177: y - x <= 0;\nloop invariant i178: x - y >= 0 ==> y - x <= x;\nloop invariant i179: x - y <= x ==> y - x >= -x;\nloop invariant i180: x - y >= 0 ==> x - y <= x;\nloop invariant i181: x - y <= x ==> x - y >= 0;\nloop invariant i182: x >= y ==> y >= 0;\nloop invariant i183: x >= y ==> x >= 0;\nloop invariant i184: x >= y ==> y - x <= x;\nloop invariant i185: y >= 0 ==> x >= y;\nloop invariant i186: x >= 0 ==> x >= y;\nloop invariant i187: y >= 0 ==> y - x <= x;\nloop invariant i188: x >= y ==> x - y >= 0;\nloop invariant i189: y >= 0 ==> x - y >= 0;\nloop invariant i190: x >= y ==> x - y <= x;\nloop invariant i191: x >= 0 ==> x - y >= 0;\nloop invariant i192: y >= 0 ==> x - y <= x;\nloop invariant i193: x >= y ==> y - x >= -x;\nloop invariant i194: y >= 0 ==> y - x >= -x;\nloop invariant i195: x >= 0 ==> y - x >= -x;\nloop invariant i196: x >= 0 ==> x - y <= x;\nloop invariant i197: x >= 0 ==> y - x <= x;\nloop invariant i198: x == y || x < y;\nloop invariant i199: x <= y + 1;\nloop invariant i200: y <= x + 1;\nloop invariant i201: x >= 0 ==> y >= 0;\nloop invariant i202: y >= 0 ==> x >= 0;\nloop invariant i203: (x + y) % 2 == 0;\nloop invariant i204: 0 <= x <= 2147483647;\nloop invariant i205: 0 <= y <= 2147483647;\nloop invariant i206: x >= y - 1;\nloop invariant i207: y >= x - 1;\nloop invariant i208: x >= y - 2;\nloop invariant i209: y >= x - 2;\nloop invariant i210: x >= y - 3;\nloop invariant i211: y >= x - 3;\nloop invariant i212: x >= y - 4;\nloop invariant i213: y >= x - 4;\nloop invariant i214: x >= y - 5;\nloop invariant i215: y >= x - 5;\nloop invariant i216: x >= y - 6;\nloop invariant i217: y >= x - 6;\nloop invariant i218: x >= y - 7;\nloop invariant i219: y >= x - 7;\nloop invariant i220: x >= y - 8;\nloop invariant i221: y >= x - 8;\nloop invariant i222: x >= y - 9;\nloop invariant i223: y >= x - 9;\nloop invariant i224: x >= y - 10;\nloop invariant i225: y >= x - 10;\nloop invariant i226: x >= y - 11;\nloop invariant i227: y >= x - 11;\nloop invariant i228: x >= y - 12;\nloop invariant i229: y >= x - 12;\nloop invariant i230: x >= y - 13;\nloop invariant i231: y >= x - 13;\nloop invariant i232: x >= y - 14;\nloop invariant i233: y >= x - 14;\nloop invariant i234: x >= y - 15;\nloop invariant i235: y >= x - 15;\nloop invariant i236: x >= y - 16;\nloop invariant i237: y >= x - 16;\nloop invariant i238: x >= y - 17;\nloop invariant i239: y >= x - 17;\nloop invariant i240: x >= y - 18;\nloop invariant i241: y >= x - 18;\nloop invariant i242: x >= y - 19;\nloop invariant i243: y >= x - 19;\nloop invariant i244: x >= y - 20;\nloop invariant i245: y >= x - 20;\nloop invariant i246: x >= y - 21;\nloop invariant i247: y >= x - 21;\nloop invariant i248: x >= y - 22;\nloop invariant i249: y >= x - 22;\nloop invariant i250: x >= y - 23;\nloop invariant i251: y >= x - 23;\nloop invariant i252: x >= y - 24;\nloop invariant i253: y >= x - 24;\nloop invariant i254: x >= y - 25;\nloop invariant i255: y >= x - 25;\nloop invariant i256: x >= y - 26;\nloop invariant i257: y >= x - 26;\nloop invariant i258: x >= y - 27;\nloop invariant i259: y >= x - 27;\nloop invariant i260: x >= y - 28;\nloop invariant i261: y >= x - 28;\nloop invariant i262: x >= y - 29;\nloop invariant i263: y >= x - 29;\nloop invariant i264: x >= y - 30;\nloop invariant i265: y >= x - 30;\nloop invariant i266: x >= y - 31;\nloop invariant i267: y >= x - 31;\nloop invariant i268: x >= y - 32;\nloop invariant i269: y >= x - 32;\nloop invariant i270: x >= y - 33;\nloop invariant i271: y >= x - 33;\nloop invariant i272: x >= y - 34;\nloop invariant i273: y >= x - 34;\nloop invariant i274: x >= y - 35;\nloop invariant i275: y >= x - 35;\nloop invariant i276: x >= y - 36;\nloop invariant i277: y >= x - 36;\nloop invariant i278: x >= y - 37;\nloop invariant i279: y >= x - 37;\nloop invariant i280: x >= y - 38;\nloop invariant i281: y >= x - 38;\nloop invariant i282: x >= y - 39;\nloop invariant i283: y >= x - 39;\nloop invariant i284: x >= y - 40;\nloop invariant i285: y >= x - 40;\nloop invariant i286: x >= y - 41;\nloop invariant i287: y >= x - 41;\nloop invariant i288: x >= y - 42;\nloop invariant i289: y >= x - 42;\nloop invariant i290: x >= y - 43;\nloop invariant i291: y >= x - 43;\nloop invariant i292: x >= y - 44;\nloop invariant i293: y >= x - 44;\nloop invariant i294: x >= y - 45;\nloop invariant i295: y >= x - 45;\nloop invariant i296: x >= y - 46;\nloop invariant i297: y >= x - 46;\nloop invariant i298: x >= y - 47;\nloop invariant i299: y >= x - 47;\nloop invariant i300: 0 <= y <= 100000;\nloop invariant i301: x >= (1 + (y - 1) * y / 2);\nloop invariant i302: 1 <= x <= 2147483647;\nloop invariant i303: 1 <= y <= 2147483647;\nloop invariant i304: x + 1 <= y ==> x == 0;\nloop invariant i305: x + 1 <= y ==> y == 0;\nloop invariant i306: y + 1 <= x ==> x == 0;\nloop invariant i307: y + 1 <= x ==> y == 0;\nloop invariant i308: x - y <= 2147483647;\nloop invariant i309: x - y >= -2147483647;\nloop invariant i310: 0 <= x <= y; loop invariant 0 <= y <= x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - y; loop invariant x + y == unknown_int() - x;\nloop invariant i311: x == y ==> (x >= 0 && x <= 100000);\nloop invariant i312: x != y ==> (x >= 0 && x <= 100000 && y >= 0 && y <= 100000);\nloop invariant i313: (x != 0 && y != 0) ==> (x >= 0 && x <= 100000 && y >= 0 && y <= 100000);\nloop invariant i314: x == 0 ==> (y == 0);\nloop invariant i315: y == 0 ==> (x == 0);\nloop invariant i316: x <= y ==> y <= 100000;\nloop invariant i317: y >= x ==> y >= 0;\nloop invariant i318: x != 0 ==> (x >= 0 && x <= 100000);\nloop invariant i319: y != 0 ==> (y >= 0 && y <= 100000);\n*/\nwhile (x!=0) {\n    x--;\n    y--;\n    if (x<0 || y<0) break;\n  }\n  {;\n//@ assert(y==0);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 168,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x == y && y >=0)) return 0;\n  /*@\n\nloop invariant i2: x <= y && x >= 0 && y >= 0;\nloop invariant i3: x <= y;\nloop invariant i4: y == 0 ==> x == 0;\nloop invariant i5: 0 <= x <= y;\nloop invariant i6: y >= 0;\nloop invariant i7: x == y;\nloop invariant i8: x >= 0;\nloop invariant i9: y >= x;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i170: - (y - 1) * y / 2 <= x <= (y + 1) * (y + 1) / 2;\n\nloop invariant i172: 0 <= y <= x;\nloop invariant i173: x >= y;\nloop invariant i174: x - y >= 0;\nloop invariant i175: x - y <= x;\nloop invariant i176: y - x >= -x;\nloop invariant i177: y - x <= 0;\nloop invariant i178: x - y >= 0 ==> y - x <= x;\nloop invariant i179: x - y <= x ==> y - x >= -x;\nloop invariant i180: x - y >= 0 ==> x - y <= x;\nloop invariant i181: x - y <= x ==> x - y >= 0;\nloop invariant i182: x >= y ==> y >= 0;\nloop invariant i183: x >= y ==> x >= 0;\nloop invariant i184: x >= y ==> y - x <= x;\nloop invariant i185: y >= 0 ==> x >= y;\nloop invariant i186: x >= 0 ==> x >= y;\nloop invariant i187: y >= 0 ==> y - x <= x;\nloop invariant i188: x >= y ==> x - y >= 0;\nloop invariant i189: y >= 0 ==> x - y >= 0;\nloop invariant i190: x >= y ==> x - y <= x;\nloop invariant i191: x >= 0 ==> x - y >= 0;\nloop invariant i192: y >= 0 ==> x - y <= x;\nloop invariant i193: x >= y ==> y - x >= -x;\nloop invariant i194: y >= 0 ==> y - x >= -x;\nloop invariant i195: x >= 0 ==> y - x >= -x;\nloop invariant i196: x >= 0 ==> x - y <= x;\nloop invariant i197: x >= 0 ==> y - x <= x;\nloop invariant i198: x == y || x < y;\nloop invariant i199: x <= y + 1;\nloop invariant i200: y <= x + 1;\nloop invariant i201: x >= 0 ==> y >= 0;\nloop invariant i202: y >= 0 ==> x >= 0;\nloop invariant i203: (x + y) % 2 == 0;\nloop invariant i204: 0 <= x <= 2147483647;\nloop invariant i205: 0 <= y <= 2147483647;\nloop invariant i206: x >= y - 1;\nloop invariant i207: y >= x - 1;\nloop invariant i208: x >= y - 2;\nloop invariant i209: y >= x - 2;\nloop invariant i210: x >= y - 3;\nloop invariant i211: y >= x - 3;\nloop invariant i212: x >= y - 4;\nloop invariant i213: y >= x - 4;\nloop invariant i214: x >= y - 5;\nloop invariant i215: y >= x - 5;\nloop invariant i216: x >= y - 6;\nloop invariant i217: y >= x - 6;\nloop invariant i218: x >= y - 7;\nloop invariant i219: y >= x - 7;\nloop invariant i220: x >= y - 8;\nloop invariant i221: y >= x - 8;\nloop invariant i222: x >= y - 9;\nloop invariant i223: y >= x - 9;\nloop invariant i224: x >= y - 10;\nloop invariant i225: y >= x - 10;\nloop invariant i226: x >= y - 11;\nloop invariant i227: y >= x - 11;\nloop invariant i228: x >= y - 12;\nloop invariant i229: y >= x - 12;\nloop invariant i230: x >= y - 13;\nloop invariant i231: y >= x - 13;\nloop invariant i232: x >= y - 14;\nloop invariant i233: y >= x - 14;\nloop invariant i234: x >= y - 15;\nloop invariant i235: y >= x - 15;\nloop invariant i236: x >= y - 16;\nloop invariant i237: y >= x - 16;\nloop invariant i238: x >= y - 17;\nloop invariant i239: y >= x - 17;\nloop invariant i240: x >= y - 18;\nloop invariant i241: y >= x - 18;\nloop invariant i242: x >= y - 19;\nloop invariant i243: y >= x - 19;\nloop invariant i244: x >= y - 20;\nloop invariant i245: y >= x - 20;\nloop invariant i246: x >= y - 21;\nloop invariant i247: y >= x - 21;\nloop invariant i248: x >= y - 22;\nloop invariant i249: y >= x - 22;\nloop invariant i250: x >= y - 23;\nloop invariant i251: y >= x - 23;\nloop invariant i252: x >= y - 24;\nloop invariant i253: y >= x - 24;\nloop invariant i254: x >= y - 25;\nloop invariant i255: y >= x - 25;\nloop invariant i256: x >= y - 26;\nloop invariant i257: y >= x - 26;\nloop invariant i258: x >= y - 27;\nloop invariant i259: y >= x - 27;\nloop invariant i260: x >= y - 28;\nloop invariant i261: y >= x - 28;\nloop invariant i262: x >= y - 29;\nloop invariant i263: y >= x - 29;\nloop invariant i264: x >= y - 30;\nloop invariant i265: y >= x - 30;\nloop invariant i266: x >= y - 31;\nloop invariant i267: y >= x - 31;\nloop invariant i268: x >= y - 32;\nloop invariant i269: y >= x - 32;\nloop invariant i270: x >= y - 33;\nloop invariant i271: y >= x - 33;\nloop invariant i272: x >= y - 34;\nloop invariant i273: y >= x - 34;\nloop invariant i274: x >= y - 35;\nloop invariant i275: y >= x - 35;\nloop invariant i276: x >= y - 36;\nloop invariant i277: y >= x - 36;\nloop invariant i278: x >= y - 37;\nloop invariant i279: y >= x - 37;\nloop invariant i280: x >= y - 38;\nloop invariant i281: y >= x - 38;\nloop invariant i282: x >= y - 39;\nloop invariant i283: y >= x - 39;\nloop invariant i284: x >= y - 40;\nloop invariant i285: y >= x - 40;\nloop invariant i286: x >= y - 41;\nloop invariant i287: y >= x - 41;\nloop invariant i288: x >= y - 42;\nloop invariant i289: y >= x - 42;\nloop invariant i290: x >= y - 43;\nloop invariant i291: y >= x - 43;\nloop invariant i292: x >= y - 44;\nloop invariant i293: y >= x - 44;\nloop invariant i294: x >= y - 45;\nloop invariant i295: y >= x - 45;\nloop invariant i296: x >= y - 46;\nloop invariant i297: y >= x - 46;\nloop invariant i298: x >= y - 47;\nloop invariant i299: y >= x - 47;\n\n\n\n\nloop invariant i304: x + 1 <= y ==> x == 0;\nloop invariant i305: x + 1 <= y ==> y == 0;\nloop invariant i306: y + 1 <= x ==> x == 0;\nloop invariant i307: y + 1 <= x ==> y == 0;\nloop invariant i308: x - y <= 2147483647;\nloop invariant i309: x - y >= -2147483647;\n\n\nloop invariant i312: x != y ==> (x >= 0 && x <= 100000 && y >= 0 && y <= 100000);\n\nloop invariant i314: x == 0 ==> (y == 0);\nloop invariant i315: y == 0 ==> (x == 0);\n\nloop invariant i317: y >= x ==> y >= 0;\n\n\n*/\nwhile (x!=0) {\n    x--;\n    y--;\n    if (x<0 || y<0) break;\n  }\n  {;\n//@ assert(y==0);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c"
        ],
        "skipped": [],
        "total": 130,
        "success_count": 114,
        "failure_count": 16,
        "success_rate": 0.8769230769230769
    }
}