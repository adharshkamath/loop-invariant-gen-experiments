{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/37.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= c <= 40;loop invariant if (unknown() && c != 40) then c == c else c == 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant c == (40 ==> c == 40);\nloop invariant c != (c == 40 ==> c != 40);\nloop invariant c >= (c == 40 ==> c >= 40);\nloop invariant c <= (c == 40 ==> c <= 40);\nloop invariant c >= (c != 40 ==> c >= 40);\nloop invariant c <= (c != 40 ==> c <= 40);\nloop invariant c <= (c == 40 ==> c == 40);\nloop invariant c >= (c == 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c != 40);\nloop invariant c >= (c == 40 ==> c != 40);\nloop invariant c >= (c != 40 ==> c == 40);\nloop invariant c <= (c != 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c == 40);\nloop invariant c >= (c == 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c != 40);\nloop invariant c >= (c == 40 ==> c != 40);\nloop invariant c >= (c != 40 ==> c == 40);\nloop invariant c <= (c != 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c == 40);\nloop invariant c >= (c == 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c != 40);\nloop invariant c >= (c == 40 ==> c != 40);\nloop invariant c >= (c != 40 ==> c == 40);\nloop invariant c <= (c != 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c == 40);\nloop invariant c >= (c == 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c != 40);\nloop invariant c >= (c == 40 ==> c != 40);\nloop invariant c >= (c != 40 ==> c == 40);\nloop invariant c <= (c != 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c == 40);\nloop invariant c >= (c == 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c != 40);\nloop invariant c >= (c == 40 ==> c != 40);\nloop invariant c >= (c != 40 ==> c == 40);\nloop invariant c <= (c != 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c == 40);\nloop invariant c >= (c == 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c != 40);\nloop invariant c >= (c == 40 ==> c != 40);\nloop invariant c >= (c != 40 ==> c == 40);\nloop invariant c <= (c != 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c == 40);\nloop invariant c >= (c == 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c != 40);\nloop invariant c >= (c == 40 ==> c != 40);\nloop invariant c >= (c != 40 ==> c == 40);\nloop invariant c <= (c != 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c == 40);\nloop invariant c >= (c == 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c != 40);\nloop invariant c >= (c == 40 ==> c != 40);\nloop invariant c >= (c != 40 ==> c == 40);\nloop invariant c <= (c != 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c == 40);\nloop invariant c >= (c == 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c != 40);\nloop invariant c >= (c == 40 ==> c != 40);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant (c == 40) ==> !unknown();\nloop invariant (c != 40) ==> unknown();\nloop invariant (c == 1) ==> !unknown();\nloop invariant (c != 1) ==> unknown();\nloop invariant (unknown() ==> (c != 40)) ==> (c == 40) ==> !unknown();\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant (c == 40) ==> (unknown() ==> 1);\nloop invariant (c == 40) ==> ((!unknown()) ==> (c == 1));\nloop invariant (c != 40) ==> (c >= 0);\nloop invariant (c != 40) ==> (c <= 39);\nloop invariant (c != 40) ==> (unknown() ==> (c == (c + 1)));\nloop invariant (c != 40) ==> ((!unknown()) ==> (c == 1));\n*/\n```",
            "```\n/*@\nloop invariant 1 <= c <= 40 and 1 <= c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 41;\nloop invariant (c <= 40 ==> c != 40);\nloop invariant (c == 40 ==> c >= 40);\nloop invariant (c == 1 ==> c <= 1);\nloop invariant (c == 1 ==> c >= 1);\nloop invariant (c == 40 ==> c <= 40);\nloop invariant (c == 40 ==> c >= 40);\nloop invariant (c != 40 ==> c < 40);\nloop invariant (c != 40 ==> c > 0);\nloop invariant (c != 1 ==> c < 40);\nloop invariant (c != 1 ==> c > 1);\nloop invariant (c == 40 ==> c == 40);\nloop invariant (c == 1 ==> c == 1);\nloop invariant (c != 40 ==> c != 40);\nloop invariant (c != 1 ==> c != 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant if (unknown()) then (c < 40) else (c = 40);\nloop invariant if (unknown()) then (c < 40) else (c = 1);\nloop invariant if (c != 40) then (c >= 0) else (c = 40);\nloop invariant if (c == 40) then (c <= 40) else (c = 1);\nloop invariant if (c != 40) then (c < 40) else (c = 1);\nloop invariant if (c == 40) then (c = 40) else (c < 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant (c == 40) ==> (c != 40);\nloop invariant c >= 40 ==> (c == 40);\nloop invariant c <= 0 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 40);\nloop invariant c >= 40 ==> (c != 40);\nloop invariant c <= 40 ==> (c == 40);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 =========<= c =========<= 40;\nloop invariant c ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant (c == 40) ==> (c >= 40);\nloop invariant (c < 40) ==> (c <= 40);\nloop invariant (c == 40) ==> (c == 40);\nloop invariant (c < 40) ==> (c < 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant c <= 40 ==> c >= 40;\nloop invariant c == 40 ==> c == 1;\nloop invariant c == 1 ==> c == 40;\nloop invariant c == 40 ==> c == 40 ==> c == 1;\nloop invariant c == 1 ==> c == 40 ==> c == 40;\nloop invariant c == 40 ==> c == 1 ==> c == 40;\nloop invariant c == 1 ==> c == 40 ==> c == 1;\nloop invariant c == 40 ==> c == 40 ==> c == 1 ==> c == 40;\nloop invariant c == 1 ==> c == 40 ==> c == 1 ==> c == 40;\nloop invariant c == 40 ==> c == 1 ==> c == 40 ==> c == 1;\nloop invariant c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40;\nloop invariant c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40;\nloop invariant c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40;\nloop invariant c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 40;loop invariant (c == 40) ==>(unknown() && (c != 40));loop invariant (c == 1) ==>(!(unknown() && (c != 40)));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == 1) ==>(!(unknown() && (c != 40)));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant c == 40 ==> unknown() == true;\nloop invariant c != 40 ==> unknown() == false;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant (c != 40 ==> c >= 41);\nloop invariant (c <= 39 ==> c <= 39);\nloop invariant (c == 40 ==> c == 40);\nloop invariant 0 <= c <= 40;\nloop invariant (c != 40 ==> c >= 41);\nloop invariant (c <= 39 ==> c <= 39);\nloop invariant (c == 40 ==> c == 40);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant (c == 40 ==> unknown() ==> c < 0) && (c == 40 ==> !unknown() ==> c > 40);\nloop invariant (c == 40 ==> unknown() ==> c == 1) && (c == 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 40;loop invariant if (unknown() && c != 40) then c == c else c == 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 12,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant c == (40 ==> c == 40);\nloop invariant c != (c == 40 ==> c != 40);\nloop invariant c >= (c == 40 ==> c >= 40);\nloop invariant c <= (c == 40 ==> c <= 40);\nloop invariant c >= (c != 40 ==> c >= 40);\nloop invariant c <= (c != 40 ==> c <= 40);\nloop invariant c <= (c == 40 ==> c == 40);\nloop invariant c >= (c == 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c != 40);\nloop invariant c >= (c == 40 ==> c != 40);\nloop invariant c >= (c != 40 ==> c == 40);\nloop invariant c <= (c != 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c == 40);\nloop invariant c >= (c == 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c != 40);\nloop invariant c >= (c == 40 ==> c != 40);\nloop invariant c >= (c != 40 ==> c == 40);\nloop invariant c <= (c != 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c == 40);\nloop invariant c >= (c == 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c != 40);\nloop invariant c >= (c == 40 ==> c != 40);\nloop invariant c >= (c != 40 ==> c == 40);\nloop invariant c <= (c != 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c == 40);\nloop invariant c >= (c == 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c != 40);\nloop invariant c >= (c == 40 ==> c != 40);\nloop invariant c >= (c != 40 ==> c == 40);\nloop invariant c <= (c != 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c == 40);\nloop invariant c >= (c == 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c != 40);\nloop invariant c >= (c == 40 ==> c != 40);\nloop invariant c >= (c != 40 ==> c == 40);\nloop invariant c <= (c != 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c == 40);\nloop invariant c >= (c == 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c != 40);\nloop invariant c >= (c == 40 ==> c != 40);\nloop invariant c >= (c != 40 ==> c == 40);\nloop invariant c <= (c != 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c == 40);\nloop invariant c >= (c == 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c != 40);\nloop invariant c >= (c == 40 ==> c != 40);\nloop invariant c >= (c != 40 ==> c == 40);\nloop invariant c <= (c != 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c == 40);\nloop invariant c >= (c == 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c != 40);\nloop invariant c >= (c == 40 ==> c != 40);\nloop invariant c >= (c != 40 ==> c == 40);\nloop invariant c <= (c != 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c == 40);\nloop invariant c >= (c == 40 ==> c == 40);\nloop invariant c <= (c == 40 ==> c != 40);\nloop invariant c >= (c == 40 ==> c != 40);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 40;\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant (c == 40) ==> !unknown();\nloop invariant (c != 40) ==> unknown();\nloop invariant (c == 1) ==> !unknown();\nloop invariant (c != 1) ==> unknown();\nloop invariant (unknown() ==> (c != 40)) ==> (c == 40) ==> !unknown();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 40;\n\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant (c == 40) ==> (unknown() ==> 1);\nloop invariant (c == 40) ==> ((!unknown()) ==> (c == 1));\nloop invariant (c != 40) ==> (c >= 0);\nloop invariant (c != 40) ==> (c <= 39);\nloop invariant (c != 40) ==> (unknown() ==> (c == (c + 1)));\nloop invariant (c != 40) ==> ((!unknown()) ==> (c == 1));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 40;\n\n\nloop invariant i4: (c != 40) ==> (c >= 0);\nloop invariant i5: (c != 40) ==> (c <= 39);\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= c <= 40 and 1 <= c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c <= 40 ==> c == 40;\nloop invariant c >= 1;\nloop invariant c <= 40;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\n\n\nloop invariant i3: c <= 40;\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 41;\nloop invariant (c <= 40 ==> c != 40);\nloop invariant (c == 40 ==> c >= 40);\nloop invariant (c == 1 ==> c <= 1);\nloop invariant (c == 1 ==> c >= 1);\nloop invariant (c == 40 ==> c <= 40);\nloop invariant (c == 40 ==> c >= 40);\nloop invariant (c != 40 ==> c < 40);\nloop invariant (c != 40 ==> c > 0);\nloop invariant (c != 1 ==> c < 40);\nloop invariant (c != 1 ==> c > 1);\nloop invariant (c == 40 ==> c == 40);\nloop invariant (c == 1 ==> c == 1);\nloop invariant (c != 40 ==> c != 40);\nloop invariant (c != 1 ==> c != 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 41;\n\nloop invariant i3: (c == 40 ==> c >= 40);\nloop invariant i4: (c == 1 ==> c <= 1);\nloop invariant i5: (c == 1 ==> c >= 1);\nloop invariant i6: (c == 40 ==> c <= 40);\nloop invariant i7: (c != 40 ==> c < 40);\n\n\n\nloop invariant i11: (c == 40 ==> c == 40);\nloop invariant i12: (c == 1 ==> c == 1);\nloop invariant i13: (c != 40 ==> c != 40);\nloop invariant i14: (c != 1 ==> c != 1);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant if (unknown()) then (c < 40) else (c = 40);\nloop invariant if (unknown()) then (c < 40) else (c = 1);\nloop invariant if (c != 40) then (c >= 0) else (c = 40);\nloop invariant if (c == 40) then (c <= 40) else (c = 1);\nloop invariant if (c != 40) then (c < 40) else (c = 1);\nloop invariant if (c == 40) then (c = 40) else (c < 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 40;\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant (c == 40) ==> (c != 40);\nloop invariant c >= 40 ==> (c == 40);\nloop invariant c <= 0 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 40);\nloop invariant c >= 40 ==> (c != 40);\nloop invariant c <= 40 ==> (c == 40);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\nloop invariant c <= 40 ==> (c == 0);\nloop invariant c >= 0 ==> (c != 0);\nloop invariant c <= 40 ==> (c != 0);\nloop invariant c >= 0 ==> (c == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 40;\n\nloop invariant i3: c >= 40 ==> (c == 40);\nloop invariant i4: c <= 0 ==> (c == 0);\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 =========<= c =========<= 40;\nloop invariant c ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\nloop invariant c =========<= 40 ==> c =========<= 40;\nloop invariant c =========<= 0 ==> c =========<= 40;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant (c == 40) ==> (c >= 40);\nloop invariant (c < 40) ==> (c <= 40);\nloop invariant (c == 40) ==> (c == 40);\nloop invariant (c < 40) ==> (c < 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\nloop invariant (c == 40) ==> (c != 40);\nloop invariant (c < 40) ==> (c != 40);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 40;\nloop invariant i2: (c == 40) ==> (c >= 40);\nloop invariant i3: (c < 40) ==> (c <= 40);\nloop invariant i4: (c == 40) ==> (c == 40);\nloop invariant i5: (c < 40) ==> (c < 40);\n\nloop invariant i7: (c < 40) ==> (c != 40);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant c <= 40 ==> c >= 40;\nloop invariant c == 40 ==> c == 1;\nloop invariant c == 1 ==> c == 40;\nloop invariant c == 40 ==> c == 40 ==> c == 1;\nloop invariant c == 1 ==> c == 40 ==> c == 40;\nloop invariant c == 40 ==> c == 1 ==> c == 40;\nloop invariant c == 1 ==> c == 40 ==> c == 1;\nloop invariant c == 40 ==> c == 40 ==> c == 1 ==> c == 40;\nloop invariant c == 1 ==> c == 40 ==> c == 1 ==> c == 40;\nloop invariant c == 40 ==> c == 1 ==> c == 40 ==> c == 1;\nloop invariant c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40;\nloop invariant c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40;\nloop invariant c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40;\nloop invariant c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 40;\n\n\n\n\nloop invariant i6: c == 1 ==> c == 40 ==> c == 40;\nloop invariant i7: c == 40 ==> c == 1 ==> c == 40;\nloop invariant i8: c == 1 ==> c == 40 ==> c == 1;\nloop invariant i9: c == 40 ==> c == 40 ==> c == 1 ==> c == 40;\nloop invariant i10: c == 1 ==> c == 40 ==> c == 1 ==> c == 40;\nloop invariant i11: c == 40 ==> c == 1 ==> c == 40 ==> c == 1;\nloop invariant i12: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40;\nloop invariant i13: c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40;\nloop invariant i14: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i15: c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40;\nloop invariant i16: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i17: c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i18: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i19: c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i20: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i21: c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i22: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i23: c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i24: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i25: c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i26: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 40;loop invariant (c == 40) ==>(unknown() && (c != 40));loop invariant (c == 1) ==>(!(unknown() && (c != 40)));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == 1) ==>(!(unknown() && (c != 40)));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant c == 40 ==> unknown() == true;\nloop invariant c != 40 ==> unknown() == false;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 40;\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant (c != 40 ==> c >= 41);\nloop invariant (c <= 39 ==> c <= 39);\nloop invariant (c == 40 ==> c == 40);\nloop invariant 0 <= c <= 40;\nloop invariant (c != 40 ==> c >= 41);\nloop invariant (c <= 39 ==> c <= 39);\nloop invariant (c == 40 ==> c == 40);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 40;\n\nloop invariant i3: (c <= 39 ==> c <= 39);\nloop invariant i4: (c == 40 ==> c == 40);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 40;\nloop invariant (c == 40 ==> unknown() ==> c < 0) && (c == 40 ==> !unknown() ==> c > 40);\nloop invariant (c == 40 ==> unknown() ==> c == 1) && (c == 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\nloop invariant (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 40;\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 16: unexpected token '('",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\nloop invariant i1: 0 <= c <= 40;loop invariant if (unknown() && c != 40) then c == c else c == 1;\nloop invariant i2: 0 <= c <= 40;\nloop invariant i3: c == (40 ==> c == 40);\nloop invariant i4: c != (c == 40 ==> c != 40);\nloop invariant i5: c >= (c == 40 ==> c >= 40);\nloop invariant i6: c <= (c == 40 ==> c <= 40);\nloop invariant i7: c >= (c != 40 ==> c >= 40);\nloop invariant i8: c <= (c != 40 ==> c <= 40);\nloop invariant i9: c <= (c == 40 ==> c == 40);\nloop invariant i10: c >= (c == 40 ==> c == 40);\nloop invariant i11: c <= (c == 40 ==> c != 40);\nloop invariant i12: c >= (c == 40 ==> c != 40);\nloop invariant i13: c >= (c != 40 ==> c == 40);\nloop invariant i14: c <= (c != 40 ==> c == 40);\nloop invariant i15: (c == 40) ==> !unknown();\nloop invariant i16: (c != 40) ==> unknown();\nloop invariant i17: (c == 1) ==> !unknown();\nloop invariant i18: (c != 1) ==> unknown();\nloop invariant i19: (unknown() ==> (c != 40)) ==> (c == 40) ==> !unknown();\nloop invariant i20: (c == 40) ==> (unknown() ==> 1);\nloop invariant i21: (c == 40) ==> ((!unknown()) ==> (c == 1));\nloop invariant i22: (c != 40) ==> (c >= 0);\nloop invariant i23: (c != 40) ==> (c <= 39);\nloop invariant i24: (c != 40) ==> (unknown() ==> (c == (c + 1)));\nloop invariant i25: (c != 40) ==> ((!unknown()) ==> (c == 1));\nloop invariant i26: 1 <= c <= 40 and 1 <= c <= 40 ==> c == 40;\nloop invariant i27: c >= 1;\nloop invariant i28: c <= 40;\nloop invariant i29: c <= 40 ==> c == 40;\nloop invariant i30: 0 <= c <= 41;\nloop invariant i31: (c <= 40 ==> c != 40);\nloop invariant i32: (c == 40 ==> c >= 40);\nloop invariant i33: (c == 1 ==> c <= 1);\nloop invariant i34: (c == 1 ==> c >= 1);\nloop invariant i35: (c == 40 ==> c <= 40);\nloop invariant i36: (c != 40 ==> c < 40);\nloop invariant i37: (c != 40 ==> c > 0);\nloop invariant i38: (c != 1 ==> c < 40);\nloop invariant i39: (c != 1 ==> c > 1);\nloop invariant i40: (c == 40 ==> c == 40);\nloop invariant i41: (c == 1 ==> c == 1);\nloop invariant i42: (c != 40 ==> c != 40);\nloop invariant i43: (c != 1 ==> c != 1);\nloop invariant i44: if (unknown()) then (c < 40) else (c = 40);\nloop invariant i45: if (unknown()) then (c < 40) else (c = 1);\nloop invariant i46: if (c != 40) then (c >= 0) else (c = 40);\nloop invariant i47: if (c == 40) then (c <= 40) else (c = 1);\nloop invariant i48: if (c != 40) then (c < 40) else (c = 1);\nloop invariant i49: if (c == 40) then (c = 40) else (c < 0);\nloop invariant i50: (c == 40) ==> (c != 40);\nloop invariant i51: c >= 40 ==> (c == 40);\nloop invariant i52: c <= 0 ==> (c == 0);\nloop invariant i53: c >= 0 ==> (c != 0);\nloop invariant i54: c <= 40 ==> (c != 40);\nloop invariant i55: c >= 40 ==> (c != 40);\nloop invariant i56: c <= 40 ==> (c == 40);\nloop invariant i57: c >= 0 ==> (c == 0);\nloop invariant i58: c <= 40 ==> (c == 0);\nloop invariant i59: c <= 40 ==> (c != 0);\nloop invariant i60: 0 =========<= c =========<= 40;\nloop invariant i61: c ==> c =========<= 40;\nloop invariant i62: c =========<= 0 ==> c =========<= 40;\nloop invariant i63: c =========<= 40 ==> c =========<= 40;\nloop invariant i64: (c == 40) ==> (c >= 40);\nloop invariant i65: (c < 40) ==> (c <= 40);\nloop invariant i66: (c == 40) ==> (c == 40);\nloop invariant i67: (c < 40) ==> (c < 40);\nloop invariant i68: (c < 40) ==> (c != 40);\nloop invariant i69: c <= 40 ==> c >= 40;\nloop invariant i70: c == 40 ==> c == 1;\nloop invariant i71: c == 1 ==> c == 40;\nloop invariant i72: c == 40 ==> c == 40 ==> c == 1;\nloop invariant i73: c == 1 ==> c == 40 ==> c == 40;\nloop invariant i74: c == 40 ==> c == 1 ==> c == 40;\nloop invariant i75: c == 1 ==> c == 40 ==> c == 1;\nloop invariant i76: c == 40 ==> c == 40 ==> c == 1 ==> c == 40;\nloop invariant i77: c == 1 ==> c == 40 ==> c == 1 ==> c == 40;\nloop invariant i78: c == 40 ==> c == 1 ==> c == 40 ==> c == 1;\nloop invariant i79: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40;\nloop invariant i80: c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40;\nloop invariant i81: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i82: c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40;\nloop invariant i83: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i84: c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i85: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i86: c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i87: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i88: c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i89: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i90: c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i91: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i92: c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i93: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i94: 0 <= c <= 40;loop invariant (c == 40) ==>(unknown() && (c != 40));loop invariant (c == 1) ==>(!(unknown() && (c != 40)));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == 1) ==>(!(unknown() && (c != 40)));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));loop invariant (c == c) ==>(unknown() && (c != 40));\nloop invariant i95: c == 40 ==> unknown() == true;\nloop invariant i96: c != 40 ==> unknown() == false;\nloop invariant i97: (c != 40 ==> c >= 41);\nloop invariant i98: (c <= 39 ==> c <= 39);\nloop invariant i99: (c == 40 ==> unknown() ==> c < 0) && (c == 40 ==> !unknown() ==> c > 40);\nloop invariant i100: (c == 40 ==> unknown() ==> c == 1) && (c == 40 ==> !unknown() ==> c == 40);\nloop invariant i101: (c != 40 ==> c == 1) && (c != 40 ==> c == 40);\nloop invariant i102: (c != 40 ==> unknown() ==> c == 1 + c) && (c != 40 ==> !unknown() ==> c == 40);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 59,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  \n  (c = 0);\n  \n  /*@\n\nloop invariant i2: 0 <= c <= 40;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i22: (c != 40) ==> (c >= 0);\nloop invariant i23: (c != 40) ==> (c <= 39);\n\n\n\n\nloop invariant i28: c <= 40;\n\nloop invariant i30: 0 <= c <= 41;\n\nloop invariant i32: (c == 40 ==> c >= 40);\nloop invariant i33: (c == 1 ==> c <= 1);\nloop invariant i34: (c == 1 ==> c >= 1);\nloop invariant i35: (c == 40 ==> c <= 40);\nloop invariant i36: (c != 40 ==> c < 40);\n\n\n\nloop invariant i40: (c == 40 ==> c == 40);\nloop invariant i41: (c == 1 ==> c == 1);\nloop invariant i42: (c != 40 ==> c != 40);\nloop invariant i43: (c != 1 ==> c != 1);\n\n\n\n\n\n\n\nloop invariant i51: c >= 40 ==> (c == 40);\nloop invariant i52: c <= 0 ==> (c == 0);\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i64: (c == 40) ==> (c >= 40);\nloop invariant i65: (c < 40) ==> (c <= 40);\nloop invariant i66: (c == 40) ==> (c == 40);\nloop invariant i67: (c < 40) ==> (c < 40);\nloop invariant i68: (c < 40) ==> (c != 40);\n\n\n\n\nloop invariant i73: c == 1 ==> c == 40 ==> c == 40;\nloop invariant i74: c == 40 ==> c == 1 ==> c == 40;\nloop invariant i75: c == 1 ==> c == 40 ==> c == 1;\nloop invariant i76: c == 40 ==> c == 40 ==> c == 1 ==> c == 40;\nloop invariant i77: c == 1 ==> c == 40 ==> c == 1 ==> c == 40;\nloop invariant i78: c == 40 ==> c == 1 ==> c == 40 ==> c == 1;\nloop invariant i79: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40;\nloop invariant i80: c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40;\nloop invariant i81: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i82: c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40;\nloop invariant i83: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i84: c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i85: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i86: c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i87: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i88: c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i89: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i90: c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i91: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i92: c == 40 ==> c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\nloop invariant i93: c == 1 ==> c == 40 ==> c == 1 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40 ==> c == 40;\n\n\n\n\nloop invariant i98: (c <= 39 ==> c <= 39);\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c != 40) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == 40) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c < 0) )\nif ( (c > 40) )\n{;\n//@ assert( (c == 40) );\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c"
        ],
        "skipped": [],
        "total": 28,
        "success_count": 24,
        "failure_count": 4,
        "success_rate": 0.8571428571428571
    }
}