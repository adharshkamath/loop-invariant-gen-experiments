{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/68.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    while (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        \n        {;\n//@ assert(y <= n);\n}\n\n    }\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant y >= x - n;\nloop invariant y <= n - x;\nloop invariant y == n - x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n - x;\nloop invariant x <= n + 1;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x == n + 1 ==> y <= 0;\n*/\n```",
            "```\n/*@\nloop invariant l1 ==> 1 <= x <= n;\nloop invariant l2 ==> y = n - x;\nloop invariant l3 ==> x <= n + 1;\nloop invariant l4 ==> y <= n;\nloop invariant l5 ==> x > 0;\n*/\n```",
            "```\n/*@\nloop invariant x > 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y <= x;\nloop invariant y <= n - x;\nloop invariant x <= n;\nloop invariant x <= n - y;\nloop invariant y <= n - (n - x);\nloop invariant x <= n - (n - y);\nloop invariant x <= n - y;\nloop invariant y <= n - x;\nloop invariant n - x >= 0;\nloop invariant n - y >= 0;\nloop invariant n - y >= x;\nloop invariant n - y >= n - x;\nloop invariant n - y >= y;\nloop invariant n - y >= x + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - y) + 1;\nloop invariant n - y >= n - (n - y) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - y) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n + 1;\nloop invariant 0 <= y <= n;\nloop invariant x - 1 <= n - y < x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant y = n - x;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= 2;\nloop invariant y >= n - x;\nloop invariant x + y <= n;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant y <= n;\nloop invariant x + y = n;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant y >= n - x + 1;\nloop invariant y <= n;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant y = n - x;\nloop invariant 0 <= y <= n;\nloop invariant x <= n + 1;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 1 <= n;\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x + y == n;\nloop invariant x <= y;\nloop invariant n > 0 ==> y <= n;\nloop invariant n > 0 ==> x + y == n;\nloop invariant n > 0 ==> x <= y;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= n;\nloop invariant 1 <= x <= n;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= n - n;\nloop invariant y <= n - 1;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - 1;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= n + 1;\nloop invariant y == n - x;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant if (n > 0) then y <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant x >= 1;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant y >= x - n;\nloop invariant y <= n - x;\nloop invariant y == n - x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        \n        {;\n//@ assert(y <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n - x;\nloop invariant x <= n + 1;\nloop invariant y <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x == n + 1 ==> y <= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n\nloop invariant i5: x >= 0;\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        \n        {;\n//@ assert(y <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant l1 ==> 1 <= x <= n;\nloop invariant l2 ==> y = n - x;\nloop invariant l3 ==> x <= n + 1;\nloop invariant l4 ==> y <= n;\nloop invariant l5 ==> x > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        \n        {;\n//@ assert(y <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant x > 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant y <= x;\nloop invariant y <= n - x;\nloop invariant x <= n;\nloop invariant x <= n - y;\nloop invariant y <= n - (n - x);\nloop invariant x <= n - (n - y);\nloop invariant x <= n - y;\nloop invariant y <= n - x;\nloop invariant n - x >= 0;\nloop invariant n - y >= 0;\nloop invariant n - y >= x;\nloop invariant n - y >= n - x;\nloop invariant n - y >= y;\nloop invariant n - y >= x + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - y) + 1;\nloop invariant n - y >= n - (n - y) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - y) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\nloop invariant n - y >= n - (n - x) + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\nloop invariant i1: x > 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        \n        {;\n//@ assert(y <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n + 1;\nloop invariant 0 <= y <= n;\nloop invariant x - 1 <= n - y < x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        \n        {;\n//@ assert(y <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant y = n - x;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n\n\nloop invariant i6: x >= 0;\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        \n        {;\n//@ assert(y <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= 2;\nloop invariant y >= n - x;\nloop invariant x + y <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        \n        {;\n//@ assert(y <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant y <= n;\nloop invariant x + y = n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        \n        {;\n//@ assert(y <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant y >= n - x + 1;\nloop invariant y <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        \n        {;\n//@ assert(y <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant y = n - x;\nloop invariant 0 <= y <= n;\nloop invariant x <= n + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        \n        {;\n//@ assert(y <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        \n        {;\n//@ assert(y <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= n;\nloop invariant 0 <= x <= n;\nloop invariant 0 <= y <= n;\nloop invariant x + y == n;\nloop invariant x <= y;\nloop invariant n > 0 ==> y <= n;\nloop invariant n > 0 ==> x + y == n;\nloop invariant n > 0 ==> x <= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        \n        {;\n//@ assert(y <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= n;\nloop invariant 1 <= x <= n;\nloop invariant y <= n;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= n - n;\nloop invariant y <= n - 1;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - 1;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\nloop invariant y >= 0;\nloop invariant y <= n - x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        \n        {;\n//@ assert(y <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= n + 1;\nloop invariant y == n - x;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant if (n > 0) then y <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n\n\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        \n        {;\n//@ assert(y <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant y = n - x;\nloop invariant x + y = n;\nloop invariant x >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\nloop invariant i4: x >= 1;\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        \n        {;\n//@ assert(y <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 24: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\nloop invariant i1: 0 <= x <= n;\nloop invariant i2: 0 <= y <= n;\nloop invariant i3: y >= x - n;\nloop invariant i4: y <= n - x;\nloop invariant i5: y == n - x;\nloop invariant i6: 0 <= y <= n - x;\nloop invariant i7: x <= n + 1;\nloop invariant i8: y <= n;\nloop invariant i9: x >= 0;\nloop invariant i10: y >= 0;\nloop invariant i11: x == n + 1 ==> y <= 0;\nloop invariant i12: l1 ==> 1 <= x <= n;\nloop invariant i13: l2 ==> y = n - x;\nloop invariant i14: l3 ==> x <= n + 1;\nloop invariant i15: l4 ==> y <= n;\nloop invariant i16: l5 ==> x > 0;\nloop invariant i17: x > 0;\nloop invariant i18: y <= x;\nloop invariant i19: x <= n;\nloop invariant i20: x <= n - y;\nloop invariant i21: y <= n - (n - x);\nloop invariant i22: x <= n - (n - y);\nloop invariant i23: n - x >= 0;\nloop invariant i24: n - y >= 0;\nloop invariant i25: n - y >= x;\nloop invariant i26: n - y >= n - x;\nloop invariant i27: n - y >= y;\nloop invariant i28: n - y >= x + 1;\nloop invariant i29: n - y >= n - (n - x) + 1;\nloop invariant i30: n - y >= n - (n - y) + 1;\nloop invariant i31: 0 <= x <= n + 1;\nloop invariant i32: x - 1 <= n - y < x;\nloop invariant i33: y = n - x;\nloop invariant i34: x >= 2;\nloop invariant i35: y >= n - x;\nloop invariant i36: x + y <= n;\nloop invariant i37: 1 <= x <= n;\nloop invariant i38: x + y = n;\nloop invariant i39: y >= n - x + 1;\nloop invariant i40: 1 <= n;\nloop invariant i41: x + y == n;\nloop invariant i42: x <= y;\nloop invariant i43: n > 0 ==> y <= n;\nloop invariant i44: n > 0 ==> x + y == n;\nloop invariant i45: n > 0 ==> x <= y;\nloop invariant i46: y >= n - n;\nloop invariant i47: y <= n - 1;\nloop invariant i48: 1 <= x <= n + 1;\nloop invariant i49: if (n > 0) then y <= n;\nloop invariant i50: x >= 1;\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        \n        {;\n//@ assert(y <= n);\n}\n\n    }\n}",
        "combined_annotation_num_solver_calls": 18,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int n,y;\n    int x = 1;\n\n    /*@\n\n\n\n\n\n\n\n\nloop invariant i9: x >= 0;\n\n\n\n\n\n\n\nloop invariant i17: x > 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i50: x >= 1;\n*/\nwhile (x <= n) {\n        y = n - x;\n        x = x +1;\n    }\n\n    if (n > 0) {\n        \n        {;\n//@ assert(y <= n);\n}\n\n    }\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c"
        ],
        "skipped": [],
        "total": 58,
        "success_count": 49,
        "failure_count": 9,
        "success_rate": 0.8448275862068966
    }
}