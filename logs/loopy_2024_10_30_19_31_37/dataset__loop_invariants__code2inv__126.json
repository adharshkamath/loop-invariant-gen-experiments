{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/126.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  while ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant y >= 0;\nloop invariant y <= j;\nloop invariant (x == i - y);\nloop invariant (y == j - x);\nloop invariant (x == j - y);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= x;\nloop invariant x >= i;\nloop invariant y <= j;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= 0 ==> y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= i;\nloop invariant x == i - y;\nloop invariant y <= j;\nloop invariant x >= 1;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x + y == i + j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == i - y;\nloop invariant y == j - x;\nloop invariant x == i - (j - x);\nloop invariant y == j - (i - y);\nloop invariant x == i - (j - (i - y));\nloop invariant y == j - (i - (j - x));\nloop invariant x == i - (j - (i - (j - x)));\nloop invariant y == j - (i - (j - (i - y)));\nloop invariant x == i - (j - (i - (j - (i - y))));\nloop invariant y == j - (i - (j - (i - (j - x))));\nloop invariant x == i - (j - (i - (j - (i - (j - x)))));\nloop invariant y == j - (i - (j - (i - (j - (i - y)))));\nloop invariant x == i - (j - (i - (j - (i - (j - (i - y))))));\nloop invariant y == j - (i - (j - (i - (j - (i - (j - x))))));\nloop invariant x == i - (j - (i - (j - (i - (j - (i - (j - x)))))));\nloop invariant y == j - (i - (j - (i - (j - (i - (j - (i - y)))))));\nloop invariant x == i - (j - (i - (j - (i - (j - (i - (j - (i - y))))))));\nloop invariant y == j - (i - (j - (i - (j - (i - (j - (i - (j - x))))))));\nloop invariant x == i - (j - (i - (j - (i - (j - (i - (j - (i - (j - x)))))))));\nloop invariant y == j - (i - (j - (i - (j - (i - (j - (i - (j - (i - y)))))))));\nloop invariant x == i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - y))))))))));\nloop invariant y == j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - x))))))))));\nloop invariant x == i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - x)))))))))));\nloop invariant y == j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - y)))))))))));\nloop invariant x == i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - y))))))))))));\nloop invariant y == j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - x))))))))))));\nloop invariant x == i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - x)))))))))))));\nloop invariant y == j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - y)))))))))))));\nloop invariant x == i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - y))))))))))))));\nloop invariant y == j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - x))))))))))))));\nloop invariant x == i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - x)))))))))))))));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= x;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant z1 == x - i;\nloop invariant z2 == y - j;\nloop invariant z3 == z1 + z2;\nloop invariant z3 == x - y;\nloop invariant y == x - z1;\nloop invariant x == y + z1;\nloop invariant z2 <= x;\nloop invariant z2 <= y;\nloop invariant z2 <= x - y;\nloop invariant z2 >= 0;\nloop invariant z1 <= x;\nloop invariant z1 <= y;\nloop invariant z1 <= x - y;\nloop invariant z1 >= 0;\nloop invariant z3 >= 0;\nloop invariant z3 <= x;\nloop invariant z3 <= y;\nloop invariant z3 <= x - y;\nloop invariant z3 <= z1 + z2;\nloop invariant z3 <= z1 + (x - y);\nloop invariant z3 <= x - y + (x - y);\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x == i - y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant x <= i;\nloop invariant x <= j;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant y == j - x;\nloop invariant x == i - y;\nloop invariant i == j;\nloop invariant y == 0;\nloop invariant x == i;\nloop invariant y == j - x;\nloop invariant x == i - y;\nloop invariant x == i - (j - x);\nloop invariant y == j - (i - y);\nloop invariant x == i - (j - (i - y));\nloop invariant y == j - (i - (i - y));\nloop invariant x == i - (j - (i - (i - y)));\nloop invariant y == j - (i - (i - (i - y)));\nloop invariant x == i - (j - (i - (i - (i - y))));\nloop invariant y == j - (i - (i - (i - (i - y))));\nloop invariant x == i - (j - (i - (i - (i - (i - y)))));\nloop invariant y == j - (i - (i - (i - (i - (i - y)))));\nloop invariant x == i - (j - (i - (i - (i - (i - (i - y))))));\nloop invariant y == j - (i - (i - (i - (i - (i - (i - y))))));\nloop invariant x == i - (j - (i - (i - (i - (i - (i - (i - y)))))));\nloop invariant y == j - (i - (i - (i - (i - (i - (i - (i - y)))))));\nloop invariant x == i - (j - (i - (i - (i - (i - (i - (i - (i - y))))))));\nloop invariant y == j - (i - (i - (i - (i - (i - (i - (i - (i - y))))))));\nloop invariant x == i - (j - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant y == j - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant x == i - (j - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant y == j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant x == i - (j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant y == j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant x == i - (j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant y == j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant x == i - (j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant y == j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant x == i - (j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant y == j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant y == j - x;\nloop invariant x <= j;\nloop invariant y <= i;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant (x == 0) ==> (y == 0);\nloop invariant (x != 0) ==> (y != 0);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (y == 0);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant y >= 0;\nloop invariant y <= j;\nloop invariant (x == i - y);\nloop invariant (y == j - x);\nloop invariant (x == j - y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\nloop invariant i3: y <= j;\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= x;\nloop invariant x >= i;\nloop invariant y <= j;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\nloop invariant z3 >= 0;\nloop invariant z1 <= x;\nloop invariant z2 <= y;\nloop invariant z3 <= 0;\nloop invariant z1 + z2 + z3 == x;\nloop invariant z1 >= 0;\nloop invariant z2 >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\nloop invariant i3: y <= j;\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= x;\nloop invariant x >= y;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x >= 0 ==> y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= i;\nloop invariant x == i - y;\nloop invariant y <= j;\nloop invariant x >= 1;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\nloop invariant i3: y <= j;\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 17,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x + y == i + j;\nloop invariant x == i - j;\nloop invariant y == j - i;\nloop invariant x == i - y;\nloop invariant y == j - x;\nloop invariant x == i - (j - x);\nloop invariant y == j - (i - y);\nloop invariant x == i - (j - (i - y));\nloop invariant y == j - (i - (j - x));\nloop invariant x == i - (j - (i - (j - x)));\nloop invariant y == j - (i - (j - (i - y)));\nloop invariant x == i - (j - (i - (j - (i - y))));\nloop invariant y == j - (i - (j - (i - (j - x))));\nloop invariant x == i - (j - (i - (j - (i - (j - x)))));\nloop invariant y == j - (i - (j - (i - (j - (i - y)))));\nloop invariant x == i - (j - (i - (j - (i - (j - (i - y))))));\nloop invariant y == j - (i - (j - (i - (j - (i - (j - x))))));\nloop invariant x == i - (j - (i - (j - (i - (j - (i - (j - x)))))));\nloop invariant y == j - (i - (j - (i - (j - (i - (j - (i - y)))))));\nloop invariant x == i - (j - (i - (j - (i - (j - (i - (j - (i - y))))))));\nloop invariant y == j - (i - (j - (i - (j - (i - (j - (i - (j - x))))))));\nloop invariant x == i - (j - (i - (j - (i - (j - (i - (j - (i - (j - x)))))))));\nloop invariant y == j - (i - (j - (i - (j - (i - (j - (i - (j - (i - y)))))))));\nloop invariant x == i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - y))))))))));\nloop invariant y == j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - x))))))))));\nloop invariant x == i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - x)))))))))));\nloop invariant y == j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - y)))))))))));\nloop invariant x == i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - y))))))))))));\nloop invariant y == j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - x))))))))))));\nloop invariant x == i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - x)))))))))))));\nloop invariant y == j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - y)))))))))))));\nloop invariant x == i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - y))))))))))))));\nloop invariant y == j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - x))))))))))))));\nloop invariant x == i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - x)))))))))))))));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= x;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant z1 == x - i;\nloop invariant z2 == y - j;\nloop invariant z3 == z1 + z2;\nloop invariant z3 == x - y;\nloop invariant y == x - z1;\nloop invariant x == y + z1;\nloop invariant z2 <= x;\nloop invariant z2 <= y;\nloop invariant z2 <= x - y;\nloop invariant z2 >= 0;\nloop invariant z1 <= x;\nloop invariant z1 <= y;\nloop invariant z1 <= x - y;\nloop invariant z1 >= 0;\nloop invariant z3 >= 0;\nloop invariant z3 <= x;\nloop invariant z3 <= y;\nloop invariant z3 <= x - y;\nloop invariant z3 <= z1 + z2;\nloop invariant z3 <= z1 + (x - y);\nloop invariant z3 <= x - y + (x - y);\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\nloop invariant z3 <= x - y + x;\nloop invariant z3 <= x - y + x - y;\nloop invariant z3 <= x - y + x - y + y;\nloop invariant z3 <= x - y + x - y + y - y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\nloop invariant i6: x <= i;\nloop invariant i7: y <= j;\nloop invariant i8: x + y <= i + j;\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x == i - y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 20,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant x <= i;\nloop invariant x <= j;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant y == j - x;\nloop invariant x == i - y;\nloop invariant i == j;\nloop invariant y == 0;\nloop invariant x == i;\nloop invariant y == j - x;\nloop invariant x == i - y;\nloop invariant x == i - (j - x);\nloop invariant y == j - (i - y);\nloop invariant x == i - (j - (i - y));\nloop invariant y == j - (i - (i - y));\nloop invariant x == i - (j - (i - (i - y)));\nloop invariant y == j - (i - (i - (i - y)));\nloop invariant x == i - (j - (i - (i - (i - y))));\nloop invariant y == j - (i - (i - (i - (i - y))));\nloop invariant x == i - (j - (i - (i - (i - (i - y)))));\nloop invariant y == j - (i - (i - (i - (i - (i - y)))));\nloop invariant x == i - (j - (i - (i - (i - (i - (i - y))))));\nloop invariant y == j - (i - (i - (i - (i - (i - (i - y))))));\nloop invariant x == i - (j - (i - (i - (i - (i - (i - (i - y)))))));\nloop invariant y == j - (i - (i - (i - (i - (i - (i - (i - y)))))));\nloop invariant x == i - (j - (i - (i - (i - (i - (i - (i - (i - y))))))));\nloop invariant y == j - (i - (i - (i - (i - (i - (i - (i - (i - y))))))));\nloop invariant x == i - (j - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant y == j - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant x == i - (j - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant y == j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant x == i - (j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant y == j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant x == i - (j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant y == j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant x == i - (j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant y == j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant x == i - (j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant y == j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\nloop invariant i2: x <= i;\n\nloop invariant i4: y <= j;\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i18: x == i - (j - (i - (i - y)));\n\n\n\nloop invariant i22: x == i - (j - (i - (i - (i - (i - y)))));\n\n\n\nloop invariant i26: x == i - (j - (i - (i - (i - (i - (i - (i - y)))))));\n\n\n\nloop invariant i30: x == i - (j - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\nloop invariant i7: x + y <= i + j;\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 158,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant y == j - x;\nloop invariant x <= j;\nloop invariant y <= i;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\nloop invariant x + y >= 0;\nloop invariant x + y <= i + j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\nloop invariant i5: x <= i;\nloop invariant i6: y <= j;\n\n\n\n\nloop invariant i11: x + y <= i + j;\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 158,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant (x == 0) ==> (y == 0);\nloop invariant (x != 0) ==> (y != 0);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (y == 0);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\nloop invariant (x != 0) ==> (y <= j);\nloop invariant (x == 0) ==> (x >= y);\nloop invariant (x != 0) ==> (x <= i);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\n\nloop invariant i4: x <= i;\nloop invariant i5: y <= j;\n\n\n\nloop invariant i9: (x != 0) ==> (x <= i);\nloop invariant i10: (x != 0) ==> (y <= j);\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 126: unexpected token ';'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\nloop invariant i1: 0 <= x <= i;\nloop invariant i2: y >= 0;\nloop invariant i3: y <= j;\nloop invariant i4: (x == i - y);\nloop invariant i5: (y == j - x);\nloop invariant i6: (x == j - y);\nloop invariant i7: 0 <= y <= x;\nloop invariant i8: x >= i;\nloop invariant i9: z1 + z2 + z3 == x;\nloop invariant i10: z1 >= 0;\nloop invariant i11: z2 >= 0;\nloop invariant i12: z3 >= 0;\nloop invariant i13: z1 <= x;\nloop invariant i14: z2 <= y;\nloop invariant i15: z3 <= 0;\nloop invariant i16: 0 <= y <= j;\nloop invariant i17: x >= 0;\nloop invariant i18: y <= x;\nloop invariant i19: x >= y;\nloop invariant i20: x >= i - j;\nloop invariant i21: y >= j - i;\nloop invariant i22: x >= 0 ==> y == 0;\nloop invariant i23: 0 <= y <= i;\nloop invariant i24: x == i - y;\nloop invariant i25: x >= 1;\nloop invariant i26: x + y == i + j;\nloop invariant i27: x == i - j;\nloop invariant i28: y == j - i;\nloop invariant i29: y == j - x;\nloop invariant i30: x == i - (j - x);\nloop invariant i31: y == j - (i - y);\nloop invariant i32: x == i - (j - (i - y));\nloop invariant i33: y == j - (i - (j - x));\nloop invariant i34: x == i - (j - (i - (j - x)));\nloop invariant i35: y == j - (i - (j - (i - y)));\nloop invariant i36: x == i - (j - (i - (j - (i - y))));\nloop invariant i37: y == j - (i - (j - (i - (j - x))));\nloop invariant i38: x == i - (j - (i - (j - (i - (j - x)))));\nloop invariant i39: y == j - (i - (j - (i - (j - (i - y)))));\nloop invariant i40: x == i - (j - (i - (j - (i - (j - (i - y))))));\nloop invariant i41: y == j - (i - (j - (i - (j - (i - (j - x))))));\nloop invariant i42: x == i - (j - (i - (j - (i - (j - (i - (j - x)))))));\nloop invariant i43: y == j - (i - (j - (i - (j - (i - (j - (i - y)))))));\nloop invariant i44: x == i - (j - (i - (j - (i - (j - (i - (j - (i - y))))))));\nloop invariant i45: y == j - (i - (j - (i - (j - (i - (j - (i - (j - x))))))));\nloop invariant i46: x == i - (j - (i - (j - (i - (j - (i - (j - (i - (j - x)))))))));\nloop invariant i47: y == j - (i - (j - (i - (j - (i - (j - (i - (j - (i - y)))))))));\nloop invariant i48: x == i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - y))))))))));\nloop invariant i49: y == j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - x))))))))));\nloop invariant i50: x == i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - x)))))))))));\nloop invariant i51: y == j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - y)))))))))));\nloop invariant i52: x == i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - y))))))))))));\nloop invariant i53: y == j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - x))))))))))));\nloop invariant i54: x == i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - x)))))))))))));\nloop invariant i55: y == j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - y)))))))))))));\nloop invariant i56: x == i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - y))))))))))))));\nloop invariant i57: y == j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - x))))))))))))));\nloop invariant i58: x == i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - (i - (j - x)))))))))))))));\nloop invariant i59: i == x;\nloop invariant i60: j == y;\nloop invariant i61: z1 == x - i;\nloop invariant i62: z2 == y - j;\nloop invariant i63: z3 == z1 + z2;\nloop invariant i64: z3 == x - y;\nloop invariant i65: y == x - z1;\nloop invariant i66: x == y + z1;\nloop invariant i67: z2 <= x;\nloop invariant i68: z2 <= x - y;\nloop invariant i69: z1 <= y;\nloop invariant i70: z1 <= x - y;\nloop invariant i71: z3 <= x;\nloop invariant i72: z3 <= y;\nloop invariant i73: z3 <= x - y;\nloop invariant i74: z3 <= z1 + z2;\nloop invariant i75: z3 <= z1 + (x - y);\nloop invariant i76: z3 <= x - y + (x - y);\nloop invariant i77: z3 <= x - y + x;\nloop invariant i78: z3 <= x - y + x - y;\nloop invariant i79: z3 <= x - y + x - y + y;\nloop invariant i80: z3 <= x - y + x - y + y - y;\nloop invariant i81: x <= i;\nloop invariant i82: x + y <= i + j;\nloop invariant i83: x + y >= 0;\nloop invariant i84: 0 <= i <= j;\nloop invariant i85: x <= j;\nloop invariant i86: i >= 0;\nloop invariant i87: j >= 0;\nloop invariant i88: i == j;\nloop invariant i89: y == 0;\nloop invariant i90: x == i;\nloop invariant i91: y == j - (i - (i - y));\nloop invariant i92: x == i - (j - (i - (i - y)));\nloop invariant i93: y == j - (i - (i - (i - y)));\nloop invariant i94: x == i - (j - (i - (i - (i - y))));\nloop invariant i95: y == j - (i - (i - (i - (i - y))));\nloop invariant i96: x == i - (j - (i - (i - (i - (i - y)))));\nloop invariant i97: y == j - (i - (i - (i - (i - (i - y)))));\nloop invariant i98: x == i - (j - (i - (i - (i - (i - (i - y))))));\nloop invariant i99: y == j - (i - (i - (i - (i - (i - (i - y))))));\nloop invariant i100: x == i - (j - (i - (i - (i - (i - (i - (i - y)))))));\nloop invariant i101: y == j - (i - (i - (i - (i - (i - (i - (i - y)))))));\nloop invariant i102: x == i - (j - (i - (i - (i - (i - (i - (i - (i - y))))))));\nloop invariant i103: y == j - (i - (i - (i - (i - (i - (i - (i - (i - y))))))));\nloop invariant i104: x == i - (j - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant i105: y == j - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant i106: x == i - (j - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant i107: y == j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant i108: x == i - (j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant i109: y == j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant i110: x == i - (j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant i111: y == j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant i112: x == i - (j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant i113: y == j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant i114: x == i - (j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant i115: y == j - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\nloop invariant i116: i1;\nloop invariant i117: i2;\nloop invariant i118: i3;\nloop invariant i119: i4;\nloop invariant i120: i5;\nloop invariant i121: i6;\nloop invariant i122: i7;\nloop invariant i123: i8;\nloop invariant i124: i9;\nloop invariant i125: i10;\nloop invariant i126: i11;\nloop invariant i127: i12;\nloop invariant i128: i13;\nloop invariant i129: i14;\nloop invariant i130: i15;\nloop invariant i131: i16;\nloop invariant i132: i17;\nloop invariant i133: i18;\nloop invariant i134: i19;\nloop invariant i135: i20;\nloop invariant i136: i21;\nloop invariant i137: i22;\nloop invariant i138: i23;\nloop invariant i139: i24;\nloop invariant i140: i25;\nloop invariant i141: i26;\nloop invariant i142: i27;\nloop invariant i143: i28;\nloop invariant i144: i29;\nloop invariant i145: i30;\nloop invariant i146: i31;\nloop invariant i147: i32;\nloop invariant i148: i33;\nloop invariant i149: i34;\nloop invariant i150: i35;\nloop invariant i151: i36;\nloop invariant i152: i37;\nloop invariant i153: i38;\nloop invariant i154: i39;\nloop invariant i155: i40;\nloop invariant i156: i41;\nloop invariant i157: i42;\nloop invariant i158: i43;\nloop invariant i159: i44;\nloop invariant i160: i45;\nloop invariant i161: i46;\nloop invariant i162: i47;\nloop invariant i163: i48;\nloop invariant i164: i49;\nloop invariant i165: i50;\nloop invariant i166: i51;\nloop invariant i167: i52;\nloop invariant i168: i53;\nloop invariant i169: i54;\nloop invariant i170: i55;\nloop invariant i171: i56;\nloop invariant i172: i57;\nloop invariant i173: i58;\nloop invariant i174: i59;\nloop invariant i175: i60;\nloop invariant i176: i61;\nloop invariant i177: i62;\nloop invariant i178: i63;\nloop invariant i179: i64;\nloop invariant i180: i65;\nloop invariant i181: i66;\nloop invariant i182: i67;\nloop invariant i183: i68;\nloop invariant i184: i69;\nloop invariant i185: i70;\nloop invariant i186: i71;\nloop invariant i187: i72;\nloop invariant i188: i73;\nloop invariant i189: i74;\nloop invariant i190: i75;\nloop invariant i191: i76;\nloop invariant i192: i77;\nloop invariant i193: i78;\nloop invariant i194: i79;\nloop invariant i195: i80;\nloop invariant i196: i81;\nloop invariant i197: i82;\nloop invariant i198: i83;\nloop invariant i199: i84;\nloop invariant i200: i85;\nloop invariant i201: i86;\nloop invariant i202: i87;\nloop invariant i203: i88;\nloop invariant i204: i89;\nloop invariant i205: i90;\nloop invariant i206: i91;\nloop invariant i207: i92;\nloop invariant i208: i93;\nloop invariant i209: i94;\nloop invariant i210: i95;\nloop invariant i211: i96;\nloop invariant i212: i97;\nloop invariant i213: i98;\nloop invariant i214: i99;\nloop invariant i215: i100;\nloop invariant i216: i101;\nloop invariant i217: i102;\nloop invariant i218: i103;\nloop invariant i219: i104;\nloop invariant i220: i105;\nloop invariant i221: i106;\nloop invariant i222: i107;\nloop invariant i223: i108;\nloop invariant i224: i109;\nloop invariant i225: i110;\nloop invariant i226: i111;\nloop invariant i227: i112;\nloop invariant i228: i113;\nloop invariant i229: i114;\nloop invariant i230: i115;\nloop invariant i231: i116;\nloop invariant i232: i117;\nloop invariant i233: i118;\nloop invariant i234: i119;\nloop invariant i235: i120;\nloop invariant i236: i121;\nloop invariant i237: i122;\nloop invariant i238: i123;\nloop invariant i239: i124;\nloop invariant i240: i125;\nloop invariant i241: i126;\nloop invariant i242: i127;\nloop invariant i243: i128;\nloop invariant i244: i129;\nloop invariant i245: i130;\nloop invariant i246: i131;\nloop invariant i247: i132;\nloop invariant i248: i133;\nloop invariant i249: i134;\nloop invariant i250: i135;\nloop invariant i251: i136;\nloop invariant i252: i137;\nloop invariant i253: i138;\nloop invariant i254: i139;\nloop invariant i255: i140;\nloop invariant i256: i141;\nloop invariant i257: i142;\nloop invariant i258: i143;\nloop invariant i259: i144;\nloop invariant i260: i145;\nloop invariant i261: i146;\nloop invariant i262: i147;\nloop invariant i263: i148;\nloop invariant i264: i149;\nloop invariant i265: i150;\nloop invariant i266: i151;\nloop invariant i267: i152;\nloop invariant i268: i153;\nloop invariant i269: i154;\nloop invariant i270: i155;\nloop invariant i271: i156;\nloop invariant i272: i157;\nloop invariant i273: i158;\nloop invariant i274: y <= i;\nloop invariant i275: (x == 0) ==> (y == 0);\nloop invariant i276: (x != 0) ==> (y != 0);\nloop invariant i277: (x == 0) ==> (x >= y);\nloop invariant i278: (x != 0) ==> (x <= i);\nloop invariant i279: (x != 0) ==> (y <= j);\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 200,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int i;\n  int j;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = x);\n  (j = y);\n  \n  /*@\n\n\nloop invariant i3: y <= j;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i81: x <= i;\nloop invariant i82: x + y <= i + j;\n\n\n\n\n\n\n\n\n\nloop invariant i92: x == i - (j - (i - (i - y)));\n\n\n\nloop invariant i96: x == i - (j - (i - (i - (i - (i - y)))));\n\n\n\nloop invariant i100: x == i - (j - (i - (i - (i - (i - (i - (i - y)))))));\n\n\n\nloop invariant i104: x == i - (j - (i - (i - (i - (i - (i - (i - (i - (i - y)))))))));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i278: (x != 0) ==> (x <= i);\nloop invariant i279: (x != 0) ==> (y <= j);\n*/\nwhile ((x != 0)) {\n    {\n    (x  = (x - 1));\n    (y  = (y - 1));\n    }\n\n  }\n  \nif ( (i == j) )\n{;\n//@ assert( (y == 0) );\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c"
        ],
        "failure": [],
        "skipped": [],
        "total": 3,
        "success_count": 3,
        "failure_count": 0,
        "success_rate": 1.0
    }
}