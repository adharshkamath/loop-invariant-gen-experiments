{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/40.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant n <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n ==> c >= 0;\nloop invariant c <= n ==> c == 1 ==> c == n;\nloop invariant c <= n ==> c > n ==> c == n;\nloop invariant c <= n ==> c == n ==> c == 1;\nloop invariant c <= n ==> c == n ==> c >= 0;\nloop invariant c <= n ==> c == n ==> c >= 1;\nloop invariant c <= n ==> c == n ==> c == 1 ==> c == n;\nloop invariant c <= n ==> c == n ==> c >= 0 ==> c >= 1;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c == n;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c == n ==> c >= 1;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c >= 1;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 1;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 1 ==> c == n;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c == n;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c >= 1;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 1;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 1 ==> c == n;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c == n;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 < n;\nloop invariant c == 0 ==> c == 0;\nloop invariant c > 0 ==> c >= 0;\nloop invariant c == 1 ==> c == 1;\nloop invariant c >= 2 ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c <= n ==> c == 0 ==> c == 0;\nloop invariant c <= n ==> c > 0 ==> c >= 0;\nloop invariant c <= n ==> c == 1 ==> c == 1;\nloop invariant c <= n ==> c >= 2 ==> c >= 1;\nloop invariant c == 0 ==> c == 0 ==> c == 0;\nloop invariant c == 0 ==> c > 0 ==> c >= 0;\nloop invariant c == 0 ==> c == 1 ==> c == 1;\nloop invariant c == 0 ==> c >= 2 ==> c >= 1;\nloop invariant c == 1 ==> c == 0 ==> c == 0;\nloop invariant c == 1 ==> c > 0 ==> c >= 1;\nloop invariant c == 1 ==> c == 1 ==> c == 1;\nloop invariant c == 1 ==> c >= 2 ==> c >= 2;\nloop invariant c >= 2 ==> c == 0 ==> c == 0;\nloop invariant c >= 2 ==> c > 0 ==> c >= 2;\nloop invariant c >= 2 ==> c == 1 ==> c == 1;\nloop invariant c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant c == 0 ==> c > 0 ==> c >= 0 ==> c >= 0;\nloop invariant c == 0 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant c == 0 ==> c >= 2 ==> c >= 1 ==> c >= 1;\nloop invariant c == 1 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant c == 1 ==> c > 0 ==> c >= 1 ==> c >= 1;\nloop invariant c == 1 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant c == 1 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant c >= 2 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant c >= 2 ==> c > 0 ==> c >= 2 ==> c >= 2;\nloop invariant c >= 2 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant c >= 2 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant c == 0 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant c == 0 ==> c > 0 ==> c >= 0 ==> c >= 0 ==> c >= 0;\nloop invariant c == 0 ==> c == 1 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant c == 0 ==> c >= 2 ==> c >= 1 ==> c >= 1 ==> c >= 1;\nloop invariant c == 1 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant c == 1 ==> c > 0 ==> c >= 1 ==> c >= 1 ==> c >= 1;\nloop invariant c == 1 ==> c == 1 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant c == 1 ==> c >= 2 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant c >= 2 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant c >= 2 ==> c > 0 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant c >= 2 ==> c == 1 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant c >= 2 ==> c >= 2 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant c == 0 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant c == 0 ==> c > 0 ==> c >= 0 ==> c >= 0 ==> c >= 0 ==> c >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c;\nloop invariant 0 <= n;\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c >= 0 ==> c <= n;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\nloop invariant c <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\nloop invariant (unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\nloop invariant (!unknown() ==> c >= 0);\nloop invariant (!unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\nloop invariant (!unknown() ==> c >= 0);\nloop invariant (!unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\nloop invariant (!unknown() ==> c >= 0);\nloop invariant (!unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\nloop invariant (!unknown() ==> c >= 0);\nloop invariant (!unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\nloop invariant (!unknown() ==> c >= 0);\nloop invariant (!unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\nloop invariant (!unknown() ==> c >= 0);\nloop invariant (!unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\nloop invariant (!unknown() ==> c >= 0);\nloop invariant (!unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\nloop invariant (!unknown() ==> c >= 0);\nloop invariant (!unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\nloop invariant (!unknown() ==> c >= 0);\nloop invariant (!unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\nloop invariant (!unknown() ==> c >= 0);\nloop invariant (!unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\n*/\n```",
            "```\n/*@\nloop invariant c >= 0;\nloop invariant 0 <= c <= n;\nloop invariant c >= 1;\nloop invariant c <= n + 1;\nloop invariant c == 1 ==> n >= 0;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c <= n ==> unknown());\nloop invariant (c == n ==> unknown() ==> c == 0);\nloop invariant (c < n ==> unknown() ==> c <= n);\nloop invariant (c < n ==> !unknown() ==> c == n);\nloop invariant (c < n ==> !unknown() ==> c == 1);\nloop invariant 0 <= c <= n;\nloop invariant unknown() ==> c <= n;\nloop invariant unknown() ==> c == 1;\nloop invariant !unknown() ==> c == n;\nloop invariant !unknown() ==> c == 0;\nloop invariant 0 <= c <= n;\nloop invariant unknown() ==> c <= n;\nloop invariant unknown() ==> c == 1;\nloop invariant !unknown() ==> c == n;\nloop invariant !unknown() ==> c == 0;\nloop invariant 0 <= c <= n;\nloop invariant unknown() ==> c <= n;\nloop invariant unknown() ==> c == 1;\nloop invariant !unknown() ==> c == n;\nloop invariant !unknown() ==> c == 0;\nloop invariant (c >= 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c == n) ==> (c == 1);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\nloop invariant (c >= n) ==> (c == n + 1);\nloop invariant (c == n) ==> (c == 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c <= n;\nloop invariant n > 0;\nloop invariant unknown() ==> (c != 1);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant n <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n ==> c >= 0;\nloop invariant c <= n ==> c == 1 ==> c == n;\nloop invariant c <= n ==> c > n ==> c == n;\nloop invariant c <= n ==> c == n ==> c == 1;\nloop invariant c <= n ==> c == n ==> c >= 0;\nloop invariant c <= n ==> c == n ==> c >= 1;\nloop invariant c <= n ==> c == n ==> c == 1 ==> c == n;\nloop invariant c <= n ==> c == n ==> c >= 0 ==> c >= 1;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c == n;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c == n ==> c >= 1;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c >= 1;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 1;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 1 ==> c == n;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c == n;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c >= 1;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 1;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 1 ==> c == n;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c == n;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n;\nloop invariant c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c <= n;\nloop invariant i2: n <= n;\nloop invariant i3: c <= n;\nloop invariant i4: c >= 0;\nloop invariant i5: c <= n ==> c >= 0;\nloop invariant i6: c <= n ==> c == 1 ==> c == n;\nloop invariant i7: c <= n ==> c > n ==> c == n;\nloop invariant i8: c <= n ==> c == n ==> c == 1;\nloop invariant i9: c <= n ==> c == n ==> c >= 0;\nloop invariant i10: c <= n ==> c == n ==> c >= 1;\nloop invariant i11: c <= n ==> c == n ==> c == 1 ==> c == n;\nloop invariant i12: c <= n ==> c == n ==> c >= 0 ==> c >= 1;\nloop invariant i13: c <= n ==> c == n ==> c >= 1 ==> c == n;\nloop invariant i14: c <= n ==> c == n ==> c >= 1 ==> c >= 0;\nloop invariant i15: c <= n ==> c == n ==> c >= 1 ==> c == n ==> c >= 1;\nloop invariant i16: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n;\nloop invariant i17: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c >= 1;\nloop invariant i18: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 1;\nloop invariant i19: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0;\nloop invariant i20: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 1 ==> c == n;\nloop invariant i21: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1;\nloop invariant i22: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c == n;\nloop invariant i23: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0;\nloop invariant i24: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n;\nloop invariant i25: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c >= 1;\nloop invariant i26: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 1;\nloop invariant i27: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0;\nloop invariant i28: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 1 ==> c == n;\nloop invariant i29: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1;\nloop invariant i30: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c == n;\nloop invariant i31: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0;\nloop invariant i32: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n;\nloop invariant i33: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c >= 1;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 < n;\nloop invariant c == 0 ==> c == 0;\nloop invariant c > 0 ==> c >= 0;\nloop invariant c == 1 ==> c == 1;\nloop invariant c >= 2 ==> c >= 1;\nloop invariant c <= n ==> c >= 0;\nloop invariant c <= n ==> c == 0 ==> c == 0;\nloop invariant c <= n ==> c > 0 ==> c >= 0;\nloop invariant c <= n ==> c == 1 ==> c == 1;\nloop invariant c <= n ==> c >= 2 ==> c >= 1;\nloop invariant c == 0 ==> c == 0 ==> c == 0;\nloop invariant c == 0 ==> c > 0 ==> c >= 0;\nloop invariant c == 0 ==> c == 1 ==> c == 1;\nloop invariant c == 0 ==> c >= 2 ==> c >= 1;\nloop invariant c == 1 ==> c == 0 ==> c == 0;\nloop invariant c == 1 ==> c > 0 ==> c >= 1;\nloop invariant c == 1 ==> c == 1 ==> c == 1;\nloop invariant c == 1 ==> c >= 2 ==> c >= 2;\nloop invariant c >= 2 ==> c == 0 ==> c == 0;\nloop invariant c >= 2 ==> c > 0 ==> c >= 2;\nloop invariant c >= 2 ==> c == 1 ==> c == 1;\nloop invariant c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant c == 0 ==> c > 0 ==> c >= 0 ==> c >= 0;\nloop invariant c == 0 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant c == 0 ==> c >= 2 ==> c >= 1 ==> c >= 1;\nloop invariant c == 1 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant c == 1 ==> c > 0 ==> c >= 1 ==> c >= 1;\nloop invariant c == 1 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant c == 1 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant c >= 2 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant c >= 2 ==> c > 0 ==> c >= 2 ==> c >= 2;\nloop invariant c >= 2 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant c >= 2 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant c == 0 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant c == 0 ==> c > 0 ==> c >= 0 ==> c >= 0 ==> c >= 0;\nloop invariant c == 0 ==> c == 1 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant c == 0 ==> c >= 2 ==> c >= 1 ==> c >= 1 ==> c >= 1;\nloop invariant c == 1 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant c == 1 ==> c > 0 ==> c >= 1 ==> c >= 1 ==> c >= 1;\nloop invariant c == 1 ==> c == 1 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant c == 1 ==> c >= 2 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant c >= 2 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant c >= 2 ==> c > 0 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant c >= 2 ==> c == 1 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant c >= 2 ==> c >= 2 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant c == 0 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant c == 0 ==> c > 0 ==> c >= 0 ==> c >= 0 ==> c >= 0 ==> c >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 < n;\nloop invariant i2: c == 0 ==> c == 0;\nloop invariant i3: c > 0 ==> c >= 0;\nloop invariant i4: c == 1 ==> c == 1;\nloop invariant i5: c >= 2 ==> c >= 1;\nloop invariant i6: c <= n ==> c >= 0;\nloop invariant i7: c <= n ==> c == 0 ==> c == 0;\nloop invariant i8: c <= n ==> c > 0 ==> c >= 0;\nloop invariant i9: c <= n ==> c == 1 ==> c == 1;\nloop invariant i10: c <= n ==> c >= 2 ==> c >= 1;\nloop invariant i11: c == 0 ==> c == 0 ==> c == 0;\nloop invariant i12: c == 0 ==> c > 0 ==> c >= 0;\nloop invariant i13: c == 0 ==> c == 1 ==> c == 1;\nloop invariant i14: c == 0 ==> c >= 2 ==> c >= 1;\nloop invariant i15: c == 1 ==> c == 0 ==> c == 0;\nloop invariant i16: c == 1 ==> c > 0 ==> c >= 1;\nloop invariant i17: c == 1 ==> c == 1 ==> c == 1;\nloop invariant i18: c == 1 ==> c >= 2 ==> c >= 2;\nloop invariant i19: c >= 2 ==> c == 0 ==> c == 0;\nloop invariant i20: c >= 2 ==> c > 0 ==> c >= 2;\nloop invariant i21: c >= 2 ==> c == 1 ==> c == 1;\nloop invariant i22: c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant i23: c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant i24: c == 0 ==> c > 0 ==> c >= 0 ==> c >= 0;\nloop invariant i25: c == 0 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant i26: c == 0 ==> c >= 2 ==> c >= 1 ==> c >= 1;\nloop invariant i27: c == 1 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant i28: c == 1 ==> c > 0 ==> c >= 1 ==> c >= 1;\nloop invariant i29: c == 1 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant i30: c == 1 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant i31: c >= 2 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant i32: c >= 2 ==> c > 0 ==> c >= 2 ==> c >= 2;\nloop invariant i33: c >= 2 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant i34: c >= 2 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant i35: c == 0 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant i36: c == 0 ==> c > 0 ==> c >= 0 ==> c >= 0 ==> c >= 0;\nloop invariant i37: c == 0 ==> c == 1 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant i38: c == 0 ==> c >= 2 ==> c >= 1 ==> c >= 1 ==> c >= 1;\nloop invariant i39: c == 1 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant i40: c == 1 ==> c > 0 ==> c >= 1 ==> c >= 1 ==> c >= 1;\nloop invariant i41: c == 1 ==> c == 1 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant i42: c == 1 ==> c >= 2 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant i43: c >= 2 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant i44: c >= 2 ==> c > 0 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant i45: c >= 2 ==> c == 1 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant i46: c >= 2 ==> c >= 2 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant i47: c == 0 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant i48: c == 0 ==> c > 0 ==> c >= 0 ==> c >= 0 ==> c >= 0 ==> c >= 0;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant c <= 1;\nloop invariant c >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c;\n\nloop invariant i3: c >= 0;\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c;\nloop invariant 0 <= n;\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\nloop invariant (n >= 0);\nloop invariant (c <= n);\nloop invariant (c >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c;\nloop invariant i2: 0 <= n;\n\nloop invariant i4: (c >= 0);\nloop invariant i5: (n >= 0);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c >= 0 ==> c <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\nloop invariant c <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: 0 <= n;\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 10,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\nloop invariant (unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\nloop invariant (!unknown() ==> c >= 0);\nloop invariant (!unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\nloop invariant (!unknown() ==> c >= 0);\nloop invariant (!unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\nloop invariant (!unknown() ==> c >= 0);\nloop invariant (!unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\nloop invariant (!unknown() ==> c >= 0);\nloop invariant (!unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\nloop invariant (!unknown() ==> c >= 0);\nloop invariant (!unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\nloop invariant (!unknown() ==> c >= 0);\nloop invariant (!unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\nloop invariant (!unknown() ==> c >= 0);\nloop invariant (!unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\nloop invariant (!unknown() ==> c >= 0);\nloop invariant (!unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\nloop invariant (!unknown() ==> c >= 0);\nloop invariant (!unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\nloop invariant (!unknown() ==> c >= 0);\nloop invariant (!unknown() ==> c <= n);\nloop invariant (!unknown() ==> c >= 1);\nloop invariant (!unknown() ==> c <= n + 1);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 1);\nloop invariant (unknown() ==> c <= n + 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: 0 <= n;\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant c >= 0;\nloop invariant 0 <= c <= n;\nloop invariant c >= 1;\nloop invariant c <= n + 1;\nloop invariant c == 1 ==> n >= 0;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> c <= n + 1;\nloop invariant c != n ==> c >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: c >= 0;\n\n\n\n\nloop invariant i6: c != n ==> c >= 0;\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 10,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c <= n ==> unknown());\nloop invariant (c == n ==> unknown() ==> c == 0);\nloop invariant (c < n ==> unknown() ==> c <= n);\nloop invariant (c < n ==> !unknown() ==> c == n);\nloop invariant (c < n ==> !unknown() ==> c == 1);\nloop invariant 0 <= c <= n;\nloop invariant unknown() ==> c <= n;\nloop invariant unknown() ==> c == 1;\nloop invariant !unknown() ==> c == n;\nloop invariant !unknown() ==> c == 0;\nloop invariant 0 <= c <= n;\nloop invariant unknown() ==> c <= n;\nloop invariant unknown() ==> c == 1;\nloop invariant !unknown() ==> c == n;\nloop invariant !unknown() ==> c == 0;\nloop invariant 0 <= c <= n;\nloop invariant unknown() ==> c <= n;\nloop invariant unknown() ==> c == 1;\nloop invariant !unknown() ==> c == n;\nloop invariant !unknown() ==> c == 0;\nloop invariant (c >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\nloop invariant i11: (c >= 0);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c == n) ==> (c == 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c <= n;\nloop invariant i2: (c == n) ==> (c == 1);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: c >= 0;\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\nloop invariant (c >= n) ==> (c == n + 1);\nloop invariant (c == n) ==> (c == 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c <= n;\nloop invariant i2: 0 <= n;\nloop invariant i3: (c >= n) ==> (c == n + 1);\nloop invariant i4: (c == n) ==> (c == 1);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c <= n;\nloop invariant n > 0;\nloop invariant unknown() ==> (c != 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c <= n;\nloop invariant i2: c <= n;\nloop invariant i3: n > 0;\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 105: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c <= n;\nloop invariant i2: n <= n;\nloop invariant i3: c <= n;\nloop invariant i4: c >= 0;\nloop invariant i5: c <= n ==> c >= 0;\nloop invariant i6: c <= n ==> c == 1 ==> c == n;\nloop invariant i7: c <= n ==> c > n ==> c == n;\nloop invariant i8: c <= n ==> c == n ==> c == 1;\nloop invariant i9: c <= n ==> c == n ==> c >= 0;\nloop invariant i10: c <= n ==> c == n ==> c >= 1;\nloop invariant i11: c <= n ==> c == n ==> c == 1 ==> c == n;\nloop invariant i12: c <= n ==> c == n ==> c >= 0 ==> c >= 1;\nloop invariant i13: c <= n ==> c == n ==> c >= 1 ==> c == n;\nloop invariant i14: c <= n ==> c == n ==> c >= 1 ==> c >= 0;\nloop invariant i15: c <= n ==> c == n ==> c >= 1 ==> c == n ==> c >= 1;\nloop invariant i16: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n;\nloop invariant i17: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c >= 1;\nloop invariant i18: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 1;\nloop invariant i19: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0;\nloop invariant i20: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 1 ==> c == n;\nloop invariant i21: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1;\nloop invariant i22: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c == n;\nloop invariant i23: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0;\nloop invariant i24: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n;\nloop invariant i25: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c >= 1;\nloop invariant i26: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 1;\nloop invariant i27: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0;\nloop invariant i28: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 1 ==> c == n;\nloop invariant i29: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1;\nloop invariant i30: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c == n;\nloop invariant i31: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0;\nloop invariant i32: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n;\nloop invariant i33: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c >= 1;\nloop invariant i34: 0 < n;\nloop invariant i35: c == 0 ==> c == 0;\nloop invariant i36: c > 0 ==> c >= 0;\nloop invariant i37: c == 1 ==> c == 1;\nloop invariant i38: c >= 2 ==> c >= 1;\nloop invariant i39: c <= n ==> c == 0 ==> c == 0;\nloop invariant i40: c <= n ==> c > 0 ==> c >= 0;\nloop invariant i41: c <= n ==> c == 1 ==> c == 1;\nloop invariant i42: c <= n ==> c >= 2 ==> c >= 1;\nloop invariant i43: c == 0 ==> c == 0 ==> c == 0;\nloop invariant i44: c == 0 ==> c > 0 ==> c >= 0;\nloop invariant i45: c == 0 ==> c == 1 ==> c == 1;\nloop invariant i46: c == 0 ==> c >= 2 ==> c >= 1;\nloop invariant i47: c == 1 ==> c == 0 ==> c == 0;\nloop invariant i48: c == 1 ==> c > 0 ==> c >= 1;\nloop invariant i49: c == 1 ==> c == 1 ==> c == 1;\nloop invariant i50: c == 1 ==> c >= 2 ==> c >= 2;\nloop invariant i51: c >= 2 ==> c == 0 ==> c == 0;\nloop invariant i52: c >= 2 ==> c > 0 ==> c >= 2;\nloop invariant i53: c >= 2 ==> c == 1 ==> c == 1;\nloop invariant i54: c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant i55: c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant i56: c == 0 ==> c > 0 ==> c >= 0 ==> c >= 0;\nloop invariant i57: c == 0 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant i58: c == 0 ==> c >= 2 ==> c >= 1 ==> c >= 1;\nloop invariant i59: c == 1 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant i60: c == 1 ==> c > 0 ==> c >= 1 ==> c >= 1;\nloop invariant i61: c == 1 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant i62: c == 1 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant i63: c >= 2 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant i64: c >= 2 ==> c > 0 ==> c >= 2 ==> c >= 2;\nloop invariant i65: c >= 2 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant i66: c >= 2 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant i67: c == 0 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant i68: c == 0 ==> c > 0 ==> c >= 0 ==> c >= 0 ==> c >= 0;\nloop invariant i69: c == 0 ==> c == 1 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant i70: c == 0 ==> c >= 2 ==> c >= 1 ==> c >= 1 ==> c >= 1;\nloop invariant i71: c == 1 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant i72: c == 1 ==> c > 0 ==> c >= 1 ==> c >= 1 ==> c >= 1;\nloop invariant i73: c == 1 ==> c == 1 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant i74: c == 1 ==> c >= 2 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant i75: c >= 2 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant i76: c >= 2 ==> c > 0 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant i77: c >= 2 ==> c == 1 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant i78: c >= 2 ==> c >= 2 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant i79: c == 0 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant i80: c == 0 ==> c > 0 ==> c >= 0 ==> c >= 0 ==> c >= 0 ==> c >= 0;\nloop invariant i81: 0 <= c;\nloop invariant i82: c <= 1;\nloop invariant i83: 0 <= n;\nloop invariant i84: (c <= n);\nloop invariant i85: (c >= 0);\nloop invariant i86: (n >= 0);\nloop invariant i87: c >= 0 ==> c <= n;\nloop invariant i88: (unknown() ==> c <= n);\nloop invariant i89: (!unknown() ==> c >= 1);\nloop invariant i90: (!unknown() ==> c <= n + 1);\nloop invariant i91: (unknown() ==> c >= 0);\nloop invariant i92: (unknown() ==> c >= 1);\nloop invariant i93: (unknown() ==> c <= n + 1);\nloop invariant i94: (!unknown() ==> c >= 0);\nloop invariant i95: (!unknown() ==> c <= n);\nloop invariant i96: c >= 1;\nloop invariant i97: c <= n + 1;\nloop invariant i98: c == 1 ==> n >= 0;\nloop invariant i99: c != n ==> c >= 0;\nloop invariant i100: c != n ==> c <= n + 1;\nloop invariant i101: c != n ==> c >= 1;\nloop invariant i102: c != n ==> c <= n;\nloop invariant i103: (c <= n ==> unknown());\nloop invariant i104: (c == n ==> unknown() ==> c == 0);\nloop invariant i105: (c < n ==> unknown() ==> c <= n);\nloop invariant i106: (c < n ==> !unknown() ==> c == n);\nloop invariant i107: (c < n ==> !unknown() ==> c == 1);\nloop invariant i108: unknown() ==> c <= n;\nloop invariant i109: unknown() ==> c == 1;\nloop invariant i110: !unknown() ==> c == n;\nloop invariant i111: !unknown() ==> c == 0;\nloop invariant i112: (c == n) ==> (c == 1);\nloop invariant i113: 1 <= c <= n;\nloop invariant i114: (c >= n) ==> (c == n + 1);\nloop invariant i115: n > 0;\nloop invariant i116: unknown() ==> (c != 1);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 22,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c <= n;\nloop invariant i2: n <= n;\nloop invariant i3: c <= n;\nloop invariant i4: c >= 0;\nloop invariant i5: c <= n ==> c >= 0;\nloop invariant i6: c <= n ==> c == 1 ==> c == n;\nloop invariant i7: c <= n ==> c > n ==> c == n;\nloop invariant i8: c <= n ==> c == n ==> c == 1;\nloop invariant i9: c <= n ==> c == n ==> c >= 0;\nloop invariant i10: c <= n ==> c == n ==> c >= 1;\nloop invariant i11: c <= n ==> c == n ==> c == 1 ==> c == n;\nloop invariant i12: c <= n ==> c == n ==> c >= 0 ==> c >= 1;\nloop invariant i13: c <= n ==> c == n ==> c >= 1 ==> c == n;\nloop invariant i14: c <= n ==> c == n ==> c >= 1 ==> c >= 0;\nloop invariant i15: c <= n ==> c == n ==> c >= 1 ==> c == n ==> c >= 1;\nloop invariant i16: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n;\nloop invariant i17: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c >= 1;\nloop invariant i18: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 1;\nloop invariant i19: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0;\nloop invariant i20: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 1 ==> c == n;\nloop invariant i21: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1;\nloop invariant i22: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c == n;\nloop invariant i23: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0;\nloop invariant i24: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n;\nloop invariant i25: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c >= 1;\nloop invariant i26: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 1;\nloop invariant i27: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0;\nloop invariant i28: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 1 ==> c == n;\nloop invariant i29: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1;\nloop invariant i30: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c == n;\nloop invariant i31: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0;\nloop invariant i32: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n;\nloop invariant i33: c <= n ==> c == n ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c == n ==> c >= 0 ==> c >= 1 ==> c >= 0 ==> c >= 1;\nloop invariant i34: 0 < n;\nloop invariant i35: c == 0 ==> c == 0;\nloop invariant i36: c > 0 ==> c >= 0;\nloop invariant i37: c == 1 ==> c == 1;\nloop invariant i38: c >= 2 ==> c >= 1;\nloop invariant i39: c <= n ==> c == 0 ==> c == 0;\nloop invariant i40: c <= n ==> c > 0 ==> c >= 0;\nloop invariant i41: c <= n ==> c == 1 ==> c == 1;\nloop invariant i42: c <= n ==> c >= 2 ==> c >= 1;\nloop invariant i43: c == 0 ==> c == 0 ==> c == 0;\nloop invariant i44: c == 0 ==> c > 0 ==> c >= 0;\nloop invariant i45: c == 0 ==> c == 1 ==> c == 1;\nloop invariant i46: c == 0 ==> c >= 2 ==> c >= 1;\nloop invariant i47: c == 1 ==> c == 0 ==> c == 0;\nloop invariant i48: c == 1 ==> c > 0 ==> c >= 1;\nloop invariant i49: c == 1 ==> c == 1 ==> c == 1;\nloop invariant i50: c == 1 ==> c >= 2 ==> c >= 2;\nloop invariant i51: c >= 2 ==> c == 0 ==> c == 0;\nloop invariant i52: c >= 2 ==> c > 0 ==> c >= 2;\nloop invariant i53: c >= 2 ==> c == 1 ==> c == 1;\nloop invariant i54: c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant i55: c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant i56: c == 0 ==> c > 0 ==> c >= 0 ==> c >= 0;\nloop invariant i57: c == 0 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant i58: c == 0 ==> c >= 2 ==> c >= 1 ==> c >= 1;\nloop invariant i59: c == 1 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant i60: c == 1 ==> c > 0 ==> c >= 1 ==> c >= 1;\nloop invariant i61: c == 1 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant i62: c == 1 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant i63: c >= 2 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant i64: c >= 2 ==> c > 0 ==> c >= 2 ==> c >= 2;\nloop invariant i65: c >= 2 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant i66: c >= 2 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant i67: c == 0 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant i68: c == 0 ==> c > 0 ==> c >= 0 ==> c >= 0 ==> c >= 0;\nloop invariant i69: c == 0 ==> c == 1 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant i70: c == 0 ==> c >= 2 ==> c >= 1 ==> c >= 1 ==> c >= 1;\nloop invariant i71: c == 1 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant i72: c == 1 ==> c > 0 ==> c >= 1 ==> c >= 1 ==> c >= 1;\nloop invariant i73: c == 1 ==> c == 1 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant i74: c == 1 ==> c >= 2 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant i75: c >= 2 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant i76: c >= 2 ==> c > 0 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant i77: c >= 2 ==> c == 1 ==> c == 1 ==> c == 1 ==> c == 1;\nloop invariant i78: c >= 2 ==> c >= 2 ==> c >= 2 ==> c >= 2 ==> c >= 2;\nloop invariant i79: c == 0 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0 ==> c == 0;\nloop invariant i80: c == 0 ==> c > 0 ==> c >= 0 ==> c >= 0 ==> c >= 0 ==> c >= 0;\nloop invariant i81: 0 <= c;\nloop invariant i82: c <= 1;\nloop invariant i83: 0 <= n;\nloop invariant i84: (c <= n);\nloop invariant i85: (c >= 0);\nloop invariant i86: (n >= 0);\nloop invariant i87: c >= 0 ==> c <= n;\n\n\n\n\n\n\n\n\n\nloop invariant i97: c <= n + 1;\nloop invariant i98: c == 1 ==> n >= 0;\nloop invariant i99: c != n ==> c >= 0;\nloop invariant i100: c != n ==> c <= n + 1;\n\nloop invariant i102: c != n ==> c <= n;\n\n\n\n\n\n\n\n\n\nloop invariant i112: (c == n) ==> (c == 1);\n\nloop invariant i114: (c >= n) ==> (c == n + 1);\nloop invariant i115: n > 0;\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c"
        ],
        "skipped": [],
        "total": 32,
        "success_count": 28,
        "failure_count": 4,
        "success_rate": 0.875
    }
}