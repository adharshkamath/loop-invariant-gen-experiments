{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt7.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  while( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l;\nloop invariant 0 <= j <= l;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= v1 <= l;\nloop invariant 0 <= v2 <= l;\nloop invariant 0 <= v3 <= l;\nloop invariant 0 <= v4 <= l;\nloop invariant i = floor(l / 3);\nloop invariant j = floor(l / 2);\nloop invariant k = floor(l / 7);\nloop invariant v1 = floor(l / 7);\nloop invariant v2 = floor(l / 6);\nloop invariant v3 = floor(l / 5);\nloop invariant v4 = floor(l / 4);\nloop invariant (i + j + k + v1 + v2 + v3 + v4) == l;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant (i+j+k+v1+v2+v3+v4) <= l;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + l/7 + l/6 + l/5 + l/4 <= 2n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + l/7 + l/6 + l/5 + l/4 <= 2n;\nloop invariant (i + j + k + v1 + v2 + v3 + v4) + l <= 2n;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant (i+j+k+v1+v2+v3+v4) <= l;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + l/7 + l/6 + l/5 + l/4 <= 2n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + l/7 + l/6 + l/5 + l/4 <= 2n;\nloop invariant (i + j + k + v1 + v2 + v3 + v4) + l <= 2n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l / 3;\nloop invariant 0 <= j <= l / 2;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= v1 <= l / 7;\nloop invariant 0 <= v2 <= l / 6;\nloop invariant 0 <= v3 <= l / 5;\nloop invariant 0 <= v4 <= l / 4;\nloop invariant (i+j+k+v1+v2+v3+v4) == l;\nloop invariant (i+j+k+v1+v2+v3+v4+1) > (l+1);\nloop invariant (i+j+k+v1+v2+v3+v4+1) <= (2*l+1);\nloop invariant i+j+k+v1+v2+v3+v4 <= 2*l;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i;\nloop invariant 0 <= j;\nloop invariant 0 <= k;\nloop invariant 0 <= v1;\nloop invariant 0 <= v2;\nloop invariant 0 <= v3;\nloop invariant 0 <= v4;\nloop invariant i + j + k + v1 + v2 + v3 + v4 <= l;\nloop invariant i = (3 * v1) + (2 * v3) + (5 * v4) + (7 * v2);\nloop invariant j = (2 * v1) + (2 * v3) + (4 * v4) + (6 * v2);\nloop invariant k = (1 * v1) + (1 * v3) + (3 * v4) + (5 * v2);\nloop invariant v1 = (l / 7);\nloop invariant v2 = (l / 6);\nloop invariant v3 = (l / 5);\nloop invariant v4 = (l / 4);\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= l <= n;\nloop invariant v1, v2, v3, v4, i, j, k >= 0;\nloop invariant i+j+k+v1+v2+v3+v4 == l;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= SIZE;\nloop invariant l <= n;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant v4 >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant (v1 + v2 + v3 + v4 + i + j + k) == l;\nloop invariant (l % 7) == 0 ==> v1 == (v1 + 1);\nloop invariant (l % 7) == 0 ==> l == (l + 1);\nloop invariant (l % 7) == 0 ==> v1 >= v1;\nloop invariant (l % 7) == 0 ==> v1 <= v1;\nloop invariant (l % 6) == 0 ==> v2 == (v2 + 1);\nloop invariant (l % 6) == 0 ==> l == (l + 1);\nloop invariant (l % 6) == 0 ==> v2 >= v2;\nloop invariant (l % 6) == 0 ==> v2 <= v2;\nloop invariant (l % 5) == 0 ==> v3 == (v3 + 1);\nloop invariant (l % 5) == 0 ==> l == (l + 1);\nloop invariant (l % 5) == 0 ==> v3 >= v3;\nloop invariant (l % 5) == 0 ==> v3 <= v3;\nloop invariant (l % 4) == 0 ==> v4 == (v4 + 1);\nloop invariant (l % 4) == 0 ==> l == (l + 1);\nloop invariant (l % 4) == 0 ==> v4 >= v4;\nloop invariant (l % 4) == 0 ==> v4 <= v4;\nloop invariant (l % 3) == 0 ==> i == (i + 1);\nloop invariant (l % 3) == 0 ==> l == (l + 1);\nloop invariant (l % 3) == 0 ==> i >= i;\nloop invariant (l % 3) == 0 ==> i <= i;\nloop invariant (l % 2) == 0 ==> j == (j + 1);\nloop invariant (l % 2) == 0 ==> l == (l + 1);\nloop invariant (l % 2) == 0 ==> j >= j;\nloop invariant (l % 2) == 0 ==> j <= j;\nloop invariant (l % 2) != 0 ==> k == (k + 1);\nloop invariant (l % 2) != 0 ==> l == (l + 1);\nloop invariant (l % 2) != 0 ==> k >= k;\nloop invariant (l % 2) != 0 ==> k <= k;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant (i+j+k+v1+v2+v3+v4) <= l;\nloop invariant i <= l/3;\nloop invariant j <= l/2;\nloop invariant k <= l;\nloop invariant v1 <= l/7;\nloop invariant v2 <= l/6;\nloop invariant v3 <= l/5;\nloop invariant v4 <= l/4;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v1 <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 == l;\nloop invariant l % 7 == 0 ==> v1 + 1 == v1;\nloop invariant l % 6 == 0 ==> v2 + 1 == v2;\nloop invariant l % 5 == 0 ==> v3 + 1 == v3;\nloop invariant l % 4 == 0 ==> v4 + 1 == v4;\nloop invariant l % 3 == 0 ==> i + 1 == i;\nloop invariant l % 2 == 0 ==> j + 1 == j;\nloop invariant l % 7 != 0 && l % 6 != 0 && l % 5 != 0 && l % 4 != 0 && l % 3 != 0 && l % 2 != 0 ==> k + 1 == k;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= v1 <= n/7;\nloop invariant 0 <= v2 <= n/6;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant 0 <= i <= n/3;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= l <= n;\nloop invariant l%7 == 0 ==> v1 == l/7;\nloop invariant l%6 == 0 ==> v2 == l/6;\nloop invariant l%5 == 0 ==> v3 == l/5;\nloop invariant l%4 == 0 ==> v4 == l/4;\nloop invariant l%3 == 0 ==> i == l/3;\nloop invariant l%2 == 0 ==> j == l/2;\nloop invariant l%3 != 0 && l%2 != 0 ==> k == l - i - j;\nloop invariant l == n ==> v1 + v2 + v3 + v4 + i + j + k == n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/3;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l - (i + j + v1 + v2 + v3 + v4);\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant v1 + v2 + v3 + v4 <= l/2;\nloop invariant v1 + v2 + v3 + v4 <= l - (i + j + k);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n / 3;\nloop invariant 0 <= j <= n / 2;\nloop invariant 0 <= k <= n - (n / 2) + (n / 3);\nloop invariant 0 <= v1 <= n / 7;\nloop invariant 0 <= v2 <= n / 6;\nloop invariant 0 <= v3 <= n / 5;\nloop invariant 0 <= v4 <= n / 4;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= (n/3);\nloop invariant 0 <= j <= (n/2);\nloop invariant 0 <= k <= (n/2);\nloop invariant 0 <= v1 <= (n/7);\nloop invariant 0 <= v2 <= (n/6);\nloop invariant 0 <= v3 <= (n/5);\nloop invariant 0 <= v4 <= (n/4);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= v1 <= (l/7);\nloop invariant 0 <= v2 <= (l/6);\nloop invariant 0 <= v3 <= (l/5);\nloop invariant 0 <= v4 <= (l/4);\nloop invariant 0 <= i <= l/3;\nloop invariant 0 <= j <= l/2;\nloop invariant k == l - (v1 + v2 + v3 + v4 + i + j);\nloop invariant (i + j + k + v1 + v2 + v3 + v4) == l;\nloop invariant (i + j + k) <= l;\nloop invariant v1 <= l;\nloop invariant v2 <= l;\nloop invariant v3 <= l;\nloop invariant v4 <= l;\nloop invariant i <= l;\nloop invariant j <= l;\nloop invariant k <= l;\nloop invariant (i + j + k) >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant v4 >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v1 <= n/7;\nloop invariant 0 <= v2 <= n/6;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant l == (i + j + k + v1 + v2 + v3 + v4);\nloop invariant l == (n - v1 - v2 - v3 - v4);\nloop invariant l == (n - i - j - k);\nloop invariant l >= 0;\nloop invariant l <= n;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant v1 >= 0;\nloop invariant v1 <= n/7;\nloop invariant v2 >= 0;\nloop invariant v2 <= n/6;\nloop invariant v3 >= 0;\nloop invariant v3 <= n/5;\nloop invariant v4 >= 0;\nloop invariant v4 <= n/4;\nloop invariant v1*v2*v3*v4 == 0;\nloop invariant v1*v2*v3*v4 == 0 ==> (v1 + v2 + v3 + v4) == l;\nloop invariant v1*v2*v3*v4 == 0 ==> (i + j + k) == (n - l);\nloop invariant v1*v2*v3*v4 == 0 ==> v1 == (l/7);\nloop invariant v1*v2*v3*v4 == 0 ==> v2 == (l/6);\nloop invariant v1*v2*v3*v4 == 0 ==> v3 == (l/5);\nloop invariant v1*v2*v3*v4 == 0 ==> v4 == (l/4);\nloop invariant v1*v2*v3*v4 == 0 ==> i == (l - v1 - v2 - v3 - v4);\nloop invariant v1*v2*v3*v4 == 0 ==> j == (l - v1 - v2 - v3 - v4);\nloop invariant v1*v2*v3*v4 == 0 ==> k == (l - v1 - v2 - v3 - v4);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l;\nloop invariant 0 <= j <= l;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= v1 <= l;\nloop invariant 0 <= v2 <= l;\nloop invariant 0 <= v3 <= l;\nloop invariant 0 <= v4 <= l;\nloop invariant i = floor(l / 3);\nloop invariant j = floor(l / 2);\nloop invariant k = floor(l / 7);\nloop invariant v1 = floor(l / 7);\nloop invariant v2 = floor(l / 6);\nloop invariant v3 = floor(l / 5);\nloop invariant v4 = floor(l / 4);\nloop invariant (i + j + k + v1 + v2 + v3 + v4) == l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i <= l;\nloop invariant i3: 0 <= j <= l;\nloop invariant i4: 0 <= k <= l;\nloop invariant i5: 0 <= v1 <= l;\nloop invariant i6: 0 <= v2 <= l;\nloop invariant i7: 0 <= v3 <= l;\nloop invariant i8: 0 <= v4 <= l;\n\n\n\n\n\n\n\nloop invariant i16: (i + j + k + v1 + v2 + v3 + v4) == l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant (i+j+k+v1+v2+v3+v4) <= l;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + l/7 + l/6 + l/5 + l/4 <= 2n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + l/7 + l/6 + l/5 + l/4 <= 2n;\nloop invariant (i + j + k + v1 + v2 + v3 + v4) + l <= 2n;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/2;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l/2;\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant (i+j+k+v1+v2+v3+v4) <= l;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + l/7 + l/6 + l/5 + l/4 <= 2n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 + l/7 + l/6 + l/5 + l/4 <= 2n;\nloop invariant (i + j + k + v1 + v2 + v3 + v4) + l <= 2n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i <= l/2;\n\nloop invariant i4: 0 <= k <= l/2;\n\n\n\n\nloop invariant i9: (i+j+k+v1+v2+v3+v4) <= l;\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l / 3;\nloop invariant 0 <= j <= l / 2;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= v1 <= l / 7;\nloop invariant 0 <= v2 <= l / 6;\nloop invariant 0 <= v3 <= l / 5;\nloop invariant 0 <= v4 <= l / 4;\nloop invariant (i+j+k+v1+v2+v3+v4) == l;\nloop invariant (i+j+k+v1+v2+v3+v4+1) > (l+1);\nloop invariant (i+j+k+v1+v2+v3+v4+1) <= (2*l+1);\nloop invariant i+j+k+v1+v2+v3+v4 <= 2*l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\nloop invariant i4: 0 <= k <= l;\n\n\n\n\nloop invariant i9: (i+j+k+v1+v2+v3+v4) == l;\n\nloop invariant i11: (i+j+k+v1+v2+v3+v4+1) <= (2*l+1);\nloop invariant i12: i+j+k+v1+v2+v3+v4 <= 2*l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 14,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i;\nloop invariant 0 <= j;\nloop invariant 0 <= k;\nloop invariant 0 <= v1;\nloop invariant 0 <= v2;\nloop invariant 0 <= v3;\nloop invariant 0 <= v4;\nloop invariant i + j + k + v1 + v2 + v3 + v4 <= l;\nloop invariant i = (3 * v1) + (2 * v3) + (5 * v4) + (7 * v2);\nloop invariant j = (2 * v1) + (2 * v3) + (4 * v4) + (6 * v2);\nloop invariant k = (1 * v1) + (1 * v3) + (3 * v4) + (5 * v2);\nloop invariant v1 = (l / 7);\nloop invariant v2 = (l / 6);\nloop invariant v3 = (l / 5);\nloop invariant v4 = (l / 4);\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\nloop invariant l%5 == 0;\nloop invariant l%4 == 0;\nloop invariant l%3 == 0;\nloop invariant l%2 == 0;\nloop invariant l%7 == 0;\nloop invariant l%6 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i;\nloop invariant i3: 0 <= j;\nloop invariant i4: 0 <= k;\nloop invariant i5: 0 <= v1;\nloop invariant i6: 0 <= v2;\nloop invariant i7: 0 <= v3;\nloop invariant i8: 0 <= v4;\nloop invariant i9: i + j + k + v1 + v2 + v3 + v4 <= l;\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= l <= n;\nloop invariant v1, v2, v3, v4, i, j, k >= 0;\nloop invariant i+j+k+v1+v2+v3+v4 == l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\n\n\nloop invariant i3: i+j+k+v1+v2+v3+v4 == l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 14,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= SIZE;\nloop invariant l <= n;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant v4 >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant (v1 + v2 + v3 + v4 + i + j + k) == l;\nloop invariant (l % 7) == 0 ==> v1 == (v1 + 1);\nloop invariant (l % 7) == 0 ==> l == (l + 1);\nloop invariant (l % 7) == 0 ==> v1 >= v1;\nloop invariant (l % 7) == 0 ==> v1 <= v1;\nloop invariant (l % 6) == 0 ==> v2 == (v2 + 1);\nloop invariant (l % 6) == 0 ==> l == (l + 1);\nloop invariant (l % 6) == 0 ==> v2 >= v2;\nloop invariant (l % 6) == 0 ==> v2 <= v2;\nloop invariant (l % 5) == 0 ==> v3 == (v3 + 1);\nloop invariant (l % 5) == 0 ==> l == (l + 1);\nloop invariant (l % 5) == 0 ==> v3 >= v3;\nloop invariant (l % 5) == 0 ==> v3 <= v3;\nloop invariant (l % 4) == 0 ==> v4 == (v4 + 1);\nloop invariant (l % 4) == 0 ==> l == (l + 1);\nloop invariant (l % 4) == 0 ==> v4 >= v4;\nloop invariant (l % 4) == 0 ==> v4 <= v4;\nloop invariant (l % 3) == 0 ==> i == (i + 1);\nloop invariant (l % 3) == 0 ==> l == (l + 1);\nloop invariant (l % 3) == 0 ==> i >= i;\nloop invariant (l % 3) == 0 ==> i <= i;\nloop invariant (l % 2) == 0 ==> j == (j + 1);\nloop invariant (l % 2) == 0 ==> l == (l + 1);\nloop invariant (l % 2) == 0 ==> j >= j;\nloop invariant (l % 2) == 0 ==> j <= j;\nloop invariant (l % 2) != 0 ==> k == (k + 1);\nloop invariant (l % 2) != 0 ==> l == (l + 1);\nloop invariant (l % 2) != 0 ==> k >= k;\nloop invariant (l % 2) != 0 ==> k <= k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\n\nloop invariant i2: l <= n;\nloop invariant i3: v1 >= 0;\nloop invariant i4: v2 >= 0;\nloop invariant i5: v3 >= 0;\nloop invariant i6: v4 >= 0;\nloop invariant i7: i >= 0;\nloop invariant i8: j >= 0;\nloop invariant i9: k >= 0;\nloop invariant i10: (v1 + v2 + v3 + v4 + i + j + k) == l;\n\n\nloop invariant i13: (l % 7) == 0 ==> v1 >= v1;\nloop invariant i14: (l % 7) == 0 ==> v1 <= v1;\n\n\nloop invariant i17: (l % 6) == 0 ==> v2 >= v2;\nloop invariant i18: (l % 6) == 0 ==> v2 <= v2;\n\n\nloop invariant i21: (l % 5) == 0 ==> v3 >= v3;\nloop invariant i22: (l % 5) == 0 ==> v3 <= v3;\n\n\nloop invariant i25: (l % 4) == 0 ==> v4 >= v4;\nloop invariant i26: (l % 4) == 0 ==> v4 <= v4;\n\n\nloop invariant i29: (l % 3) == 0 ==> i >= i;\nloop invariant i30: (l % 3) == 0 ==> i <= i;\n\n\nloop invariant i33: (l % 2) == 0 ==> j >= j;\nloop invariant i34: (l % 2) == 0 ==> j <= j;\n\n\nloop invariant i37: (l % 2) != 0 ==> k >= k;\nloop invariant i38: (l % 2) != 0 ==> k <= k;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant (i+j+k+v1+v2+v3+v4) <= l;\nloop invariant i <= l/3;\nloop invariant j <= l/2;\nloop invariant k <= l;\nloop invariant v1 <= l/7;\nloop invariant v2 <= l/6;\nloop invariant v3 <= l/5;\nloop invariant v4 <= l/4;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: (i+j+k+v1+v2+v3+v4) <= l;\n\n\nloop invariant i5: k <= l;\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v1 <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 == l;\nloop invariant l % 7 == 0 ==> v1 + 1 == v1;\nloop invariant l % 6 == 0 ==> v2 + 1 == v2;\nloop invariant l % 5 == 0 ==> v3 + 1 == v3;\nloop invariant l % 4 == 0 ==> v4 + 1 == v4;\nloop invariant l % 3 == 0 ==> i + 1 == i;\nloop invariant l % 2 == 0 ==> j + 1 == j;\nloop invariant l % 7 != 0 && l % 6 != 0 && l % 5 != 0 && l % 4 != 0 && l % 3 != 0 && l % 2 != 0 ==> k + 1 == k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i <= n;\nloop invariant i3: 0 <= j <= n;\nloop invariant i4: 0 <= k <= n;\nloop invariant i5: 0 <= v1 <= n;\nloop invariant i6: 0 <= v2 <= n;\nloop invariant i7: 0 <= v3 <= n;\nloop invariant i8: 0 <= v4 <= n;\nloop invariant i9: i + j + k + v1 + v2 + v3 + v4 == l;\n\n\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= v1 <= n/7;\nloop invariant 0 <= v2 <= n/6;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant 0 <= i <= n/3;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= l <= n;\nloop invariant l%7 == 0 ==> v1 == l/7;\nloop invariant l%6 == 0 ==> v2 == l/6;\nloop invariant l%5 == 0 ==> v3 == l/5;\nloop invariant l%4 == 0 ==> v4 == l/4;\nloop invariant l%3 == 0 ==> i == l/3;\nloop invariant l%2 == 0 ==> j == l/2;\nloop invariant l%3 != 0 && l%2 != 0 ==> k == l - i - j;\nloop invariant l == n ==> v1 + v2 + v3 + v4 + i + j + k == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\n\n\n\n\n\n\nloop invariant i7: 0 <= k <= n;\nloop invariant i8: 0 <= l <= n;\n\n\n\n\n\n\n\nloop invariant i16: l == n ==> v1 + v2 + v3 + v4 + i + j + k == n;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/3;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= l - (i + j + v1 + v2 + v3 + v4);\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant v1 + v2 + v3 + v4 <= l/2;\nloop invariant v1 + v2 + v3 + v4 <= l - (i + j + k);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\nloop invariant i4: 0 <= k <= l - (i + j + v1 + v2 + v3 + v4);\n\n\n\n\n\nloop invariant i10: v1 + v2 + v3 + v4 <= l - (i + j + k);\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n / 3;\nloop invariant 0 <= j <= n / 2;\nloop invariant 0 <= k <= n - (n / 2) + (n / 3);\nloop invariant 0 <= v1 <= n / 7;\nloop invariant 0 <= v2 <= n / 6;\nloop invariant 0 <= v3 <= n / 5;\nloop invariant 0 <= v4 <= n / 4;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= (n/3);\nloop invariant 0 <= j <= (n/2);\nloop invariant 0 <= k <= (n/2);\nloop invariant 0 <= v1 <= (n/7);\nloop invariant 0 <= v2 <= (n/6);\nloop invariant 0 <= v3 <= (n/5);\nloop invariant 0 <= v4 <= (n/4);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= v1 <= (l/7);\nloop invariant 0 <= v2 <= (l/6);\nloop invariant 0 <= v3 <= (l/5);\nloop invariant 0 <= v4 <= (l/4);\nloop invariant 0 <= i <= l/3;\nloop invariant 0 <= j <= l/2;\nloop invariant k == l - (v1 + v2 + v3 + v4 + i + j);\nloop invariant (i + j + k + v1 + v2 + v3 + v4) == l;\nloop invariant (i + j + k) <= l;\nloop invariant v1 <= l;\nloop invariant v2 <= l;\nloop invariant v3 <= l;\nloop invariant v4 <= l;\nloop invariant i <= l;\nloop invariant j <= l;\nloop invariant k <= l;\nloop invariant (i + j + k) >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant v4 >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\n\n\n\n\nloop invariant i8: k == l - (v1 + v2 + v3 + v4 + i + j);\nloop invariant i9: (i + j + k + v1 + v2 + v3 + v4) == l;\nloop invariant i10: (i + j + k) <= l;\nloop invariant i11: v1 <= l;\nloop invariant i12: v2 <= l;\nloop invariant i13: v3 <= l;\nloop invariant i14: v4 <= l;\nloop invariant i15: i <= l;\nloop invariant i16: j <= l;\nloop invariant i17: k <= l;\nloop invariant i18: (i + j + k) >= 0;\nloop invariant i19: v1 >= 0;\nloop invariant i20: v2 >= 0;\nloop invariant i21: v3 >= 0;\nloop invariant i22: v4 >= 0;\nloop invariant i23: i >= 0;\nloop invariant i24: j >= 0;\nloop invariant i25: k >= 0;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v1 <= n/7;\nloop invariant 0 <= v2 <= n/6;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant l == (i + j + k + v1 + v2 + v3 + v4);\nloop invariant l == (n - v1 - v2 - v3 - v4);\nloop invariant l == (n - i - j - k);\nloop invariant l >= 0;\nloop invariant l <= n;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant v1 >= 0;\nloop invariant v1 <= n/7;\nloop invariant v2 >= 0;\nloop invariant v2 <= n/6;\nloop invariant v3 >= 0;\nloop invariant v3 <= n/5;\nloop invariant v4 >= 0;\nloop invariant v4 <= n/4;\nloop invariant v1*v2*v3*v4 == 0;\nloop invariant v1*v2*v3*v4 == 0 ==> (v1 + v2 + v3 + v4) == l;\nloop invariant v1*v2*v3*v4 == 0 ==> (i + j + k) == (n - l);\nloop invariant v1*v2*v3*v4 == 0 ==> v1 == (l/7);\nloop invariant v1*v2*v3*v4 == 0 ==> v2 == (l/6);\nloop invariant v1*v2*v3*v4 == 0 ==> v3 == (l/5);\nloop invariant v1*v2*v3*v4 == 0 ==> v4 == (l/4);\nloop invariant v1*v2*v3*v4 == 0 ==> i == (l - v1 - v2 - v3 - v4);\nloop invariant v1*v2*v3*v4 == 0 ==> j == (l - v1 - v2 - v3 - v4);\nloop invariant v1*v2*v3*v4 == 0 ==> k == (l - v1 - v2 - v3 - v4);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i <= n;\nloop invariant i3: 0 <= j <= n;\nloop invariant i4: 0 <= k <= n;\n\n\n\n\nloop invariant i9: l == (i + j + k + v1 + v2 + v3 + v4);\n\n\nloop invariant i12: l >= 0;\nloop invariant i13: l <= n;\nloop invariant i14: i >= 0;\nloop invariant i15: i <= n;\nloop invariant i16: j >= 0;\nloop invariant i17: j <= n;\nloop invariant i18: k >= 0;\nloop invariant i19: k <= n;\nloop invariant i20: v1 >= 0;\n\nloop invariant i22: v2 >= 0;\n\nloop invariant i24: v3 >= 0;\n\nloop invariant i26: v4 >= 0;\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 25: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i <= l;\nloop invariant i3: 0 <= j <= l;\nloop invariant i4: 0 <= k <= l;\nloop invariant i5: 0 <= v1 <= l;\nloop invariant i6: 0 <= v2 <= l;\nloop invariant i7: 0 <= v3 <= l;\nloop invariant i8: 0 <= v4 <= l;\nloop invariant i9: i = floor(l / 3);\nloop invariant i10: j = floor(l / 2);\nloop invariant i11: k = floor(l / 7);\nloop invariant i12: v1 = floor(l / 7);\nloop invariant i13: v2 = floor(l / 6);\nloop invariant i14: v3 = floor(l / 5);\nloop invariant i15: v4 = floor(l / 4);\nloop invariant i16: (i + j + k + v1 + v2 + v3 + v4) == l;\nloop invariant i17: 0 <= i <= l/2;\nloop invariant i18: 0 <= j <= l/2;\nloop invariant i19: 0 <= k <= l/2;\nloop invariant i20: 0 <= v1 <= l/7;\nloop invariant i21: 0 <= v2 <= l/6;\nloop invariant i22: 0 <= v3 <= l/5;\nloop invariant i23: 0 <= v4 <= l/4;\nloop invariant i24: (i+j+k+v1+v2+v3+v4) <= l;\nloop invariant i25: i + j + k + v1 + v2 + v3 + v4 + l/7 + l/6 + l/5 + l/4 <= 2n;\nloop invariant i26: (i + j + k + v1 + v2 + v3 + v4) + l <= 2n;\nloop invariant i27: 0 <= i <= l / 3;\nloop invariant i28: 0 <= j <= l / 2;\nloop invariant i29: 0 <= v1 <= l / 7;\nloop invariant i30: 0 <= v2 <= l / 6;\nloop invariant i31: 0 <= v3 <= l / 5;\nloop invariant i32: 0 <= v4 <= l / 4;\nloop invariant i33: (i+j+k+v1+v2+v3+v4) == l;\nloop invariant i34: (i+j+k+v1+v2+v3+v4+1) > (l+1);\nloop invariant i35: (i+j+k+v1+v2+v3+v4+1) <= (2*l+1);\nloop invariant i36: i+j+k+v1+v2+v3+v4 <= 2*l;\nloop invariant i37: 0 <= i;\nloop invariant i38: 0 <= j;\nloop invariant i39: 0 <= k;\nloop invariant i40: 0 <= v1;\nloop invariant i41: 0 <= v2;\nloop invariant i42: 0 <= v3;\nloop invariant i43: 0 <= v4;\nloop invariant i44: i + j + k + v1 + v2 + v3 + v4 <= l;\nloop invariant i45: i = (3 * v1) + (2 * v3) + (5 * v4) + (7 * v2);\nloop invariant i46: j = (2 * v1) + (2 * v3) + (4 * v4) + (6 * v2);\nloop invariant i47: k = (1 * v1) + (1 * v3) + (3 * v4) + (5 * v2);\nloop invariant i48: v1 = (l / 7);\nloop invariant i49: v2 = (l / 6);\nloop invariant i50: v3 = (l / 5);\nloop invariant i51: v4 = (l / 4);\nloop invariant i52: l%7 == 0;\nloop invariant i53: l%6 == 0;\nloop invariant i54: l%5 == 0;\nloop invariant i55: l%4 == 0;\nloop invariant i56: l%3 == 0;\nloop invariant i57: l%2 == 0;\nloop invariant i58: 1 <= l <= n;\nloop invariant i59: v1, v2, v3, v4, i, j, k >= 0;\nloop invariant i60: i+j+k+v1+v2+v3+v4 == l;\nloop invariant i61: 0 <= l <= SIZE;\nloop invariant i62: l <= n;\nloop invariant i63: v1 >= 0;\nloop invariant i64: v2 >= 0;\nloop invariant i65: v3 >= 0;\nloop invariant i66: v4 >= 0;\nloop invariant i67: i >= 0;\nloop invariant i68: j >= 0;\nloop invariant i69: k >= 0;\nloop invariant i70: (v1 + v2 + v3 + v4 + i + j + k) == l;\nloop invariant i71: (l % 7) == 0 ==> v1 == (v1 + 1);\nloop invariant i72: (l % 7) == 0 ==> l == (l + 1);\nloop invariant i73: (l % 7) == 0 ==> v1 >= v1;\nloop invariant i74: (l % 7) == 0 ==> v1 <= v1;\nloop invariant i75: (l % 6) == 0 ==> v2 == (v2 + 1);\nloop invariant i76: (l % 6) == 0 ==> l == (l + 1);\nloop invariant i77: (l % 6) == 0 ==> v2 >= v2;\nloop invariant i78: (l % 6) == 0 ==> v2 <= v2;\nloop invariant i79: (l % 5) == 0 ==> v3 == (v3 + 1);\nloop invariant i80: (l % 5) == 0 ==> l == (l + 1);\nloop invariant i81: (l % 5) == 0 ==> v3 >= v3;\nloop invariant i82: (l % 5) == 0 ==> v3 <= v3;\nloop invariant i83: (l % 4) == 0 ==> v4 == (v4 + 1);\nloop invariant i84: (l % 4) == 0 ==> l == (l + 1);\nloop invariant i85: (l % 4) == 0 ==> v4 >= v4;\nloop invariant i86: (l % 4) == 0 ==> v4 <= v4;\nloop invariant i87: (l % 3) == 0 ==> i == (i + 1);\nloop invariant i88: (l % 3) == 0 ==> l == (l + 1);\nloop invariant i89: (l % 3) == 0 ==> i >= i;\nloop invariant i90: (l % 3) == 0 ==> i <= i;\nloop invariant i91: (l % 2) == 0 ==> j == (j + 1);\nloop invariant i92: (l % 2) == 0 ==> l == (l + 1);\nloop invariant i93: (l % 2) == 0 ==> j >= j;\nloop invariant i94: (l % 2) == 0 ==> j <= j;\nloop invariant i95: (l % 2) != 0 ==> k == (k + 1);\nloop invariant i96: (l % 2) != 0 ==> l == (l + 1);\nloop invariant i97: (l % 2) != 0 ==> k >= k;\nloop invariant i98: (l % 2) != 0 ==> k <= k;\nloop invariant i99: i <= l/3;\nloop invariant i100: j <= l/2;\nloop invariant i101: k <= l;\nloop invariant i102: v1 <= l/7;\nloop invariant i103: v2 <= l/6;\nloop invariant i104: v3 <= l/5;\nloop invariant i105: v4 <= l/4;\nloop invariant i106: 0 <= i <= n;\nloop invariant i107: 0 <= j <= n;\nloop invariant i108: 0 <= k <= n;\nloop invariant i109: 0 <= v1 <= n;\nloop invariant i110: 0 <= v2 <= n;\nloop invariant i111: 0 <= v3 <= n;\nloop invariant i112: 0 <= v4 <= n;\nloop invariant i113: i + j + k + v1 + v2 + v3 + v4 == l;\nloop invariant i114: l % 7 == 0 ==> v1 + 1 == v1;\nloop invariant i115: l % 6 == 0 ==> v2 + 1 == v2;\nloop invariant i116: l % 5 == 0 ==> v3 + 1 == v3;\nloop invariant i117: l % 4 == 0 ==> v4 + 1 == v4;\nloop invariant i118: l % 3 == 0 ==> i + 1 == i;\nloop invariant i119: l % 2 == 0 ==> j + 1 == j;\nloop invariant i120: l % 7 != 0 && l % 6 != 0 && l % 5 != 0 && l % 4 != 0 && l % 3 != 0 && l % 2 != 0 ==> k + 1 == k;\nloop invariant i121: 0 <= v1 <= n/7;\nloop invariant i122: 0 <= v2 <= n/6;\nloop invariant i123: 0 <= v3 <= n/5;\nloop invariant i124: 0 <= v4 <= n/4;\nloop invariant i125: 0 <= i <= n/3;\nloop invariant i126: 0 <= j <= n/2;\nloop invariant i127: l%7 == 0 ==> v1 == l/7;\nloop invariant i128: l%6 == 0 ==> v2 == l/6;\nloop invariant i129: l%5 == 0 ==> v3 == l/5;\nloop invariant i130: l%4 == 0 ==> v4 == l/4;\nloop invariant i131: l%3 == 0 ==> i == l/3;\nloop invariant i132: l%2 == 0 ==> j == l/2;\nloop invariant i133: l%3 != 0 && l%2 != 0 ==> k == l - i - j;\nloop invariant i134: l == n ==> v1 + v2 + v3 + v4 + i + j + k == n;\nloop invariant i135: 0 <= i <= l/3;\nloop invariant i136: 0 <= k <= l - (i + j + v1 + v2 + v3 + v4);\nloop invariant i137: v1 + v2 + v3 + v4 <= l/2;\nloop invariant i138: v1 + v2 + v3 + v4 <= l - (i + j + k);\nloop invariant i139: 0 <= i <= n / 3;\nloop invariant i140: 0 <= j <= n / 2;\nloop invariant i141: 0 <= k <= n - (n / 2) + (n / 3);\nloop invariant i142: 0 <= v1 <= n / 7;\nloop invariant i143: 0 <= v2 <= n / 6;\nloop invariant i144: 0 <= v3 <= n / 5;\nloop invariant i145: 0 <= v4 <= n / 4;\nloop invariant i146: 0 <= i <= (n/3);\nloop invariant i147: 0 <= j <= (n/2);\nloop invariant i148: 0 <= k <= (n/2);\nloop invariant i149: 0 <= v1 <= (n/7);\nloop invariant i150: 0 <= v2 <= (n/6);\nloop invariant i151: 0 <= v3 <= (n/5);\nloop invariant i152: 0 <= v4 <= (n/4);\nloop invariant i153: 0 <= v1 <= (l/7);\nloop invariant i154: 0 <= v2 <= (l/6);\nloop invariant i155: 0 <= v3 <= (l/5);\nloop invariant i156: 0 <= v4 <= (l/4);\nloop invariant i157: k == l - (v1 + v2 + v3 + v4 + i + j);\nloop invariant i158: (i + j + k) <= l;\nloop invariant i159: v1 <= l;\nloop invariant i160: v2 <= l;\nloop invariant i161: v3 <= l;\nloop invariant i162: v4 <= l;\nloop invariant i163: i <= l;\nloop invariant i164: j <= l;\nloop invariant i165: (i + j + k) >= 0;\nloop invariant i166: l == (i + j + k + v1 + v2 + v3 + v4);\nloop invariant i167: l == (n - v1 - v2 - v3 - v4);\nloop invariant i168: l == (n - i - j - k);\nloop invariant i169: l >= 0;\nloop invariant i170: i <= n;\nloop invariant i171: j <= n;\nloop invariant i172: k <= n;\nloop invariant i173: v1 <= n/7;\nloop invariant i174: v2 <= n/6;\nloop invariant i175: v3 <= n/5;\nloop invariant i176: v4 <= n/4;\nloop invariant i177: v1*v2*v3*v4 == 0;\nloop invariant i178: v1*v2*v3*v4 == 0 ==> (v1 + v2 + v3 + v4) == l;\nloop invariant i179: v1*v2*v3*v4 == 0 ==> (i + j + k) == (n - l);\nloop invariant i180: v1*v2*v3*v4 == 0 ==> v1 == (l/7);\nloop invariant i181: v1*v2*v3*v4 == 0 ==> v2 == (l/6);\nloop invariant i182: v1*v2*v3*v4 == 0 ==> v3 == (l/5);\nloop invariant i183: v1*v2*v3*v4 == 0 ==> v4 == (l/4);\nloop invariant i184: v1*v2*v3*v4 == 0 ==> i == (l - v1 - v2 - v3 - v4);\nloop invariant i185: v1*v2*v3*v4 == 0 ==> j == (l - v1 - v2 - v3 - v4);\nloop invariant i186: v1*v2*v3*v4 == 0 ==> k == (l - v1 - v2 - v3 - v4);\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 68,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i <= l;\nloop invariant i3: 0 <= j <= l;\nloop invariant i4: 0 <= k <= l;\nloop invariant i5: 0 <= v1 <= l;\nloop invariant i6: 0 <= v2 <= l;\nloop invariant i7: 0 <= v3 <= l;\nloop invariant i8: 0 <= v4 <= l;\n\n\n\n\n\n\n\nloop invariant i16: (i + j + k + v1 + v2 + v3 + v4) == l;\nloop invariant i17: 0 <= i <= l/2;\n\nloop invariant i19: 0 <= k <= l/2;\n\n\n\n\nloop invariant i24: (i+j+k+v1+v2+v3+v4) <= l;\n\n\n\n\n\n\n\n\nloop invariant i33: (i+j+k+v1+v2+v3+v4) == l;\n\nloop invariant i35: (i+j+k+v1+v2+v3+v4+1) <= (2*l+1);\nloop invariant i36: i+j+k+v1+v2+v3+v4 <= 2*l;\nloop invariant i37: 0 <= i;\nloop invariant i38: 0 <= j;\nloop invariant i39: 0 <= k;\nloop invariant i40: 0 <= v1;\nloop invariant i41: 0 <= v2;\nloop invariant i42: 0 <= v3;\nloop invariant i43: 0 <= v4;\nloop invariant i44: i + j + k + v1 + v2 + v3 + v4 <= l;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i60: i+j+k+v1+v2+v3+v4 == l;\n\nloop invariant i62: l <= n;\nloop invariant i63: v1 >= 0;\nloop invariant i64: v2 >= 0;\nloop invariant i65: v3 >= 0;\nloop invariant i66: v4 >= 0;\nloop invariant i67: i >= 0;\nloop invariant i68: j >= 0;\nloop invariant i69: k >= 0;\nloop invariant i70: (v1 + v2 + v3 + v4 + i + j + k) == l;\n\n\nloop invariant i73: (l % 7) == 0 ==> v1 >= v1;\nloop invariant i74: (l % 7) == 0 ==> v1 <= v1;\n\n\nloop invariant i77: (l % 6) == 0 ==> v2 >= v2;\nloop invariant i78: (l % 6) == 0 ==> v2 <= v2;\n\n\nloop invariant i81: (l % 5) == 0 ==> v3 >= v3;\nloop invariant i82: (l % 5) == 0 ==> v3 <= v3;\n\n\nloop invariant i85: (l % 4) == 0 ==> v4 >= v4;\nloop invariant i86: (l % 4) == 0 ==> v4 <= v4;\n\n\nloop invariant i89: (l % 3) == 0 ==> i >= i;\nloop invariant i90: (l % 3) == 0 ==> i <= i;\n\n\nloop invariant i93: (l % 2) == 0 ==> j >= j;\nloop invariant i94: (l % 2) == 0 ==> j <= j;\n\n\nloop invariant i97: (l % 2) != 0 ==> k >= k;\nloop invariant i98: (l % 2) != 0 ==> k <= k;\n\n\nloop invariant i101: k <= l;\n\n\n\n\nloop invariant i106: 0 <= i <= n;\nloop invariant i107: 0 <= j <= n;\nloop invariant i108: 0 <= k <= n;\nloop invariant i109: 0 <= v1 <= n;\nloop invariant i110: 0 <= v2 <= n;\nloop invariant i111: 0 <= v3 <= n;\nloop invariant i112: 0 <= v4 <= n;\nloop invariant i113: i + j + k + v1 + v2 + v3 + v4 == l;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i134: l == n ==> v1 + v2 + v3 + v4 + i + j + k == n;\n\nloop invariant i136: 0 <= k <= l - (i + j + v1 + v2 + v3 + v4);\n\nloop invariant i138: v1 + v2 + v3 + v4 <= l - (i + j + k);\n\n\nloop invariant i141: 0 <= k <= n - (n / 2) + (n / 3);\n\n\n\n\n\n\nloop invariant i148: 0 <= k <= (n/2);\n\n\n\n\n\n\n\n\nloop invariant i157: k == l - (v1 + v2 + v3 + v4 + i + j);\nloop invariant i158: (i + j + k) <= l;\nloop invariant i159: v1 <= l;\nloop invariant i160: v2 <= l;\nloop invariant i161: v3 <= l;\nloop invariant i162: v4 <= l;\nloop invariant i163: i <= l;\nloop invariant i164: j <= l;\nloop invariant i165: (i + j + k) >= 0;\nloop invariant i166: l == (i + j + k + v1 + v2 + v3 + v4);\n\n\nloop invariant i169: l >= 0;\nloop invariant i170: i <= n;\nloop invariant i171: j <= n;\nloop invariant i172: k <= n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark16_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark17_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark19_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark20_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark21_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark22_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark23_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark25_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark26_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark27_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark29_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark30_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark31_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark32_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark33_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark34_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark35_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark36_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark37_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark38_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark39_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark40_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark41_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark42_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark43_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark45_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark46_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark47_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark48_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark49_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark50_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark51_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark52_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark53_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/Mono1_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/iftelse.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/loopv1.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/loopv3.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_11.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_8.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sum_natnum.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt2.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt3.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt4.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt5.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt6.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt7.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_10.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_12.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_9.c"
        ],
        "skipped": [],
        "total": 187,
        "success_count": 167,
        "failure_count": 20,
        "success_rate": 0.893048128342246
    }
}