{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/76.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  while (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant c ≥ 0;\nloop invariant z ≥ 0;\nloop invariant c ≤ 36;\nloop invariant (c + 36) * y ≤ z ≤ c * y + 36 * y;\nloop invariant (c < 36) ==> (c + 36) * y ≤ z < c * y + 36 * y;\nloop invariant (c ≥ 36) ==> (36 * y ≤ z < 4608);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= 36 * y + 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 127;\nloop invariant 0 <= c <= 36;\nloop invariant z = 36 * y + c * (c + 1) / 2;\nloop invariant if unknown() then (c < 36) else (c >= 36);\nloop invariant if (z < 0) && (z >= 4608) then (c >= 36) else (c == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= 4608;\nloop invariant c >= 0;\nloop invariant z >= 36 * y;\nloop invariant c <= 36;\nloop invariant z <= 36 * y + 36;\nloop invariant c <= z;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 36 * y <= z <= 36 * (y + 1);\nloop invariant y * (c - 36) <= z - (36 * y) <= y * (c - 36) + 36;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 127;\nloop invariant 36 * y <= z <= 36 * y + 4608;\nloop invariant c == 36 ==> (z >= 36 * y + 36);\nloop invariant c < 36 ==> (z < 36 * y + 36);\nloop invariant c >= 36 ==> (z >= 36 * y + 36);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z = (36 * y) + (c);\nloop invariant y = y;\nloop invariant z >= 0;\nloop invariant z < 4608;\nloop invariant c >= c;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= 4608;\nloop invariant y <= z / 36;\nloop invariant c <= z - 36 * y;\nloop invariant z < 4608 ==> c == 36;\nloop invariant z < 4608 ==> y == 127;\nloop invariant z >= 0 ==> y >= 0;\nloop invariant z >= 0 ==> c >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z >= 4608;\nloop invariant c >= 0;\nloop invariant z >= 36 * y;\nloop invariant c <= 36;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant z >= 0;\nloop invariant c <= 36;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z >= 4608;\nloop invariant z <= 4608;\nloop invariant c == 36 ==> z >= 4608;\nloop invariant c == 36 ==> z <= 4608;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 4608;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4607;\nloop invariant 0 <= y <= 127;\nloop invariant c < 36 ==> z = (36 * y);\nloop invariant c < 36 ==> z < (36 * y);\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> y >= 0;\nloop invariant c < 36 ==> y >= 127;\nloop invariant c < 36 ==> y <= 127;\nloop invariant c < 36 ==> y < 128;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 127 <= y <= 4608;\nloop invariant z == (36 * y) + c;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= c <= 36;\nloop invariant z >= (36 * y);\nloop invariant z <= 4608;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant 1 <= c <= 36;\nloop invariant z >= (36 * y);\nloop invariant z <= 4608;\nloop invariant c <= 36;\nloop invariant c >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z + 1 >= 36 * y + 1;\nloop invariant z + 1 < 4608 ==> c >= 36;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= 4608;\nloop invariant z >= (36 * y);\nloop invariant c >= 0;\nloop invariant z >= 36 * c;\nloop invariant c <= 36;\nloop invariant z <= 36 * c + 35;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant c ≥ 0;\nloop invariant z ≥ 0;\nloop invariant c ≤ 36;\nloop invariant (c + 36) * y ≤ z ≤ c * y + 36 * y;\nloop invariant (c < 36) ==> (c + 36) * y ≤ z < c * y + 36 * y;\nloop invariant (c ≥ 36) ==> (36 * y ≤ z < 4608);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: c ≥ 0;\nloop invariant i2: z ≥ 0;\nloop invariant i3: c ≤ 36;\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= 36 * y + 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\nloop invariant i2: z >= 36 * y;\n\nloop invariant i4: z >= 0;\n\nloop invariant i6: c >= 0;\nloop invariant i7: c <= 36;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 127;\nloop invariant 0 <= c <= 36;\nloop invariant z = 36 * y + c * (c + 1) / 2;\nloop invariant if unknown() then (c < 36) else (c >= 36);\nloop invariant if (z < 0) && (z >= 4608) then (c >= 36) else (c == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: 0 <= c <= 36;\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= 4608;\nloop invariant c >= 0;\nloop invariant z >= 36 * y;\nloop invariant c <= 36;\nloop invariant z <= 36 * y + 36;\nloop invariant c <= z;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\nloop invariant c <= 36;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\nloop invariant i3: c >= 0;\nloop invariant i4: z >= 36 * y;\nloop invariant i5: c <= 36;\n\nloop invariant i7: c <= z;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 36 * y <= z <= 36 * (y + 1);\nloop invariant y * (c - 36) <= z - (36 * y) <= y * (c - 36) + 36;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 127;\nloop invariant 36 * y <= z <= 36 * y + 4608;\nloop invariant c == 36 ==> (z >= 36 * y + 36);\nloop invariant c < 36 ==> (z < 36 * y + 36);\nloop invariant c >= 36 ==> (z >= 36 * y + 36);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\n\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z = (36 * y) + (c);\nloop invariant y = y;\nloop invariant z >= 0;\nloop invariant z < 4608;\nloop invariant c >= c;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\n\nloop invariant i4: z >= 0;\n\nloop invariant i6: c >= c;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= 4608;\nloop invariant y <= z / 36;\nloop invariant c <= z - 36 * y;\nloop invariant z < 4608 ==> c == 36;\nloop invariant z < 4608 ==> y == 127;\nloop invariant z >= 0 ==> y >= 0;\nloop invariant z >= 0 ==> c >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\nloop invariant i3: y <= z / 36;\nloop invariant i4: c <= z - 36 * y;\n\nloop invariant i6: z < 4608 ==> y == 127;\nloop invariant i7: z >= 0 ==> y >= 0;\nloop invariant i8: z >= 0 ==> c >= 0;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z >= 4608;\nloop invariant c >= 0;\nloop invariant z >= 36 * y;\nloop invariant c <= 36;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant z >= 0;\nloop invariant c <= 36;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\nloop invariant i3: c >= 0;\nloop invariant i4: z >= 36 * y;\nloop invariant i5: c <= 36;\n\nloop invariant i7: z >= 0;\n\nloop invariant i9: c < 36 ==> z >= 36 * y;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z >= 4608;\nloop invariant z <= 4608;\nloop invariant c == 36 ==> z >= 4608;\nloop invariant c == 36 ==> z <= 4608;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 4608;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 4607;\nloop invariant 0 <= y <= 127;\nloop invariant c < 36 ==> z = (36 * y);\nloop invariant c < 36 ==> z < (36 * y);\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> y >= 0;\nloop invariant c < 36 ==> y >= 127;\nloop invariant c < 36 ==> y <= 127;\nloop invariant c < 36 ==> y < 128;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\nloop invariant c < 36 ==> z <= 4608;\nloop invariant c < 36 ==> c < 36;\nloop invariant c < 36 ==> c <= 36;\nloop invariant c < 36 ==> z >= 0;\nloop invariant c < 36 ==> z <= 4607;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\n\n\n\n\n\nloop invariant i7: c < 36 ==> c < 36;\nloop invariant i8: c < 36 ==> y >= 0;\nloop invariant i9: c < 36 ==> y >= 127;\n\n\nloop invariant i12: c < 36 ==> z >= 0;\n\n\nloop invariant i15: c < 36 ==> c <= 36;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 127 <= y <= 4608;\nloop invariant z == (36 * y) + c;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\nloop invariant i3: z == (36 * y) + c;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= c <= 36;\nloop invariant z >= (36 * y);\nloop invariant z <= 4608;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant 1 <= c <= 36;\nloop invariant z >= (36 * y);\nloop invariant z <= 4608;\nloop invariant c <= 36;\nloop invariant c >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: z >= (36 * y);\n\nloop invariant i4: c <= 36;\nloop invariant i5: c >= 0;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z + 1 >= 36 * y + 1;\nloop invariant z + 1 < 4608 ==> c >= 36;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\nloop invariant i2: z >= 36 * y;\nloop invariant i3: z + 1 >= 36 * y + 1;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= 4608;\nloop invariant z >= (36 * y);\nloop invariant c >= 0;\nloop invariant z >= 36 * c;\nloop invariant c <= 36;\nloop invariant z <= 36 * c + 35;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * c;\nloop invariant z <= 36 * c + 35;\nloop invariant c <= 36;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\nloop invariant i3: z >= (36 * y);\nloop invariant i4: c >= 0;\n\nloop invariant i6: c <= 36;\n\nloop invariant i8: z >= 0;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 38: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: c ≥ 0;\nloop invariant i2: z ≥ 0;\nloop invariant i3: c ≤ 36;\nloop invariant i4: (c + 36) * y ≤ z ≤ c * y + 36 * y;\nloop invariant i5: (c < 36) ==> (c + 36) * y ≤ z < c * y + 36 * y;\nloop invariant i6: (c ≥ 36) ==> (36 * y ≤ z < 4608);\nloop invariant i7: 0 <= c <= 36;\nloop invariant i8: z >= 36 * y;\nloop invariant i9: z <= 36 * y + 36;\nloop invariant i10: z >= 0;\nloop invariant i11: z <= 4608;\nloop invariant i12: c >= 0;\nloop invariant i13: c <= 36;\nloop invariant i14: 0 <= y <= 127;\nloop invariant i15: z = 36 * y + c * (c + 1) / 2;\nloop invariant i16: if unknown() then (c < 36) else (c >= 36);\nloop invariant i17: if (z < 0) && (z >= 4608) then (c >= 36) else (c == 0);\nloop invariant i18: 0 <= z <= 4608;\nloop invariant i19: c <= z;\nloop invariant i20: 36 * y <= z <= 36 * (y + 1);\nloop invariant i21: y * (c - 36) <= z - (36 * y) <= y * (c - 36) + 36;\nloop invariant i22: 36 * y <= z <= 36 * y + 4608;\nloop invariant i23: c == 36 ==> (z >= 36 * y + 36);\nloop invariant i24: c < 36 ==> (z < 36 * y + 36);\nloop invariant i25: c >= 36 ==> (z >= 36 * y + 36);\nloop invariant i26: z = (36 * y) + (c);\nloop invariant i27: y = y;\nloop invariant i28: z < 4608;\nloop invariant i29: c >= c;\nloop invariant i30: y <= z / 36;\nloop invariant i31: c <= z - 36 * y;\nloop invariant i32: z < 4608 ==> c == 36;\nloop invariant i33: z < 4608 ==> y == 127;\nloop invariant i34: z >= 0 ==> y >= 0;\nloop invariant i35: z >= 0 ==> c >= 0;\nloop invariant i36: z >= 4608;\nloop invariant i37: c < 36 ==> z < 4608;\nloop invariant i38: c < 36 ==> z >= 36 * y;\nloop invariant i39: c == 36 ==> z >= 4608;\nloop invariant i40: c == 36 ==> z <= 4608;\nloop invariant i41: c < 36 ==> z >= 4608;\nloop invariant i42: 0 <= c <= 35;\nloop invariant i43: 0 <= z <= 4607;\nloop invariant i44: c < 36 ==> z = (36 * y);\nloop invariant i45: c < 36 ==> z < (36 * y);\nloop invariant i46: c < 36 ==> c < 36;\nloop invariant i47: c < 36 ==> y >= 0;\nloop invariant i48: c < 36 ==> y >= 127;\nloop invariant i49: c < 36 ==> y <= 127;\nloop invariant i50: c < 36 ==> y < 128;\nloop invariant i51: c < 36 ==> z >= 0;\nloop invariant i52: c < 36 ==> z <= 4607;\nloop invariant i53: c < 36 ==> z <= 4608;\nloop invariant i54: c < 36 ==> c <= 36;\nloop invariant i55: 127 <= y <= 4608;\nloop invariant i56: z == (36 * y) + c;\nloop invariant i57: 1 <= c <= 36;\nloop invariant i58: z >= (36 * y);\nloop invariant i59: z + 1 >= 36 * y + 1;\nloop invariant i60: z + 1 < 4608 ==> c >= 36;\nloop invariant i61: z >= 36 * c;\nloop invariant i62: z <= 36 * c + 35;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 19,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: c ≥ 0;\nloop invariant i2: z ≥ 0;\nloop invariant i3: c ≤ 36;\n\n\n\nloop invariant i7: 0 <= c <= 36;\nloop invariant i8: z >= 36 * y;\nloop invariant i9: z <= 36 * y + 36;\nloop invariant i10: z >= 0;\n\nloop invariant i12: c >= 0;\nloop invariant i13: c <= 36;\n\n\n\n\n\nloop invariant i19: c <= z;\nloop invariant i20: 36 * y <= z <= 36 * (y + 1);\n\nloop invariant i22: 36 * y <= z <= 36 * y + 4608;\nloop invariant i23: c == 36 ==> (z >= 36 * y + 36);\nloop invariant i24: c < 36 ==> (z < 36 * y + 36);\nloop invariant i25: c >= 36 ==> (z >= 36 * y + 36);\n\n\n\nloop invariant i29: c >= c;\nloop invariant i30: y <= z / 36;\nloop invariant i31: c <= z - 36 * y;\n\nloop invariant i33: z < 4608 ==> y == 127;\nloop invariant i34: z >= 0 ==> y >= 0;\nloop invariant i35: z >= 0 ==> c >= 0;\n\n\nloop invariant i38: c < 36 ==> z >= 36 * y;\nloop invariant i39: c == 36 ==> z >= 4608;\n\n\n\n\n\n\nloop invariant i46: c < 36 ==> c < 36;\nloop invariant i47: c < 36 ==> y >= 0;\nloop invariant i48: c < 36 ==> y >= 127;\n\n\nloop invariant i51: c < 36 ==> z >= 0;\n\n\nloop invariant i54: c < 36 ==> c <= 36;\n\nloop invariant i56: z == (36 * y) + c;\n\nloop invariant i58: z >= (36 * y);\nloop invariant i59: z + 1 >= 36 * y + 1;\n\nloop invariant i61: z >= 36 * c;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c"
        ],
        "skipped": [],
        "total": 63,
        "success_count": 54,
        "failure_count": 9,
        "success_rate": 0.8571428571428571
    }
}