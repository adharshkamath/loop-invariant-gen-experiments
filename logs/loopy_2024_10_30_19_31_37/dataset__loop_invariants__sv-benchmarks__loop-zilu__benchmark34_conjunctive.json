{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark34_conjunctive.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==0) && (k==n) && (n>0))) return 0;\n  while (j<n && n>0) {\n    j++;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant k == n - j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j <= n && k <= n;\nloop invariant j <= n && k == n - j;\nloop invariant n > 0;\nloop invariant k == n - j && n > 0;\nloop invariant j <= n && k == n - j && n > 0;\nloop invariant j + k == n && n > 0;\nloop invariant k == n - j && j + k == n && n > 0;\nloop invariant j + k == n && k == n - j && n > 0;\nloop invariant j + k == n && k == n - j && n > 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant j + k == n;\nloop invariant j <= k;\nloop invariant j <= n - k;\nloop invariant j <= n - 1;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 1;\nloop invariant j + k == n - 1;\nloop invariant j <= k - 1;\nloop invariant j >= 1;\nloop invariant k >= 2;\nloop invariant j + k == n - 2;\nloop invariant j <= k - 2;\nloop invariant j >= 2;\nloop invariant k >= 3;\nloop invariant j + k == n - 3;\nloop invariant j <= k - 3;\nloop invariant j >= 3;\nloop invariant k >= 4;\nloop invariant j + k == n - 4;\nloop invariant j <= k - 4;\nloop invariant j >= 4;\nloop invariant k >= 5;\nloop invariant j + k == n - 5;\nloop invariant j <= k - 5;\nloop invariant j >= 5;\nloop invariant k >= 6;\nloop invariant j + k == n - 6;\nloop invariant j <= k - 6;\nloop invariant j >= 6;\nloop invariant k >= 7;\nloop invariant j + k == n - 7;\nloop invariant j <= k - 7;\nloop invariant j >= 7;\nloop invariant k >= 8;\nloop invariant j + k == n - 8;\nloop invariant j <= k - 8;\nloop invariant j >= 8;\nloop invariant k >= 9;\nloop invariant j + k == n - 9;\nloop invariant j <= k - 9;\nloop invariant j >= 9;\nloop invariant k >= 10;\nloop invariant j + k == n - 10;\nloop invariant j <= k - 10;\nloop invariant j >= 10;\nloop invariant k >= 11;\nloop invariant j + k == n - 11;\nloop invariant j <= k - 11;\nloop invariant j >= 11;\nloop invariant k >= 12;\nloop invariant j + k == n - 12;\nloop invariant j <= k - 12;\nloop invariant j >= 12;\nloop invariant k >= 13;\nloop invariant j + k == n - 13;\nloop invariant j <= k - 13;\nloop invariant j >= 13;\nloop invariant k >= 14;\nloop invariant j + k == n - 14;\nloop invariant j <= k - 14;\nloop invariant j >= 14;\nloop invariant k >= 15;\nloop invariant j + k == n - 15;\nloop invariant j <= k - 15;\nloop invariant j >= 15;\nloop invariant k >= 16;\nloop invariant j + k == n - 16;\nloop invariant j <= k - 16;\nloop invariant j >= 16;\nloop invariant k >= 17;\nloop invariant j + k == n - 17;\nloop invariant j <= k - 17;\nloop invariant j >= 17;\nloop invariant k >= 18;\nloop invariant j + k == n - 18;\nloop invariant j <= k - 18;\nloop invariant j >= 18;\nloop invariant k >= 19;\nloop invariant j + k == n - 19;\nloop invariant j <= k - 19;\nloop invariant j >= 19;\nloop invariant k >= 20;\nloop invariant j + k == n - 20;\nloop invariant j <= k - 20;\nloop invariant j >= 20;\nloop invariant k >= 21;\nloop invariant j + k == n - 21;\nloop invariant j <= k - 21;\nloop invariant j >= 21;\nloop invariant k >= 22;\nloop invariant j + k == n - 22;\nloop invariant j <= k - 22;\nloop invariant j >= 22;\nloop invariant k >= 23;\nloop invariant j + k == n - 23;\nloop invariant j <= k - 23;\nloop invariant j >= 23;\nloop invariant k >= 24;\nloop invariant j + k == n - 24;\nloop invariant j <= k - 24;\nloop invariant j >= 24;\nloop invariant k >= 25;\nloop invariant j + k == n - 25;\nloop invariant j <= k - 25;\nloop invariant j >= 25;\nloop invariant k >= 26;\n*/\n```",
            "```\n/*@\nloop invariant k + j = n;\nloop invariant j <= n;\nloop invariant j>=0;\nloop invariant k<=n;\nloop invariant k>=0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant n > 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant k >= 0;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant j <= k;\nloop invariant n > 0;\nloop invariant j < n;\nloop invariant k >= 0;\nloop invariant j+k <= n;\nloop invariant (j==0) ==> (k == n);\nloop invariant (j<n) ==> (n>0);\nloop invariant (j<n) ==> (j+1<=n);\nloop invariant (j<n) ==> (k-1>=0);\nloop invariant (j<n) ==> (j+1<n);\nloop invariant (j<n) ==> (k-1>=k);\nloop invariant (j<n) ==> (j+1<=j);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\n*/\n```",
            "```\n/*@\nloop invariant j <= k;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant n > 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j < n;\nloop invariant k > 0;\nloop invariant j + k >= n;\nloop invariant j + k <= 2*n;\nloop invariant j < n ==> k == n - j;\nloop invariant j < n ==> k >= 1;\nloop invariant j < n ==> k <= n;\nloop invariant j < n ==> j + k <= 2*n;\nloop invariant j >= n ==> k == j;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 1 <= j <= n;\nloop invariant k == n - j;\nloop invariant n > 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant j + k == n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j == n - (n - k);\nloop invariant k == j - (n - k);\nloop invariant n > 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant j <= n && n > 0;\nloop invariant k >= 0 && k <= n;\nloop invariant j <= n && k >= 0 && k <= n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j+n == k;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 1 <= n <= INT_MAX;\nloop invariant j < n ==> k = n - j;\nloop invariant !(j < n) ==> k = 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant (k == n - j);\nloop invariant (j < n ==> j >= 0);\nloop invariant (k < n ==> k >= 0);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant k == n - j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==0) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\nloop invariant i2: k == n - j;\n*/\nwhile (j<n && n>0) {\n    j++;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j <= n && k <= n;\nloop invariant j <= n && k == n - j;\nloop invariant n > 0;\nloop invariant k == n - j && n > 0;\nloop invariant j <= n && k == n - j && n > 0;\nloop invariant j + k == n && n > 0;\nloop invariant k == n - j && j + k == n && n > 0;\nloop invariant j + k == n && k == n - j && n > 0;\nloop invariant j + k == n && k == n - j && n > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==0) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\nloop invariant i2: 0 <= k <= n;\nloop invariant i3: j <= n && k <= n;\nloop invariant i4: j <= n && k == n - j;\nloop invariant i5: n > 0;\nloop invariant i6: k == n - j && n > 0;\nloop invariant i7: j <= n && k == n - j && n > 0;\nloop invariant i8: j + k == n && n > 0;\nloop invariant i9: k == n - j && j + k == n && n > 0;\nloop invariant i10: j + k == n && k == n - j && n > 0;\n*/\nwhile (j<n && n>0) {\n    j++;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 53,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant j + k == n;\nloop invariant j <= k;\nloop invariant j <= n - k;\nloop invariant j <= n - 1;\nloop invariant j >= 0;\nloop invariant k <= n;\nloop invariant k >= 1;\nloop invariant j + k == n - 1;\nloop invariant j <= k - 1;\nloop invariant j >= 1;\nloop invariant k >= 2;\nloop invariant j + k == n - 2;\nloop invariant j <= k - 2;\nloop invariant j >= 2;\nloop invariant k >= 3;\nloop invariant j + k == n - 3;\nloop invariant j <= k - 3;\nloop invariant j >= 3;\nloop invariant k >= 4;\nloop invariant j + k == n - 4;\nloop invariant j <= k - 4;\nloop invariant j >= 4;\nloop invariant k >= 5;\nloop invariant j + k == n - 5;\nloop invariant j <= k - 5;\nloop invariant j >= 5;\nloop invariant k >= 6;\nloop invariant j + k == n - 6;\nloop invariant j <= k - 6;\nloop invariant j >= 6;\nloop invariant k >= 7;\nloop invariant j + k == n - 7;\nloop invariant j <= k - 7;\nloop invariant j >= 7;\nloop invariant k >= 8;\nloop invariant j + k == n - 8;\nloop invariant j <= k - 8;\nloop invariant j >= 8;\nloop invariant k >= 9;\nloop invariant j + k == n - 9;\nloop invariant j <= k - 9;\nloop invariant j >= 9;\nloop invariant k >= 10;\nloop invariant j + k == n - 10;\nloop invariant j <= k - 10;\nloop invariant j >= 10;\nloop invariant k >= 11;\nloop invariant j + k == n - 11;\nloop invariant j <= k - 11;\nloop invariant j >= 11;\nloop invariant k >= 12;\nloop invariant j + k == n - 12;\nloop invariant j <= k - 12;\nloop invariant j >= 12;\nloop invariant k >= 13;\nloop invariant j + k == n - 13;\nloop invariant j <= k - 13;\nloop invariant j >= 13;\nloop invariant k >= 14;\nloop invariant j + k == n - 14;\nloop invariant j <= k - 14;\nloop invariant j >= 14;\nloop invariant k >= 15;\nloop invariant j + k == n - 15;\nloop invariant j <= k - 15;\nloop invariant j >= 15;\nloop invariant k >= 16;\nloop invariant j + k == n - 16;\nloop invariant j <= k - 16;\nloop invariant j >= 16;\nloop invariant k >= 17;\nloop invariant j + k == n - 17;\nloop invariant j <= k - 17;\nloop invariant j >= 17;\nloop invariant k >= 18;\nloop invariant j + k == n - 18;\nloop invariant j <= k - 18;\nloop invariant j >= 18;\nloop invariant k >= 19;\nloop invariant j + k == n - 19;\nloop invariant j <= k - 19;\nloop invariant j >= 19;\nloop invariant k >= 20;\nloop invariant j + k == n - 20;\nloop invariant j <= k - 20;\nloop invariant j >= 20;\nloop invariant k >= 21;\nloop invariant j + k == n - 21;\nloop invariant j <= k - 21;\nloop invariant j >= 21;\nloop invariant k >= 22;\nloop invariant j + k == n - 22;\nloop invariant j <= k - 22;\nloop invariant j >= 22;\nloop invariant k >= 23;\nloop invariant j + k == n - 23;\nloop invariant j <= k - 23;\nloop invariant j >= 23;\nloop invariant k >= 24;\nloop invariant j + k == n - 24;\nloop invariant j <= k - 24;\nloop invariant j >= 24;\nloop invariant k >= 25;\nloop invariant j + k == n - 25;\nloop invariant j <= k - 25;\nloop invariant j >= 25;\nloop invariant k >= 26;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==0) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\nloop invariant i2: 0 <= k <= n;\nloop invariant i3: j <= n;\nloop invariant i4: k >= 0;\nloop invariant i5: j + k == n;\n\nloop invariant i7: j <= n - k;\n\nloop invariant i9: j >= 0;\nloop invariant i10: k <= n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (j<n && n>0) {\n    j++;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant k + j = n;\nloop invariant j <= n;\nloop invariant j>=0;\nloop invariant k<=n;\nloop invariant k>=0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==0) && (k==n) && (n>0))) return 0;\n  /*@\n\nloop invariant i2: j <= n;\nloop invariant i3: j>=0;\nloop invariant i4: k<=n;\n\n*/\nwhile (j<n && n>0) {\n    j++;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant n > 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant k >= 0;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant k == (n - j);\nloop invariant j >= 0;\nloop invariant j <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==0) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\nloop invariant i2: 0 <= k <= n;\nloop invariant i3: n > 0;\nloop invariant i4: j >= 0;\nloop invariant i5: k >= 0;\nloop invariant i6: j <= n;\nloop invariant i7: k <= n;\nloop invariant i8: k == (n - j);\n*/\nwhile (j<n && n>0) {\n    j++;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant j <= k;\nloop invariant n > 0;\nloop invariant j < n;\nloop invariant k >= 0;\nloop invariant j+k <= n;\nloop invariant (j==0) ==> (k == n);\nloop invariant (j<n) ==> (n>0);\nloop invariant (j<n) ==> (j+1<=n);\nloop invariant (j<n) ==> (k-1>=0);\nloop invariant (j<n) ==> (j+1<n);\nloop invariant (j<n) ==> (k-1>=k);\nloop invariant (j<n) ==> (j+1<=j);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\nloop invariant (j<n) ==> (k-1>=k-1);\nloop invariant (j<n) ==> (j+1<=j+1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==0) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\n\nloop invariant i3: n > 0;\n\n\nloop invariant i6: j+k <= n;\nloop invariant i7: (j==0) ==> (k == n);\nloop invariant i8: (j<n) ==> (n>0);\nloop invariant i9: (j<n) ==> (j+1<=n);\n\n\n\n\nloop invariant i14: (j<n) ==> (k-1>=k-1);\nloop invariant i15: (j<n) ==> (j+1<=j+1);\n*/\nwhile (j<n && n>0) {\n    j++;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant j <= k;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant n > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==0) && (k==n) && (n>0))) return 0;\n  /*@\n\nloop invariant i2: j <= n;\n\nloop invariant i4: n > 0;\n*/\nwhile (j<n && n>0) {\n    j++;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j < n;\nloop invariant k > 0;\nloop invariant j + k >= n;\nloop invariant j + k <= 2*n;\nloop invariant j < n ==> k == n - j;\nloop invariant j < n ==> k >= 1;\nloop invariant j < n ==> k <= n;\nloop invariant j < n ==> j + k <= 2*n;\nloop invariant j >= n ==> k == j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==0) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\nloop invariant i2: 0 <= k <= n;\n\n\nloop invariant i5: j + k >= n;\nloop invariant i6: j + k <= 2*n;\nloop invariant i7: j < n ==> k == n - j;\nloop invariant i8: j < n ==> k >= 1;\nloop invariant i9: j < n ==> k <= n;\nloop invariant i10: j < n ==> j + k <= 2*n;\n\n*/\nwhile (j<n && n>0) {\n    j++;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==0) && (k==n) && (n>0))) return 0;\n  /*@\n\n*/\nwhile (j<n && n>0) {\n    j++;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= j <= n;\nloop invariant k == n - j;\nloop invariant n > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==0) && (k==n) && (n>0))) return 0;\n  /*@\n\nloop invariant i2: k == n - j;\nloop invariant i3: n > 0;\n*/\nwhile (j<n && n>0) {\n    j++;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant j + k == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==0) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\nloop invariant i2: j + k == n;\n*/\nwhile (j<n && n>0) {\n    j++;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j == n - (n - k);\nloop invariant k == j - (n - k);\nloop invariant n > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==0) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\n\n\n\nloop invariant i5: n > 0;\n*/\nwhile (j<n && n>0) {\n    j++;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant j <= n && n > 0;\nloop invariant k >= 0 && k <= n;\nloop invariant j <= n && k >= 0 && k <= n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j+n == k;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==0) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\nloop invariant i2: j <= n && n > 0;\n\n\n\n\n\n\n*/\nwhile (j<n && n>0) {\n    j++;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 1 <= n <= INT_MAX;\nloop invariant j < n ==> k = n - j;\nloop invariant !(j < n) ==> k = 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==0) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\n\nloop invariant i3: 1 <= n <= INT_MAX;\n\n\n*/\nwhile (j<n && n>0) {\n    j++;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant (k == n - j);\nloop invariant (j < n ==> j >= 0);\nloop invariant (k < n ==> k >= 0);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\nloop invariant (j < n ==> j < n);\nloop invariant (k < n ==> k < n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==0) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\nloop invariant i2: 0 <= k <= n;\nloop invariant i3: (k == n - j);\nloop invariant i4: (j < n ==> j >= 0);\nloop invariant i5: (k < n ==> k >= 0);\nloop invariant i6: (j < n ==> j < n);\nloop invariant i7: (k < n ==> k < n);\n*/\nwhile (j<n && n>0) {\n    j++;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 137: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==0) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\nloop invariant i2: k == n - j;\nloop invariant i3: 0 <= k <= n;\nloop invariant i4: j <= n && k <= n;\nloop invariant i5: j <= n && k == n - j;\nloop invariant i6: n > 0;\nloop invariant i7: k == n - j && n > 0;\nloop invariant i8: j <= n && k == n - j && n > 0;\nloop invariant i9: j + k == n && n > 0;\nloop invariant i10: k == n - j && j + k == n && n > 0;\nloop invariant i11: j + k == n && k == n - j && n > 0;\nloop invariant i12: j <= n;\nloop invariant i13: k >= 0;\nloop invariant i14: j + k == n;\nloop invariant i15: j <= k;\nloop invariant i16: j <= n - k;\nloop invariant i17: j <= n - 1;\nloop invariant i18: j >= 0;\nloop invariant i19: k <= n;\nloop invariant i20: k >= 1;\nloop invariant i21: j + k == n - 1;\nloop invariant i22: j <= k - 1;\nloop invariant i23: j >= 1;\nloop invariant i24: k >= 2;\nloop invariant i25: j + k == n - 2;\nloop invariant i26: j <= k - 2;\nloop invariant i27: j >= 2;\nloop invariant i28: k >= 3;\nloop invariant i29: j + k == n - 3;\nloop invariant i30: j <= k - 3;\nloop invariant i31: j >= 3;\nloop invariant i32: k >= 4;\nloop invariant i33: j + k == n - 4;\nloop invariant i34: j <= k - 4;\nloop invariant i35: j >= 4;\nloop invariant i36: k >= 5;\nloop invariant i37: j + k == n - 5;\nloop invariant i38: j <= k - 5;\nloop invariant i39: j >= 5;\nloop invariant i40: k >= 6;\nloop invariant i41: j + k == n - 6;\nloop invariant i42: j <= k - 6;\nloop invariant i43: j >= 6;\nloop invariant i44: k >= 7;\nloop invariant i45: j + k == n - 7;\nloop invariant i46: j <= k - 7;\nloop invariant i47: j >= 7;\nloop invariant i48: k >= 8;\nloop invariant i49: j + k == n - 8;\nloop invariant i50: j <= k - 8;\nloop invariant i51: j >= 8;\nloop invariant i52: k >= 9;\nloop invariant i53: j + k == n - 9;\nloop invariant i54: j <= k - 9;\nloop invariant i55: j >= 9;\nloop invariant i56: k >= 10;\nloop invariant i57: j + k == n - 10;\nloop invariant i58: j <= k - 10;\nloop invariant i59: j >= 10;\nloop invariant i60: k >= 11;\nloop invariant i61: j + k == n - 11;\nloop invariant i62: j <= k - 11;\nloop invariant i63: j >= 11;\nloop invariant i64: k >= 12;\nloop invariant i65: j + k == n - 12;\nloop invariant i66: j <= k - 12;\nloop invariant i67: j >= 12;\nloop invariant i68: k >= 13;\nloop invariant i69: j + k == n - 13;\nloop invariant i70: j <= k - 13;\nloop invariant i71: j >= 13;\nloop invariant i72: k >= 14;\nloop invariant i73: j + k == n - 14;\nloop invariant i74: j <= k - 14;\nloop invariant i75: j >= 14;\nloop invariant i76: k >= 15;\nloop invariant i77: j + k == n - 15;\nloop invariant i78: j <= k - 15;\nloop invariant i79: j >= 15;\nloop invariant i80: k >= 16;\nloop invariant i81: j + k == n - 16;\nloop invariant i82: j <= k - 16;\nloop invariant i83: j >= 16;\nloop invariant i84: k >= 17;\nloop invariant i85: j + k == n - 17;\nloop invariant i86: j <= k - 17;\nloop invariant i87: j >= 17;\nloop invariant i88: k >= 18;\nloop invariant i89: j + k == n - 18;\nloop invariant i90: j <= k - 18;\nloop invariant i91: j >= 18;\nloop invariant i92: k >= 19;\nloop invariant i93: j + k == n - 19;\nloop invariant i94: j <= k - 19;\nloop invariant i95: j >= 19;\nloop invariant i96: k >= 20;\nloop invariant i97: j + k == n - 20;\nloop invariant i98: j <= k - 20;\nloop invariant i99: j >= 20;\nloop invariant i100: k >= 21;\nloop invariant i101: j + k == n - 21;\nloop invariant i102: j <= k - 21;\nloop invariant i103: j >= 21;\nloop invariant i104: k >= 22;\nloop invariant i105: j + k == n - 22;\nloop invariant i106: j <= k - 22;\nloop invariant i107: j >= 22;\nloop invariant i108: k >= 23;\nloop invariant i109: j + k == n - 23;\nloop invariant i110: j <= k - 23;\nloop invariant i111: j >= 23;\nloop invariant i112: k >= 24;\nloop invariant i113: j + k == n - 24;\nloop invariant i114: j <= k - 24;\nloop invariant i115: j >= 24;\nloop invariant i116: k >= 25;\nloop invariant i117: j + k == n - 25;\nloop invariant i118: j <= k - 25;\nloop invariant i119: j >= 25;\nloop invariant i120: k >= 26;\nloop invariant i121: k + j = n;\nloop invariant i122: j>=0;\nloop invariant i123: k<=n;\nloop invariant i124: k>=0;\nloop invariant i125: k == (n - j);\nloop invariant i126: j < n;\nloop invariant i127: j+k <= n;\nloop invariant i128: (j==0) ==> (k == n);\nloop invariant i129: (j<n) ==> (n>0);\nloop invariant i130: (j<n) ==> (j+1<=n);\nloop invariant i131: (j<n) ==> (k-1>=0);\nloop invariant i132: (j<n) ==> (j+1<n);\nloop invariant i133: (j<n) ==> (k-1>=k);\nloop invariant i134: (j<n) ==> (j+1<=j);\nloop invariant i135: (j<n) ==> (k-1>=k-1);\nloop invariant i136: (j<n) ==> (j+1<=j+1);\nloop invariant i137: k > 0;\nloop invariant i138: j + k >= n;\nloop invariant i139: j + k <= 2*n;\nloop invariant i140: j < n ==> k == n - j;\nloop invariant i141: j < n ==> k >= 1;\nloop invariant i142: j < n ==> k <= n;\nloop invariant i143: j < n ==> j + k <= 2*n;\nloop invariant i144: j >= n ==> k == j;\nloop invariant i145: 1 <= j <= n;\nloop invariant i146: j == n - (n - k);\nloop invariant i147: k == j - (n - k);\nloop invariant i148: j <= n && n > 0;\nloop invariant i149: k >= 0 && k <= n;\nloop invariant i150: j <= n && k >= 0 && k <= n;\nloop invariant i151: j <= n && n > 0 && k >= 0 && k <= n;\nloop invariant i152: j <= n && n > 0 && k >= 0 && k <= n ==> j+n == k;\nloop invariant i153: j <= n && n > 0 && k >= 0 && k <= n ==> j == k-n;\nloop invariant i154: j <= n && n > 0 && k >= 0 && k <= n ==> j == k+n;\nloop invariant i155: 1 <= n <= INT_MAX;\nloop invariant i156: j < n ==> k = n - j;\nloop invariant i157: !(j < n) ==> k = 0;\nloop invariant i158: (k == n - j);\nloop invariant i159: (j < n ==> j >= 0);\nloop invariant i160: (k < n ==> k >= 0);\nloop invariant i161: (j < n ==> j < n);\nloop invariant i162: (k < n ==> k < n);\n*/\nwhile (j<n && n>0) {\n    j++;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 66,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==0) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\nloop invariant i2: k == n - j;\nloop invariant i3: 0 <= k <= n;\nloop invariant i4: j <= n && k <= n;\nloop invariant i5: j <= n && k == n - j;\nloop invariant i6: n > 0;\nloop invariant i7: k == n - j && n > 0;\nloop invariant i8: j <= n && k == n - j && n > 0;\nloop invariant i9: j + k == n && n > 0;\nloop invariant i10: k == n - j && j + k == n && n > 0;\nloop invariant i11: j + k == n && k == n - j && n > 0;\nloop invariant i12: j <= n;\nloop invariant i13: k >= 0;\nloop invariant i14: j + k == n;\n\nloop invariant i16: j <= n - k;\n\nloop invariant i18: j >= 0;\nloop invariant i19: k <= n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i122: j>=0;\nloop invariant i123: k<=n;\nloop invariant i124: k>=0;\nloop invariant i125: k == (n - j);\n\nloop invariant i127: j+k <= n;\nloop invariant i128: (j==0) ==> (k == n);\nloop invariant i129: (j<n) ==> (n>0);\nloop invariant i130: (j<n) ==> (j+1<=n);\nloop invariant i131: (j<n) ==> (k-1>=0);\n\n\n\nloop invariant i135: (j<n) ==> (k-1>=k-1);\nloop invariant i136: (j<n) ==> (j+1<=j+1);\n\nloop invariant i138: j + k >= n;\nloop invariant i139: j + k <= 2*n;\nloop invariant i140: j < n ==> k == n - j;\nloop invariant i141: j < n ==> k >= 1;\nloop invariant i142: j < n ==> k <= n;\nloop invariant i143: j < n ==> j + k <= 2*n;\n\n\n\n\nloop invariant i148: j <= n && n > 0;\nloop invariant i149: k >= 0 && k <= n;\nloop invariant i150: j <= n && k >= 0 && k <= n;\nloop invariant i151: j <= n && n > 0 && k >= 0 && k <= n;\n\n\n\nloop invariant i155: 1 <= n <= INT_MAX;\n\n\nloop invariant i158: (k == n - j);\nloop invariant i159: (j < n ==> j >= 0);\nloop invariant i160: (k < n ==> k >= 0);\nloop invariant i161: (j < n ==> j < n);\nloop invariant i162: (k < n ==> k < n);\n*/\nwhile (j<n && n>0) {\n    j++;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark16_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark17_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark19_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark20_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark21_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark22_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark23_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark25_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark26_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark27_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark29_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark30_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark31_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark32_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark33_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark34_conjunctive.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c"
        ],
        "skipped": [],
        "total": 153,
        "success_count": 136,
        "failure_count": 17,
        "success_rate": 0.8888888888888888
    }
}