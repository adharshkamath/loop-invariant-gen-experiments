{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark47_linear.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  while (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant x >= -100000;\nloop invariant y >= -100000;\nloop invariant x < y ==> x <= y - 16;\nloop invariant y < 0 ==> y <= -16;\nloop invariant x >= 0 ==> x >= y + 16;\nloop invariant y >= 0 ==> y >= x - 16;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y + 16;\nloop invariant 0 <= y <= x + 16;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\n*/\n```",
            "```\n/*@\nloop invariant x >= y;\nloop invariant x <= y + 16;\nloop invariant y >= 0;\nloop invariant y <= 16;\n*/\n```",
            "```\n/*@\nloop invariant x < y + 16;\nloop invariant x >= y;\nloop invariant x < 0 ==> y <= 0;\nloop invariant x >= 0 ==> y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 10;\nloop invariant y <= 10;\nloop invariant x <= y + 10;\nloop invariant if x < 0 then y >= x - 7 else x >= y + 10;\nloop invariant if y < 0 then x >= y + 10 else y >= x - 7;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if x < 0 then x >= y - 10 else x <= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y + 16; x <= y + 16; y > x; x <= y; y > x - 16; y <= x + 16; y > x;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 2147483647 && 0 <= y <= 2147483647 && x >= y && (x - y) % 3 == 0 && x >= y + 3 * (x - y) / 3 && x <= y + 3 * (x - y) / 3 + 16;\nloop invariant x >= y && x <= y + 16;\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
            "```\n/*@\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant x <= y + 16;\nloop invariant x >= 0;\nloop invariant x <= 16;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x >= -7;\nloop invariant x <= 16;\nloop invariant y <= 64;\nloop invariant y >= -7;\nloop invariant x >= y ==> x <= y + 16;\nloop invariant x >= y ==> x >= 0;\nloop invariant x >= y ==> x <= 100;\nloop invariant x >= y ==> y >= 0;\nloop invariant x >= y ==> x <= 16;\nloop invariant x >= y ==> y <= 100;\nloop invariant x >= y ==> x >= -7;\nloop invariant x >= y ==> x <= 16;\nloop invariant x >= y ==> y <= 64;\nloop invariant x >= y ==> y >= -7;\nloop invariant x < 0 ==> x >= -7;\nloop invariant x < 0 ==> x <= 16;\nloop invariant y < 0 ==> y >= -7;\nloop invariant y < 0 ==> y <= 64;\nloop invariant x >= 0 ==> x >= 0;\nloop invariant x >= 0 ==> x <= 100;\nloop invariant x >= 0 ==> y >= 0;\nloop invariant x >= 0 ==> x <= 16;\nloop invariant x >= 0 ==> y <= 100;\nloop invariant x >= 0 ==> x >= -7;\nloop invariant x >= 0 ==> x <= 16;\nloop invariant x >= 0 ==> y <= 64;\nloop invariant x >= 0 ==> y >= -7;\nloop invariant x >= 10 ==> x >= 10;\nloop invariant x >= 10 ==> x <= 100;\nloop invariant x >= 10 ==> y >= 0;\nloop invariant x >= 10 ==> x <= 16;\nloop invariant x >= 10 ==> y <= 100;\nloop invariant x >= 10 ==> x >= -7;\nloop invariant x >= 10 ==> x <= 16;\nloop invariant x >= 10 ==> y <= 64;\nloop invariant x >= 10 ==> y >= -7;\nloop invariant x >= 10 ==> x >= 10;\nloop invariant x >= 10 ==> x <= 100;\nloop invariant x >= 10 ==> y >= 0;\nloop invariant x >= 10 ==> x <= 16;\nloop invariant x >= 10 ==> y <= 100;\nloop invariant x >= 10 ==> x >= -7;\nloop invariant x >= 10 ==> x <= 16;\nloop invariant x >= 10 ==> y <= 64;\nloop invariant x >= 10 ==> y >= -7;\nloop invariant x >= 10 ==> x >= 10;\nloop invariant x >= 10 ==> x <= 100;\nloop invariant x >= 10 ==> y >= 0;\nloop invariant x >= 10 ==> x <= 16;\nloop invariant x >= 10 ==> y <= 100;\nloop invariant x >= 10 ==> x >= -7;\nloop invariant x >= 10 ==> x <= 16;\nloop invariant x >= 10 ==> y <= 64;\nloop invariant x >= 10 ==> y >= -7;\nloop invariant x >= 10 ==> x >= 10;\nloop invariant x >= 10 ==> x <= 100;\nloop invariant x >= 10 ==> y >= 0;\nloop invariant x >= 10 ==> x <= 16;\nloop invariant x >= 10 ==> y <= 100;\nloop invariant x >= 10 ==> x >= -7;\nloop invariant x >= 10 ==> x <= 16;\nloop invariant x >= 10 ==> y <= 64;\nloop invariant x >= 10 ==> y >= -7;\nloop invariant x >= 10 ==> x >= 10;\nloop invariant x >= 10 ==> x <= 100;\nloop invariant x >= 10 ==> y >= 0;\nloop invariant x >= 10 ==> x <= 16;\nloop invariant x >= 10 ==> y <= 100;\nloop invariant x >= 10 ==> x >= -7;\nloop invariant x >= 10 ==> x <= 16;\nloop invariant x >= 10 ==> y <= 64;\nloop invariant x >= 10 ==> y >= -7;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= x;\nloop invariant y - x <= 15;\nloop invariant x - y <= 15;\nloop invariant x >= y;\nloop invariant x - y <= 16;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y + 16;\nloop invariant x >= y && x <= y + 16;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y + 16;\nloop invariant 0 <= y;\nloop invariant x >= y - 16;\nloop invariant x + 10 >= y;\nloop invariant x + 10 >= y - 16;\nloop invariant x + 10 >= y - 16;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant x >= -100000;\nloop invariant y >= -100000;\nloop invariant x < y ==> x <= y - 16;\nloop invariant y < 0 ==> y <= -16;\nloop invariant x >= 0 ==> x >= y + 16;\nloop invariant y >= 0 ==> y >= x - 16;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\n\n\nloop invariant i6: y >= 0 ==> y >= x - 16;\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y + 16;\nloop invariant 0 <= y <= x + 16;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\nloop invariant y <= x + 16;\nloop invariant x >= y;\nloop invariant y >= x;\nloop invariant x <= y + 16;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\nloop invariant i3: x <= y + 16;\n\n\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x >= y;\nloop invariant x <= y + 16;\nloop invariant y >= 0;\nloop invariant y <= 16;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\nloop invariant i2: x <= y + 16;\n\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x < y + 16;\nloop invariant x >= y;\nloop invariant x < 0 ==> y <= 0;\nloop invariant x >= 0 ==> y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 10;\nloop invariant y <= 10;\nloop invariant x <= y + 10;\nloop invariant if x < 0 then y >= x - 7 else x >= y + 10;\nloop invariant if y < 0 then x >= y + 10 else y >= x - 7;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if x < 0 then x >= y - 10 else x <= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant if y < 0 then y >= x - 7 else y <= x + 3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y + 16; x <= y + 16; y > x; x <= y; y > x - 16; y <= x + 16; y > x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 2147483647 && 0 <= y <= 2147483647 && x >= y && (x - y) % 3 == 0 && x >= y + 3 * (x - y) / 3 && x <= y + 3 * (x - y) / 3 + 16;\nloop invariant x >= y && x <= y + 16;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 158,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant x <= y + 16;\nloop invariant x >= 0;\nloop invariant x <= 16;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x >= -7;\nloop invariant x <= 16;\nloop invariant y <= 64;\nloop invariant y >= -7;\nloop invariant x >= y ==> x <= y + 16;\nloop invariant x >= y ==> x >= 0;\nloop invariant x >= y ==> x <= 100;\nloop invariant x >= y ==> y >= 0;\nloop invariant x >= y ==> x <= 16;\nloop invariant x >= y ==> y <= 100;\nloop invariant x >= y ==> x >= -7;\nloop invariant x >= y ==> x <= 16;\nloop invariant x >= y ==> y <= 64;\nloop invariant x >= y ==> y >= -7;\nloop invariant x < 0 ==> x >= -7;\nloop invariant x < 0 ==> x <= 16;\nloop invariant y < 0 ==> y >= -7;\nloop invariant y < 0 ==> y <= 64;\nloop invariant x >= 0 ==> x >= 0;\nloop invariant x >= 0 ==> x <= 100;\nloop invariant x >= 0 ==> y >= 0;\nloop invariant x >= 0 ==> x <= 16;\nloop invariant x >= 0 ==> y <= 100;\nloop invariant x >= 0 ==> x >= -7;\nloop invariant x >= 0 ==> x <= 16;\nloop invariant x >= 0 ==> y <= 64;\nloop invariant x >= 0 ==> y >= -7;\nloop invariant x >= 10 ==> x >= 10;\nloop invariant x >= 10 ==> x <= 100;\nloop invariant x >= 10 ==> y >= 0;\nloop invariant x >= 10 ==> x <= 16;\nloop invariant x >= 10 ==> y <= 100;\nloop invariant x >= 10 ==> x >= -7;\nloop invariant x >= 10 ==> x <= 16;\nloop invariant x >= 10 ==> y <= 64;\nloop invariant x >= 10 ==> y >= -7;\nloop invariant x >= 10 ==> x >= 10;\nloop invariant x >= 10 ==> x <= 100;\nloop invariant x >= 10 ==> y >= 0;\nloop invariant x >= 10 ==> x <= 16;\nloop invariant x >= 10 ==> y <= 100;\nloop invariant x >= 10 ==> x >= -7;\nloop invariant x >= 10 ==> x <= 16;\nloop invariant x >= 10 ==> y <= 64;\nloop invariant x >= 10 ==> y >= -7;\nloop invariant x >= 10 ==> x >= 10;\nloop invariant x >= 10 ==> x <= 100;\nloop invariant x >= 10 ==> y >= 0;\nloop invariant x >= 10 ==> x <= 16;\nloop invariant x >= 10 ==> y <= 100;\nloop invariant x >= 10 ==> x >= -7;\nloop invariant x >= 10 ==> x <= 16;\nloop invariant x >= 10 ==> y <= 64;\nloop invariant x >= 10 ==> y >= -7;\nloop invariant x >= 10 ==> x >= 10;\nloop invariant x >= 10 ==> x <= 100;\nloop invariant x >= 10 ==> y >= 0;\nloop invariant x >= 10 ==> x <= 16;\nloop invariant x >= 10 ==> y <= 100;\nloop invariant x >= 10 ==> x >= -7;\nloop invariant x >= 10 ==> x <= 16;\nloop invariant x >= 10 ==> y <= 64;\nloop invariant x >= 10 ==> y >= -7;\nloop invariant x >= 10 ==> x >= 10;\nloop invariant x >= 10 ==> x <= 100;\nloop invariant x >= 10 ==> y >= 0;\nloop invariant x >= 10 ==> x <= 16;\nloop invariant x >= 10 ==> y <= 100;\nloop invariant x >= 10 ==> x >= -7;\nloop invariant x >= 10 ==> x <= 16;\nloop invariant x >= 10 ==> y <= 64;\nloop invariant x >= 10 ==> y >= -7;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\nloop invariant i3: x <= y + 16;\n\n\n\n\n\n\n\nloop invariant i11: x >= y ==> x <= y + 16;\n\n\n\n\n\n\n\n\n\nloop invariant i21: x < 0 ==> x <= 16;\n\nloop invariant i23: y < 0 ==> y <= 64;\nloop invariant i24: x >= 0 ==> x >= 0;\n\n\n\n\nloop invariant i29: x >= 0 ==> x >= -7;\n\n\nloop invariant i32: x >= 10 ==> x >= 10;\n\nloop invariant i34: x >= 10 ==> y >= 0;\n\n\nloop invariant i37: x >= 10 ==> x >= -7;\n\nloop invariant i39: x >= 10 ==> y >= -7;\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= x;\nloop invariant y - x <= 15;\nloop invariant x - y <= 15;\nloop invariant x >= y;\nloop invariant x - y <= 16;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\nloop invariant x - y >= 0;\nloop invariant x - y <= 15;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\n\nloop invariant i5: x - y <= 16;\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y + 16;\nloop invariant x >= y && x <= y + 16;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y + 16;\nloop invariant 0 <= y;\nloop invariant x >= y - 16;\nloop invariant x + 10 >= y;\nloop invariant x + 10 >= y - 16;\nloop invariant x + 10 >= y - 16;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\n\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 38: unexpected token 'x'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\nloop invariant i1: x >= -100000;\nloop invariant i2: y >= -100000;\nloop invariant i3: x < y ==> x <= y - 16;\nloop invariant i4: y < 0 ==> y <= -16;\nloop invariant i5: x >= 0 ==> x >= y + 16;\nloop invariant i6: y >= 0 ==> y >= x - 16;\nloop invariant i7: 0 <= y <= 100000;\nloop invariant i8: x >= (1 + (y - 1) * y / 2);\nloop invariant i9: 0 <= x <= y + 16;\nloop invariant i10: 0 <= y <= x + 16;\nloop invariant i11: x <= y + 16;\nloop invariant i12: y <= x + 16;\nloop invariant i13: x >= y;\nloop invariant i14: y >= x;\nloop invariant i15: y >= 0;\nloop invariant i16: y <= 16;\nloop invariant i17: x < y + 16;\nloop invariant i18: x < 0 ==> y <= 0;\nloop invariant i19: x >= 0 ==> y >= 0;\nloop invariant i20: 1 <= x <= 10;\nloop invariant i21: y <= 10;\nloop invariant i22: x <= y + 10;\nloop invariant i23: if x < 0 then y >= x - 7 else x >= y + 10;\nloop invariant i24: if y < 0 then x >= y + 10 else y >= x - 7;\nloop invariant i25: if x < 0 then x <= y + 10 else x >= y + 10;\nloop invariant i26: if y < 0 then x <= y + 10 else x >= y + 10;\nloop invariant i27: if x < 0 then x >= y - 10 else x <= y + 10;\nloop invariant i28: if y < 0 then y >= x - 7 else y <= x + 3;\nloop invariant i29: 0 <= x <= y + 16; x <= y + 16; y > x; x <= y; y > x - 16; y <= x + 16; y > x;\nloop invariant i30: 0 <= x <= 2147483647 && 0 <= y <= 2147483647 && x >= y && (x - y) % 3 == 0 && x >= y + 3 * (x - y) / 3 && x <= y + 3 * (x - y) / 3 + 16;\nloop invariant i31: x >= y && x <= y + 16;\nloop invariant i32: i1;\nloop invariant i33: i2;\nloop invariant i34: i3;\nloop invariant i35: i4;\nloop invariant i36: i5;\nloop invariant i37: i6;\nloop invariant i38: i7;\nloop invariant i39: i8;\nloop invariant i40: i9;\nloop invariant i41: i10;\nloop invariant i42: i11;\nloop invariant i43: i12;\nloop invariant i44: i13;\nloop invariant i45: i14;\nloop invariant i46: i15;\nloop invariant i47: i16;\nloop invariant i48: i17;\nloop invariant i49: i18;\nloop invariant i50: i19;\nloop invariant i51: i20;\nloop invariant i52: i21;\nloop invariant i53: i22;\nloop invariant i54: i23;\nloop invariant i55: i24;\nloop invariant i56: i25;\nloop invariant i57: i26;\nloop invariant i58: i27;\nloop invariant i59: i28;\nloop invariant i60: i29;\nloop invariant i61: i30;\nloop invariant i62: i31;\nloop invariant i63: i32;\nloop invariant i64: i33;\nloop invariant i65: i34;\nloop invariant i66: i35;\nloop invariant i67: i36;\nloop invariant i68: i37;\nloop invariant i69: i38;\nloop invariant i70: i39;\nloop invariant i71: i40;\nloop invariant i72: i41;\nloop invariant i73: i42;\nloop invariant i74: i43;\nloop invariant i75: i44;\nloop invariant i76: i45;\nloop invariant i77: i46;\nloop invariant i78: i47;\nloop invariant i79: i48;\nloop invariant i80: i49;\nloop invariant i81: i50;\nloop invariant i82: i51;\nloop invariant i83: i52;\nloop invariant i84: i53;\nloop invariant i85: i54;\nloop invariant i86: i55;\nloop invariant i87: i56;\nloop invariant i88: i57;\nloop invariant i89: i58;\nloop invariant i90: i59;\nloop invariant i91: i60;\nloop invariant i92: i61;\nloop invariant i93: i62;\nloop invariant i94: i63;\nloop invariant i95: i64;\nloop invariant i96: i65;\nloop invariant i97: i66;\nloop invariant i98: i67;\nloop invariant i99: i68;\nloop invariant i100: i69;\nloop invariant i101: i70;\nloop invariant i102: i71;\nloop invariant i103: i72;\nloop invariant i104: i73;\nloop invariant i105: i74;\nloop invariant i106: i75;\nloop invariant i107: i76;\nloop invariant i108: i77;\nloop invariant i109: i78;\nloop invariant i110: i79;\nloop invariant i111: i80;\nloop invariant i112: i81;\nloop invariant i113: i82;\nloop invariant i114: i83;\nloop invariant i115: i84;\nloop invariant i116: i85;\nloop invariant i117: i86;\nloop invariant i118: i87;\nloop invariant i119: i88;\nloop invariant i120: i89;\nloop invariant i121: i90;\nloop invariant i122: i91;\nloop invariant i123: i92;\nloop invariant i124: i93;\nloop invariant i125: i94;\nloop invariant i126: i95;\nloop invariant i127: i96;\nloop invariant i128: i97;\nloop invariant i129: i98;\nloop invariant i130: i99;\nloop invariant i131: i100;\nloop invariant i132: i101;\nloop invariant i133: i102;\nloop invariant i134: i103;\nloop invariant i135: i104;\nloop invariant i136: i105;\nloop invariant i137: i106;\nloop invariant i138: i107;\nloop invariant i139: i108;\nloop invariant i140: i109;\nloop invariant i141: i110;\nloop invariant i142: i111;\nloop invariant i143: i112;\nloop invariant i144: i113;\nloop invariant i145: i114;\nloop invariant i146: i115;\nloop invariant i147: i116;\nloop invariant i148: i117;\nloop invariant i149: i118;\nloop invariant i150: i119;\nloop invariant i151: i120;\nloop invariant i152: i121;\nloop invariant i153: i122;\nloop invariant i154: i123;\nloop invariant i155: i124;\nloop invariant i156: i125;\nloop invariant i157: i126;\nloop invariant i158: i127;\nloop invariant i159: i128;\nloop invariant i160: i129;\nloop invariant i161: i130;\nloop invariant i162: i131;\nloop invariant i163: i132;\nloop invariant i164: i133;\nloop invariant i165: i134;\nloop invariant i166: i135;\nloop invariant i167: i136;\nloop invariant i168: i137;\nloop invariant i169: i138;\nloop invariant i170: i139;\nloop invariant i171: i140;\nloop invariant i172: i141;\nloop invariant i173: i142;\nloop invariant i174: i143;\nloop invariant i175: i144;\nloop invariant i176: i145;\nloop invariant i177: i146;\nloop invariant i178: i147;\nloop invariant i179: i148;\nloop invariant i180: i149;\nloop invariant i181: i150;\nloop invariant i182: i151;\nloop invariant i183: i152;\nloop invariant i184: i153;\nloop invariant i185: i154;\nloop invariant i186: i155;\nloop invariant i187: i156;\nloop invariant i188: i157;\nloop invariant i189: i158;\nloop invariant i190: x >= 0;\nloop invariant i191: x <= 16;\nloop invariant i192: x <= 100;\nloop invariant i193: y <= 100;\nloop invariant i194: x >= -7;\nloop invariant i195: y <= 64;\nloop invariant i196: y >= -7;\nloop invariant i197: x >= y ==> x <= y + 16;\nloop invariant i198: x >= y ==> x >= 0;\nloop invariant i199: x >= y ==> x <= 100;\nloop invariant i200: x >= y ==> y >= 0;\nloop invariant i201: x >= y ==> x <= 16;\nloop invariant i202: x >= y ==> y <= 100;\nloop invariant i203: x >= y ==> x >= -7;\nloop invariant i204: x >= y ==> y <= 64;\nloop invariant i205: x >= y ==> y >= -7;\nloop invariant i206: x < 0 ==> x >= -7;\nloop invariant i207: x < 0 ==> x <= 16;\nloop invariant i208: y < 0 ==> y >= -7;\nloop invariant i209: y < 0 ==> y <= 64;\nloop invariant i210: x >= 0 ==> x >= 0;\nloop invariant i211: x >= 0 ==> x <= 100;\nloop invariant i212: x >= 0 ==> x <= 16;\nloop invariant i213: x >= 0 ==> y <= 100;\nloop invariant i214: x >= 0 ==> x >= -7;\nloop invariant i215: x >= 0 ==> y <= 64;\nloop invariant i216: x >= 0 ==> y >= -7;\nloop invariant i217: x >= 10 ==> x >= 10;\nloop invariant i218: x >= 10 ==> x <= 100;\nloop invariant i219: x >= 10 ==> y >= 0;\nloop invariant i220: x >= 10 ==> x <= 16;\nloop invariant i221: x >= 10 ==> y <= 100;\nloop invariant i222: x >= 10 ==> x >= -7;\nloop invariant i223: x >= 10 ==> y <= 64;\nloop invariant i224: x >= 10 ==> y >= -7;\nloop invariant i225: 0 <= y <= x;\nloop invariant i226: y - x <= 15;\nloop invariant i227: x - y <= 15;\nloop invariant i228: x - y <= 16;\nloop invariant i229: x - y >= 0;\nloop invariant i230: 0 <= y;\nloop invariant i231: x >= y - 16;\nloop invariant i232: x + 10 >= y;\nloop invariant i233: x + 10 >= y - 16;\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 177,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(x<y)) return 0;\n  /*@\n\n\n\n\n\nloop invariant i6: y >= 0 ==> y >= x - 16;\n\n\n\n\nloop invariant i11: x <= y + 16;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i197: x >= y ==> x <= y + 16;\n\n\n\n\n\n\n\n\n\nloop invariant i207: x < 0 ==> x <= 16;\n\nloop invariant i209: y < 0 ==> y <= 64;\nloop invariant i210: x >= 0 ==> x >= 0;\n\n\n\nloop invariant i214: x >= 0 ==> x >= -7;\n\n\nloop invariant i217: x >= 10 ==> x >= 10;\n\nloop invariant i219: x >= 10 ==> y >= 0;\n\n\nloop invariant i222: x >= 10 ==> x >= -7;\n\nloop invariant i224: x >= 10 ==> y >= -7;\n\n\n\nloop invariant i228: x - y <= 16;\n\n\n\n\n\n*/\nwhile (x<y) {\n    if (x < 0) x = x + 7;\n    else x = x + 10;\n    if (y < 0) y = y - 10;\n    else y = y + 3;\n  }\n  {;\n//@ assert(x >= y && x <= y + 16);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark16_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark17_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark19_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark20_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark21_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark22_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark23_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark25_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark26_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark27_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark29_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark30_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark31_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark32_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark33_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark34_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark35_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark36_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark37_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark38_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark39_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark40_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark41_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark42_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark43_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark45_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark46_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark47_linear.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c"
        ],
        "skipped": [],
        "total": 165,
        "success_count": 148,
        "failure_count": 17,
        "success_rate": 0.896969696969697
    }
}