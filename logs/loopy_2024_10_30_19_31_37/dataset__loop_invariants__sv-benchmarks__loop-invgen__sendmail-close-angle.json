{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  while (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= buf <= bufferlen;\nloop invariant 0 <= in <= inlen;\nloop invariant unknown_int() ==> (buf < buflim);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= buf && buf < bufferlen;\nloop invariant 0 <= in && in <= inlen;\nloop invariant buf < buflim ==> in + 2 == inlen - 1;\nloop invariant buf >= buflim ==> in + 2 <= inlen;\nloop invariant buf < buflim ==> in < inlen;\nloop invariant buf >= buflim ==> in == inlen;\nloop invariant buf < buflim ==> in >= 0;\nloop invariant buf >= buflim ==> in > 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= in <= inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= inlen <= inlen;\nloop invariant 0 <= bufferlen <= bufferlen;\nloop invariant 0 <= buflim <= bufferlen - 2;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant inlen <= buflim + 2;\nloop invariant buf <= bufferlen;\nloop invariant bufferlen <= buflim + 2;\nloop invariant unknown_int() == 1 ==> buf == buflim;\nloop invariant unknown_int() == 0 ==> buf == buflim + 1;\nloop invariant unknown_int() == 1 ==> in == inlen;\nloop invariant unknown_int() == 0 ==> in == inlen + 1;\nloop invariant buf < bufferlen ==> in < inlen;\nloop invariant buf >= bufferlen ==> in >= inlen;\nloop invariant buf < bufferlen ==> unknown_int() == 1;\nloop invariant buf >= bufferlen ==> unknown_int() == 0;\nloop invariant unknown_int() == 1 ==> unknown_int() == 1;\nloop invariant unknown_int() == 0 ==> unknown_int() == 0;\nloop invariant unknown_int() == 1 ==> buf <= buflim;\nloop invariant unknown_int() == 0 ==> buf <= buflim + 1;\nloop invariant unknown_int() == 1 ==> in <= inlen;\nloop invariant unknown_int() == 0 ==> in <= inlen + 1;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= in;\nloop invariant in < inlen;\nloop invariant 0 <= buf;\nloop invariant buf < bufferlen;\nloop invariant buflim == bufferlen - 2;\nloop invariant buf <= buflim;\nloop invariant if (unknown_int()) ==> (0 <= buf);\nloop invariant if (unknown_int()) ==> (buf < bufferlen);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= buf <= bufferlen - 1;\nloop invariant 0 <= in <= inlen - 1;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf + 1 <= in;\nloop invariant (unknown_int() == 1) ==> buflim <= buf + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= in;\nloop invariant in < inlen;\nloop invariant 0 <= buf;\nloop invariant buf <= bufferlen;\nloop invariant buf <= buflim;\nloop invariant unknown_int() implies buf < bufferlen;\nloop invariant unknown_int() implies buf <= buflim;\nloop invariant unknown_int() implies buf <= in;\nloop invariant unknown_int() implies in < inlen;\nloop invariant unknown_int() implies in <= buflim;\nloop invariant unknown_int() implies buflim < bufferlen;\nloop invariant unknown_int() implies buflim <= bufferlen;\nloop invariant unknown_int() implies buf == buflim ==> buf + 1 == buflim + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= buf;\nloop invariant buflim <= bufferlen;\nloop invariant 0 <= in;\nloop invariant in <= inlen;\nloop invariant buf < bufferlen;\nloop invariant in < inlen;\nloop invariant buf <= buflim;\nloop invariant buf <= bufferlen - 2;\nloop invariant buf <= bufferlen - 1;\nloop invariant in <= inlen - 1;\nloop invariant 0 <= buf ==> 0 <= in;\nloop invariant buflim <= bufferlen ==> buflim <= buf;\nloop invariant buflim <= bufferlen ==> buflim <= in;\nloop invariant buflim <= bufferlen ==> buflim <= inlen;\nloop invariant buflim <= bufferlen ==> buflim <= bufferlen - 2;\nloop invariant buflim <= bufferlen ==> buflim <= bufferlen - 1;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 1;\nloop invariant buflim <= bufferlen ==> buflim <= inlen;\nloop invariant buflim <= bufferlen ==> buflim <= bufferlen - 3;\nloop invariant buflim <= bufferlen ==> buflim <= bufferlen - 4;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 2;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 3;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 4;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 5;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 6;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 7;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 8;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 9;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 10;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 11;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 12;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 13;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 14;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 15;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 16;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 17;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 18;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 19;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 20;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 21;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 22;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 23;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 24;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 25;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 26;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 27;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 28;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 29;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 30;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 31;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 32;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 33;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 34;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 35;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 36;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 37;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 38;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= buf <= bufferlen;\nloop invariant 0 <= in <= inlen;\nloop invariant buf < buflim ==> buf < bufferlen;\nloop invariant buf < buflim ==> buf >= 0;\nloop invariant buf == buflim ==> buf < bufferlen;\nloop invariant buf == buflim ==> buf >= 0;\nloop invariant in < inlen ==> in >= 0;\nloop invariant buflim < bufferlen;\n*/\n```",
            "```\n/*@\nloop invariant i1; loop invariant i2; loop invariant i3; loop invariant i4; loop invariant i5; loop invariant i6; loop invariant i7; loop invariant i8; loop invariant i9; loop invariant i10; loop invariant i11; loop invariant i12; loop invariant i13; loop invariant i14; loop invariant i15; loop invariant i16; loop invariant i17; loop invariant i18; loop invariant i19; loop invariant i20; loop invariant i21; loop invariant i22; loop invariant i23; loop invariant i24; loop invariant i25; loop invariant i26; loop invariant i27; loop invariant i28; loop invariant i29; loop invariant i30; loop invariant i31; loop invariant i32; loop invariant i33; loop invariant i34; loop invariant i35; loop invariant i36; loop invariant i37; loop invariant i38; loop invariant i39; loop invariant i40; loop invariant i41; loop invariant i42; loop invariant i43; loop invariant i44; loop invariant i45; loop invariant i46; loop invariant i47; loop invariant i48; loop invariant i49; loop invariant i50; loop invariant i51; loop invariant i52; loop invariant i53; loop invariant i54; loop invariant i55; loop invariant i56; loop invariant i57; loop invariant i58; loop invariant i59; loop invariant i60; loop invariant i61; loop invariant i62; loop invariant i63; loop invariant i64; loop invariant i65; loop invariant i66; loop invariant i67; loop invariant i68; loop invariant i69; loop invariant i70; loop invariant i71; loop invariant i72; loop invariant i73; loop invariant i74; loop invariant i75; loop invariant i76; loop invariant i77; loop invariant i78; loop invariant i79; loop invariant i80; loop invariant i81; loop invariant i82; loop invariant i83; loop invariant i84; loop invariant i85; loop invariant i86; loop invariant i87; loop invariant i88; loop invariant i89; loop invariant i90; loop invariant i91; loop invariant i92; loop invariant i93; loop invariant i94; loop invariant i95; loop invariant i96; loop invariant i97; loop invariant i98; loop invariant i99; loop invariant i100; loop invariant i101; loop invariant i102; loop invariant i103; loop invariant i104; loop invariant i105; loop invariant i106; loop invariant i107; loop invariant i108; loop invariant i109; loop invariant i110; loop invariant i111; loop invariant i112; loop invariant i113; loop invariant i114; loop invariant i115; loop invariant i116; loop invariant i117; loop invariant i118; loop invariant i119; loop invariant i120; loop invariant i121; loop invariant i122; loop invariant i123; loop invariant i124; loop invariant i125; loop invariant i126; loop invariant i127; loop invariant i128; loop invariant i129; loop invariant i130; loop invariant i131; loop invariant i132; loop invariant i133; loop invariant i134; loop invariant i135; loop invariant i136; loop invariant i137; loop invariant i138; loop invariant i139; loop invariant i140; loop invariant i141; loop invariant i142; loop invariant i143; loop invariant i144; loop invariant i145; loop invariant i146; loop invariant i147; loop invariant i148; loop invariant i149; loop invariant i150; loop invariant i151; loop invariant i152; loop invariant i153; loop invariant i154; loop invariant i155; loop invariant i156; loop invariant i157; loop invariant i158;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= buf <= buflim;loop invariant buf < bufferlen;loop invariant 0 <= in <= inlen;loop invariant in < inlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= buf <= bufferlen;\nloop invariant 0 <= in <= inlen;\nloop invariant 0 <= buflim <= bufferlen-2;\nloop invariant buf <= buflim;\nloop invariant buf < bufferlen;\nloop invariant in < inlen;\nloop invariant 0 <= in + (buf + 1) < inlen;\nloop invariant 0 <= in + buf < inlen;\nloop invariant 0 <= in + (buflim + 1) < inlen;\nloop invariant 0 <= in + buflim < inlen;\nloop invariant 0 <= buf + 1 < bufferlen;\nloop invariant 0 <= buf < bufferlen;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= buf;\nloop invariant 0 <= buf < bufferlen;\nloop invariant 0 <= in;\nloop invariant 0 <= in < inlen;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= buf <= bufferlen;\nloop invariant 0 <= in <= inlen;\nloop invariant unknown_int() ==> (buf < buflim);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= buf <= bufferlen;\nloop invariant i2: 0 <= in <= inlen;\n\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= buf && buf < bufferlen;\nloop invariant 0 <= in && in <= inlen;\nloop invariant buf < buflim ==> in + 2 == inlen - 1;\nloop invariant buf >= buflim ==> in + 2 <= inlen;\nloop invariant buf < buflim ==> in < inlen;\nloop invariant buf >= buflim ==> in == inlen;\nloop invariant buf < buflim ==> in >= 0;\nloop invariant buf >= buflim ==> in > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\n\nloop invariant i2: 0 <= in && in <= inlen;\n\n\nloop invariant i5: buf < buflim ==> in < inlen;\n\nloop invariant i7: buf < buflim ==> in >= 0;\n\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= in <= inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buflim <= bufferlen - 1;\nloop invariant in < inlen;\nloop invariant buf < buflim;\nloop invariant buflim < bufferlen - 1;\nloop invariant in < inlen;\nloop invariant 0 <= buf <= buflim;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= in <= inlen;\nloop invariant i2: 0 <= buf <= buflim;\nloop invariant i3: buflim <= bufferlen - 1;\nloop invariant i4: in < inlen;\n\nloop invariant i6: buflim < bufferlen - 1;\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 18,
                "annotations": "```\n/*@\nloop invariant 0 <= inlen <= inlen;\nloop invariant 0 <= bufferlen <= bufferlen;\nloop invariant 0 <= buflim <= bufferlen - 2;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant inlen <= buflim + 2;\nloop invariant buf <= bufferlen;\nloop invariant bufferlen <= buflim + 2;\nloop invariant unknown_int() == 1 ==> buf == buflim;\nloop invariant unknown_int() == 0 ==> buf == buflim + 1;\nloop invariant unknown_int() == 1 ==> in == inlen;\nloop invariant unknown_int() == 0 ==> in == inlen + 1;\nloop invariant buf < bufferlen ==> in < inlen;\nloop invariant buf >= bufferlen ==> in >= inlen;\nloop invariant buf < bufferlen ==> unknown_int() == 1;\nloop invariant buf >= bufferlen ==> unknown_int() == 0;\nloop invariant unknown_int() == 1 ==> unknown_int() == 1;\nloop invariant unknown_int() == 0 ==> unknown_int() == 0;\nloop invariant unknown_int() == 1 ==> buf <= buflim;\nloop invariant unknown_int() == 0 ==> buf <= buflim + 1;\nloop invariant unknown_int() == 1 ==> in <= inlen;\nloop invariant unknown_int() == 0 ==> in <= inlen + 1;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\nloop invariant unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant unknown_int() == 1 ==> in < inlen;\nloop invariant unknown_int() == 0 ==> in >= inlen;\nloop invariant unknown_int() == 1 ==> buf < bufferlen;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= inlen <= inlen;\nloop invariant i2: 0 <= bufferlen <= bufferlen;\nloop invariant i3: 0 <= buflim <= bufferlen - 2;\nloop invariant i4: 0 <= buf <= buflim;\nloop invariant i5: 0 <= in <= inlen;\n\nloop invariant i7: buf <= bufferlen;\nloop invariant i8: bufferlen <= buflim + 2;\n\n\n\n\nloop invariant i13: buf < bufferlen ==> in < inlen;\nloop invariant i14: buf >= bufferlen ==> in >= inlen;\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= in;\nloop invariant in < inlen;\nloop invariant 0 <= buf;\nloop invariant buf < bufferlen;\nloop invariant buflim == bufferlen - 2;\nloop invariant buf <= buflim;\nloop invariant if (unknown_int()) ==> (0 <= buf);\nloop invariant if (unknown_int()) ==> (buf < bufferlen);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= in;\nloop invariant i2: in < inlen;\nloop invariant i3: 0 <= buf;\nloop invariant i4: buf < bufferlen;\nloop invariant i5: buflim == bufferlen - 2;\nloop invariant i6: buf <= buflim;\n\n\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= buf <= bufferlen - 1;\nloop invariant 0 <= in <= inlen - 1;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf + 1 <= in;\nloop invariant (unknown_int() == 1) ==> buflim <= buf + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\n\nloop invariant i2: 0 <= in <= inlen - 1;\nloop invariant i3: 0 <= buf <= buflim;\nloop invariant i4: 0 <= in <= inlen;\n\n\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= in;\nloop invariant in < inlen;\nloop invariant 0 <= buf;\nloop invariant buf <= bufferlen;\nloop invariant buf <= buflim;\nloop invariant unknown_int() implies buf < bufferlen;\nloop invariant unknown_int() implies buf <= buflim;\nloop invariant unknown_int() implies buf <= in;\nloop invariant unknown_int() implies in < inlen;\nloop invariant unknown_int() implies in <= buflim;\nloop invariant unknown_int() implies buflim < bufferlen;\nloop invariant unknown_int() implies buflim <= bufferlen;\nloop invariant unknown_int() implies buf == buflim ==> buf + 1 == buflim + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= in;\nloop invariant i2: in < inlen;\nloop invariant i3: 0 <= buf;\nloop invariant i4: buf <= bufferlen;\nloop invariant i5: buf <= buflim;\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= buf;\nloop invariant buflim <= bufferlen;\nloop invariant 0 <= in;\nloop invariant in <= inlen;\nloop invariant buf < bufferlen;\nloop invariant in < inlen;\nloop invariant buf <= buflim;\nloop invariant buf <= bufferlen - 2;\nloop invariant buf <= bufferlen - 1;\nloop invariant in <= inlen - 1;\nloop invariant 0 <= buf ==> 0 <= in;\nloop invariant buflim <= bufferlen ==> buflim <= buf;\nloop invariant buflim <= bufferlen ==> buflim <= in;\nloop invariant buflim <= bufferlen ==> buflim <= inlen;\nloop invariant buflim <= bufferlen ==> buflim <= bufferlen - 2;\nloop invariant buflim <= bufferlen ==> buflim <= bufferlen - 1;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 1;\nloop invariant buflim <= bufferlen ==> buflim <= inlen;\nloop invariant buflim <= bufferlen ==> buflim <= bufferlen - 3;\nloop invariant buflim <= bufferlen ==> buflim <= bufferlen - 4;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 2;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 3;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 4;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 5;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 6;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 7;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 8;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 9;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 10;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 11;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 12;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 13;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 14;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 15;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 16;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 17;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 18;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 19;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 20;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 21;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 22;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 23;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 24;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 25;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 26;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 27;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 28;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 29;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 30;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 31;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 32;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 33;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 34;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 35;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 36;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 37;\nloop invariant buflim <= bufferlen ==> buflim <= inlen - 38;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= buf;\nloop invariant i2: buflim <= bufferlen;\nloop invariant i3: 0 <= in;\nloop invariant i4: in <= inlen;\nloop invariant i5: buf < bufferlen;\nloop invariant i6: in < inlen;\nloop invariant i7: buf <= buflim;\nloop invariant i8: buf <= bufferlen - 2;\nloop invariant i9: buf <= bufferlen - 1;\nloop invariant i10: in <= inlen - 1;\nloop invariant i11: 0 <= buf ==> 0 <= in;\n\n\nloop invariant i14: buflim <= bufferlen ==> buflim <= inlen;\nloop invariant i15: buflim <= bufferlen ==> buflim <= bufferlen - 2;\nloop invariant i16: buflim <= bufferlen ==> buflim <= bufferlen - 1;\nloop invariant i17: buflim <= bufferlen ==> buflim <= inlen - 1;\n\n\nloop invariant i20: buflim <= bufferlen ==> buflim <= inlen - 2;\nloop invariant i21: buflim <= bufferlen ==> buflim <= inlen - 3;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\n\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\n\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= buf <= bufferlen;\nloop invariant 0 <= in <= inlen;\nloop invariant buf < buflim ==> buf < bufferlen;\nloop invariant buf < buflim ==> buf >= 0;\nloop invariant buf == buflim ==> buf < bufferlen;\nloop invariant buf == buflim ==> buf >= 0;\nloop invariant in < inlen ==> in >= 0;\nloop invariant buflim < bufferlen;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= buf <= bufferlen;\nloop invariant i2: 0 <= in <= inlen;\nloop invariant i3: buf < buflim ==> buf < bufferlen;\nloop invariant i4: buf < buflim ==> buf >= 0;\nloop invariant i5: buf == buflim ==> buf < bufferlen;\nloop invariant i6: buf == buflim ==> buf >= 0;\nloop invariant i7: in < inlen ==> in >= 0;\nloop invariant i8: buflim < bufferlen;\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant i1; loop invariant i2; loop invariant i3; loop invariant i4; loop invariant i5; loop invariant i6; loop invariant i7; loop invariant i8; loop invariant i9; loop invariant i10; loop invariant i11; loop invariant i12; loop invariant i13; loop invariant i14; loop invariant i15; loop invariant i16; loop invariant i17; loop invariant i18; loop invariant i19; loop invariant i20; loop invariant i21; loop invariant i22; loop invariant i23; loop invariant i24; loop invariant i25; loop invariant i26; loop invariant i27; loop invariant i28; loop invariant i29; loop invariant i30; loop invariant i31; loop invariant i32; loop invariant i33; loop invariant i34; loop invariant i35; loop invariant i36; loop invariant i37; loop invariant i38; loop invariant i39; loop invariant i40; loop invariant i41; loop invariant i42; loop invariant i43; loop invariant i44; loop invariant i45; loop invariant i46; loop invariant i47; loop invariant i48; loop invariant i49; loop invariant i50; loop invariant i51; loop invariant i52; loop invariant i53; loop invariant i54; loop invariant i55; loop invariant i56; loop invariant i57; loop invariant i58; loop invariant i59; loop invariant i60; loop invariant i61; loop invariant i62; loop invariant i63; loop invariant i64; loop invariant i65; loop invariant i66; loop invariant i67; loop invariant i68; loop invariant i69; loop invariant i70; loop invariant i71; loop invariant i72; loop invariant i73; loop invariant i74; loop invariant i75; loop invariant i76; loop invariant i77; loop invariant i78; loop invariant i79; loop invariant i80; loop invariant i81; loop invariant i82; loop invariant i83; loop invariant i84; loop invariant i85; loop invariant i86; loop invariant i87; loop invariant i88; loop invariant i89; loop invariant i90; loop invariant i91; loop invariant i92; loop invariant i93; loop invariant i94; loop invariant i95; loop invariant i96; loop invariant i97; loop invariant i98; loop invariant i99; loop invariant i100; loop invariant i101; loop invariant i102; loop invariant i103; loop invariant i104; loop invariant i105; loop invariant i106; loop invariant i107; loop invariant i108; loop invariant i109; loop invariant i110; loop invariant i111; loop invariant i112; loop invariant i113; loop invariant i114; loop invariant i115; loop invariant i116; loop invariant i117; loop invariant i118; loop invariant i119; loop invariant i120; loop invariant i121; loop invariant i122; loop invariant i123; loop invariant i124; loop invariant i125; loop invariant i126; loop invariant i127; loop invariant i128; loop invariant i129; loop invariant i130; loop invariant i131; loop invariant i132; loop invariant i133; loop invariant i134; loop invariant i135; loop invariant i136; loop invariant i137; loop invariant i138; loop invariant i139; loop invariant i140; loop invariant i141; loop invariant i142; loop invariant i143; loop invariant i144; loop invariant i145; loop invariant i146; loop invariant i147; loop invariant i148; loop invariant i149; loop invariant i150; loop invariant i151; loop invariant i152; loop invariant i153; loop invariant i154; loop invariant i155; loop invariant i156; loop invariant i157; loop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\n\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= buf <= buflim;loop invariant buf < bufferlen;loop invariant 0 <= in <= inlen;loop invariant in < inlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= buf <= buflim;loop invariant buf < bufferlen;loop invariant 0 <= in <= inlen;loop invariant in < inlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= buf <= bufferlen;\nloop invariant 0 <= in <= inlen;\nloop invariant 0 <= buflim <= bufferlen-2;\nloop invariant buf <= buflim;\nloop invariant buf < bufferlen;\nloop invariant in < inlen;\nloop invariant 0 <= in + (buf + 1) < inlen;\nloop invariant 0 <= in + buf < inlen;\nloop invariant 0 <= in + (buflim + 1) < inlen;\nloop invariant 0 <= in + buflim < inlen;\nloop invariant 0 <= buf + 1 < bufferlen;\nloop invariant 0 <= buf < bufferlen;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\nloop invariant buf + 1 < bufferlen;\nloop invariant buf < buflim;\nloop invariant buf + 1 <= buflim;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= buf <= bufferlen;\nloop invariant i2: 0 <= in <= inlen;\nloop invariant i3: 0 <= buflim <= bufferlen-2;\nloop invariant i4: buf <= buflim;\nloop invariant i5: buf < bufferlen;\nloop invariant i6: in < inlen;\n\n\n\n\nloop invariant i11: 0 <= buf + 1 < bufferlen;\nloop invariant i12: 0 <= buf < bufferlen;\n\nloop invariant i14: buf + 1 < bufferlen;\n\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= buf;\nloop invariant 0 <= buf < bufferlen;\nloop invariant 0 <= in;\nloop invariant 0 <= in < inlen;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= buf;\n\nloop invariant i3: 0 <= in;\nloop invariant i4: 0 <= in < inlen;\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 28: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= buf <= bufferlen;\nloop invariant i2: 0 <= in <= inlen;\nloop invariant i3: unknown_int() ==> (buf < buflim);\nloop invariant i4: 0 <= buf && buf < bufferlen;\nloop invariant i5: 0 <= in && in <= inlen;\nloop invariant i6: buf < buflim ==> in + 2 == inlen - 1;\nloop invariant i7: buf >= buflim ==> in + 2 <= inlen;\nloop invariant i8: buf < buflim ==> in < inlen;\nloop invariant i9: buf >= buflim ==> in == inlen;\nloop invariant i10: buf < buflim ==> in >= 0;\nloop invariant i11: buf >= buflim ==> in > 0;\nloop invariant i12: 0 <= buf <= buflim;\nloop invariant i13: buflim <= bufferlen - 1;\nloop invariant i14: in < inlen;\nloop invariant i15: buf < buflim;\nloop invariant i16: buflim < bufferlen - 1;\nloop invariant i17: 0 <= inlen <= inlen;\nloop invariant i18: 0 <= bufferlen <= bufferlen;\nloop invariant i19: 0 <= buflim <= bufferlen - 2;\nloop invariant i20: inlen <= buflim + 2;\nloop invariant i21: buf <= bufferlen;\nloop invariant i22: bufferlen <= buflim + 2;\nloop invariant i23: unknown_int() == 1 ==> buf == buflim;\nloop invariant i24: unknown_int() == 0 ==> buf == buflim + 1;\nloop invariant i25: unknown_int() == 1 ==> in == inlen;\nloop invariant i26: unknown_int() == 0 ==> in == inlen + 1;\nloop invariant i27: buf < bufferlen ==> in < inlen;\nloop invariant i28: buf >= bufferlen ==> in >= inlen;\nloop invariant i29: buf < bufferlen ==> unknown_int() == 1;\nloop invariant i30: buf >= bufferlen ==> unknown_int() == 0;\nloop invariant i31: unknown_int() == 1 ==> unknown_int() == 1;\nloop invariant i32: unknown_int() == 0 ==> unknown_int() == 0;\nloop invariant i33: unknown_int() == 1 ==> buf <= buflim;\nloop invariant i34: unknown_int() == 0 ==> buf <= buflim + 1;\nloop invariant i35: unknown_int() == 1 ==> in <= inlen;\nloop invariant i36: unknown_int() == 0 ==> in <= inlen + 1;\nloop invariant i37: unknown_int() == 1 ==> buf < bufferlen;\nloop invariant i38: unknown_int() == 0 ==> buf >= bufferlen;\nloop invariant i39: unknown_int() == 1 ==> in < inlen;\nloop invariant i40: unknown_int() == 0 ==> in >= inlen;\nloop invariant i41: 0 <= in;\nloop invariant i42: 0 <= buf;\nloop invariant i43: buf < bufferlen;\nloop invariant i44: buflim == bufferlen - 2;\nloop invariant i45: buf <= buflim;\nloop invariant i46: if (unknown_int()) ==> (0 <= buf);\nloop invariant i47: if (unknown_int()) ==> (buf < bufferlen);\nloop invariant i48: 0 <= buf <= bufferlen - 1;\nloop invariant i49: 0 <= in <= inlen - 1;\nloop invariant i50: buf + 1 <= in;\nloop invariant i51: (unknown_int() == 1) ==> buflim <= buf + 1;\nloop invariant i52: unknown_int() implies buf < bufferlen;\nloop invariant i53: unknown_int() implies buf <= buflim;\nloop invariant i54: unknown_int() implies buf <= in;\nloop invariant i55: unknown_int() implies in < inlen;\nloop invariant i56: unknown_int() implies in <= buflim;\nloop invariant i57: unknown_int() implies buflim < bufferlen;\nloop invariant i58: unknown_int() implies buflim <= bufferlen;\nloop invariant i59: unknown_int() implies buf == buflim ==> buf + 1 == buflim + 1;\nloop invariant i60: buflim <= bufferlen;\nloop invariant i61: in <= inlen;\nloop invariant i62: buf <= bufferlen - 2;\nloop invariant i63: buf <= bufferlen - 1;\nloop invariant i64: in <= inlen - 1;\nloop invariant i65: 0 <= buf ==> 0 <= in;\nloop invariant i66: buflim <= bufferlen ==> buflim <= buf;\nloop invariant i67: buflim <= bufferlen ==> buflim <= in;\nloop invariant i68: buflim <= bufferlen ==> buflim <= inlen;\nloop invariant i69: buflim <= bufferlen ==> buflim <= bufferlen - 2;\nloop invariant i70: buflim <= bufferlen ==> buflim <= bufferlen - 1;\nloop invariant i71: buflim <= bufferlen ==> buflim <= inlen - 1;\nloop invariant i72: buflim <= bufferlen ==> buflim <= bufferlen - 3;\nloop invariant i73: buflim <= bufferlen ==> buflim <= bufferlen - 4;\nloop invariant i74: buflim <= bufferlen ==> buflim <= inlen - 2;\nloop invariant i75: buflim <= bufferlen ==> buflim <= inlen - 3;\nloop invariant i76: buflim <= bufferlen ==> buflim <= inlen - 4;\nloop invariant i77: buflim <= bufferlen ==> buflim <= inlen - 5;\nloop invariant i78: buflim <= bufferlen ==> buflim <= inlen - 6;\nloop invariant i79: buflim <= bufferlen ==> buflim <= inlen - 7;\nloop invariant i80: buflim <= bufferlen ==> buflim <= inlen - 8;\nloop invariant i81: buflim <= bufferlen ==> buflim <= inlen - 9;\nloop invariant i82: buflim <= bufferlen ==> buflim <= inlen - 10;\nloop invariant i83: buflim <= bufferlen ==> buflim <= inlen - 11;\nloop invariant i84: buflim <= bufferlen ==> buflim <= inlen - 12;\nloop invariant i85: buflim <= bufferlen ==> buflim <= inlen - 13;\nloop invariant i86: buflim <= bufferlen ==> buflim <= inlen - 14;\nloop invariant i87: buflim <= bufferlen ==> buflim <= inlen - 15;\nloop invariant i88: buflim <= bufferlen ==> buflim <= inlen - 16;\nloop invariant i89: buflim <= bufferlen ==> buflim <= inlen - 17;\nloop invariant i90: buflim <= bufferlen ==> buflim <= inlen - 18;\nloop invariant i91: buflim <= bufferlen ==> buflim <= inlen - 19;\nloop invariant i92: buflim <= bufferlen ==> buflim <= inlen - 20;\nloop invariant i93: buflim <= bufferlen ==> buflim <= inlen - 21;\nloop invariant i94: buflim <= bufferlen ==> buflim <= inlen - 22;\nloop invariant i95: buflim <= bufferlen ==> buflim <= inlen - 23;\nloop invariant i96: buflim <= bufferlen ==> buflim <= inlen - 24;\nloop invariant i97: buflim <= bufferlen ==> buflim <= inlen - 25;\nloop invariant i98: buflim <= bufferlen ==> buflim <= inlen - 26;\nloop invariant i99: buflim <= bufferlen ==> buflim <= inlen - 27;\nloop invariant i100: buflim <= bufferlen ==> buflim <= inlen - 28;\nloop invariant i101: buflim <= bufferlen ==> buflim <= inlen - 29;\nloop invariant i102: buflim <= bufferlen ==> buflim <= inlen - 30;\nloop invariant i103: buflim <= bufferlen ==> buflim <= inlen - 31;\nloop invariant i104: buflim <= bufferlen ==> buflim <= inlen - 32;\nloop invariant i105: buflim <= bufferlen ==> buflim <= inlen - 33;\nloop invariant i106: buflim <= bufferlen ==> buflim <= inlen - 34;\nloop invariant i107: buflim <= bufferlen ==> buflim <= inlen - 35;\nloop invariant i108: buflim <= bufferlen ==> buflim <= inlen - 36;\nloop invariant i109: buflim <= bufferlen ==> buflim <= inlen - 37;\nloop invariant i110: buflim <= bufferlen ==> buflim <= inlen - 38;\nloop invariant i111: buf < buflim ==> buf < bufferlen;\nloop invariant i112: buf < buflim ==> buf >= 0;\nloop invariant i113: buf == buflim ==> buf < bufferlen;\nloop invariant i114: buf == buflim ==> buf >= 0;\nloop invariant i115: in < inlen ==> in >= 0;\nloop invariant i116: buflim < bufferlen;\nloop invariant i117: i1; loop invariant i2; loop invariant i3; loop invariant i4; loop invariant i5; loop invariant i6; loop invariant i7; loop invariant i8; loop invariant i9; loop invariant i10; loop invariant i11; loop invariant i12; loop invariant i13; loop invariant i14; loop invariant i15; loop invariant i16; loop invariant i17; loop invariant i18; loop invariant i19; loop invariant i20; loop invariant i21; loop invariant i22; loop invariant i23; loop invariant i24; loop invariant i25; loop invariant i26; loop invariant i27; loop invariant i28; loop invariant i29; loop invariant i30; loop invariant i31; loop invariant i32; loop invariant i33; loop invariant i34; loop invariant i35; loop invariant i36; loop invariant i37; loop invariant i38; loop invariant i39; loop invariant i40; loop invariant i41; loop invariant i42; loop invariant i43; loop invariant i44; loop invariant i45; loop invariant i46; loop invariant i47; loop invariant i48; loop invariant i49; loop invariant i50; loop invariant i51; loop invariant i52; loop invariant i53; loop invariant i54; loop invariant i55; loop invariant i56; loop invariant i57; loop invariant i58; loop invariant i59; loop invariant i60; loop invariant i61; loop invariant i62; loop invariant i63; loop invariant i64; loop invariant i65; loop invariant i66; loop invariant i67; loop invariant i68; loop invariant i69; loop invariant i70; loop invariant i71; loop invariant i72; loop invariant i73; loop invariant i74; loop invariant i75; loop invariant i76; loop invariant i77; loop invariant i78; loop invariant i79; loop invariant i80; loop invariant i81; loop invariant i82; loop invariant i83; loop invariant i84; loop invariant i85; loop invariant i86; loop invariant i87; loop invariant i88; loop invariant i89; loop invariant i90; loop invariant i91; loop invariant i92; loop invariant i93; loop invariant i94; loop invariant i95; loop invariant i96; loop invariant i97; loop invariant i98; loop invariant i99; loop invariant i100; loop invariant i101; loop invariant i102; loop invariant i103; loop invariant i104; loop invariant i105; loop invariant i106; loop invariant i107; loop invariant i108; loop invariant i109; loop invariant i110; loop invariant i111; loop invariant i112; loop invariant i113; loop invariant i114; loop invariant i115; loop invariant i116; loop invariant i117; loop invariant i118; loop invariant i119; loop invariant i120; loop invariant i121; loop invariant i122; loop invariant i123; loop invariant i124; loop invariant i125; loop invariant i126; loop invariant i127; loop invariant i128; loop invariant i129; loop invariant i130; loop invariant i131; loop invariant i132; loop invariant i133; loop invariant i134; loop invariant i135; loop invariant i136; loop invariant i137; loop invariant i138; loop invariant i139; loop invariant i140; loop invariant i141; loop invariant i142; loop invariant i143; loop invariant i144; loop invariant i145; loop invariant i146; loop invariant i147; loop invariant i148; loop invariant i149; loop invariant i150; loop invariant i151; loop invariant i152; loop invariant i153; loop invariant i154; loop invariant i155; loop invariant i156; loop invariant i157; loop invariant i158;\nloop invariant i118: 0 <= buf <= buflim;loop invariant buf < bufferlen;loop invariant 0 <= in <= inlen;loop invariant in < inlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;\nloop invariant i119: 0 <= buflim <= bufferlen-2;\nloop invariant i120: 0 <= in + (buf + 1) < inlen;\nloop invariant i121: 0 <= in + buf < inlen;\nloop invariant i122: 0 <= in + (buflim + 1) < inlen;\nloop invariant i123: 0 <= in + buflim < inlen;\nloop invariant i124: 0 <= buf + 1 < bufferlen;\nloop invariant i125: 0 <= buf < bufferlen;\nloop invariant i126: buf + 1 <= buflim;\nloop invariant i127: buf + 1 < bufferlen;\nloop invariant i128: 0 <= in < inlen;\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
        "combined_annotation_num_solver_calls": 38,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= buf <= bufferlen;\nloop invariant i2: 0 <= in <= inlen;\n\nloop invariant i4: 0 <= buf && buf < bufferlen;\nloop invariant i5: 0 <= in && in <= inlen;\n\n\nloop invariant i8: buf < buflim ==> in < inlen;\n\nloop invariant i10: buf < buflim ==> in >= 0;\n\nloop invariant i12: 0 <= buf <= buflim;\nloop invariant i13: buflim <= bufferlen - 1;\nloop invariant i14: in < inlen;\n\nloop invariant i16: buflim < bufferlen - 1;\nloop invariant i17: 0 <= inlen <= inlen;\nloop invariant i18: 0 <= bufferlen <= bufferlen;\nloop invariant i19: 0 <= buflim <= bufferlen - 2;\n\nloop invariant i21: buf <= bufferlen;\nloop invariant i22: bufferlen <= buflim + 2;\n\n\n\n\nloop invariant i27: buf < bufferlen ==> in < inlen;\nloop invariant i28: buf >= bufferlen ==> in >= inlen;\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i41: 0 <= in;\nloop invariant i42: 0 <= buf;\nloop invariant i43: buf < bufferlen;\nloop invariant i44: buflim == bufferlen - 2;\nloop invariant i45: buf <= buflim;\n\n\nloop invariant i48: 0 <= buf <= bufferlen - 1;\nloop invariant i49: 0 <= in <= inlen - 1;\n\n\n\n\n\n\n\n\n\n\nloop invariant i60: buflim <= bufferlen;\nloop invariant i61: in <= inlen;\nloop invariant i62: buf <= bufferlen - 2;\nloop invariant i63: buf <= bufferlen - 1;\nloop invariant i64: in <= inlen - 1;\nloop invariant i65: 0 <= buf ==> 0 <= in;\n\n\nloop invariant i68: buflim <= bufferlen ==> buflim <= inlen;\nloop invariant i69: buflim <= bufferlen ==> buflim <= bufferlen - 2;\nloop invariant i70: buflim <= bufferlen ==> buflim <= bufferlen - 1;\nloop invariant i71: buflim <= bufferlen ==> buflim <= inlen - 1;\n\n\nloop invariant i74: buflim <= bufferlen ==> buflim <= inlen - 2;\nloop invariant i75: buflim <= bufferlen ==> buflim <= inlen - 3;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i111: buf < buflim ==> buf < bufferlen;\nloop invariant i112: buf < buflim ==> buf >= 0;\nloop invariant i113: buf == buflim ==> buf < bufferlen;\nloop invariant i114: buf == buflim ==> buf >= 0;\nloop invariant i115: in < inlen ==> in >= 0;\nloop invariant i116: buflim < bufferlen;\n\nloop invariant i118: 0 <= buf <= buflim;loop invariant buf < bufferlen;loop invariant 0 <= in <= inlen;loop invariant in < inlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;loop invariant buflim < bufferlen;loop invariant buf <= buflim;loop invariant in < inlen;loop invariant buf < bufferlen;\nloop invariant i119: 0 <= buflim <= bufferlen-2;\n\n\n\n\nloop invariant i124: 0 <= buf + 1 < bufferlen;\nloop invariant i125: 0 <= buf < bufferlen;\n\nloop invariant i127: buf + 1 < bufferlen;\nloop invariant i128: 0 <= in < inlen;\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c"
        ],
        "skipped": [],
        "total": 104,
        "success_count": 92,
        "failure_count": 12,
        "success_rate": 0.8846153846153846
    }
}