{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-lit/gsv2008.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\nint main() {\n    int x,y;\n    x = -50;\n    y = unknown_int();\n    if (!(-1000 < y && y < LARGE_INT)) return 0;\n    while (x < 0) {\n\tx = x + y;\n\ty++;\n    }\n    {;\n//@ assert(y > 0);\n}\n\n    return 0;\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= y;\nloop invariant y <= LARGE_INT;\nloop invariant x >= -50;\nloop invariant y > 0;\nloop invariant x >= y - LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= LARGE_INT;\nloop invariant -50 <= x <= LARGE_INT * LARGE_INT;\nloop invariant x <= LARGE_INT * LARGE_INT;\nloop invariant y <= LARGE_INT;\nloop invariant x + y >= 0;\nloop invariant x + y <= LARGE_INT * LARGE_INT;\nloop invariant y > 0 ==> x >= 0;\nloop invariant y > 0 ==> x <= LARGE_INT * LARGE_INT;\nloop invariant y > 0 ==> x < LARGE_INT * LARGE_INT;\nloop invariant y > 0 ==> x <= LARGE_INT * LARGE_INT;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y < LARGE_INT;\nloop invariant x >= -50;\nloop invariant x >= -50 + y;\nloop invariant x < 0 ==> x >= -50 + y;\nloop invariant x < 0 ==> x + y < y ==> x < 0;\nloop invariant x < 0 ==> x < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\n*/\n```",
            "```\n/*@\nloop invariant x >= -50;\nloop invariant -1000 <= y <= LARGE_INT;\nloop invariant x < y;\nloop invariant x + y >= -50;\nloop invariant x + y < 1000000;\nloop invariant x + y <= LARGE_INT;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y and y <= LARGE_INT;\nloop invariant x + y >= 0;\nloop invariant x >= -50;\nloop invariant x <= LARGE_INT;\nloop invariant y <= x + y;\nloop invariant y >= 1;\nloop invariant x >= -50 + y;\nloop invariant x <= LARGE_INT + y;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= LARGE_INT;\nloop invariant x >= -50;\nloop invariant x >= -50 + y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= LARGE_INT;\nloop invariant -50 <= x <= -50 + (y - 1) * y / 2;\nloop invariant y > 0 ==> x >= 0;\nloop invariant x < 0 ==> x + y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= LARGE_INT;\nloop invariant x >= -50;\nloop invariant y >= 1;\nloop invariant x >= (y - 1) * y / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 1000000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x + y >= 0;\nloop invariant x <= x + y;\nloop invariant y >= 0;\nloop invariant y <= 1000000;\nloop invariant x <= y + x;\n*/\n```",
            "```\n/*@\nloop invariant y >= -1000;\nloop invariant y < LARGE_INT;\nloop invariant x < 0;\nloop invariant x + y >= -50 + y;\nloop invariant x + y < 0 + y;\nloop invariant y > 0;\n*/\n```",
            "```\n/*@\nloop invariant - 50 <= x <= -50;\nloop invariant 0 <= y <= 1000000;\nloop invariant x + y >= 0;\nloop invariant y > 0 ==> x + y > 0;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= LARGE_INT;\nloop invariant -LARGE_INT <= x <= LARGE_INT;\nloop invariant x + y >= 0 ==> x >= 0;\nloop invariant x + y < 0 ==> x < 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= -50;\nloop invariant 0 <= y <= 1000000;\nloop invariant x >= (y + (-50 + y) * y / 2);\nloop invariant x >= (-1000 + y + (-50 + y) * y / 2);\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= y;\nloop invariant y <= LARGE_INT;\nloop invariant x >= -50;\nloop invariant y > 0;\nloop invariant x >= y - LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\nloop invariant x <= -50 + y + LARGE_INT;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50;\nloop invariant x <= y + LARGE_INT;\nloop invariant x >= -50 + y;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= y is preserved but not established.\nloop invariant y <= LARGE_INT is partially proven to be inductive.\nloop invariant x >= -50 is partially proven to be inductive.\nloop invariant y > 0 is preserved but not established.\nloop invariant x >= y - LARGE_INT is preserved but not established.\nloop invariant x <= y + LARGE_INT is partially proven to be inductive.\nloop invariant x >= -50 + y is preserved but not established.\nloop invariant x <= -50 + y + LARGE_INT is partially proven to be inductive.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\nint main() {\n    int x,y;\n    x = -50;\n    y = unknown_int();\n    if (!(-1000 < y && y < LARGE_INT)) return 0;\n    /*@\n\n\n\n\n\nloop invariant i6: x <= y + LARGE_INT;\n\nloop invariant i8: x <= -50 + y + LARGE_INT;\n*/\nwhile (x < 0) {\n\tx = x + y;\n\ty++;\n    }\n    {;\n//@ assert(y > 0);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= LARGE_INT;\nloop invariant -50 <= x <= LARGE_INT * LARGE_INT;\nloop invariant x <= LARGE_INT * LARGE_INT;\nloop invariant y <= LARGE_INT;\nloop invariant x + y >= 0;\nloop invariant x + y <= LARGE_INT * LARGE_INT;\nloop invariant y > 0 ==> x >= 0;\nloop invariant y > 0 ==> x <= LARGE_INT * LARGE_INT;\nloop invariant y > 0 ==> x < LARGE_INT * LARGE_INT;\nloop invariant y > 0 ==> x <= LARGE_INT * LARGE_INT;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= y <= LARGE_INT is preserved but not established.\nloop invariant -50 <= x <= LARGE_INT * LARGE_INT is partially proven to be inductive.\nloop invariant x <= LARGE_INT * LARGE_INT is partially proven to be inductive.\nloop invariant y <= LARGE_INT is partially proven to be inductive.\nloop invariant x + y >= 0 is preserved but not established.\nloop invariant x + y <= LARGE_INT * LARGE_INT is partially proven to be inductive.\nloop invariant y > 0 ==> x >= 0 is preserved but not established.\nloop invariant y > 0 ==> x <= LARGE_INT * LARGE_INT is partially proven to be inductive.\nloop invariant y > 0 ==> x < LARGE_INT * LARGE_INT is partially proven to be inductive.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\nint main() {\n    int x,y;\n    x = -50;\n    y = unknown_int();\n    if (!(-1000 < y && y < LARGE_INT)) return 0;\n    /*@\n\n\nloop invariant i3: x <= LARGE_INT * LARGE_INT;\n\n\nloop invariant i6: x + y <= LARGE_INT * LARGE_INT;\n\nloop invariant i8: y > 0 ==> x <= LARGE_INT * LARGE_INT;\nloop invariant i9: y > 0 ==> x < LARGE_INT * LARGE_INT;\n*/\nwhile (x < 0) {\n\tx = x + y;\n\ty++;\n    }\n    {;\n//@ assert(y > 0);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\n\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 17: unexpected token ''",
                "houdini_error": "No annotations found"
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= y < LARGE_INT;\nloop invariant x >= -50;\nloop invariant x >= -50 + y;\nloop invariant x < 0 ==> x >= -50 + y;\nloop invariant x < 0 ==> x + y < y ==> x < 0;\nloop invariant x < 0 ==> x < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\nloop invariant x < 0 ==> x < y - 1;\nloop invariant x < 0 ==> x + y < y;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= y < LARGE_INT is preserved but not established.\nloop invariant x >= -50 is partially proven to be inductive.\nloop invariant x >= -50 + y is neither established nor preserved.\nloop invariant x < 0 ==> x >= -50 + y is partially proven to be inductive.\nloop invariant x < 0 ==> x + y < y ==> x < 0 is partially proven to be inductive.\nloop invariant x < 0 ==> x < y is partially proven to be inductive.\nloop invariant x < 0 ==> x < y - 1 is partially proven to be inductive.\nloop invariant x < 0 ==> x + y < y is partially proven to be inductive.\nAssertion y > 0: Unproven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\nint main() {\n    int x,y;\n    x = -50;\n    y = unknown_int();\n    if (!(-1000 < y && y < LARGE_INT)) return 0;\n    /*@\n\n\n\n\nloop invariant i5: x < 0 ==> x + y < y ==> x < 0;\n\n\nloop invariant i8: x < 0 ==> x + y < y;\n*/\nwhile (x < 0) {\n\tx = x + y;\n\ty++;\n    }\n    {;\n//@ assert(y > 0);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x >= -50;\nloop invariant -1000 <= y <= LARGE_INT;\nloop invariant x < y;\nloop invariant x + y >= -50;\nloop invariant x + y < 1000000;\nloop invariant x + y <= LARGE_INT;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\nloop invariant x + y >= -50;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -1000;\nloop invariant x + y >= -1000;\nloop invariant x + y <= 1000000;\nloop invariant x + y > -50;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant x >= -50 is partially proven to be inductive.\nloop invariant -1000 <= y <= LARGE_INT is established but not preserved.\nloop invariant x < y is preserved but not established.\nloop invariant x + y >= -50 is neither established nor preserved.\nloop invariant x + y < 1000000 is established but not preserved.\nloop invariant x + y <= LARGE_INT is partially proven to be inductive.\nloop invariant x + y > -1000 is partially proven to be inductive.\nloop invariant x + y >= -1000 is partially proven to be inductive.\nloop invariant x + y <= 1000000 is partially proven to be inductive.\nloop invariant x + y > -50 is neither established nor preserved.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\nint main() {\n    int x,y;\n    x = -50;\n    y = unknown_int();\n    if (!(-1000 < y && y < LARGE_INT)) return 0;\n    /*@\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (x < 0) {\n\tx = x + y;\n\ty++;\n    }\n    {;\n//@ assert(y > 0);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= y and y <= LARGE_INT;\nloop invariant x + y >= 0;\nloop invariant x >= -50;\nloop invariant x <= LARGE_INT;\nloop invariant y <= x + y;\nloop invariant y >= 1;\nloop invariant x >= -50 + y;\nloop invariant x <= LARGE_INT + y;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\nloop invariant y >= 0;\nloop invariant y <= LARGE_INT;\nloop invariant y >= 1;\nloop invariant y <= LARGE_INT - x;\nloop invariant x <= LARGE_INT - y;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 17: unexpected token 'and'",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\nint main() {\n    int x,y;\n    x = -50;\n    y = unknown_int();\n    if (!(-1000 < y && y < LARGE_INT)) return 0;\n    /*@\n\n\n\n\n\n\n\nloop invariant i8: x <= LARGE_INT + y;\n\n\n\n\n*/\nwhile (x < 0) {\n\tx = x + y;\n\ty++;\n    }\n    {;\n//@ assert(y > 0);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\n\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 17: unexpected token ''",
                "houdini_error": "No annotations found"
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= LARGE_INT;\nloop invariant x >= -50;\nloop invariant x >= -50 + y;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= y <= LARGE_INT is preserved but not established.\nloop invariant x >= -50 is partially proven to be inductive.\nloop invariant x >= -50 + y is neither established nor preserved.\nAssertion y > 0: Unproven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\nint main() {\n    int x,y;\n    x = -50;\n    y = unknown_int();\n    if (!(-1000 < y && y < LARGE_INT)) return 0;\n    /*@\n\n\n\n*/\nwhile (x < 0) {\n\tx = x + y;\n\ty++;\n    }\n    {;\n//@ assert(y > 0);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= LARGE_INT;\nloop invariant -50 <= x <= -50 + (y - 1) * y / 2;\nloop invariant y > 0 ==> x >= 0;\nloop invariant x < 0 ==> x + y >= 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= y <= LARGE_INT is preserved but not established.\nloop invariant -50 <= x <= -50 + (y - 1) * y / 2 is partially proven to be inductive.\nloop invariant y > 0 ==> x >= 0 is preserved but not established.\nloop invariant x < 0 ==> x + y >= 0 is preserved but not established.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\nint main() {\n    int x,y;\n    x = -50;\n    y = unknown_int();\n    if (!(-1000 < y && y < LARGE_INT)) return 0;\n    /*@\n\n\n\n\n*/\nwhile (x < 0) {\n\tx = x + y;\n\ty++;\n    }\n    {;\n//@ assert(y > 0);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= LARGE_INT;\nloop invariant x >= -50;\nloop invariant y >= 1;\nloop invariant x >= (y - 1) * y / 2;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= y <= LARGE_INT is preserved but not established.\nloop invariant x >= -50 is partially proven to be inductive.\nloop invariant y >= 1 is preserved but not established.\nloop invariant x >= (y - 1) * y / 2 is preserved but not established.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\nint main() {\n    int x,y;\n    x = -50;\n    y = unknown_int();\n    if (!(-1000 < y && y < LARGE_INT)) return 0;\n    /*@\n\n\n\n\n*/\nwhile (x < 0) {\n\tx = x + y;\n\ty++;\n    }\n    {;\n//@ assert(y > 0);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 1000000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x + y >= 0;\nloop invariant x <= x + y;\nloop invariant y >= 0;\nloop invariant y <= 1000000;\nloop invariant x <= y + x;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= y <= 1000000 is preserved but not established.\nloop invariant x >= (1 + (y - 1) * y / 2) is preserved but not established.\nloop invariant x + y >= 0 is partially proven to be inductive.\nloop invariant x <= x + y is partially proven to be inductive.\nloop invariant y >= 0 is partially proven to be inductive.\nloop invariant y <= 1000000 is partially proven to be inductive.\nloop invariant x <= y + x is partially proven to be inductive.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\nint main() {\n    int x,y;\n    x = -50;\n    y = unknown_int();\n    if (!(-1000 < y && y < LARGE_INT)) return 0;\n    /*@\n\n\n\n\n\n\n\n*/\nwhile (x < 0) {\n\tx = x + y;\n\ty++;\n    }\n    {;\n//@ assert(y > 0);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant y >= -1000;\nloop invariant y < LARGE_INT;\nloop invariant x < 0;\nloop invariant x + y >= -50 + y;\nloop invariant x + y < 0 + y;\nloop invariant y > 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant y >= -1000 is partially proven to be inductive.\nloop invariant y < LARGE_INT is established but not preserved.\nloop invariant x < 0 is established but not preserved.\nloop invariant x + y >= -50 + y is partially proven to be inductive.\nloop invariant x + y < 0 + y is partially proven to be inductive.\nloop invariant y > 0 is preserved but not established.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\nint main() {\n    int x,y;\n    x = -50;\n    y = unknown_int();\n    if (!(-1000 < y && y < LARGE_INT)) return 0;\n    /*@\nloop invariant i1: y >= -1000;\n\n\n\n\n\n*/\nwhile (x < 0) {\n\tx = x + y;\n\ty++;\n    }\n    {;\n//@ assert(y > 0);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant - 50 <= x <= -50;\nloop invariant 0 <= y <= 1000000;\nloop invariant x + y >= 0;\nloop invariant y > 0 ==> x + y > 0;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\nloop invariant x <= -50 ==> x + y <= -50;\nloop invariant x >= -50 ==> x + y >= -50;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant - 50 <= x <= -50 is partially proven to be inductive.\nloop invariant 0 <= y <= 1000000 is preserved but not established.\nloop invariant x + y >= 0 is preserved but not established.\nloop invariant y > 0 ==> x + y > 0 is preserved but not established.\nloop invariant x >= -50 ==> x + y >= -50 is partially proven to be inductive.\nloop invariant x <= -50 ==> x + y <= -50 is preserved but not established.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\nint main() {\n    int x,y;\n    x = -50;\n    y = unknown_int();\n    if (!(-1000 < y && y < LARGE_INT)) return 0;\n    /*@\n\n\n\n\n\n\n*/\nwhile (x < 0) {\n\tx = x + y;\n\ty++;\n    }\n    {;\n//@ assert(y > 0);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= LARGE_INT;\nloop invariant -LARGE_INT <= x <= LARGE_INT;\nloop invariant x + y >= 0 ==> x >= 0;\nloop invariant x + y < 0 ==> x < 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= y <= LARGE_INT is preserved but not established.\nloop invariant -LARGE_INT <= x <= LARGE_INT is partially proven to be inductive.\nloop invariant x + y >= 0 ==> x >= 0 is neither established nor preserved.\nloop invariant x + y < 0 ==> x < 0 is partially proven to be inductive.\nAssertion y > 0: Unproven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\nint main() {\n    int x,y;\n    x = -50;\n    y = unknown_int();\n    if (!(-1000 < y && y < LARGE_INT)) return 0;\n    /*@\n\n\n\nloop invariant i4: x + y < 0 ==> x < 0;\n*/\nwhile (x < 0) {\n\tx = x + y;\n\ty++;\n    }\n    {;\n//@ assert(y > 0);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= -50;\nloop invariant 0 <= y <= 1000000;\nloop invariant x >= (y + (-50 + y) * y / 2);\nloop invariant x >= (-1000 + y + (-50 + y) * y / 2);\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2));\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= x <= -50 is preserved but not established.\nloop invariant 0 <= y <= 1000000 is partially proven to be inductive.\nloop invariant x >= (y + (-50 + y) * y / 2) is partially proven to be inductive.\nloop invariant x >= (-1000 + y + (-50 + y) * y / 2) is partially proven to be inductive.\nloop invariant x >= (-1000 + (y + (-50 + y) * y / 2)) is partially proven to be inductive.\nAssertion y > 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\nint main() {\n    int x,y;\n    x = -50;\n    y = unknown_int();\n    if (!(-1000 < y && y < LARGE_INT)) return 0;\n    /*@\n\n\n\n\n\n*/\nwhile (x < 0) {\n\tx = x + y;\n\ty++;\n    }\n    {;\n//@ assert(y > 0);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 48: unexpected token 'and'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\nint main() {\n    int x,y;\n    x = -50;\n    y = unknown_int();\n    if (!(-1000 < y && y < LARGE_INT)) return 0;\n    /*@\nloop invariant i1: 0 <= y;\nloop invariant i2: y <= LARGE_INT;\nloop invariant i3: x >= -50;\nloop invariant i4: y > 0;\nloop invariant i5: x >= y - LARGE_INT;\nloop invariant i6: x <= y + LARGE_INT;\nloop invariant i7: x >= -50 + y;\nloop invariant i8: x <= -50 + y + LARGE_INT;\nloop invariant i9: 0 <= y <= LARGE_INT;\nloop invariant i10: -50 <= x <= LARGE_INT * LARGE_INT;\nloop invariant i11: x <= LARGE_INT * LARGE_INT;\nloop invariant i12: x + y >= 0;\nloop invariant i13: x + y <= LARGE_INT * LARGE_INT;\nloop invariant i14: y > 0 ==> x >= 0;\nloop invariant i15: y > 0 ==> x <= LARGE_INT * LARGE_INT;\nloop invariant i16: y > 0 ==> x < LARGE_INT * LARGE_INT;\nloop invariant i17: 0 <= y < LARGE_INT;\nloop invariant i18: x < 0 ==> x >= -50 + y;\nloop invariant i19: x < 0 ==> x + y < y ==> x < 0;\nloop invariant i20: x < 0 ==> x < y;\nloop invariant i21: x < 0 ==> x < y - 1;\nloop invariant i22: x < 0 ==> x + y < y;\nloop invariant i23: -1000 <= y <= LARGE_INT;\nloop invariant i24: x < y;\nloop invariant i25: x + y >= -50;\nloop invariant i26: x + y < 1000000;\nloop invariant i27: x + y <= LARGE_INT;\nloop invariant i28: x + y > -1000;\nloop invariant i29: x + y >= -1000;\nloop invariant i30: x + y <= 1000000;\nloop invariant i31: x + y > -50;\nloop invariant i32: 0 <= y and y <= LARGE_INT;\nloop invariant i33: x <= LARGE_INT;\nloop invariant i34: y <= x + y;\nloop invariant i35: y >= 1;\nloop invariant i36: x <= LARGE_INT + y;\nloop invariant i37: y <= LARGE_INT - x;\nloop invariant i38: x <= LARGE_INT - y;\nloop invariant i39: y >= 0;\nloop invariant i40: -50 <= x <= -50 + (y - 1) * y / 2;\nloop invariant i41: x < 0 ==> x + y >= 0;\nloop invariant i42: x >= (y - 1) * y / 2;\nloop invariant i43: 0 <= y <= 1000000;\nloop invariant i44: x >= (1 + (y - 1) * y / 2);\nloop invariant i45: x <= x + y;\nloop invariant i46: y <= 1000000;\nloop invariant i47: x <= y + x;\nloop invariant i48: y >= -1000;\nloop invariant i49: y < LARGE_INT;\nloop invariant i50: x < 0;\nloop invariant i51: x + y >= -50 + y;\nloop invariant i52: x + y < 0 + y;\nloop invariant i53: - 50 <= x <= -50;\nloop invariant i54: y > 0 ==> x + y > 0;\nloop invariant i55: x >= -50 ==> x + y >= -50;\nloop invariant i56: x <= -50 ==> x + y <= -50;\nloop invariant i57: -LARGE_INT <= x <= LARGE_INT;\nloop invariant i58: x + y >= 0 ==> x >= 0;\nloop invariant i59: x + y < 0 ==> x < 0;\nloop invariant i60: 0 <= x <= -50;\nloop invariant i61: x >= (y + (-50 + y) * y / 2);\nloop invariant i62: x >= (-1000 + y + (-50 + y) * y / 2);\nloop invariant i63: x >= (-1000 + (y + (-50 + y) * y / 2));\n*/\nwhile (x < 0) {\n\tx = x + y;\n\ty++;\n    }\n    {;\n//@ assert(y > 0);\n}\n\n    return 0;\n}",
        "combined_annotation_num_solver_calls": 22,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n#define LARGE_INT 1000000\nextern int unknown_int(void);\n\nint main() {\n    int x,y;\n    x = -50;\n    y = unknown_int();\n    if (!(-1000 < y && y < LARGE_INT)) return 0;\n    /*@\n\n\n\n\n\nloop invariant i6: x <= y + LARGE_INT;\n\nloop invariant i8: x <= -50 + y + LARGE_INT;\n\n\nloop invariant i11: x <= LARGE_INT * LARGE_INT;\n\nloop invariant i13: x + y <= LARGE_INT * LARGE_INT;\n\nloop invariant i15: y > 0 ==> x <= LARGE_INT * LARGE_INT;\nloop invariant i16: y > 0 ==> x < LARGE_INT * LARGE_INT;\n\n\nloop invariant i19: x < 0 ==> x + y < y ==> x < 0;\n\n\nloop invariant i22: x < 0 ==> x + y < y;\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i36: x <= LARGE_INT + y;\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i48: y >= -1000;\n\n\n\n\n\n\n\n\n\n\nloop invariant i59: x + y < 0 ==> x < 0;\n\n\n\n\n*/\nwhile (x < 0) {\n\tx = x + y;\n\ty++;\n    }\n    {;\n//@ assert(y > 0);\n}\n\n    return 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/65.c",
            "../dataset/loop_invariants/code2inv/17.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/sum01_safe.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/04.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/VeriMAP/TRACER-testloop9_VeriMAP_true.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gsv2008.c"
        ],
        "skipped": [],
        "total": 6,
        "success_count": 2,
        "failure_count": 4,
        "success_rate": 0.3333333333333333
    }
}