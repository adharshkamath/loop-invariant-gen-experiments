{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/28.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  while ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (x != 0) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant (x == n) ==> (x == n);\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x == n - k;\nloop invariant x <= k;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant n >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= (n - 1);\nloop invariant x <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= n - (n - x + 1);\nloop invariant x <= n - (n - x + 1);\nloop invariant x >= 0;\nloop invariant x <= n;\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + 1 >= n;\nloop invariant x + 1 <= n;\nloop invariant x + 2 >= n;\nloop invariant x + 2 <= n;\nloop invariant x + 3 >= n;\nloop invariant x + 3 <= n;\nloop invariant x + 4 >= n;\nloop invariant x + 4 <= n;\nloop invariant x + 5 >= n;\nloop invariant x + 5 <= n;\nloop invariant x + 6 >= n;\nloop invariant x + 6 <= n;\nloop invariant x + 7 >= n;\nloop invariant x + 7 <= n;\nloop invariant x + 8 >= n;\nloop invariant x + 8 <= n;\nloop invariant x + 9 >= n;\nloop invariant x + 9 <= n;\nloop invariant x + 10 >= n;\nloop invariant x + 10 <= n;\nloop invariant x + 11 >= n;\nloop invariant x + 11 <= n;\nloop invariant x + 12 >= n;\nloop invariant x + 12 <= n;\nloop invariant x + 13 >= n;\nloop invariant x + 13 <= n;\nloop invariant x + 14 >= n;\nloop invariant x + 14 <= n;\nloop invariant x + 15 >= n;\nloop invariant x + 15 <= n;\nloop invariant x + 16 >= n;\nloop invariant x + 16 <= n;\nloop invariant x + 17 >= n;\nloop invariant x + 17 <= n;\nloop invariant x + 18 >= n;\nloop invariant x + 18 <= n;\nloop invariant x + 19 >= n;\nloop invariant x + 19 <= n;\nloop invariant x + 20 >= n;\nloop invariant x + 20 <= n;\nloop invariant x + 21 >= n;\nloop invariant x + 21 <= n;\nloop invariant x + 22 >= n;\nloop invariant x + 22 <= n;\nloop invariant x + 23 >= n;\nloop invariant x + 23 <= n;\nloop invariant x + 24 >= n;\nloop invariant x + 24 <= n;\nloop invariant x + 25 >= n;\nloop invariant x + 25 <= n;\nloop invariant x + 26 >= n;\nloop invariant x + 26 <= n;\nloop invariant x + 27 >= n;\nloop invariant x + 27 <= n;\nloop invariant x + 28 >= n;\nloop invariant x + 28 <= n;\nloop invariant x + 29 >= n;\nloop invariant x + 29 <= n;\nloop invariant x + 30 >= n;\nloop invariant x + 30 <= n;\nloop invariant x + 31 >= n;\nloop invariant x + 31 <= n;\nloop invariant x + 32 >= n;\nloop invariant x + 32 <= n;\nloop invariant x + 33 >= n;\nloop invariant x + 33 <= n;\nloop invariant x + 34 >= n;\nloop invariant x + 34 <= n;\nloop invariant x + 35 >= n;\nloop invariant x + 35 <= n;\nloop invariant x + 36 >= n;\nloop invariant x + 36 <= n;\nloop invariant x + 37 >= n;\nloop invariant x + 37 <= n;\nloop invariant x + 38 >= n;\nloop invariant x + 38 <= n;\nloop invariant x + 39 >= n;\nloop invariant x + 39 <= n;\nloop invariant x + 40 >= n;\nloop invariant x + 40 <= n;\nloop invariant x + 41 >= n;\nloop invariant x + 41 <= n;\nloop invariant x + 42 >= n;\nloop invariant x + 42 <= n;\nloop invariant x + 43 >= n;\nloop invariant x + 43 <= n;\nloop invariant x + 44 >= n;\nloop invariant x + 44 <= n;\nloop invariant x + 45 >= n;\nloop invariant x + 45 <= n;\nloop invariant x + 46 >= n;\nloop invariant x + 46 <= n;\nloop invariant x + 47 >= n;\nloop invariant x + 47 <= n;\nloop invariant x + 48 >= n;\nloop invariant x + 48 <= n;\nloop invariant x + 49 >= n;\nloop invariant x + 49 <= n;\nloop invariant x + 50 >= n;\nloop invariant x + 50 <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= (n - x) * (x + 1) / 2;\nloop invariant x >= (n - x) * (x + 1) / 2 ==> (x != 0);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x <= n;\nloop invariant (n >= 0) ==> (x >= 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant x <= n;\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x) ==> n >= x;\nloop invariant x == n - (n - x) ==> x <= n;\nloop invariant x == n - (n - x) ==> x == n - (n - x);\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant n >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x == n - y;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x <= n;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= x <= n is preserved but not established.\nloop invariant x <= n is partially proven to be inductive.\nAssertion n < 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\nloop invariant i2: x <= n;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (x != 0) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant (x == n) ==> (x == n);\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= x <= n is preserved but not established.\nloop invariant (x == n) ==> (x == n) is partially proven to be inductive.\nAssertion n < 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\nloop invariant i2: (x == n) ==> (x == n);\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (x != 0) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\n\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 15: unexpected token ''",
                "houdini_error": "No annotations found"
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x == n - k;\nloop invariant x <= k;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant n >= 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 16: unbound logic variable k. Ignoring loop annotation",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\n\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (x != 0) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= (n - 1);\nloop invariant x <= n;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= x <= n is preserved but not established.\nloop invariant x >= (n - 1) is established but not preserved.\nloop invariant x <= n is partially proven to be inductive.\nAssertion n < 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\nloop invariant i3: x <= n;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (x != 0) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= n - (n - x + 1);\nloop invariant x <= n - (n - x + 1);\nloop invariant x >= 0;\nloop invariant x <= n;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= x <= n is preserved but not established.\nloop invariant x >= n - (n - x + 1) is partially proven to be inductive.\nloop invariant x <= n - (n - x + 1) is preserved but not established.\nloop invariant x >= 0 is partially proven to be inductive.\nloop invariant x <= n is partially proven to be inductive.\nAssertion n < 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\nloop invariant i2: x >= n - (n - x + 1);\n\n\nloop invariant i5: x <= n;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (x != 0) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 102,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x + 1 >= n;\nloop invariant x + 1 <= n;\nloop invariant x + 2 >= n;\nloop invariant x + 2 <= n;\nloop invariant x + 3 >= n;\nloop invariant x + 3 <= n;\nloop invariant x + 4 >= n;\nloop invariant x + 4 <= n;\nloop invariant x + 5 >= n;\nloop invariant x + 5 <= n;\nloop invariant x + 6 >= n;\nloop invariant x + 6 <= n;\nloop invariant x + 7 >= n;\nloop invariant x + 7 <= n;\nloop invariant x + 8 >= n;\nloop invariant x + 8 <= n;\nloop invariant x + 9 >= n;\nloop invariant x + 9 <= n;\nloop invariant x + 10 >= n;\nloop invariant x + 10 <= n;\nloop invariant x + 11 >= n;\nloop invariant x + 11 <= n;\nloop invariant x + 12 >= n;\nloop invariant x + 12 <= n;\nloop invariant x + 13 >= n;\nloop invariant x + 13 <= n;\nloop invariant x + 14 >= n;\nloop invariant x + 14 <= n;\nloop invariant x + 15 >= n;\nloop invariant x + 15 <= n;\nloop invariant x + 16 >= n;\nloop invariant x + 16 <= n;\nloop invariant x + 17 >= n;\nloop invariant x + 17 <= n;\nloop invariant x + 18 >= n;\nloop invariant x + 18 <= n;\nloop invariant x + 19 >= n;\nloop invariant x + 19 <= n;\nloop invariant x + 20 >= n;\nloop invariant x + 20 <= n;\nloop invariant x + 21 >= n;\nloop invariant x + 21 <= n;\nloop invariant x + 22 >= n;\nloop invariant x + 22 <= n;\nloop invariant x + 23 >= n;\nloop invariant x + 23 <= n;\nloop invariant x + 24 >= n;\nloop invariant x + 24 <= n;\nloop invariant x + 25 >= n;\nloop invariant x + 25 <= n;\nloop invariant x + 26 >= n;\nloop invariant x + 26 <= n;\nloop invariant x + 27 >= n;\nloop invariant x + 27 <= n;\nloop invariant x + 28 >= n;\nloop invariant x + 28 <= n;\nloop invariant x + 29 >= n;\nloop invariant x + 29 <= n;\nloop invariant x + 30 >= n;\nloop invariant x + 30 <= n;\nloop invariant x + 31 >= n;\nloop invariant x + 31 <= n;\nloop invariant x + 32 >= n;\nloop invariant x + 32 <= n;\nloop invariant x + 33 >= n;\nloop invariant x + 33 <= n;\nloop invariant x + 34 >= n;\nloop invariant x + 34 <= n;\nloop invariant x + 35 >= n;\nloop invariant x + 35 <= n;\nloop invariant x + 36 >= n;\nloop invariant x + 36 <= n;\nloop invariant x + 37 >= n;\nloop invariant x + 37 <= n;\nloop invariant x + 38 >= n;\nloop invariant x + 38 <= n;\nloop invariant x + 39 >= n;\nloop invariant x + 39 <= n;\nloop invariant x + 40 >= n;\nloop invariant x + 40 <= n;\nloop invariant x + 41 >= n;\nloop invariant x + 41 <= n;\nloop invariant x + 42 >= n;\nloop invariant x + 42 <= n;\nloop invariant x + 43 >= n;\nloop invariant x + 43 <= n;\nloop invariant x + 44 >= n;\nloop invariant x + 44 <= n;\nloop invariant x + 45 >= n;\nloop invariant x + 45 <= n;\nloop invariant x + 46 >= n;\nloop invariant x + 46 <= n;\nloop invariant x + 47 >= n;\nloop invariant x + 47 <= n;\nloop invariant x + 48 >= n;\nloop invariant x + 48 <= n;\nloop invariant x + 49 >= n;\nloop invariant x + 49 <= n;\nloop invariant x + 50 >= n;\nloop invariant x + 50 <= n;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant x >= 0 is preserved but not established.\nloop invariant x <= n is partially proven to be inductive.\nloop invariant x + 1 >= n is partially proven to be inductive.\nloop invariant x + 1 <= n is preserved but not established.\nloop invariant x + 2 >= n is partially proven to be inductive.\nloop invariant x + 2 <= n is partially proven to be inductive.\nloop invariant x + 3 >= n is partially proven to be inductive.\nloop invariant x + 3 <= n is partially proven to be inductive.\nloop invariant x + 4 >= n is partially proven to be inductive.\nloop invariant x + 4 <= n is partially proven to be inductive.\nloop invariant x + 5 >= n is partially proven to be inductive.\nloop invariant x + 5 <= n is partially proven to be inductive.\nloop invariant x + 6 >= n is partially proven to be inductive.\nloop invariant x + 6 <= n is partially proven to be inductive.\nloop invariant x + 7 >= n is partially proven to be inductive.\nloop invariant x + 7 <= n is partially proven to be inductive.\nloop invariant x + 8 >= n is partially proven to be inductive.\nloop invariant x + 8 <= n is partially proven to be inductive.\nloop invariant x + 9 >= n is partially proven to be inductive.\nloop invariant x + 9 <= n is partially proven to be inductive.\nloop invariant x + 10 >= n is partially proven to be inductive.\nloop invariant x + 10 <= n is partially proven to be inductive.\nloop invariant x + 11 >= n is partially proven to be inductive.\nloop invariant x + 11 <= n is partially proven to be inductive.\nloop invariant x + 12 >= n is partially proven to be inductive.\nloop invariant x + 12 <= n is partially proven to be inductive.\nloop invariant x + 13 >= n is partially proven to be inductive.\nloop invariant x + 13 <= n is partially proven to be inductive.\nloop invariant x + 14 >= n is partially proven to be inductive.\nloop invariant x + 14 <= n is partially proven to be inductive.\nloop invariant x + 15 >= n is partially proven to be inductive.\nloop invariant x + 15 <= n is partially proven to be inductive.\nloop invariant x + 16 >= n is partially proven to be inductive.\nloop invariant x + 16 <= n is partially proven to be inductive.\nloop invariant x + 17 >= n is partially proven to be inductive.\nloop invariant x + 17 <= n is partially proven to be inductive.\nloop invariant x + 18 >= n is partially proven to be inductive.\nloop invariant x + 18 <= n is partially proven to be inductive.\nloop invariant x + 19 >= n is partially proven to be inductive.\nloop invariant x + 19 <= n is partially proven to be inductive.\nloop invariant x + 20 >= n is partially proven to be inductive.\nloop invariant x + 20 <= n is partially proven to be inductive.\nloop invariant x + 21 >= n is partially proven to be inductive.\nloop invariant x + 21 <= n is partially proven to be inductive.\nloop invariant x + 22 >= n is partially proven to be inductive.\nloop invariant x + 22 <= n is partially proven to be inductive.\nloop invariant x + 23 >= n is partially proven to be inductive.\nloop invariant x + 23 <= n is partially proven to be inductive.\nloop invariant x + 24 >= n is partially proven to be inductive.\nloop invariant x + 24 <= n is partially proven to be inductive.\nloop invariant x + 25 >= n is partially proven to be inductive.\nloop invariant x + 25 <= n is partially proven to be inductive.\nloop invariant x + 26 >= n is partially proven to be inductive.\nloop invariant x + 26 <= n is partially proven to be inductive.\nloop invariant x + 27 >= n is partially proven to be inductive.\nloop invariant x + 27 <= n is partially proven to be inductive.\nloop invariant x + 28 >= n is partially proven to be inductive.\nloop invariant x + 28 <= n is partially proven to be inductive.\nloop invariant x + 29 >= n is partially proven to be inductive.\nloop invariant x + 29 <= n is partially proven to be inductive.\nloop invariant x + 30 >= n is partially proven to be inductive.\nloop invariant x + 30 <= n is partially proven to be inductive.\nloop invariant x + 31 >= n is partially proven to be inductive.\nloop invariant x + 31 <= n is partially proven to be inductive.\nloop invariant x + 32 >= n is partially proven to be inductive.\nloop invariant x + 32 <= n is partially proven to be inductive.\nloop invariant x + 33 >= n is partially proven to be inductive.\nloop invariant x + 33 <= n is partially proven to be inductive.\nloop invariant x + 34 >= n is partially proven to be inductive.\nloop invariant x + 34 <= n is partially proven to be inductive.\nloop invariant x + 35 >= n is partially proven to be inductive.\nloop invariant x + 35 <= n is partially proven to be inductive.\nloop invariant x + 36 >= n is partially proven to be inductive.\nloop invariant x + 36 <= n is partially proven to be inductive.\nloop invariant x + 37 >= n is partially proven to be inductive.\nloop invariant x + 37 <= n is partially proven to be inductive.\nloop invariant x + 38 >= n is partially proven to be inductive.\nloop invariant x + 38 <= n is partially proven to be inductive.\nloop invariant x + 39 >= n is partially proven to be inductive.\nloop invariant x + 39 <= n is partially proven to be inductive.\nloop invariant x + 40 >= n is partially proven to be inductive.\nloop invariant x + 40 <= n is partially proven to be inductive.\nloop invariant x + 41 >= n is partially proven to be inductive.\nloop invariant x + 41 <= n is partially proven to be inductive.\nloop invariant x + 42 >= n is partially proven to be inductive.\nloop invariant x + 42 <= n is partially proven to be inductive.\nloop invariant x + 43 >= n is partially proven to be inductive.\nloop invariant x + 43 <= n is partially proven to be inductive.\nloop invariant x + 44 >= n is partially proven to be inductive.\nloop invariant x + 44 <= n is partially proven to be inductive.\nloop invariant x + 45 >= n is partially proven to be inductive.\nloop invariant x + 45 <= n is partially proven to be inductive.\nloop invariant x + 46 >= n is partially proven to be inductive.\nloop invariant x + 46 <= n is partially proven to be inductive.\nloop invariant x + 47 >= n is partially proven to be inductive.\nloop invariant x + 47 <= n is partially proven to be inductive.\nloop invariant x + 48 >= n is partially proven to be inductive.\nloop invariant x + 48 <= n is partially proven to be inductive.\nloop invariant x + 49 >= n is partially proven to be inductive.\nloop invariant x + 49 <= n is partially proven to be inductive.\nloop invariant x + 50 >= n is partially proven to be inductive.\nloop invariant x + 50 <= n is partially proven to be inductive.\nAssertion n < 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\nloop invariant i2: x <= n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (x != 0) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= (n - x) * (x + 1) / 2;\nloop invariant x >= (n - x) * (x + 1) / 2 ==> (x != 0);\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= x <= n is preserved but not established.\nloop invariant x >= (n - x) * (x + 1) / 2 is established but not preserved.\nloop invariant x >= (n - x) * (x + 1) / 2 ==> (x != 0) is neither established nor preserved.\nAssertion n < 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (x != 0) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\nloop invariant x <= n;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 1 <= x <= n is neither established nor preserved.\nloop invariant x >= 0 is partially proven to be inductive.\nloop invariant x <= n is partially proven to be inductive.\nAssertion n < 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\nloop invariant i3: x <= n;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (x != 0) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x <= n;\nloop invariant (n >= 0) ==> (x >= 0);\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= x <= n is preserved but not established.\nloop invariant x <= n is partially proven to be inductive.\nloop invariant (n >= 0) ==> (x >= 0) is partially proven to be inductive.\nAssertion n < 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\nloop invariant i2: x <= n;\nloop invariant i3: (n >= 0) ==> (x >= 0);\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (x != 0) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= x <= n is preserved but not established.\nAssertion n < 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (x != 0) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant x <= n;\nloop invariant x == n - (n - x);\nloop invariant x == n - (n - x) ==> n >= x;\nloop invariant x == n - (n - x) ==> x <= n;\nloop invariant x == n - (n - x) ==> x == n - (n - x);\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant x >= 0 is preserved but not established.\nloop invariant n >= x is partially proven to be inductive.\nloop invariant x <= n is partially proven to be inductive.\nloop invariant x == n - (n - x) is partially proven to be inductive.\nloop invariant x == n - (n - x) ==> n >= x is partially proven to be inductive.\nloop invariant x == n - (n - x) ==> x <= n is partially proven to be inductive.\nloop invariant x == n - (n - x) ==> x == n - (n - x) is partially proven to be inductive.\nAssertion n < 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\nloop invariant i2: n >= x;\nloop invariant i3: x <= n;\nloop invariant i4: x == n - (n - x);\nloop invariant i5: x == n - (n - x) ==> n >= x;\nloop invariant i6: x == n - (n - x) ==> x <= n;\nloop invariant i7: x == n - (n - x) ==> x == n - (n - x);\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (x != 0) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\n\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 15: unexpected token ''",
                "houdini_error": "No annotations found"
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant n >= 0;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "loop invariant 0 <= x <= n is preserved but not established.\nloop invariant n >= 0 is partially proven to be inductive.\nAssertion n < 0: Partially proven",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (x != 0) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x == n - y;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant y <= n;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\nloop invariant x >= 0;\nloop invariant x <= n - y;\nloop invariant x == n - y;\n*/\n```",
                "checker_output_for_annotations": false,
                "checker_message_for_annotations": "Annotation error on line 16: unbound logic variable y. Ignoring loop annotation",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\nloop invariant i3: x <= n;\n\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (x != 0) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 18: unbound logic variable k. Ignoring loop annotation",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\nloop invariant i1: 0 <= x <= n;\nloop invariant i2: x <= n;\nloop invariant i3: (x == n) ==> (x == n);\nloop invariant i4: x == n - k;\nloop invariant i5: x <= k;\nloop invariant i6: k >= 0;\nloop invariant i7: k <= n;\nloop invariant i8: n >= 0;\nloop invariant i9: x >= (n - 1);\nloop invariant i10: x >= n - (n - x + 1);\nloop invariant i11: x <= n - (n - x + 1);\nloop invariant i12: x >= 0;\nloop invariant i13: x + 1 >= n;\nloop invariant i14: x + 1 <= n;\nloop invariant i15: x + 2 >= n;\nloop invariant i16: x + 2 <= n;\nloop invariant i17: x + 3 >= n;\nloop invariant i18: x + 3 <= n;\nloop invariant i19: x + 4 >= n;\nloop invariant i20: x + 4 <= n;\nloop invariant i21: x + 5 >= n;\nloop invariant i22: x + 5 <= n;\nloop invariant i23: x + 6 >= n;\nloop invariant i24: x + 6 <= n;\nloop invariant i25: x + 7 >= n;\nloop invariant i26: x + 7 <= n;\nloop invariant i27: x + 8 >= n;\nloop invariant i28: x + 8 <= n;\nloop invariant i29: x + 9 >= n;\nloop invariant i30: x + 9 <= n;\nloop invariant i31: x + 10 >= n;\nloop invariant i32: x + 10 <= n;\nloop invariant i33: x + 11 >= n;\nloop invariant i34: x + 11 <= n;\nloop invariant i35: x + 12 >= n;\nloop invariant i36: x + 12 <= n;\nloop invariant i37: x + 13 >= n;\nloop invariant i38: x + 13 <= n;\nloop invariant i39: x + 14 >= n;\nloop invariant i40: x + 14 <= n;\nloop invariant i41: x + 15 >= n;\nloop invariant i42: x + 15 <= n;\nloop invariant i43: x + 16 >= n;\nloop invariant i44: x + 16 <= n;\nloop invariant i45: x + 17 >= n;\nloop invariant i46: x + 17 <= n;\nloop invariant i47: x + 18 >= n;\nloop invariant i48: x + 18 <= n;\nloop invariant i49: x + 19 >= n;\nloop invariant i50: x + 19 <= n;\nloop invariant i51: x + 20 >= n;\nloop invariant i52: x + 20 <= n;\nloop invariant i53: x + 21 >= n;\nloop invariant i54: x + 21 <= n;\nloop invariant i55: x + 22 >= n;\nloop invariant i56: x + 22 <= n;\nloop invariant i57: x + 23 >= n;\nloop invariant i58: x + 23 <= n;\nloop invariant i59: x + 24 >= n;\nloop invariant i60: x + 24 <= n;\nloop invariant i61: x + 25 >= n;\nloop invariant i62: x + 25 <= n;\nloop invariant i63: x + 26 >= n;\nloop invariant i64: x + 26 <= n;\nloop invariant i65: x + 27 >= n;\nloop invariant i66: x + 27 <= n;\nloop invariant i67: x + 28 >= n;\nloop invariant i68: x + 28 <= n;\nloop invariant i69: x + 29 >= n;\nloop invariant i70: x + 29 <= n;\nloop invariant i71: x + 30 >= n;\nloop invariant i72: x + 30 <= n;\nloop invariant i73: x + 31 >= n;\nloop invariant i74: x + 31 <= n;\nloop invariant i75: x + 32 >= n;\nloop invariant i76: x + 32 <= n;\nloop invariant i77: x + 33 >= n;\nloop invariant i78: x + 33 <= n;\nloop invariant i79: x + 34 >= n;\nloop invariant i80: x + 34 <= n;\nloop invariant i81: x + 35 >= n;\nloop invariant i82: x + 35 <= n;\nloop invariant i83: x + 36 >= n;\nloop invariant i84: x + 36 <= n;\nloop invariant i85: x + 37 >= n;\nloop invariant i86: x + 37 <= n;\nloop invariant i87: x + 38 >= n;\nloop invariant i88: x + 38 <= n;\nloop invariant i89: x + 39 >= n;\nloop invariant i90: x + 39 <= n;\nloop invariant i91: x + 40 >= n;\nloop invariant i92: x + 40 <= n;\nloop invariant i93: x + 41 >= n;\nloop invariant i94: x + 41 <= n;\nloop invariant i95: x + 42 >= n;\nloop invariant i96: x + 42 <= n;\nloop invariant i97: x + 43 >= n;\nloop invariant i98: x + 43 <= n;\nloop invariant i99: x + 44 >= n;\nloop invariant i100: x + 44 <= n;\nloop invariant i101: x + 45 >= n;\nloop invariant i102: x + 45 <= n;\nloop invariant i103: x + 46 >= n;\nloop invariant i104: x + 46 <= n;\nloop invariant i105: x + 47 >= n;\nloop invariant i106: x + 47 <= n;\nloop invariant i107: x + 48 >= n;\nloop invariant i108: x + 48 <= n;\nloop invariant i109: x + 49 >= n;\nloop invariant i110: x + 49 <= n;\nloop invariant i111: x + 50 >= n;\nloop invariant i112: x + 50 <= n;\nloop invariant i113: x >= (n - x) * (x + 1) / 2;\nloop invariant i114: x >= (n - x) * (x + 1) / 2 ==> (x != 0);\nloop invariant i115: 1 <= x <= n;\nloop invariant i116: (n >= 0) ==> (x >= 0);\nloop invariant i117: n >= x;\nloop invariant i118: x == n - (n - x);\nloop invariant i119: x == n - (n - x) ==> n >= x;\nloop invariant i120: x == n - (n - x) ==> x <= n;\nloop invariant i121: x == n - (n - x) ==> x == n - (n - x);\nloop invariant i122: x == n - y;\nloop invariant i123: y >= 0;\nloop invariant i124: y <= n;\nloop invariant i125: x <= n - y;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (x != 0) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 111,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\nloop invariant i2: x <= n;\nloop invariant i3: (x == n) ==> (x == n);\n\n\n\n\n\n\nloop invariant i10: x >= n - (n - x + 1);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i116: (n >= 0) ==> (x >= 0);\nloop invariant i117: n >= x;\nloop invariant i118: x == n - (n - x);\nloop invariant i119: x == n - (n - x) ==> n >= x;\nloop invariant i120: x == n - (n - x) ==> x <= n;\nloop invariant i121: x == n - (n - x) ==> x == n - (n - x);\n\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (x != 0) )\n{;\n//@ assert( (n < 0) );\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/accelerating_invariant_generation/dagger/fig2.c",
            "../dataset/loop_invariants/code2inv/33.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark24_conjunctive.c",
            "../dataset/loop_invariants/code2inv/28.c"
        ],
        "failure": [
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-invgen/MADWiFi-encode_ie_ok_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/accelerating_invariant_generation/invgen/MADWiFi-encode_ie_ok.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/vnew2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/bin-suffix-5.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/cggmp2005_true-unreach-call.c",
            "../dataset/loop_invariants/code2inv/84.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/ICE/benchmarks/fig1.v.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/loops/loop-lit/gj2007b_true-unreach-call_true-termination.c",
            "../dataset/loop_invariants/code2inv/70.c",
            "../dataset/loop_invariants/LinearArbitrary-SeaHorn/pie/hola/21.c",
            "../dataset/loop_invariants/code2inv/66.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/MADWiFi-encode_ie_ok.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/overflow_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/mod4.c"
        ],
        "skipped": [],
        "total": 18,
        "success_count": 4,
        "failure_count": 14,
        "success_rate": 0.2222222222222222
    }
}