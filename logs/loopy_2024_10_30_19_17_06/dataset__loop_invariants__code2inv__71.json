{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/71.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  while (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant -36 <= y <= 127;\nloop invariant 0 <= z <= 4392;\nloop invariant c < 36 ==> (z = (36 * y) + c);\nloop invariant c <= 36 ==> (z <= (36 * y) + c);\nloop invariant c >= 0 ==> (z >= (36 * y) + c);\nloop invariant c == 0 ==> (z = (36 * y));\nloop invariant c == 36 ==> (z = (36 * y) + c);\nloop invariant c == 0 ==> (y = (z / 36));\nloop invariant c == 36 ==> (y = (z / 36));\nloop invariant c == 0 ==> (z >= 0);\nloop invariant c == 36 ==> (z >= 0);\nloop invariant c == 0 ==> (y >= 0);\nloop invariant c == 36 ==> (y >= 0);\nloop invariant c == 0 ==> (y <= 127);\nloop invariant c == 36 ==> (y <= 127);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant z <= 4320;\nloop invariant c * 127 <= z <= (c + 1) * 127;\nloop invariant z % 36 == c;\nloop invariant (y >= 0) ==> (z >= 0);\nloop invariant (y >= 0) ==> (c * 127 <= z);\nloop invariant (y >= 0) ==> (z <= (c + 1) * 127);\nloop invariant (y >= 0) ==> (z % 36 == c);\nloop invariant (y >= 127) ==> (y <= 127);\nloop invariant (y >= 127) ==> (z >= 0);\nloop invariant (y >= 127) ==> (c * 127 <= z);\nloop invariant (y >= 127) ==> (z <= (c + 1) * 127);\nloop invariant (y >= 127) ==> (z % 36 == c);\nloop invariant (unknown() ==> (z >= 0));\nloop invariant (unknown() ==> (c * 127 <= z));\nloop invariant (unknown() ==> (z <= (c + 1) * 127));\nloop invariant (unknown() ==> (z % 36 == c));\nloop invariant (y >= 0) ==> (y >= 127) ==> (z >= 0);\nloop invariant (y >= 0) ==> (y >= 127) ==> (c * 127 <= z);\nloop invariant (y >= 0) ==> (y >= 127) ==> (z <= (c + 1) * 127);\nloop invariant (y >= 0) ==> (y >= 127) ==> (z % 36 == c);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 36 * y <= z <= 36 * y + 36;\nloop invariant c >= 0;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\nloop invariant z == 36 * y + c;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 36 ==> z == 36 * y + 36;\nloop invariant c < 36 ==> z < 36 * y + 36;\nloop invariant c > 36 ==> z > 36 * y + 36;\nloop invariant y < 127 ==> z < 36 * y + 36;\nloop invariant y > 127 ==> z > 36 * y + 36;\nloop invariant y == 127 ==> z == 36 * y + 36;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 36 ==> z == 36 * y + 36;\nloop invariant c > 0 ==> c < 36;\nloop invariant c < 36 ==> c > 0;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 35; loop invariant min(y) <= y <= max(y); loop invariant z >= 36 * min(y); loop invariant z <= 36 * max(y);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= c <= 36;\nloop invariant 0 <= z <= 128 * y;\nloop invariant z + (36 - c) >= 0;\nloop invariant 36 * y <= z;\nloop invariant c == 36 ==> z >= 0;\nloop invariant c <= 35 ==> 0 <= z <= 128 * y;\nloop invariant c == 36 ==> 36 * y <= z;\nloop invariant c <= 35 ==> z + (36 - c) >= 0;\nloop invariant c <= 35 ==> c < 36;\nloop invariant c <= 35 ==> z >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c < 36;\nloop invariant y >= 0 && y >= 127;\nloop invariant z >= 0 && z <= (36 * y) + 36;\nloop invariant c + y <= 36 + y;\nloop invariant c + y <= 36 + y;\nloop invariant c + y <= 36 + y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 127;\nloop invariant z == (36 * y) + c;\n*/\n```",
            "```\n/*@\nloop invariant c <= 36;\nloop invariant (0 <= z <= 36 * y);\nloop invariant (c == 0 ==> y >= 0);\nloop invariant (c == 0 ==> y >= 127);\nloop invariant (c == 0 ==> z == (36 * y));\nloop invariant (c > 0 ==> z >= 1);\nloop invariant (c == 36 ==> z <= (36 * y) + 35);\nloop invariant (c == 36 ==> (z % 36) >= 1);\nloop invariant (c == 36 ==> ((z - 1) % 36) == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= 999996;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;loop invariant 0 <= y;loop invariant y >= 127;loop invariant z >= 0;loop invariant z <= 4199997;loop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= (36 * y + c);\nloop invariant (c == 0) ==> (z == (36 * y));\nloop invariant (c == 1) ==> (z == (36 * y + 1));\nloop invariant (c == 2) ==> (z == (36 * y + 2));\nloop invariant (c == 3) ==> (z == (36 * y + 3));\nloop invariant (c == 4) ==> (z == (36 * y + 4));\nloop invariant (c == 5) ==> (z == (36 * y + 5));\nloop invariant (c == 6) ==> (z == (36 * y + 6));\nloop invariant (c == 7) ==> (z == (36 * y + 7));\nloop invariant (c == 8) ==> (z == (36 * y + 8));\nloop invariant (c == 9) ==> (z == (36 * y + 9));\nloop invariant (c == 10) ==> (z == (36 * y + 10));\nloop invariant (c == 11) ==> (z == (36 * y + 11));\nloop invariant (c == 12) ==> (z == (36 * y + 12));\nloop invariant (c == 13) ==> (z == (36 * y + 13));\nloop invariant (c == 14) ==> (z == (36 * y + 14));\nloop invariant (c == 15) ==> (z == (36 * y + 15));\nloop invariant (c == 16) ==> (z == (36 * y + 16));\nloop invariant (c == 17) ==> (z == (36 * y + 17));\nloop invariant (c == 18) ==> (z == (36 * y + 18));\nloop invariant (c == 19) ==> (z == (36 * y + 19));\nloop invariant (c == 20) ==> (z == (36 * y + 20));\nloop invariant (c == 21) ==> (z == (36 * y + 21));\nloop invariant (c == 22) ==> (z == (36 * y + 22));\nloop invariant (c == 23) ==> (z == (36 * y + 23));\nloop invariant (c == 24) ==> (z == (36 * y + 24));\nloop invariant (c == 25) ==> (z == (36 * y + 25));\nloop invariant (c == 26) ==> (z == (36 * y + 26));\nloop invariant (c == 27) ==> (z == (36 * y + 27));\nloop invariant (c == 28) ==> (z == (36 * y + 28));\nloop invariant (c == 29) ==> (z == (36 * y + 29));\nloop invariant (c == 30) ==> (z == (36 * y + 30));\nloop invariant (c == 31) ==> (z == (36 * y + 31));\nloop invariant (c == 32) ==> (z == (36 * y + 32));\nloop invariant (c == 33) ==> (z == (36 * y + 33));\nloop invariant (c == 34) ==> (z == (36 * y + 34));\nloop invariant (c == 35) ==> (z == (36 * y + 35));\nloop invariant (c == 36) ==> (z == (36 * y + 36));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36; loop invariant 36 * y <= z <= 36 * y + 35; loop invariant c >= 0; loop invariant c < 36; loop invariant z >= 0; loop invariant z <= 36 * y + 35; loop invariant c * (c - 1) / 2 <= z - 36 * y; loop invariant z - 36 * y <= c * (c - 1) / 2 + 35; loop invariant c * (c - 1) / 2 <= z - 36 * y ==> c * (c - 1) / 2 <= z - 36 * y + 35; loop invariant z - 36 * y <= c * (c - 1) / 2 + 35 ==> z - 36 * y <= c * (c - 1) / 2 + 35 + 35;\n*/\n```",
            "```\n/*@\nloop invariant c <= 36;\nloop invariant z <= 36 * y + 36;\nloop invariant c * z / 36 <= z;\nloop invariant c * (z - 1) / 36 <= z;\nloop invariant c >= 0;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant 36 * y <= z;\nloop invariant c <= z / 36;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * z / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant c < 36 ==> z >= 36*y + c;\nloop invariant y >= 0;\nloop invariant y >= 127;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y;\nloop invariant 0 <= c <= 35;\nloop invariant z == (36 * y + c);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant -36 <= y <= 127;\nloop invariant 0 <= z <= 4392;\nloop invariant c < 36 ==> (z = (36 * y) + c);\nloop invariant c <= 36 ==> (z <= (36 * y) + c);\nloop invariant c >= 0 ==> (z >= (36 * y) + c);\nloop invariant c == 0 ==> (z = (36 * y));\nloop invariant c == 36 ==> (z = (36 * y) + c);\nloop invariant c == 0 ==> (y = (z / 36));\nloop invariant c == 36 ==> (y = (z / 36));\nloop invariant c == 0 ==> (z >= 0);\nloop invariant c == 36 ==> (z >= 0);\nloop invariant c == 0 ==> (y >= 0);\nloop invariant c == 36 ==> (y >= 0);\nloop invariant c == 0 ==> (y <= 127);\nloop invariant c == 36 ==> (y <= 127);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\n\n\nloop invariant i5: c <= 36 ==> (z <= (36 * y) + c);\nloop invariant i6: c >= 0 ==> (z >= (36 * y) + c);\n\n\n\n\nloop invariant i11: c == 0 ==> (z >= 0);\n\nloop invariant i13: c == 0 ==> (y >= 0);\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 14,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant y >= 0;\nloop invariant z >= 0;\nloop invariant z <= 4320;\nloop invariant c * 127 <= z <= (c + 1) * 127;\nloop invariant z % 36 == c;\nloop invariant (y >= 0) ==> (z >= 0);\nloop invariant (y >= 0) ==> (c * 127 <= z);\nloop invariant (y >= 0) ==> (z <= (c + 1) * 127);\nloop invariant (y >= 0) ==> (z % 36 == c);\nloop invariant (y >= 127) ==> (y <= 127);\nloop invariant (y >= 127) ==> (z >= 0);\nloop invariant (y >= 127) ==> (c * 127 <= z);\nloop invariant (y >= 127) ==> (z <= (c + 1) * 127);\nloop invariant (y >= 127) ==> (z % 36 == c);\nloop invariant (unknown() ==> (z >= 0));\nloop invariant (unknown() ==> (c * 127 <= z));\nloop invariant (unknown() ==> (z <= (c + 1) * 127));\nloop invariant (unknown() ==> (z % 36 == c));\nloop invariant (y >= 0) ==> (y >= 127) ==> (z >= 0);\nloop invariant (y >= 0) ==> (y >= 127) ==> (c * 127 <= z);\nloop invariant (y >= 0) ==> (y >= 127) ==> (z <= (c + 1) * 127);\nloop invariant (y >= 0) ==> (y >= 127) ==> (z % 36 == c);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: y >= 0;\nloop invariant i3: z >= 0;\n\n\n\nloop invariant i7: (y >= 0) ==> (z >= 0);\n\n\n\n\nloop invariant i12: (y >= 127) ==> (z >= 0);\n\n\n\n\n\n\n\nloop invariant i20: (y >= 0) ==> (y >= 127) ==> (z >= 0);\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 36 * y <= z <= 36 * y + 36;\nloop invariant c >= 0;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 0;\nloop invariant z == 36 * y + c;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 36 ==> z == 36 * y + 36;\nloop invariant c < 36 ==> z < 36 * y + 36;\nloop invariant c > 36 ==> z > 36 * y + 36;\nloop invariant y < 127 ==> z < 36 * y + 36;\nloop invariant y > 127 ==> z > 36 * y + 36;\nloop invariant y == 127 ==> z == 36 * y + 36;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 36 ==> z == 36 * y + 36;\nloop invariant c > 0 ==> c < 36;\nloop invariant c < 36 ==> c > 0;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\nloop invariant c == 0 ==> c == 0;\nloop invariant c == 36 ==> c == 36;\nloop invariant c > 0 ==> c > 0;\nloop invariant c < 36 ==> c < 36;\nloop invariant c > 36 ==> c == 36;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\nloop invariant i2: 36 * y <= z <= 36 * y + 36;\nloop invariant i3: c >= 0;\nloop invariant i4: y >= 0;\nloop invariant i5: y >= 127;\nloop invariant i6: z >= 0;\nloop invariant i7: z == 36 * y + c;\nloop invariant i8: c == 0 ==> z == 36 * y;\nloop invariant i9: c == 36 ==> z == 36 * y + 36;\nloop invariant i10: c < 36 ==> z < 36 * y + 36;\nloop invariant i11: c > 36 ==> z > 36 * y + 36;\nloop invariant i12: y < 127 ==> z < 36 * y + 36;\n\n\n\n\nloop invariant i17: c == 0 ==> c == 0;\nloop invariant i18: c == 36 ==> c == 36;\nloop invariant i19: c > 0 ==> c > 0;\nloop invariant i20: c < 36 ==> c < 36;\nloop invariant i21: c > 36 ==> c == 36;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 35; loop invariant min(y) <= y <= max(y); loop invariant z >= 36 * min(y); loop invariant z <= 36 * max(y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= c <= 36;\nloop invariant 0 <= z <= 128 * y;\nloop invariant z + (36 - c) >= 0;\nloop invariant 36 * y <= z;\nloop invariant c == 36 ==> z >= 0;\nloop invariant c <= 35 ==> 0 <= z <= 128 * y;\nloop invariant c == 36 ==> 36 * y <= z;\nloop invariant c <= 35 ==> z + (36 - c) >= 0;\nloop invariant c <= 35 ==> c < 36;\nloop invariant c <= 35 ==> z >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\n\nloop invariant i3: z + (36 - c) >= 0;\nloop invariant i4: 36 * y <= z;\nloop invariant i5: c == 36 ==> z >= 0;\n\nloop invariant i7: c == 36 ==> 36 * y <= z;\nloop invariant i8: c <= 35 ==> z + (36 - c) >= 0;\nloop invariant i9: c <= 35 ==> c < 36;\nloop invariant i10: c <= 35 ==> z >= 0;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c < 36;\nloop invariant y >= 0 && y >= 127;\nloop invariant z >= 0 && z <= (36 * y) + 36;\nloop invariant c + y <= 36 + y;\nloop invariant c + y <= 36 + y;\nloop invariant c + y <= 36 + y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: y >= 0 && y >= 127;\n\nloop invariant i4: c + y <= 36 + y;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant 0 <= z <= 127;\nloop invariant z == (36 * y) + c;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\n\nloop invariant i3: z == (36 * y) + c;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant c <= 36;\nloop invariant (0 <= z <= 36 * y);\nloop invariant (c == 0 ==> y >= 0);\nloop invariant (c == 0 ==> y >= 127);\nloop invariant (c == 0 ==> z == (36 * y));\nloop invariant (c > 0 ==> z >= 1);\nloop invariant (c == 36 ==> z <= (36 * y) + 35);\nloop invariant (c == 36 ==> (z % 36) >= 1);\nloop invariant (c == 36 ==> ((z - 1) % 36) == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: c <= 36;\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= 999996;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y <= 127;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 999996;\nloop invariant c == 0 ==> y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\nloop invariant i3: c == 0 ==> z == 36 * y;\nloop invariant i4: c == 0 ==> z >= 0;\n\n\nloop invariant i7: c == 0 ==> y >= 0;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;loop invariant 0 <= y;loop invariant y >= 127;loop invariant z >= 0;loop invariant z <= 4199997;loop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;loop invariant 0 <= y;loop invariant y >= 127;loop invariant z >= 0;loop invariant z <= 4199997;loop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant i2: c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= (36 * y + c);\nloop invariant (c == 0) ==> (z == (36 * y));\nloop invariant (c == 1) ==> (z == (36 * y + 1));\nloop invariant (c == 2) ==> (z == (36 * y + 2));\nloop invariant (c == 3) ==> (z == (36 * y + 3));\nloop invariant (c == 4) ==> (z == (36 * y + 4));\nloop invariant (c == 5) ==> (z == (36 * y + 5));\nloop invariant (c == 6) ==> (z == (36 * y + 6));\nloop invariant (c == 7) ==> (z == (36 * y + 7));\nloop invariant (c == 8) ==> (z == (36 * y + 8));\nloop invariant (c == 9) ==> (z == (36 * y + 9));\nloop invariant (c == 10) ==> (z == (36 * y + 10));\nloop invariant (c == 11) ==> (z == (36 * y + 11));\nloop invariant (c == 12) ==> (z == (36 * y + 12));\nloop invariant (c == 13) ==> (z == (36 * y + 13));\nloop invariant (c == 14) ==> (z == (36 * y + 14));\nloop invariant (c == 15) ==> (z == (36 * y + 15));\nloop invariant (c == 16) ==> (z == (36 * y + 16));\nloop invariant (c == 17) ==> (z == (36 * y + 17));\nloop invariant (c == 18) ==> (z == (36 * y + 18));\nloop invariant (c == 19) ==> (z == (36 * y + 19));\nloop invariant (c == 20) ==> (z == (36 * y + 20));\nloop invariant (c == 21) ==> (z == (36 * y + 21));\nloop invariant (c == 22) ==> (z == (36 * y + 22));\nloop invariant (c == 23) ==> (z == (36 * y + 23));\nloop invariant (c == 24) ==> (z == (36 * y + 24));\nloop invariant (c == 25) ==> (z == (36 * y + 25));\nloop invariant (c == 26) ==> (z == (36 * y + 26));\nloop invariant (c == 27) ==> (z == (36 * y + 27));\nloop invariant (c == 28) ==> (z == (36 * y + 28));\nloop invariant (c == 29) ==> (z == (36 * y + 29));\nloop invariant (c == 30) ==> (z == (36 * y + 30));\nloop invariant (c == 31) ==> (z == (36 * y + 31));\nloop invariant (c == 32) ==> (z == (36 * y + 32));\nloop invariant (c == 33) ==> (z == (36 * y + 33));\nloop invariant (c == 34) ==> (z == (36 * y + 34));\nloop invariant (c == 35) ==> (z == (36 * y + 35));\nloop invariant (c == 36) ==> (z == (36 * y + 36));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\nloop invariant i2: 0 <= z <= (36 * y + c);\nloop invariant i3: (c == 0) ==> (z == (36 * y));\nloop invariant i4: (c == 1) ==> (z == (36 * y + 1));\nloop invariant i5: (c == 2) ==> (z == (36 * y + 2));\nloop invariant i6: (c == 3) ==> (z == (36 * y + 3));\nloop invariant i7: (c == 4) ==> (z == (36 * y + 4));\nloop invariant i8: (c == 5) ==> (z == (36 * y + 5));\nloop invariant i9: (c == 6) ==> (z == (36 * y + 6));\nloop invariant i10: (c == 7) ==> (z == (36 * y + 7));\nloop invariant i11: (c == 8) ==> (z == (36 * y + 8));\nloop invariant i12: (c == 9) ==> (z == (36 * y + 9));\nloop invariant i13: (c == 10) ==> (z == (36 * y + 10));\nloop invariant i14: (c == 11) ==> (z == (36 * y + 11));\nloop invariant i15: (c == 12) ==> (z == (36 * y + 12));\nloop invariant i16: (c == 13) ==> (z == (36 * y + 13));\nloop invariant i17: (c == 14) ==> (z == (36 * y + 14));\nloop invariant i18: (c == 15) ==> (z == (36 * y + 15));\nloop invariant i19: (c == 16) ==> (z == (36 * y + 16));\nloop invariant i20: (c == 17) ==> (z == (36 * y + 17));\nloop invariant i21: (c == 18) ==> (z == (36 * y + 18));\nloop invariant i22: (c == 19) ==> (z == (36 * y + 19));\nloop invariant i23: (c == 20) ==> (z == (36 * y + 20));\nloop invariant i24: (c == 21) ==> (z == (36 * y + 21));\nloop invariant i25: (c == 22) ==> (z == (36 * y + 22));\nloop invariant i26: (c == 23) ==> (z == (36 * y + 23));\nloop invariant i27: (c == 24) ==> (z == (36 * y + 24));\nloop invariant i28: (c == 25) ==> (z == (36 * y + 25));\nloop invariant i29: (c == 26) ==> (z == (36 * y + 26));\nloop invariant i30: (c == 27) ==> (z == (36 * y + 27));\nloop invariant i31: (c == 28) ==> (z == (36 * y + 28));\nloop invariant i32: (c == 29) ==> (z == (36 * y + 29));\nloop invariant i33: (c == 30) ==> (z == (36 * y + 30));\nloop invariant i34: (c == 31) ==> (z == (36 * y + 31));\nloop invariant i35: (c == 32) ==> (z == (36 * y + 32));\nloop invariant i36: (c == 33) ==> (z == (36 * y + 33));\nloop invariant i37: (c == 34) ==> (z == (36 * y + 34));\nloop invariant i38: (c == 35) ==> (z == (36 * y + 35));\nloop invariant i39: (c == 36) ==> (z == (36 * y + 36));\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36; loop invariant 36 * y <= z <= 36 * y + 35; loop invariant c >= 0; loop invariant c < 36; loop invariant z >= 0; loop invariant z <= 36 * y + 35; loop invariant c * (c - 1) / 2 <= z - 36 * y; loop invariant z - 36 * y <= c * (c - 1) / 2 + 35; loop invariant c * (c - 1) / 2 <= z - 36 * y ==> c * (c - 1) / 2 <= z - 36 * y + 35; loop invariant z - 36 * y <= c * (c - 1) / 2 + 35 ==> z - 36 * y <= c * (c - 1) / 2 + 35 + 35;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36; loop invariant 36 * y <= z <= 36 * y + 35; loop invariant c >= 0; loop invariant c < 36; loop invariant z >= 0; loop invariant z <= 36 * y + 35; loop invariant c * (c - 1) / 2 <= z - 36 * y; loop invariant z - 36 * y <= c * (c - 1) / 2 + 35; loop invariant c * (c - 1) / 2 <= z - 36 * y ==> c * (c - 1) / 2 <= z - 36 * y + 35; loop invariant z - 36 * y <= c * (c - 1) / 2 + 35 ==> z - 36 * y <= c * (c - 1) / 2 + 35 + 35;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant c <= 36;\nloop invariant z <= 36 * y + 36;\nloop invariant c * z / 36 <= z;\nloop invariant c * (z - 1) / 36 <= z;\nloop invariant c >= 0;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant 36 * y <= z;\nloop invariant c <= z / 36;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * z / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\nloop invariant c * (z - 1) / 36 <= z - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: c <= 36;\n\nloop invariant i3: c * z / 36 <= z;\nloop invariant i4: c * (z - 1) / 36 <= z;\nloop invariant i5: c >= 0;\nloop invariant i6: y >= 0;\n\nloop invariant i8: 36 * y <= z;\n\nloop invariant i10: c * (z - 1) / 36 <= z - 1;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant c < 36 ==> z >= 36*y + c;\nloop invariant y >= 0;\nloop invariant y >= 127;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: c < 36 ==> z >= 36*y + c;\nloop invariant i3: y >= 0;\nloop invariant i4: y >= 127;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y;\nloop invariant 0 <= c <= 35;\nloop invariant z == (36 * y + c);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= y;\n\nloop invariant i3: z == (36 * y + c);\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 24: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\nloop invariant i2: -36 <= y <= 127;\nloop invariant i3: 0 <= z <= 4392;\nloop invariant i4: c < 36 ==> (z = (36 * y) + c);\nloop invariant i5: c <= 36 ==> (z <= (36 * y) + c);\nloop invariant i6: c >= 0 ==> (z >= (36 * y) + c);\nloop invariant i7: c == 0 ==> (z = (36 * y));\nloop invariant i8: c == 36 ==> (z = (36 * y) + c);\nloop invariant i9: c == 0 ==> (y = (z / 36));\nloop invariant i10: c == 36 ==> (y = (z / 36));\nloop invariant i11: c == 0 ==> (z >= 0);\nloop invariant i12: c == 36 ==> (z >= 0);\nloop invariant i13: c == 0 ==> (y >= 0);\nloop invariant i14: c == 36 ==> (y >= 0);\nloop invariant i15: c == 0 ==> (y <= 127);\nloop invariant i16: c == 36 ==> (y <= 127);\nloop invariant i17: 0 <= c <= 35;\nloop invariant i18: y >= 0;\nloop invariant i19: z >= 0;\nloop invariant i20: z <= 4320;\nloop invariant i21: c * 127 <= z <= (c + 1) * 127;\nloop invariant i22: z % 36 == c;\nloop invariant i23: (y >= 0) ==> (z >= 0);\nloop invariant i24: (y >= 0) ==> (c * 127 <= z);\nloop invariant i25: (y >= 0) ==> (z <= (c + 1) * 127);\nloop invariant i26: (y >= 0) ==> (z % 36 == c);\nloop invariant i27: (y >= 127) ==> (y <= 127);\nloop invariant i28: (y >= 127) ==> (z >= 0);\nloop invariant i29: (y >= 127) ==> (c * 127 <= z);\nloop invariant i30: (y >= 127) ==> (z <= (c + 1) * 127);\nloop invariant i31: (y >= 127) ==> (z % 36 == c);\nloop invariant i32: (unknown() ==> (z >= 0));\nloop invariant i33: (unknown() ==> (c * 127 <= z));\nloop invariant i34: (unknown() ==> (z <= (c + 1) * 127));\nloop invariant i35: (unknown() ==> (z % 36 == c));\nloop invariant i36: (y >= 0) ==> (y >= 127) ==> (z >= 0);\nloop invariant i37: (y >= 0) ==> (y >= 127) ==> (c * 127 <= z);\nloop invariant i38: (y >= 0) ==> (y >= 127) ==> (z <= (c + 1) * 127);\nloop invariant i39: (y >= 0) ==> (y >= 127) ==> (z % 36 == c);\nloop invariant i40: 36 * y <= z <= 36 * y + 36;\nloop invariant i41: c >= 0;\nloop invariant i42: y >= 127;\nloop invariant i43: z == 36 * y + c;\nloop invariant i44: c == 0 ==> z == 36 * y;\nloop invariant i45: c == 36 ==> z == 36 * y + 36;\nloop invariant i46: c < 36 ==> z < 36 * y + 36;\nloop invariant i47: c > 36 ==> z > 36 * y + 36;\nloop invariant i48: y < 127 ==> z < 36 * y + 36;\nloop invariant i49: y > 127 ==> z > 36 * y + 36;\nloop invariant i50: y == 127 ==> z == 36 * y + 36;\nloop invariant i51: c > 0 ==> c < 36;\nloop invariant i52: c < 36 ==> c > 0;\nloop invariant i53: c == 0 ==> c == 0;\nloop invariant i54: c == 36 ==> c == 36;\nloop invariant i55: c > 0 ==> c > 0;\nloop invariant i56: c < 36 ==> c < 36;\nloop invariant i57: c > 36 ==> c == 36;\nloop invariant i58: 0 <= c <= 35; loop invariant min(y) <= y <= max(y); loop invariant z >= 36 * min(y); loop invariant z <= 36 * max(y);\nloop invariant i59: 1 <= c <= 36;\nloop invariant i60: 0 <= z <= 128 * y;\nloop invariant i61: z + (36 - c) >= 0;\nloop invariant i62: 36 * y <= z;\nloop invariant i63: c == 36 ==> z >= 0;\nloop invariant i64: c <= 35 ==> 0 <= z <= 128 * y;\nloop invariant i65: c == 36 ==> 36 * y <= z;\nloop invariant i66: c <= 35 ==> z + (36 - c) >= 0;\nloop invariant i67: c <= 35 ==> c < 36;\nloop invariant i68: c <= 35 ==> z >= 0;\nloop invariant i69: 0 <= c < 36;\nloop invariant i70: y >= 0 && y >= 127;\nloop invariant i71: z >= 0 && z <= (36 * y) + 36;\nloop invariant i72: c + y <= 36 + y;\nloop invariant i73: 0 <= z <= 127;\nloop invariant i74: z == (36 * y) + c;\nloop invariant i75: c <= 36;\nloop invariant i76: (0 <= z <= 36 * y);\nloop invariant i77: (c == 0 ==> y >= 0);\nloop invariant i78: (c == 0 ==> y >= 127);\nloop invariant i79: (c == 0 ==> z == (36 * y));\nloop invariant i80: (c > 0 ==> z >= 1);\nloop invariant i81: (c == 36 ==> z <= (36 * y) + 35);\nloop invariant i82: (c == 36 ==> (z % 36) >= 1);\nloop invariant i83: (c == 36 ==> ((z - 1) % 36) == 0);\nloop invariant i84: 0 <= z <= 999996;\nloop invariant i85: c == 0 ==> z >= 0;\nloop invariant i86: c == 0 ==> z <= 999996;\nloop invariant i87: c == 0 ==> y == 0;\nloop invariant i88: c == 0 ==> y >= 0;\nloop invariant i89: c == 0 ==> y <= 127;\nloop invariant i90: 0 <= c <= 36;loop invariant 0 <= y;loop invariant y >= 127;loop invariant z >= 0;loop invariant z <= 4199997;loop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant i91: c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant i92: 0 <= z <= (36 * y + c);\nloop invariant i93: (c == 0) ==> (z == (36 * y));\nloop invariant i94: (c == 1) ==> (z == (36 * y + 1));\nloop invariant i95: (c == 2) ==> (z == (36 * y + 2));\nloop invariant i96: (c == 3) ==> (z == (36 * y + 3));\nloop invariant i97: (c == 4) ==> (z == (36 * y + 4));\nloop invariant i98: (c == 5) ==> (z == (36 * y + 5));\nloop invariant i99: (c == 6) ==> (z == (36 * y + 6));\nloop invariant i100: (c == 7) ==> (z == (36 * y + 7));\nloop invariant i101: (c == 8) ==> (z == (36 * y + 8));\nloop invariant i102: (c == 9) ==> (z == (36 * y + 9));\nloop invariant i103: (c == 10) ==> (z == (36 * y + 10));\nloop invariant i104: (c == 11) ==> (z == (36 * y + 11));\nloop invariant i105: (c == 12) ==> (z == (36 * y + 12));\nloop invariant i106: (c == 13) ==> (z == (36 * y + 13));\nloop invariant i107: (c == 14) ==> (z == (36 * y + 14));\nloop invariant i108: (c == 15) ==> (z == (36 * y + 15));\nloop invariant i109: (c == 16) ==> (z == (36 * y + 16));\nloop invariant i110: (c == 17) ==> (z == (36 * y + 17));\nloop invariant i111: (c == 18) ==> (z == (36 * y + 18));\nloop invariant i112: (c == 19) ==> (z == (36 * y + 19));\nloop invariant i113: (c == 20) ==> (z == (36 * y + 20));\nloop invariant i114: (c == 21) ==> (z == (36 * y + 21));\nloop invariant i115: (c == 22) ==> (z == (36 * y + 22));\nloop invariant i116: (c == 23) ==> (z == (36 * y + 23));\nloop invariant i117: (c == 24) ==> (z == (36 * y + 24));\nloop invariant i118: (c == 25) ==> (z == (36 * y + 25));\nloop invariant i119: (c == 26) ==> (z == (36 * y + 26));\nloop invariant i120: (c == 27) ==> (z == (36 * y + 27));\nloop invariant i121: (c == 28) ==> (z == (36 * y + 28));\nloop invariant i122: (c == 29) ==> (z == (36 * y + 29));\nloop invariant i123: (c == 30) ==> (z == (36 * y + 30));\nloop invariant i124: (c == 31) ==> (z == (36 * y + 31));\nloop invariant i125: (c == 32) ==> (z == (36 * y + 32));\nloop invariant i126: (c == 33) ==> (z == (36 * y + 33));\nloop invariant i127: (c == 34) ==> (z == (36 * y + 34));\nloop invariant i128: (c == 35) ==> (z == (36 * y + 35));\nloop invariant i129: (c == 36) ==> (z == (36 * y + 36));\nloop invariant i130: 0 <= c <= 36; loop invariant 36 * y <= z <= 36 * y + 35; loop invariant c >= 0; loop invariant c < 36; loop invariant z >= 0; loop invariant z <= 36 * y + 35; loop invariant c * (c - 1) / 2 <= z - 36 * y; loop invariant z - 36 * y <= c * (c - 1) / 2 + 35; loop invariant c * (c - 1) / 2 <= z - 36 * y ==> c * (c - 1) / 2 <= z - 36 * y + 35; loop invariant z - 36 * y <= c * (c - 1) / 2 + 35 ==> z - 36 * y <= c * (c - 1) / 2 + 35 + 35;\nloop invariant i131: z <= 36 * y + 36;\nloop invariant i132: c * z / 36 <= z;\nloop invariant i133: c * (z - 1) / 36 <= z;\nloop invariant i134: y <= 127;\nloop invariant i135: c <= z / 36;\nloop invariant i136: c * (z - 1) / 36 <= z - 1;\nloop invariant i137: c * z / 36 <= z - 1;\nloop invariant i138: c < 36 ==> z >= 36*y + c;\nloop invariant i139: 0 <= y;\nloop invariant i140: z == (36 * y + c);\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 25,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\n\n\nloop invariant i5: c <= 36 ==> (z <= (36 * y) + c);\nloop invariant i6: c >= 0 ==> (z >= (36 * y) + c);\n\n\n\n\nloop invariant i11: c == 0 ==> (z >= 0);\nloop invariant i12: c == 36 ==> (z >= 0);\nloop invariant i13: c == 0 ==> (y >= 0);\nloop invariant i14: c == 36 ==> (y >= 0);\n\nloop invariant i16: c == 36 ==> (y <= 127);\nloop invariant i17: 0 <= c <= 35;\nloop invariant i18: y >= 0;\nloop invariant i19: z >= 0;\n\n\nloop invariant i22: z % 36 == c;\nloop invariant i23: (y >= 0) ==> (z >= 0);\nloop invariant i24: (y >= 0) ==> (c * 127 <= z);\n\nloop invariant i26: (y >= 0) ==> (z % 36 == c);\n\nloop invariant i28: (y >= 127) ==> (z >= 0);\nloop invariant i29: (y >= 127) ==> (c * 127 <= z);\n\nloop invariant i31: (y >= 127) ==> (z % 36 == c);\n\n\n\n\nloop invariant i36: (y >= 0) ==> (y >= 127) ==> (z >= 0);\nloop invariant i37: (y >= 0) ==> (y >= 127) ==> (c * 127 <= z);\n\nloop invariant i39: (y >= 0) ==> (y >= 127) ==> (z % 36 == c);\nloop invariant i40: 36 * y <= z <= 36 * y + 36;\nloop invariant i41: c >= 0;\nloop invariant i42: y >= 127;\nloop invariant i43: z == 36 * y + c;\nloop invariant i44: c == 0 ==> z == 36 * y;\nloop invariant i45: c == 36 ==> z == 36 * y + 36;\nloop invariant i46: c < 36 ==> z < 36 * y + 36;\nloop invariant i47: c > 36 ==> z > 36 * y + 36;\nloop invariant i48: y < 127 ==> z < 36 * y + 36;\n\n\nloop invariant i51: c > 0 ==> c < 36;\n\nloop invariant i53: c == 0 ==> c == 0;\nloop invariant i54: c == 36 ==> c == 36;\nloop invariant i55: c > 0 ==> c > 0;\nloop invariant i56: c < 36 ==> c < 36;\nloop invariant i57: c > 36 ==> c == 36;\n\n\nloop invariant i60: 0 <= z <= 128 * y;\nloop invariant i61: z + (36 - c) >= 0;\nloop invariant i62: 36 * y <= z;\nloop invariant i63: c == 36 ==> z >= 0;\nloop invariant i64: c <= 35 ==> 0 <= z <= 128 * y;\nloop invariant i65: c == 36 ==> 36 * y <= z;\nloop invariant i66: c <= 35 ==> z + (36 - c) >= 0;\nloop invariant i67: c <= 35 ==> c < 36;\nloop invariant i68: c <= 35 ==> z >= 0;\nloop invariant i69: 0 <= c < 36;\nloop invariant i70: y >= 0 && y >= 127;\nloop invariant i71: z >= 0 && z <= (36 * y) + 36;\nloop invariant i72: c + y <= 36 + y;\n\nloop invariant i74: z == (36 * y) + c;\nloop invariant i75: c <= 36;\nloop invariant i76: (0 <= z <= 36 * y);\nloop invariant i77: (c == 0 ==> y >= 0);\nloop invariant i78: (c == 0 ==> y >= 127);\nloop invariant i79: (c == 0 ==> z == (36 * y));\nloop invariant i80: (c > 0 ==> z >= 1);\nloop invariant i81: (c == 36 ==> z <= (36 * y) + 35);\nloop invariant i82: (c == 36 ==> (z % 36) >= 1);\nloop invariant i83: (c == 36 ==> ((z - 1) % 36) == 0);\n\nloop invariant i85: c == 0 ==> z >= 0;\n\n\nloop invariant i88: c == 0 ==> y >= 0;\n\nloop invariant i90: 0 <= c <= 36;loop invariant 0 <= y;loop invariant y >= 127;loop invariant z >= 0;loop invariant z <= 4199997;loop invariant c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant i91: c <= 36;loop invariant c > 0;loop invariant z >= 36*y;loop invariant z <= 36*(y+1)-1;\nloop invariant i92: 0 <= z <= (36 * y + c);\nloop invariant i93: (c == 0) ==> (z == (36 * y));\nloop invariant i94: (c == 1) ==> (z == (36 * y + 1));\nloop invariant i95: (c == 2) ==> (z == (36 * y + 2));\nloop invariant i96: (c == 3) ==> (z == (36 * y + 3));\nloop invariant i97: (c == 4) ==> (z == (36 * y + 4));\nloop invariant i98: (c == 5) ==> (z == (36 * y + 5));\nloop invariant i99: (c == 6) ==> (z == (36 * y + 6));\nloop invariant i100: (c == 7) ==> (z == (36 * y + 7));\nloop invariant i101: (c == 8) ==> (z == (36 * y + 8));\nloop invariant i102: (c == 9) ==> (z == (36 * y + 9));\nloop invariant i103: (c == 10) ==> (z == (36 * y + 10));\nloop invariant i104: (c == 11) ==> (z == (36 * y + 11));\nloop invariant i105: (c == 12) ==> (z == (36 * y + 12));\nloop invariant i106: (c == 13) ==> (z == (36 * y + 13));\nloop invariant i107: (c == 14) ==> (z == (36 * y + 14));\nloop invariant i108: (c == 15) ==> (z == (36 * y + 15));\nloop invariant i109: (c == 16) ==> (z == (36 * y + 16));\nloop invariant i110: (c == 17) ==> (z == (36 * y + 17));\nloop invariant i111: (c == 18) ==> (z == (36 * y + 18));\nloop invariant i112: (c == 19) ==> (z == (36 * y + 19));\nloop invariant i113: (c == 20) ==> (z == (36 * y + 20));\nloop invariant i114: (c == 21) ==> (z == (36 * y + 21));\nloop invariant i115: (c == 22) ==> (z == (36 * y + 22));\nloop invariant i116: (c == 23) ==> (z == (36 * y + 23));\nloop invariant i117: (c == 24) ==> (z == (36 * y + 24));\nloop invariant i118: (c == 25) ==> (z == (36 * y + 25));\nloop invariant i119: (c == 26) ==> (z == (36 * y + 26));\nloop invariant i120: (c == 27) ==> (z == (36 * y + 27));\nloop invariant i121: (c == 28) ==> (z == (36 * y + 28));\nloop invariant i122: (c == 29) ==> (z == (36 * y + 29));\nloop invariant i123: (c == 30) ==> (z == (36 * y + 30));\nloop invariant i124: (c == 31) ==> (z == (36 * y + 31));\nloop invariant i125: (c == 32) ==> (z == (36 * y + 32));\nloop invariant i126: (c == 33) ==> (z == (36 * y + 33));\nloop invariant i127: (c == 34) ==> (z == (36 * y + 34));\nloop invariant i128: (c == 35) ==> (z == (36 * y + 35));\nloop invariant i129: (c == 36) ==> (z == (36 * y + 36));\nloop invariant i130: 0 <= c <= 36; loop invariant 36 * y <= z <= 36 * y + 35; loop invariant c >= 0; loop invariant c < 36; loop invariant z >= 0; loop invariant z <= 36 * y + 35; loop invariant c * (c - 1) / 2 <= z - 36 * y; loop invariant z - 36 * y <= c * (c - 1) / 2 + 35; loop invariant c * (c - 1) / 2 <= z - 36 * y ==> c * (c - 1) / 2 <= z - 36 * y + 35; loop invariant z - 36 * y <= c * (c - 1) / 2 + 35 ==> z - 36 * y <= c * (c - 1) / 2 + 35 + 35;\nloop invariant i131: z <= 36 * y + 36;\nloop invariant i132: c * z / 36 <= z;\nloop invariant i133: c * (z - 1) / 36 <= z;\nloop invariant i134: y <= 127;\nloop invariant i135: c <= z / 36;\nloop invariant i136: c * (z - 1) / 36 <= z - 1;\nloop invariant i137: c * z / 36 <= z - 1;\nloop invariant i138: c < 36 ==> z >= 36*y + c;\nloop invariant i139: 0 <= y;\nloop invariant i140: z == (36 * y + c);\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (c < 36) )\n{;\n//@ assert( (z >= 0) );\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c"
        ],
        "skipped": [],
        "total": 60,
        "success_count": 49,
        "failure_count": 11,
        "success_rate": 0.8166666666666667
    }
}