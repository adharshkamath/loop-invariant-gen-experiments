{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/131.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int d1 = 1;\n    int d2 = 1;\n    int d3 = 1;\n    int x1 = 1;\n    int x2,x3;\n\n    while( x1 > 0) {\n        if(x2 > 0) {\n            if(x3 > 0) {\n                x1 = x1 - d1;\n                x2 = x2 - d2;\n                x3 = x3 - d3;\n            }\n        }\n    }\n\n    {;\n//@ assert(x3 >= 0);\n}\n\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x1 <= 1;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant x1 <= x2;\nloop invariant x1 <= x3;\nloop invariant x2 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant (x1 >= 0 ==> x1 >= d1);\nloop invariant (x2 >= 0 ==> x2 >= d2);\nloop invariant (x3 >= 0 ==> x3 >= d3);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x1 <= d1;\nloop invariant 1 <= x2 <= d2;\nloop invariant 1 <= x3 <= d3;\nloop invariant x2 <= x1;\nloop invariant x3 <= x2;\nloop invariant x3 <= x1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= d1 <= 1;\nloop invariant 1 <= d2 <= 1;\nloop invariant 1 <= d3 <= 1;\nloop invariant 1 <= x1 <= 1;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 * d1 <= x1;\nloop invariant x1 * d2 <= x2;\nloop invariant x1 * d3 <= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= d1 <= 1;\nloop invariant 0 <= d2 <= 1;\nloop invariant 0 <= d3 <= 1;\nloop invariant 0 <= x1 <= 1;\nloop invariant 0 <= x2 <= 1;\nloop invariant 0 <= x3 <= 1;\nloop invariant x1 >= d1;\nloop invariant x2 >= d2;\nloop invariant x3 >= d3;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= x2 + x3;\nloop invariant d1 >= d2;\nloop invariant d2 >= d3;\nloop invariant d1 >= d3;\nloop invariant d1 >= x1;\nloop invariant d2 >= x2;\nloop invariant d3 >= x3;\nloop invariant d1 >= x1 + x2 + x3;\nloop invariant d2 >= x1 + x2 + x3;\nloop invariant d3 >= x1 + x2 + x3;\nloop invariant d1 >= x1 + x2 + x3 - 1;\nloop invariant d2 >= x1 + x2 + x3 - 1;\nloop invariant d3 >= x1 + x2 + x3 - 1;\nloop invariant d1 >= x1 + x2 + x3 - 2;\nloop invariant d2 >= x1 + x2 + x3 - 2;\nloop invariant d3 >= x1 + x2 + x3 - 2;\nloop invariant d1 >= x1 + x2 + x3 - 3;\nloop invariant d2 >= x1 + x2 + x3 - 3;\nloop invariant d3 >= x1 + x2 + x3 - 3;\nloop invariant d1 >= x1 + x2 + x3 - 4;\nloop invariant d2 >= x1 + x2 + x3 - 4;\nloop invariant d3 >= x1 + x2 + x3 - 4;\nloop invariant d1 >= x1 + x2 + x3 - 5;\nloop invariant d2 >= x1 + x2 + x3 - 5;\nloop invariant d3 >= x1 + x2 + x3 - 5;\nloop invariant d1 >= x1 + x2 + x3 - 6;\nloop invariant d2 >= x1 + x2 + x3 - 6;\nloop invariant d3 >= x1 + x2 + x3 - 6;\nloop invariant d1 >= x1 + x2 + x3 - 7;\nloop invariant d2 >= x1 + x2 + x3 - 7;\nloop invariant d3 >= x1 + x2 + x3 - 7;\nloop invariant d1 >= x1 + x2 + x3 - 8;\nloop invariant d2 >= x1 + x2 + x3 - 8;\nloop invariant d3 >= x1 + x2 + x3 - 8;\nloop invariant d1 >= x1 + x2 + x3 - 9;\nloop invariant d2 >= x1 + x2 + x3 - 9;\nloop invariant d3 >= x1 + x2 + x3 - 9;\nloop invariant d1 >= x1 + x2 + x3 - 10;\nloop invariant d2 >= x1 + x2 + x3 - 10;\nloop invariant d3 >= x1 + x2 + x3 - 10;\nloop invariant d1 >= x1 + x2 + x3 - 11;\nloop invariant d2 >= x1 + x2 + x3 - 11;\nloop invariant d3 >= x1 + x2 + x3 - 11;\nloop invariant d1 >= x1 + x2 + x3 - 12;\nloop invariant d2 >= x1 + x2 + x3 - 12;\nloop invariant d3 >= x1 + x2 + x3 - 12;\nloop invariant d1 >= x1 + x2 + x3 - 13;\nloop invariant d2 >= x1 + x2 + x3 - 13;\nloop invariant d3 >= x1 + x2 + x3 - 13;\nloop invariant d1 >= x1 + x2 + x3 - 14;\nloop invariant d2 >= x1 + x2 + x3 - 14;\nloop invariant d3 >= x1 + x2 + x3 - 14;\nloop invariant d1 >= x1 + x2 + x3 - 15;\nloop invariant d2 >= x1 + x2 + x3 - 15;\nloop invariant d3 >= x1 + x2 + x3 - 15;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1;\nloop invariant 0 <= x2;\nloop invariant 0 <= x3;\nloop invariant x1 <= y;\nloop invariant x2 <= y;\nloop invariant x3 <= y;\nloop invariant x1 <= 1;\nloop invariant x2 <= 1;\nloop invariant x3 <= 1;\n*/\n```",
            "```\n/*@\nloop invariant ( x1 >= 0 ) ==> ( x1 + d1 >= 0 );\nloop invariant ( x1 >= 0 ) ==> ( x2 >= 0 );\nloop invariant ( x1 >= 0 ) ==> ( x3 >= 0 );\nloop invariant ( x1 >= 0 ) ==> ( x1 + d1 >= 1 );\nloop invariant ( x1 >= 0 ) ==> ( x2 + d2 >= 0 );\nloop invariant ( x1 >= 0 ) ==> ( x3 + d3 >= 0 );\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x1 <= x1;\nloop invariant 1 <= x2 <= x2;\nloop invariant 1 <= x3 <= x3;\nloop invariant 1 <= d1 <= d1;\nloop invariant 1 <= d2 <= d2;\nloop invariant 1 <= d3 <= d3;\nloop invariant x1 <= 0 ==> (x1 >= 0);\nloop invariant x2 <= 0 ==> (x2 >= 0);\nloop invariant x3 <= 0 ==> (x3 >= 0);\nloop invariant d1 <= 0 ==> (d1 >= 0);\nloop invariant d2 <= 0 ==> (d2 >= 0);\nloop invariant d3 <= 0 ==> (d3 >= 0);\nloop invariant x1 <= 0 ==> (x2 >= 1);\nloop invariant x1 <= 0 ==> (x3 >= 1);\nloop invariant x1 <= 0 ==> (d1 >= 1);\nloop invariant x1 <= 0 ==> (d2 >= 1);\nloop invariant x1 <= 0 ==> (d3 >= 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x1 >= x3;\nloop invariant d1 >= d2;\nloop invariant d1 >= d3;\nloop invariant d2 >= d3;\nloop invariant x1 >= d1;\nloop invariant x2 >= d2;\nloop invariant x3 >= d3;\nloop invariant x1 >= 0 ==> x2 >= 0 ==> x3 >= 0;\n*/\n```",
            "```\n/*@\nloop invariant d1 == 1;\nloop invariant d2 == 1;\nloop invariant d3 == 1;\nloop invariant x1 == (x1_old - d1 * k);\nloop invariant x2 == (x2_old - d2 * k);\nloop invariant x3 == (x3_old - d3 * k);\nloop invariant k >= 0;\nloop invariant x1 <= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant (x1 > 0 ==> x2 > 0 ==> x3 > 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1;\nloop invariant 0 <= x2;\nloop invariant 0 <= x3;\nloop invariant x1 <= d1;\nloop invariant x2 <= d2;\nloop invariant x3 <= d3;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= 1;\nloop invariant x2 <= 1;\nloop invariant x3 <= 1;\nloop invariant x1 <= x2 + x2;\nloop invariant x2 <= x3 + x3;\nloop invariant x1 <= x2 + (x2 + 1);\nloop invariant x2 <= x3 + (x3 + 1);\nloop invariant x1 <= x2 + (x2 + 2);\nloop invariant x2 <= x3 + (x3 + 2);\nloop invariant x1 <= x2 + (x2 + 3);\nloop invariant x2 <= x3 + (x3 + 3);\nloop invariant x1 <= x2 + (x2 + 4);\nloop invariant x2 <= x3 + (x3 + 4);\nloop invariant x1 <= x2 + (x2 + 5);\nloop invariant x2 <= x3 + (x3 + 5);\nloop invariant x1 <= x2 + (x2 + 6);\nloop invariant x2 <= x3 + (x3 + 6);\nloop invariant x1 <= x2 + (x2 + 7);\nloop invariant x2 <= x3 + (x3 + 7);\nloop invariant x1 <= x2 + (x2 + 8);\nloop invariant x2 <= x3 + (x3 + 8);\nloop invariant x1 <= x2 + (x2 + 9);\nloop invariant x2 <= x3 + (x3 + 9);\nloop invariant x1 <= x2 + (x2 + 10);\nloop invariant x2 <= x3 + (x3 + 10);\nloop invariant x1 <= x2 + (x2 + 11);\nloop invariant x2 <= x3 + (x3 + 11);\nloop invariant x1 <= x2 + (x2 + 12);\nloop invariant x2 <= x3 + (x3 + 12);\nloop invariant x1 <= x2 + (x2 + 13);\nloop invariant x2 <= x3 + (x3 + 13);\nloop invariant x1 <= x2 + (x2 + 14);\nloop invariant x2 <= x3 + (x3 + 14);\nloop invariant x1 <= x2 + (x2 + 15);\nloop invariant x2 <= x3 + (x3 + 15);\nloop invariant x1 <= x2 + (x2 + 16);\nloop invariant x2 <= x3 + (x3 + 16);\nloop invariant x1 <= x2 + (x2 + 17);\nloop invariant x2 <= x3 + (x3 + 17);\nloop invariant x1 <= x2 + (x2 + 18);\nloop invariant x2 <= x3 + (x3 + 18);\nloop invariant x1 <= x2 + (x2 + 19);\nloop invariant x2 <= x3 + (x3 + 19);\nloop invariant x1 <= x2 + (x2 + 20);\nloop invariant x2 <= x3 + (x3 + 20);\nloop invariant x1 <= x2 + (x2 + 21);\nloop invariant x2 <= x3 + (x3 + 21);\nloop invariant x1 <= x2 + (x2 + 22);\nloop invariant x2 <= x3 + (x3 + 22);\nloop invariant x1 <= x2 + (x2 + 23);\nloop invariant x2 <= x3 + (x3 + 23);\nloop invariant x1 <= x2 + (x2 + 24);\nloop invariant x2 <= x3 + (x3 + 24);\nloop invariant x1 <= x2 + (x2 + 25);\nloop invariant x2 <= x3 + (x3 + 25);\nloop invariant x1 <= x2 + (x2 + 26);\nloop invariant x2 <= x3 + (x3 + 26);\nloop invariant x1 <= x2 + (x2 + 27);\nloop invariant x2 <= x3 + (x3 + 27);\nloop invariant x1 <= x2 + (x2 + 28);\nloop invariant x2 <= x3 + (x3 + 28);\n*/\n```",
            "```\n/*@\nloop invariant x1 > 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant x1 >= d1;\nloop invariant x2 >= d2;\nloop invariant x3 >= d3;\nloop invariant x1 == x1 + d1 * (x2 > 0 ? 1 : 0) + d1 * (x3 > 0 ? 1 : 0);\nloop invariant x2 == x2 + d2 * (x2 > 0 ? 1 : 0) + d2 * (x3 > 0 ? 1 : 0);\nloop invariant x3 == x3 + d3 * (x3 > 0 ? 1 : 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x3;\nloop invariant x3 <= x2;\nloop invariant x2 <= x1;\nloop invariant x1 <= 0;\n*/\n```",
            "```\n/*@\nloop invariant x1 >= 0; loop invariant x2 >= 0; loop invariant x3 >= 0; loop invariant x1 <= d1; loop invariant x2 <= d2; loop invariant x3 <= d3; loop invariant x1 + x2 + x3 <= d1 + d2 + d3; loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 2 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 3 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 4 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 5 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 6 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 7 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 8 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 9 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 10 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 11 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 12 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 13 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 14 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 15 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 16 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 17 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 18 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 19 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 20 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 21 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 22 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 23 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 24 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 25 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 26 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 27 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 28 * (d1 + d2 + d3);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= 1;\nloop invariant 0 <= x2 <= 1;\nloop invariant 0 <= x3 <= 1;\nloop invariant -1 <= x1 - d1 <= 0;\nloop invariant -1 <= x2 - d2 <= 0;\nloop invariant -1 <= x3 - d3 <= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant (x1 - d1) >= 0;\nloop invariant (x2 - d2) >= 0;\nloop invariant (x3 - d3) >= 0;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 <= 1;\nloop invariant x2 <= 1;\nloop invariant x3 <= 1;\nloop invariant x1 == 1;\nloop invariant x2 == 1;\nloop invariant x3 == 1;\nloop invariant d1 == 1;\nloop invariant d2 == 1;\nloop invariant d3 == 1;\nloop invariant x1 >= x2;\nloop invariant x1 >= x3;\nloop invariant x2 >= x3;\nloop invariant x1 >= (x2 - d2);\nloop invariant x1 >= (x3 - d3);\nloop invariant x2 >= (x3 - d3);\nloop invariant x1 <= (x2 + d2);\nloop invariant x1 <= (x3 + d3);\nloop invariant x2 <= (x3 + d3);\nloop invariant x1 <= (x2 + d2);\nloop invariant x1 <= (x3 + d3);\nloop invariant x2 <= (x3 + d3);\nloop invariant x1 >= (x2 - d2);\nloop invariant x1 >= (x3 - d3);\nloop invariant x2 >= (x3 - d3);\nloop invariant x1 >= (x2 - d2);\nloop invariant x1 >= (x3 - d3);\nloop invariant x2 >= (x3 - d3);\nloop invariant x1 <= (x2 + d2);\nloop invariant x1 <= (x3 + d3);\nloop invariant x2 <= (x3 + d3);\nloop invariant x1 <= (x2 + d2);\nloop invariant x1 <= (x3 + d3);\nloop invariant x2 <= (x3 + d3);\nloop invariant x1 >= (x2 - d2);\nloop invariant x1 >= (x3 - d3);\nloop invariant x2 >= (x3 - d3);\nloop invariant x1 >= (x2 - d2);\nloop invariant x1 >= (x3 - d3);\nloop invariant x2 >= (x3 - d3);\nloop invariant x1 <= (x2 + d2);\nloop invariant x1 <= (x3 + d3);\nloop invariant x2 <= (x3 + d3);\nloop invariant x1 <= (x2 + d2);\nloop invariant x1 <= (x3 + d3);\nloop invariant x2 <= (x3 + d3);\nloop invariant x1 >= (x2 - d2);\nloop invariant x1 >= (x3 - d3);\nloop invariant x2 >= (x3 - d3);\nloop invariant x1 >= (x2 - d2);\nloop invariant x1 >= (x3 - d3);\nloop invariant x2 >= (x3 - d3);\nloop invariant x1 <= (x2 + d2);\nloop invariant x1 <= (x3 + d3);\nloop invariant x2 <= (x3 + d3);\nloop invariant x1 <= (x2 + d2);\nloop invariant x1 <= (x3 + d3);\nloop invariant x2 <= (x3 + d3);\nloop invariant x1 >= (x2 - d2);\nloop invariant x1 >= (x3 - d3);\nloop invariant x2 >= (x3 - d3);\nloop invariant x1 >= (x2 - d2);\nloop invariant x1 >= (x3 - d3);\nloop invariant x2 >= (x3 - d3);\nloop invariant x1 <= (x2 + d2);\nloop invariant x1 <= (x3 + d3);\nloop invariant x2 <= (x3 + d3);\nloop invariant x1 <= (x2 + d2);\nloop invariant x1 <= (x3 + d3);\nloop invariant x2 <= (x3 + d3);\nloop invariant x1 >= (x2 - d2);\nloop invariant x1 >= (x3 - d3);\nloop invariant x2 >= (x3 - d3);\nloop invariant x1 >= (x2 - d2);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x3 <= (x2 * d3);\nloop invariant 1 <= x2 <= (x1 * d2);\nloop invariant 1 <= x1 <= (x3 * d1);\nloop invariant x3 >= 0;\nloop invariant x2 >= 0;\nloop invariant x1 >= 0;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= 1;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant x1 <= x2;\nloop invariant x1 <= x3;\nloop invariant x2 <= x3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant (x1 >= 0 ==> x1 >= d1);\nloop invariant (x2 >= 0 ==> x2 >= d2);\nloop invariant (x3 >= 0 ==> x3 >= d3);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant (x1 < 0 ==> x2 >= 0 && x3 >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int d1 = 1;\n    int d2 = 1;\n    int d3 = 1;\n    int x1 = 1;\n    int x2,x3;\n\n    /*@\n\n\n\nloop invariant i4: d1 >= 1;\nloop invariant i5: d2 >= 1;\nloop invariant i6: d3 >= 1;\n\n\n\n\n\n\n\n\n\n\n*/\nwhile( x1 > 0) {\n        if(x2 > 0) {\n            if(x3 > 0) {\n                x1 = x1 - d1;\n                x2 = x2 - d2;\n                x3 = x3 - d3;\n            }\n        }\n    }\n\n    {;\n//@ assert(x3 >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x1 <= d1;\nloop invariant 1 <= x2 <= d2;\nloop invariant 1 <= x3 <= d3;\nloop invariant x2 <= x1;\nloop invariant x3 <= x2;\nloop invariant x3 <= x1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int d1 = 1;\n    int d2 = 1;\n    int d3 = 1;\n    int x1 = 1;\n    int x2,x3;\n\n    /*@\n\n\n\n\n\n\n*/\nwhile( x1 > 0) {\n        if(x2 > 0) {\n            if(x3 > 0) {\n                x1 = x1 - d1;\n                x2 = x2 - d2;\n                x3 = x3 - d3;\n            }\n        }\n    }\n\n    {;\n//@ assert(x3 >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= d1 <= 1;\nloop invariant 1 <= d2 <= 1;\nloop invariant 1 <= d3 <= 1;\nloop invariant 1 <= x1 <= 1;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 * d1 <= x1;\nloop invariant x1 * d2 <= x2;\nloop invariant x1 * d3 <= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int d1 = 1;\n    int d2 = 1;\n    int d3 = 1;\n    int x1 = 1;\n    int x2,x3;\n\n    /*@\nloop invariant i1: 1 <= d1 <= 1;\nloop invariant i2: 1 <= d2 <= 1;\nloop invariant i3: 1 <= d3 <= 1;\n\n\n\nloop invariant i7: x1 * d1 <= x1;\n\n\nloop invariant i10: x1 >= 0;\n\n\n\n*/\nwhile( x1 > 0) {\n        if(x2 > 0) {\n            if(x3 > 0) {\n                x1 = x1 - d1;\n                x2 = x2 - d2;\n                x3 = x3 - d3;\n            }\n        }\n    }\n\n    {;\n//@ assert(x3 >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 50,
                "annotations": "```\n/*@\nloop invariant 0 <= d1 <= 1;\nloop invariant 0 <= d2 <= 1;\nloop invariant 0 <= d3 <= 1;\nloop invariant 0 <= x1 <= 1;\nloop invariant 0 <= x2 <= 1;\nloop invariant 0 <= x3 <= 1;\nloop invariant x1 >= d1;\nloop invariant x2 >= d2;\nloop invariant x3 >= d3;\nloop invariant x1 >= x2;\nloop invariant x2 >= x3;\nloop invariant x1 >= x3;\nloop invariant x1 >= x2 + x3;\nloop invariant d1 >= d2;\nloop invariant d2 >= d3;\nloop invariant d1 >= d3;\nloop invariant d1 >= x1;\nloop invariant d2 >= x2;\nloop invariant d3 >= x3;\nloop invariant d1 >= x1 + x2 + x3;\nloop invariant d2 >= x1 + x2 + x3;\nloop invariant d3 >= x1 + x2 + x3;\nloop invariant d1 >= x1 + x2 + x3 - 1;\nloop invariant d2 >= x1 + x2 + x3 - 1;\nloop invariant d3 >= x1 + x2 + x3 - 1;\nloop invariant d1 >= x1 + x2 + x3 - 2;\nloop invariant d2 >= x1 + x2 + x3 - 2;\nloop invariant d3 >= x1 + x2 + x3 - 2;\nloop invariant d1 >= x1 + x2 + x3 - 3;\nloop invariant d2 >= x1 + x2 + x3 - 3;\nloop invariant d3 >= x1 + x2 + x3 - 3;\nloop invariant d1 >= x1 + x2 + x3 - 4;\nloop invariant d2 >= x1 + x2 + x3 - 4;\nloop invariant d3 >= x1 + x2 + x3 - 4;\nloop invariant d1 >= x1 + x2 + x3 - 5;\nloop invariant d2 >= x1 + x2 + x3 - 5;\nloop invariant d3 >= x1 + x2 + x3 - 5;\nloop invariant d1 >= x1 + x2 + x3 - 6;\nloop invariant d2 >= x1 + x2 + x3 - 6;\nloop invariant d3 >= x1 + x2 + x3 - 6;\nloop invariant d1 >= x1 + x2 + x3 - 7;\nloop invariant d2 >= x1 + x2 + x3 - 7;\nloop invariant d3 >= x1 + x2 + x3 - 7;\nloop invariant d1 >= x1 + x2 + x3 - 8;\nloop invariant d2 >= x1 + x2 + x3 - 8;\nloop invariant d3 >= x1 + x2 + x3 - 8;\nloop invariant d1 >= x1 + x2 + x3 - 9;\nloop invariant d2 >= x1 + x2 + x3 - 9;\nloop invariant d3 >= x1 + x2 + x3 - 9;\nloop invariant d1 >= x1 + x2 + x3 - 10;\nloop invariant d2 >= x1 + x2 + x3 - 10;\nloop invariant d3 >= x1 + x2 + x3 - 10;\nloop invariant d1 >= x1 + x2 + x3 - 11;\nloop invariant d2 >= x1 + x2 + x3 - 11;\nloop invariant d3 >= x1 + x2 + x3 - 11;\nloop invariant d1 >= x1 + x2 + x3 - 12;\nloop invariant d2 >= x1 + x2 + x3 - 12;\nloop invariant d3 >= x1 + x2 + x3 - 12;\nloop invariant d1 >= x1 + x2 + x3 - 13;\nloop invariant d2 >= x1 + x2 + x3 - 13;\nloop invariant d3 >= x1 + x2 + x3 - 13;\nloop invariant d1 >= x1 + x2 + x3 - 14;\nloop invariant d2 >= x1 + x2 + x3 - 14;\nloop invariant d3 >= x1 + x2 + x3 - 14;\nloop invariant d1 >= x1 + x2 + x3 - 15;\nloop invariant d2 >= x1 + x2 + x3 - 15;\nloop invariant d3 >= x1 + x2 + x3 - 15;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int d1 = 1;\n    int d2 = 1;\n    int d3 = 1;\n    int x1 = 1;\n    int x2,x3;\n\n    /*@\nloop invariant i1: 0 <= d1 <= 1;\nloop invariant i2: 0 <= d2 <= 1;\nloop invariant i3: 0 <= d3 <= 1;\nloop invariant i4: 0 <= x1 <= 1;\n\n\n\n\n\n\n\n\n\nloop invariant i14: d1 >= d2;\nloop invariant i15: d2 >= d3;\nloop invariant i16: d1 >= d3;\nloop invariant i17: d1 >= x1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile( x1 > 0) {\n        if(x2 > 0) {\n            if(x3 > 0) {\n                x1 = x1 - d1;\n                x2 = x2 - d2;\n                x3 = x3 - d3;\n            }\n        }\n    }\n\n    {;\n//@ assert(x3 >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x1;\nloop invariant 0 <= x2;\nloop invariant 0 <= x3;\nloop invariant x1 <= y;\nloop invariant x2 <= y;\nloop invariant x3 <= y;\nloop invariant x1 <= 1;\nloop invariant x2 <= 1;\nloop invariant x3 <= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int d1 = 1;\n    int d2 = 1;\n    int d3 = 1;\n    int x1 = 1;\n    int x2,x3;\n\n    /*@\n\n\n\n\n\n\n\n\n\n*/\nwhile( x1 > 0) {\n        if(x2 > 0) {\n            if(x3 > 0) {\n                x1 = x1 - d1;\n                x2 = x2 - d2;\n                x3 = x3 - d3;\n            }\n        }\n    }\n\n    {;\n//@ assert(x3 >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant ( x1 >= 0 ) ==> ( x1 + d1 >= 0 );\nloop invariant ( x1 >= 0 ) ==> ( x2 >= 0 );\nloop invariant ( x1 >= 0 ) ==> ( x3 >= 0 );\nloop invariant ( x1 >= 0 ) ==> ( x1 + d1 >= 1 );\nloop invariant ( x1 >= 0 ) ==> ( x2 + d2 >= 0 );\nloop invariant ( x1 >= 0 ) ==> ( x3 + d3 >= 0 );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int d1 = 1;\n    int d2 = 1;\n    int d3 = 1;\n    int x1 = 1;\n    int x2,x3;\n\n    /*@\nloop invariant i1: ( x1 >= 0 ) ==> ( x1 + d1 >= 0 );\n\n\nloop invariant i4: ( x1 >= 0 ) ==> ( x1 + d1 >= 1 );\n\n\n*/\nwhile( x1 > 0) {\n        if(x2 > 0) {\n            if(x3 > 0) {\n                x1 = x1 - d1;\n                x2 = x2 - d2;\n                x3 = x3 - d3;\n            }\n        }\n    }\n\n    {;\n//@ assert(x3 >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x1 <= x1;\nloop invariant 1 <= x2 <= x2;\nloop invariant 1 <= x3 <= x3;\nloop invariant 1 <= d1 <= d1;\nloop invariant 1 <= d2 <= d2;\nloop invariant 1 <= d3 <= d3;\nloop invariant x1 <= 0 ==> (x1 >= 0);\nloop invariant x2 <= 0 ==> (x2 >= 0);\nloop invariant x3 <= 0 ==> (x3 >= 0);\nloop invariant d1 <= 0 ==> (d1 >= 0);\nloop invariant d2 <= 0 ==> (d2 >= 0);\nloop invariant d3 <= 0 ==> (d3 >= 0);\nloop invariant x1 <= 0 ==> (x2 >= 1);\nloop invariant x1 <= 0 ==> (x3 >= 1);\nloop invariant x1 <= 0 ==> (d1 >= 1);\nloop invariant x1 <= 0 ==> (d2 >= 1);\nloop invariant x1 <= 0 ==> (d3 >= 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int d1 = 1;\n    int d2 = 1;\n    int d3 = 1;\n    int x1 = 1;\n    int x2,x3;\n\n    /*@\n\n\n\nloop invariant i4: 1 <= d1 <= d1;\nloop invariant i5: 1 <= d2 <= d2;\nloop invariant i6: 1 <= d3 <= d3;\n\n\n\nloop invariant i10: d1 <= 0 ==> (d1 >= 0);\nloop invariant i11: d2 <= 0 ==> (d2 >= 0);\nloop invariant i12: d3 <= 0 ==> (d3 >= 0);\n\n\nloop invariant i15: x1 <= 0 ==> (d1 >= 1);\nloop invariant i16: x1 <= 0 ==> (d2 >= 1);\nloop invariant i17: x1 <= 0 ==> (d3 >= 1);\n*/\nwhile( x1 > 0) {\n        if(x2 > 0) {\n            if(x3 > 0) {\n                x1 = x1 - d1;\n                x2 = x2 - d2;\n                x3 = x3 - d3;\n            }\n        }\n    }\n\n    {;\n//@ assert(x3 >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x3;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant x1 >= x2;\nloop invariant x1 >= x3;\nloop invariant d1 >= d2;\nloop invariant d1 >= d3;\nloop invariant d2 >= d3;\nloop invariant x1 >= d1;\nloop invariant x2 >= d2;\nloop invariant x3 >= d3;\nloop invariant x1 >= 0 ==> x2 >= 0 ==> x3 >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int d1 = 1;\n    int d2 = 1;\n    int d3 = 1;\n    int x1 = 1;\n    int x2,x3;\n\n    /*@\n\n\n\n\nloop invariant i5: d1 >= 0;\nloop invariant i6: d2 >= 0;\nloop invariant i7: d3 >= 0;\n\n\nloop invariant i10: d1 >= d2;\nloop invariant i11: d1 >= d3;\nloop invariant i12: d2 >= d3;\n\n\n\n\n*/\nwhile( x1 > 0) {\n        if(x2 > 0) {\n            if(x3 > 0) {\n                x1 = x1 - d1;\n                x2 = x2 - d2;\n                x3 = x3 - d3;\n            }\n        }\n    }\n\n    {;\n//@ assert(x3 >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant d1 == 1;\nloop invariant d2 == 1;\nloop invariant d3 == 1;\nloop invariant x1 == (x1_old - d1 * k);\nloop invariant x2 == (x2_old - d2 * k);\nloop invariant x3 == (x3_old - d3 * k);\nloop invariant k >= 0;\nloop invariant x1 <= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant (x1 > 0 ==> x2 > 0 ==> x3 > 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int d1 = 1;\n    int d2 = 1;\n    int d3 = 1;\n    int x1 = 1;\n    int x2,x3;\n\n    /*@\nloop invariant i1: d1 == 1;\nloop invariant i2: d2 == 1;\nloop invariant i3: d3 == 1;\n\n\n\n\n\n\n\n\n*/\nwhile( x1 > 0) {\n        if(x2 > 0) {\n            if(x3 > 0) {\n                x1 = x1 - d1;\n                x2 = x2 - d2;\n                x3 = x3 - d3;\n            }\n        }\n    }\n\n    {;\n//@ assert(x3 >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 31,
                "annotations": "```\n/*@\nloop invariant 0 <= x1;\nloop invariant 0 <= x2;\nloop invariant 0 <= x3;\nloop invariant x1 <= d1;\nloop invariant x2 <= d2;\nloop invariant x3 <= d3;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x1 <= 1;\nloop invariant x2 <= 1;\nloop invariant x3 <= 1;\nloop invariant x1 <= x2 + x2;\nloop invariant x2 <= x3 + x3;\nloop invariant x1 <= x2 + (x2 + 1);\nloop invariant x2 <= x3 + (x3 + 1);\nloop invariant x1 <= x2 + (x2 + 2);\nloop invariant x2 <= x3 + (x3 + 2);\nloop invariant x1 <= x2 + (x2 + 3);\nloop invariant x2 <= x3 + (x3 + 3);\nloop invariant x1 <= x2 + (x2 + 4);\nloop invariant x2 <= x3 + (x3 + 4);\nloop invariant x1 <= x2 + (x2 + 5);\nloop invariant x2 <= x3 + (x3 + 5);\nloop invariant x1 <= x2 + (x2 + 6);\nloop invariant x2 <= x3 + (x3 + 6);\nloop invariant x1 <= x2 + (x2 + 7);\nloop invariant x2 <= x3 + (x3 + 7);\nloop invariant x1 <= x2 + (x2 + 8);\nloop invariant x2 <= x3 + (x3 + 8);\nloop invariant x1 <= x2 + (x2 + 9);\nloop invariant x2 <= x3 + (x3 + 9);\nloop invariant x1 <= x2 + (x2 + 10);\nloop invariant x2 <= x3 + (x3 + 10);\nloop invariant x1 <= x2 + (x2 + 11);\nloop invariant x2 <= x3 + (x3 + 11);\nloop invariant x1 <= x2 + (x2 + 12);\nloop invariant x2 <= x3 + (x3 + 12);\nloop invariant x1 <= x2 + (x2 + 13);\nloop invariant x2 <= x3 + (x3 + 13);\nloop invariant x1 <= x2 + (x2 + 14);\nloop invariant x2 <= x3 + (x3 + 14);\nloop invariant x1 <= x2 + (x2 + 15);\nloop invariant x2 <= x3 + (x3 + 15);\nloop invariant x1 <= x2 + (x2 + 16);\nloop invariant x2 <= x3 + (x3 + 16);\nloop invariant x1 <= x2 + (x2 + 17);\nloop invariant x2 <= x3 + (x3 + 17);\nloop invariant x1 <= x2 + (x2 + 18);\nloop invariant x2 <= x3 + (x3 + 18);\nloop invariant x1 <= x2 + (x2 + 19);\nloop invariant x2 <= x3 + (x3 + 19);\nloop invariant x1 <= x2 + (x2 + 20);\nloop invariant x2 <= x3 + (x3 + 20);\nloop invariant x1 <= x2 + (x2 + 21);\nloop invariant x2 <= x3 + (x3 + 21);\nloop invariant x1 <= x2 + (x2 + 22);\nloop invariant x2 <= x3 + (x3 + 22);\nloop invariant x1 <= x2 + (x2 + 23);\nloop invariant x2 <= x3 + (x3 + 23);\nloop invariant x1 <= x2 + (x2 + 24);\nloop invariant x2 <= x3 + (x3 + 24);\nloop invariant x1 <= x2 + (x2 + 25);\nloop invariant x2 <= x3 + (x3 + 25);\nloop invariant x1 <= x2 + (x2 + 26);\nloop invariant x2 <= x3 + (x3 + 26);\nloop invariant x1 <= x2 + (x2 + 27);\nloop invariant x2 <= x3 + (x3 + 27);\nloop invariant x1 <= x2 + (x2 + 28);\nloop invariant x2 <= x3 + (x3 + 28);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int d1 = 1;\n    int d2 = 1;\n    int d3 = 1;\n    int x1 = 1;\n    int x2,x3;\n\n    /*@\n\n\n\nloop invariant i4: x1 <= d1;\n\n\n\n\nloop invariant i9: x1 <= 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile( x1 > 0) {\n        if(x2 > 0) {\n            if(x3 > 0) {\n                x1 = x1 - d1;\n                x2 = x2 - d2;\n                x3 = x3 - d3;\n            }\n        }\n    }\n\n    {;\n//@ assert(x3 >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x1 > 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant x1 >= d1;\nloop invariant x2 >= d2;\nloop invariant x3 >= d3;\nloop invariant x1 == x1 + d1 * (x2 > 0 ? 1 : 0) + d1 * (x3 > 0 ? 1 : 0);\nloop invariant x2 == x2 + d2 * (x2 > 0 ? 1 : 0) + d2 * (x3 > 0 ? 1 : 0);\nloop invariant x3 == x3 + d3 * (x3 > 0 ? 1 : 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int d1 = 1;\n    int d2 = 1;\n    int d3 = 1;\n    int x1 = 1;\n    int x2,x3;\n\n    /*@\n\n\n\nloop invariant i4: d1 >= 0;\nloop invariant i5: d2 >= 0;\nloop invariant i6: d3 >= 0;\n\n\n\n\n\n\n*/\nwhile( x1 > 0) {\n        if(x2 > 0) {\n            if(x3 > 0) {\n                x1 = x1 - d1;\n                x2 = x2 - d2;\n                x3 = x3 - d3;\n            }\n        }\n    }\n\n    {;\n//@ assert(x3 >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x3;\nloop invariant x3 <= x2;\nloop invariant x2 <= x1;\nloop invariant x1 <= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int d1 = 1;\n    int d2 = 1;\n    int d3 = 1;\n    int x1 = 1;\n    int x2,x3;\n\n    /*@\n\n\n\n\n*/\nwhile( x1 > 0) {\n        if(x2 > 0) {\n            if(x3 > 0) {\n                x1 = x1 - d1;\n                x2 = x2 - d2;\n                x3 = x3 - d3;\n            }\n        }\n    }\n\n    {;\n//@ assert(x3 >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant x1 >= 0; loop invariant x2 >= 0; loop invariant x3 >= 0; loop invariant x1 <= d1; loop invariant x2 <= d2; loop invariant x3 <= d3; loop invariant x1 + x2 + x3 <= d1 + d2 + d3; loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 2 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 3 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 4 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 5 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 6 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 7 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 8 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 9 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 10 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 11 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 12 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 13 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 14 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 15 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 16 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 17 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 18 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 19 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 20 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 21 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 22 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 23 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 24 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 25 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 26 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 27 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 28 * (d1 + d2 + d3);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int d1 = 1;\n    int d2 = 1;\n    int d3 = 1;\n    int x1 = 1;\n    int x2,x3;\n\n    /*@\n\n*/\nwhile( x1 > 0) {\n        if(x2 > 0) {\n            if(x3 > 0) {\n                x1 = x1 - d1;\n                x2 = x2 - d2;\n                x3 = x3 - d3;\n            }\n        }\n    }\n\n    {;\n//@ assert(x3 >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= 1;\nloop invariant 0 <= x2 <= 1;\nloop invariant 0 <= x3 <= 1;\nloop invariant -1 <= x1 - d1 <= 0;\nloop invariant -1 <= x2 - d2 <= 0;\nloop invariant -1 <= x3 - d3 <= 0;\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant (x1 - d1) >= 0;\nloop invariant (x2 - d2) >= 0;\nloop invariant (x3 - d3) >= 0;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 <= 1;\nloop invariant x2 <= 1;\nloop invariant x3 <= 1;\nloop invariant x1 == 1;\nloop invariant x2 == 1;\nloop invariant x3 == 1;\nloop invariant d1 == 1;\nloop invariant d2 == 1;\nloop invariant d3 == 1;\nloop invariant x1 >= x2;\nloop invariant x1 >= x3;\nloop invariant x2 >= x3;\nloop invariant x1 >= (x2 - d2);\nloop invariant x1 >= (x3 - d3);\nloop invariant x2 >= (x3 - d3);\nloop invariant x1 <= (x2 + d2);\nloop invariant x1 <= (x3 + d3);\nloop invariant x2 <= (x3 + d3);\nloop invariant x1 <= (x2 + d2);\nloop invariant x1 <= (x3 + d3);\nloop invariant x2 <= (x3 + d3);\nloop invariant x1 >= (x2 - d2);\nloop invariant x1 >= (x3 - d3);\nloop invariant x2 >= (x3 - d3);\nloop invariant x1 >= (x2 - d2);\nloop invariant x1 >= (x3 - d3);\nloop invariant x2 >= (x3 - d3);\nloop invariant x1 <= (x2 + d2);\nloop invariant x1 <= (x3 + d3);\nloop invariant x2 <= (x3 + d3);\nloop invariant x1 <= (x2 + d2);\nloop invariant x1 <= (x3 + d3);\nloop invariant x2 <= (x3 + d3);\nloop invariant x1 >= (x2 - d2);\nloop invariant x1 >= (x3 - d3);\nloop invariant x2 >= (x3 - d3);\nloop invariant x1 >= (x2 - d2);\nloop invariant x1 >= (x3 - d3);\nloop invariant x2 >= (x3 - d3);\nloop invariant x1 <= (x2 + d2);\nloop invariant x1 <= (x3 + d3);\nloop invariant x2 <= (x3 + d3);\nloop invariant x1 <= (x2 + d2);\nloop invariant x1 <= (x3 + d3);\nloop invariant x2 <= (x3 + d3);\nloop invariant x1 >= (x2 - d2);\nloop invariant x1 >= (x3 - d3);\nloop invariant x2 >= (x3 - d3);\nloop invariant x1 >= (x2 - d2);\nloop invariant x1 >= (x3 - d3);\nloop invariant x2 >= (x3 - d3);\nloop invariant x1 <= (x2 + d2);\nloop invariant x1 <= (x3 + d3);\nloop invariant x2 <= (x3 + d3);\nloop invariant x1 <= (x2 + d2);\nloop invariant x1 <= (x3 + d3);\nloop invariant x2 <= (x3 + d3);\nloop invariant x1 >= (x2 - d2);\nloop invariant x1 >= (x3 - d3);\nloop invariant x2 >= (x3 - d3);\nloop invariant x1 >= (x2 - d2);\nloop invariant x1 >= (x3 - d3);\nloop invariant x2 >= (x3 - d3);\nloop invariant x1 <= (x2 + d2);\nloop invariant x1 <= (x3 + d3);\nloop invariant x2 <= (x3 + d3);\nloop invariant x1 <= (x2 + d2);\nloop invariant x1 <= (x3 + d3);\nloop invariant x2 <= (x3 + d3);\nloop invariant x1 >= (x2 - d2);\nloop invariant x1 >= (x3 - d3);\nloop invariant x2 >= (x3 - d3);\nloop invariant x1 >= (x2 - d2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int d1 = 1;\n    int d2 = 1;\n    int d3 = 1;\n    int x1 = 1;\n    int x2,x3;\n\n    /*@\nloop invariant i1: 0 <= x1 <= 1;\n\n\nloop invariant i4: -1 <= x1 - d1 <= 0;\n\n\nloop invariant i7: d1 >= 0;\nloop invariant i8: d2 >= 0;\nloop invariant i9: d3 >= 0;\n\n\n\nloop invariant i13: x1 >= 0;\n\n\nloop invariant i16: x1 <= 1;\n\n\n\n\n\nloop invariant i22: d1 == 1;\nloop invariant i23: d2 == 1;\nloop invariant i24: d3 == 1;\n\n\n\n\n\n\n\n\n\n*/\nwhile( x1 > 0) {\n        if(x2 > 0) {\n            if(x3 > 0) {\n                x1 = x1 - d1;\n                x2 = x2 - d2;\n                x3 = x3 - d3;\n            }\n        }\n    }\n\n    {;\n//@ assert(x3 >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x3 <= (x2 * d3);\nloop invariant 1 <= x2 <= (x1 * d2);\nloop invariant 1 <= x1 <= (x3 * d1);\nloop invariant x3 >= 0;\nloop invariant x2 >= 0;\nloop invariant x1 >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int d1 = 1;\n    int d2 = 1;\n    int d3 = 1;\n    int x1 = 1;\n    int x2,x3;\n\n    /*@\n\n\n\n\n\n\n*/\nwhile( x1 > 0) {\n        if(x2 > 0) {\n            if(x3 > 0) {\n                x1 = x1 - d1;\n                x2 = x2 - d2;\n                x3 = x3 - d3;\n            }\n        }\n    }\n\n    {;\n//@ assert(x3 >= 0);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 114: unbound logic variable y. Ignoring loop annotation",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int d1 = 1;\n    int d2 = 1;\n    int d3 = 1;\n    int x1 = 1;\n    int x2,x3;\n\n    /*@\nloop invariant i1: 0 <= x1 <= 1;\nloop invariant i2: x2 >= 0;\nloop invariant i3: x3 >= 0;\nloop invariant i4: d1 >= 1;\nloop invariant i5: d2 >= 1;\nloop invariant i6: d3 >= 1;\nloop invariant i7: x1 <= x2;\nloop invariant i8: x1 <= x3;\nloop invariant i9: x2 <= x3;\nloop invariant i10: d1 <= x1;\nloop invariant i11: d2 <= x2;\nloop invariant i12: d3 <= x3;\nloop invariant i13: (x1 >= 0 ==> x1 >= d1);\nloop invariant i14: (x2 >= 0 ==> x2 >= d2);\nloop invariant i15: (x3 >= 0 ==> x3 >= d3);\nloop invariant i16: (x1 < 0 ==> x2 >= 0 && x3 >= 0);\nloop invariant i17: 1 <= x1 <= d1;\nloop invariant i18: 1 <= x2 <= d2;\nloop invariant i19: 1 <= x3 <= d3;\nloop invariant i20: x2 <= x1;\nloop invariant i21: x3 <= x2;\nloop invariant i22: x3 <= x1;\nloop invariant i23: 1 <= d1 <= 1;\nloop invariant i24: 1 <= d2 <= 1;\nloop invariant i25: 1 <= d3 <= 1;\nloop invariant i26: 1 <= x1 <= 1;\nloop invariant i27: x1 * d1 <= x1;\nloop invariant i28: x1 * d2 <= x2;\nloop invariant i29: x1 * d3 <= x3;\nloop invariant i30: x1 >= 0;\nloop invariant i31: x1 >= x2;\nloop invariant i32: x2 >= x3;\nloop invariant i33: x1 >= x3;\nloop invariant i34: 0 <= d1 <= 1;\nloop invariant i35: 0 <= d2 <= 1;\nloop invariant i36: 0 <= d3 <= 1;\nloop invariant i37: 0 <= x2 <= 1;\nloop invariant i38: 0 <= x3 <= 1;\nloop invariant i39: x1 >= d1;\nloop invariant i40: x2 >= d2;\nloop invariant i41: x3 >= d3;\nloop invariant i42: x1 >= x2 + x3;\nloop invariant i43: d1 >= d2;\nloop invariant i44: d2 >= d3;\nloop invariant i45: d1 >= d3;\nloop invariant i46: d1 >= x1;\nloop invariant i47: d2 >= x2;\nloop invariant i48: d3 >= x3;\nloop invariant i49: d1 >= x1 + x2 + x3;\nloop invariant i50: d2 >= x1 + x2 + x3;\nloop invariant i51: d3 >= x1 + x2 + x3;\nloop invariant i52: d1 >= x1 + x2 + x3 - 1;\nloop invariant i53: d2 >= x1 + x2 + x3 - 1;\nloop invariant i54: d3 >= x1 + x2 + x3 - 1;\nloop invariant i55: d1 >= x1 + x2 + x3 - 2;\nloop invariant i56: d2 >= x1 + x2 + x3 - 2;\nloop invariant i57: d3 >= x1 + x2 + x3 - 2;\nloop invariant i58: d1 >= x1 + x2 + x3 - 3;\nloop invariant i59: d2 >= x1 + x2 + x3 - 3;\nloop invariant i60: d3 >= x1 + x2 + x3 - 3;\nloop invariant i61: d1 >= x1 + x2 + x3 - 4;\nloop invariant i62: d2 >= x1 + x2 + x3 - 4;\nloop invariant i63: d3 >= x1 + x2 + x3 - 4;\nloop invariant i64: d1 >= x1 + x2 + x3 - 5;\nloop invariant i65: d2 >= x1 + x2 + x3 - 5;\nloop invariant i66: d3 >= x1 + x2 + x3 - 5;\nloop invariant i67: d1 >= x1 + x2 + x3 - 6;\nloop invariant i68: d2 >= x1 + x2 + x3 - 6;\nloop invariant i69: d3 >= x1 + x2 + x3 - 6;\nloop invariant i70: d1 >= x1 + x2 + x3 - 7;\nloop invariant i71: d2 >= x1 + x2 + x3 - 7;\nloop invariant i72: d3 >= x1 + x2 + x3 - 7;\nloop invariant i73: d1 >= x1 + x2 + x3 - 8;\nloop invariant i74: d2 >= x1 + x2 + x3 - 8;\nloop invariant i75: d3 >= x1 + x2 + x3 - 8;\nloop invariant i76: d1 >= x1 + x2 + x3 - 9;\nloop invariant i77: d2 >= x1 + x2 + x3 - 9;\nloop invariant i78: d3 >= x1 + x2 + x3 - 9;\nloop invariant i79: d1 >= x1 + x2 + x3 - 10;\nloop invariant i80: d2 >= x1 + x2 + x3 - 10;\nloop invariant i81: d3 >= x1 + x2 + x3 - 10;\nloop invariant i82: d1 >= x1 + x2 + x3 - 11;\nloop invariant i83: d2 >= x1 + x2 + x3 - 11;\nloop invariant i84: d3 >= x1 + x2 + x3 - 11;\nloop invariant i85: d1 >= x1 + x2 + x3 - 12;\nloop invariant i86: d2 >= x1 + x2 + x3 - 12;\nloop invariant i87: d3 >= x1 + x2 + x3 - 12;\nloop invariant i88: d1 >= x1 + x2 + x3 - 13;\nloop invariant i89: d2 >= x1 + x2 + x3 - 13;\nloop invariant i90: d3 >= x1 + x2 + x3 - 13;\nloop invariant i91: d1 >= x1 + x2 + x3 - 14;\nloop invariant i92: d2 >= x1 + x2 + x3 - 14;\nloop invariant i93: d3 >= x1 + x2 + x3 - 14;\nloop invariant i94: d1 >= x1 + x2 + x3 - 15;\nloop invariant i95: d2 >= x1 + x2 + x3 - 15;\nloop invariant i96: d3 >= x1 + x2 + x3 - 15;\nloop invariant i97: 0 <= x1;\nloop invariant i98: 0 <= x2;\nloop invariant i99: 0 <= x3;\nloop invariant i100: x1 <= y;\nloop invariant i101: x2 <= y;\nloop invariant i102: x3 <= y;\nloop invariant i103: x1 <= 1;\nloop invariant i104: x2 <= 1;\nloop invariant i105: x3 <= 1;\nloop invariant i106: ( x1 >= 0 ) ==> ( x1 + d1 >= 0 );\nloop invariant i107: ( x1 >= 0 ) ==> ( x2 >= 0 );\nloop invariant i108: ( x1 >= 0 ) ==> ( x3 >= 0 );\nloop invariant i109: ( x1 >= 0 ) ==> ( x1 + d1 >= 1 );\nloop invariant i110: ( x1 >= 0 ) ==> ( x2 + d2 >= 0 );\nloop invariant i111: ( x1 >= 0 ) ==> ( x3 + d3 >= 0 );\nloop invariant i112: 1 <= x1 <= x1;\nloop invariant i113: 1 <= x2 <= x2;\nloop invariant i114: 1 <= x3 <= x3;\nloop invariant i115: 1 <= d1 <= d1;\nloop invariant i116: 1 <= d2 <= d2;\nloop invariant i117: 1 <= d3 <= d3;\nloop invariant i118: x1 <= 0 ==> (x1 >= 0);\nloop invariant i119: x2 <= 0 ==> (x2 >= 0);\nloop invariant i120: x3 <= 0 ==> (x3 >= 0);\nloop invariant i121: d1 <= 0 ==> (d1 >= 0);\nloop invariant i122: d2 <= 0 ==> (d2 >= 0);\nloop invariant i123: d3 <= 0 ==> (d3 >= 0);\nloop invariant i124: x1 <= 0 ==> (x2 >= 1);\nloop invariant i125: x1 <= 0 ==> (x3 >= 1);\nloop invariant i126: x1 <= 0 ==> (d1 >= 1);\nloop invariant i127: x1 <= 0 ==> (d2 >= 1);\nloop invariant i128: x1 <= 0 ==> (d3 >= 1);\nloop invariant i129: d1 >= 0;\nloop invariant i130: d2 >= 0;\nloop invariant i131: d3 >= 0;\nloop invariant i132: x1 >= 0 ==> x2 >= 0 ==> x3 >= 0;\nloop invariant i133: d1 == 1;\nloop invariant i134: d2 == 1;\nloop invariant i135: d3 == 1;\nloop invariant i136: x1 == (x1_old - d1 * k);\nloop invariant i137: x2 == (x2_old - d2 * k);\nloop invariant i138: x3 == (x3_old - d3 * k);\nloop invariant i139: k >= 0;\nloop invariant i140: x1 <= 0;\nloop invariant i141: (x1 > 0 ==> x2 > 0 ==> x3 > 0);\nloop invariant i142: x1 <= d1;\nloop invariant i143: x2 <= d2;\nloop invariant i144: x3 <= d3;\nloop invariant i145: x1 <= x2 + x2;\nloop invariant i146: x2 <= x3 + x3;\nloop invariant i147: x1 <= x2 + (x2 + 1);\nloop invariant i148: x2 <= x3 + (x3 + 1);\nloop invariant i149: x1 <= x2 + (x2 + 2);\nloop invariant i150: x2 <= x3 + (x3 + 2);\nloop invariant i151: x1 <= x2 + (x2 + 3);\nloop invariant i152: x2 <= x3 + (x3 + 3);\nloop invariant i153: x1 <= x2 + (x2 + 4);\nloop invariant i154: x2 <= x3 + (x3 + 4);\nloop invariant i155: x1 <= x2 + (x2 + 5);\nloop invariant i156: x2 <= x3 + (x3 + 5);\nloop invariant i157: x1 <= x2 + (x2 + 6);\nloop invariant i158: x2 <= x3 + (x3 + 6);\nloop invariant i159: x1 <= x2 + (x2 + 7);\nloop invariant i160: x2 <= x3 + (x3 + 7);\nloop invariant i161: x1 <= x2 + (x2 + 8);\nloop invariant i162: x2 <= x3 + (x3 + 8);\nloop invariant i163: x1 <= x2 + (x2 + 9);\nloop invariant i164: x2 <= x3 + (x3 + 9);\nloop invariant i165: x1 <= x2 + (x2 + 10);\nloop invariant i166: x2 <= x3 + (x3 + 10);\nloop invariant i167: x1 <= x2 + (x2 + 11);\nloop invariant i168: x2 <= x3 + (x3 + 11);\nloop invariant i169: x1 <= x2 + (x2 + 12);\nloop invariant i170: x2 <= x3 + (x3 + 12);\nloop invariant i171: x1 <= x2 + (x2 + 13);\nloop invariant i172: x2 <= x3 + (x3 + 13);\nloop invariant i173: x1 <= x2 + (x2 + 14);\nloop invariant i174: x2 <= x3 + (x3 + 14);\nloop invariant i175: x1 <= x2 + (x2 + 15);\nloop invariant i176: x2 <= x3 + (x3 + 15);\nloop invariant i177: x1 <= x2 + (x2 + 16);\nloop invariant i178: x2 <= x3 + (x3 + 16);\nloop invariant i179: x1 <= x2 + (x2 + 17);\nloop invariant i180: x2 <= x3 + (x3 + 17);\nloop invariant i181: x1 <= x2 + (x2 + 18);\nloop invariant i182: x2 <= x3 + (x3 + 18);\nloop invariant i183: x1 <= x2 + (x2 + 19);\nloop invariant i184: x2 <= x3 + (x3 + 19);\nloop invariant i185: x1 <= x2 + (x2 + 20);\nloop invariant i186: x2 <= x3 + (x3 + 20);\nloop invariant i187: x1 <= x2 + (x2 + 21);\nloop invariant i188: x2 <= x3 + (x3 + 21);\nloop invariant i189: x1 <= x2 + (x2 + 22);\nloop invariant i190: x2 <= x3 + (x3 + 22);\nloop invariant i191: x1 <= x2 + (x2 + 23);\nloop invariant i192: x2 <= x3 + (x3 + 23);\nloop invariant i193: x1 <= x2 + (x2 + 24);\nloop invariant i194: x2 <= x3 + (x3 + 24);\nloop invariant i195: x1 <= x2 + (x2 + 25);\nloop invariant i196: x2 <= x3 + (x3 + 25);\nloop invariant i197: x1 <= x2 + (x2 + 26);\nloop invariant i198: x2 <= x3 + (x3 + 26);\nloop invariant i199: x1 <= x2 + (x2 + 27);\nloop invariant i200: x2 <= x3 + (x3 + 27);\nloop invariant i201: x1 <= x2 + (x2 + 28);\nloop invariant i202: x2 <= x3 + (x3 + 28);\nloop invariant i203: x1 > 0;\nloop invariant i204: x1 == x1 + d1 * (x2 > 0 ? 1 : 0) + d1 * (x3 > 0 ? 1 : 0);\nloop invariant i205: x2 == x2 + d2 * (x2 > 0 ? 1 : 0) + d2 * (x3 > 0 ? 1 : 0);\nloop invariant i206: x3 == x3 + d3 * (x3 > 0 ? 1 : 0);\nloop invariant i207: x1 >= 0; loop invariant x2 >= 0; loop invariant x3 >= 0; loop invariant x1 <= d1; loop invariant x2 <= d2; loop invariant x3 <= d3; loop invariant x1 + x2 + x3 <= d1 + d2 + d3; loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 2 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 3 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 4 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 5 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 6 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 7 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 8 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 9 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 10 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 11 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 12 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 13 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 14 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 15 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 16 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 17 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 18 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 19 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 20 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 21 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 22 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 23 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 24 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 25 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 26 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 27 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 28 * (d1 + d2 + d3);\nloop invariant i208: -1 <= x1 - d1 <= 0;\nloop invariant i209: -1 <= x2 - d2 <= 0;\nloop invariant i210: -1 <= x3 - d3 <= 0;\nloop invariant i211: (x1 - d1) >= 0;\nloop invariant i212: (x2 - d2) >= 0;\nloop invariant i213: (x3 - d3) >= 0;\nloop invariant i214: x1 == 1;\nloop invariant i215: x2 == 1;\nloop invariant i216: x3 == 1;\nloop invariant i217: x1 >= (x2 - d2);\nloop invariant i218: x1 >= (x3 - d3);\nloop invariant i219: x2 >= (x3 - d3);\nloop invariant i220: x1 <= (x2 + d2);\nloop invariant i221: x1 <= (x3 + d3);\nloop invariant i222: x2 <= (x3 + d3);\nloop invariant i223: 1 <= x3 <= (x2 * d3);\nloop invariant i224: 1 <= x2 <= (x1 * d2);\nloop invariant i225: 1 <= x1 <= (x3 * d1);\n*/\nwhile( x1 > 0) {\n        if(x2 > 0) {\n            if(x3 > 0) {\n                x1 = x1 - d1;\n                x2 = x2 - d2;\n                x3 = x3 - d3;\n            }\n        }\n    }\n\n    {;\n//@ assert(x3 >= 0);\n}\n\n}",
        "combined_annotation_num_solver_calls": 58,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int d1 = 1;\n    int d2 = 1;\n    int d3 = 1;\n    int x1 = 1;\n    int x2,x3;\n\n    /*@\nloop invariant i1: 0 <= x1 <= 1;\n\n\nloop invariant i4: d1 >= 1;\nloop invariant i5: d2 >= 1;\nloop invariant i6: d3 >= 1;\n\n\n\n\n\n\n\n\n\nloop invariant i16: (x1 < 0 ==> x2 >= 0 && x3 >= 0);\n\n\n\n\n\n\nloop invariant i23: 1 <= d1 <= 1;\nloop invariant i24: 1 <= d2 <= 1;\nloop invariant i25: 1 <= d3 <= 1;\n\nloop invariant i27: x1 * d1 <= x1;\n\n\nloop invariant i30: x1 >= 0;\n\n\n\nloop invariant i34: 0 <= d1 <= 1;\nloop invariant i35: 0 <= d2 <= 1;\nloop invariant i36: 0 <= d3 <= 1;\n\n\n\n\n\n\nloop invariant i43: d1 >= d2;\nloop invariant i44: d2 >= d3;\nloop invariant i45: d1 >= d3;\nloop invariant i46: d1 >= x1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i97: 0 <= x1;\n\n\n\n\n\nloop invariant i103: x1 <= 1;\n\n\nloop invariant i106: ( x1 >= 0 ) ==> ( x1 + d1 >= 0 );\n\n\nloop invariant i109: ( x1 >= 0 ) ==> ( x1 + d1 >= 1 );\n\n\n\n\n\nloop invariant i115: 1 <= d1 <= d1;\nloop invariant i116: 1 <= d2 <= d2;\nloop invariant i117: 1 <= d3 <= d3;\nloop invariant i118: x1 <= 0 ==> (x1 >= 0);\n\n\nloop invariant i121: d1 <= 0 ==> (d1 >= 0);\nloop invariant i122: d2 <= 0 ==> (d2 >= 0);\nloop invariant i123: d3 <= 0 ==> (d3 >= 0);\n\n\nloop invariant i126: x1 <= 0 ==> (d1 >= 1);\nloop invariant i127: x1 <= 0 ==> (d2 >= 1);\nloop invariant i128: x1 <= 0 ==> (d3 >= 1);\nloop invariant i129: d1 >= 0;\nloop invariant i130: d2 >= 0;\nloop invariant i131: d3 >= 0;\n\nloop invariant i133: d1 == 1;\nloop invariant i134: d2 == 1;\nloop invariant i135: d3 == 1;\n\n\n\n\n\n\nloop invariant i142: x1 <= d1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i207: x1 >= 0; loop invariant x2 >= 0; loop invariant x3 >= 0; loop invariant x1 <= d1; loop invariant x2 <= d2; loop invariant x3 <= d3; loop invariant x1 + x2 + x3 <= d1 + d2 + d3; loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 2 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 3 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 4 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 5 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 6 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 7 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 8 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 9 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 10 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 11 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 12 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 13 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 14 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 15 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 16 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 17 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 18 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 19 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 20 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 21 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 22 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 23 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 24 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 25 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 26 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 27 * (d1 + d2 + d3); loop invariant x1 + x2 + x3 + d1 + d2 + d3 <= 28 * (d1 + d2 + d3);\nloop invariant i208: -1 <= x1 - d1 <= 0;\nloop invariant i209: -1 <= x2 - d2 <= 0;\nloop invariant i210: -1 <= x3 - d3 <= 0;\n\n\n\n\n\n\nloop invariant i217: x1 >= (x2 - d2);\nloop invariant i218: x1 >= (x3 - d3);\nloop invariant i219: x2 >= (x3 - d3);\nloop invariant i220: x1 <= (x2 + d2);\nloop invariant i221: x1 <= (x3 + d3);\nloop invariant i222: x2 <= (x3 + d3);\n\n\n\n*/\nwhile( x1 > 0) {\n        if(x2 > 0) {\n            if(x3 > 0) {\n                x1 = x1 - d1;\n                x2 = x2 - d2;\n                x3 = x3 - d3;\n            }\n        }\n    }\n\n    {;\n//@ assert(x3 >= 0);\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c"
        ],
        "skipped": [],
        "total": 8,
        "success_count": 4,
        "failure_count": 4,
        "success_rate": 0.5
    }
}