{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int i, j;\n    i = unknown_int();\n    j = unknown_int();\n    if (!(i >= 0 && j >= 0)) return 0;\n    int x = i;\n    int y = j;\n    while(x != 0) {\n        x--;\n        y--;\n    }\n\n    if (i == j) {\n        {;\n//@ assert(y == 0);\n}\n\n    }\n    return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= j;\nloop invariant 0 <= y <= i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x <= j;\nloop invariant y <= i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x + y == i + j - (x + y);\nloop invariant x == i - (x + y);\nloop invariant y == j - (x + y);\nloop invariant x == i - y;\nloop invariant y == j - x;\nloop invariant x + y == i + j - x - y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i + j - x = y;\nloop invariant x >= y;\nloop invariant i >= j;\nloop invariant x == j ==> y == 0;\nloop invariant i == j ==> x == y;\nloop invariant i != j ==> x != y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i; loop invariant 0 <= y <= j; loop invariant i >= j ==> y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x + y == i + j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant y == j - x;\nloop invariant i == j ==> y == 0;\nloop invariant i != j ==> (x != 0 || y != 0);\nloop invariant x != 0 ==> y != 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant i >= x;\nloop invariant j >= y;\nloop invariant x >= 0 ==> y <= j;\nloop invariant y >= 0 ==> x <= i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x >= y;\nloop invariant x + y == i;\nloop invariant x - y == i - 2*y;\nloop invariant x - y == i - 2*y;\nloop invariant y >= 0 ==> y + 1 <= j;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == i + j ==> y == 0;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant (x == 0) ==> (y == 0);\nloop invariant (x != 0) ==> (y != 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x + y == i + j;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j - x - y;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == i ==> y == j;\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;loop invariant y >= 0;loop invariant i == x;loop invariant j == y;loop invariant y == j;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;\n*/\n```",
            "```\n/*@\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i + j == x + y;\nloop invariant i == x || j == y;\nloop invariant i <= j || j == y;\nloop invariant i >= j || i == x;\nloop invariant i <= j || j == x;\nloop invariant i >= j || i == y;\nloop invariant i == j || i <= j;\nloop invariant i == j || i >= j;\nloop invariant i == j || i == x;\nloop invariant i == j || j == y;\nloop invariant i == j || i == y || j == x;\nloop invariant i == j || i == x || j == y;\nloop invariant i == j || i <= j || j == y;\nloop invariant i == j || i >= j || i == x;\nloop invariant i == j || i <= j || j == x;\nloop invariant i == j || i >= j || i == y;\n*/\n```",
            "```\n/*@\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j;\nloop invariant x >= y;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant y <= j;\nloop invariant y <= i;\nloop invariant x <= i;\nloop invariant x <= j;\nloop invariant x <= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant y <= i;\nloop invariant x <= j;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= x <= j;\nloop invariant 0 <= y <= i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int i, j;\n    i = unknown_int();\n    j = unknown_int();\n    if (!(i >= 0 && j >= 0)) return 0;\n    int x = i;\n    int y = j;\n    /*@\n\n\n\n\n*/\nwhile(x != 0) {\n        x--;\n        y--;\n    }\n\n    if (i == j) {\n        {;\n//@ assert(y == 0);\n}\n\n    }\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y >= i + j;\nloop invariant x <= j;\nloop invariant y <= i;\nloop invariant x >= i - j;\nloop invariant y >= j - i;\nloop invariant x + y == i + j - (x + y);\nloop invariant x == i - (x + y);\nloop invariant y == j - (x + y);\nloop invariant x == i - y;\nloop invariant y == j - x;\nloop invariant x + y == i + j - x - y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\nloop invariant x + y == i + j - (x + y);\nloop invariant x + y == i + j - x + y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int i, j;\n    i = unknown_int();\n    j = unknown_int();\n    if (!(i >= 0 && j >= 0)) return 0;\n    int x = i;\n    int y = j;\n    /*@\nloop invariant i1: 0 <= x <= i;\n\nloop invariant i3: x <= i;\nloop invariant i4: y <= j;\nloop invariant i5: x >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x != 0) {\n        x--;\n        y--;\n    }\n\n    if (i == j) {\n        {;\n//@ assert(y == 0);\n}\n\n    }\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int i, j;\n    i = unknown_int();\n    j = unknown_int();\n    if (!(i >= 0 && j >= 0)) return 0;\n    int x = i;\n    int y = j;\n    /*@\n\n*/\nwhile(x != 0) {\n        x--;\n        y--;\n    }\n\n    if (i == j) {\n        {;\n//@ assert(y == 0);\n}\n\n    }\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i + j - x = y;\nloop invariant x >= y;\nloop invariant i >= j;\nloop invariant x == j ==> y == 0;\nloop invariant i == j ==> x == y;\nloop invariant i != j ==> x != y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int i, j;\n    i = unknown_int();\n    j = unknown_int();\n    if (!(i >= 0 && j >= 0)) return 0;\n    int x = i;\n    int y = j;\n    /*@\nloop invariant i1: x >= 0;\n\n\n\n\n\nloop invariant i7: i == j ==> x == y;\nloop invariant i8: i != j ==> x != y;\n*/\nwhile(x != 0) {\n        x--;\n        y--;\n    }\n\n    if (i == j) {\n        {;\n//@ assert(y == 0);\n}\n\n    }\n    return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i; loop invariant 0 <= y <= j; loop invariant i >= j ==> y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int i, j;\n    i = unknown_int();\n    j = unknown_int();\n    if (!(i >= 0 && j >= 0)) return 0;\n    int x = i;\n    int y = j;\n    /*@\nloop invariant i1: 0 <= x <= i; loop invariant 0 <= y <= j; loop invariant i >= j ==> y == 0;\n*/\nwhile(x != 0) {\n        x--;\n        y--;\n    }\n\n    if (i == j) {\n        {;\n//@ assert(y == 0);\n}\n\n    }\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x + y == i + j;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant y == j - x;\nloop invariant i == j ==> y == 0;\nloop invariant i != j ==> (x != 0 || y != 0);\nloop invariant x != 0 ==> y != 0;\nloop invariant x == 0 ==> y == 0;\nloop invariant i >= x;\nloop invariant j >= y;\nloop invariant x >= 0 ==> y <= j;\nloop invariant y >= 0 ==> x <= i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == 0 ==> y == j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int i, j;\n    i = unknown_int();\n    j = unknown_int();\n    if (!(i >= 0 && j >= 0)) return 0;\n    int x = i;\n    int y = j;\n    /*@\nloop invariant i1: 0 <= x <= i;\n\n\nloop invariant i4: i >= 0;\nloop invariant i5: j >= 0;\nloop invariant i6: x >= 0;\n\nloop invariant i8: x <= i;\nloop invariant i9: y <= j;\n\n\n\n\n\n\nloop invariant i16: i >= x;\nloop invariant i17: j >= y;\nloop invariant i18: x >= 0 ==> y <= j;\nloop invariant i19: y >= 0 ==> x <= i;\n\n\n*/\nwhile(x != 0) {\n        x--;\n        y--;\n    }\n\n    if (i == j) {\n        {;\n//@ assert(y == 0);\n}\n\n    }\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x == i - y;\nloop invariant x >= y;\nloop invariant x + y == i;\nloop invariant x - y == i - 2*y;\nloop invariant x - y == i - 2*y;\nloop invariant y >= 0 ==> y + 1 <= j;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int i, j;\n    i = unknown_int();\n    j = unknown_int();\n    if (!(i >= 0 && j >= 0)) return 0;\n    int x = i;\n    int y = j;\n    /*@\nloop invariant i1: 0 <= x <= i;\n\nloop invariant i3: x >= 0;\n\nloop invariant i5: x <= i;\nloop invariant i6: y <= j;\n\n\n\n\n\nloop invariant i12: y >= 0 ==> y + 1 <= j ==> y < j;\n\nloop invariant i14: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0;\nloop invariant i15: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0;\nloop invariant i16: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i17: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i18: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i19: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i20: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i21: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i22: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i23: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i24: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i25: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i26: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\n*/\nwhile(x != 0) {\n        x--;\n        y--;\n    }\n\n    if (i == j) {\n        {;\n//@ assert(y == 0);\n}\n\n    }\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x + y == i + j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == i + j ==> y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int i, j;\n    i = unknown_int();\n    j = unknown_int();\n    if (!(i >= 0 && j >= 0)) return 0;\n    int x = i;\n    int y = j;\n    /*@\nloop invariant i1: 0 <= x <= i;\n\n\nloop invariant i4: x >= 0;\n\n\n*/\nwhile(x != 0) {\n        x--;\n        y--;\n    }\n\n    if (i == j) {\n        {;\n//@ assert(y == 0);\n}\n\n    }\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int i, j;\n    i = unknown_int();\n    j = unknown_int();\n    if (!(i >= 0 && j >= 0)) return 0;\n    int x = i;\n    int y = j;\n    /*@\n\n*/\nwhile(x != 0) {\n        x--;\n        y--;\n    }\n\n    if (i == j) {\n        {;\n//@ assert(y == 0);\n}\n\n    }\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int i, j;\n    i = unknown_int();\n    j = unknown_int();\n    if (!(i >= 0 && j >= 0)) return 0;\n    int x = i;\n    int y = j;\n    /*@\n\n*/\nwhile(x != 0) {\n        x--;\n        y--;\n    }\n\n    if (i == j) {\n        {;\n//@ assert(y == 0);\n}\n\n    }\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i == x;\nloop invariant j == y;\nloop invariant (x == 0) ==> (y == 0);\nloop invariant (x != 0) ==> (y != 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int i, j;\n    i = unknown_int();\n    j = unknown_int();\n    if (!(i >= 0 && j >= 0)) return 0;\n    int x = i;\n    int y = j;\n    /*@\n\nloop invariant i2: x >= 0;\n\n\n\n\n\n*/\nwhile(x != 0) {\n        x--;\n        y--;\n    }\n\n    if (i == j) {\n        {;\n//@ assert(y == 0);\n}\n\n    }\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= i;\nloop invariant 0 <= y <= j;\nloop invariant x + y == i + j;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant x + y == i + j - x - y;\nloop invariant x == 0 ==> y == 0;\nloop invariant x == 0 ==> y == j;\nloop invariant y == 0 ==> x == i;\nloop invariant x == i ==> y == j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int i, j;\n    i = unknown_int();\n    j = unknown_int();\n    if (!(i >= 0 && j >= 0)) return 0;\n    int x = i;\n    int y = j;\n    /*@\nloop invariant i1: 0 <= x <= i;\n\n\nloop invariant i4: x <= i;\nloop invariant i5: y <= j;\n\n\n\n\nloop invariant i10: x == i ==> y == j;\n*/\nwhile(x != 0) {\n        x--;\n        y--;\n    }\n\n    if (i == j) {\n        {;\n//@ assert(y == 0);\n}\n\n    }\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant x >= 0;loop invariant y >= 0;loop invariant i == x;loop invariant j == y;loop invariant y == j;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int i, j;\n    i = unknown_int();\n    j = unknown_int();\n    if (!(i >= 0 && j >= 0)) return 0;\n    int x = i;\n    int y = j;\n    /*@\nloop invariant i1: x >= 0;loop invariant y >= 0;loop invariant i == x;loop invariant j == y;loop invariant y == j;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;\n*/\nwhile(x != 0) {\n        x--;\n        y--;\n    }\n\n    if (i == j) {\n        {;\n//@ assert(y == 0);\n}\n\n    }\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i + j == x + y;\nloop invariant i == x || j == y;\nloop invariant i <= j || j == y;\nloop invariant i >= j || i == x;\nloop invariant i <= j || j == x;\nloop invariant i >= j || i == y;\nloop invariant i == j || i <= j;\nloop invariant i == j || i >= j;\nloop invariant i == j || i == x;\nloop invariant i == j || j == y;\nloop invariant i == j || i == y || j == x;\nloop invariant i == j || i == x || j == y;\nloop invariant i == j || i <= j || j == y;\nloop invariant i == j || i >= j || i == x;\nloop invariant i == j || i <= j || j == x;\nloop invariant i == j || i >= j || i == y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int i, j;\n    i = unknown_int();\n    j = unknown_int();\n    if (!(i >= 0 && j >= 0)) return 0;\n    int x = i;\n    int y = j;\n    /*@\nloop invariant i1: i >= 0;\nloop invariant i2: j >= 0;\nloop invariant i3: x >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x != 0) {\n        x--;\n        y--;\n    }\n\n    if (i == j) {\n        {;\n//@ assert(y == 0);\n}\n\n    }\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= j;\nloop invariant x >= y;\nloop invariant x >= i;\nloop invariant y >= j;\nloop invariant y <= j;\nloop invariant y <= i;\nloop invariant x <= i;\nloop invariant x <= j;\nloop invariant x <= y;\nloop invariant x <= i;\nloop invariant y <= j;\nloop invariant y <= i;\nloop invariant x <= j;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant x >= y;\nloop invariant x <= i;\nloop invariant y <= i;\nloop invariant i >= j;\nloop invariant x >= j;\nloop invariant y >= j;\nloop invariant x <= i;\nloop invariant y <= i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int i, j;\n    i = unknown_int();\n    j = unknown_int();\n    if (!(i >= 0 && j >= 0)) return 0;\n    int x = i;\n    int y = j;\n    /*@\nloop invariant i1: i >= 0;\nloop invariant i2: j >= 0;\nloop invariant i3: x >= 0;\n\n\n\n\n\nloop invariant i9: y <= j;\n\nloop invariant i11: x <= i;\n\n\n\n*/\nwhile(x != 0) {\n        x--;\n        y--;\n    }\n\n    if (i == j) {\n        {;\n//@ assert(y == 0);\n}\n\n    }\n    return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 39: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int i, j;\n    i = unknown_int();\n    j = unknown_int();\n    if (!(i >= 0 && j >= 0)) return 0;\n    int x = i;\n    int y = j;\n    /*@\nloop invariant i1: 0 <= y <= 100000;\nloop invariant i2: x >= (1 + (y - 1) * y / 2);\nloop invariant i3: 0 <= x <= j;\nloop invariant i4: 0 <= y <= i;\nloop invariant i5: 0 <= x <= i;\nloop invariant i6: 0 <= y <= j;\nloop invariant i7: x <= i;\nloop invariant i8: y <= j;\nloop invariant i9: x >= 0;\nloop invariant i10: y >= 0;\nloop invariant i11: x + y >= i + j;\nloop invariant i12: x <= j;\nloop invariant i13: y <= i;\nloop invariant i14: x >= i - j;\nloop invariant i15: y >= j - i;\nloop invariant i16: x + y == i + j - (x + y);\nloop invariant i17: x == i - (x + y);\nloop invariant i18: y == j - (x + y);\nloop invariant i19: x == i - y;\nloop invariant i20: y == j - x;\nloop invariant i21: x + y == i + j - x - y;\nloop invariant i22: x + y == i + j - x + y;\nloop invariant i23: i + j - x = y;\nloop invariant i24: x >= y;\nloop invariant i25: i >= j;\nloop invariant i26: x == j ==> y == 0;\nloop invariant i27: i == j ==> x == y;\nloop invariant i28: i != j ==> x != y;\nloop invariant i29: 0 <= x <= i; loop invariant 0 <= y <= j; loop invariant i >= j ==> y == 0;\nloop invariant i30: x + y == i + j;\nloop invariant i31: i >= 0;\nloop invariant i32: j >= 0;\nloop invariant i33: i == j ==> y == 0;\nloop invariant i34: i != j ==> (x != 0 || y != 0);\nloop invariant i35: x != 0 ==> y != 0;\nloop invariant i36: x == 0 ==> y == 0;\nloop invariant i37: i >= x;\nloop invariant i38: j >= y;\nloop invariant i39: x >= 0 ==> y <= j;\nloop invariant i40: y >= 0 ==> x <= i;\nloop invariant i41: x == 0 ==> y == j;\nloop invariant i42: y == 0 ==> x == i;\nloop invariant i43: x + y == i;\nloop invariant i44: x - y == i - 2*y;\nloop invariant i45: y >= 0 ==> y + 1 <= j;\nloop invariant i46: y >= 0 ==> y + 1 <= j ==> y < j;\nloop invariant i47: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i;\nloop invariant i48: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0;\nloop invariant i49: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0;\nloop invariant i50: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i51: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i52: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i53: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i54: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i55: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i56: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i57: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i58: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i59: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i60: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i61: x + y == i + j ==> y == 0;\nloop invariant i62: 0 <= i <= j;\nloop invariant i63: i == x;\nloop invariant i64: j == y;\nloop invariant i65: (x == 0) ==> (y == 0);\nloop invariant i66: (x != 0) ==> (y != 0);\nloop invariant i67: x == i ==> y == j;\nloop invariant i68: x >= 0;loop invariant y >= 0;loop invariant i == x;loop invariant j == y;loop invariant y == j;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;\nloop invariant i69: i + j == x + y;\nloop invariant i70: i == x || j == y;\nloop invariant i71: i <= j || j == y;\nloop invariant i72: i >= j || i == x;\nloop invariant i73: i <= j || j == x;\nloop invariant i74: i >= j || i == y;\nloop invariant i75: i == j || i <= j;\nloop invariant i76: i == j || i >= j;\nloop invariant i77: i == j || i == x;\nloop invariant i78: i == j || j == y;\nloop invariant i79: i == j || i == y || j == x;\nloop invariant i80: i == j || i == x || j == y;\nloop invariant i81: i == j || i <= j || j == y;\nloop invariant i82: i == j || i >= j || i == x;\nloop invariant i83: i == j || i <= j || j == x;\nloop invariant i84: i == j || i >= j || i == y;\nloop invariant i85: x >= i;\nloop invariant i86: y >= j;\nloop invariant i87: x <= y;\nloop invariant i88: x >= j;\n*/\nwhile(x != 0) {\n        x--;\n        y--;\n    }\n\n    if (i == j) {\n        {;\n//@ assert(y == 0);\n}\n\n    }\n    return 0;\n}",
        "combined_annotation_num_solver_calls": 15,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n    int i, j;\n    i = unknown_int();\n    j = unknown_int();\n    if (!(i >= 0 && j >= 0)) return 0;\n    int x = i;\n    int y = j;\n    /*@\n\n\n\n\nloop invariant i5: 0 <= x <= i;\nloop invariant i6: 0 <= y <= j;\nloop invariant i7: x <= i;\nloop invariant i8: y <= j;\nloop invariant i9: x >= 0;\nloop invariant i10: y >= 0;\nloop invariant i11: x + y >= i + j;\n\n\nloop invariant i14: x >= i - j;\nloop invariant i15: y >= j - i;\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i27: i == j ==> x == y;\nloop invariant i28: i != j ==> x != y;\nloop invariant i29: 0 <= x <= i; loop invariant 0 <= y <= j; loop invariant i >= j ==> y == 0;\nloop invariant i30: x + y == i + j;\nloop invariant i31: i >= 0;\nloop invariant i32: j >= 0;\nloop invariant i33: i == j ==> y == 0;\nloop invariant i34: i != j ==> (x != 0 || y != 0);\n\n\nloop invariant i37: i >= x;\nloop invariant i38: j >= y;\nloop invariant i39: x >= 0 ==> y <= j;\nloop invariant i40: y >= 0 ==> x <= i;\nloop invariant i41: x == 0 ==> y == j;\nloop invariant i42: y == 0 ==> x == i;\n\n\n\nloop invariant i46: y >= 0 ==> y + 1 <= j ==> y < j;\nloop invariant i47: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i;\nloop invariant i48: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0;\nloop invariant i49: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0;\nloop invariant i50: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i51: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i52: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i53: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i54: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i55: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i56: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i57: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i58: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i59: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i60: y >= 0 ==> y + 1 <= j ==> y < j ==> x >= 0 ==> x >= j - i ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\n\n\nloop invariant i63: i == x;\nloop invariant i64: j == y;\n\n\nloop invariant i67: x == i ==> y == j;\nloop invariant i68: x >= 0;loop invariant y >= 0;loop invariant i == x;loop invariant j == y;loop invariant y == j;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;loop invariant y == 0;loop invariant x == 0;loop invariant y == 0;loop invariant i == j;\nloop invariant i69: i + j == x + y;\nloop invariant i70: i == x || j == y;\nloop invariant i71: i <= j || j == y;\nloop invariant i72: i >= j || i == x;\nloop invariant i73: i <= j || j == x;\nloop invariant i74: i >= j || i == y;\nloop invariant i75: i == j || i <= j;\nloop invariant i76: i == j || i >= j;\nloop invariant i77: i == j || i == x;\nloop invariant i78: i == j || j == y;\nloop invariant i79: i == j || i == y || j == x;\nloop invariant i80: i == j || i == x || j == y;\nloop invariant i81: i == j || i <= j || j == y;\nloop invariant i82: i == j || i >= j || i == x;\nloop invariant i83: i == j || i <= j || j == x;\nloop invariant i84: i == j || i >= j || i == y;\nloop invariant i85: x >= i;\nloop invariant i86: y >= j;\nloop invariant i87: x <= y;\nloop invariant i88: x >= j;\n*/\nwhile(x != 0) {\n        x--;\n        y--;\n    }\n\n    if (i == j) {\n        {;\n//@ assert(y == 0);\n}\n\n    }\n    return 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c"
        ],
        "skipped": [],
        "total": 114,
        "success_count": 98,
        "failure_count": 16,
        "success_rate": 0.8596491228070176
    }
}