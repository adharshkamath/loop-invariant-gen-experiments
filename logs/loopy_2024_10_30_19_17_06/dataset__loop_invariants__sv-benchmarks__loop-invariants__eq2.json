{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  while (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant z = x + 1;\nloop invariant y = x + 1 + z;\nloop invariant w = x;\nloop invariant y >= x;\nloop invariant z >= y;\nloop invariant x <= z;\nloop invariant y <= z;\nloop invariant y >= w;\nloop invariant z >= w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\n*/\n```",
            "```\n/*@\nloop invariant y >= 1;\nloop invariant y <= x + 1;\nloop invariant x >= y - 1;\nloop invariant z >= x + 1;\nloop invariant z <= y;\nloop invariant y == z ==> y == x + 1;\nloop invariant y != z ==> y >= x + 1 && y <= x + 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= w;\nloop invariant 0 <= y <= w + 1;\nloop invariant 0 <= z <= w + 1;\nloop invariant x <= y;\nloop invariant y <= z;\nloop invariant z <= w + 1;\nloop invariant x <= z;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= w <= w;loop invariant 0 <= x <= x;loop invariant w <= x <= w;loop invariant w + 1 <= y <= x + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= w;\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant 0 <= z;\nloop invariant w <= x;\nloop invariant w <= y;\nloop invariant w <= z;\nloop invariant x <= y;\nloop invariant x <= z;\nloop invariant y <= z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= w <= 4294967295;\nloop invariant 0 <= x <= 4294967295;\nloop invariant 1 <= y <= 4294967296;\nloop invariant 1 <= z <= 4294967296;\nloop invariant x == w;\nloop invariant y == w + 1;\nloop invariant z == x + 1;\nloop invariant unknown_uint() ==> (y == z);\nloop invariant unknown_uint() ==> (x == w);\nloop invariant unknown_uint() ==> (y == w + 1);\nloop invariant unknown_uint() ==> (z == x + 1);\nloop invariant unknown_uint() ==> (y <= z);\nloop invariant unknown_uint() ==> (y >= z);\nloop invariant unknown_uint() ==> (x <= y);\nloop invariant unknown_uint() ==> (x >= y);\nloop invariant unknown_uint() ==> (x <= z);\nloop invariant unknown_uint() ==> (x >= z);\nloop invariant unknown_uint() ==> (x <= w);\nloop invariant unknown_uint() ==> (x >= w);\nloop invariant unknown_uint() ==> (y <= w + 1);\nloop invariant unknown_uint() ==> (y >= w + 1);\nloop invariant unknown_uint() ==> (z <= x + 1);\nloop invariant unknown_uint() ==> (z >= x + 1);\nloop invariant unknown_uint() ==> (w <= x);\nloop invariant unknown_uint() ==> (w >= x);\nloop invariant unknown_uint() ==> (w <= y - 1);\nloop invariant unknown_uint() ==> (w >= y - 1);\nloop invariant unknown_uint() ==> (w <= z - 1);\nloop invariant unknown_uint() ==> (w >= z - 1);\nloop invariant unknown_uint() ==> (w <= 4294967295);\nloop invariant unknown_uint() ==> (w >= 0);\nloop invariant unknown_uint() ==> (x <= 4294967295);\nloop invariant unknown_uint() ==> (x >= 0);\nloop invariant unknown_uint() ==> (y <= 4294967296);\nloop invariant unknown_uint() ==> (y >= 1);\nloop invariant unknown_uint() ==> (z <= 4294967296);\nloop invariant unknown_uint() ==> (z >= 1);\nloop invariant unknown_uint() ==> (w <= x);\nloop invariant unknown_uint() ==> (w >= x);\nloop invariant unknown_uint() ==> (w <= y - 1);\nloop invariant unknown_uint() ==> (w >= y - 1);\nloop invariant unknown_uint() ==> (w <= z - 1);\nloop invariant unknown_uint() ==> (w >= z - 1);\nloop invariant unknown_uint() ==> (w <= 4294967295);\nloop invariant unknown_uint() ==> (w >= 0);\nloop invariant unknown_uint() ==> (x <= 4294967295);\nloop invariant unknown_uint() ==> (x >= 0);\nloop invariant unknown_uint() ==> (y <= 4294967296);\nloop invariant unknown_uint() ==> (y >= 1);\nloop invariant unknown_uint() ==> (z <= 4294967296);\nloop invariant unknown_uint() ==> (z >= 1);\nloop invariant unknown_uint() ==> (w <= x);\nloop invariant unknown_uint() ==> (w >= x);\nloop invariant unknown_uint() ==> (w <= y - 1);\nloop invariant unknown_uint() ==> (w >= y - 1);\nloop invariant unknown_uint() ==> (w <= z - 1);\nloop invariant unknown_uint() ==> (w >= z - 1);\nloop invariant unknown_uint() ==> (w <= 4294967295);\nloop invariant unknown_uint() ==> (w >= 0);\nloop invariant unknown_uint() ==> (x <= 4294967295);\nloop invariant unknown_uint() ==> (x >= 0);\nloop invariant unknown_uint() ==> (y <= 4294967296);\nloop invariant unknown_uint() ==> (y >= 1);\nloop invariant unknown_uint() ==> (z <= 4294967296);\nloop invariant unknown_uint() ==> (z >= 1);\nloop invariant unknown_uint() ==> (w <= x);\nloop invariant unknown_uint() ==> (w >= x);\nloop invariant unknown_uint() ==> (w <= y - 1);\nloop invariant unknown_uint() ==> (w >= y - 1);\nloop invariant unknown_uint() ==> (w <= z - 1);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= y <= z;\nloop invariant x <= w <= y;\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\n*/\n```",
            "```\n/*@\nloop invariant 1 <= y <= z;\nloop invariant 1 <= x <= z;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\n*/\n```",
            "```\n/*@\nloop invariant unknown_uint() >= 0;\nloop invariant y >= w + 1;\nloop invariant z >= x + 1;\nloop invariant y == z;\nloop invariant y <= w + 1 + unknown_uint();\nloop invariant z <= x + 1 + unknown_uint();\nloop invariant unknown_uint() >= 0;\nloop invariant y >= w + 1;\nloop invariant z >= x + 1;\nloop invariant y == z;\nloop invariant y <= w + 1 + unknown_uint();\nloop invariant z <= x + 1 + unknown_uint();\nloop invariant y >= w + 1;\nloop invariant z >= x + 1;\nloop invariant y == z;\nloop invariant y <= w + 1 + unknown_uint();\nloop invariant z <= x + 1 + unknown_uint();\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= w;\nloop invariant w <= y <= w + 1;\nloop invariant z == x + 1;\nloop invariant w == x + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= z;\nloop invariant y == z;\nloop invariant x <= y;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= w <= UINT_MAX;\nloop invariant 0 <= y <= UINT_MAX;\nloop invariant 0 <= z <= UINT_MAX;\nloop invariant 0 <= x <= UINT_MAX;\nloop invariant w <= x;\nloop invariant y <= z;\nloop invariant z <= x + 1;\nloop invariant y <= x + 1;\nloop invariant w <= x + 1;\nloop invariant w <= y;\nloop invariant w <= z;\nloop invariant w <= UINT_MAX ==> (y >= w && z >= w);\nloop invariant w <= x ==> (y >= w && z >= w);\nloop invariant w <= x + 1 ==> (y >= w && z >= w);\nloop invariant w <= UINT_MAX ==> (y <= x + 1 && z <= x + 1);\nloop invariant w <= x ==> (y <= x + 1 && z <= x + 1);\nloop invariant w <= x + 1 ==> (y <= x + 1 && z <= x + 1);\nloop invariant w <= UINT_MAX ==> (y == z);\nloop invariant w <= x ==> (y == z);\nloop invariant w <= x + 1 ==> (y == z);\nloop invariant w <= UINT_MAX ==> (y <= x && z <= x);\nloop invariant w <= x ==> (y <= x && z <= x);\nloop invariant w <= x + 1 ==> (y <= x && z <= x);\nloop invariant w <= UINT_MAX ==> (y >= x + 1 && z >= x + 1);\nloop invariant w <= x ==> (y >= x + 1 && z >= x + 1);\nloop invariant w <= x + 1 ==> (y >= x + 1 && z >= x + 1);\nloop invariant w <= UINT_MAX ==> (y == x + 1 && z == x + 1);\nloop invariant w <= x ==> (y == x + 1 && z == x + 1);\nloop invariant w <= x + 1 ==> (y == x + 1 && z == x + 1);\nloop invariant w <= UINT_MAX ==> (y != x + 1 && z != x + 1);\nloop invariant w <= x ==> (y != x + 1 && z != x + 1);\nloop invariant w <= x + 1 ==> (y != x + 1 && z != x + 1);\nloop invariant w <= UINT_MAX ==> (y >= x && z >= x);\nloop invariant w <= x ==> (y >= x && z >= x);\nloop invariant w <= x + 1 ==> (y >= x && z >= x);\nloop invariant w <= UINT_MAX ==> (y <= x && z <= x);\nloop invariant w <= x ==> (y <= x && z <= x);\nloop invariant w <= x + 1 ==> (y <= x && z <= x);\nloop invariant w <= UINT_MAX ==> (y >= x + 1 && z >= x + 1);\nloop invariant w <= x ==> (y >= x + 1 && z >= x + 1);\nloop invariant w <= x + 1 ==> (y >= x + 1 && z >= x + 1);\nloop invariant w <= UINT_MAX ==> (y == x + 1 && z == x + 1);\nloop invariant w <= x ==> (y == x + 1 && z == x + 1);\nloop invariant w <= x + 1 ==> (y == x + 1 && z == x + 1);\nloop invariant w <= UINT_MAX ==> (y != x + 1 && z != x + 1);\nloop invariant w <= x ==> (y != x + 1 && z != x + 1);\nloop invariant w <= x + 1 ==> (y != x + 1 && z != x + 1);\nloop invariant w <= UINT_MAX ==> (y >= x && z >= x);\nloop invariant w <= x ==> (y >= x && z >= x);\nloop invariant w <= x + 1 ==> (y >= x && z >= x);\nloop invariant w <= UINT_MAX ==> (y <= x && z <= x);\nloop invariant w <= x ==> (y <= x && z <= x);\nloop invariant w <= x + 1 ==> (y <= x && z <= x);\nloop invariant w <= UINT_MAX ==> (y >= x + 1 && z >= x + 1);\nloop invariant w <= x ==> (y >= x + 1 && z >= x + 1);\nloop invariant w <= x + 1 ==> (y >= x + 1 && z >= x + 1);\nloop invariant w <= UINT_MAX ==> (y == x + 1 && z == x + 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= z;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= z;\nloop invariant 0 <= x < z;\nloop invariant 0 <= w < z;\nloop invariant 0 <= x <= z;\nloop invariant x < z ==> y == z;\nloop invariant x == z ==> y == z;\nloop invariant x == z ==> x == y;\nloop invariant z == y ==> x == z;\nloop invariant z == y ==> x == y;\nloop invariant x == z ==> x == y;\nloop invariant x == z ==> x == y;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= w <= 2^32 - 1;\nloop invariant 0 <= x <= 2^32 - 1;\nloop invariant 0 <= y <= 2^32 - 1;\nloop invariant 1 <= z <= 2^32 - 1;\nloop invariant x + 1 <= y <= z <= 2^32 - 1 ==> unknown_uint();\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> x == w;\nloop invariant unknown_uint() ==> x == w;\nloop invariant unknown_uint() ==> y == w + 1;\nloop invariant unknown_uint() ==> z == x + 1;\nloop invariant unknown_uint() ==> 0 <= w <= 2^32 - 1;\nloop invariant unknown_uint() ==> 0 <= x <= 2^32 - 1;\nloop invariant unknown_uint() ==> 0 <= y <= 2^32 - 1;\nloop invariant unknown_uint() ==> 1 <= z <= 2^32 - 1;\nloop invariant unknown_uint() ==> x + 1 <= y <= z <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> unknown_uint() ==> x == w;\nloop invariant unknown_uint() ==> unknown_uint() ==> y == w + 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> z == x + 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> 0 <= w <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> 0 <= x <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> 0 <= y <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> 1 <= z <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> x + 1 <= y <= z <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> x == w;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> y == w + 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> z == x + 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 0 <= w <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 0 <= x <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 0 <= y <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 1 <= z <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> x + 1 <= y <= z <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> x == w;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> y == w + 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> z == x + 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 0 <= w <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 0 <= x <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 0 <= y <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 1 <= z <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> x + 1 <= y <= z <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> x == w;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> y == w + 1;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant z = x + 1;\nloop invariant y = x + 1 + z;\nloop invariant w = x;\nloop invariant y >= x;\nloop invariant z >= y;\nloop invariant x <= z;\nloop invariant y <= z;\nloop invariant y >= w;\nloop invariant z >= w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\nloop invariant y <= w + 1;\nloop invariant z <= w + 1;\nloop invariant x <= w + 1;\nloop invariant y > w;\nloop invariant z > w;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i12: x <= w + 1;\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant y >= 1;\nloop invariant y <= x + 1;\nloop invariant x >= y - 1;\nloop invariant z >= x + 1;\nloop invariant z <= y;\nloop invariant y == z ==> y == x + 1;\nloop invariant y != z ==> y >= x + 1 && y <= x + 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\n\n\n\n\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= w;\nloop invariant 0 <= y <= w + 1;\nloop invariant 0 <= z <= w + 1;\nloop invariant x <= y;\nloop invariant y <= z;\nloop invariant z <= w + 1;\nloop invariant x <= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\nloop invariant i1: 0 <= x <= w;\n\n\n\n\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= w <= w;loop invariant 0 <= x <= x;loop invariant w <= x <= w;loop invariant w + 1 <= y <= x + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\nloop invariant i1: 0 <= w <= w;loop invariant 0 <= x <= x;loop invariant w <= x <= w;loop invariant w + 1 <= y <= x + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= w;\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant 0 <= z;\nloop invariant w <= x;\nloop invariant w <= y;\nloop invariant w <= z;\nloop invariant x <= y;\nloop invariant x <= z;\nloop invariant y <= z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\nloop invariant unknown_uint() ==> w == z;\nloop invariant unknown_uint() ==> x == y;\nloop invariant unknown_uint() ==> x == z;\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> w == x;\nloop invariant unknown_uint() ==> w == y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\nloop invariant i1: 0 <= w;\nloop invariant i2: 0 <= x;\nloop invariant i3: 0 <= y;\nloop invariant i4: 0 <= z;\nloop invariant i5: w <= x;\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 33,
                "annotations": "```\n/*@\nloop invariant 0 <= w <= 4294967295;\nloop invariant 0 <= x <= 4294967295;\nloop invariant 1 <= y <= 4294967296;\nloop invariant 1 <= z <= 4294967296;\nloop invariant x == w;\nloop invariant y == w + 1;\nloop invariant z == x + 1;\nloop invariant unknown_uint() ==> (y == z);\nloop invariant unknown_uint() ==> (x == w);\nloop invariant unknown_uint() ==> (y == w + 1);\nloop invariant unknown_uint() ==> (z == x + 1);\nloop invariant unknown_uint() ==> (y <= z);\nloop invariant unknown_uint() ==> (y >= z);\nloop invariant unknown_uint() ==> (x <= y);\nloop invariant unknown_uint() ==> (x >= y);\nloop invariant unknown_uint() ==> (x <= z);\nloop invariant unknown_uint() ==> (x >= z);\nloop invariant unknown_uint() ==> (x <= w);\nloop invariant unknown_uint() ==> (x >= w);\nloop invariant unknown_uint() ==> (y <= w + 1);\nloop invariant unknown_uint() ==> (y >= w + 1);\nloop invariant unknown_uint() ==> (z <= x + 1);\nloop invariant unknown_uint() ==> (z >= x + 1);\nloop invariant unknown_uint() ==> (w <= x);\nloop invariant unknown_uint() ==> (w >= x);\nloop invariant unknown_uint() ==> (w <= y - 1);\nloop invariant unknown_uint() ==> (w >= y - 1);\nloop invariant unknown_uint() ==> (w <= z - 1);\nloop invariant unknown_uint() ==> (w >= z - 1);\nloop invariant unknown_uint() ==> (w <= 4294967295);\nloop invariant unknown_uint() ==> (w >= 0);\nloop invariant unknown_uint() ==> (x <= 4294967295);\nloop invariant unknown_uint() ==> (x >= 0);\nloop invariant unknown_uint() ==> (y <= 4294967296);\nloop invariant unknown_uint() ==> (y >= 1);\nloop invariant unknown_uint() ==> (z <= 4294967296);\nloop invariant unknown_uint() ==> (z >= 1);\nloop invariant unknown_uint() ==> (w <= x);\nloop invariant unknown_uint() ==> (w >= x);\nloop invariant unknown_uint() ==> (w <= y - 1);\nloop invariant unknown_uint() ==> (w >= y - 1);\nloop invariant unknown_uint() ==> (w <= z - 1);\nloop invariant unknown_uint() ==> (w >= z - 1);\nloop invariant unknown_uint() ==> (w <= 4294967295);\nloop invariant unknown_uint() ==> (w >= 0);\nloop invariant unknown_uint() ==> (x <= 4294967295);\nloop invariant unknown_uint() ==> (x >= 0);\nloop invariant unknown_uint() ==> (y <= 4294967296);\nloop invariant unknown_uint() ==> (y >= 1);\nloop invariant unknown_uint() ==> (z <= 4294967296);\nloop invariant unknown_uint() ==> (z >= 1);\nloop invariant unknown_uint() ==> (w <= x);\nloop invariant unknown_uint() ==> (w >= x);\nloop invariant unknown_uint() ==> (w <= y - 1);\nloop invariant unknown_uint() ==> (w >= y - 1);\nloop invariant unknown_uint() ==> (w <= z - 1);\nloop invariant unknown_uint() ==> (w >= z - 1);\nloop invariant unknown_uint() ==> (w <= 4294967295);\nloop invariant unknown_uint() ==> (w >= 0);\nloop invariant unknown_uint() ==> (x <= 4294967295);\nloop invariant unknown_uint() ==> (x >= 0);\nloop invariant unknown_uint() ==> (y <= 4294967296);\nloop invariant unknown_uint() ==> (y >= 1);\nloop invariant unknown_uint() ==> (z <= 4294967296);\nloop invariant unknown_uint() ==> (z >= 1);\nloop invariant unknown_uint() ==> (w <= x);\nloop invariant unknown_uint() ==> (w >= x);\nloop invariant unknown_uint() ==> (w <= y - 1);\nloop invariant unknown_uint() ==> (w >= y - 1);\nloop invariant unknown_uint() ==> (w <= z - 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\nloop invariant i1: 0 <= w <= 4294967295;\nloop invariant i2: 0 <= x <= 4294967295;\n\n\nloop invariant i5: x == w;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= y <= z;\nloop invariant x <= w <= y;\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\nloop invariant y <= z <= w + unknown_uint();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= y <= z;\nloop invariant 1 <= x <= z;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\nloop invariant z <= y + 1;\nloop invariant w <= x <= z;\nloop invariant w <= y <= z;\nloop invariant z <= x + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\n\n\n\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant unknown_uint() >= 0;\nloop invariant y >= w + 1;\nloop invariant z >= x + 1;\nloop invariant y == z;\nloop invariant y <= w + 1 + unknown_uint();\nloop invariant z <= x + 1 + unknown_uint();\nloop invariant unknown_uint() >= 0;\nloop invariant y >= w + 1;\nloop invariant z >= x + 1;\nloop invariant y == z;\nloop invariant y <= w + 1 + unknown_uint();\nloop invariant z <= x + 1 + unknown_uint();\nloop invariant y >= w + 1;\nloop invariant z >= x + 1;\nloop invariant y == z;\nloop invariant y <= w + 1 + unknown_uint();\nloop invariant z <= x + 1 + unknown_uint();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\n\n\nloop invariant i4: y == z;\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= w;\nloop invariant w <= y <= w + 1;\nloop invariant z == x + 1;\nloop invariant w == x + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\nloop invariant i1: 0 <= x <= w;\n\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= z;\nloop invariant y == z;\nloop invariant x <= y;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\nloop invariant y <= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\nloop invariant i1: 0 <= y <= z;\nloop invariant i2: y == z;\n\nloop invariant i4: y <= z;\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 11,
                "annotations": "```\n/*@\nloop invariant 1 <= w <= UINT_MAX;\nloop invariant 0 <= y <= UINT_MAX;\nloop invariant 0 <= z <= UINT_MAX;\nloop invariant 0 <= x <= UINT_MAX;\nloop invariant w <= x;\nloop invariant y <= z;\nloop invariant z <= x + 1;\nloop invariant y <= x + 1;\nloop invariant w <= x + 1;\nloop invariant w <= y;\nloop invariant w <= z;\nloop invariant w <= UINT_MAX ==> (y >= w && z >= w);\nloop invariant w <= x ==> (y >= w && z >= w);\nloop invariant w <= x + 1 ==> (y >= w && z >= w);\nloop invariant w <= UINT_MAX ==> (y <= x + 1 && z <= x + 1);\nloop invariant w <= x ==> (y <= x + 1 && z <= x + 1);\nloop invariant w <= x + 1 ==> (y <= x + 1 && z <= x + 1);\nloop invariant w <= UINT_MAX ==> (y == z);\nloop invariant w <= x ==> (y == z);\nloop invariant w <= x + 1 ==> (y == z);\nloop invariant w <= UINT_MAX ==> (y <= x && z <= x);\nloop invariant w <= x ==> (y <= x && z <= x);\nloop invariant w <= x + 1 ==> (y <= x && z <= x);\nloop invariant w <= UINT_MAX ==> (y >= x + 1 && z >= x + 1);\nloop invariant w <= x ==> (y >= x + 1 && z >= x + 1);\nloop invariant w <= x + 1 ==> (y >= x + 1 && z >= x + 1);\nloop invariant w <= UINT_MAX ==> (y == x + 1 && z == x + 1);\nloop invariant w <= x ==> (y == x + 1 && z == x + 1);\nloop invariant w <= x + 1 ==> (y == x + 1 && z == x + 1);\nloop invariant w <= UINT_MAX ==> (y != x + 1 && z != x + 1);\nloop invariant w <= x ==> (y != x + 1 && z != x + 1);\nloop invariant w <= x + 1 ==> (y != x + 1 && z != x + 1);\nloop invariant w <= UINT_MAX ==> (y >= x && z >= x);\nloop invariant w <= x ==> (y >= x && z >= x);\nloop invariant w <= x + 1 ==> (y >= x && z >= x);\nloop invariant w <= UINT_MAX ==> (y <= x && z <= x);\nloop invariant w <= x ==> (y <= x && z <= x);\nloop invariant w <= x + 1 ==> (y <= x && z <= x);\nloop invariant w <= UINT_MAX ==> (y >= x + 1 && z >= x + 1);\nloop invariant w <= x ==> (y >= x + 1 && z >= x + 1);\nloop invariant w <= x + 1 ==> (y >= x + 1 && z >= x + 1);\nloop invariant w <= UINT_MAX ==> (y == x + 1 && z == x + 1);\nloop invariant w <= x ==> (y == x + 1 && z == x + 1);\nloop invariant w <= x + 1 ==> (y == x + 1 && z == x + 1);\nloop invariant w <= UINT_MAX ==> (y != x + 1 && z != x + 1);\nloop invariant w <= x ==> (y != x + 1 && z != x + 1);\nloop invariant w <= x + 1 ==> (y != x + 1 && z != x + 1);\nloop invariant w <= UINT_MAX ==> (y >= x && z >= x);\nloop invariant w <= x ==> (y >= x && z >= x);\nloop invariant w <= x + 1 ==> (y >= x && z >= x);\nloop invariant w <= UINT_MAX ==> (y <= x && z <= x);\nloop invariant w <= x ==> (y <= x && z <= x);\nloop invariant w <= x + 1 ==> (y <= x && z <= x);\nloop invariant w <= UINT_MAX ==> (y >= x + 1 && z >= x + 1);\nloop invariant w <= x ==> (y >= x + 1 && z >= x + 1);\nloop invariant w <= x + 1 ==> (y >= x + 1 && z >= x + 1);\nloop invariant w <= UINT_MAX ==> (y == x + 1 && z == x + 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\nloop invariant i2: 0 <= y <= UINT_MAX;\nloop invariant i3: 0 <= z <= UINT_MAX;\nloop invariant i4: 0 <= x <= UINT_MAX;\nloop invariant i5: w <= x;\nloop invariant i6: y <= z;\n\n\nloop invariant i9: w <= x + 1;\n\n\n\n\n\n\n\n\nloop invariant i18: w <= UINT_MAX ==> (y == z);\nloop invariant i19: w <= x ==> (y == z);\nloop invariant i20: w <= x + 1 ==> (y == z);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= z;\nloop invariant 0 <= x < z;\nloop invariant 0 <= w < z;\nloop invariant 0 <= x <= z;\nloop invariant x < z ==> y == z;\nloop invariant x == z ==> y == z;\nloop invariant x == z ==> x == y;\nloop invariant z == y ==> x == z;\nloop invariant z == y ==> x == y;\nloop invariant x == z ==> x == y;\nloop invariant x == z ==> x == y;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\nloop invariant x == z ==> x < z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 44,
                "annotations": "```\n/*@\nloop invariant 0 <= w <= 2^32 - 1;\nloop invariant 0 <= x <= 2^32 - 1;\nloop invariant 0 <= y <= 2^32 - 1;\nloop invariant 1 <= z <= 2^32 - 1;\nloop invariant x + 1 <= y <= z <= 2^32 - 1 ==> unknown_uint();\nloop invariant unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> x == w;\nloop invariant unknown_uint() ==> x == w;\nloop invariant unknown_uint() ==> y == w + 1;\nloop invariant unknown_uint() ==> z == x + 1;\nloop invariant unknown_uint() ==> 0 <= w <= 2^32 - 1;\nloop invariant unknown_uint() ==> 0 <= x <= 2^32 - 1;\nloop invariant unknown_uint() ==> 0 <= y <= 2^32 - 1;\nloop invariant unknown_uint() ==> 1 <= z <= 2^32 - 1;\nloop invariant unknown_uint() ==> x + 1 <= y <= z <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> unknown_uint() ==> x == w;\nloop invariant unknown_uint() ==> unknown_uint() ==> y == w + 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> z == x + 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> 0 <= w <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> 0 <= x <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> 0 <= y <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> 1 <= z <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> x + 1 <= y <= z <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> x == w;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> y == w + 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> z == x + 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 0 <= w <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 0 <= x <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 0 <= y <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 1 <= z <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> x + 1 <= y <= z <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> x == w;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> y == w + 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> z == x + 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 0 <= w <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 0 <= x <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 0 <= y <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 1 <= z <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> x + 1 <= y <= z <= 2^32 - 1;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> y == z;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> x == w;\nloop invariant unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> y == w + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 15: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\nloop invariant i1: z = x + 1;\nloop invariant i2: y = x + 1 + z;\nloop invariant i3: w = x;\nloop invariant i4: y >= x;\nloop invariant i5: z >= y;\nloop invariant i6: x <= z;\nloop invariant i7: y <= z;\nloop invariant i8: y >= w;\nloop invariant i9: z >= w;\nloop invariant i10: y <= w + 1;\nloop invariant i11: z <= w + 1;\nloop invariant i12: x <= w + 1;\nloop invariant i13: y > w;\nloop invariant i14: z > w;\nloop invariant i15: y >= 1;\nloop invariant i16: y <= x + 1;\nloop invariant i17: x >= y - 1;\nloop invariant i18: z >= x + 1;\nloop invariant i19: z <= y;\nloop invariant i20: y == z ==> y == x + 1;\nloop invariant i21: y != z ==> y >= x + 1 && y <= x + 2;\nloop invariant i22: 0 <= x <= w;\nloop invariant i23: 0 <= y <= w + 1;\nloop invariant i24: 0 <= z <= w + 1;\nloop invariant i25: x <= y;\nloop invariant i26: 0 <= w <= w;loop invariant 0 <= x <= x;loop invariant w <= x <= w;loop invariant w + 1 <= y <= x + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;\nloop invariant i27: 0 <= w;\nloop invariant i28: 0 <= x;\nloop invariant i29: 0 <= y;\nloop invariant i30: 0 <= z;\nloop invariant i31: w <= x;\nloop invariant i32: w <= y;\nloop invariant i33: w <= z;\nloop invariant i34: unknown_uint() ==> y == z;\nloop invariant i35: unknown_uint() ==> w == x;\nloop invariant i36: unknown_uint() ==> w == y;\nloop invariant i37: unknown_uint() ==> w == z;\nloop invariant i38: unknown_uint() ==> x == y;\nloop invariant i39: unknown_uint() ==> x == z;\nloop invariant i40: 0 <= w <= 4294967295;\nloop invariant i41: 0 <= x <= 4294967295;\nloop invariant i42: 1 <= y <= 4294967296;\nloop invariant i43: 1 <= z <= 4294967296;\nloop invariant i44: x == w;\nloop invariant i45: y == w + 1;\nloop invariant i46: z == x + 1;\nloop invariant i47: unknown_uint() ==> (y == z);\nloop invariant i48: unknown_uint() ==> (x == w);\nloop invariant i49: unknown_uint() ==> (y == w + 1);\nloop invariant i50: unknown_uint() ==> (z == x + 1);\nloop invariant i51: unknown_uint() ==> (y <= z);\nloop invariant i52: unknown_uint() ==> (y >= z);\nloop invariant i53: unknown_uint() ==> (x <= y);\nloop invariant i54: unknown_uint() ==> (x >= y);\nloop invariant i55: unknown_uint() ==> (x <= z);\nloop invariant i56: unknown_uint() ==> (x >= z);\nloop invariant i57: unknown_uint() ==> (x <= w);\nloop invariant i58: unknown_uint() ==> (x >= w);\nloop invariant i59: unknown_uint() ==> (y <= w + 1);\nloop invariant i60: unknown_uint() ==> (y >= w + 1);\nloop invariant i61: unknown_uint() ==> (z <= x + 1);\nloop invariant i62: unknown_uint() ==> (z >= x + 1);\nloop invariant i63: unknown_uint() ==> (w <= x);\nloop invariant i64: unknown_uint() ==> (w >= x);\nloop invariant i65: unknown_uint() ==> (w <= y - 1);\nloop invariant i66: unknown_uint() ==> (w >= y - 1);\nloop invariant i67: unknown_uint() ==> (w <= z - 1);\nloop invariant i68: unknown_uint() ==> (w >= z - 1);\nloop invariant i69: unknown_uint() ==> (w <= 4294967295);\nloop invariant i70: unknown_uint() ==> (w >= 0);\nloop invariant i71: unknown_uint() ==> (x <= 4294967295);\nloop invariant i72: unknown_uint() ==> (x >= 0);\nloop invariant i73: unknown_uint() ==> (y <= 4294967296);\nloop invariant i74: unknown_uint() ==> (y >= 1);\nloop invariant i75: unknown_uint() ==> (z <= 4294967296);\nloop invariant i76: unknown_uint() ==> (z >= 1);\nloop invariant i77: 1 <= y <= z;\nloop invariant i78: x <= w <= y;\nloop invariant i79: y <= z <= w + unknown_uint();\nloop invariant i80: 1 <= x <= z;\nloop invariant i81: w <= x <= z;\nloop invariant i82: w <= y <= z;\nloop invariant i83: z <= x + 1;\nloop invariant i84: z <= y + 1;\nloop invariant i85: unknown_uint() >= 0;\nloop invariant i86: y >= w + 1;\nloop invariant i87: y == z;\nloop invariant i88: y <= w + 1 + unknown_uint();\nloop invariant i89: z <= x + 1 + unknown_uint();\nloop invariant i90: w <= y <= w + 1;\nloop invariant i91: w == x + 1;\nloop invariant i92: 0 <= y <= z;\nloop invariant i93: 1 <= w <= UINT_MAX;\nloop invariant i94: 0 <= y <= UINT_MAX;\nloop invariant i95: 0 <= z <= UINT_MAX;\nloop invariant i96: 0 <= x <= UINT_MAX;\nloop invariant i97: w <= x + 1;\nloop invariant i98: w <= UINT_MAX ==> (y >= w && z >= w);\nloop invariant i99: w <= x ==> (y >= w && z >= w);\nloop invariant i100: w <= x + 1 ==> (y >= w && z >= w);\nloop invariant i101: w <= UINT_MAX ==> (y <= x + 1 && z <= x + 1);\nloop invariant i102: w <= x ==> (y <= x + 1 && z <= x + 1);\nloop invariant i103: w <= x + 1 ==> (y <= x + 1 && z <= x + 1);\nloop invariant i104: w <= UINT_MAX ==> (y == z);\nloop invariant i105: w <= x ==> (y == z);\nloop invariant i106: w <= x + 1 ==> (y == z);\nloop invariant i107: w <= UINT_MAX ==> (y <= x && z <= x);\nloop invariant i108: w <= x ==> (y <= x && z <= x);\nloop invariant i109: w <= x + 1 ==> (y <= x && z <= x);\nloop invariant i110: w <= UINT_MAX ==> (y >= x + 1 && z >= x + 1);\nloop invariant i111: w <= x ==> (y >= x + 1 && z >= x + 1);\nloop invariant i112: w <= x + 1 ==> (y >= x + 1 && z >= x + 1);\nloop invariant i113: w <= UINT_MAX ==> (y == x + 1 && z == x + 1);\nloop invariant i114: w <= x ==> (y == x + 1 && z == x + 1);\nloop invariant i115: w <= x + 1 ==> (y == x + 1 && z == x + 1);\nloop invariant i116: w <= UINT_MAX ==> (y != x + 1 && z != x + 1);\nloop invariant i117: w <= x ==> (y != x + 1 && z != x + 1);\nloop invariant i118: w <= x + 1 ==> (y != x + 1 && z != x + 1);\nloop invariant i119: w <= UINT_MAX ==> (y >= x && z >= x);\nloop invariant i120: w <= x ==> (y >= x && z >= x);\nloop invariant i121: w <= x + 1 ==> (y >= x && z >= x);\nloop invariant i122: 0 <= x < z;\nloop invariant i123: 0 <= w < z;\nloop invariant i124: 0 <= x <= z;\nloop invariant i125: x < z ==> y == z;\nloop invariant i126: x == z ==> y == z;\nloop invariant i127: x == z ==> x == y;\nloop invariant i128: z == y ==> x == z;\nloop invariant i129: z == y ==> x == y;\nloop invariant i130: x == z ==> x < z;\nloop invariant i131: 0 <= w <= 2^32 - 1;\nloop invariant i132: 0 <= x <= 2^32 - 1;\nloop invariant i133: 0 <= y <= 2^32 - 1;\nloop invariant i134: 1 <= z <= 2^32 - 1;\nloop invariant i135: x + 1 <= y <= z <= 2^32 - 1 ==> unknown_uint();\nloop invariant i136: unknown_uint() ==> x == w;\nloop invariant i137: unknown_uint() ==> y == w + 1;\nloop invariant i138: unknown_uint() ==> z == x + 1;\nloop invariant i139: unknown_uint() ==> 0 <= w <= 2^32 - 1;\nloop invariant i140: unknown_uint() ==> 0 <= x <= 2^32 - 1;\nloop invariant i141: unknown_uint() ==> 0 <= y <= 2^32 - 1;\nloop invariant i142: unknown_uint() ==> 1 <= z <= 2^32 - 1;\nloop invariant i143: unknown_uint() ==> x + 1 <= y <= z <= 2^32 - 1;\nloop invariant i144: unknown_uint() ==> unknown_uint() ==> y == z;\nloop invariant i145: unknown_uint() ==> unknown_uint() ==> x == w;\nloop invariant i146: unknown_uint() ==> unknown_uint() ==> y == w + 1;\nloop invariant i147: unknown_uint() ==> unknown_uint() ==> z == x + 1;\nloop invariant i148: unknown_uint() ==> unknown_uint() ==> 0 <= w <= 2^32 - 1;\nloop invariant i149: unknown_uint() ==> unknown_uint() ==> 0 <= x <= 2^32 - 1;\nloop invariant i150: unknown_uint() ==> unknown_uint() ==> 0 <= y <= 2^32 - 1;\nloop invariant i151: unknown_uint() ==> unknown_uint() ==> 1 <= z <= 2^32 - 1;\nloop invariant i152: unknown_uint() ==> unknown_uint() ==> x + 1 <= y <= z <= 2^32 - 1;\nloop invariant i153: unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> y == z;\nloop invariant i154: unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> x == w;\nloop invariant i155: unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> y == w + 1;\nloop invariant i156: unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> z == x + 1;\nloop invariant i157: unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 0 <= w <= 2^32 - 1;\nloop invariant i158: unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 0 <= x <= 2^32 - 1;\nloop invariant i159: unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 0 <= y <= 2^32 - 1;\nloop invariant i160: unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 1 <= z <= 2^32 - 1;\nloop invariant i161: unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> x + 1 <= y <= z <= 2^32 - 1;\nloop invariant i162: unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> y == z;\nloop invariant i163: unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> x == w;\nloop invariant i164: unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> y == w + 1;\nloop invariant i165: unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> z == x + 1;\nloop invariant i166: unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 0 <= w <= 2^32 - 1;\nloop invariant i167: unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 0 <= x <= 2^32 - 1;\nloop invariant i168: unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 0 <= y <= 2^32 - 1;\nloop invariant i169: unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> 1 <= z <= 2^32 - 1;\nloop invariant i170: unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> x + 1 <= y <= z <= 2^32 - 1;\nloop invariant i171: unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> y == z;\nloop invariant i172: unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> x == w;\nloop invariant i173: unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> unknown_uint() ==> y == w + 1;\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 103,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\n\nint main(void) {\n  unsigned int w = unknown_uint();\n  unsigned int x = w;\n  unsigned int y = w + 1;\n  unsigned int z = x + 1;\n  /*@\n\n\n\n\nloop invariant i5: z >= y;\n\nloop invariant i7: y <= z;\n\n\n\n\nloop invariant i12: x <= w + 1;\n\n\n\n\n\n\nloop invariant i19: z <= y;\n\nloop invariant i21: y != z ==> y >= x + 1 && y <= x + 2;\nloop invariant i22: 0 <= x <= w;\n\n\n\nloop invariant i26: 0 <= w <= w;loop invariant 0 <= x <= x;loop invariant w <= x <= w;loop invariant w + 1 <= y <= x + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;loop invariant w + 1 <= y <= w + 1;\nloop invariant i27: 0 <= w;\nloop invariant i28: 0 <= x;\nloop invariant i29: 0 <= y;\nloop invariant i30: 0 <= z;\nloop invariant i31: w <= x;\nloop invariant i32: w <= y;\nloop invariant i33: w <= z;\n\n\n\n\n\n\nloop invariant i40: 0 <= w <= 4294967295;\nloop invariant i41: 0 <= x <= 4294967295;\nloop invariant i42: 1 <= y <= 4294967296;\nloop invariant i43: 1 <= z <= 4294967296;\nloop invariant i44: x == w;\nloop invariant i45: y == w + 1;\nloop invariant i46: z == x + 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i77: 1 <= y <= z;\nloop invariant i78: x <= w <= y;\n\n\nloop invariant i81: w <= x <= z;\nloop invariant i82: w <= y <= z;\nloop invariant i83: z <= x + 1;\nloop invariant i84: z <= y + 1;\n\nloop invariant i86: y >= w + 1;\nloop invariant i87: y == z;\n\n\nloop invariant i90: w <= y <= w + 1;\n\nloop invariant i92: 0 <= y <= z;\n\nloop invariant i94: 0 <= y <= UINT_MAX;\nloop invariant i95: 0 <= z <= UINT_MAX;\nloop invariant i96: 0 <= x <= UINT_MAX;\nloop invariant i97: w <= x + 1;\nloop invariant i98: w <= UINT_MAX ==> (y >= w && z >= w);\nloop invariant i99: w <= x ==> (y >= w && z >= w);\nloop invariant i100: w <= x + 1 ==> (y >= w && z >= w);\nloop invariant i101: w <= UINT_MAX ==> (y <= x + 1 && z <= x + 1);\nloop invariant i102: w <= x ==> (y <= x + 1 && z <= x + 1);\nloop invariant i103: w <= x + 1 ==> (y <= x + 1 && z <= x + 1);\nloop invariant i104: w <= UINT_MAX ==> (y == z);\nloop invariant i105: w <= x ==> (y == z);\nloop invariant i106: w <= x + 1 ==> (y == z);\n\n\n\nloop invariant i110: w <= UINT_MAX ==> (y >= x + 1 && z >= x + 1);\nloop invariant i111: w <= x ==> (y >= x + 1 && z >= x + 1);\nloop invariant i112: w <= x + 1 ==> (y >= x + 1 && z >= x + 1);\nloop invariant i113: w <= UINT_MAX ==> (y == x + 1 && z == x + 1);\nloop invariant i114: w <= x ==> (y == x + 1 && z == x + 1);\nloop invariant i115: w <= x + 1 ==> (y == x + 1 && z == x + 1);\n\n\n\nloop invariant i119: w <= UINT_MAX ==> (y >= x && z >= x);\nloop invariant i120: w <= x ==> (y >= x && z >= x);\nloop invariant i121: w <= x + 1 ==> (y >= x && z >= x);\nloop invariant i122: 0 <= x < z;\nloop invariant i123: 0 <= w < z;\nloop invariant i124: 0 <= x <= z;\nloop invariant i125: x < z ==> y == z;\nloop invariant i126: x == z ==> y == z;\nloop invariant i127: x == z ==> x == y;\n\n\nloop invariant i130: x == z ==> x < z;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_uint()) {\n    y++;\n    z++;\n  }\n  {;\n//@ assert(y == z);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c"
        ],
        "skipped": [],
        "total": 101,
        "success_count": 89,
        "failure_count": 12,
        "success_rate": 0.8811881188118812
    }
}