{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loops/for_infinite_loop_1.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  unsigned int i=0;\n  int x=0, y=0;\n  int n=unknown_int();\n  if (!(n>0)) return 0;\n  for(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\nloop invariant i159;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == i;\nloop invariant y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= n;\nloop invariant i < n ==> x == i * y;\nloop invariant i >= n ==> x == i * n;\nloop invariant i < n ==> y == 0;\nloop invariant i >= n ==> y == n;\nloop invariant i < n ==> x == i * y;\nloop invariant i >= n ==> x == i * n;\nloop invariant i < n ==> y == 0;\nloop invariant i >= n ==> y == n;\nloop invariant i < n ==> x == i * y;\nloop invariant i >= n ==> x == i * n;\nloop invariant i < n ==> y == 0;\nloop invariant i >= n ==> y == n;\nloop invariant i < n ==> x == i * y;\nloop invariant i >= n ==> x == i * n;\nloop invariant i < n ==> y == 0;\nloop invariant i >= n ==> y == n;\n*/\n```",
            "```\n/*@\nloop invariant i < n ==> x == 0 ==> y == 0;\n*/\n```",
            "```\n/*@\nloop invariant i <= n;\nloop invariant x == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= x <= 0;\nloop invariant 0 <= y <= 0;\nloop invariant i < n ==> x == 0;\nloop invariant i < n ==> y == 0;\nloop invariant i >= n ==> x == 0;\nloop invariant i >= n ==> y == 0;\nloop invariant i < n ==> i <= n;\nloop invariant i < n ==> x <= 0;\nloop invariant i < n ==> y <= 0;\nloop invariant i >= n ==> i >= n;\nloop invariant i >= n ==> x >= 0;\nloop invariant i >= n ==> y >= 0;\nloop invariant i < n ==> x == 0 ==> i <= n;\nloop invariant i < n ==> y == 0 ==> i <= n;\nloop invariant i >= n ==> x == 0 ==> i >= n;\nloop invariant i >= n ==> y == 0 ==> i >= n;\nloop invariant i < n ==> i <= n ==> x == 0;\nloop invariant i < n ==> i <= n ==> y == 0;\nloop invariant i >= n ==> i >= n ==> x >= 0;\nloop invariant i >= n ==> i >= n ==> y >= 0;\nloop invariant i < n ==> i <= n ==> x == 0 ==> i <= n;\nloop invariant i < n ==> i <= n ==> y == 0 ==> i <= n;\nloop invariant i >= n ==> i >= n ==> x >= 0 ==> i >= n;\nloop invariant i >= n ==> i >= n ==> y >= 0 ==> i >= n;\nloop invariant i < n ==> x == 0 ==> i <= n ==> x == 0;\nloop invariant i < n ==> x == 0 ==> i <= n ==> y == 0;\nloop invariant i < n ==> y == 0 ==> i <= n ==> x == 0;\nloop invariant i < n ==> y == 0 ==> i <= n ==> y == 0;\nloop invariant i >= n ==> x == 0 ==> i >= n ==> x == 0;\nloop invariant i >= n ==> x == 0 ==> i >= n ==> y == 0;\nloop invariant i >= n ==> y == 0 ==> i >= n ==> x == 0;\nloop invariant i >= n ==> y == 0 ==> i >= n ==> y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i < n;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant x == 0 ==> i == n;\nloop invariant x != 0 ==> i < n;\nloop invariant y == 0 ==> i == n;\nloop invariant y != 0 ==> i < n;\nloop invariant x == y ==> i == n;\nloop invariant x != y ==> i < n;\nloop invariant x == n ==> i == n;\nloop invariant x != n ==> i < n;\nloop invariant y == n ==> i == n;\nloop invariant y != n ==> i < n;\nloop invariant i == n ==> x == n;\nloop invariant i != n ==> x != n;\nloop invariant i == n ==> y == n;\nloop invariant i != n ==> y != n;\nloop invariant i == n ==> x == y;\nloop invariant i != n ==> x != y;\nloop invariant i == n ==> x <= y;\nloop invariant i != n ==> x <= y;\nloop invariant i == n ==> y <= x;\nloop invariant i != n ==> y <= x;\nloop invariant i == n ==> x == 0;\nloop invariant i != n ==> x != 0;\nloop invariant i == n ==> y == 0;\nloop invariant i != n ==> y != 0;\nloop invariant i == n ==> x <= n;\nloop invariant i != n ==> x <= n;\nloop invariant i == n ==> y <= n;\nloop invariant i != n ==> y <= n;\nloop invariant i == n ==> n <= x;\nloop invariant i != n ==> n <= x;\nloop invariant i == n ==> n <= y;\nloop invariant i != n ==> n <= y;\nloop invariant i == n ==> x == 0;\nloop invariant i != n ==> x != 0;\nloop invariant i == n ==> y == 0;\nloop invariant i != n ==> y != 0;\nloop invariant i == n ==> x == 0;\nloop invariant i != n ==> x != 0;\nloop invariant i == n ==> y == 0;\nloop invariant i != n ==> y != 0;\nloop invariant i == n ==> x <= y;\nloop invariant i != n ==> x <= y;\nloop invariant i == n ==> y <= x;\nloop invariant i != n ==> y <= x;\nloop invariant i == n ==> x == n;\nloop invariant i != n ==> x != n;\nloop invariant i == n ==> y == n;\nloop invariant i != n ==> y != n;\nloop invariant i == n ==> x == y;\nloop invariant i != n ==> x != y;\nloop invariant i == n ==> x <= y;\nloop invariant i != n ==> x <= y;\nloop invariant i == n ==> y <= x;\nloop invariant i != n ==> y <= x;\nloop invariant i == n ==> x == 0;\nloop invariant i != n ==> x != 0;\nloop invariant i == n ==> y == 0;\nloop invariant i != n ==> y != 0;\nloop invariant i == n ==> x <= n;\nloop invariant i != n ==> x <= n;\nloop invariant i == n ==> y <= n;\nloop invariant i != n ==> y <= n;\nloop invariant i == n ==> n <= x;\nloop invariant i != n ==> n <= x;\nloop invariant i == n ==> n <= y;\nloop invariant i != n ==> n <= y;\nloop invariant i == n ==> x == 0;\nloop invariant i != n ==> x != 0;\nloop invariant i == n ==> y == 0;\nloop invariant i != n ==> y != 0;\nloop invariant i == n ==> x <= y;\nloop invariant i != n ==> x <= y;\nloop invariant i == n ==> y <= x;\nloop invariant i != n ==> y <= x;\nloop invariant i == n ==> x == n;\nloop invariant i != n ==> x != n;\nloop invariant i == n ==> y == n;\nloop invariant i != n ==> y != n;\nloop invariant i == n ==> x == y;\nloop invariant i != n ==> x != y;\nloop invariant i == n ==> x <= y;\nloop invariant i != n ==> x <= y;\nloop invariant i == n ==> y <= x;\nloop invariant i != n ==> y <= x;\nloop invariant i == n ==> x == 0;\nloop invariant i != n ==> x != 0;\nloop invariant i == n ==> y == 0;\nloop invariant i != n ==> y != 0;\nloop invariant i == n ==> x <= n;\nloop invariant i != n ==> x <= n;\nloop invariant i == n ==> y <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == (n - i) * i / 2;\nloop invariant y == i;\nloop invariant 0 <= x <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x <= (n - 1) * n / 2;\nloop invariant y <= n;\nloop invariant x == (n - i) * i / 2 ==> x == (n - i) * i / 2;\nloop invariant y == i ==> y == i;\nloop invariant 0 <= x <= y ==> 0 <= x <= y;\nloop invariant x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y >= 0;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant i <= n ==> i <= n;\nloop invariant x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2;\nloop invariant y <= n ==> y <= n;\nloop invariant x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2;\nloop invariant y == i ==> y == i ==> y == i;\nloop invariant 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y;\nloop invariant x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y >= 0 ==> y >= 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i <= n ==> i <= n ==> i <= n;\nloop invariant x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2;\nloop invariant y <= n ==> y <= n ==> y <= n;\nloop invariant x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2;\nloop invariant y == i ==> y == i ==> y == i ==> y == i;\nloop invariant 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y;\nloop invariant x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y >= 0 ==> y >= 0 ==> y >= 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i <= n ==> i <= n ==> i <= n ==> i <= n;\nloop invariant x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2;\nloop invariant y <= n ==> y <= n ==> y <= n ==> y <= n;\nloop invariant x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2;\nloop invariant y == i ==> y == i ==> y == i ==> y == i ==> y == i;\nloop invariant 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y;\nloop invariant x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y >= 0 ==> y >= 0 ==> y >= 0 ==> y >= 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i <= n ==> i <= n ==> i <= n ==> i <= n ==> i <= n;\nloop invariant x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 2^32 - 1;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\n*/\n```",
            "```\n/*@\nloop invariant ( i >= 0);\nloop invariant ( i <= n);\nloop invariant ( x == 0);\nloop invariant ( y == 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 158,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\nloop invariant i159;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  unsigned int i=0;\n  int x=0, y=0;\n  int n=unknown_int();\n  if (!(n>0)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == i;\nloop invariant y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  unsigned int i=0;\n  int x=0, y=0;\n  int n=unknown_int();\n  if (!(n>0)) return 0;\n  /*@\n\n\nloop invariant i3: y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant 1 <= n;\nloop invariant i < n ==> x == i * y;\nloop invariant i >= n ==> x == i * n;\nloop invariant i < n ==> y == 0;\nloop invariant i >= n ==> y == n;\nloop invariant i < n ==> x == i * y;\nloop invariant i >= n ==> x == i * n;\nloop invariant i < n ==> y == 0;\nloop invariant i >= n ==> y == n;\nloop invariant i < n ==> x == i * y;\nloop invariant i >= n ==> x == i * n;\nloop invariant i < n ==> y == 0;\nloop invariant i >= n ==> y == n;\nloop invariant i < n ==> x == i * y;\nloop invariant i >= n ==> x == i * n;\nloop invariant i < n ==> y == 0;\nloop invariant i >= n ==> y == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  unsigned int i=0;\n  int x=0, y=0;\n  int n=unknown_int();\n  if (!(n>0)) return 0;\n  /*@\nloop invariant i1: 0 <= i;\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: 1 <= n;\nloop invariant i5: i < n ==> x == i * y;\n\nloop invariant i7: i < n ==> y == 0;\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant i < n ==> x == 0 ==> y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  unsigned int i=0;\n  int x=0, y=0;\n  int n=unknown_int();\n  if (!(n>0)) return 0;\n  /*@\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant i <= n;\nloop invariant x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  unsigned int i=0;\n  int x=0, y=0;\n  int n=unknown_int();\n  if (!(n>0)) return 0;\n  /*@\n\nloop invariant i2: x == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= x <= 0;\nloop invariant 0 <= y <= 0;\nloop invariant i < n ==> x == 0;\nloop invariant i < n ==> y == 0;\nloop invariant i >= n ==> x == 0;\nloop invariant i >= n ==> y == 0;\nloop invariant i < n ==> i <= n;\nloop invariant i < n ==> x <= 0;\nloop invariant i < n ==> y <= 0;\nloop invariant i >= n ==> i >= n;\nloop invariant i >= n ==> x >= 0;\nloop invariant i >= n ==> y >= 0;\nloop invariant i < n ==> x == 0 ==> i <= n;\nloop invariant i < n ==> y == 0 ==> i <= n;\nloop invariant i >= n ==> x == 0 ==> i >= n;\nloop invariant i >= n ==> y == 0 ==> i >= n;\nloop invariant i < n ==> i <= n ==> x == 0;\nloop invariant i < n ==> i <= n ==> y == 0;\nloop invariant i >= n ==> i >= n ==> x >= 0;\nloop invariant i >= n ==> i >= n ==> y >= 0;\nloop invariant i < n ==> i <= n ==> x == 0 ==> i <= n;\nloop invariant i < n ==> i <= n ==> y == 0 ==> i <= n;\nloop invariant i >= n ==> i >= n ==> x >= 0 ==> i >= n;\nloop invariant i >= n ==> i >= n ==> y >= 0 ==> i >= n;\nloop invariant i < n ==> x == 0 ==> i <= n ==> x == 0;\nloop invariant i < n ==> x == 0 ==> i <= n ==> y == 0;\nloop invariant i < n ==> y == 0 ==> i <= n ==> x == 0;\nloop invariant i < n ==> y == 0 ==> i <= n ==> y == 0;\nloop invariant i >= n ==> x == 0 ==> i >= n ==> x == 0;\nloop invariant i >= n ==> x == 0 ==> i >= n ==> y == 0;\nloop invariant i >= n ==> y == 0 ==> i >= n ==> x == 0;\nloop invariant i >= n ==> y == 0 ==> i >= n ==> y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  unsigned int i=0;\n  int x=0, y=0;\n  int n=unknown_int();\n  if (!(n>0)) return 0;\n  /*@\n\nloop invariant i2: 0 <= x <= 0;\nloop invariant i3: 0 <= y <= 0;\nloop invariant i4: i < n ==> x == 0;\nloop invariant i5: i < n ==> y == 0;\nloop invariant i6: i >= n ==> x == 0;\nloop invariant i7: i >= n ==> y == 0;\nloop invariant i8: i < n ==> i <= n;\nloop invariant i9: i < n ==> x <= 0;\nloop invariant i10: i < n ==> y <= 0;\nloop invariant i11: i >= n ==> i >= n;\nloop invariant i12: i >= n ==> x >= 0;\nloop invariant i13: i >= n ==> y >= 0;\nloop invariant i14: i < n ==> x == 0 ==> i <= n;\nloop invariant i15: i < n ==> y == 0 ==> i <= n;\nloop invariant i16: i >= n ==> x == 0 ==> i >= n;\nloop invariant i17: i >= n ==> y == 0 ==> i >= n;\nloop invariant i18: i < n ==> i <= n ==> x == 0;\nloop invariant i19: i < n ==> i <= n ==> y == 0;\nloop invariant i20: i >= n ==> i >= n ==> x >= 0;\nloop invariant i21: i >= n ==> i >= n ==> y >= 0;\nloop invariant i22: i < n ==> i <= n ==> x == 0 ==> i <= n;\nloop invariant i23: i < n ==> i <= n ==> y == 0 ==> i <= n;\nloop invariant i24: i >= n ==> i >= n ==> x >= 0 ==> i >= n;\nloop invariant i25: i >= n ==> i >= n ==> y >= 0 ==> i >= n;\nloop invariant i26: i < n ==> x == 0 ==> i <= n ==> x == 0;\nloop invariant i27: i < n ==> x == 0 ==> i <= n ==> y == 0;\nloop invariant i28: i < n ==> y == 0 ==> i <= n ==> x == 0;\nloop invariant i29: i < n ==> y == 0 ==> i <= n ==> y == 0;\nloop invariant i30: i >= n ==> x == 0 ==> i >= n ==> x == 0;\nloop invariant i31: i >= n ==> x == 0 ==> i >= n ==> y == 0;\nloop invariant i32: i >= n ==> y == 0 ==> i >= n ==> x == 0;\nloop invariant i33: i >= n ==> y == 0 ==> i >= n ==> y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  unsigned int i=0;\n  int x=0, y=0;\n  int n=unknown_int();\n  if (!(n>0)) return 0;\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i < n;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  unsigned int i=0;\n  int x=0, y=0;\n  int n=unknown_int();\n  if (!(n>0)) return 0;\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 14,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x <= y;\nloop invariant x <= n;\nloop invariant y <= n;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant x == 0 ==> i == n;\nloop invariant x != 0 ==> i < n;\nloop invariant y == 0 ==> i == n;\nloop invariant y != 0 ==> i < n;\nloop invariant x == y ==> i == n;\nloop invariant x != y ==> i < n;\nloop invariant x == n ==> i == n;\nloop invariant x != n ==> i < n;\nloop invariant y == n ==> i == n;\nloop invariant y != n ==> i < n;\nloop invariant i == n ==> x == n;\nloop invariant i != n ==> x != n;\nloop invariant i == n ==> y == n;\nloop invariant i != n ==> y != n;\nloop invariant i == n ==> x == y;\nloop invariant i != n ==> x != y;\nloop invariant i == n ==> x <= y;\nloop invariant i != n ==> x <= y;\nloop invariant i == n ==> y <= x;\nloop invariant i != n ==> y <= x;\nloop invariant i == n ==> x == 0;\nloop invariant i != n ==> x != 0;\nloop invariant i == n ==> y == 0;\nloop invariant i != n ==> y != 0;\nloop invariant i == n ==> x <= n;\nloop invariant i != n ==> x <= n;\nloop invariant i == n ==> y <= n;\nloop invariant i != n ==> y <= n;\nloop invariant i == n ==> n <= x;\nloop invariant i != n ==> n <= x;\nloop invariant i == n ==> n <= y;\nloop invariant i != n ==> n <= y;\nloop invariant i == n ==> x == 0;\nloop invariant i != n ==> x != 0;\nloop invariant i == n ==> y == 0;\nloop invariant i != n ==> y != 0;\nloop invariant i == n ==> x == 0;\nloop invariant i != n ==> x != 0;\nloop invariant i == n ==> y == 0;\nloop invariant i != n ==> y != 0;\nloop invariant i == n ==> x <= y;\nloop invariant i != n ==> x <= y;\nloop invariant i == n ==> y <= x;\nloop invariant i != n ==> y <= x;\nloop invariant i == n ==> x == n;\nloop invariant i != n ==> x != n;\nloop invariant i == n ==> y == n;\nloop invariant i != n ==> y != n;\nloop invariant i == n ==> x == y;\nloop invariant i != n ==> x != y;\nloop invariant i == n ==> x <= y;\nloop invariant i != n ==> x <= y;\nloop invariant i == n ==> y <= x;\nloop invariant i != n ==> y <= x;\nloop invariant i == n ==> x == 0;\nloop invariant i != n ==> x != 0;\nloop invariant i == n ==> y == 0;\nloop invariant i != n ==> y != 0;\nloop invariant i == n ==> x <= n;\nloop invariant i != n ==> x <= n;\nloop invariant i == n ==> y <= n;\nloop invariant i != n ==> y <= n;\nloop invariant i == n ==> n <= x;\nloop invariant i != n ==> n <= x;\nloop invariant i == n ==> n <= y;\nloop invariant i != n ==> n <= y;\nloop invariant i == n ==> x == 0;\nloop invariant i != n ==> x != 0;\nloop invariant i == n ==> y == 0;\nloop invariant i != n ==> y != 0;\nloop invariant i == n ==> x <= y;\nloop invariant i != n ==> x <= y;\nloop invariant i == n ==> y <= x;\nloop invariant i != n ==> y <= x;\nloop invariant i == n ==> x == n;\nloop invariant i != n ==> x != n;\nloop invariant i == n ==> y == n;\nloop invariant i != n ==> y != n;\nloop invariant i == n ==> x == y;\nloop invariant i != n ==> x != y;\nloop invariant i == n ==> x <= y;\nloop invariant i != n ==> x <= y;\nloop invariant i == n ==> y <= x;\nloop invariant i != n ==> y <= x;\nloop invariant i == n ==> x == 0;\nloop invariant i != n ==> x != 0;\nloop invariant i == n ==> y == 0;\nloop invariant i != n ==> y != 0;\nloop invariant i == n ==> x <= n;\nloop invariant i != n ==> x <= n;\nloop invariant i == n ==> y <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  unsigned int i=0;\n  int x=0, y=0;\n  int n=unknown_int();\n  if (!(n>0)) return 0;\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\nloop invariant i4: x <= y;\nloop invariant i5: x <= n;\nloop invariant i6: y <= n;\n\nloop invariant i8: i >= 0;\n\nloop invariant i10: x != 0 ==> i < n;\n\nloop invariant i12: y != 0 ==> i < n;\n\nloop invariant i14: x != y ==> i < n;\n\n\n\n\n\n\n\n\nloop invariant i23: i == n ==> x == y;\n\nloop invariant i25: i == n ==> x <= y;\nloop invariant i26: i != n ==> x <= y;\nloop invariant i27: i == n ==> y <= x;\nloop invariant i28: i != n ==> y <= x;\nloop invariant i29: i == n ==> x == 0;\n\nloop invariant i31: i == n ==> y == 0;\n\nloop invariant i33: i == n ==> x <= n;\nloop invariant i34: i != n ==> x <= n;\nloop invariant i35: i == n ==> y <= n;\nloop invariant i36: i != n ==> y <= n;\n\n\n\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == (n - i) * i / 2;\nloop invariant y == i;\nloop invariant 0 <= x <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant x <= (n - 1) * n / 2;\nloop invariant y <= n;\nloop invariant x == (n - i) * i / 2 ==> x == (n - i) * i / 2;\nloop invariant y == i ==> y == i;\nloop invariant 0 <= x <= y ==> 0 <= x <= y;\nloop invariant x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y >= 0;\nloop invariant i >= 0 ==> i >= 0;\nloop invariant i <= n ==> i <= n;\nloop invariant x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2;\nloop invariant y <= n ==> y <= n;\nloop invariant x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2;\nloop invariant y == i ==> y == i ==> y == i;\nloop invariant 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y;\nloop invariant x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y >= 0 ==> y >= 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i <= n ==> i <= n ==> i <= n;\nloop invariant x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2;\nloop invariant y <= n ==> y <= n ==> y <= n;\nloop invariant x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2;\nloop invariant y == i ==> y == i ==> y == i ==> y == i;\nloop invariant 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y;\nloop invariant x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y >= 0 ==> y >= 0 ==> y >= 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i <= n ==> i <= n ==> i <= n ==> i <= n;\nloop invariant x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2;\nloop invariant y <= n ==> y <= n ==> y <= n ==> y <= n;\nloop invariant x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2;\nloop invariant y == i ==> y == i ==> y == i ==> y == i ==> y == i;\nloop invariant 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y;\nloop invariant x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant y >= 0 ==> y >= 0 ==> y >= 0 ==> y >= 0 ==> y >= 0;\nloop invariant i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i <= n ==> i <= n ==> i <= n ==> i <= n ==> i <= n;\nloop invariant x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  unsigned int i=0;\n  int x=0, y=0;\n  int n=unknown_int();\n  if (!(n>0)) return 0;\n  /*@\n\n\n\nloop invariant i4: 0 <= x <= y;\nloop invariant i5: x >= 0;\nloop invariant i6: y >= 0;\nloop invariant i7: i >= 0;\n\nloop invariant i9: x <= (n - 1) * n / 2;\nloop invariant i10: y <= n;\nloop invariant i11: x == (n - i) * i / 2 ==> x == (n - i) * i / 2;\nloop invariant i12: y == i ==> y == i;\nloop invariant i13: 0 <= x <= y ==> 0 <= x <= y;\nloop invariant i14: x >= 0 ==> x >= 0;\nloop invariant i15: y >= 0 ==> y >= 0;\nloop invariant i16: i >= 0 ==> i >= 0;\nloop invariant i17: i <= n ==> i <= n;\nloop invariant i18: x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2;\nloop invariant i19: y <= n ==> y <= n;\nloop invariant i20: x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2;\nloop invariant i21: y == i ==> y == i ==> y == i;\nloop invariant i22: 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y;\nloop invariant i23: x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i24: y >= 0 ==> y >= 0 ==> y >= 0;\nloop invariant i25: i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i26: i <= n ==> i <= n ==> i <= n;\nloop invariant i27: x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2;\nloop invariant i28: y <= n ==> y <= n ==> y <= n;\nloop invariant i29: x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2;\nloop invariant i30: y == i ==> y == i ==> y == i ==> y == i;\nloop invariant i31: 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y;\nloop invariant i32: x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i33: y >= 0 ==> y >= 0 ==> y >= 0 ==> y >= 0;\nloop invariant i34: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i35: i <= n ==> i <= n ==> i <= n ==> i <= n;\nloop invariant i36: x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2;\nloop invariant i37: y <= n ==> y <= n ==> y <= n ==> y <= n;\nloop invariant i38: x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2;\nloop invariant i39: y == i ==> y == i ==> y == i ==> y == i ==> y == i;\nloop invariant i40: 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y;\nloop invariant i41: x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i42: y >= 0 ==> y >= 0 ==> y >= 0 ==> y >= 0 ==> y >= 0;\nloop invariant i43: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i44: i <= n ==> i <= n ==> i <= n ==> i <= n ==> i <= n;\nloop invariant i45: x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  unsigned int i=0;\n  int x=0, y=0;\n  int n=unknown_int();\n  if (!(n>0)) return 0;\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 2^32 - 1;\nloop invariant x == 0;\nloop invariant y == 0;\nloop invariant x == 0;\nloop invariant y == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  unsigned int i=0;\n  int x=0, y=0;\n  int n=unknown_int();\n  if (!(n>0)) return 0;\n  /*@\n\nloop invariant i2: x == 0;\nloop invariant i3: y == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  unsigned int i=0;\n  int x=0, y=0;\n  int n=unknown_int();\n  if (!(n>0)) return 0;\n  /*@\n\nloop invariant i2: x == 0;\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant ( i >= 0);\nloop invariant ( i <= n);\nloop invariant ( x == 0);\nloop invariant ( y == 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\nloop invariant ( x <= y);\nloop invariant ( x >= y);\nloop invariant ( x == y);\nloop invariant ( x <= n);\nloop invariant ( y <= n);\nloop invariant ( x >= 0);\nloop invariant ( y >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  unsigned int i=0;\n  int x=0, y=0;\n  int n=unknown_int();\n  if (!(n>0)) return 0;\n  /*@\nloop invariant i1: ( i >= 0);\n\nloop invariant i3: ( x == 0);\nloop invariant i4: ( y == 0);\nloop invariant i5: ( x <= y);\nloop invariant i6: ( x >= y);\nloop invariant i7: ( x == y);\nloop invariant i8: ( x <= n);\nloop invariant i9: ( y <= n);\nloop invariant i10: ( x >= 0);\nloop invariant i11: ( y >= 0);\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  unsigned int i=0;\n  int x=0, y=0;\n  int n=unknown_int();\n  if (!(n>0)) return 0;\n  /*@\n\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 15: unbound logic variable i1. Ignoring loop annotation",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  unsigned int i=0;\n  int x=0, y=0;\n  int n=unknown_int();\n  if (!(n>0)) return 0;\n  /*@\nloop invariant i1: i1;\nloop invariant i2: i2;\nloop invariant i3: i4;\nloop invariant i4: i5;\nloop invariant i5: i6;\nloop invariant i6: i7;\nloop invariant i7: i8;\nloop invariant i8: i9;\nloop invariant i9: i10;\nloop invariant i10: i11;\nloop invariant i11: i12;\nloop invariant i12: i13;\nloop invariant i13: i14;\nloop invariant i14: i15;\nloop invariant i15: i16;\nloop invariant i16: i17;\nloop invariant i17: i18;\nloop invariant i18: i19;\nloop invariant i19: i20;\nloop invariant i20: i21;\nloop invariant i21: i22;\nloop invariant i22: i23;\nloop invariant i23: i24;\nloop invariant i24: i25;\nloop invariant i25: i26;\nloop invariant i26: i27;\nloop invariant i27: i28;\nloop invariant i28: i29;\nloop invariant i29: i30;\nloop invariant i30: i31;\nloop invariant i31: i32;\nloop invariant i32: i33;\nloop invariant i33: i34;\nloop invariant i34: i35;\nloop invariant i35: i36;\nloop invariant i36: i37;\nloop invariant i37: i38;\nloop invariant i38: i39;\nloop invariant i39: i40;\nloop invariant i40: i41;\nloop invariant i41: i42;\nloop invariant i42: i43;\nloop invariant i43: i44;\nloop invariant i44: i45;\nloop invariant i45: i46;\nloop invariant i46: i47;\nloop invariant i47: i48;\nloop invariant i48: i49;\nloop invariant i49: i50;\nloop invariant i50: i51;\nloop invariant i51: i52;\nloop invariant i52: i53;\nloop invariant i53: i54;\nloop invariant i54: i55;\nloop invariant i55: i56;\nloop invariant i56: i57;\nloop invariant i57: i58;\nloop invariant i58: i59;\nloop invariant i59: i60;\nloop invariant i60: i61;\nloop invariant i61: i62;\nloop invariant i62: i63;\nloop invariant i63: i64;\nloop invariant i64: i65;\nloop invariant i65: i66;\nloop invariant i66: i67;\nloop invariant i67: i68;\nloop invariant i68: i69;\nloop invariant i69: i70;\nloop invariant i70: i71;\nloop invariant i71: i72;\nloop invariant i72: i73;\nloop invariant i73: i74;\nloop invariant i74: i75;\nloop invariant i75: i76;\nloop invariant i76: i77;\nloop invariant i77: i78;\nloop invariant i78: i79;\nloop invariant i79: i80;\nloop invariant i80: i81;\nloop invariant i81: i82;\nloop invariant i82: i83;\nloop invariant i83: i84;\nloop invariant i84: i85;\nloop invariant i85: i86;\nloop invariant i86: i87;\nloop invariant i87: i88;\nloop invariant i88: i89;\nloop invariant i89: i90;\nloop invariant i90: i91;\nloop invariant i91: i92;\nloop invariant i92: i93;\nloop invariant i93: i94;\nloop invariant i94: i95;\nloop invariant i95: i96;\nloop invariant i96: i97;\nloop invariant i97: i98;\nloop invariant i98: i99;\nloop invariant i99: i100;\nloop invariant i100: i101;\nloop invariant i101: i102;\nloop invariant i102: i103;\nloop invariant i103: i104;\nloop invariant i104: i105;\nloop invariant i105: i106;\nloop invariant i106: i107;\nloop invariant i107: i108;\nloop invariant i108: i109;\nloop invariant i109: i110;\nloop invariant i110: i111;\nloop invariant i111: i112;\nloop invariant i112: i113;\nloop invariant i113: i114;\nloop invariant i114: i115;\nloop invariant i115: i116;\nloop invariant i116: i117;\nloop invariant i117: i118;\nloop invariant i118: i119;\nloop invariant i119: i120;\nloop invariant i120: i121;\nloop invariant i121: i122;\nloop invariant i122: i123;\nloop invariant i123: i124;\nloop invariant i124: i125;\nloop invariant i125: i126;\nloop invariant i126: i127;\nloop invariant i127: i128;\nloop invariant i128: i129;\nloop invariant i129: i130;\nloop invariant i130: i131;\nloop invariant i131: i132;\nloop invariant i132: i133;\nloop invariant i133: i134;\nloop invariant i134: i135;\nloop invariant i135: i136;\nloop invariant i136: i137;\nloop invariant i137: i138;\nloop invariant i138: i139;\nloop invariant i139: i140;\nloop invariant i140: i141;\nloop invariant i141: i142;\nloop invariant i142: i143;\nloop invariant i143: i144;\nloop invariant i144: i145;\nloop invariant i145: i146;\nloop invariant i146: i147;\nloop invariant i147: i148;\nloop invariant i148: i149;\nloop invariant i149: i150;\nloop invariant i150: i151;\nloop invariant i151: i152;\nloop invariant i152: i153;\nloop invariant i153: i154;\nloop invariant i154: i155;\nloop invariant i155: i156;\nloop invariant i156: i157;\nloop invariant i157: i158;\nloop invariant i158: i159;\nloop invariant i159: 0 <= i <= n;\nloop invariant i160: x == i;\nloop invariant i161: y == 0;\nloop invariant i162: 0 <= i;\nloop invariant i163: x == 0;\nloop invariant i164: 1 <= n;\nloop invariant i165: i < n ==> x == i * y;\nloop invariant i166: i >= n ==> x == i * n;\nloop invariant i167: i < n ==> y == 0;\nloop invariant i168: i >= n ==> y == n;\nloop invariant i169: i < n ==> x == 0 ==> y == 0;\nloop invariant i170: i <= n;\nloop invariant i171: 0 <= x <= 0;\nloop invariant i172: 0 <= y <= 0;\nloop invariant i173: i < n ==> x == 0;\nloop invariant i174: i >= n ==> x == 0;\nloop invariant i175: i >= n ==> y == 0;\nloop invariant i176: i < n ==> i <= n;\nloop invariant i177: i < n ==> x <= 0;\nloop invariant i178: i < n ==> y <= 0;\nloop invariant i179: i >= n ==> i >= n;\nloop invariant i180: i >= n ==> x >= 0;\nloop invariant i181: i >= n ==> y >= 0;\nloop invariant i182: i < n ==> x == 0 ==> i <= n;\nloop invariant i183: i < n ==> y == 0 ==> i <= n;\nloop invariant i184: i >= n ==> x == 0 ==> i >= n;\nloop invariant i185: i >= n ==> y == 0 ==> i >= n;\nloop invariant i186: i < n ==> i <= n ==> x == 0;\nloop invariant i187: i < n ==> i <= n ==> y == 0;\nloop invariant i188: i >= n ==> i >= n ==> x >= 0;\nloop invariant i189: i >= n ==> i >= n ==> y >= 0;\nloop invariant i190: i < n ==> i <= n ==> x == 0 ==> i <= n;\nloop invariant i191: i < n ==> i <= n ==> y == 0 ==> i <= n;\nloop invariant i192: i >= n ==> i >= n ==> x >= 0 ==> i >= n;\nloop invariant i193: i >= n ==> i >= n ==> y >= 0 ==> i >= n;\nloop invariant i194: i < n ==> x == 0 ==> i <= n ==> x == 0;\nloop invariant i195: i < n ==> x == 0 ==> i <= n ==> y == 0;\nloop invariant i196: i < n ==> y == 0 ==> i <= n ==> x == 0;\nloop invariant i197: i < n ==> y == 0 ==> i <= n ==> y == 0;\nloop invariant i198: i >= n ==> x == 0 ==> i >= n ==> x == 0;\nloop invariant i199: i >= n ==> x == 0 ==> i >= n ==> y == 0;\nloop invariant i200: i >= n ==> y == 0 ==> i >= n ==> x == 0;\nloop invariant i201: i >= n ==> y == 0 ==> i >= n ==> y == 0;\nloop invariant i202: 0 <= i < n;\nloop invariant i203: x <= y;\nloop invariant i204: x <= n;\nloop invariant i205: y <= n;\nloop invariant i206: i >= 0;\nloop invariant i207: x == 0 ==> i == n;\nloop invariant i208: x != 0 ==> i < n;\nloop invariant i209: y == 0 ==> i == n;\nloop invariant i210: y != 0 ==> i < n;\nloop invariant i211: x == y ==> i == n;\nloop invariant i212: x != y ==> i < n;\nloop invariant i213: x == n ==> i == n;\nloop invariant i214: x != n ==> i < n;\nloop invariant i215: y == n ==> i == n;\nloop invariant i216: y != n ==> i < n;\nloop invariant i217: i == n ==> x == n;\nloop invariant i218: i != n ==> x != n;\nloop invariant i219: i == n ==> y == n;\nloop invariant i220: i != n ==> y != n;\nloop invariant i221: i == n ==> x == y;\nloop invariant i222: i != n ==> x != y;\nloop invariant i223: i == n ==> x <= y;\nloop invariant i224: i != n ==> x <= y;\nloop invariant i225: i == n ==> y <= x;\nloop invariant i226: i != n ==> y <= x;\nloop invariant i227: i == n ==> x == 0;\nloop invariant i228: i != n ==> x != 0;\nloop invariant i229: i == n ==> y == 0;\nloop invariant i230: i != n ==> y != 0;\nloop invariant i231: i == n ==> x <= n;\nloop invariant i232: i != n ==> x <= n;\nloop invariant i233: i == n ==> y <= n;\nloop invariant i234: i != n ==> y <= n;\nloop invariant i235: i == n ==> n <= x;\nloop invariant i236: i != n ==> n <= x;\nloop invariant i237: i == n ==> n <= y;\nloop invariant i238: i != n ==> n <= y;\nloop invariant i239: x == (n - i) * i / 2;\nloop invariant i240: y == i;\nloop invariant i241: 0 <= x <= y;\nloop invariant i242: x >= 0;\nloop invariant i243: y >= 0;\nloop invariant i244: x <= (n - 1) * n / 2;\nloop invariant i245: x == (n - i) * i / 2 ==> x == (n - i) * i / 2;\nloop invariant i246: y == i ==> y == i;\nloop invariant i247: 0 <= x <= y ==> 0 <= x <= y;\nloop invariant i248: x >= 0 ==> x >= 0;\nloop invariant i249: y >= 0 ==> y >= 0;\nloop invariant i250: i >= 0 ==> i >= 0;\nloop invariant i251: i <= n ==> i <= n;\nloop invariant i252: x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2;\nloop invariant i253: y <= n ==> y <= n;\nloop invariant i254: x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2;\nloop invariant i255: y == i ==> y == i ==> y == i;\nloop invariant i256: 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y;\nloop invariant i257: x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i258: y >= 0 ==> y >= 0 ==> y >= 0;\nloop invariant i259: i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i260: i <= n ==> i <= n ==> i <= n;\nloop invariant i261: x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2;\nloop invariant i262: y <= n ==> y <= n ==> y <= n;\nloop invariant i263: x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2;\nloop invariant i264: y == i ==> y == i ==> y == i ==> y == i;\nloop invariant i265: 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y;\nloop invariant i266: x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i267: y >= 0 ==> y >= 0 ==> y >= 0 ==> y >= 0;\nloop invariant i268: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i269: i <= n ==> i <= n ==> i <= n ==> i <= n;\nloop invariant i270: x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2;\nloop invariant i271: y <= n ==> y <= n ==> y <= n ==> y <= n;\nloop invariant i272: x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2;\nloop invariant i273: y == i ==> y == i ==> y == i ==> y == i ==> y == i;\nloop invariant i274: 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y;\nloop invariant i275: x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i276: y >= 0 ==> y >= 0 ==> y >= 0 ==> y >= 0 ==> y >= 0;\nloop invariant i277: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i278: i <= n ==> i <= n ==> i <= n ==> i <= n ==> i <= n;\nloop invariant i279: x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2;\nloop invariant i280: 0 <= i <= 2^32 - 1;\nloop invariant i281: ( i >= 0);\nloop invariant i282: ( i <= n);\nloop invariant i283: ( x == 0);\nloop invariant i284: ( y == 0);\nloop invariant i285: ( x <= y);\nloop invariant i286: ( x >= y);\nloop invariant i287: ( x == y);\nloop invariant i288: ( x <= n);\nloop invariant i289: ( y <= n);\nloop invariant i290: ( x >= 0);\nloop invariant i291: ( y >= 0);\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
        "combined_annotation_num_solver_calls": 181,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main() {\n  unsigned int i=0;\n  int x=0, y=0;\n  int n=unknown_int();\n  if (!(n>0)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i161: y == 0;\nloop invariant i162: 0 <= i;\nloop invariant i163: x == 0;\nloop invariant i164: 1 <= n;\nloop invariant i165: i < n ==> x == i * y;\n\nloop invariant i167: i < n ==> y == 0;\n\nloop invariant i169: i < n ==> x == 0 ==> y == 0;\n\nloop invariant i171: 0 <= x <= 0;\nloop invariant i172: 0 <= y <= 0;\nloop invariant i173: i < n ==> x == 0;\nloop invariant i174: i >= n ==> x == 0;\nloop invariant i175: i >= n ==> y == 0;\nloop invariant i176: i < n ==> i <= n;\nloop invariant i177: i < n ==> x <= 0;\nloop invariant i178: i < n ==> y <= 0;\nloop invariant i179: i >= n ==> i >= n;\nloop invariant i180: i >= n ==> x >= 0;\nloop invariant i181: i >= n ==> y >= 0;\nloop invariant i182: i < n ==> x == 0 ==> i <= n;\nloop invariant i183: i < n ==> y == 0 ==> i <= n;\nloop invariant i184: i >= n ==> x == 0 ==> i >= n;\nloop invariant i185: i >= n ==> y == 0 ==> i >= n;\nloop invariant i186: i < n ==> i <= n ==> x == 0;\nloop invariant i187: i < n ==> i <= n ==> y == 0;\nloop invariant i188: i >= n ==> i >= n ==> x >= 0;\nloop invariant i189: i >= n ==> i >= n ==> y >= 0;\nloop invariant i190: i < n ==> i <= n ==> x == 0 ==> i <= n;\nloop invariant i191: i < n ==> i <= n ==> y == 0 ==> i <= n;\nloop invariant i192: i >= n ==> i >= n ==> x >= 0 ==> i >= n;\nloop invariant i193: i >= n ==> i >= n ==> y >= 0 ==> i >= n;\nloop invariant i194: i < n ==> x == 0 ==> i <= n ==> x == 0;\nloop invariant i195: i < n ==> x == 0 ==> i <= n ==> y == 0;\nloop invariant i196: i < n ==> y == 0 ==> i <= n ==> x == 0;\nloop invariant i197: i < n ==> y == 0 ==> i <= n ==> y == 0;\nloop invariant i198: i >= n ==> x == 0 ==> i >= n ==> x == 0;\nloop invariant i199: i >= n ==> x == 0 ==> i >= n ==> y == 0;\nloop invariant i200: i >= n ==> y == 0 ==> i >= n ==> x == 0;\nloop invariant i201: i >= n ==> y == 0 ==> i >= n ==> y == 0;\n\nloop invariant i203: x <= y;\nloop invariant i204: x <= n;\nloop invariant i205: y <= n;\nloop invariant i206: i >= 0;\n\nloop invariant i208: x != 0 ==> i < n;\n\nloop invariant i210: y != 0 ==> i < n;\n\nloop invariant i212: x != y ==> i < n;\nloop invariant i213: x == n ==> i == n;\n\nloop invariant i215: y == n ==> i == n;\n\n\nloop invariant i218: i != n ==> x != n;\n\nloop invariant i220: i != n ==> y != n;\nloop invariant i221: i == n ==> x == y;\n\nloop invariant i223: i == n ==> x <= y;\nloop invariant i224: i != n ==> x <= y;\nloop invariant i225: i == n ==> y <= x;\nloop invariant i226: i != n ==> y <= x;\nloop invariant i227: i == n ==> x == 0;\n\nloop invariant i229: i == n ==> y == 0;\n\nloop invariant i231: i == n ==> x <= n;\nloop invariant i232: i != n ==> x <= n;\nloop invariant i233: i == n ==> y <= n;\nloop invariant i234: i != n ==> y <= n;\n\n\n\n\n\n\nloop invariant i241: 0 <= x <= y;\nloop invariant i242: x >= 0;\nloop invariant i243: y >= 0;\nloop invariant i244: x <= (n - 1) * n / 2;\nloop invariant i245: x == (n - i) * i / 2 ==> x == (n - i) * i / 2;\nloop invariant i246: y == i ==> y == i;\nloop invariant i247: 0 <= x <= y ==> 0 <= x <= y;\nloop invariant i248: x >= 0 ==> x >= 0;\nloop invariant i249: y >= 0 ==> y >= 0;\nloop invariant i250: i >= 0 ==> i >= 0;\nloop invariant i251: i <= n ==> i <= n;\nloop invariant i252: x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2;\nloop invariant i253: y <= n ==> y <= n;\nloop invariant i254: x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2;\nloop invariant i255: y == i ==> y == i ==> y == i;\nloop invariant i256: 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y;\nloop invariant i257: x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i258: y >= 0 ==> y >= 0 ==> y >= 0;\nloop invariant i259: i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i260: i <= n ==> i <= n ==> i <= n;\nloop invariant i261: x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2;\nloop invariant i262: y <= n ==> y <= n ==> y <= n;\nloop invariant i263: x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2;\nloop invariant i264: y == i ==> y == i ==> y == i ==> y == i;\nloop invariant i265: 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y;\nloop invariant i266: x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i267: y >= 0 ==> y >= 0 ==> y >= 0 ==> y >= 0;\nloop invariant i268: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i269: i <= n ==> i <= n ==> i <= n ==> i <= n;\nloop invariant i270: x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2;\nloop invariant i271: y <= n ==> y <= n ==> y <= n ==> y <= n;\nloop invariant i272: x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2 ==> x == (n - i) * i / 2;\nloop invariant i273: y == i ==> y == i ==> y == i ==> y == i ==> y == i;\nloop invariant i274: 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y ==> 0 <= x <= y;\nloop invariant i275: x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0 ==> x >= 0;\nloop invariant i276: y >= 0 ==> y >= 0 ==> y >= 0 ==> y >= 0 ==> y >= 0;\nloop invariant i277: i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0 ==> i >= 0;\nloop invariant i278: i <= n ==> i <= n ==> i <= n ==> i <= n ==> i <= n;\nloop invariant i279: x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2 ==> x <= (n - 1) * n / 2;\n\nloop invariant i281: ( i >= 0);\n\nloop invariant i283: ( x == 0);\nloop invariant i284: ( y == 0);\nloop invariant i285: ( x <= y);\nloop invariant i286: ( x >= y);\nloop invariant i287: ( x == y);\nloop invariant i288: ( x <= n);\nloop invariant i289: ( y <= n);\nloop invariant i290: ( x >= 0);\nloop invariant i291: ( y >= 0);\n*/\nfor(i=0; 1; i++)\n  {\n    {;\n//@ assert(x==0);\n}\n\n  }\n  {;\n//@ assert(x==0);\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark16_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark17_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark19_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark20_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark21_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark22_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark23_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark25_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark26_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark29_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark30_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark31_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark32_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark33_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark34_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark35_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark36_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark37_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark38_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark39_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark40_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark41_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark42_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark43_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark45_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark46_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark47_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark48_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark49_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark50_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark51_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark52_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark53_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/Mono1_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/loopv1.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/loopv3.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_10.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_11.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_12.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_9.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sum_natnum.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt2.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt3.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt4.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt5.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt6.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt7.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt8.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt9.c",
            "../dataset/loop_invariants/sv-benchmarks/loops/count_up_down-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loops/for_infinite_loop_1.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark27_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/iftelse.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_8.c"
        ],
        "skipped": [],
        "total": 191,
        "success_count": 169,
        "failure_count": 22,
        "success_rate": 0.8848167539267016
    }
}