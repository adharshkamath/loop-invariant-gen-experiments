{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/82.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  while (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i >= x) )\nif ( (0 > i) )\n{;\n//@ assert( (i >= y) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant y <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant y >= 0;\nloop invariant i <= y;\nloop invariant i >= y;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= y;\nloop invariant x >= i;\nloop invariant y >= i;\nloop invariant (i >= x) ==> (i >= y);\nloop invariant (1 <= i) ==> (i < y);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant unknown() ==> i >= x;\nloop invariant 0 > i ==> i >= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= x;\nloop invariant x >= y;\nloop invariant i >= y;\nloop invariant i >= 0;\nloop invariant i < x;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= x;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= i;\nloop invariant i >= 0;\nloop invariant y >= i;\nloop invariant i >= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= x;\nloop invariant i >= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= y;\nloop invariant (i >= y) ==> (i >= x);\nloop invariant (i < y) ==> (0 <= i) ==> (i < x);\nloop invariant (i < y) ==> (0 <= i) ==> (i < x);\n*/\n```",
            "```\n/*@\nloop invariant ( ( ( ((x >= y) && (y >= 0)) ==> (i >= y) ) && ( (x >= y) ==> (i >= x) ) ) && ( (x >= y) ==> (i <= x) ) ) && ( ((x >= y) && (y >= 0)) ==> (i <= y) );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i1 <= y;\nloop invariant i1 == i2;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i1 == i3;\nloop invariant i1 <= i4;\nloop invariant i1 >= i5;\nloop invariant i1 == i6;\nloop invariant i1 == i7;\nloop invariant i1 == i8;\nloop invariant i1 == i9;\nloop invariant i1 == i10;\nloop invariant i1 == i11;\nloop invariant i1 == i12;\nloop invariant i1 == i13;\nloop invariant i1 == i14;\nloop invariant i1 == i15;\nloop invariant i1 == i16;\nloop invariant i1 == i17;\nloop invariant i1 == i18;\nloop invariant i1 == i19;\nloop invariant i1 == i20;\nloop invariant i1 == i21;\nloop invariant i1 == i22;\nloop invariant i1 == i23;\nloop invariant i1 == i24;\nloop invariant i1 == i25;\nloop invariant i1 == i26;\nloop invariant i1 == i27;\nloop invariant i1 == i28;\nloop invariant i1 == i29;\nloop invariant i1 == i30;\nloop invariant i1 == i31;\nloop invariant i1 == i32;\nloop invariant i1 == i33;\nloop invariant i1 == i34;\nloop invariant i1 == i35;\nloop invariant i1 == i36;\nloop invariant i1 == i37;\nloop invariant i1 == i38;\nloop invariant i1 == i39;\nloop invariant i1 == i40;\nloop invariant i1 == i41;\nloop invariant i1 == i42;\nloop invariant i1 == i43;\nloop invariant i1 == i44;\nloop invariant i1 == i45;\nloop invariant i1 == i46;\nloop invariant i1 == i47;\nloop invariant i1 == i48;\nloop invariant i1 == i49;\nloop invariant i1 == i50;\nloop invariant i1 == i51;\nloop invariant i1 == i52;\nloop invariant i1 == i53;\nloop invariant i1 == i54;\nloop invariant i1 == i55;\nloop invariant i1 == i56;\nloop invariant i1 == i57;\nloop invariant i1 == i58;\nloop invariant i1 == i59;\nloop invariant i1 == i60;\nloop invariant i1 == i61;\nloop invariant i1 == i62;\nloop invariant i1 == i63;\nloop invariant i1 == i64;\nloop invariant i1 == i65;\nloop invariant i1 == i66;\nloop invariant i1 == i67;\nloop invariant i1 == i68;\nloop invariant i1 == i69;\nloop invariant i1 == i70;\nloop invariant i1 == i71;\nloop invariant i1 == i72;\nloop invariant i1 == i73;\nloop invariant i1 == i74;\nloop invariant i1 == i75;\nloop invariant i1 == i76;\nloop invariant i1 == i77;\nloop invariant i1 == i78;\nloop invariant i1 == i79;\nloop invariant i1 == i80;\nloop invariant i1 == i81;\nloop invariant i1 == i82;\nloop invariant i1 == i83;\nloop invariant i1 == i84;\nloop invariant i1 == i85;\nloop invariant i1 == i86;\nloop invariant i1 == i87;\nloop invariant i1 == i88;\nloop invariant i1 == i89;\nloop invariant i1 == i90;\nloop invariant i1 == i91;\nloop invariant i1 == i92;\nloop invariant i1 == i93;\nloop invariant i1 == i94;\nloop invariant i1 == i95;\nloop invariant i1 == i96;\nloop invariant i1 == i97;\nloop invariant i1 == i98;\nloop invariant i1 == i99;\nloop invariant i1 == i100;\nloop invariant i1 == i101;\nloop invariant i1 == i102;\nloop invariant i1 == i103;\nloop invariant i1 == i104;\nloop invariant i1 == i105;\nloop invariant i1 == i106;\nloop invariant i1 == i107;\nloop invariant i1 == i108;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= y;\nloop invariant x >= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i < x ==> i >= y;\nloop invariant i >= x ==> i >= y;\nloop invariant i >= x ==> i <= y;\nloop invariant i >= x ==> i < y;\nloop invariant i < x ==> i >= y ==> x == y;\nloop invariant i < x ==> i <= y ==> x == y;\nloop invariant i < x ==> i < y ==> x == y;\nloop invariant i < x ==> i >= y ==> x != y;\nloop invariant i < x ==> i <= y ==> x != y;\nloop invariant i < x ==> i < y ==> x != y;\nloop invariant i >= x ==> i >= y ==> x == y ==> i == x;\nloop invariant i >= x ==> i <= y ==> x == y ==> i == x;\nloop invariant i >= x ==> i < y ==> x == y ==> i == x;\nloop invariant i >= x ==> i >= y ==> x != y ==> i != x;\nloop invariant i >= x ==> i <= y ==> x != y ==> i != x;\nloop invariant i >= x ==> i < y ==> x != y ==> i != x;\nloop invariant i < x ==> i >= y ==> x == y ==> i == y;\nloop invariant i < x ==> i <= y ==> x == y ==> i == y;\nloop invariant i < x ==> i < y ==> x == y ==> i == y;\nloop invariant i < x ==> i >= y ==> x != y ==> i != y;\nloop invariant i < x ==> i <= y ==> x != y ==> i != y;\nloop invariant i < x ==> i < y ==> x != y ==> i != y;\nloop invariant i >= x ==> i >= y ==> x == y ==> i == x ==> i == y;\nloop invariant i >= x ==> i <= y ==> x == y ==> i == x ==> i == y;\nloop invariant i >= x ==> i < y ==> x == y ==> i == x ==> i == y;\nloop invariant i >= x ==> i >= y ==> x != y ==> i != x ==> i != y;\nloop invariant i >= x ==> i <= y ==> x != y ==> i != x ==> i != y;\nloop invariant i >= x ==> i < y ==> x != y ==> i != x ==> i != y;\nloop invariant i < x ==> i >= y ==> x == y ==> i == y ==> i == x;\nloop invariant i < x ==> i <= y ==> x == y ==> i == y ==> i == x;\nloop invariant i < x ==> i < y ==> x == y ==> i == y ==> i == x;\nloop invariant i < x ==> i >= y ==> x != y ==> i != y ==> i != x;\nloop invariant i < x ==> i <= y ==> x != y ==> i != y ==> i != x;\nloop invariant i < x ==> i < y ==> x != y ==> i != y ==> i != x;\nloop invariant i >= x ==> i >= y ==> x == y ==> i == x ==> i == y ==> i == y;\nloop invariant i >= x ==> i <= y ==> x == y ==> i == x ==> i == y ==> i == y;\nloop invariant i >= x ==> i < y ==> x == y ==> i == x ==> i == y ==> i == y;\nloop invariant i >= x ==> i >= y ==> x != y ==> i != x ==> i != y ==> i != y;\nloop invariant i >= x ==> i <= y ==> x != y ==> i != x ==> i != y ==> i != y;\nloop invariant i >= x ==> i < y ==> x != y ==> i != x ==> i != y ==> i != y;\nloop invariant i < x ==> i >= y ==> x == y ==> i == y ==> i == x ==> i == y;\nloop invariant i < x ==> i <= y ==> x == y ==> i == y ==> i == x ==> i == y;\nloop invariant i < x ==> i < y ==> x == y ==> i == y ==> i == x ==> i == y;\nloop invariant i < x ==> i >= y ==> x != y ==> i != y ==> i != x ==> i != y;\nloop invariant i < x ==> i <= y ==> x != y ==> i != y ==> i != x ==> i != y;\nloop invariant i < x ==> i < y ==> x != y ==> i != y ==> i != x ==> i != y;\nloop invariant i >= x ==> i >= y ==> x == y ==> i == x ==> i == y ==> i == y ==> i == x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= x;\nloop invariant i >= y;\nloop invariant i <= x;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= x;\nloop invariant i >= y;\nloop invariant i <= x;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant y <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant y >= 0;\nloop invariant i <= y;\nloop invariant i >= y;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  /*@\nloop invariant i1: y <= x;\nloop invariant i2: i >= 0;\nloop invariant i3: i <= x;\nloop invariant i4: y >= 0;\nloop invariant i5: i <= y;\n\nloop invariant i7: x >= 0;\n*/\nwhile (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i >= x) )\nif ( (0 > i) )\n{;\n//@ assert( (i >= y) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  /*@\nloop invariant i1: 0 <= i <= y;\nloop invariant i2: i >= 0;\nloop invariant i3: i <= y;\n\n*/\nwhile (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i >= x) )\nif ( (0 > i) )\n{;\n//@ assert( (i >= y) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= y;\nloop invariant x >= i;\nloop invariant y >= i;\nloop invariant (i >= x) ==> (i >= y);\nloop invariant (1 <= i) ==> (i < y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  /*@\nloop invariant i1: 0 <= i <= y;\n\nloop invariant i3: y >= i;\n\n\n*/\nwhile (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i >= x) )\nif ( (0 > i) )\n{;\n//@ assert( (i >= y) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant unknown() ==> i >= x;\nloop invariant 0 > i ==> i >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  /*@\nloop invariant i1: 0 <= i <= y;\nloop invariant i2: i >= 0;\nloop invariant i3: i <= y;\n\nloop invariant i5: 0 > i ==> i >= y;\n*/\nwhile (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i >= x) )\nif ( (0 > i) )\n{;\n//@ assert( (i >= y) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  /*@\nloop invariant i1: 0 <= i <= y;\nloop invariant i2: i >= 0;\nloop invariant i3: i <= y;\n*/\nwhile (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i >= x) )\nif ( (0 > i) )\n{;\n//@ assert( (i >= y) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i <= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  /*@\n\nloop invariant i2: i >= 0;\n\nloop invariant i4: i <= y;\n*/\nwhile (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i >= x) )\nif ( (0 > i) )\n{;\n//@ assert( (i >= y) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= x;\nloop invariant x >= y;\nloop invariant i >= y;\nloop invariant i >= 0;\nloop invariant i < x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  /*@\nloop invariant i1: 0 <= i <= x;\nloop invariant i2: x >= y;\n\nloop invariant i4: i >= 0;\n\n*/\nwhile (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i >= x) )\nif ( (0 > i) )\n{;\n//@ assert( (i >= y) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= x;\nloop invariant x >= y;\nloop invariant y >= 0;\nloop invariant x >= 0;\nloop invariant x >= i;\nloop invariant i >= 0;\nloop invariant y >= i;\nloop invariant i >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  /*@\n\nloop invariant i2: x >= y;\nloop invariant i3: y >= 0;\nloop invariant i4: x >= 0;\nloop invariant i5: x >= i;\nloop invariant i6: i >= 0;\nloop invariant i7: y >= i;\n\n*/\nwhile (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i >= x) )\nif ( (0 > i) )\n{;\n//@ assert( (i >= y) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i >= 0;\nloop invariant i < y;\nloop invariant i >= y;\nloop invariant i >= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  /*@\nloop invariant i1: 0 <= i <= y;\n\n\nloop invariant i4: i >= 0;\n\n*/\nwhile (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i >= x) )\nif ( (0 > i) )\n{;\n//@ assert( (i >= y) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= x;\nloop invariant i >= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= 0;\nloop invariant i <= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  /*@\n\n\nloop invariant i3: i >= 0;\nloop invariant i4: i <= y;\n\n*/\nwhile (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i >= x) )\nif ( (0 > i) )\n{;\n//@ assert( (i >= y) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= y;\nloop invariant (i >= y) ==> (i >= x);\nloop invariant (i < y) ==> (0 <= i) ==> (i < x);\nloop invariant (i < y) ==> (0 <= i) ==> (i < x);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  /*@\nloop invariant i1: 0 <= i <= y;\n\n\n*/\nwhile (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i >= x) )\nif ( (0 > i) )\n{;\n//@ assert( (i >= y) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant ( ( ( ((x >= y) && (y >= 0)) ==> (i >= y) ) && ( (x >= y) ==> (i >= x) ) ) && ( (x >= y) ==> (i <= x) ) ) && ( ((x >= y) && (y >= 0)) ==> (i <= y) );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  /*@\n\n*/\nwhile (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i >= x) )\nif ( (0 > i) )\n{;\n//@ assert( (i >= y) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 108,
                "annotations": "```\n/*@\nloop invariant 0 <= i1 <= y;\nloop invariant i1 == i2;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i1 == i3;\nloop invariant i1 <= i4;\nloop invariant i1 >= i5;\nloop invariant i1 == i6;\nloop invariant i1 == i7;\nloop invariant i1 == i8;\nloop invariant i1 == i9;\nloop invariant i1 == i10;\nloop invariant i1 == i11;\nloop invariant i1 == i12;\nloop invariant i1 == i13;\nloop invariant i1 == i14;\nloop invariant i1 == i15;\nloop invariant i1 == i16;\nloop invariant i1 == i17;\nloop invariant i1 == i18;\nloop invariant i1 == i19;\nloop invariant i1 == i20;\nloop invariant i1 == i21;\nloop invariant i1 == i22;\nloop invariant i1 == i23;\nloop invariant i1 == i24;\nloop invariant i1 == i25;\nloop invariant i1 == i26;\nloop invariant i1 == i27;\nloop invariant i1 == i28;\nloop invariant i1 == i29;\nloop invariant i1 == i30;\nloop invariant i1 == i31;\nloop invariant i1 == i32;\nloop invariant i1 == i33;\nloop invariant i1 == i34;\nloop invariant i1 == i35;\nloop invariant i1 == i36;\nloop invariant i1 == i37;\nloop invariant i1 == i38;\nloop invariant i1 == i39;\nloop invariant i1 == i40;\nloop invariant i1 == i41;\nloop invariant i1 == i42;\nloop invariant i1 == i43;\nloop invariant i1 == i44;\nloop invariant i1 == i45;\nloop invariant i1 == i46;\nloop invariant i1 == i47;\nloop invariant i1 == i48;\nloop invariant i1 == i49;\nloop invariant i1 == i50;\nloop invariant i1 == i51;\nloop invariant i1 == i52;\nloop invariant i1 == i53;\nloop invariant i1 == i54;\nloop invariant i1 == i55;\nloop invariant i1 == i56;\nloop invariant i1 == i57;\nloop invariant i1 == i58;\nloop invariant i1 == i59;\nloop invariant i1 == i60;\nloop invariant i1 == i61;\nloop invariant i1 == i62;\nloop invariant i1 == i63;\nloop invariant i1 == i64;\nloop invariant i1 == i65;\nloop invariant i1 == i66;\nloop invariant i1 == i67;\nloop invariant i1 == i68;\nloop invariant i1 == i69;\nloop invariant i1 == i70;\nloop invariant i1 == i71;\nloop invariant i1 == i72;\nloop invariant i1 == i73;\nloop invariant i1 == i74;\nloop invariant i1 == i75;\nloop invariant i1 == i76;\nloop invariant i1 == i77;\nloop invariant i1 == i78;\nloop invariant i1 == i79;\nloop invariant i1 == i80;\nloop invariant i1 == i81;\nloop invariant i1 == i82;\nloop invariant i1 == i83;\nloop invariant i1 == i84;\nloop invariant i1 == i85;\nloop invariant i1 == i86;\nloop invariant i1 == i87;\nloop invariant i1 == i88;\nloop invariant i1 == i89;\nloop invariant i1 == i90;\nloop invariant i1 == i91;\nloop invariant i1 == i92;\nloop invariant i1 == i93;\nloop invariant i1 == i94;\nloop invariant i1 == i95;\nloop invariant i1 == i96;\nloop invariant i1 == i97;\nloop invariant i1 == i98;\nloop invariant i1 == i99;\nloop invariant i1 == i100;\nloop invariant i1 == i101;\nloop invariant i1 == i102;\nloop invariant i1 == i103;\nloop invariant i1 == i104;\nloop invariant i1 == i105;\nloop invariant i1 == i106;\nloop invariant i1 == i107;\nloop invariant i1 == i108;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  /*@\n\n\nloop invariant i3: x >= 0;\nloop invariant i4: y >= 0;\nloop invariant i5: x >= y;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i >= x) )\nif ( (0 > i) )\n{;\n//@ assert( (i >= y) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= y;\nloop invariant x >= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant i < x ==> i >= y;\nloop invariant i >= x ==> i >= y;\nloop invariant i >= x ==> i <= y;\nloop invariant i >= x ==> i < y;\nloop invariant i < x ==> i >= y ==> x == y;\nloop invariant i < x ==> i <= y ==> x == y;\nloop invariant i < x ==> i < y ==> x == y;\nloop invariant i < x ==> i >= y ==> x != y;\nloop invariant i < x ==> i <= y ==> x != y;\nloop invariant i < x ==> i < y ==> x != y;\nloop invariant i >= x ==> i >= y ==> x == y ==> i == x;\nloop invariant i >= x ==> i <= y ==> x == y ==> i == x;\nloop invariant i >= x ==> i < y ==> x == y ==> i == x;\nloop invariant i >= x ==> i >= y ==> x != y ==> i != x;\nloop invariant i >= x ==> i <= y ==> x != y ==> i != x;\nloop invariant i >= x ==> i < y ==> x != y ==> i != x;\nloop invariant i < x ==> i >= y ==> x == y ==> i == y;\nloop invariant i < x ==> i <= y ==> x == y ==> i == y;\nloop invariant i < x ==> i < y ==> x == y ==> i == y;\nloop invariant i < x ==> i >= y ==> x != y ==> i != y;\nloop invariant i < x ==> i <= y ==> x != y ==> i != y;\nloop invariant i < x ==> i < y ==> x != y ==> i != y;\nloop invariant i >= x ==> i >= y ==> x == y ==> i == x ==> i == y;\nloop invariant i >= x ==> i <= y ==> x == y ==> i == x ==> i == y;\nloop invariant i >= x ==> i < y ==> x == y ==> i == x ==> i == y;\nloop invariant i >= x ==> i >= y ==> x != y ==> i != x ==> i != y;\nloop invariant i >= x ==> i <= y ==> x != y ==> i != x ==> i != y;\nloop invariant i >= x ==> i < y ==> x != y ==> i != x ==> i != y;\nloop invariant i < x ==> i >= y ==> x == y ==> i == y ==> i == x;\nloop invariant i < x ==> i <= y ==> x == y ==> i == y ==> i == x;\nloop invariant i < x ==> i < y ==> x == y ==> i == y ==> i == x;\nloop invariant i < x ==> i >= y ==> x != y ==> i != y ==> i != x;\nloop invariant i < x ==> i <= y ==> x != y ==> i != y ==> i != x;\nloop invariant i < x ==> i < y ==> x != y ==> i != y ==> i != x;\nloop invariant i >= x ==> i >= y ==> x == y ==> i == x ==> i == y ==> i == y;\nloop invariant i >= x ==> i <= y ==> x == y ==> i == x ==> i == y ==> i == y;\nloop invariant i >= x ==> i < y ==> x == y ==> i == x ==> i == y ==> i == y;\nloop invariant i >= x ==> i >= y ==> x != y ==> i != x ==> i != y ==> i != y;\nloop invariant i >= x ==> i <= y ==> x != y ==> i != x ==> i != y ==> i != y;\nloop invariant i >= x ==> i < y ==> x != y ==> i != x ==> i != y ==> i != y;\nloop invariant i < x ==> i >= y ==> x == y ==> i == y ==> i == x ==> i == y;\nloop invariant i < x ==> i <= y ==> x == y ==> i == y ==> i == x ==> i == y;\nloop invariant i < x ==> i < y ==> x == y ==> i == y ==> i == x ==> i == y;\nloop invariant i < x ==> i >= y ==> x != y ==> i != y ==> i != x ==> i != y;\nloop invariant i < x ==> i <= y ==> x != y ==> i != y ==> i != x ==> i != y;\nloop invariant i < x ==> i < y ==> x != y ==> i != y ==> i != x ==> i != y;\nloop invariant i >= x ==> i >= y ==> x == y ==> i == x ==> i == y ==> i == y ==> i == x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  /*@\nloop invariant i1: 0 <= i <= y;\nloop invariant i2: x >= y;\nloop invariant i3: i >= 0;\nloop invariant i4: i <= y;\nloop invariant i5: x >= 0;\nloop invariant i6: y >= 0;\n\nloop invariant i8: i >= x ==> i >= y;\nloop invariant i9: i >= x ==> i <= y;\n\n\n\n\nloop invariant i14: i < x ==> i >= y ==> x != y;\n\n\nloop invariant i17: i >= x ==> i >= y ==> x == y ==> i == x;\nloop invariant i18: i >= x ==> i <= y ==> x == y ==> i == x;\nloop invariant i19: i >= x ==> i < y ==> x == y ==> i == x;\nloop invariant i20: i >= x ==> i >= y ==> x != y ==> i != x;\nloop invariant i21: i >= x ==> i <= y ==> x != y ==> i != x;\nloop invariant i22: i >= x ==> i < y ==> x != y ==> i != x;\nloop invariant i23: i < x ==> i >= y ==> x == y ==> i == y;\n\n\n\n\nloop invariant i28: i < x ==> i < y ==> x != y ==> i != y;\nloop invariant i29: i >= x ==> i >= y ==> x == y ==> i == x ==> i == y;\nloop invariant i30: i >= x ==> i <= y ==> x == y ==> i == x ==> i == y;\nloop invariant i31: i >= x ==> i < y ==> x == y ==> i == x ==> i == y;\nloop invariant i32: i >= x ==> i >= y ==> x != y ==> i != x ==> i != y;\nloop invariant i33: i >= x ==> i <= y ==> x != y ==> i != x ==> i != y;\nloop invariant i34: i >= x ==> i < y ==> x != y ==> i != x ==> i != y;\nloop invariant i35: i < x ==> i >= y ==> x == y ==> i == y ==> i == x;\nloop invariant i36: i < x ==> i <= y ==> x == y ==> i == y ==> i == x;\nloop invariant i37: i < x ==> i < y ==> x == y ==> i == y ==> i == x;\nloop invariant i38: i < x ==> i >= y ==> x != y ==> i != y ==> i != x;\nloop invariant i39: i < x ==> i <= y ==> x != y ==> i != y ==> i != x;\nloop invariant i40: i < x ==> i < y ==> x != y ==> i != y ==> i != x;\nloop invariant i41: i >= x ==> i >= y ==> x == y ==> i == x ==> i == y ==> i == y;\nloop invariant i42: i >= x ==> i <= y ==> x == y ==> i == x ==> i == y ==> i == y;\nloop invariant i43: i >= x ==> i < y ==> x == y ==> i == x ==> i == y ==> i == y;\nloop invariant i44: i >= x ==> i >= y ==> x != y ==> i != x ==> i != y ==> i != y;\nloop invariant i45: i >= x ==> i <= y ==> x != y ==> i != x ==> i != y ==> i != y;\nloop invariant i46: i >= x ==> i < y ==> x != y ==> i != x ==> i != y ==> i != y;\nloop invariant i47: i < x ==> i >= y ==> x == y ==> i == y ==> i == x ==> i == y;\nloop invariant i48: i < x ==> i <= y ==> x == y ==> i == y ==> i == x ==> i == y;\nloop invariant i49: i < x ==> i < y ==> x == y ==> i == y ==> i == x ==> i == y;\nloop invariant i50: i < x ==> i >= y ==> x != y ==> i != y ==> i != x ==> i != y;\nloop invariant i51: i < x ==> i <= y ==> x != y ==> i != y ==> i != x ==> i != y;\nloop invariant i52: i < x ==> i < y ==> x != y ==> i != y ==> i != x ==> i != y;\nloop invariant i53: i >= x ==> i >= y ==> x == y ==> i == x ==> i == y ==> i == y ==> i == x;\n*/\nwhile (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i >= x) )\nif ( (0 > i) )\n{;\n//@ assert( (i >= y) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= x;\nloop invariant i >= y;\nloop invariant i <= x;\nloop invariant i >= y;\nloop invariant i >= x;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= y;\nloop invariant i >= 0;\nloop invariant i <= x;\nloop invariant i >= x;\nloop invariant i >= y;\nloop invariant i <= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  /*@\nloop invariant i1: 0 <= i <= y;\nloop invariant i2: i >= 0;\nloop invariant i3: i <= y;\n\n\n\n*/\nwhile (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i >= x) )\nif ( (0 > i) )\n{;\n//@ assert( (i >= y) );\n}\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 36: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  /*@\nloop invariant i1: y <= x;\nloop invariant i2: i >= 0;\nloop invariant i3: i <= x;\nloop invariant i4: y >= 0;\nloop invariant i5: i <= y;\nloop invariant i6: i >= y;\nloop invariant i7: x >= 0;\nloop invariant i8: 0 <= i <= y;\nloop invariant i9: x >= i;\nloop invariant i10: y >= i;\nloop invariant i11: (i >= x) ==> (i >= y);\nloop invariant i12: (1 <= i) ==> (i < y);\nloop invariant i13: unknown() ==> i >= x;\nloop invariant i14: 0 > i ==> i >= y;\nloop invariant i15: 1 <= i <= y;\nloop invariant i16: 0 <= i <= x;\nloop invariant i17: x >= y;\nloop invariant i18: i < x;\nloop invariant i19: 1 <= i <= x;\nloop invariant i20: i >= x;\nloop invariant i21: i < y;\nloop invariant i22: (i >= y) ==> (i >= x);\nloop invariant i23: (i < y) ==> (0 <= i) ==> (i < x);\nloop invariant i24: ( ( ( ((x >= y) && (y >= 0)) ==> (i >= y) ) && ( (x >= y) ==> (i >= x) ) ) && ( (x >= y) ==> (i <= x) ) ) && ( ((x >= y) && (y >= 0)) ==> (i <= y) );\nloop invariant i25: 0 <= i1 <= y;\nloop invariant i26: i1 == i2;\nloop invariant i27: i1 == i3;\nloop invariant i28: i1 <= i4;\nloop invariant i29: i1 >= i5;\nloop invariant i30: i1 == i6;\nloop invariant i31: i1 == i7;\nloop invariant i32: i1 == i8;\nloop invariant i33: i1 == i9;\nloop invariant i34: i1 == i10;\nloop invariant i35: i1 == i11;\nloop invariant i36: i1 == i12;\nloop invariant i37: i1 == i13;\nloop invariant i38: i1 == i14;\nloop invariant i39: i1 == i15;\nloop invariant i40: i1 == i16;\nloop invariant i41: i1 == i17;\nloop invariant i42: i1 == i18;\nloop invariant i43: i1 == i19;\nloop invariant i44: i1 == i20;\nloop invariant i45: i1 == i21;\nloop invariant i46: i1 == i22;\nloop invariant i47: i1 == i23;\nloop invariant i48: i1 == i24;\nloop invariant i49: i1 == i25;\nloop invariant i50: i1 == i26;\nloop invariant i51: i1 == i27;\nloop invariant i52: i1 == i28;\nloop invariant i53: i1 == i29;\nloop invariant i54: i1 == i30;\nloop invariant i55: i1 == i31;\nloop invariant i56: i1 == i32;\nloop invariant i57: i1 == i33;\nloop invariant i58: i1 == i34;\nloop invariant i59: i1 == i35;\nloop invariant i60: i1 == i36;\nloop invariant i61: i1 == i37;\nloop invariant i62: i1 == i38;\nloop invariant i63: i1 == i39;\nloop invariant i64: i1 == i40;\nloop invariant i65: i1 == i41;\nloop invariant i66: i1 == i42;\nloop invariant i67: i1 == i43;\nloop invariant i68: i1 == i44;\nloop invariant i69: i1 == i45;\nloop invariant i70: i1 == i46;\nloop invariant i71: i1 == i47;\nloop invariant i72: i1 == i48;\nloop invariant i73: i1 == i49;\nloop invariant i74: i1 == i50;\nloop invariant i75: i1 == i51;\nloop invariant i76: i1 == i52;\nloop invariant i77: i1 == i53;\nloop invariant i78: i1 == i54;\nloop invariant i79: i1 == i55;\nloop invariant i80: i1 == i56;\nloop invariant i81: i1 == i57;\nloop invariant i82: i1 == i58;\nloop invariant i83: i1 == i59;\nloop invariant i84: i1 == i60;\nloop invariant i85: i1 == i61;\nloop invariant i86: i1 == i62;\nloop invariant i87: i1 == i63;\nloop invariant i88: i1 == i64;\nloop invariant i89: i1 == i65;\nloop invariant i90: i1 == i66;\nloop invariant i91: i1 == i67;\nloop invariant i92: i1 == i68;\nloop invariant i93: i1 == i69;\nloop invariant i94: i1 == i70;\nloop invariant i95: i1 == i71;\nloop invariant i96: i1 == i72;\nloop invariant i97: i1 == i73;\nloop invariant i98: i1 == i74;\nloop invariant i99: i1 == i75;\nloop invariant i100: i1 == i76;\nloop invariant i101: i1 == i77;\nloop invariant i102: i1 == i78;\nloop invariant i103: i1 == i79;\nloop invariant i104: i1 == i80;\nloop invariant i105: i1 == i81;\nloop invariant i106: i1 == i82;\nloop invariant i107: i1 == i83;\nloop invariant i108: i1 == i84;\nloop invariant i109: i1 == i85;\nloop invariant i110: i1 == i86;\nloop invariant i111: i1 == i87;\nloop invariant i112: i1 == i88;\nloop invariant i113: i1 == i89;\nloop invariant i114: i1 == i90;\nloop invariant i115: i1 == i91;\nloop invariant i116: i1 == i92;\nloop invariant i117: i1 == i93;\nloop invariant i118: i1 == i94;\nloop invariant i119: i1 == i95;\nloop invariant i120: i1 == i96;\nloop invariant i121: i1 == i97;\nloop invariant i122: i1 == i98;\nloop invariant i123: i1 == i99;\nloop invariant i124: i1 == i100;\nloop invariant i125: i1 == i101;\nloop invariant i126: i1 == i102;\nloop invariant i127: i1 == i103;\nloop invariant i128: i1 == i104;\nloop invariant i129: i1 == i105;\nloop invariant i130: i1 == i106;\nloop invariant i131: i1 == i107;\nloop invariant i132: i1 == i108;\nloop invariant i133: i < x ==> i >= y;\nloop invariant i134: i >= x ==> i >= y;\nloop invariant i135: i >= x ==> i <= y;\nloop invariant i136: i >= x ==> i < y;\nloop invariant i137: i < x ==> i >= y ==> x == y;\nloop invariant i138: i < x ==> i <= y ==> x == y;\nloop invariant i139: i < x ==> i < y ==> x == y;\nloop invariant i140: i < x ==> i >= y ==> x != y;\nloop invariant i141: i < x ==> i <= y ==> x != y;\nloop invariant i142: i < x ==> i < y ==> x != y;\nloop invariant i143: i >= x ==> i >= y ==> x == y ==> i == x;\nloop invariant i144: i >= x ==> i <= y ==> x == y ==> i == x;\nloop invariant i145: i >= x ==> i < y ==> x == y ==> i == x;\nloop invariant i146: i >= x ==> i >= y ==> x != y ==> i != x;\nloop invariant i147: i >= x ==> i <= y ==> x != y ==> i != x;\nloop invariant i148: i >= x ==> i < y ==> x != y ==> i != x;\nloop invariant i149: i < x ==> i >= y ==> x == y ==> i == y;\nloop invariant i150: i < x ==> i <= y ==> x == y ==> i == y;\nloop invariant i151: i < x ==> i < y ==> x == y ==> i == y;\nloop invariant i152: i < x ==> i >= y ==> x != y ==> i != y;\nloop invariant i153: i < x ==> i <= y ==> x != y ==> i != y;\nloop invariant i154: i < x ==> i < y ==> x != y ==> i != y;\nloop invariant i155: i >= x ==> i >= y ==> x == y ==> i == x ==> i == y;\nloop invariant i156: i >= x ==> i <= y ==> x == y ==> i == x ==> i == y;\nloop invariant i157: i >= x ==> i < y ==> x == y ==> i == x ==> i == y;\nloop invariant i158: i >= x ==> i >= y ==> x != y ==> i != x ==> i != y;\nloop invariant i159: i >= x ==> i <= y ==> x != y ==> i != x ==> i != y;\nloop invariant i160: i >= x ==> i < y ==> x != y ==> i != x ==> i != y;\nloop invariant i161: i < x ==> i >= y ==> x == y ==> i == y ==> i == x;\nloop invariant i162: i < x ==> i <= y ==> x == y ==> i == y ==> i == x;\nloop invariant i163: i < x ==> i < y ==> x == y ==> i == y ==> i == x;\nloop invariant i164: i < x ==> i >= y ==> x != y ==> i != y ==> i != x;\nloop invariant i165: i < x ==> i <= y ==> x != y ==> i != y ==> i != x;\nloop invariant i166: i < x ==> i < y ==> x != y ==> i != y ==> i != x;\nloop invariant i167: i >= x ==> i >= y ==> x == y ==> i == x ==> i == y ==> i == y;\nloop invariant i168: i >= x ==> i <= y ==> x == y ==> i == x ==> i == y ==> i == y;\nloop invariant i169: i >= x ==> i < y ==> x == y ==> i == x ==> i == y ==> i == y;\nloop invariant i170: i >= x ==> i >= y ==> x != y ==> i != x ==> i != y ==> i != y;\nloop invariant i171: i >= x ==> i <= y ==> x != y ==> i != x ==> i != y ==> i != y;\nloop invariant i172: i >= x ==> i < y ==> x != y ==> i != x ==> i != y ==> i != y;\nloop invariant i173: i < x ==> i >= y ==> x == y ==> i == y ==> i == x ==> i == y;\nloop invariant i174: i < x ==> i <= y ==> x == y ==> i == y ==> i == x ==> i == y;\nloop invariant i175: i < x ==> i < y ==> x == y ==> i == y ==> i == x ==> i == y;\nloop invariant i176: i < x ==> i >= y ==> x != y ==> i != y ==> i != x ==> i != y;\nloop invariant i177: i < x ==> i <= y ==> x != y ==> i != y ==> i != x ==> i != y;\nloop invariant i178: i < x ==> i < y ==> x != y ==> i != y ==> i != x ==> i != y;\nloop invariant i179: i >= x ==> i >= y ==> x == y ==> i == x ==> i == y ==> i == y ==> i == x;\n*/\nwhile (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i >= x) )\nif ( (0 > i) )\n{;\n//@ assert( (i >= y) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 119,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int i;\n  int x;\n  int y;\n  int z1;\n  int z2;\n  int z3;\n  \n  (i = 0);\n  assume((x >= 0));\n  assume((y >= 0));\n  assume((x >= y));\n  \n  /*@\nloop invariant i1: y <= x;\nloop invariant i2: i >= 0;\nloop invariant i3: i <= x;\nloop invariant i4: y >= 0;\nloop invariant i5: i <= y;\n\nloop invariant i7: x >= 0;\nloop invariant i8: 0 <= i <= y;\nloop invariant i9: x >= i;\nloop invariant i10: y >= i;\nloop invariant i11: (i >= x) ==> (i >= y);\n\n\nloop invariant i14: 0 > i ==> i >= y;\n\nloop invariant i16: 0 <= i <= x;\nloop invariant i17: x >= y;\n\n\n\n\n\nloop invariant i23: (i < y) ==> (0 <= i) ==> (i < x);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i134: i >= x ==> i >= y;\nloop invariant i135: i >= x ==> i <= y;\n\n\n\n\nloop invariant i140: i < x ==> i >= y ==> x != y;\n\n\nloop invariant i143: i >= x ==> i >= y ==> x == y ==> i == x;\nloop invariant i144: i >= x ==> i <= y ==> x == y ==> i == x;\nloop invariant i145: i >= x ==> i < y ==> x == y ==> i == x;\nloop invariant i146: i >= x ==> i >= y ==> x != y ==> i != x;\nloop invariant i147: i >= x ==> i <= y ==> x != y ==> i != x;\nloop invariant i148: i >= x ==> i < y ==> x != y ==> i != x;\nloop invariant i149: i < x ==> i >= y ==> x == y ==> i == y;\n\n\n\n\nloop invariant i154: i < x ==> i < y ==> x != y ==> i != y;\nloop invariant i155: i >= x ==> i >= y ==> x == y ==> i == x ==> i == y;\nloop invariant i156: i >= x ==> i <= y ==> x == y ==> i == x ==> i == y;\nloop invariant i157: i >= x ==> i < y ==> x == y ==> i == x ==> i == y;\nloop invariant i158: i >= x ==> i >= y ==> x != y ==> i != x ==> i != y;\nloop invariant i159: i >= x ==> i <= y ==> x != y ==> i != x ==> i != y;\nloop invariant i160: i >= x ==> i < y ==> x != y ==> i != x ==> i != y;\nloop invariant i161: i < x ==> i >= y ==> x == y ==> i == y ==> i == x;\nloop invariant i162: i < x ==> i <= y ==> x == y ==> i == y ==> i == x;\nloop invariant i163: i < x ==> i < y ==> x == y ==> i == y ==> i == x;\nloop invariant i164: i < x ==> i >= y ==> x != y ==> i != y ==> i != x;\nloop invariant i165: i < x ==> i <= y ==> x != y ==> i != y ==> i != x;\nloop invariant i166: i < x ==> i < y ==> x != y ==> i != y ==> i != x;\nloop invariant i167: i >= x ==> i >= y ==> x == y ==> i == x ==> i == y ==> i == y;\nloop invariant i168: i >= x ==> i <= y ==> x == y ==> i == x ==> i == y ==> i == y;\nloop invariant i169: i >= x ==> i < y ==> x == y ==> i == x ==> i == y ==> i == y;\nloop invariant i170: i >= x ==> i >= y ==> x != y ==> i != x ==> i != y ==> i != y;\nloop invariant i171: i >= x ==> i <= y ==> x != y ==> i != x ==> i != y ==> i != y;\nloop invariant i172: i >= x ==> i < y ==> x != y ==> i != x ==> i != y ==> i != y;\nloop invariant i173: i < x ==> i >= y ==> x == y ==> i == y ==> i == x ==> i == y;\nloop invariant i174: i < x ==> i <= y ==> x == y ==> i == y ==> i == x ==> i == y;\nloop invariant i175: i < x ==> i < y ==> x == y ==> i == y ==> i == x ==> i == y;\nloop invariant i176: i < x ==> i >= y ==> x != y ==> i != y ==> i != x ==> i != y;\nloop invariant i177: i < x ==> i <= y ==> x != y ==> i != y ==> i != x ==> i != y;\nloop invariant i178: i < x ==> i < y ==> x != y ==> i != y ==> i != x ==> i != y;\nloop invariant i179: i >= x ==> i >= y ==> x == y ==> i == x ==> i == y ==> i == y ==> i == x;\n*/\nwhile (unknown()) {\n    if ( (i < y) )\n    {\n    (i  = (i + 1));\n    }\n\n  }\n  \nif ( (i >= x) )\nif ( (0 > i) )\n{;\n//@ assert( (i >= y) );\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c"
        ],
        "skipped": [],
        "total": 70,
        "success_count": 59,
        "failure_count": 11,
        "success_rate": 0.8428571428571429
    }
}