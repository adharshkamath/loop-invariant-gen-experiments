{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark27_linear.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  while (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant k >= i-j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j; loop invariant k >= i; loop invariant k >= j; loop invariant k >= i-j; loop invariant k <= i+j; loop invariant k <= i+j+1; loop invariant k <= i+j+2; loop invariant k <= i+j+3; loop invariant k <= i+j+4; loop invariant k <= i+j+5; loop invariant k <= i+j+6; loop invariant k <= i+j+7; loop invariant k <= i+j+8; loop invariant k <= i+j+9; loop invariant k <= i+j+10; loop invariant k <= i+j+11; loop invariant k <= i+j+12; loop invariant k <= i+j+13; loop invariant k <= i+j+14; loop invariant k <= i+j+15; loop invariant k <= i+j+16; loop invariant k <= i+j+17; loop invariant k <= i+j+18; loop invariant k <= i+j+19; loop invariant k <= i+j+20; loop invariant k <= i+j+21; loop invariant k <= i+j+22; loop invariant k <= i+j+23; loop invariant k <= i+j+24; loop invariant k <= i+j+25; loop invariant k <= i+j+26; loop invariant k <= i+j+27; loop invariant k <= i+j+28; loop invariant k <= i+j+29; loop invariant k <= i+j+30; loop invariant k <= i+j+31; loop invariant k <= i+j+32; loop invariant k <= i+j+33; loop invariant k <= i+j+34; loop invariant k <= i+j+35; loop invariant k <= i+j+36; loop invariant k <= i+j+37; loop invariant k <= i+j+38; loop invariant k <= i+j+39; loop invariant k <= i+j+40; loop invariant k <= i+j+41; loop invariant k <= i+j+42; loop invariant k <= i+j+43; loop invariant k <= i+j+44; loop invariant k <= i+j+45; loop invariant k <= i+j+46; loop invariant k <= i+j+47; loop invariant k <= i+j+48; loop invariant k <= i+j+49; loop invariant k <= i+j+50; loop invariant k <= i+j+51; loop invariant k <= i+j+52; loop invariant k <= i+j+53; loop invariant k <= i+j+54; loop invariant k <= i+j+55; loop invariant k <= i+j+56; loop invariant k <= i+j+57; loop invariant k <= i+j+58; loop invariant k <= i+j+59; loop invariant k <= i+j+60; loop invariant k <= i+j+61; loop invariant k <= i+j+62; loop invariant k <= i+j+63; loop invariant k <= i+j+64; loop invariant k <= i+j+65; loop invariant k <= i+j+66; loop invariant k <= i+j+67; loop invariant k <= i+j+68; loop invariant k <= i+j+69; loop invariant k <= i+j+70; loop invariant k <= i+j+71; loop invariant k <= i+j+72; loop invariant k <= i+j+73; loop invariant k <= i+j+74; loop invariant k <= i+j+75; loop invariant k <= i+j+76; loop invariant k <= i+j+77; loop invariant k <= i+j+78; loop invariant k <= i+j+79; loop invariant k <= i+j+80; loop invariant k <= i+j+81; loop invariant k <= i+j+82; loop invariant k <= i+j+83; loop invariant k <= i+j+84; loop invariant k <= i+j+85; loop invariant k <= i+j+86; loop invariant k <= i+j+87; loop invariant k <= i+j+88; loop invariant k <= i+j+89; loop invariant k <= i+j+90; loop invariant k <= i+j+91; loop invariant k <= i+j+92; loop invariant k <= i+j+93; loop invariant k <= i+j+94; loop invariant k <= i+j+95; loop invariant k <= i+j+96; loop invariant k <= i+j+97;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant i <= k <= i + (j - i);\nloop invariant k >= i + 1;\nloop invariant i <= j - 1 ==> k <= i + (j - i);\n*/\n```",
            "```\n/*@\nloop invariant i <= j;\nloop invariant k >= i + j - 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant k >= i;\nloop invariant k >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= j;\nloop invariant j >= i;\nloop invariant k >= i;\nloop invariant k <= i + j;\nloop invariant i + j >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant i + j >= 0;\nloop invariant i + j >= k;\nloop invariant i + k >= j;\nloop invariant j + k >= i;\nloop invariant k >= i + j - k;\nloop invariant k >= i + j - k + 1;\nloop invariant k >= i + j - k + 2;\nloop invariant k >= i + j - k + 3;\nloop invariant k >= i + j - k + 4;\nloop invariant k >= i + j - k + 5;\nloop invariant k >= i + j - k + 6;\nloop invariant k >= i + j - k + 7;\nloop invariant k >= i + j - k + 8;\nloop invariant k >= i + j - k + 9;\nloop invariant k >= i + j - k + 10;\nloop invariant k >= i + j - k + 11;\nloop invariant k >= i + j - k + 12;\nloop invariant k >= i + j - k + 13;\nloop invariant k >= i + j - k + 14;\nloop invariant k >= i + j - k + 15;\nloop invariant k >= i + j - k + 16;\nloop invariant k >= i + j - k + 17;\nloop invariant k >= i + j - k + 18;\nloop invariant k >= i + j - k + 19;\nloop invariant k >= i + j - k + 20;\nloop invariant k >= i + j - k + 21;\nloop invariant k >= i + j - k + 22;\nloop invariant k >= i + j - k + 23;\nloop invariant k >= i + j - k + 24;\nloop invariant k >= i + j - k + 25;\nloop invariant k >= i + j - k + 26;\nloop invariant k >= i + j - k + 27;\nloop invariant k >= i + j - k + 28;\nloop invariant k >= i + j - k + 29;\nloop invariant k >= i + j - k + 30;\nloop invariant k >= i + j - k + 31;\nloop invariant k >= i + j - k + 32;\nloop invariant k >= i + j - k + 33;\nloop invariant k >= i + j - k + 34;\nloop invariant k >= i + j - k + 35;\nloop invariant k >= i + j - k + 36;\nloop invariant k >= i + j - k + 37;\nloop invariant k >= i + j - k + 38;\nloop invariant k >= i + j - k + 39;\nloop invariant k >= i + j - k + 40;\nloop invariant k >= i + j - k + 41;\nloop invariant k >= i + j - k + 42;\nloop invariant k >= i + j - k + 43;\nloop invariant k >= i + j - k + 44;\nloop invariant k >= i + j - k + 45;\nloop invariant k >= i + j - k + 46;\nloop invariant k >= i + j - k + 47;\nloop invariant k >= i + j - k + 48;\nloop invariant k >= i + j - k + 49;\nloop invariant k >= i + j - k + 50;\nloop invariant k >= i + j - k + 51;\nloop invariant k >= i + j - k + 52;\nloop invariant k >= i + j - k + 53;\nloop invariant k >= i + j - k + 54;\nloop invariant k >= i + j - k + 55;\nloop invariant k >= i + j - k + 56;\nloop invariant k >= i + j - k + 57;\nloop invariant k >= i + j - k + 58;\nloop invariant k >= i + j - k + 59;\nloop invariant k >= i + j - k + 60;\nloop invariant k >= i + j - k + 61;\nloop invariant k >= i + j - k + 62;\nloop invariant k >= i + j - k + 63;\nloop invariant k >= i + j - k + 64;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i < j;\nloop invariant k > 0 ==> ((k = (i + j - 1)));\nloop invariant k <= 0 ==> (k = 0);\nloop invariant i < j ==> (k >= i);\nloop invariant i >= j ==> ((k = 0));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j;loop invariant 0 <= k <= 32767;loop invariant i < j ==> k == (i + j);\n*/\n```",
            "```\n/*@\nloop invariant i <= j;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant k >= i;\nloop invariant k <= j;\nloop invariant i >= j ==> k <= j;\nloop invariant i < j ==> i <= k-1;\nloop invariant i < j ==> k >= i+1;\nloop invariant i < j ==> k <= j;\nloop invariant i < j ==> k >= i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant 0 <= k <= i + j;\nloop invariant i <= j ==> k == i + j;\nloop invariant i < j ==> i <= k;\nloop invariant i < j ==> k <= i + j;\nloop invariant i < j ==> k > 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i-j; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= 100000;\nloop invariant i >= (1 + (j - 1) * j / 2);\nloop invariant k >= 1;\nloop invariant i <= j;\nloop invariant k <= i + j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= i;\nloop invariant k >= i + j;\nloop invariant k >= i;\nloop invariant k >= j;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant k - i + 1 <= j - i;\nloop invariant k >= i;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 158,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant k >= i-j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\nloop invariant i2: k >= i-j;\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j; loop invariant k >= i; loop invariant k >= j; loop invariant k >= i-j; loop invariant k <= i+j; loop invariant k <= i+j+1; loop invariant k <= i+j+2; loop invariant k <= i+j+3; loop invariant k <= i+j+4; loop invariant k <= i+j+5; loop invariant k <= i+j+6; loop invariant k <= i+j+7; loop invariant k <= i+j+8; loop invariant k <= i+j+9; loop invariant k <= i+j+10; loop invariant k <= i+j+11; loop invariant k <= i+j+12; loop invariant k <= i+j+13; loop invariant k <= i+j+14; loop invariant k <= i+j+15; loop invariant k <= i+j+16; loop invariant k <= i+j+17; loop invariant k <= i+j+18; loop invariant k <= i+j+19; loop invariant k <= i+j+20; loop invariant k <= i+j+21; loop invariant k <= i+j+22; loop invariant k <= i+j+23; loop invariant k <= i+j+24; loop invariant k <= i+j+25; loop invariant k <= i+j+26; loop invariant k <= i+j+27; loop invariant k <= i+j+28; loop invariant k <= i+j+29; loop invariant k <= i+j+30; loop invariant k <= i+j+31; loop invariant k <= i+j+32; loop invariant k <= i+j+33; loop invariant k <= i+j+34; loop invariant k <= i+j+35; loop invariant k <= i+j+36; loop invariant k <= i+j+37; loop invariant k <= i+j+38; loop invariant k <= i+j+39; loop invariant k <= i+j+40; loop invariant k <= i+j+41; loop invariant k <= i+j+42; loop invariant k <= i+j+43; loop invariant k <= i+j+44; loop invariant k <= i+j+45; loop invariant k <= i+j+46; loop invariant k <= i+j+47; loop invariant k <= i+j+48; loop invariant k <= i+j+49; loop invariant k <= i+j+50; loop invariant k <= i+j+51; loop invariant k <= i+j+52; loop invariant k <= i+j+53; loop invariant k <= i+j+54; loop invariant k <= i+j+55; loop invariant k <= i+j+56; loop invariant k <= i+j+57; loop invariant k <= i+j+58; loop invariant k <= i+j+59; loop invariant k <= i+j+60; loop invariant k <= i+j+61; loop invariant k <= i+j+62; loop invariant k <= i+j+63; loop invariant k <= i+j+64; loop invariant k <= i+j+65; loop invariant k <= i+j+66; loop invariant k <= i+j+67; loop invariant k <= i+j+68; loop invariant k <= i+j+69; loop invariant k <= i+j+70; loop invariant k <= i+j+71; loop invariant k <= i+j+72; loop invariant k <= i+j+73; loop invariant k <= i+j+74; loop invariant k <= i+j+75; loop invariant k <= i+j+76; loop invariant k <= i+j+77; loop invariant k <= i+j+78; loop invariant k <= i+j+79; loop invariant k <= i+j+80; loop invariant k <= i+j+81; loop invariant k <= i+j+82; loop invariant k <= i+j+83; loop invariant k <= i+j+84; loop invariant k <= i+j+85; loop invariant k <= i+j+86; loop invariant k <= i+j+87; loop invariant k <= i+j+88; loop invariant k <= i+j+89; loop invariant k <= i+j+90; loop invariant k <= i+j+91; loop invariant k <= i+j+92; loop invariant k <= i+j+93; loop invariant k <= i+j+94; loop invariant k <= i+j+95; loop invariant k <= i+j+96; loop invariant k <= i+j+97;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant i <= k <= i + (j - i);\nloop invariant k >= i + 1;\nloop invariant i <= j - 1 ==> k <= i + (j - i);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n\n\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant i <= j;\nloop invariant k >= i + j - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\nloop invariant i1: i <= j;\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant k >= i;\nloop invariant k >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= j;\nloop invariant j >= i;\nloop invariant k >= i;\nloop invariant k <= i + j;\nloop invariant i + j >= 0;\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant i + j >= 0;\nloop invariant i + j >= k;\nloop invariant i + k >= j;\nloop invariant j + k >= i;\nloop invariant k >= i + j - k;\nloop invariant k >= i + j - k + 1;\nloop invariant k >= i + j - k + 2;\nloop invariant k >= i + j - k + 3;\nloop invariant k >= i + j - k + 4;\nloop invariant k >= i + j - k + 5;\nloop invariant k >= i + j - k + 6;\nloop invariant k >= i + j - k + 7;\nloop invariant k >= i + j - k + 8;\nloop invariant k >= i + j - k + 9;\nloop invariant k >= i + j - k + 10;\nloop invariant k >= i + j - k + 11;\nloop invariant k >= i + j - k + 12;\nloop invariant k >= i + j - k + 13;\nloop invariant k >= i + j - k + 14;\nloop invariant k >= i + j - k + 15;\nloop invariant k >= i + j - k + 16;\nloop invariant k >= i + j - k + 17;\nloop invariant k >= i + j - k + 18;\nloop invariant k >= i + j - k + 19;\nloop invariant k >= i + j - k + 20;\nloop invariant k >= i + j - k + 21;\nloop invariant k >= i + j - k + 22;\nloop invariant k >= i + j - k + 23;\nloop invariant k >= i + j - k + 24;\nloop invariant k >= i + j - k + 25;\nloop invariant k >= i + j - k + 26;\nloop invariant k >= i + j - k + 27;\nloop invariant k >= i + j - k + 28;\nloop invariant k >= i + j - k + 29;\nloop invariant k >= i + j - k + 30;\nloop invariant k >= i + j - k + 31;\nloop invariant k >= i + j - k + 32;\nloop invariant k >= i + j - k + 33;\nloop invariant k >= i + j - k + 34;\nloop invariant k >= i + j - k + 35;\nloop invariant k >= i + j - k + 36;\nloop invariant k >= i + j - k + 37;\nloop invariant k >= i + j - k + 38;\nloop invariant k >= i + j - k + 39;\nloop invariant k >= i + j - k + 40;\nloop invariant k >= i + j - k + 41;\nloop invariant k >= i + j - k + 42;\nloop invariant k >= i + j - k + 43;\nloop invariant k >= i + j - k + 44;\nloop invariant k >= i + j - k + 45;\nloop invariant k >= i + j - k + 46;\nloop invariant k >= i + j - k + 47;\nloop invariant k >= i + j - k + 48;\nloop invariant k >= i + j - k + 49;\nloop invariant k >= i + j - k + 50;\nloop invariant k >= i + j - k + 51;\nloop invariant k >= i + j - k + 52;\nloop invariant k >= i + j - k + 53;\nloop invariant k >= i + j - k + 54;\nloop invariant k >= i + j - k + 55;\nloop invariant k >= i + j - k + 56;\nloop invariant k >= i + j - k + 57;\nloop invariant k >= i + j - k + 58;\nloop invariant k >= i + j - k + 59;\nloop invariant k >= i + j - k + 60;\nloop invariant k >= i + j - k + 61;\nloop invariant k >= i + j - k + 62;\nloop invariant k >= i + j - k + 63;\nloop invariant k >= i + j - k + 64;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\nloop invariant i2: j >= i;\n\n\n\n\n\n\n\n\nloop invariant i11: j + k >= i;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= i < j;\nloop invariant k > 0 ==> ((k = (i + j - 1)));\nloop invariant k <= 0 ==> (k = 0);\nloop invariant i < j ==> (k >= i);\nloop invariant i >= j ==> ((k = 0));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n\n\n\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;loop invariant 0 <= k <= 32767;loop invariant i < j ==> k == (i + j);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant i <= j;\nloop invariant i >= 0;\nloop invariant j >= i;\nloop invariant k >= i;\nloop invariant k <= j;\nloop invariant i >= j ==> k <= j;\nloop invariant i < j ==> i <= k-1;\nloop invariant i < j ==> k >= i+1;\nloop invariant i < j ==> k <= j;\nloop invariant i < j ==> k >= i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\nloop invariant i1: i <= j;\n\nloop invariant i3: j >= i;\n\n\n\n\n\n\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant 0 <= k <= i + j;\nloop invariant i <= j ==> k == i + j;\nloop invariant i < j ==> i <= k;\nloop invariant i < j ==> k <= i + j;\nloop invariant i < j ==> k > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n\n\n\n\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i-j; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= 100000;\nloop invariant i >= (1 + (j - 1) * j / 2);\nloop invariant k >= 1;\nloop invariant i <= j;\nloop invariant k <= i + j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n\n\nloop invariant i4: i <= j;\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= i;\nloop invariant k >= i + j;\nloop invariant k >= i;\nloop invariant k >= j;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n\n\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant k - i + 1 <= j - i;\nloop invariant k >= i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 260: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\nloop invariant i1: i1;\nloop invariant i2: i2;\nloop invariant i3: i3;\nloop invariant i4: i4;\nloop invariant i5: i5;\nloop invariant i6: i6;\nloop invariant i7: i7;\nloop invariant i8: i8;\nloop invariant i9: i9;\nloop invariant i10: i10;\nloop invariant i11: i11;\nloop invariant i12: i12;\nloop invariant i13: i13;\nloop invariant i14: i14;\nloop invariant i15: i15;\nloop invariant i16: i16;\nloop invariant i17: i17;\nloop invariant i18: i18;\nloop invariant i19: i19;\nloop invariant i20: i20;\nloop invariant i21: i21;\nloop invariant i22: i22;\nloop invariant i23: i23;\nloop invariant i24: i24;\nloop invariant i25: i25;\nloop invariant i26: i26;\nloop invariant i27: i27;\nloop invariant i28: i28;\nloop invariant i29: i29;\nloop invariant i30: i30;\nloop invariant i31: i31;\nloop invariant i32: i32;\nloop invariant i33: i33;\nloop invariant i34: i34;\nloop invariant i35: i35;\nloop invariant i36: i36;\nloop invariant i37: i37;\nloop invariant i38: i38;\nloop invariant i39: i39;\nloop invariant i40: i40;\nloop invariant i41: i41;\nloop invariant i42: i42;\nloop invariant i43: i43;\nloop invariant i44: i44;\nloop invariant i45: i45;\nloop invariant i46: i46;\nloop invariant i47: i47;\nloop invariant i48: i48;\nloop invariant i49: i49;\nloop invariant i50: i50;\nloop invariant i51: i51;\nloop invariant i52: i52;\nloop invariant i53: i53;\nloop invariant i54: i54;\nloop invariant i55: i55;\nloop invariant i56: i56;\nloop invariant i57: i57;\nloop invariant i58: i58;\nloop invariant i59: i59;\nloop invariant i60: i60;\nloop invariant i61: i61;\nloop invariant i62: i62;\nloop invariant i63: i63;\nloop invariant i64: i64;\nloop invariant i65: i65;\nloop invariant i66: i66;\nloop invariant i67: i67;\nloop invariant i68: i68;\nloop invariant i69: i69;\nloop invariant i70: i70;\nloop invariant i71: i71;\nloop invariant i72: i72;\nloop invariant i73: i73;\nloop invariant i74: i74;\nloop invariant i75: i75;\nloop invariant i76: i76;\nloop invariant i77: i77;\nloop invariant i78: i78;\nloop invariant i79: i79;\nloop invariant i80: i80;\nloop invariant i81: i81;\nloop invariant i82: i82;\nloop invariant i83: i83;\nloop invariant i84: i84;\nloop invariant i85: i85;\nloop invariant i86: i86;\nloop invariant i87: i87;\nloop invariant i88: i88;\nloop invariant i89: i89;\nloop invariant i90: i90;\nloop invariant i91: i91;\nloop invariant i92: i92;\nloop invariant i93: i93;\nloop invariant i94: i94;\nloop invariant i95: i95;\nloop invariant i96: i96;\nloop invariant i97: i97;\nloop invariant i98: i98;\nloop invariant i99: i99;\nloop invariant i100: i100;\nloop invariant i101: i101;\nloop invariant i102: i102;\nloop invariant i103: i103;\nloop invariant i104: i104;\nloop invariant i105: i105;\nloop invariant i106: i106;\nloop invariant i107: i107;\nloop invariant i108: i108;\nloop invariant i109: i109;\nloop invariant i110: i110;\nloop invariant i111: i111;\nloop invariant i112: i112;\nloop invariant i113: i113;\nloop invariant i114: i114;\nloop invariant i115: i115;\nloop invariant i116: i116;\nloop invariant i117: i117;\nloop invariant i118: i118;\nloop invariant i119: i119;\nloop invariant i120: i120;\nloop invariant i121: i121;\nloop invariant i122: i122;\nloop invariant i123: i123;\nloop invariant i124: i124;\nloop invariant i125: i125;\nloop invariant i126: i126;\nloop invariant i127: i127;\nloop invariant i128: i128;\nloop invariant i129: i129;\nloop invariant i130: i130;\nloop invariant i131: i131;\nloop invariant i132: i132;\nloop invariant i133: i133;\nloop invariant i134: i134;\nloop invariant i135: i135;\nloop invariant i136: i136;\nloop invariant i137: i137;\nloop invariant i138: i138;\nloop invariant i139: i139;\nloop invariant i140: i140;\nloop invariant i141: i141;\nloop invariant i142: i142;\nloop invariant i143: i143;\nloop invariant i144: i144;\nloop invariant i145: i145;\nloop invariant i146: i146;\nloop invariant i147: i147;\nloop invariant i148: i148;\nloop invariant i149: i149;\nloop invariant i150: i150;\nloop invariant i151: i151;\nloop invariant i152: i152;\nloop invariant i153: i153;\nloop invariant i154: i154;\nloop invariant i155: i155;\nloop invariant i156: i156;\nloop invariant i157: i157;\nloop invariant i158: i158;\nloop invariant i159: 0 <= i <= j;\nloop invariant i160: k >= i-j;\nloop invariant i161: 0 <= i <= j; loop invariant k >= i; loop invariant k >= j; loop invariant k >= i-j; loop invariant k <= i+j; loop invariant k <= i+j+1; loop invariant k <= i+j+2; loop invariant k <= i+j+3; loop invariant k <= i+j+4; loop invariant k <= i+j+5; loop invariant k <= i+j+6; loop invariant k <= i+j+7; loop invariant k <= i+j+8; loop invariant k <= i+j+9; loop invariant k <= i+j+10; loop invariant k <= i+j+11; loop invariant k <= i+j+12; loop invariant k <= i+j+13; loop invariant k <= i+j+14; loop invariant k <= i+j+15; loop invariant k <= i+j+16; loop invariant k <= i+j+17; loop invariant k <= i+j+18; loop invariant k <= i+j+19; loop invariant k <= i+j+20; loop invariant k <= i+j+21; loop invariant k <= i+j+22; loop invariant k <= i+j+23; loop invariant k <= i+j+24; loop invariant k <= i+j+25; loop invariant k <= i+j+26; loop invariant k <= i+j+27; loop invariant k <= i+j+28; loop invariant k <= i+j+29; loop invariant k <= i+j+30; loop invariant k <= i+j+31; loop invariant k <= i+j+32; loop invariant k <= i+j+33; loop invariant k <= i+j+34; loop invariant k <= i+j+35; loop invariant k <= i+j+36; loop invariant k <= i+j+37; loop invariant k <= i+j+38; loop invariant k <= i+j+39; loop invariant k <= i+j+40; loop invariant k <= i+j+41; loop invariant k <= i+j+42; loop invariant k <= i+j+43; loop invariant k <= i+j+44; loop invariant k <= i+j+45; loop invariant k <= i+j+46; loop invariant k <= i+j+47; loop invariant k <= i+j+48; loop invariant k <= i+j+49; loop invariant k <= i+j+50; loop invariant k <= i+j+51; loop invariant k <= i+j+52; loop invariant k <= i+j+53; loop invariant k <= i+j+54; loop invariant k <= i+j+55; loop invariant k <= i+j+56; loop invariant k <= i+j+57; loop invariant k <= i+j+58; loop invariant k <= i+j+59; loop invariant k <= i+j+60; loop invariant k <= i+j+61; loop invariant k <= i+j+62; loop invariant k <= i+j+63; loop invariant k <= i+j+64; loop invariant k <= i+j+65; loop invariant k <= i+j+66; loop invariant k <= i+j+67; loop invariant k <= i+j+68; loop invariant k <= i+j+69; loop invariant k <= i+j+70; loop invariant k <= i+j+71; loop invariant k <= i+j+72; loop invariant k <= i+j+73; loop invariant k <= i+j+74; loop invariant k <= i+j+75; loop invariant k <= i+j+76; loop invariant k <= i+j+77; loop invariant k <= i+j+78; loop invariant k <= i+j+79; loop invariant k <= i+j+80; loop invariant k <= i+j+81; loop invariant k <= i+j+82; loop invariant k <= i+j+83; loop invariant k <= i+j+84; loop invariant k <= i+j+85; loop invariant k <= i+j+86; loop invariant k <= i+j+87; loop invariant k <= i+j+88; loop invariant k <= i+j+89; loop invariant k <= i+j+90; loop invariant k <= i+j+91; loop invariant k <= i+j+92; loop invariant k <= i+j+93; loop invariant k <= i+j+94; loop invariant k <= i+j+95; loop invariant k <= i+j+96; loop invariant k <= i+j+97;\nloop invariant i162: i <= k <= i + (j - i);\nloop invariant i163: k >= i + 1;\nloop invariant i164: i <= j - 1 ==> k <= i + (j - i);\nloop invariant i165: i <= j;\nloop invariant i166: k >= i + j - 1;\nloop invariant i167: k >= i;\nloop invariant i168: k >= 0;\nloop invariant i169: 1 <= i <= j;\nloop invariant i170: j >= i;\nloop invariant i171: k <= i + j;\nloop invariant i172: i + j >= 0;\nloop invariant i173: i >= 0;\nloop invariant i174: j >= 0;\nloop invariant i175: i + j >= k;\nloop invariant i176: i + k >= j;\nloop invariant i177: j + k >= i;\nloop invariant i178: k >= i + j - k;\nloop invariant i179: k >= i + j - k + 1;\nloop invariant i180: k >= i + j - k + 2;\nloop invariant i181: k >= i + j - k + 3;\nloop invariant i182: k >= i + j - k + 4;\nloop invariant i183: k >= i + j - k + 5;\nloop invariant i184: k >= i + j - k + 6;\nloop invariant i185: k >= i + j - k + 7;\nloop invariant i186: k >= i + j - k + 8;\nloop invariant i187: k >= i + j - k + 9;\nloop invariant i188: k >= i + j - k + 10;\nloop invariant i189: k >= i + j - k + 11;\nloop invariant i190: k >= i + j - k + 12;\nloop invariant i191: k >= i + j - k + 13;\nloop invariant i192: k >= i + j - k + 14;\nloop invariant i193: k >= i + j - k + 15;\nloop invariant i194: k >= i + j - k + 16;\nloop invariant i195: k >= i + j - k + 17;\nloop invariant i196: k >= i + j - k + 18;\nloop invariant i197: k >= i + j - k + 19;\nloop invariant i198: k >= i + j - k + 20;\nloop invariant i199: k >= i + j - k + 21;\nloop invariant i200: k >= i + j - k + 22;\nloop invariant i201: k >= i + j - k + 23;\nloop invariant i202: k >= i + j - k + 24;\nloop invariant i203: k >= i + j - k + 25;\nloop invariant i204: k >= i + j - k + 26;\nloop invariant i205: k >= i + j - k + 27;\nloop invariant i206: k >= i + j - k + 28;\nloop invariant i207: k >= i + j - k + 29;\nloop invariant i208: k >= i + j - k + 30;\nloop invariant i209: k >= i + j - k + 31;\nloop invariant i210: k >= i + j - k + 32;\nloop invariant i211: k >= i + j - k + 33;\nloop invariant i212: k >= i + j - k + 34;\nloop invariant i213: k >= i + j - k + 35;\nloop invariant i214: k >= i + j - k + 36;\nloop invariant i215: k >= i + j - k + 37;\nloop invariant i216: k >= i + j - k + 38;\nloop invariant i217: k >= i + j - k + 39;\nloop invariant i218: k >= i + j - k + 40;\nloop invariant i219: k >= i + j - k + 41;\nloop invariant i220: k >= i + j - k + 42;\nloop invariant i221: k >= i + j - k + 43;\nloop invariant i222: k >= i + j - k + 44;\nloop invariant i223: k >= i + j - k + 45;\nloop invariant i224: k >= i + j - k + 46;\nloop invariant i225: k >= i + j - k + 47;\nloop invariant i226: k >= i + j - k + 48;\nloop invariant i227: k >= i + j - k + 49;\nloop invariant i228: k >= i + j - k + 50;\nloop invariant i229: k >= i + j - k + 51;\nloop invariant i230: k >= i + j - k + 52;\nloop invariant i231: k >= i + j - k + 53;\nloop invariant i232: k >= i + j - k + 54;\nloop invariant i233: k >= i + j - k + 55;\nloop invariant i234: k >= i + j - k + 56;\nloop invariant i235: k >= i + j - k + 57;\nloop invariant i236: k >= i + j - k + 58;\nloop invariant i237: k >= i + j - k + 59;\nloop invariant i238: k >= i + j - k + 60;\nloop invariant i239: k >= i + j - k + 61;\nloop invariant i240: k >= i + j - k + 62;\nloop invariant i241: k >= i + j - k + 63;\nloop invariant i242: k >= i + j - k + 64;\nloop invariant i243: 0 <= i < j;\nloop invariant i244: k > 0 ==> ((k = (i + j - 1)));\nloop invariant i245: k <= 0 ==> (k = 0);\nloop invariant i246: i < j ==> (k >= i);\nloop invariant i247: i >= j ==> ((k = 0));\nloop invariant i248: 0 <= i <= j;loop invariant 0 <= k <= 32767;loop invariant i < j ==> k == (i + j);\nloop invariant i249: k <= j;\nloop invariant i250: i >= j ==> k <= j;\nloop invariant i251: i < j ==> i <= k-1;\nloop invariant i252: i < j ==> k >= i+1;\nloop invariant i253: i < j ==> k <= j;\nloop invariant i254: i < j ==> k >= i;\nloop invariant i255: 0 <= k <= i + j;\nloop invariant i256: i <= j ==> k == i + j;\nloop invariant i257: i < j ==> i <= k;\nloop invariant i258: i < j ==> k <= i + j;\nloop invariant i259: i < j ==> k > 0;\nloop invariant i260: 0 <= i <= j; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i-j; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i; loop invariant k >= 0; loop invariant k >= i;\nloop invariant i261: 0 <= j <= 100000;\nloop invariant i262: i >= (1 + (j - 1) * j / 2);\nloop invariant i263: k >= 1;\nloop invariant i264: 0 <= j <= i;\nloop invariant i265: k >= i + j;\nloop invariant i266: k >= j;\nloop invariant i267: k - i + 1 <= j - i;\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 172,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int j = unknown_int();\n  int k = unknown_int();\n  if (!(i<j && k>i-j)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i160: k >= i-j;\n\n\n\n\nloop invariant i165: i <= j;\n\n\n\n\nloop invariant i170: j >= i;\n\n\n\n\n\n\nloop invariant i177: j + k >= i;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (i<j) {\n    k=k+1;\n    i=i+1;\n  }\n  {;\n//@ assert(k > 0);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark16_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark17_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark19_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark20_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark21_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark22_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark23_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark25_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark26_linear.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark27_linear.c"
        ],
        "skipped": [],
        "total": 147,
        "success_count": 127,
        "failure_count": 20,
        "success_rate": 0.8639455782312925
    }
}