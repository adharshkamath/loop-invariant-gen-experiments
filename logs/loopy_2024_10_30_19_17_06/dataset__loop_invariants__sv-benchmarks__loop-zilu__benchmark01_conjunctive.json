{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x==1 && y==1)) return 0;\n  while (unknown_bool()) {\n    x=x+y;\n    y=x;\n  }\n  {;\n//@ assert(y>=1);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 1 <= y <= x; loop invariant x >= y + 1; loop invariant y >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= INT_MAX;\nloop invariant 0 <= y <= x;\nloop invariant y >= 1;\nloop invariant 0 <= x <= INT_MAX;\nloop invariant 0 <= y <= x;\nloop invariant y >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x == y;\nloop invariant unknown_bool() ==> 0 <= x <= 100000;\nloop invariant unknown_bool() ==> 1 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2) ==> x == y;\nloop invariant x == y ==> x >= (1 + (y - 1) * y / 2);\nloop invariant x == y ==> 1 <= y <= 100000;\nloop invariant x == y ==> 1 <= x <= 100000;\nloop invariant unknown_bool() ==> x == y;\nloop invariant unknown_bool() ==> x >= (1 + (y - 1) * y / 2);\nloop invariant unknown_bool() ==> 1 <= y <= 100000;\nloop invariant unknown_bool() ==> 1 <= x <= 100000;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x >= y;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 2;\nloop invariant x + y >= 3;\nloop invariant x + y >= 4;\nloop invariant x + y >= 5;\nloop invariant x + y >= 6;\nloop invariant x + y >= 7;\nloop invariant x + y >= 8;\nloop invariant x + y >= 9;\nloop invariant x + y >= 10;\nloop invariant x + y >= 11;\nloop invariant x + y >= 12;\nloop invariant x + y >= 13;\nloop invariant x + y >= 14;\nloop invariant x + y >= 15;\nloop invariant x + y >= 16;\nloop invariant x + y >= 17;\nloop invariant x + y >= 18;\nloop invariant x + y >= 19;\nloop invariant x + y >= 20;\nloop invariant x + y >= 21;\nloop invariant x + y >= 22;\nloop invariant x + y >= 23;\nloop invariant x + y >= 24;\nloop invariant x + y >= 25;\nloop invariant x + y >= 26;\nloop invariant x + y >= 27;\nloop invariant x + y >= 28;\nloop invariant x + y >= 29;\nloop invariant x + y >= 30;\nloop invariant x + y >= 31;\nloop invariant x + y >= 32;\nloop invariant x + y >= 33;\nloop invariant x + y >= 34;\nloop invariant x + y >= 35;\nloop invariant x + y >= 36;\nloop invariant x + y >= 37;\nloop invariant x + y >= 38;\nloop invariant x + y >= 39;\nloop invariant x + y >= 40;\nloop invariant x + y >= 41;\nloop invariant x + y >= 42;\nloop invariant x + y >= 43;\nloop invariant x + y >= 44;\nloop invariant x + y >= 45;\nloop invariant x + y >= 46;\nloop invariant x + y >= 47;\nloop invariant x + y >= 48;\nloop invariant x + y >= 49;\nloop invariant x + y >= 50;\nloop invariant x + y >= 51;\nloop invariant x + y >= 52;\nloop invariant x + y >= 53;\nloop invariant x + y >= 54;\nloop invariant x + y >= 55;\nloop invariant x + y >= 56;\nloop invariant x + y >= 57;\nloop invariant x + y >= 58;\nloop invariant x + y >= 59;\nloop invariant x + y >= 60;\nloop invariant x + y >= 61;\nloop invariant x + y >= 62;\nloop invariant x + y >= 63;\nloop invariant x + y >= 64;\nloop invariant x + y >= 65;\nloop invariant x + y >= 66;\nloop invariant x + y >= 67;\nloop invariant x + y >= 68;\nloop invariant x + y >= 69;\nloop invariant x + y >= 70;\nloop invariant x + y >= 71;\nloop invariant x + y >= 72;\nloop invariant x + y >= 73;\nloop invariant x + y >= 74;\nloop invariant x + y >= 75;\nloop invariant x + y >= 76;\nloop invariant x + y >= 77;\nloop invariant x + y >= 78;\nloop invariant x + y >= 79;\nloop invariant x + y >= 80;\nloop invariant x + y >= 81;\nloop invariant x + y >= 82;\nloop invariant x + y >= 83;\nloop invariant x + y >= 84;\nloop invariant x + y >= 85;\nloop invariant x + y >= 86;\nloop invariant x + y >= 87;\nloop invariant x + y >= 88;\nloop invariant x + y >= 89;\nloop invariant x + y >= 90;\nloop invariant x + y >= 91;\nloop invariant x + y >= 92;\nloop invariant x + y >= 93;\nloop invariant x + y >= 94;\nloop invariant x + y >= 95;\nloop invariant x + y >= 96;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant y >= x;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y;\nloop invariant x >= y;\nloop invariant x == y * (y + 1) / 2;\nloop invariant unknown_bool();\nloop invariant unknown_int() == 1;\nloop invariant unknown_int() == 1;\nloop invariant 0 <= y ==> unknown_bool() ==> unknown_int() == 1 ==> x >= y ==> x == y * (y + 1) / 2 ==> y >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 1;\nloop invariant 1 <= y <= x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100000;\nloop invariant y >= 1;\nloop invariant x >= y;\nloop invariant x <= 2 * y;\nloop invariant x <= 3 * y;\nloop invariant x <= 4 * y;\nloop invariant x <= 5 * y;\nloop invariant x <= 6 * y;\nloop invariant x <= 7 * y;\nloop invariant x <= 8 * y;\nloop invariant x <= 9 * y;\nloop invariant x <= 10 * y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant y >= x;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x <= y;\nloop invariant y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x >= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x - y >= 0;\nloop invariant x - y >= (y - 1) * y / 2;\nloop invariant x >= y + (y - 1) * y / 2;\nloop invariant x >= y + (y - 1) * y / 2 ==> y - 1 >= 0;\nloop invariant x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0;\nloop invariant x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1;\nloop invariant x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2;\nloop invariant x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 1;\nloop invariant x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 1;\nloop invariant x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2;\nloop invariant x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3;\nloop invariant x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3;\nloop invariant x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3 ==> x >= y + (y - 1) * y / 2 ==> y >= 4;\nloop invariant x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3 ==> x >= y + (y - 1) * y / 2 ==> y >= 4;\nloop invariant x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3 ==> x >= y + (y - 1) * y / 2 ==> y >= 4 ==> x >= y + (y - 1) * y / 2 ==> y >= 5;\n*/\n```",
            "```\n/*@\nloop invariant y == x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x >= y;\nloop invariant y >= 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 0;\nloop invariant x <= 100000;\nloop invariant x >= y;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= INT_MAX;\nloop invariant 1 <= y <= INT_MAX;\nloop invariant x >= y;\nloop invariant y >= 1;\nloop invariant x >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x >= y;\nloop invariant x >= (y + 1);\nloop invariant y >= 1;\nloop invariant y <= x;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= y <= x; loop invariant x >= y + 1; loop invariant y >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x==1 && y==1)) return 0;\n  /*@\nloop invariant i1: 1 <= y <= x; loop invariant x >= y + 1; loop invariant y >= 1;\n*/\nwhile (unknown_bool()) {\n    x=x+y;\n    y=x;\n  }\n  {;\n//@ assert(y>=1);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= INT_MAX;\nloop invariant 0 <= y <= x;\nloop invariant y >= 1;\nloop invariant 0 <= x <= INT_MAX;\nloop invariant 0 <= y <= x;\nloop invariant y >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x==1 && y==1)) return 0;\n  /*@\nloop invariant i1: 0 <= x <= INT_MAX;\nloop invariant i2: 0 <= y <= x;\nloop invariant i3: y >= 1;\n*/\nwhile (unknown_bool()) {\n    x=x+y;\n    y=x;\n  }\n  {;\n//@ assert(y>=1);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 11,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x == y;\nloop invariant unknown_bool() ==> 0 <= x <= 100000;\nloop invariant unknown_bool() ==> 1 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2) ==> x == y;\nloop invariant x == y ==> x >= (1 + (y - 1) * y / 2);\nloop invariant x == y ==> 1 <= y <= 100000;\nloop invariant x == y ==> 1 <= x <= 100000;\nloop invariant unknown_bool() ==> x == y;\nloop invariant unknown_bool() ==> x >= (1 + (y - 1) * y / 2);\nloop invariant unknown_bool() ==> 1 <= y <= 100000;\nloop invariant unknown_bool() ==> 1 <= x <= 100000;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x==1 && y==1)) return 0;\n  /*@\n\n\nloop invariant i3: x == y;\n\n\nloop invariant i6: x >= (1 + (y - 1) * y / 2) ==> x == y;\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    x=x+y;\n    y=x;\n  }\n  {;\n//@ assert(y>=1);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 94,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x >= y;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x + y >= 0;\nloop invariant x + y >= 1;\nloop invariant x + y >= 2;\nloop invariant x + y >= 3;\nloop invariant x + y >= 4;\nloop invariant x + y >= 5;\nloop invariant x + y >= 6;\nloop invariant x + y >= 7;\nloop invariant x + y >= 8;\nloop invariant x + y >= 9;\nloop invariant x + y >= 10;\nloop invariant x + y >= 11;\nloop invariant x + y >= 12;\nloop invariant x + y >= 13;\nloop invariant x + y >= 14;\nloop invariant x + y >= 15;\nloop invariant x + y >= 16;\nloop invariant x + y >= 17;\nloop invariant x + y >= 18;\nloop invariant x + y >= 19;\nloop invariant x + y >= 20;\nloop invariant x + y >= 21;\nloop invariant x + y >= 22;\nloop invariant x + y >= 23;\nloop invariant x + y >= 24;\nloop invariant x + y >= 25;\nloop invariant x + y >= 26;\nloop invariant x + y >= 27;\nloop invariant x + y >= 28;\nloop invariant x + y >= 29;\nloop invariant x + y >= 30;\nloop invariant x + y >= 31;\nloop invariant x + y >= 32;\nloop invariant x + y >= 33;\nloop invariant x + y >= 34;\nloop invariant x + y >= 35;\nloop invariant x + y >= 36;\nloop invariant x + y >= 37;\nloop invariant x + y >= 38;\nloop invariant x + y >= 39;\nloop invariant x + y >= 40;\nloop invariant x + y >= 41;\nloop invariant x + y >= 42;\nloop invariant x + y >= 43;\nloop invariant x + y >= 44;\nloop invariant x + y >= 45;\nloop invariant x + y >= 46;\nloop invariant x + y >= 47;\nloop invariant x + y >= 48;\nloop invariant x + y >= 49;\nloop invariant x + y >= 50;\nloop invariant x + y >= 51;\nloop invariant x + y >= 52;\nloop invariant x + y >= 53;\nloop invariant x + y >= 54;\nloop invariant x + y >= 55;\nloop invariant x + y >= 56;\nloop invariant x + y >= 57;\nloop invariant x + y >= 58;\nloop invariant x + y >= 59;\nloop invariant x + y >= 60;\nloop invariant x + y >= 61;\nloop invariant x + y >= 62;\nloop invariant x + y >= 63;\nloop invariant x + y >= 64;\nloop invariant x + y >= 65;\nloop invariant x + y >= 66;\nloop invariant x + y >= 67;\nloop invariant x + y >= 68;\nloop invariant x + y >= 69;\nloop invariant x + y >= 70;\nloop invariant x + y >= 71;\nloop invariant x + y >= 72;\nloop invariant x + y >= 73;\nloop invariant x + y >= 74;\nloop invariant x + y >= 75;\nloop invariant x + y >= 76;\nloop invariant x + y >= 77;\nloop invariant x + y >= 78;\nloop invariant x + y >= 79;\nloop invariant x + y >= 80;\nloop invariant x + y >= 81;\nloop invariant x + y >= 82;\nloop invariant x + y >= 83;\nloop invariant x + y >= 84;\nloop invariant x + y >= 85;\nloop invariant x + y >= 86;\nloop invariant x + y >= 87;\nloop invariant x + y >= 88;\nloop invariant x + y >= 89;\nloop invariant x + y >= 90;\nloop invariant x + y >= 91;\nloop invariant x + y >= 92;\nloop invariant x + y >= 93;\nloop invariant x + y >= 94;\nloop invariant x + y >= 95;\nloop invariant x + y >= 96;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x==1 && y==1)) return 0;\n  /*@\nloop invariant i1: 0 <= x;\nloop invariant i2: 0 <= y;\nloop invariant i3: x >= y;\nloop invariant i4: x >= 1;\nloop invariant i5: y >= 1;\nloop invariant i6: x + y >= 0;\nloop invariant i7: x + y >= 1;\nloop invariant i8: x + y >= 2;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    x=x+y;\n    y=x;\n  }\n  {;\n//@ assert(y>=1);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant y >= x;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant 1 <= x;\nloop invariant 1 <= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x==1 && y==1)) return 0;\n  /*@\nloop invariant i1: 1 <= x;\nloop invariant i2: 1 <= y;\nloop invariant i3: y >= x;\nloop invariant i4: x <= y;\n*/\nwhile (unknown_bool()) {\n    x=x+y;\n    y=x;\n  }\n  {;\n//@ assert(y>=1);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= y;\nloop invariant x >= y;\nloop invariant x == y * (y + 1) / 2;\nloop invariant unknown_bool();\nloop invariant unknown_int() == 1;\nloop invariant unknown_int() == 1;\nloop invariant 0 <= y ==> unknown_bool() ==> unknown_int() == 1 ==> x >= y ==> x == y * (y + 1) / 2 ==> y >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x==1 && y==1)) return 0;\n  /*@\nloop invariant i1: 0 <= y;\nloop invariant i2: x >= y;\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    x=x+y;\n    y=x;\n  }\n  {;\n//@ assert(y>=1);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 1;\nloop invariant 1 <= y <= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x==1 && y==1)) return 0;\n  /*@\n\nloop invariant i2: 1 <= y <= x;\n*/\nwhile (unknown_bool()) {\n    x=x+y;\n    y=x;\n  }\n  {;\n//@ assert(y>=1);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100000;\nloop invariant y >= 1;\nloop invariant x >= y;\nloop invariant x <= 2 * y;\nloop invariant x <= 3 * y;\nloop invariant x <= 4 * y;\nloop invariant x <= 5 * y;\nloop invariant x <= 6 * y;\nloop invariant x <= 7 * y;\nloop invariant x <= 8 * y;\nloop invariant x <= 9 * y;\nloop invariant x <= 10 * y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x==1 && y==1)) return 0;\n  /*@\n\nloop invariant i2: y >= 1;\nloop invariant i3: x >= y;\nloop invariant i4: x <= 2 * y;\nloop invariant i5: x <= 3 * y;\nloop invariant i6: x <= 4 * y;\nloop invariant i7: x <= 5 * y;\nloop invariant i8: x <= 6 * y;\nloop invariant i9: x <= 7 * y;\nloop invariant i10: x <= 8 * y;\nloop invariant i11: x <= 9 * y;\nloop invariant i12: x <= 10 * y;\n*/\nwhile (unknown_bool()) {\n    x=x+y;\n    y=x;\n  }\n  {;\n//@ assert(y>=1);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant y >= x;\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x <= y;\nloop invariant y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x==1 && y==1)) return 0;\n  /*@\nloop invariant i1: 0 <= x;\nloop invariant i2: y >= x;\nloop invariant i3: x >= 1;\nloop invariant i4: y >= 1;\nloop invariant i5: x <= y;\n\n\n*/\nwhile (unknown_bool()) {\n    x=x+y;\n    y=x;\n  }\n  {;\n//@ assert(y>=1);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x >= y;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x - y >= 0;\nloop invariant x - y >= (y - 1) * y / 2;\nloop invariant x >= y + (y - 1) * y / 2;\nloop invariant x >= y + (y - 1) * y / 2 ==> y - 1 >= 0;\nloop invariant x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0;\nloop invariant x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1;\nloop invariant x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2;\nloop invariant x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 1;\nloop invariant x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 1;\nloop invariant x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2;\nloop invariant x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3;\nloop invariant x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3;\nloop invariant x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3 ==> x >= y + (y - 1) * y / 2 ==> y >= 4;\nloop invariant x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3 ==> x >= y + (y - 1) * y / 2 ==> y >= 4;\nloop invariant x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3 ==> x >= y + (y - 1) * y / 2 ==> y >= 4 ==> x >= y + (y - 1) * y / 2 ==> y >= 5;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x==1 && y==1)) return 0;\n  /*@\nloop invariant i1: 1 <= x;\nloop invariant i2: 1 <= y;\nloop invariant i3: x >= y;\n\nloop invariant i5: x - y >= 0;\n\n\nloop invariant i8: x >= y + (y - 1) * y / 2 ==> y - 1 >= 0;\nloop invariant i9: x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0;\nloop invariant i10: x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1;\n\nloop invariant i12: x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 1;\nloop invariant i13: x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 1;\n\nloop invariant i15: x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3;\nloop invariant i16: x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3;\nloop invariant i17: x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3 ==> x >= y + (y - 1) * y / 2 ==> y >= 4;\nloop invariant i18: x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3 ==> x >= y + (y - 1) * y / 2 ==> y >= 4;\nloop invariant i19: x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3 ==> x >= y + (y - 1) * y / 2 ==> y >= 4 ==> x >= y + (y - 1) * y / 2 ==> y >= 5;\n*/\nwhile (unknown_bool()) {\n    x=x+y;\n    y=x;\n  }\n  {;\n//@ assert(y>=1);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant y == x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x==1 && y==1)) return 0;\n  /*@\nloop invariant i1: y == x;\n*/\nwhile (unknown_bool()) {\n    x=x+y;\n    y=x;\n  }\n  {;\n//@ assert(y>=1);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x >= y;\nloop invariant y >= 1;\nloop invariant x >= 1;\nloop invariant y >= 0;\nloop invariant x <= y;\nloop invariant y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 0;\nloop invariant x <= 100000;\nloop invariant x >= y;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x==1 && y==1)) return 0;\n  /*@\nloop invariant i1: 0 <= x <= y;\nloop invariant i2: x >= y;\nloop invariant i3: y >= 1;\nloop invariant i4: x >= 1;\nloop invariant i5: y >= 0;\nloop invariant i6: x <= y;\n\n\nloop invariant i9: x >= 0;\n\n*/\nwhile (unknown_bool()) {\n    x=x+y;\n    y=x;\n  }\n  {;\n//@ assert(y>=1);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= INT_MAX;\nloop invariant 1 <= y <= INT_MAX;\nloop invariant x >= y;\nloop invariant y >= 1;\nloop invariant x >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x==1 && y==1)) return 0;\n  /*@\nloop invariant i1: 1 <= x <= INT_MAX;\nloop invariant i2: 1 <= y <= INT_MAX;\nloop invariant i3: x >= y;\nloop invariant i4: y >= 1;\nloop invariant i5: x >= 1;\n*/\nwhile (unknown_bool()) {\n    x=x+y;\n    y=x;\n  }\n  {;\n//@ assert(y>=1);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x==1 && y==1)) return 0;\n  /*@\n\n\n*/\nwhile (unknown_bool()) {\n    x=x+y;\n    y=x;\n  }\n  {;\n//@ assert(y>=1);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x >= y;\nloop invariant x >= (y + 1);\nloop invariant y >= 1;\nloop invariant y <= x;\nloop invariant x <= 100000;\nloop invariant y <= 100000;\nloop invariant x >= 1;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\nloop invariant x <= 100000;\nloop invariant y >= 1;\nloop invariant y <= 100000;\nloop invariant x >= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x==1 && y==1)) return 0;\n  /*@\nloop invariant i1: 1 <= x;\nloop invariant i2: 1 <= y;\nloop invariant i3: x >= y;\n\nloop invariant i5: y >= 1;\nloop invariant i6: y <= x;\n\n\nloop invariant i9: x >= 1;\n*/\nwhile (unknown_bool()) {\n    x=x+y;\n    y=x;\n  }\n  {;\n//@ assert(y>=1);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 26: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x==1 && y==1)) return 0;\n  /*@\nloop invariant i1: 1 <= y <= x; loop invariant x >= y + 1; loop invariant y >= 1;\nloop invariant i2: 0 <= x <= INT_MAX;\nloop invariant i3: 0 <= y <= x;\nloop invariant i4: y >= 1;\nloop invariant i5: 0 <= y <= 100000;\nloop invariant i6: x >= (1 + (y - 1) * y / 2);\nloop invariant i7: x == y;\nloop invariant i8: unknown_bool() ==> 0 <= x <= 100000;\nloop invariant i9: unknown_bool() ==> 1 <= y <= 100000;\nloop invariant i10: x >= (1 + (y - 1) * y / 2) ==> x == y;\nloop invariant i11: x == y ==> x >= (1 + (y - 1) * y / 2);\nloop invariant i12: x == y ==> 1 <= y <= 100000;\nloop invariant i13: x == y ==> 1 <= x <= 100000;\nloop invariant i14: unknown_bool() ==> x == y;\nloop invariant i15: unknown_bool() ==> x >= (1 + (y - 1) * y / 2);\nloop invariant i16: unknown_bool() ==> 1 <= x <= 100000;\nloop invariant i17: 0 <= x;\nloop invariant i18: 0 <= y;\nloop invariant i19: x >= y;\nloop invariant i20: x >= 1;\nloop invariant i21: x + y >= 0;\nloop invariant i22: x + y >= 1;\nloop invariant i23: x + y >= 2;\nloop invariant i24: x + y >= 3;\nloop invariant i25: x + y >= 4;\nloop invariant i26: x + y >= 5;\nloop invariant i27: x + y >= 6;\nloop invariant i28: x + y >= 7;\nloop invariant i29: x + y >= 8;\nloop invariant i30: x + y >= 9;\nloop invariant i31: x + y >= 10;\nloop invariant i32: x + y >= 11;\nloop invariant i33: x + y >= 12;\nloop invariant i34: x + y >= 13;\nloop invariant i35: x + y >= 14;\nloop invariant i36: x + y >= 15;\nloop invariant i37: x + y >= 16;\nloop invariant i38: x + y >= 17;\nloop invariant i39: x + y >= 18;\nloop invariant i40: x + y >= 19;\nloop invariant i41: x + y >= 20;\nloop invariant i42: x + y >= 21;\nloop invariant i43: x + y >= 22;\nloop invariant i44: x + y >= 23;\nloop invariant i45: x + y >= 24;\nloop invariant i46: x + y >= 25;\nloop invariant i47: x + y >= 26;\nloop invariant i48: x + y >= 27;\nloop invariant i49: x + y >= 28;\nloop invariant i50: x + y >= 29;\nloop invariant i51: x + y >= 30;\nloop invariant i52: x + y >= 31;\nloop invariant i53: x + y >= 32;\nloop invariant i54: x + y >= 33;\nloop invariant i55: x + y >= 34;\nloop invariant i56: x + y >= 35;\nloop invariant i57: x + y >= 36;\nloop invariant i58: x + y >= 37;\nloop invariant i59: x + y >= 38;\nloop invariant i60: x + y >= 39;\nloop invariant i61: x + y >= 40;\nloop invariant i62: x + y >= 41;\nloop invariant i63: x + y >= 42;\nloop invariant i64: x + y >= 43;\nloop invariant i65: x + y >= 44;\nloop invariant i66: x + y >= 45;\nloop invariant i67: x + y >= 46;\nloop invariant i68: x + y >= 47;\nloop invariant i69: x + y >= 48;\nloop invariant i70: x + y >= 49;\nloop invariant i71: x + y >= 50;\nloop invariant i72: x + y >= 51;\nloop invariant i73: x + y >= 52;\nloop invariant i74: x + y >= 53;\nloop invariant i75: x + y >= 54;\nloop invariant i76: x + y >= 55;\nloop invariant i77: x + y >= 56;\nloop invariant i78: x + y >= 57;\nloop invariant i79: x + y >= 58;\nloop invariant i80: x + y >= 59;\nloop invariant i81: x + y >= 60;\nloop invariant i82: x + y >= 61;\nloop invariant i83: x + y >= 62;\nloop invariant i84: x + y >= 63;\nloop invariant i85: x + y >= 64;\nloop invariant i86: x + y >= 65;\nloop invariant i87: x + y >= 66;\nloop invariant i88: x + y >= 67;\nloop invariant i89: x + y >= 68;\nloop invariant i90: x + y >= 69;\nloop invariant i91: x + y >= 70;\nloop invariant i92: x + y >= 71;\nloop invariant i93: x + y >= 72;\nloop invariant i94: x + y >= 73;\nloop invariant i95: x + y >= 74;\nloop invariant i96: x + y >= 75;\nloop invariant i97: x + y >= 76;\nloop invariant i98: x + y >= 77;\nloop invariant i99: x + y >= 78;\nloop invariant i100: x + y >= 79;\nloop invariant i101: x + y >= 80;\nloop invariant i102: x + y >= 81;\nloop invariant i103: x + y >= 82;\nloop invariant i104: x + y >= 83;\nloop invariant i105: x + y >= 84;\nloop invariant i106: x + y >= 85;\nloop invariant i107: x + y >= 86;\nloop invariant i108: x + y >= 87;\nloop invariant i109: x + y >= 88;\nloop invariant i110: x + y >= 89;\nloop invariant i111: x + y >= 90;\nloop invariant i112: x + y >= 91;\nloop invariant i113: x + y >= 92;\nloop invariant i114: x + y >= 93;\nloop invariant i115: x + y >= 94;\nloop invariant i116: x + y >= 95;\nloop invariant i117: x + y >= 96;\nloop invariant i118: 1 <= x;\nloop invariant i119: 1 <= y;\nloop invariant i120: y >= x;\nloop invariant i121: x <= y;\nloop invariant i122: x == y * (y + 1) / 2;\nloop invariant i123: unknown_bool();\nloop invariant i124: unknown_int() == 1;\nloop invariant i125: 0 <= y ==> unknown_bool() ==> unknown_int() == 1 ==> x >= y ==> x == y * (y + 1) / 2 ==> y >= 1;\nloop invariant i126: 0 <= x <= 1;\nloop invariant i127: 1 <= y <= x;\nloop invariant i128: 0 <= x <= 100000;\nloop invariant i129: x <= 2 * y;\nloop invariant i130: x <= 3 * y;\nloop invariant i131: x <= 4 * y;\nloop invariant i132: x <= 5 * y;\nloop invariant i133: x <= 6 * y;\nloop invariant i134: x <= 7 * y;\nloop invariant i135: x <= 8 * y;\nloop invariant i136: x <= 9 * y;\nloop invariant i137: x <= 10 * y;\nloop invariant i138: y <= 100000;\nloop invariant i139: x - y >= 0;\nloop invariant i140: x - y >= (y - 1) * y / 2;\nloop invariant i141: x >= y + (y - 1) * y / 2;\nloop invariant i142: x >= y + (y - 1) * y / 2 ==> y - 1 >= 0;\nloop invariant i143: x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0;\nloop invariant i144: x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1;\nloop invariant i145: x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2;\nloop invariant i146: x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 1;\nloop invariant i147: x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 1;\nloop invariant i148: x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2;\nloop invariant i149: x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3;\nloop invariant i150: x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3;\nloop invariant i151: x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3 ==> x >= y + (y - 1) * y / 2 ==> y >= 4;\nloop invariant i152: x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3 ==> x >= y + (y - 1) * y / 2 ==> y >= 4;\nloop invariant i153: x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3 ==> x >= y + (y - 1) * y / 2 ==> y >= 4 ==> x >= y + (y - 1) * y / 2 ==> y >= 5;\nloop invariant i154: y == x;\nloop invariant i155: 0 <= x <= y;\nloop invariant i156: y >= 0;\nloop invariant i157: x >= 0;\nloop invariant i158: x <= 100000;\nloop invariant i159: 1 <= x <= INT_MAX;\nloop invariant i160: 1 <= y <= INT_MAX;\nloop invariant i161: x >= (y + 1);\nloop invariant i162: y <= x;\n*/\nwhile (unknown_bool()) {\n    x=x+y;\n    y=x;\n  }\n  {;\n//@ assert(y>=1);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 10,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  \n  if (!(x==1 && y==1)) return 0;\n  /*@\nloop invariant i1: 1 <= y <= x; loop invariant x >= y + 1; loop invariant y >= 1;\nloop invariant i2: 0 <= x <= INT_MAX;\nloop invariant i3: 0 <= y <= x;\nloop invariant i4: y >= 1;\nloop invariant i5: 0 <= y <= 100000;\nloop invariant i6: x >= (1 + (y - 1) * y / 2);\nloop invariant i7: x == y;\n\n\nloop invariant i10: x >= (1 + (y - 1) * y / 2) ==> x == y;\nloop invariant i11: x == y ==> x >= (1 + (y - 1) * y / 2);\nloop invariant i12: x == y ==> 1 <= y <= 100000;\nloop invariant i13: x == y ==> 1 <= x <= 100000;\n\n\n\nloop invariant i17: 0 <= x;\nloop invariant i18: 0 <= y;\nloop invariant i19: x >= y;\nloop invariant i20: x >= 1;\nloop invariant i21: x + y >= 0;\nloop invariant i22: x + y >= 1;\nloop invariant i23: x + y >= 2;\nloop invariant i24: x + y >= 3;\nloop invariant i25: x + y >= 4;\nloop invariant i26: x + y >= 5;\nloop invariant i27: x + y >= 6;\nloop invariant i28: x + y >= 7;\nloop invariant i29: x + y >= 8;\nloop invariant i30: x + y >= 9;\nloop invariant i31: x + y >= 10;\nloop invariant i32: x + y >= 11;\nloop invariant i33: x + y >= 12;\nloop invariant i34: x + y >= 13;\nloop invariant i35: x + y >= 14;\nloop invariant i36: x + y >= 15;\nloop invariant i37: x + y >= 16;\nloop invariant i38: x + y >= 17;\nloop invariant i39: x + y >= 18;\nloop invariant i40: x + y >= 19;\nloop invariant i41: x + y >= 20;\nloop invariant i42: x + y >= 21;\nloop invariant i43: x + y >= 22;\nloop invariant i44: x + y >= 23;\nloop invariant i45: x + y >= 24;\nloop invariant i46: x + y >= 25;\nloop invariant i47: x + y >= 26;\nloop invariant i48: x + y >= 27;\nloop invariant i49: x + y >= 28;\nloop invariant i50: x + y >= 29;\nloop invariant i51: x + y >= 30;\nloop invariant i52: x + y >= 31;\nloop invariant i53: x + y >= 32;\nloop invariant i54: x + y >= 33;\nloop invariant i55: x + y >= 34;\nloop invariant i56: x + y >= 35;\nloop invariant i57: x + y >= 36;\nloop invariant i58: x + y >= 37;\nloop invariant i59: x + y >= 38;\nloop invariant i60: x + y >= 39;\nloop invariant i61: x + y >= 40;\nloop invariant i62: x + y >= 41;\nloop invariant i63: x + y >= 42;\nloop invariant i64: x + y >= 43;\nloop invariant i65: x + y >= 44;\nloop invariant i66: x + y >= 45;\nloop invariant i67: x + y >= 46;\nloop invariant i68: x + y >= 47;\nloop invariant i69: x + y >= 48;\nloop invariant i70: x + y >= 49;\nloop invariant i71: x + y >= 50;\nloop invariant i72: x + y >= 51;\nloop invariant i73: x + y >= 52;\nloop invariant i74: x + y >= 53;\nloop invariant i75: x + y >= 54;\nloop invariant i76: x + y >= 55;\nloop invariant i77: x + y >= 56;\nloop invariant i78: x + y >= 57;\nloop invariant i79: x + y >= 58;\nloop invariant i80: x + y >= 59;\nloop invariant i81: x + y >= 60;\nloop invariant i82: x + y >= 61;\nloop invariant i83: x + y >= 62;\nloop invariant i84: x + y >= 63;\nloop invariant i85: x + y >= 64;\nloop invariant i86: x + y >= 65;\nloop invariant i87: x + y >= 66;\nloop invariant i88: x + y >= 67;\nloop invariant i89: x + y >= 68;\nloop invariant i90: x + y >= 69;\nloop invariant i91: x + y >= 70;\nloop invariant i92: x + y >= 71;\nloop invariant i93: x + y >= 72;\nloop invariant i94: x + y >= 73;\nloop invariant i95: x + y >= 74;\nloop invariant i96: x + y >= 75;\nloop invariant i97: x + y >= 76;\nloop invariant i98: x + y >= 77;\nloop invariant i99: x + y >= 78;\nloop invariant i100: x + y >= 79;\nloop invariant i101: x + y >= 80;\nloop invariant i102: x + y >= 81;\nloop invariant i103: x + y >= 82;\nloop invariant i104: x + y >= 83;\nloop invariant i105: x + y >= 84;\nloop invariant i106: x + y >= 85;\nloop invariant i107: x + y >= 86;\nloop invariant i108: x + y >= 87;\nloop invariant i109: x + y >= 88;\nloop invariant i110: x + y >= 89;\nloop invariant i111: x + y >= 90;\nloop invariant i112: x + y >= 91;\nloop invariant i113: x + y >= 92;\nloop invariant i114: x + y >= 93;\nloop invariant i115: x + y >= 94;\nloop invariant i116: x + y >= 95;\nloop invariant i117: x + y >= 96;\nloop invariant i118: 1 <= x;\nloop invariant i119: 1 <= y;\nloop invariant i120: y >= x;\nloop invariant i121: x <= y;\nloop invariant i122: x == y * (y + 1) / 2;\n\n\n\nloop invariant i126: 0 <= x <= 1;\nloop invariant i127: 1 <= y <= x;\nloop invariant i128: 0 <= x <= 100000;\nloop invariant i129: x <= 2 * y;\nloop invariant i130: x <= 3 * y;\nloop invariant i131: x <= 4 * y;\nloop invariant i132: x <= 5 * y;\nloop invariant i133: x <= 6 * y;\nloop invariant i134: x <= 7 * y;\nloop invariant i135: x <= 8 * y;\nloop invariant i136: x <= 9 * y;\nloop invariant i137: x <= 10 * y;\nloop invariant i138: y <= 100000;\nloop invariant i139: x - y >= 0;\nloop invariant i140: x - y >= (y - 1) * y / 2;\nloop invariant i141: x >= y + (y - 1) * y / 2;\nloop invariant i142: x >= y + (y - 1) * y / 2 ==> y - 1 >= 0;\nloop invariant i143: x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0;\nloop invariant i144: x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1;\nloop invariant i145: x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2;\nloop invariant i146: x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 1;\nloop invariant i147: x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 1;\nloop invariant i148: x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2;\nloop invariant i149: x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3;\nloop invariant i150: x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3;\nloop invariant i151: x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3 ==> x >= y + (y - 1) * y / 2 ==> y >= 4;\nloop invariant i152: x >= y + (y - 1) * y / 2 ==> y - 1 >= 0 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3 ==> x >= y + (y - 1) * y / 2 ==> y >= 4;\nloop invariant i153: x >= y + (y - 1) * y / 2 ==> (y - 1) * y / 2 >= 0 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 1 ==> x >= y + (y - 1) * y / 2 ==> y >= 2 ==> x >= y + (y - 1) * y / 2 ==> y >= 3 ==> x >= y + (y - 1) * y / 2 ==> y >= 4 ==> x >= y + (y - 1) * y / 2 ==> y >= 5;\nloop invariant i154: y == x;\nloop invariant i155: 0 <= x <= y;\nloop invariant i156: y >= 0;\nloop invariant i157: x >= 0;\nloop invariant i158: x <= 100000;\nloop invariant i159: 1 <= x <= INT_MAX;\nloop invariant i160: 1 <= y <= INT_MAX;\nloop invariant i161: x >= (y + 1);\nloop invariant i162: y <= x;\n*/\nwhile (unknown_bool()) {\n    x=x+y;\n    y=x;\n  }\n  {;\n//@ assert(y>=1);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c"
        ],
        "skipped": [],
        "total": 123,
        "success_count": 105,
        "failure_count": 18,
        "success_rate": 0.8536585365853658
    }
}