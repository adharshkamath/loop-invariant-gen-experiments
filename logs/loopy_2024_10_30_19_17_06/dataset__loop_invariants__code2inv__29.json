{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/29.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  while ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= n - (n - x);\nloop invariant x <= n - (n - x);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n; loop invariant x >= 0; loop invariant x <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant x <= n;\nloop invariant x == n - (n - x);\nloop invariant x >= n - n;\nloop invariant x <= n - 0;\nloop invariant x >= 0;\nloop invariant x == n - n + n;\nloop invariant x == n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant n >= 0 ==> (x == 0) ==> (x >= 0);\nloop invariant n >= 0 ==> (x == 0) ==> (x <= n);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant x >= (n - (n % 2));\nloop invariant x <= (n - (n % 2) + 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x == n - (1 + (n - x - 1) * (n - x) / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant if (n >= 0) ==> (x == (n - i));\nloop invariant if (n < 0) ==> (x == i);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x = n - (y - 1);\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x == n;\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\n*/\n```",
            "```\n/*@\nloop invariant n >= x >= 0;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= n - (n - x);\nloop invariant x <= n - (n - x);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\nloop invariant x <= n - 1;\nloop invariant x >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\nloop invariant i2: x >= n - (n - x);\nloop invariant i3: x <= n - (n - x);\nloop invariant i4: x <= n;\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n; loop invariant x >= 0; loop invariant x <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant x <= n;\nloop invariant x == n - (n - x);\nloop invariant x >= n - n;\nloop invariant x <= n - 0;\nloop invariant x >= 0;\nloop invariant x == n - n + n;\nloop invariant x == n;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n - 0;\nloop invariant x <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\nloop invariant i2: x <= n;\nloop invariant i3: x == n - (n - x);\n\nloop invariant i5: x <= n - 0;\n\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant n >= 0 ==> (x == 0) ==> (x >= 0);\nloop invariant n >= 0 ==> (x == 0) ==> (x <= n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\nloop invariant i2: n >= 0 ==> (x == 0) ==> (x >= 0);\nloop invariant i3: n >= 0 ==> (x == 0) ==> (x <= n);\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= n;\nloop invariant x >= (n - (n % 2));\nloop invariant x <= (n - (n % 2) + 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\nloop invariant i3: x <= (n - (n % 2) + 1);\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x == n - (1 + (n - x - 1) * (n - x) / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant if (n >= 0) ==> (x == (n - i));\nloop invariant if (n < 0) ==> (x == i);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\nloop invariant x == n - (y - 1);\nloop invariant x <= n;\nloop invariant x >= 0;\nloop invariant x == n;\nloop invariant x == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\nloop invariant i3: x <= n;\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\nloop invariant i2: x <= n;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x = n - (y - 1);\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\nloop invariant i3: x <= n;\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant x >= 0;\nloop invariant x <= n;\nloop invariant x == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n\nloop invariant i3: x <= n;\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\nloop invariant n >= 0;\nloop invariant n >= x;\nloop invariant x >= 0;\nloop invariant n >= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\nloop invariant i2: n >= x;\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant n >= x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 36: unexpected token '('",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\nloop invariant i1: 0 <= x <= n;\nloop invariant i2: x >= n - (n - x);\nloop invariant i3: x <= n - (n - x);\nloop invariant i4: x <= n;\nloop invariant i5: x >= 0;\nloop invariant i6: x >= 1;\nloop invariant i7: x <= n - 1;\nloop invariant i8: 0 <= x <= n; loop invariant x >= 0; loop invariant x <= n;\nloop invariant i9: 0 <= x;\nloop invariant i10: x == n - (n - x);\nloop invariant i11: x >= n - n;\nloop invariant i12: x <= n - 0;\nloop invariant i13: x == n - n + n;\nloop invariant i14: x == n;\nloop invariant i15: x == n - 0;\nloop invariant i16: n >= 0 ==> (x == 0) ==> (x >= 0);\nloop invariant i17: n >= 0 ==> (x == 0) ==> (x <= n);\nloop invariant i18: 1 <= x <= n;\nloop invariant i19: x >= (n - (n % 2));\nloop invariant i20: x <= (n - (n % 2) + 1);\nloop invariant i21: x == n - (1 + (n - x - 1) * (n - x) / 2);\nloop invariant i22: if (n >= 0) ==> (x == (n - i));\nloop invariant i23: if (n < 0) ==> (x == i);\nloop invariant i24: x == n - (y - 1);\nloop invariant i25: x == 0;\nloop invariant i26: x = n - (y - 1);\nloop invariant i27: n >= x;\nloop invariant i28: n >= 0;\nloop invariant i29: n >= x >= 0;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 13,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int n;\n  int x;\n  \n  (x = n);\n  \n  /*@\n\nloop invariant i2: x >= n - (n - x);\nloop invariant i3: x <= n - (n - x);\nloop invariant i4: x <= n;\n\n\n\n\n\nloop invariant i10: x == n - (n - x);\n\nloop invariant i12: x <= n - 0;\n\n\n\nloop invariant i16: n >= 0 ==> (x == 0) ==> (x >= 0);\nloop invariant i17: n >= 0 ==> (x == 0) ==> (x <= n);\n\n\nloop invariant i20: x <= (n - (n % 2) + 1);\n\n\n\n\n\n\nloop invariant i27: n >= x;\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \nif ( (n >= 0) )\n{;\n//@ assert( (x == 0) );\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c"
        ],
        "skipped": [],
        "total": 22,
        "success_count": 17,
        "failure_count": 5,
        "success_rate": 0.7727272727272727
    }
}