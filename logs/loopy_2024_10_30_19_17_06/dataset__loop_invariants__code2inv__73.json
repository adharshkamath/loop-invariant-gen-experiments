{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/73.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  while (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= y <= 127;\nloop invariant z >= (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 127;\nloop invariant z >= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z = (36 * y) + c;\nloop invariant (z >= 0) ==> (c < 36);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= 4608;\nloop invariant c == 0;\nloop invariant z == (36 * y);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 36 * y;\nloop invariant z < 4608;\nloop invariant z < 0 ==> c >= 36;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 432;\nloop invariant z <= 4608;\nloop invariant c + 36 * y == z;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c >= 36 ==> z >= 4608;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z >= (36 * y);\nloop invariant z <= (z + 1);\n*/\n```",
            "```\n/*@\nloop invariant 1 <= c <= 36;\nloop invariant (z = (36 * y));\nloop invariant (z >= (36 * y));\nloop invariant (c >= y);\nloop invariant (c <= 36);\nloop invariant (z >= 0);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 127;\nloop invariant 36 * y <= z <= 4607;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 36 ==> z == 4608;\nloop invariant c >= 36 ==> z >= 4608;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= y <= 127;\nloop invariant 0 <= z <= 4608;\nloop invariant (z == 36 * y) => (c == 0);\nloop invariant (z < 4608) => (c < 36);\nloop invariant (z >= 4608) => (c >= 36);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 36 * y <= z <= (36 * y) + c;\nloop invariant 0 <= y;\nloop invariant y >= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= 4608;\nloop invariant c <= z;\nloop invariant c <= 36;\nloop invariant z <= 4608;\nloop invariant c <= z;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z >= (36 * y);\nloop invariant z <= (36 * y) + 36;\nloop invariant (z - (36 * y)) >= c;\nloop invariant (z - (36 * y)) <= c;\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c >= 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (z < 4608);\nloop invariant (c >= 36) ==> (z < 4608);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z >= (36 * y);\nloop invariant z <= (36 * y) + 36;\nloop invariant c <= (z - (36 * y)) / 36;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;loop invariant 0 <= z <= 4608;loop invariant z == (36 * y) + c;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 127;\nloop invariant z >= (36 * y);\nloop invariant c >= 0;\nloop invariant c <= 36;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: z >= (36 * y);\nloop invariant i3: c >= 0;\nloop invariant i4: c <= 36;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 127;\nloop invariant z >= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z = (36 * y) + c;\nloop invariant (z >= 0) ==> (c < 36);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\n\nloop invariant i3: c >= 0;\nloop invariant i4: c <= 36;\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= 4608;\nloop invariant c == 0;\nloop invariant z == (36 * y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 36 * y;\nloop invariant z < 4608;\nloop invariant z < 0 ==> c >= 36;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\nloop invariant i2: y >= 0;\nloop invariant i3: y >= 127;\nloop invariant i4: z >= 36 * y;\n\nloop invariant i6: z < 0 ==> c >= 36;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant z >= 432;\nloop invariant z <= 4608;\nloop invariant c + 36 * y == z;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c >= 36 ==> z >= 4608;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\nloop invariant i2: y >= 0;\nloop invariant i3: y >= 127;\nloop invariant i4: z >= 432;\n\nloop invariant i6: c + 36 * y == z;\n\nloop invariant i8: c >= 36 ==> z >= 4608;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z >= (36 * y);\nloop invariant z <= (z + 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\nloop invariant i2: z >= (36 * y);\nloop invariant i3: z <= (z + 1);\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= c <= 36;\nloop invariant (z = (36 * y));\nloop invariant (z >= (36 * y));\nloop invariant (c >= y);\nloop invariant (c <= 36);\nloop invariant (z >= 0);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\nloop invariant (z <= 4608);\nloop invariant (c <= 36);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\n\nloop invariant i3: (z >= (36 * y));\n\nloop invariant i5: (c <= 36);\nloop invariant i6: (z >= 0);\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 127;\nloop invariant 36 * y <= z <= 4607;\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 36 ==> z == 4608;\nloop invariant c >= 36 ==> z >= 4608;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z >= 36 * y;\nloop invariant c < 36 ==> z < 4608;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\n\n\n\n\n\nloop invariant i7: c < 36 ==> z >= 36 * y;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= y <= 127;\nloop invariant 0 <= z <= 4608;\nloop invariant (z == 36 * y) => (c == 0);\nloop invariant (z < 4608) => (c < 36);\nloop invariant (z >= 4608) => (c >= 36);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\n\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 36 * y <= z <= (36 * y) + c;\nloop invariant 0 <= y;\nloop invariant y >= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= (36 * y) + c;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 36 * y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\nloop invariant i2: 36 * y <= z <= (36 * y) + c;\nloop invariant i3: 0 <= y;\nloop invariant i4: y >= 127;\nloop invariant i5: c >= 0;\nloop invariant i6: c <= 36;\nloop invariant i7: z >= 36 * y;\nloop invariant i8: z <= (36 * y) + c;\nloop invariant i9: y >= 0;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= z <= 4608;\nloop invariant c <= z;\nloop invariant c <= 36;\nloop invariant z <= 4608;\nloop invariant c <= z;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\nloop invariant i3: c <= z;\nloop invariant i4: c <= 36;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z >= (36 * y);\nloop invariant z <= (36 * y) + 36;\nloop invariant (z - (36 * y)) >= c;\nloop invariant (z - (36 * y)) <= c;\nloop invariant (c < 36) ==> (z >= 0);\nloop invariant (c >= 36) ==> (z >= 0);\nloop invariant (c < 36) ==> (z < 4608);\nloop invariant (c >= 36) ==> (z < 4608);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\nloop invariant i2: z >= (36 * y);\nloop invariant i3: z <= (36 * y) + 36;\nloop invariant i4: (z - (36 * y)) >= c;\nloop invariant i5: (z - (36 * y)) <= c;\nloop invariant i6: (c < 36) ==> (z >= 0);\nloop invariant i7: (c >= 36) ==> (z >= 0);\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z >= (36 * y);\nloop invariant z <= (36 * y) + 36;\nloop invariant c <= (z - (36 * y)) / 36;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\nloop invariant i2: z >= (36 * y);\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant (c * y) <= z <= (((c + 36) * y) - 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;loop invariant 0 <= z <= 4608;loop invariant z == (36 * y) + c;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;loop invariant 0 <= z <= 4608;loop invariant z == (36 * y) + c;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 26: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= y <= 127;\nloop invariant i2: z >= (36 * y);\nloop invariant i3: c >= 0;\nloop invariant i4: c <= 36;\nloop invariant i5: z >= 4608;\nloop invariant i6: z = (36 * y) + c;\nloop invariant i7: (z >= 0) ==> (c < 36);\nloop invariant i8: 0 <= c <= 36;\nloop invariant i9: 0 <= z <= 4608;\nloop invariant i10: c == 0;\nloop invariant i11: z == (36 * y);\nloop invariant i12: y >= 0;\nloop invariant i13: y >= 127;\nloop invariant i14: z >= 36 * y;\nloop invariant i15: z < 4608;\nloop invariant i16: z < 0 ==> c >= 36;\nloop invariant i17: z >= 432;\nloop invariant i18: z <= 4608;\nloop invariant i19: c + 36 * y == z;\nloop invariant i20: c < 36 ==> z < 4608;\nloop invariant i21: c >= 36 ==> z >= 4608;\nloop invariant i22: z <= (z + 1);\nloop invariant i23: 1 <= c <= 36;\nloop invariant i24: (z = (36 * y));\nloop invariant i25: (z >= (36 * y));\nloop invariant i26: (c >= y);\nloop invariant i27: (c <= 36);\nloop invariant i28: (z >= 0);\nloop invariant i29: (z <= 4608);\nloop invariant i30: 36 * y <= z <= 4607;\nloop invariant i31: c == 0 ==> z == 36 * y;\nloop invariant i32: c == 36 ==> z == 4608;\nloop invariant i33: c < 36 ==> z >= 36 * y;\nloop invariant i34: (z == 36 * y) => (c == 0);\nloop invariant i35: (z < 4608) => (c < 36);\nloop invariant i36: (z >= 4608) => (c >= 36);\nloop invariant i37: 36 * y <= z <= (36 * y) + c;\nloop invariant i38: 0 <= y;\nloop invariant i39: z <= (36 * y) + c;\nloop invariant i40: y <= 127;\nloop invariant i41: c <= z;\nloop invariant i42: z <= (36 * y) + 36;\nloop invariant i43: (z - (36 * y)) >= c;\nloop invariant i44: (z - (36 * y)) <= c;\nloop invariant i45: (c < 36) ==> (z >= 0);\nloop invariant i46: (c >= 36) ==> (z >= 0);\nloop invariant i47: (c < 36) ==> (z < 4608);\nloop invariant i48: (c >= 36) ==> (z < 4608);\nloop invariant i49: c <= (z - (36 * y)) / 36;\nloop invariant i50: (c * y) <= z <= (((c + 36) * y) - 1);\nloop invariant i51: 0 <= c <= 36;loop invariant 0 <= z <= 4608;loop invariant z == (36 * y) + c;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 16,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: z >= (36 * y);\nloop invariant i3: c >= 0;\nloop invariant i4: c <= 36;\n\n\n\nloop invariant i8: 0 <= c <= 36;\n\n\n\nloop invariant i12: y >= 0;\nloop invariant i13: y >= 127;\nloop invariant i14: z >= 36 * y;\n\nloop invariant i16: z < 0 ==> c >= 36;\nloop invariant i17: z >= 432;\n\nloop invariant i19: c + 36 * y == z;\n\nloop invariant i21: c >= 36 ==> z >= 4608;\nloop invariant i22: z <= (z + 1);\n\n\nloop invariant i25: (z >= (36 * y));\n\nloop invariant i27: (c <= 36);\nloop invariant i28: (z >= 0);\n\n\nloop invariant i31: c == 0 ==> z == 36 * y;\nloop invariant i32: c == 36 ==> z == 4608;\nloop invariant i33: c < 36 ==> z >= 36 * y;\n\n\n\nloop invariant i37: 36 * y <= z <= (36 * y) + c;\nloop invariant i38: 0 <= y;\nloop invariant i39: z <= (36 * y) + c;\n\nloop invariant i41: c <= z;\nloop invariant i42: z <= (36 * y) + 36;\nloop invariant i43: (z - (36 * y)) >= c;\nloop invariant i44: (z - (36 * y)) <= c;\nloop invariant i45: (c < 36) ==> (z >= 0);\nloop invariant i46: (c >= 36) ==> (z >= 0);\n\n\n\n\nloop invariant i51: 0 <= c <= 36;loop invariant 0 <= z <= 4608;loop invariant z == (36 * y) + c;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c"
        ],
        "skipped": [],
        "total": 61,
        "success_count": 50,
        "failure_count": 11,
        "success_rate": 0.819672131147541
    }
}