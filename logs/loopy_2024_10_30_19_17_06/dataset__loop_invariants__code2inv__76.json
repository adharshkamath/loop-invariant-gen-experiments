{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/76.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  while (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant c >= 0;\nloop invariant c <= 35;\nloop invariant z >= 36 * y;\nloop invariant z <= 36 * y + c;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + 36;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant 1 <= z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z == (36 * y + c);\nloop invariant c == (y * (y - 1) * 0.5 + y);\nloop invariant z >= 36 * y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\n*/\n```",
            "```\n/*@\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 4608;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y >= 127;\nloop invariant c == 0 ==> c == 0;\nloop invariant c != 0 ==> c >= 1;\nloop invariant c != 0 ==> c <= 36;\nloop invariant c != 0 ==> z >= 1;\nloop invariant c != 0 ==> z <= 4608;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= 4608;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c >= 36 ==> c >= 36 && z >= 4608;\nloop invariant c >= 36 ==> c >= 36 && z >= 4608;\n*/\n```",
            "```\n/*@\nloop invariant c = c + 1 ==> c >= 0;\nloop invariant z = z + 1 ==> z >= 0;\nloop invariant c = c + 1 ==> c <= 36;\nloop invariant z = z + 1 ==> z <= 4608;\nloop invariant unknown() ==> z = z + 1;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1;\nloop invariant c = c + 1 ==> unknown() ==> c = c + 1;\nloop invariant c = c + 1 ==> unknown() ==> z >= 0;\nloop invariant c = c + 1 ==> unknown() ==> z <= 4608;\nloop invariant c = c + 1 ==> unknown() ==> c >= 0;\nloop invariant c = c + 1 ==> unknown() ==> c <= 36;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1 ==> z <= 4608;\nloop invariant c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0;\nloop invariant c = c + 1 ==> unknown() ==> c = c + 1 ==> c <= 36;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608;\nloop invariant c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0 ==> c <= 36;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608 ==> c >= 0;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608 ==> c <= 36;\nloop invariant c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0 ==> c <= 36 ==> z >= 0;\nloop invariant c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0 ==> c <= 36 ==> z <= 4608;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608 ==> c >= 0 ==> c <= 36 ==> z >= 0;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608 ==> c >= 0 ==> c <= 36 ==> z <= 4608;\nloop invariant c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0 ==> c <= 36 ==> z >= 0 ==> z <= 4608;\nloop invariant c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0 ==> c <= 36 ==> z >= 0 ==> z <= 4608 ==> z >= 0;\nloop invariant c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0 ==> c <= 36 ==> z >= 0 ==> z <= 4608 ==> z <= 4608;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608 ==> c >= 0 ==> c <= 36 ==> z >= 0 ==> z <= 4608;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608 ==> c >= 0 ==> c <= 36 ==> z >= 0 ==> z <= 4608 ==> z >= 0;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608 ==> c >= 0 ==> c <= 36 ==> z >= 0 ==> z <= 4608 ==> z <= 4608;\nloop invariant c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0 ==> c <= 36 ==> z >= 0 ==> z <= 4608 ==> z >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z = 36 * y + c;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant y = z / 36;\n*/\n```",
            "```\n/*@\nloop invariant 0 < c <= 36;\nloop invariant 1 < y <= 127;\nloop invariant 36 < z < 4608;\nloop invariant z == 36 * y + c;\nloop invariant c == z - 36 * y;\nloop invariant y == (z - c) / 36;\nloop invariant z % 36 == c;\nloop invariant c % 36 == z % 36;\nloop invariant z % 36 == c % 36;\nloop invariant z % 36 == 0;\nloop invariant c % 36 == 0;\nloop invariant c % 36 == z % 36;\nloop invariant c == z % 36;\nloop invariant z % 36 == c % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant c == z % 36;\nloop invariant c == z % 36;\nloop invariant c == z % 36;\nloop invariant c == z % 36;\nloop invariant c == z % 36;\nloop invariant c == z % 36;\nloop invariant c == z % 36;\nloop invariant c == z % 36;\nloop invariant c == z % 36;\nloop invariant c == z % 36;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= z;\nloop invariant 0 <= c;\nloop invariant c <= 36;\nloop invariant z <= 4608;\n*/\n```",
            "```\n/*@\nloop invariant 127 <= y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 4608;\nloop invariant z <= 4608;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= y <= 127;\nloop invariant 36 * y <= z <= 36 * y + 36;\nloop invariant 36 * y + c <= z <= 36 * y + (36 * c);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant y >= 0 ==> c >= 0;\nloop invariant y >= 0 ==> c <= 36;\nloop invariant y >= 0 ==> z >= 0;\nloop invariant y >= 0 ==> z <= 4608;\nloop invariant c >= 36 ==> z >= 4608;\nloop invariant c >= 36 ==> z <= 4608;\nloop invariant z >= 4608 ==> c >= 36;\nloop invariant z >= 4608 ==> c <= 36;\nloop invariant z <= 0 ==> c >= 0;\nloop invariant z <= 0 ==> c <= 36;\nloop invariant z <= 0 ==> y >= 0;\nloop invariant z <= 0 ==> y <= 127;\nloop invariant z <= 0 ==> z >= 0;\nloop invariant z <= 0 ==> z <= 4608;\nloop invariant z >= 4608 ==> c >= 36;\nloop invariant z >= 4608 ==> c <= 36;\nloop invariant z >= 4608 ==> y >= 0;\nloop invariant z >= 4608 ==> y <= 127;\nloop invariant z >= 4608 ==> z >= 0;\nloop invariant z >= 4608 ==> z <= 4608;\nloop invariant c >= 0 ==> z >= 0;\nloop invariant c >= 0 ==> z <= 4608;\nloop invariant c >= 0 ==> y >= 0;\nloop invariant c >= 0 ==> y <= 127;\nloop invariant c >= 0 ==> z >= 0;\nloop invariant c >= 0 ==> z <= 4608;\nloop invariant c <= 36 ==> z >= 0;\nloop invariant c <= 36 ==> z <= 4608;\nloop invariant c <= 36 ==> y >= 0;\nloop invariant c <= 36 ==> y <= 127;\nloop invariant c <= 36 ==> z >= 0;\nloop invariant c <= 36 ==> z <= 4608;\nloop invariant y >= 0 ==> z >= 0;\nloop invariant y >= 0 ==> z <= 4608;\nloop invariant y >= 0 ==> y >= 0;\nloop invariant y >= 0 ==> y <= 127;\nloop invariant y >= 0 ==> z >= 0;\nloop invariant y >= 0 ==> z <= 4608;\nloop invariant y <= 127 ==> z >= 0;\nloop invariant y <= 127 ==> z <= 4608;\nloop invariant y <= 127 ==> y >= 0;\nloop invariant y <= 127 ==> y <= 127;\nloop invariant y <= 127 ==> z >= 0;\nloop invariant y <= 127 ==> z <= 4608;\nloop invariant z >= 0 ==> z >= 0;\nloop invariant z >= 0 ==> z <= 4608;\nloop invariant z >= 0 ==> y >= 0;\nloop invariant z >= 0 ==> y <= 127;\nloop invariant z >= 0 ==> z >= 0;\nloop invariant z >= 0 ==> z <= 4608;\nloop invariant z <= 4608 ==> c >= 0;\nloop invariant z <= 4608 ==> c <= 36;\nloop invariant z <= 4608 ==> y >= 0;\nloop invariant z <= 4608 ==> y <= 127;\nloop invariant z <= 4608 ==> z >= 0;\nloop invariant z <= 4608 ==> z <= 4608;\nloop invariant z >= 0 ==> c >= 0;\nloop invariant z >= 0 ==> c <= 36;\nloop invariant z >= 0 ==> y >= 0;\nloop invariant z >= 0 ==> y <= 127;\nloop invariant z >= 0 ==> z >= 0;\nloop invariant z >= 0 ==> z <= 4608;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x1 <= 100000;\nloop invariant 1 <= x2 <= 100000;\nloop invariant 1 <= x3 <= 100000;\nloop invariant 1 <= y <= 100000;\nloop invariant 1 <= z <= 100000;\nloop invariant x1 = x2 = x3;\nloop invariant x1 = x2 + x3;\nloop invariant x2 = x3;\nloop invariant x1 = x2;\nloop invariant x1 = 1;\nloop invariant x2 = 1;\nloop invariant x3 = 1;\nloop invariant y = 1;\nloop invariant z = 36;\nloop invariant c = 0;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant c >= 0;\nloop invariant c <= 35;\nloop invariant z >= 36 * y;\nloop invariant z <= 36 * y + c;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: c >= 0;\n\nloop invariant i3: z >= 36 * y;\nloop invariant i4: z <= 36 * y + c;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + 36;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\nloop invariant c <= 35;\nloop invariant z >= 36 * y + c;\nloop invariant z < 36 * y + c + 1;\nloop invariant c < 36;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: z >= 36 * y + c;\n\n\n\nloop invariant i6: z < 36 * y + c + 1;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\nloop invariant c == (36 * y) + c;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\nloop invariant i2: z == (36 * y) + c;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant 1 <= z <= 4608;\nloop invariant c >= 0;\nloop invariant c <= 36;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: c >= 0;\nloop invariant i3: c <= 36;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z == (36 * y + c);\nloop invariant c == (y * (y - 1) * 0.5 + y);\nloop invariant z >= 36 * y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\nloop invariant i2: z == (36 * y + c);\n\nloop invariant i4: z >= 36 * y;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant c == 0 ==> z == 36 * y;\nloop invariant c == 0 ==> z >= 0;\nloop invariant c == 0 ==> z <= 4608;\nloop invariant c == 0 ==> y >= 0;\nloop invariant c == 0 ==> y >= 127;\nloop invariant c == 0 ==> c == 0;\nloop invariant c != 0 ==> c >= 1;\nloop invariant c != 0 ==> c <= 36;\nloop invariant c != 0 ==> z >= 1;\nloop invariant c != 0 ==> z <= 4608;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: c == 0 ==> z == 36 * y;\nloop invariant i2: c == 0 ==> z >= 0;\n\nloop invariant i4: c == 0 ==> y >= 0;\nloop invariant i5: c == 0 ==> y >= 127;\nloop invariant i6: c == 0 ==> c == 0;\nloop invariant i7: c != 0 ==> c >= 1;\nloop invariant i8: c != 0 ==> c <= 36;\nloop invariant i9: c != 0 ==> z >= 1;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z >= 36 * y;\nloop invariant z <= 4608;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c < 36 ==> z < 4608;\nloop invariant c >= 36 ==> c >= 36 && z >= 4608;\nloop invariant c >= 36 ==> c >= 36 && z >= 4608;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\nloop invariant i2: z >= 36 * y;\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 29,
                "annotations": "```\n/*@\nloop invariant c = c + 1 ==> c >= 0;\nloop invariant z = z + 1 ==> z >= 0;\nloop invariant c = c + 1 ==> c <= 36;\nloop invariant z = z + 1 ==> z <= 4608;\nloop invariant unknown() ==> z = z + 1;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1;\nloop invariant c = c + 1 ==> unknown() ==> c = c + 1;\nloop invariant c = c + 1 ==> unknown() ==> z >= 0;\nloop invariant c = c + 1 ==> unknown() ==> z <= 4608;\nloop invariant c = c + 1 ==> unknown() ==> c >= 0;\nloop invariant c = c + 1 ==> unknown() ==> c <= 36;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1 ==> z <= 4608;\nloop invariant c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0;\nloop invariant c = c + 1 ==> unknown() ==> c = c + 1 ==> c <= 36;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608;\nloop invariant c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0 ==> c <= 36;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608 ==> c >= 0;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608 ==> c <= 36;\nloop invariant c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0 ==> c <= 36 ==> z >= 0;\nloop invariant c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0 ==> c <= 36 ==> z <= 4608;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608 ==> c >= 0 ==> c <= 36 ==> z >= 0;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608 ==> c >= 0 ==> c <= 36 ==> z <= 4608;\nloop invariant c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0 ==> c <= 36 ==> z >= 0 ==> z <= 4608;\nloop invariant c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0 ==> c <= 36 ==> z >= 0 ==> z <= 4608 ==> z >= 0;\nloop invariant c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0 ==> c <= 36 ==> z >= 0 ==> z <= 4608 ==> z <= 4608;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608 ==> c >= 0 ==> c <= 36 ==> z >= 0 ==> z <= 4608;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608 ==> c >= 0 ==> c <= 36 ==> z >= 0 ==> z <= 4608 ==> z >= 0;\nloop invariant c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608 ==> c >= 0 ==> c <= 36 ==> z >= 0 ==> z <= 4608 ==> z <= 4608;\nloop invariant c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0 ==> c <= 36 ==> z >= 0 ==> z <= 4608 ==> z >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant z = 36 * y + c;\nloop invariant y >= 0;\nloop invariant y >= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant y = z / 36;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\nloop invariant i3: y >= 0;\nloop invariant i4: y >= 127;\nloop invariant i5: c >= 0;\nloop invariant i6: c <= 36;\nloop invariant i7: z >= 0;\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 < c <= 36;\nloop invariant 1 < y <= 127;\nloop invariant 36 < z < 4608;\nloop invariant z == 36 * y + c;\nloop invariant c == z - 36 * y;\nloop invariant y == (z - c) / 36;\nloop invariant z % 36 == c;\nloop invariant c % 36 == z % 36;\nloop invariant z % 36 == c % 36;\nloop invariant z % 36 == 0;\nloop invariant c % 36 == 0;\nloop invariant c % 36 == z % 36;\nloop invariant c == z % 36;\nloop invariant z % 36 == c % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant z % 36 == c;\nloop invariant c == z % 36;\nloop invariant c == z % 36;\nloop invariant c == z % 36;\nloop invariant c == z % 36;\nloop invariant c == z % 36;\nloop invariant c == z % 36;\nloop invariant c == z % 36;\nloop invariant c == z % 36;\nloop invariant c == z % 36;\nloop invariant c == z % 36;\nloop invariant c == z % 36;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\n\n\nloop invariant i4: z == 36 * y + c;\nloop invariant i5: c == z - 36 * y;\nloop invariant i6: y == (z - c) / 36;\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= z;\nloop invariant 0 <= c;\nloop invariant c <= 36;\nloop invariant z <= 4608;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= z;\nloop invariant i2: 0 <= c;\nloop invariant i3: c <= 36;\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 127 <= y <= 127;\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant z >= 4608;\nloop invariant z <= 4608;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\nloop invariant i2: c >= 0;\nloop invariant i3: c <= 36;\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= 36;\nloop invariant 0 <= y <= 127;\nloop invariant 36 * y <= z <= 36 * y + 36;\nloop invariant 36 * y + c <= z <= 36 * y + (36 * c);\nloop invariant c >= 0;\nloop invariant c <= 36;\nloop invariant y >= 0;\nloop invariant y <= 127;\nloop invariant z >= 0;\nloop invariant z <= 4608;\nloop invariant y >= 0 ==> c >= 0;\nloop invariant y >= 0 ==> c <= 36;\nloop invariant y >= 0 ==> z >= 0;\nloop invariant y >= 0 ==> z <= 4608;\nloop invariant c >= 36 ==> z >= 4608;\nloop invariant c >= 36 ==> z <= 4608;\nloop invariant z >= 4608 ==> c >= 36;\nloop invariant z >= 4608 ==> c <= 36;\nloop invariant z <= 0 ==> c >= 0;\nloop invariant z <= 0 ==> c <= 36;\nloop invariant z <= 0 ==> y >= 0;\nloop invariant z <= 0 ==> y <= 127;\nloop invariant z <= 0 ==> z >= 0;\nloop invariant z <= 0 ==> z <= 4608;\nloop invariant z >= 4608 ==> c >= 36;\nloop invariant z >= 4608 ==> c <= 36;\nloop invariant z >= 4608 ==> y >= 0;\nloop invariant z >= 4608 ==> y <= 127;\nloop invariant z >= 4608 ==> z >= 0;\nloop invariant z >= 4608 ==> z <= 4608;\nloop invariant c >= 0 ==> z >= 0;\nloop invariant c >= 0 ==> z <= 4608;\nloop invariant c >= 0 ==> y >= 0;\nloop invariant c >= 0 ==> y <= 127;\nloop invariant c >= 0 ==> z >= 0;\nloop invariant c >= 0 ==> z <= 4608;\nloop invariant c <= 36 ==> z >= 0;\nloop invariant c <= 36 ==> z <= 4608;\nloop invariant c <= 36 ==> y >= 0;\nloop invariant c <= 36 ==> y <= 127;\nloop invariant c <= 36 ==> z >= 0;\nloop invariant c <= 36 ==> z <= 4608;\nloop invariant y >= 0 ==> z >= 0;\nloop invariant y >= 0 ==> z <= 4608;\nloop invariant y >= 0 ==> y >= 0;\nloop invariant y >= 0 ==> y <= 127;\nloop invariant y >= 0 ==> z >= 0;\nloop invariant y >= 0 ==> z <= 4608;\nloop invariant y <= 127 ==> z >= 0;\nloop invariant y <= 127 ==> z <= 4608;\nloop invariant y <= 127 ==> y >= 0;\nloop invariant y <= 127 ==> y <= 127;\nloop invariant y <= 127 ==> z >= 0;\nloop invariant y <= 127 ==> z <= 4608;\nloop invariant z >= 0 ==> z >= 0;\nloop invariant z >= 0 ==> z <= 4608;\nloop invariant z >= 0 ==> y >= 0;\nloop invariant z >= 0 ==> y <= 127;\nloop invariant z >= 0 ==> z >= 0;\nloop invariant z >= 0 ==> z <= 4608;\nloop invariant z <= 4608 ==> c >= 0;\nloop invariant z <= 4608 ==> c <= 36;\nloop invariant z <= 4608 ==> y >= 0;\nloop invariant z <= 4608 ==> y <= 127;\nloop invariant z <= 4608 ==> z >= 0;\nloop invariant z <= 4608 ==> z <= 4608;\nloop invariant z >= 0 ==> c >= 0;\nloop invariant z >= 0 ==> c <= 36;\nloop invariant z >= 0 ==> y >= 0;\nloop invariant z >= 0 ==> y <= 127;\nloop invariant z >= 0 ==> z >= 0;\nloop invariant z >= 0 ==> z <= 4608;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: 0 <= c <= 36;\n\n\nloop invariant i4: 36 * y + c <= z <= 36 * y + (36 * c);\nloop invariant i5: c >= 0;\nloop invariant i6: c <= 36;\nloop invariant i7: y >= 0;\n\nloop invariant i9: z >= 0;\n\nloop invariant i11: y >= 0 ==> c >= 0;\nloop invariant i12: y >= 0 ==> c <= 36;\nloop invariant i13: y >= 0 ==> z >= 0;\n\n\n\n\nloop invariant i18: z >= 4608 ==> c <= 36;\nloop invariant i19: z <= 0 ==> c >= 0;\nloop invariant i20: z <= 0 ==> c <= 36;\nloop invariant i21: z <= 0 ==> y >= 0;\nloop invariant i22: z <= 0 ==> y <= 127;\nloop invariant i23: z <= 0 ==> z >= 0;\nloop invariant i24: z <= 0 ==> z <= 4608;\nloop invariant i25: z >= 4608 ==> y >= 0;\n\nloop invariant i27: z >= 4608 ==> z >= 0;\n\nloop invariant i29: c >= 0 ==> z >= 0;\n\nloop invariant i31: c >= 0 ==> y >= 0;\n\nloop invariant i33: c <= 36 ==> z >= 0;\n\nloop invariant i35: c <= 36 ==> y >= 0;\n\nloop invariant i37: y >= 0 ==> y >= 0;\n\nloop invariant i39: y <= 127 ==> z >= 0;\n\nloop invariant i41: y <= 127 ==> y >= 0;\nloop invariant i42: y <= 127 ==> y <= 127;\nloop invariant i43: z >= 0 ==> z >= 0;\n\nloop invariant i45: z >= 0 ==> y >= 0;\n\nloop invariant i47: z <= 4608 ==> c >= 0;\nloop invariant i48: z <= 4608 ==> c <= 36;\nloop invariant i49: z <= 4608 ==> y >= 0;\n\nloop invariant i51: z <= 4608 ==> z >= 0;\nloop invariant i52: z <= 4608 ==> z <= 4608;\nloop invariant i53: z >= 0 ==> c >= 0;\nloop invariant i54: z >= 0 ==> c <= 36;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 12,
                "annotations": "```\n/*@\nloop invariant 1 <= x1 <= 100000;\nloop invariant 1 <= x2 <= 100000;\nloop invariant 1 <= x3 <= 100000;\nloop invariant 1 <= y <= 100000;\nloop invariant 1 <= z <= 100000;\nloop invariant x1 = x2 = x3;\nloop invariant x1 = x2 + x3;\nloop invariant x2 = x3;\nloop invariant x1 = x2;\nloop invariant x1 = 1;\nloop invariant x2 = 1;\nloop invariant x3 = 1;\nloop invariant y = 1;\nloop invariant z = 36;\nloop invariant c = 0;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\nloop invariant c = 36;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 53: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: c >= 0;\nloop invariant i2: c <= 35;\nloop invariant i3: z >= 36 * y;\nloop invariant i4: z <= 36 * y + c;\nloop invariant i5: 0 <= c <= 35;\nloop invariant i6: z >= 36 * y + c;\nloop invariant i7: z < 36 * y + 36;\nloop invariant i8: c < 36;\nloop invariant i9: z < 36 * y + c + 1;\nloop invariant i10: 0 <= c <= 36;\nloop invariant i11: z == (36 * y) + c;\nloop invariant i12: c == (36 * y) + c;\nloop invariant i13: 1 <= z <= 4608;\nloop invariant i14: c <= 36;\nloop invariant i15: z == (36 * y + c);\nloop invariant i16: c == (y * (y - 1) * 0.5 + y);\nloop invariant i17: c == 0 ==> z == 36 * y;\nloop invariant i18: c == 0 ==> z >= 0;\nloop invariant i19: c == 0 ==> z <= 4608;\nloop invariant i20: c == 0 ==> y >= 0;\nloop invariant i21: c == 0 ==> y >= 127;\nloop invariant i22: c == 0 ==> c == 0;\nloop invariant i23: c != 0 ==> c >= 1;\nloop invariant i24: c != 0 ==> c <= 36;\nloop invariant i25: c != 0 ==> z >= 1;\nloop invariant i26: c != 0 ==> z <= 4608;\nloop invariant i27: z <= 4608;\nloop invariant i28: c < 36 ==> z < 4608;\nloop invariant i29: c >= 36 ==> c >= 36 && z >= 4608;\nloop invariant i30: c = c + 1 ==> c >= 0;\nloop invariant i31: z = z + 1 ==> z >= 0;\nloop invariant i32: c = c + 1 ==> c <= 36;\nloop invariant i33: z = z + 1 ==> z <= 4608;\nloop invariant i34: unknown() ==> z = z + 1;\nloop invariant i35: c = c + 1 ==> unknown() ==> z = z + 1;\nloop invariant i36: c = c + 1 ==> unknown() ==> c = c + 1;\nloop invariant i37: c = c + 1 ==> unknown() ==> z >= 0;\nloop invariant i38: c = c + 1 ==> unknown() ==> z <= 4608;\nloop invariant i39: c = c + 1 ==> unknown() ==> c >= 0;\nloop invariant i40: c = c + 1 ==> unknown() ==> c <= 36;\nloop invariant i41: c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0;\nloop invariant i42: c = c + 1 ==> unknown() ==> z = z + 1 ==> z <= 4608;\nloop invariant i43: c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0;\nloop invariant i44: c = c + 1 ==> unknown() ==> c = c + 1 ==> c <= 36;\nloop invariant i45: c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608;\nloop invariant i46: c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0 ==> c <= 36;\nloop invariant i47: c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608 ==> c >= 0;\nloop invariant i48: c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608 ==> c <= 36;\nloop invariant i49: c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0 ==> c <= 36 ==> z >= 0;\nloop invariant i50: c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0 ==> c <= 36 ==> z <= 4608;\nloop invariant i51: c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608 ==> c >= 0 ==> c <= 36 ==> z >= 0;\nloop invariant i52: c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608 ==> c >= 0 ==> c <= 36 ==> z <= 4608;\nloop invariant i53: c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0 ==> c <= 36 ==> z >= 0 ==> z <= 4608;\nloop invariant i54: c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0 ==> c <= 36 ==> z >= 0 ==> z <= 4608 ==> z >= 0;\nloop invariant i55: c = c + 1 ==> unknown() ==> c = c + 1 ==> c >= 0 ==> c <= 36 ==> z >= 0 ==> z <= 4608 ==> z <= 4608;\nloop invariant i56: c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608 ==> c >= 0 ==> c <= 36 ==> z >= 0 ==> z <= 4608;\nloop invariant i57: c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608 ==> c >= 0 ==> c <= 36 ==> z >= 0 ==> z <= 4608 ==> z >= 0;\nloop invariant i58: c = c + 1 ==> unknown() ==> z = z + 1 ==> z >= 0 ==> z <= 4608 ==> c >= 0 ==> c <= 36 ==> z >= 0 ==> z <= 4608 ==> z <= 4608;\nloop invariant i59: z = 36 * y + c;\nloop invariant i60: y >= 0;\nloop invariant i61: y >= 127;\nloop invariant i62: z >= 0;\nloop invariant i63: y = z / 36;\nloop invariant i64: 0 < c <= 36;\nloop invariant i65: 1 < y <= 127;\nloop invariant i66: 36 < z < 4608;\nloop invariant i67: z == 36 * y + c;\nloop invariant i68: c == z - 36 * y;\nloop invariant i69: y == (z - c) / 36;\nloop invariant i70: z % 36 == c;\nloop invariant i71: c % 36 == z % 36;\nloop invariant i72: z % 36 == c % 36;\nloop invariant i73: z % 36 == 0;\nloop invariant i74: c % 36 == 0;\nloop invariant i75: c == z % 36;\nloop invariant i76: 0 <= z;\nloop invariant i77: 0 <= c;\nloop invariant i78: 127 <= y <= 127;\nloop invariant i79: z >= 4608;\nloop invariant i80: 0 <= y <= 127;\nloop invariant i81: 36 * y <= z <= 36 * y + 36;\nloop invariant i82: 36 * y + c <= z <= 36 * y + (36 * c);\nloop invariant i83: y <= 127;\nloop invariant i84: y >= 0 ==> c >= 0;\nloop invariant i85: y >= 0 ==> c <= 36;\nloop invariant i86: y >= 0 ==> z >= 0;\nloop invariant i87: y >= 0 ==> z <= 4608;\nloop invariant i88: c >= 36 ==> z >= 4608;\nloop invariant i89: c >= 36 ==> z <= 4608;\nloop invariant i90: z >= 4608 ==> c >= 36;\nloop invariant i91: z >= 4608 ==> c <= 36;\nloop invariant i92: z <= 0 ==> c >= 0;\nloop invariant i93: z <= 0 ==> c <= 36;\nloop invariant i94: z <= 0 ==> y >= 0;\nloop invariant i95: z <= 0 ==> y <= 127;\nloop invariant i96: z <= 0 ==> z >= 0;\nloop invariant i97: z <= 0 ==> z <= 4608;\nloop invariant i98: z >= 4608 ==> y >= 0;\nloop invariant i99: z >= 4608 ==> y <= 127;\nloop invariant i100: z >= 4608 ==> z >= 0;\nloop invariant i101: z >= 4608 ==> z <= 4608;\nloop invariant i102: c >= 0 ==> z >= 0;\nloop invariant i103: c >= 0 ==> z <= 4608;\nloop invariant i104: c >= 0 ==> y >= 0;\nloop invariant i105: c >= 0 ==> y <= 127;\nloop invariant i106: c <= 36 ==> z >= 0;\nloop invariant i107: c <= 36 ==> z <= 4608;\nloop invariant i108: c <= 36 ==> y >= 0;\nloop invariant i109: c <= 36 ==> y <= 127;\nloop invariant i110: y >= 0 ==> y >= 0;\nloop invariant i111: y >= 0 ==> y <= 127;\nloop invariant i112: y <= 127 ==> z >= 0;\nloop invariant i113: y <= 127 ==> z <= 4608;\nloop invariant i114: y <= 127 ==> y >= 0;\nloop invariant i115: y <= 127 ==> y <= 127;\nloop invariant i116: z >= 0 ==> z >= 0;\nloop invariant i117: z >= 0 ==> z <= 4608;\nloop invariant i118: z >= 0 ==> y >= 0;\nloop invariant i119: z >= 0 ==> y <= 127;\nloop invariant i120: z <= 4608 ==> c >= 0;\nloop invariant i121: z <= 4608 ==> c <= 36;\nloop invariant i122: z <= 4608 ==> y >= 0;\nloop invariant i123: z <= 4608 ==> y <= 127;\nloop invariant i124: z <= 4608 ==> z >= 0;\nloop invariant i125: z <= 4608 ==> z <= 4608;\nloop invariant i126: z >= 0 ==> c >= 0;\nloop invariant i127: z >= 0 ==> c <= 36;\nloop invariant i128: 1 <= x1 <= 100000;\nloop invariant i129: 1 <= x2 <= 100000;\nloop invariant i130: 1 <= x3 <= 100000;\nloop invariant i131: 1 <= y <= 100000;\nloop invariant i132: 1 <= z <= 100000;\nloop invariant i133: x1 = x2 = x3;\nloop invariant i134: x1 = x2 + x3;\nloop invariant i135: x2 = x3;\nloop invariant i136: x1 = x2;\nloop invariant i137: x1 = 1;\nloop invariant i138: x2 = 1;\nloop invariant i139: x3 = 1;\nloop invariant i140: y = 1;\nloop invariant i141: z = 36;\nloop invariant i142: c = 0;\nloop invariant i143: c = 36;\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 59,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int x1;\n  int x2;\n  int x3;\n  int y;\n  int z;\n  \n  (c = 0);\n  assume((y >= 0));\n  assume((y >= 127));\n  (z = (36 * y));\n  \n  /*@\nloop invariant i1: c >= 0;\n\nloop invariant i3: z >= 36 * y;\nloop invariant i4: z <= 36 * y + c;\n\nloop invariant i6: z >= 36 * y + c;\n\n\nloop invariant i9: z < 36 * y + c + 1;\nloop invariant i10: 0 <= c <= 36;\nloop invariant i11: z == (36 * y) + c;\n\n\nloop invariant i14: c <= 36;\nloop invariant i15: z == (36 * y + c);\n\nloop invariant i17: c == 0 ==> z == 36 * y;\nloop invariant i18: c == 0 ==> z >= 0;\n\nloop invariant i20: c == 0 ==> y >= 0;\nloop invariant i21: c == 0 ==> y >= 127;\nloop invariant i22: c == 0 ==> c == 0;\nloop invariant i23: c != 0 ==> c >= 1;\nloop invariant i24: c != 0 ==> c <= 36;\nloop invariant i25: c != 0 ==> z >= 1;\n\n\n\nloop invariant i29: c >= 36 ==> c >= 36 && z >= 4608;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i60: y >= 0;\nloop invariant i61: y >= 127;\nloop invariant i62: z >= 0;\n\n\n\n\nloop invariant i67: z == 36 * y + c;\nloop invariant i68: c == z - 36 * y;\nloop invariant i69: y == (z - c) / 36;\n\nloop invariant i71: c % 36 == z % 36;\nloop invariant i72: z % 36 == c % 36;\n\n\n\nloop invariant i76: 0 <= z;\nloop invariant i77: 0 <= c;\n\n\n\nloop invariant i81: 36 * y <= z <= 36 * y + 36;\nloop invariant i82: 36 * y + c <= z <= 36 * y + (36 * c);\n\nloop invariant i84: y >= 0 ==> c >= 0;\nloop invariant i85: y >= 0 ==> c <= 36;\nloop invariant i86: y >= 0 ==> z >= 0;\n\nloop invariant i88: c >= 36 ==> z >= 4608;\n\n\nloop invariant i91: z >= 4608 ==> c <= 36;\nloop invariant i92: z <= 0 ==> c >= 0;\nloop invariant i93: z <= 0 ==> c <= 36;\nloop invariant i94: z <= 0 ==> y >= 0;\nloop invariant i95: z <= 0 ==> y <= 127;\nloop invariant i96: z <= 0 ==> z >= 0;\nloop invariant i97: z <= 0 ==> z <= 4608;\nloop invariant i98: z >= 4608 ==> y >= 0;\n\nloop invariant i100: z >= 4608 ==> z >= 0;\n\nloop invariant i102: c >= 0 ==> z >= 0;\n\nloop invariant i104: c >= 0 ==> y >= 0;\n\nloop invariant i106: c <= 36 ==> z >= 0;\n\nloop invariant i108: c <= 36 ==> y >= 0;\n\nloop invariant i110: y >= 0 ==> y >= 0;\n\nloop invariant i112: y <= 127 ==> z >= 0;\nloop invariant i113: y <= 127 ==> z <= 4608;\nloop invariant i114: y <= 127 ==> y >= 0;\nloop invariant i115: y <= 127 ==> y <= 127;\nloop invariant i116: z >= 0 ==> z >= 0;\n\nloop invariant i118: z >= 0 ==> y >= 0;\n\nloop invariant i120: z <= 4608 ==> c >= 0;\nloop invariant i121: z <= 4608 ==> c <= 36;\nloop invariant i122: z <= 4608 ==> y >= 0;\n\nloop invariant i124: z <= 4608 ==> z >= 0;\nloop invariant i125: z <= 4608 ==> z <= 4608;\nloop invariant i126: z >= 0 ==> c >= 0;\nloop invariant i127: z >= 0 ==> c <= 36;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    if ( (c < 36) )\n    {\n    (z  = (z + 1));\n    (c  = (c + 1));\n    }\n\n  }\n  \nif ( (z < 0) )\nif ( (z >= 4608) )\n{;\n//@ assert( (c >= 36) );\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c"
        ],
        "skipped": [],
        "total": 63,
        "success_count": 52,
        "failure_count": 11,
        "success_rate": 0.8253968253968254
    }
}