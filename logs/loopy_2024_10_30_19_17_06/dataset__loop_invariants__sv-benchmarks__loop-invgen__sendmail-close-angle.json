{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  while (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= in <= inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant in <= buflim;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buf <= buflim + 2;\nloop invariant in <= bufferlen - 2;\nloop invariant buflim <= bufferlen - 2;\nloop invariant buf <= bufferlen - 2;\nloop invariant buf <= in;\nloop invariant in <= bufferlen - 2;\nloop invariant buflim <= bufferlen - 2;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= in;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= in;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= in;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= in;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= in;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= in;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= in;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= in;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= in;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= in;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= in <= inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= buflim <= bufferlen - 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= buf < bufferlen;\nloop invariant 0 <= in < inlen;\nloop invariant buf < buflim or inlen == 0;\nloop invariant in <= inlen;\nloop invariant buf <= buflim or inlen == 0;\nloop invariant unknown_int();\nloop invariant buf < buflim or unknown_int() == 0;\nloop invariant in <= inlen or unknown_int() == 0;\nloop invariant buf <= buflim or unknown_int() == 0;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= in <= inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant in <= bufferlen - 2;\nloop invariant buf <= in + 1 <= bufferlen - 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= buf;\nloop invariant buf < bufferlen;\nloop invariant 0 <= in;\nloop invariant in < inlen;\nloop invariant buf <= buflim;\nloop invariant buflim < bufferlen;\nloop invariant buf <= buflim + 1;\nloop invariant buflim + 1 < bufferlen;\nloop invariant buf <= buflim + 2;\nloop invariant buflim + 2 < bufferlen;\nloop invariant buf <= buflim + 3;\nloop invariant buflim + 3 < bufferlen;\nloop invariant buf <= buflim + 4;\nloop invariant buflim + 4 < bufferlen;\nloop invariant buf <= buflim + 5;\nloop invariant buflim + 5 < bufferlen;\nloop invariant buf <= buflim + 6;\nloop invariant buflim + 6 < bufferlen;\nloop invariant buf <= buflim + 7;\nloop invariant buflim + 7 < bufferlen;\nloop invariant buf <= buflim + 8;\nloop invariant buflim + 8 < bufferlen;\nloop invariant buf <= buflim + 9;\nloop invariant buflim + 9 < bufferlen;\nloop invariant buf <= buflim + 10;\nloop invariant buflim + 10 < bufferlen;\nloop invariant buf <= buflim + 11;\nloop invariant buflim + 11 < bufferlen;\nloop invariant buf <= buflim + 12;\nloop invariant buflim + 12 < bufferlen;\nloop invariant buf <= buflim + 13;\nloop invariant buflim + 13 < bufferlen;\nloop invariant buf <= buflim + 14;\nloop invariant buflim + 14 < bufferlen;\nloop invariant buf <= buflim + 15;\nloop invariant buflim + 15 < bufferlen;\nloop invariant buf <= buflim + 16;\nloop invariant buflim + 16 < bufferlen;\nloop invariant buf <= buflim + 17;\nloop invariant buflim + 17 < bufferlen;\nloop invariant buf <= buflim + 18;\nloop invariant buflim + 18 < bufferlen;\nloop invariant buf <= buflim + 19;\nloop invariant buflim + 19 < bufferlen;\nloop invariant buf <= buflim + 20;\nloop invariant buflim + 20 < bufferlen;\nloop invariant buf <= buflim + 21;\nloop invariant buflim + 21 < bufferlen;\nloop invariant buf <= buflim + 22;\nloop invariant buflim + 22 < bufferlen;\nloop invariant buf <= buflim + 23;\nloop invariant buflim + 23 < bufferlen;\nloop invariant buf <= buflim + 24;\nloop invariant buflim + 24 < bufferlen;\nloop invariant buf <= buflim + 25;\nloop invariant buflim + 25 < bufferlen;\nloop invariant buf <= buflim + 26;\nloop invariant buflim + 26 < bufferlen;\nloop invariant buf <= buflim + 27;\nloop invariant buflim + 27 < bufferlen;\nloop invariant buf <= buflim + 28;\nloop invariant buflim + 28 < bufferlen;\nloop invariant buf <= buflim + 29;\nloop invariant buflim + 29 < bufferlen;\nloop invariant buf <= buflim + 30;\nloop invariant buflim + 30 < bufferlen;\nloop invariant buf <= buflim + 31;\nloop invariant buflim + 31 < bufferlen;\nloop invariant buf <= buflim + 32;\nloop invariant buflim + 32 < bufferlen;\nloop invariant buf <= buflim + 33;\nloop invariant buflim + 33 < bufferlen;\nloop invariant buf <= buflim + 34;\nloop invariant buflim + 34 < bufferlen;\nloop invariant buf <= buflim + 35;\nloop invariant buflim + 35 < bufferlen;\nloop invariant buf <= buflim + 36;\nloop invariant buflim + 36 < bufferlen;\nloop invariant buf <= buflim + 37;\nloop invariant buflim + 37 < bufferlen;\nloop invariant buf <= buflim + 38;\nloop invariant buflim + 38 < bufferlen;\nloop invariant buf <= buflim + 39;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buf < bufferlen;\nloop invariant 0 <= buflim < bufferlen;\nloop invariant buflim < inlen;\nloop invariant buflim <= inlen - 2;\nloop invariant buf <= buflim;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= buf <= bufferlen;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= buflim;\nloop invariant buf < bufferlen;\nloop invariant in < inlen;\nloop invariant in + 2 <= bufferlen;\nloop invariant in <= buflim;\nloop invariant buf <= in + 2;\nloop invariant buf <= buflim + 2;\nloop invariant buf <= inlen + 2;\nloop invariant in <= buflim + 2;\nloop invariant in <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= buf;\nloop invariant buf <= bufferlen - 2;\nloop invariant 0 <= in;\nloop invariant in <= inlen;\nloop invariant 0 <= buflim;\nloop invariant buflim <= inlen - 1;\nloop invariant buf <= in;\nloop invariant in <= buflim + 2;\nloop invariant buf <= buflim + 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= buf < bufferlen;\nloop invariant 0 <= in < inlen;\nloop invariant buf <= in;\nloop invariant buf <= buflim;\nloop invariant buf == buflim ==> !unknown_int();\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= buflim <= bufferlen;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= buf && buf <= bufferlen;\nloop invariant 0 <= in && in <= inlen;\nloop invariant buf == buflim || buf < buflim;\nloop invariant buf <= buflim || buf > buflim;\nloop invariant buf != buflim || buf < buflim;\nloop invariant buf != buflim || buf > buflim;\nloop invariant buf >= 0 || buf <= bufferlen;\nloop invariant in >= 0 || in <= inlen;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf != buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= buf <= bufferlen;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= buflim;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= buf;\nloop invariant buf < bufferlen;\nloop invariant 0 <= in;\nloop invariant in < inlen;\nloop invariant buf <= buflim;\nloop invariant buflim < bufferlen;\nloop invariant buf < buflim + 1;\nloop invariant buf <= in;\nloop invariant in <= bufferlen - 2;\nloop invariant buf <= inlen - 1;\nloop invariant buf <= inlen - 2;\nloop invariant buf <= inlen - 3;\nloop invariant buf <= inlen - 4;\nloop invariant buf <= inlen - 5;\nloop invariant buf <= inlen - 6;\nloop invariant buf <= inlen - 7;\nloop invariant buf <= inlen - 8;\nloop invariant buf <= inlen - 9;\nloop invariant buf <= inlen - 10;\nloop invariant buf <= inlen - 11;\nloop invariant buf <= inlen - 12;\nloop invariant buf <= inlen - 13;\nloop invariant buf <= inlen - 14;\nloop invariant buf <= inlen - 15;\nloop invariant buf <= inlen - 16;\nloop invariant buf <= inlen - 17;\nloop invariant buf <= inlen - 18;\nloop invariant buf <= inlen - 19;\nloop invariant buf <= inlen - 20;\nloop invariant buf <= inlen - 21;\nloop invariant buf <= inlen - 22;\nloop invariant buf <= inlen - 23;\nloop invariant buf <= inlen - 24;\nloop invariant buf <= inlen - 25;\nloop invariant buf <= inlen - 26;\nloop invariant buf <= inlen - 27;\nloop invariant buf <= inlen - 28;\nloop invariant buf <= inlen - 29;\nloop invariant buf <= inlen - 30;\nloop invariant buf <= inlen - 31;\nloop invariant buf <= inlen - 32;\nloop invariant buf <= inlen - 33;\nloop invariant buf <= inlen - 34;\nloop invariant buf <= inlen - 35;\nloop invariant buf <= inlen - 36;\nloop invariant buf <= inlen - 37;\nloop invariant buf <= inlen - 38;\nloop invariant buf <= inlen - 39;\nloop invariant buf <= inlen - 40;\nloop invariant buf <= inlen - 41;\nloop invariant buf <= inlen - 42;\nloop invariant buf <= inlen - 43;\nloop invariant buf <= inlen - 44;\nloop invariant buf <= inlen - 45;\nloop invariant buf <= inlen - 46;\nloop invariant buf <= inlen - 47;\nloop invariant buf <= inlen - 48;\nloop invariant buf <= inlen - 49;\nloop invariant buf <= inlen - 50;\nloop invariant buf <= inlen - 51;\nloop invariant buf <= inlen - 52;\nloop invariant buf <= inlen - 53;\nloop invariant buf <= inlen - 54;\nloop invariant buf <= inlen - 55;\nloop invariant buf <= inlen - 56;\nloop invariant buf <= inlen - 57;\nloop invariant buf <= inlen - 58;\nloop invariant buf <= inlen - 59;\nloop invariant buf <= inlen - 60;\nloop invariant buf <= inlen - 61;\nloop invariant buf <= inlen - 62;\nloop invariant buf <= inlen - 63;\nloop invariant buf <= inlen - 64;\nloop invariant buf <= inlen - 65;\nloop invariant buf <= inlen - 66;\nloop invariant buf <= inlen - 67;\nloop invariant buf <= inlen - 68;\nloop invariant buf <= inlen - 69;\nloop invariant buf <= inlen - 70;\nloop invariant buf <= inlen - 71;\nloop invariant buf <= inlen - 72;\nloop invariant buf <= inlen - 73;\nloop invariant buf <= inlen - 74;\nloop invariant buf <= inlen - 75;\nloop invariant buf <= inlen - 76;\nloop invariant buf <= inlen - 77;\nloop invariant buf <= inlen - 78;\nloop invariant buf <= inlen - 79;\nloop invariant buf <= inlen - 80;\nloop invariant buf <= inlen - 81;\nloop invariant buf <= inlen - 82;\nloop invariant buf <= inlen - 83;\nloop invariant buf <= inlen - 84;\nloop invariant buf <= inlen - 85;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= buf <= bufferlen;\nloop invariant 0 <= in <= inlen;\nloop invariant buf < buflim || buflim == bufferlen - 2;\nloop invariant in < inlen;\nloop invariant in == inlen || buf == buflim || buflim == bufferlen - 2;\nloop invariant buf < bufferlen - 2 || buflim == bufferlen - 2;\nloop invariant buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2;\nloop invariant buf < bufferlen - 2 || in == inlen || buflim == bufferlen - 2;\nloop invariant in == inlen || buf == buflim || buflim == bufferlen - 2;\nloop invariant buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || buflim == bufferlen - 2;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buflim == bufferlen - 2;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= in <= inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant in <= buflim;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buf <= buflim + 2;\nloop invariant in <= bufferlen - 2;\nloop invariant buflim <= bufferlen - 2;\nloop invariant buf <= bufferlen - 2;\nloop invariant buf <= in;\nloop invariant in <= bufferlen - 2;\nloop invariant buflim <= bufferlen - 2;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= in;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= in;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= in;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= in;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= in;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= in;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= in;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= in;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= in;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= in;\nloop invariant in <= buflim;\nloop invariant buf <= buflim + 2;\nloop invariant buf + 2 <= bufferlen;\nloop invariant buflim <= bufferlen - 2;\nloop invariant 0 <= buflim <= bufferlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= in <= inlen;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= in <= inlen;\nloop invariant i2: 0 <= buf <= buflim;\nloop invariant i3: 0 <= buflim <= bufferlen;\n\nloop invariant i5: buf + 2 <= bufferlen;\nloop invariant i6: buf <= buflim + 2;\n\nloop invariant i8: buflim <= bufferlen - 2;\nloop invariant i9: buf <= bufferlen - 2;\nloop invariant i10: buf <= in;\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= in <= inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= buflim <= bufferlen - 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= in <= inlen;\nloop invariant i2: 0 <= buf <= buflim;\nloop invariant i3: 0 <= buflim <= bufferlen - 2;\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 0 <= buf < bufferlen;\nloop invariant 0 <= in < inlen;\nloop invariant buf < buflim or inlen == 0;\nloop invariant in <= inlen;\nloop invariant buf <= buflim or inlen == 0;\nloop invariant unknown_int();\nloop invariant buf < buflim or unknown_int() == 0;\nloop invariant in <= inlen or unknown_int() == 0;\nloop invariant buf <= buflim or unknown_int() == 0;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\nloop invariant unknown_int() == 0 or unknown_int() == 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\n\nloop invariant i2: 0 <= in < inlen;\n\nloop invariant i4: in <= inlen;\n\n\n\n\n\n\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= in <= inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant in <= bufferlen - 2;\nloop invariant buf <= in + 1 <= bufferlen - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= in <= inlen;\nloop invariant i2: 0 <= buf <= buflim;\n\n\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 38,
                "annotations": "```\n/*@\nloop invariant 0 <= buf;\nloop invariant buf < bufferlen;\nloop invariant 0 <= in;\nloop invariant in < inlen;\nloop invariant buf <= buflim;\nloop invariant buflim < bufferlen;\nloop invariant buf <= buflim + 1;\nloop invariant buflim + 1 < bufferlen;\nloop invariant buf <= buflim + 2;\nloop invariant buflim + 2 < bufferlen;\nloop invariant buf <= buflim + 3;\nloop invariant buflim + 3 < bufferlen;\nloop invariant buf <= buflim + 4;\nloop invariant buflim + 4 < bufferlen;\nloop invariant buf <= buflim + 5;\nloop invariant buflim + 5 < bufferlen;\nloop invariant buf <= buflim + 6;\nloop invariant buflim + 6 < bufferlen;\nloop invariant buf <= buflim + 7;\nloop invariant buflim + 7 < bufferlen;\nloop invariant buf <= buflim + 8;\nloop invariant buflim + 8 < bufferlen;\nloop invariant buf <= buflim + 9;\nloop invariant buflim + 9 < bufferlen;\nloop invariant buf <= buflim + 10;\nloop invariant buflim + 10 < bufferlen;\nloop invariant buf <= buflim + 11;\nloop invariant buflim + 11 < bufferlen;\nloop invariant buf <= buflim + 12;\nloop invariant buflim + 12 < bufferlen;\nloop invariant buf <= buflim + 13;\nloop invariant buflim + 13 < bufferlen;\nloop invariant buf <= buflim + 14;\nloop invariant buflim + 14 < bufferlen;\nloop invariant buf <= buflim + 15;\nloop invariant buflim + 15 < bufferlen;\nloop invariant buf <= buflim + 16;\nloop invariant buflim + 16 < bufferlen;\nloop invariant buf <= buflim + 17;\nloop invariant buflim + 17 < bufferlen;\nloop invariant buf <= buflim + 18;\nloop invariant buflim + 18 < bufferlen;\nloop invariant buf <= buflim + 19;\nloop invariant buflim + 19 < bufferlen;\nloop invariant buf <= buflim + 20;\nloop invariant buflim + 20 < bufferlen;\nloop invariant buf <= buflim + 21;\nloop invariant buflim + 21 < bufferlen;\nloop invariant buf <= buflim + 22;\nloop invariant buflim + 22 < bufferlen;\nloop invariant buf <= buflim + 23;\nloop invariant buflim + 23 < bufferlen;\nloop invariant buf <= buflim + 24;\nloop invariant buflim + 24 < bufferlen;\nloop invariant buf <= buflim + 25;\nloop invariant buflim + 25 < bufferlen;\nloop invariant buf <= buflim + 26;\nloop invariant buflim + 26 < bufferlen;\nloop invariant buf <= buflim + 27;\nloop invariant buflim + 27 < bufferlen;\nloop invariant buf <= buflim + 28;\nloop invariant buflim + 28 < bufferlen;\nloop invariant buf <= buflim + 29;\nloop invariant buflim + 29 < bufferlen;\nloop invariant buf <= buflim + 30;\nloop invariant buflim + 30 < bufferlen;\nloop invariant buf <= buflim + 31;\nloop invariant buflim + 31 < bufferlen;\nloop invariant buf <= buflim + 32;\nloop invariant buflim + 32 < bufferlen;\nloop invariant buf <= buflim + 33;\nloop invariant buflim + 33 < bufferlen;\nloop invariant buf <= buflim + 34;\nloop invariant buflim + 34 < bufferlen;\nloop invariant buf <= buflim + 35;\nloop invariant buflim + 35 < bufferlen;\nloop invariant buf <= buflim + 36;\nloop invariant buflim + 36 < bufferlen;\nloop invariant buf <= buflim + 37;\nloop invariant buflim + 37 < bufferlen;\nloop invariant buf <= buflim + 38;\nloop invariant buflim + 38 < bufferlen;\nloop invariant buf <= buflim + 39;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= buf;\nloop invariant i2: buf < bufferlen;\nloop invariant i3: 0 <= in;\nloop invariant i4: in < inlen;\nloop invariant i5: buf <= buflim;\nloop invariant i6: buflim < bufferlen;\nloop invariant i7: buf <= buflim + 1;\nloop invariant i8: buflim + 1 < bufferlen;\nloop invariant i9: buf <= buflim + 2;\n\nloop invariant i11: buf <= buflim + 3;\n\nloop invariant i13: buf <= buflim + 4;\n\nloop invariant i15: buf <= buflim + 5;\n\nloop invariant i17: buf <= buflim + 6;\n\nloop invariant i19: buf <= buflim + 7;\n\nloop invariant i21: buf <= buflim + 8;\n\nloop invariant i23: buf <= buflim + 9;\n\nloop invariant i25: buf <= buflim + 10;\n\nloop invariant i27: buf <= buflim + 11;\n\nloop invariant i29: buf <= buflim + 12;\n\nloop invariant i31: buf <= buflim + 13;\n\nloop invariant i33: buf <= buflim + 14;\n\nloop invariant i35: buf <= buflim + 15;\n\nloop invariant i37: buf <= buflim + 16;\n\nloop invariant i39: buf <= buflim + 17;\n\nloop invariant i41: buf <= buflim + 18;\n\nloop invariant i43: buf <= buflim + 19;\n\nloop invariant i45: buf <= buflim + 20;\n\nloop invariant i47: buf <= buflim + 21;\n\nloop invariant i49: buf <= buflim + 22;\n\nloop invariant i51: buf <= buflim + 23;\n\nloop invariant i53: buf <= buflim + 24;\n\nloop invariant i55: buf <= buflim + 25;\n\nloop invariant i57: buf <= buflim + 26;\n\nloop invariant i59: buf <= buflim + 27;\n\nloop invariant i61: buf <= buflim + 28;\n\nloop invariant i63: buf <= buflim + 29;\n\nloop invariant i65: buf <= buflim + 30;\n\nloop invariant i67: buf <= buflim + 31;\n\nloop invariant i69: buf <= buflim + 32;\n\nloop invariant i71: buf <= buflim + 33;\n\nloop invariant i73: buf <= buflim + 34;\n\nloop invariant i75: buf <= buflim + 35;\n\nloop invariant i77: buf <= buflim + 36;\n\nloop invariant i79: buf <= buflim + 37;\n\nloop invariant i81: buf <= buflim + 38;\n\nloop invariant i83: buf <= buflim + 39;\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant buf < bufferlen;\nloop invariant 0 <= buflim < bufferlen;\nloop invariant buflim < inlen;\nloop invariant buflim <= inlen - 2;\nloop invariant buf <= buflim;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= in < inlen;\nloop invariant i2: 0 <= buf <= buflim;\nloop invariant i3: buf < bufferlen;\nloop invariant i4: 0 <= buflim < bufferlen;\nloop invariant i5: buflim < inlen;\nloop invariant i6: buflim <= inlen - 2;\nloop invariant i7: buf <= buflim;\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= buf <= bufferlen;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= buflim;\nloop invariant buf < bufferlen;\nloop invariant in < inlen;\nloop invariant in + 2 <= bufferlen;\nloop invariant in <= buflim;\nloop invariant buf <= in + 2;\nloop invariant buf <= buflim + 2;\nloop invariant buf <= inlen + 2;\nloop invariant in <= buflim + 2;\nloop invariant in <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\nloop invariant in + 2 <= inlen + 2;\nloop invariant in + 2 <= buflim + 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= buf <= bufferlen;\nloop invariant i2: 0 <= in <= inlen;\nloop invariant i3: buf <= buflim;\n\nloop invariant i5: in < inlen;\n\n\nloop invariant i8: buf <= in + 2;\nloop invariant i9: buf <= buflim + 2;\nloop invariant i10: buf <= inlen + 2;\n\nloop invariant i12: in <= inlen + 2;\n\nloop invariant i14: in + 2 <= inlen + 2;\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= buf;\nloop invariant buf <= bufferlen - 2;\nloop invariant 0 <= in;\nloop invariant in <= inlen;\nloop invariant 0 <= buflim;\nloop invariant buflim <= inlen - 1;\nloop invariant buf <= in;\nloop invariant in <= buflim + 2;\nloop invariant buf <= buflim + 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= buf;\n\nloop invariant i3: 0 <= in;\nloop invariant i4: in <= inlen;\nloop invariant i5: 0 <= buflim;\nloop invariant i6: buflim <= inlen - 1;\nloop invariant i7: buf <= in;\n\n\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= buf < bufferlen;\nloop invariant 0 <= in < inlen;\nloop invariant buf <= in;\nloop invariant buf <= buflim;\nloop invariant buf == buflim ==> !unknown_int();\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant (buf == buflim && unknown_int()) ==> in < inlen;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\n\nloop invariant i2: 0 <= in < inlen;\nloop invariant i3: buf <= in;\nloop invariant i4: buf <= buflim;\n\n\n\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= in < inlen;\nloop invariant 0 <= buf <= buflim;\nloop invariant 0 <= buflim <= bufferlen;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= in < inlen;\nloop invariant i2: 0 <= buf <= buflim;\nloop invariant i3: 0 <= buflim <= bufferlen;\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= buf && buf <= bufferlen;\nloop invariant 0 <= in && in <= inlen;\nloop invariant buf == buflim || buf < buflim;\nloop invariant buf <= buflim || buf > buflim;\nloop invariant buf != buflim || buf < buflim;\nloop invariant buf != buflim || buf > buflim;\nloop invariant buf >= 0 || buf <= bufferlen;\nloop invariant in >= 0 || in <= inlen;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf != buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\nloop invariant buf != buflim || buf == buflim;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= buf && buf <= bufferlen;\nloop invariant i2: 0 <= in && in <= inlen;\nloop invariant i3: buf == buflim || buf < buflim;\nloop invariant i4: buf <= buflim || buf > buflim;\n\n\nloop invariant i7: buf >= 0 || buf <= bufferlen;\nloop invariant i8: in >= 0 || in <= inlen;\nloop invariant i9: buf != buflim || buf == buflim;\n\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= buf <= bufferlen;\nloop invariant 0 <= in <= inlen;\nloop invariant buf <= buflim;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= buf <= bufferlen;\nloop invariant i2: 0 <= in <= inlen;\nloop invariant i3: buf <= buflim;\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= buf;\nloop invariant buf < bufferlen;\nloop invariant 0 <= in;\nloop invariant in < inlen;\nloop invariant buf <= buflim;\nloop invariant buflim < bufferlen;\nloop invariant buf < buflim + 1;\nloop invariant buf <= in;\nloop invariant in <= bufferlen - 2;\nloop invariant buf <= inlen - 1;\nloop invariant buf <= inlen - 2;\nloop invariant buf <= inlen - 3;\nloop invariant buf <= inlen - 4;\nloop invariant buf <= inlen - 5;\nloop invariant buf <= inlen - 6;\nloop invariant buf <= inlen - 7;\nloop invariant buf <= inlen - 8;\nloop invariant buf <= inlen - 9;\nloop invariant buf <= inlen - 10;\nloop invariant buf <= inlen - 11;\nloop invariant buf <= inlen - 12;\nloop invariant buf <= inlen - 13;\nloop invariant buf <= inlen - 14;\nloop invariant buf <= inlen - 15;\nloop invariant buf <= inlen - 16;\nloop invariant buf <= inlen - 17;\nloop invariant buf <= inlen - 18;\nloop invariant buf <= inlen - 19;\nloop invariant buf <= inlen - 20;\nloop invariant buf <= inlen - 21;\nloop invariant buf <= inlen - 22;\nloop invariant buf <= inlen - 23;\nloop invariant buf <= inlen - 24;\nloop invariant buf <= inlen - 25;\nloop invariant buf <= inlen - 26;\nloop invariant buf <= inlen - 27;\nloop invariant buf <= inlen - 28;\nloop invariant buf <= inlen - 29;\nloop invariant buf <= inlen - 30;\nloop invariant buf <= inlen - 31;\nloop invariant buf <= inlen - 32;\nloop invariant buf <= inlen - 33;\nloop invariant buf <= inlen - 34;\nloop invariant buf <= inlen - 35;\nloop invariant buf <= inlen - 36;\nloop invariant buf <= inlen - 37;\nloop invariant buf <= inlen - 38;\nloop invariant buf <= inlen - 39;\nloop invariant buf <= inlen - 40;\nloop invariant buf <= inlen - 41;\nloop invariant buf <= inlen - 42;\nloop invariant buf <= inlen - 43;\nloop invariant buf <= inlen - 44;\nloop invariant buf <= inlen - 45;\nloop invariant buf <= inlen - 46;\nloop invariant buf <= inlen - 47;\nloop invariant buf <= inlen - 48;\nloop invariant buf <= inlen - 49;\nloop invariant buf <= inlen - 50;\nloop invariant buf <= inlen - 51;\nloop invariant buf <= inlen - 52;\nloop invariant buf <= inlen - 53;\nloop invariant buf <= inlen - 54;\nloop invariant buf <= inlen - 55;\nloop invariant buf <= inlen - 56;\nloop invariant buf <= inlen - 57;\nloop invariant buf <= inlen - 58;\nloop invariant buf <= inlen - 59;\nloop invariant buf <= inlen - 60;\nloop invariant buf <= inlen - 61;\nloop invariant buf <= inlen - 62;\nloop invariant buf <= inlen - 63;\nloop invariant buf <= inlen - 64;\nloop invariant buf <= inlen - 65;\nloop invariant buf <= inlen - 66;\nloop invariant buf <= inlen - 67;\nloop invariant buf <= inlen - 68;\nloop invariant buf <= inlen - 69;\nloop invariant buf <= inlen - 70;\nloop invariant buf <= inlen - 71;\nloop invariant buf <= inlen - 72;\nloop invariant buf <= inlen - 73;\nloop invariant buf <= inlen - 74;\nloop invariant buf <= inlen - 75;\nloop invariant buf <= inlen - 76;\nloop invariant buf <= inlen - 77;\nloop invariant buf <= inlen - 78;\nloop invariant buf <= inlen - 79;\nloop invariant buf <= inlen - 80;\nloop invariant buf <= inlen - 81;\nloop invariant buf <= inlen - 82;\nloop invariant buf <= inlen - 83;\nloop invariant buf <= inlen - 84;\nloop invariant buf <= inlen - 85;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= buf;\nloop invariant i2: buf < bufferlen;\nloop invariant i3: 0 <= in;\nloop invariant i4: in < inlen;\nloop invariant i5: buf <= buflim;\nloop invariant i6: buflim < bufferlen;\nloop invariant i7: buf < buflim + 1;\nloop invariant i8: buf <= in;\n\nloop invariant i10: buf <= inlen - 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\n\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= buf <= bufferlen;\nloop invariant 0 <= in <= inlen;\nloop invariant buf < buflim || buflim == bufferlen - 2;\nloop invariant in < inlen;\nloop invariant in == inlen || buf == buflim || buflim == bufferlen - 2;\nloop invariant buf < bufferlen - 2 || buflim == bufferlen - 2;\nloop invariant buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2;\nloop invariant buf < bufferlen - 2 || in == inlen || buflim == bufferlen - 2;\nloop invariant in == inlen || buf == buflim || buflim == bufferlen - 2;\nloop invariant buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || buflim == bufferlen - 2;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buflim == bufferlen - 2;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2;\nloop invariant in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= buf <= bufferlen;\nloop invariant i2: 0 <= in <= inlen;\nloop invariant i3: buf < buflim || buflim == bufferlen - 2;\nloop invariant i4: in < inlen;\nloop invariant i5: in == inlen || buf == buflim || buflim == bufferlen - 2;\nloop invariant i6: buf < bufferlen - 2 || buflim == bufferlen - 2;\nloop invariant i7: buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2;\nloop invariant i8: buf < bufferlen - 2 || in == inlen || buflim == bufferlen - 2;\nloop invariant i9: buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2;\nloop invariant i10: in == inlen || buf == buflim || buf < bufferlen - 2 || buflim == bufferlen - 2;\nloop invariant i11: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buflim == bufferlen - 2;\nloop invariant i12: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2;\nloop invariant i13: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2;\nloop invariant i14: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim;\nloop invariant i15: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2;\nloop invariant i16: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2;\nloop invariant i17: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim;\nloop invariant i18: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2;\nloop invariant i19: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2;\nloop invariant i20: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim;\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 39: unexpected token 'or'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= in <= inlen;\nloop invariant i2: 0 <= buf <= buflim;\nloop invariant i3: 0 <= buflim <= bufferlen;\nloop invariant i4: in <= buflim;\nloop invariant i5: buf + 2 <= bufferlen;\nloop invariant i6: buf <= buflim + 2;\nloop invariant i7: in <= bufferlen - 2;\nloop invariant i8: buflim <= bufferlen - 2;\nloop invariant i9: buf <= bufferlen - 2;\nloop invariant i10: buf <= in;\nloop invariant i11: 0 <= buflim <= bufferlen - 2;\nloop invariant i12: 0 <= buf < bufferlen;\nloop invariant i13: 0 <= in < inlen;\nloop invariant i14: buf < buflim or inlen == 0;\nloop invariant i15: in <= inlen;\nloop invariant i16: buf <= buflim or inlen == 0;\nloop invariant i17: unknown_int();\nloop invariant i18: buf < buflim or unknown_int() == 0;\nloop invariant i19: in <= inlen or unknown_int() == 0;\nloop invariant i20: buf <= buflim or unknown_int() == 0;\nloop invariant i21: unknown_int() == 0 or unknown_int() == 1;\nloop invariant i22: buf <= in + 1 <= bufferlen - 1;\nloop invariant i23: 0 <= buf;\nloop invariant i24: buf < bufferlen;\nloop invariant i25: 0 <= in;\nloop invariant i26: in < inlen;\nloop invariant i27: buf <= buflim;\nloop invariant i28: buflim < bufferlen;\nloop invariant i29: buf <= buflim + 1;\nloop invariant i30: buflim + 1 < bufferlen;\nloop invariant i31: buflim + 2 < bufferlen;\nloop invariant i32: buf <= buflim + 3;\nloop invariant i33: buflim + 3 < bufferlen;\nloop invariant i34: buf <= buflim + 4;\nloop invariant i35: buflim + 4 < bufferlen;\nloop invariant i36: buf <= buflim + 5;\nloop invariant i37: buflim + 5 < bufferlen;\nloop invariant i38: buf <= buflim + 6;\nloop invariant i39: buflim + 6 < bufferlen;\nloop invariant i40: buf <= buflim + 7;\nloop invariant i41: buflim + 7 < bufferlen;\nloop invariant i42: buf <= buflim + 8;\nloop invariant i43: buflim + 8 < bufferlen;\nloop invariant i44: buf <= buflim + 9;\nloop invariant i45: buflim + 9 < bufferlen;\nloop invariant i46: buf <= buflim + 10;\nloop invariant i47: buflim + 10 < bufferlen;\nloop invariant i48: buf <= buflim + 11;\nloop invariant i49: buflim + 11 < bufferlen;\nloop invariant i50: buf <= buflim + 12;\nloop invariant i51: buflim + 12 < bufferlen;\nloop invariant i52: buf <= buflim + 13;\nloop invariant i53: buflim + 13 < bufferlen;\nloop invariant i54: buf <= buflim + 14;\nloop invariant i55: buflim + 14 < bufferlen;\nloop invariant i56: buf <= buflim + 15;\nloop invariant i57: buflim + 15 < bufferlen;\nloop invariant i58: buf <= buflim + 16;\nloop invariant i59: buflim + 16 < bufferlen;\nloop invariant i60: buf <= buflim + 17;\nloop invariant i61: buflim + 17 < bufferlen;\nloop invariant i62: buf <= buflim + 18;\nloop invariant i63: buflim + 18 < bufferlen;\nloop invariant i64: buf <= buflim + 19;\nloop invariant i65: buflim + 19 < bufferlen;\nloop invariant i66: buf <= buflim + 20;\nloop invariant i67: buflim + 20 < bufferlen;\nloop invariant i68: buf <= buflim + 21;\nloop invariant i69: buflim + 21 < bufferlen;\nloop invariant i70: buf <= buflim + 22;\nloop invariant i71: buflim + 22 < bufferlen;\nloop invariant i72: buf <= buflim + 23;\nloop invariant i73: buflim + 23 < bufferlen;\nloop invariant i74: buf <= buflim + 24;\nloop invariant i75: buflim + 24 < bufferlen;\nloop invariant i76: buf <= buflim + 25;\nloop invariant i77: buflim + 25 < bufferlen;\nloop invariant i78: buf <= buflim + 26;\nloop invariant i79: buflim + 26 < bufferlen;\nloop invariant i80: buf <= buflim + 27;\nloop invariant i81: buflim + 27 < bufferlen;\nloop invariant i82: buf <= buflim + 28;\nloop invariant i83: buflim + 28 < bufferlen;\nloop invariant i84: buf <= buflim + 29;\nloop invariant i85: buflim + 29 < bufferlen;\nloop invariant i86: buf <= buflim + 30;\nloop invariant i87: buflim + 30 < bufferlen;\nloop invariant i88: buf <= buflim + 31;\nloop invariant i89: buflim + 31 < bufferlen;\nloop invariant i90: buf <= buflim + 32;\nloop invariant i91: buflim + 32 < bufferlen;\nloop invariant i92: buf <= buflim + 33;\nloop invariant i93: buflim + 33 < bufferlen;\nloop invariant i94: buf <= buflim + 34;\nloop invariant i95: buflim + 34 < bufferlen;\nloop invariant i96: buf <= buflim + 35;\nloop invariant i97: buflim + 35 < bufferlen;\nloop invariant i98: buf <= buflim + 36;\nloop invariant i99: buflim + 36 < bufferlen;\nloop invariant i100: buf <= buflim + 37;\nloop invariant i101: buflim + 37 < bufferlen;\nloop invariant i102: buf <= buflim + 38;\nloop invariant i103: buflim + 38 < bufferlen;\nloop invariant i104: buf <= buflim + 39;\nloop invariant i105: 0 <= buflim < bufferlen;\nloop invariant i106: buflim < inlen;\nloop invariant i107: buflim <= inlen - 2;\nloop invariant i108: 0 <= buf <= bufferlen;\nloop invariant i109: in + 2 <= bufferlen;\nloop invariant i110: buf <= in + 2;\nloop invariant i111: buf <= inlen + 2;\nloop invariant i112: in <= buflim + 2;\nloop invariant i113: in <= inlen + 2;\nloop invariant i114: in + 2 <= buflim + 2;\nloop invariant i115: in + 2 <= inlen + 2;\nloop invariant i116: 0 <= buflim;\nloop invariant i117: buflim <= inlen - 1;\nloop invariant i118: buf == buflim ==> !unknown_int();\nloop invariant i119: (buf == buflim && unknown_int()) ==> in < inlen;\nloop invariant i120: (buf == buflim && unknown_int()) ==> buf < bufferlen;\nloop invariant i121: 0 <= buf && buf <= bufferlen;\nloop invariant i122: 0 <= in && in <= inlen;\nloop invariant i123: buf == buflim || buf < buflim;\nloop invariant i124: buf <= buflim || buf > buflim;\nloop invariant i125: buf != buflim || buf < buflim;\nloop invariant i126: buf != buflim || buf > buflim;\nloop invariant i127: buf >= 0 || buf <= bufferlen;\nloop invariant i128: in >= 0 || in <= inlen;\nloop invariant i129: buf != buflim || buf == buflim;\nloop invariant i130: buf != buflim || buf != buflim;\nloop invariant i131: buf < buflim + 1;\nloop invariant i132: buf <= inlen - 1;\nloop invariant i133: buf <= inlen - 2;\nloop invariant i134: buf <= inlen - 3;\nloop invariant i135: buf <= inlen - 4;\nloop invariant i136: buf <= inlen - 5;\nloop invariant i137: buf <= inlen - 6;\nloop invariant i138: buf <= inlen - 7;\nloop invariant i139: buf <= inlen - 8;\nloop invariant i140: buf <= inlen - 9;\nloop invariant i141: buf <= inlen - 10;\nloop invariant i142: buf <= inlen - 11;\nloop invariant i143: buf <= inlen - 12;\nloop invariant i144: buf <= inlen - 13;\nloop invariant i145: buf <= inlen - 14;\nloop invariant i146: buf <= inlen - 15;\nloop invariant i147: buf <= inlen - 16;\nloop invariant i148: buf <= inlen - 17;\nloop invariant i149: buf <= inlen - 18;\nloop invariant i150: buf <= inlen - 19;\nloop invariant i151: buf <= inlen - 20;\nloop invariant i152: buf <= inlen - 21;\nloop invariant i153: buf <= inlen - 22;\nloop invariant i154: buf <= inlen - 23;\nloop invariant i155: buf <= inlen - 24;\nloop invariant i156: buf <= inlen - 25;\nloop invariant i157: buf <= inlen - 26;\nloop invariant i158: buf <= inlen - 27;\nloop invariant i159: buf <= inlen - 28;\nloop invariant i160: buf <= inlen - 29;\nloop invariant i161: buf <= inlen - 30;\nloop invariant i162: buf <= inlen - 31;\nloop invariant i163: buf <= inlen - 32;\nloop invariant i164: buf <= inlen - 33;\nloop invariant i165: buf <= inlen - 34;\nloop invariant i166: buf <= inlen - 35;\nloop invariant i167: buf <= inlen - 36;\nloop invariant i168: buf <= inlen - 37;\nloop invariant i169: buf <= inlen - 38;\nloop invariant i170: buf <= inlen - 39;\nloop invariant i171: buf <= inlen - 40;\nloop invariant i172: buf <= inlen - 41;\nloop invariant i173: buf <= inlen - 42;\nloop invariant i174: buf <= inlen - 43;\nloop invariant i175: buf <= inlen - 44;\nloop invariant i176: buf <= inlen - 45;\nloop invariant i177: buf <= inlen - 46;\nloop invariant i178: buf <= inlen - 47;\nloop invariant i179: buf <= inlen - 48;\nloop invariant i180: buf <= inlen - 49;\nloop invariant i181: buf <= inlen - 50;\nloop invariant i182: buf <= inlen - 51;\nloop invariant i183: buf <= inlen - 52;\nloop invariant i184: buf <= inlen - 53;\nloop invariant i185: buf <= inlen - 54;\nloop invariant i186: buf <= inlen - 55;\nloop invariant i187: buf <= inlen - 56;\nloop invariant i188: buf <= inlen - 57;\nloop invariant i189: buf <= inlen - 58;\nloop invariant i190: buf <= inlen - 59;\nloop invariant i191: buf <= inlen - 60;\nloop invariant i192: buf <= inlen - 61;\nloop invariant i193: buf <= inlen - 62;\nloop invariant i194: buf <= inlen - 63;\nloop invariant i195: buf <= inlen - 64;\nloop invariant i196: buf <= inlen - 65;\nloop invariant i197: buf <= inlen - 66;\nloop invariant i198: buf <= inlen - 67;\nloop invariant i199: buf <= inlen - 68;\nloop invariant i200: buf <= inlen - 69;\nloop invariant i201: buf <= inlen - 70;\nloop invariant i202: buf <= inlen - 71;\nloop invariant i203: buf <= inlen - 72;\nloop invariant i204: buf <= inlen - 73;\nloop invariant i205: buf <= inlen - 74;\nloop invariant i206: buf <= inlen - 75;\nloop invariant i207: buf <= inlen - 76;\nloop invariant i208: buf <= inlen - 77;\nloop invariant i209: buf <= inlen - 78;\nloop invariant i210: buf <= inlen - 79;\nloop invariant i211: buf <= inlen - 80;\nloop invariant i212: buf <= inlen - 81;\nloop invariant i213: buf <= inlen - 82;\nloop invariant i214: buf <= inlen - 83;\nloop invariant i215: buf <= inlen - 84;\nloop invariant i216: buf <= inlen - 85;\nloop invariant i217: buf < buflim || buflim == bufferlen - 2;\nloop invariant i218: in == inlen || buf == buflim || buflim == bufferlen - 2;\nloop invariant i219: buf < bufferlen - 2 || buflim == bufferlen - 2;\nloop invariant i220: buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2;\nloop invariant i221: buf < bufferlen - 2 || in == inlen || buflim == bufferlen - 2;\nloop invariant i222: buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2;\nloop invariant i223: in == inlen || buf == buflim || buf < bufferlen - 2 || buflim == bufferlen - 2;\nloop invariant i224: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buflim == bufferlen - 2;\nloop invariant i225: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2;\nloop invariant i226: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2;\nloop invariant i227: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim;\nloop invariant i228: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2;\nloop invariant i229: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2;\nloop invariant i230: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim;\nloop invariant i231: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2;\nloop invariant i232: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2;\nloop invariant i233: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim;\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
        "combined_annotation_num_solver_calls": 55,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint main ()\n{\n  int in;\n  int inlen = unknown_int();\n  int bufferlen = unknown_int();\n  int buf;\n  int buflim;\n\n  if(bufferlen >1);else goto END;\n  if(inlen > 0);else goto END;\n  if(bufferlen < inlen);else goto END;\n\n  buf = 0;\n  in = 0;\n  buflim = bufferlen - 2;\n\n  /*@\nloop invariant i1: 0 <= in <= inlen;\nloop invariant i2: 0 <= buf <= buflim;\nloop invariant i3: 0 <= buflim <= bufferlen;\n\nloop invariant i5: buf + 2 <= bufferlen;\nloop invariant i6: buf <= buflim + 2;\n\nloop invariant i8: buflim <= bufferlen - 2;\nloop invariant i9: buf <= bufferlen - 2;\nloop invariant i10: buf <= in;\nloop invariant i11: 0 <= buflim <= bufferlen - 2;\nloop invariant i12: 0 <= buf < bufferlen;\nloop invariant i13: 0 <= in < inlen;\n\nloop invariant i15: in <= inlen;\n\n\n\n\n\n\n\nloop invariant i23: 0 <= buf;\nloop invariant i24: buf < bufferlen;\nloop invariant i25: 0 <= in;\nloop invariant i26: in < inlen;\nloop invariant i27: buf <= buflim;\nloop invariant i28: buflim < bufferlen;\nloop invariant i29: buf <= buflim + 1;\nloop invariant i30: buflim + 1 < bufferlen;\n\nloop invariant i32: buf <= buflim + 3;\n\nloop invariant i34: buf <= buflim + 4;\n\nloop invariant i36: buf <= buflim + 5;\n\nloop invariant i38: buf <= buflim + 6;\n\nloop invariant i40: buf <= buflim + 7;\n\nloop invariant i42: buf <= buflim + 8;\n\nloop invariant i44: buf <= buflim + 9;\n\nloop invariant i46: buf <= buflim + 10;\n\nloop invariant i48: buf <= buflim + 11;\n\nloop invariant i50: buf <= buflim + 12;\n\nloop invariant i52: buf <= buflim + 13;\n\nloop invariant i54: buf <= buflim + 14;\n\nloop invariant i56: buf <= buflim + 15;\n\nloop invariant i58: buf <= buflim + 16;\n\nloop invariant i60: buf <= buflim + 17;\n\nloop invariant i62: buf <= buflim + 18;\n\nloop invariant i64: buf <= buflim + 19;\n\nloop invariant i66: buf <= buflim + 20;\n\nloop invariant i68: buf <= buflim + 21;\n\nloop invariant i70: buf <= buflim + 22;\n\nloop invariant i72: buf <= buflim + 23;\n\nloop invariant i74: buf <= buflim + 24;\n\nloop invariant i76: buf <= buflim + 25;\n\nloop invariant i78: buf <= buflim + 26;\n\nloop invariant i80: buf <= buflim + 27;\n\nloop invariant i82: buf <= buflim + 28;\n\nloop invariant i84: buf <= buflim + 29;\n\nloop invariant i86: buf <= buflim + 30;\n\nloop invariant i88: buf <= buflim + 31;\n\nloop invariant i90: buf <= buflim + 32;\n\nloop invariant i92: buf <= buflim + 33;\n\nloop invariant i94: buf <= buflim + 34;\n\nloop invariant i96: buf <= buflim + 35;\n\nloop invariant i98: buf <= buflim + 36;\n\nloop invariant i100: buf <= buflim + 37;\n\nloop invariant i102: buf <= buflim + 38;\n\nloop invariant i104: buf <= buflim + 39;\nloop invariant i105: 0 <= buflim < bufferlen;\nloop invariant i106: buflim < inlen;\nloop invariant i107: buflim <= inlen - 2;\nloop invariant i108: 0 <= buf <= bufferlen;\n\nloop invariant i110: buf <= in + 2;\nloop invariant i111: buf <= inlen + 2;\n\nloop invariant i113: in <= inlen + 2;\n\nloop invariant i115: in + 2 <= inlen + 2;\nloop invariant i116: 0 <= buflim;\nloop invariant i117: buflim <= inlen - 1;\n\n\n\nloop invariant i121: 0 <= buf && buf <= bufferlen;\nloop invariant i122: 0 <= in && in <= inlen;\nloop invariant i123: buf == buflim || buf < buflim;\nloop invariant i124: buf <= buflim || buf > buflim;\n\n\nloop invariant i127: buf >= 0 || buf <= bufferlen;\nloop invariant i128: in >= 0 || in <= inlen;\nloop invariant i129: buf != buflim || buf == buflim;\n\nloop invariant i131: buf < buflim + 1;\nloop invariant i132: buf <= inlen - 1;\nloop invariant i133: buf <= inlen - 2;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i217: buf < buflim || buflim == bufferlen - 2;\nloop invariant i218: in == inlen || buf == buflim || buflim == bufferlen - 2;\nloop invariant i219: buf < bufferlen - 2 || buflim == bufferlen - 2;\nloop invariant i220: buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2;\nloop invariant i221: buf < bufferlen - 2 || in == inlen || buflim == bufferlen - 2;\nloop invariant i222: buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2;\nloop invariant i223: in == inlen || buf == buflim || buf < bufferlen - 2 || buflim == bufferlen - 2;\nloop invariant i224: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buflim == bufferlen - 2;\nloop invariant i225: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2;\nloop invariant i226: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2;\nloop invariant i227: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim;\nloop invariant i228: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2;\nloop invariant i229: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2;\nloop invariant i230: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim;\nloop invariant i231: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2;\nloop invariant i232: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2;\nloop invariant i233: in == inlen || buf == buflim || buf < bufferlen - 2 || in == inlen || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim || buflim == bufferlen - 2 || buf < bufferlen - 2 || buf == buflim;\n*/\nwhile (unknown_int())\n  {\n    if (buf == buflim)\n      break;\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n \n    buf++;\nout:\n    in++;\n    {;\n//@ assert(0<=in);\n}\n\n    {;\n//@ assert(in<inlen);\n}\n\n  }\n\n    {;\n//@ assert(0<=buf);\n}\n\n    {;\n//@ assert(buf<bufferlen);\n}\n\n    buf++;\n\n  {;\n//@ assert(0<=buf);\n}\n\n  {;\n//@ assert(buf<bufferlen);\n}\n\n  buf++;\n\n END:  return 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c"
        ],
        "skipped": [],
        "total": 104,
        "success_count": 90,
        "failure_count": 14,
        "success_rate": 0.8653846153846154
    }
}