{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loops/trex03-2.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  while(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x1 <= (x1 + x2 + x3);\nloop invariant 0 <= x2 <= (x1 + x2 + x3);\nloop invariant 0 <= x3 <= (x1 + x2 + x3);\nloop invariant d1 = 1;\nloop invariant d2 = 1;\nloop invariant d3 = 1;\nloop invariant c1 = unknown_bool();\nloop invariant c2 = unknown_bool();\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 > 0 ==> x1 - d1 >= 0;\nloop invariant x2 > 0 ==> x2 - d2 >= 0;\nloop invariant x3 > 0 ==> x3 - d3 >= 0;\nloop invariant !(x1 > 0 && x2 > 0 && x3 > 0) ==> x1 == 0 || x2 == 0 || x3 == 0;\n*/\n```",
            "```\n/*@\nloop invariant x1 >= 0; loop invariant x2 >= 0; loop invariant x3 >= 0; loop invariant 0 <= d1; loop invariant 0 <= d2; loop invariant 0 <= d3; loop invariant c1 == 1 || c1 == 0; loop invariant c2 == 1 || c2 == 0; loop invariant c1 == 1 ==> x1 >= d1; loop invariant c1 == 1 ==> x1 < d1 ==> x1 == 0; loop invariant c2 == 1 ==> x2 >= d2; loop invariant c2 == 1 ==> x2 < d2 ==> x2 == 0; loop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 == 0 && x2 == 0 && x3 == 0; loop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> c1 == 0 && c2 == 0; loop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> d1 == 0 && d2 == 0 && d3 == 0; loop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> c1 == 1 && c2 == 1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x1 <= d1;\nloop invariant 1 <= x2 <= d2;\nloop invariant 1 <= x3 <= d3;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 >= d1 * (1 + (unknown_uint() - 1) * unknown_uint() / 2);\nloop invariant x2 >= d2 * (1 + (unknown_uint() - 1) * unknown_uint() / 2);\nloop invariant x3 >= d3 * (1 + (unknown_uint() - 1) * unknown_uint() / 2);\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 == 0 || x2 == 0 || x3 == 0;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant 1 <= x1 <= d1;\nloop invariant 1 <= x2 <= d2;\nloop invariant 1 <= x3 <= d3;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 >= d1 * (1 + (unknown_uint() - 1) * unknown_uint() / 2);\nloop invariant x2 >= d2 * (1 + (unknown_uint() - 1) * unknown_uint() / 2);\nloop invariant x3 >= d3 * (1 + (unknown_uint() - 1) * unknown_uint() / 2);\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 == 0 || x2 == 0 || x3 == 0;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x1 <= unknown_uint();\nloop invariant 1 <= x2 <= unknown_uint();\nloop invariant 1 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant unknown_bool() ==> c1;\nloop invariant unknown_bool() ==> c2;\nloop invariant (x1>0 && x2>0 && x3>0) ==> (x1-d1>=0 && x2-d2>=0 && x3-d3>=0);\nloop invariant !(x1>0 && x2>0 && x3>0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant c1 ==> (x1-d1>=0);\nloop invariant c2 ==> (x2-d2>=0);\nloop invariant !(c1 || c2) ==> (x3-d3>=0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= MAX_UINT - d1;\nloop invariant 0 <= x2 <= MAX_UINT - d2;\nloop invariant 0 <= x3 <= MAX_UINT - d3;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant (c1 && c2) ==> x1 == x1 - d1;\nloop invariant (c1 && c2) ==> x2 == x2 - d2;\nloop invariant (c1 && c2) ==> x3 == x3 - d3;\nloop invariant (!c1 && !c2) ==> x1 == x1;\nloop invariant (!c1 && !c2) ==> x2 == x2;\nloop invariant (!c1 && !c2) ==> x3 == x3;\nloop invariant (c1 || c2) ==> x1 >= 0;\nloop invariant (c1 || c2) ==> x2 >= 0;\nloop invariant (c1 || c2) ==> x3 >= 0;\nloop invariant (c1 && c2) ==> d1 > 0;\nloop invariant (c1 && c2) ==> d2 > 0;\nloop invariant (c1 && c2) ==> d3 > 0;\nloop invariant (!c1 && !c2) ==> d1 < MAX_UINT;\nloop invariant (!c1 && !c2) ==> d2 < MAX_UINT;\nloop invariant (!c1 && !c2) ==> d3 < MAX_UINT;\nloop invariant (c1 || c2) ==> c1 || c2;\nloop invariant (c1 || c2) ==> d1 >= d1;\nloop invariant (c1 || c2) ==> d2 >= d2;\nloop invariant (c1 || c2) ==> d3 >= d3;\nloop invariant (c1 || c2) ==> x1 >= x1 - d1;\nloop invariant (c1 || c2) ==> x2 >= x2 - d2;\nloop invariant (c1 || c2) ==> x3 >= x3 - d3;\nloop invariant (c1 || c2) ==> x1 <= MAX_UINT - d1;\nloop invariant (c1 || c2) ==> x2 <= MAX_UINT - d2;\nloop invariant (c1 || c2) ==> x3 <= MAX_UINT - d3;\nloop invariant (c1 || c2) ==> d1 <= MAX_UINT;\nloop invariant (c1 || c2) ==> d2 <= MAX_UINT;\nloop invariant (c1 || c2) ==> d3 <= MAX_UINT;\nloop invariant (c1 || c2) ==> c1 || c2;\nloop invariant (c1 || c2) ==> d1 >= d1;\nloop invariant (c1 || c2) ==> d2 >= d2;\nloop invariant (c1 || c2) ==> d3 >= d3;\nloop invariant (c1 || c2) ==> x1 >= 0;\nloop invariant (c1 || c2) ==> x2 >= 0;\nloop invariant (c1 || c2) ==> x3 >= 0;\nloop invariant (c1 || c2) ==> x1 <= MAX_UINT;\nloop invariant (c1 || c2) ==> x2 <= MAX_UINT;\nloop invariant (c1 || c2) ==> x3 <= MAX_UINT;\nloop invariant (c1 || c2) ==> d1 >= 1;\nloop invariant (c1 || c2) ==> d2 >= 1;\nloop invariant (c1 || c2) ==> d3 >= 1;\nloop invariant (c1 || c2) ==> d1 <= MAX_UINT;\nloop invariant (c1 || c2) ==> d2 <= MAX_UINT;\nloop invariant (c1 || c2) ==> d3 <= MAX_UINT;\nloop invariant (c1 || c2) ==> c1 || c2;\nloop invariant (c1 || c2) ==> d1 >= d1;\nloop invariant (c1 || c2) ==> d2 >= d2;\nloop invariant (c1 || c2) ==> d3 >= d3;\nloop invariant (c1 || c2) ==> x1 >= 0;\nloop invariant (c1 || c2) ==> x2 >= 0;\nloop invariant (c1 || c2) ==> x3 >= 0;\nloop invariant (c1 || c2) ==> x1 <= MAX_UINT;\nloop invariant (c1 || c2) ==> x2 <= MAX_UINT;\nloop invariant (c1 || c2) ==> x3 <= MAX_UINT;\nloop invariant (c1 || c2) ==> d1 >= 1;\nloop invariant (c1 || c2) ==> d2 >= 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= 4294967295;\nloop invariant 0 <= x2 <= 4294967295;\nloop invariant 0 <= x3 <= 4294967295;\nloop invariant 0 <= d1 <= 4294967295;\nloop invariant 0 <= d2 <= 4294967295;\nloop invariant 0 <= d3 <= 4294967295;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= x2 + d2;\nloop invariant x1 >= x3 + d3;\nloop invariant x2 >= x1 + d1;\nloop invariant x2 >= x3 + d3;\nloop invariant x3 >= x1 + d1;\nloop invariant x3 >= x2 + d2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1;\nloop invariant 0 <= x2;\nloop invariant 0 <= x3;\nloop invariant 0 <= d1;\nloop invariant d1 <= x1;\nloop invariant 0 <= d2;\nloop invariant d2 <= x2;\nloop invariant 0 <= d3;\nloop invariant d3 <= x3;\nloop invariant c1 == c1;\nloop invariant c2 == c2;\nloop invariant c1 || c2;\n*/\n```",
            "```\n/*@\nloop invariant 1 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 2 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 3 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 4 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 5 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 6 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 7 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 8 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 9 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 10 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 11 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 12 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 13 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 14 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 15 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 16 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\n*/\n```",
            "```\n/*@\nloop invariant ( x1 >= 0 && x2 >= 0 && x3 >= 0 );\nloop invariant ( d1 == 1 || d2 == 1 || d3 == 1 );\nloop invariant ( c1 == 1 || c2 == 1 );\nloop invariant ( x1 > 0 || x2 > 0 || x3 > 0 );\nloop invariant ( x1-d1 >= 0 || c1 == 0 );\nloop invariant ( x2-d2 >= 0 || c2 == 0 );\nloop invariant ( x3-d3 >= 0 || c2 == 0 );\nloop invariant ( x1 == 0 || x2 == 0 || x3 == 0 );\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 0 <= d1 <= unknown_uint();\nloop invariant 0 <= d2 <= unknown_uint();\nloop invariant 0 <= d3 <= unknown_uint();\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant if (c1) then (x1 >= d1) else if (c2) then (x2 >= d2) else (x3 >= d3);\nloop invariant if (c1) then (x1 <= unknown_uint()) else if (c2) then (x2 <= unknown_uint()) else (x3 <= unknown_uint());\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\n*/\n```",
            "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 == 1 || c1 == 0;\nloop invariant c2 == 1 || c2 == 0;\nloop invariant (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant x1 >= d1;\nloop invariant x2 >= d2;\nloop invariant x3 >= d3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint(), x2 <= unknown_uint(), x3 <= unknown_uint();\nloop invariant 1 <= d1 <= 1, 1 <= d2 <= 1, 1 <= d3 <= 1;\nloop invariant true ==> c1 || c2;\nloop invariant true ==> !(c1 && c2);\nloop invariant true ==> (c1 ==> x1 >= d1);\nloop invariant true ==> (c2 ==> x2 >= d2);\nloop invariant true ==> !(c1 && c2);\nloop invariant true ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\n*/\n```",
            "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x3 <= MAX_UINT;\nloop invariant x1 >= MIN_UINT;\nloop invariant x2 >= MIN_UINT;\nloop invariant x3 >= MIN_UINT;\nloop invariant d1 > 0;\nloop invariant d2 > 0;\nloop invariant d3 > 0;\nloop invariant c1 == true | c1 == false;\nloop invariant c2 == true | c2 == false;\nloop invariant c1 ==> x1 <= x1 - d1;\nloop invariant c2 ==> x2 <= x2 - d2;\nloop invariant true ==> x3 <= x3 - d3;\nloop invariant c1 ==> x1 >= x1 - d1;\nloop invariant c2 ==> x2 >= x2 - d2;\nloop invariant true ==> x3 >= x3 - d3;\nloop invariant true ==> x1 >= 0;\nloop invariant true ==> x2 >= 0;\nloop invariant true ==> x3 >= 0;\nloop invariant true ==> x1 <= x2;\nloop invariant true ==> x2 <= x3;\nloop invariant true ==> x3 <= MAX_UINT;\nloop invariant true ==> x1 >= MIN_UINT;\nloop invariant true ==> x2 >= MIN_UINT;\nloop invariant true ==> x3 >= MIN_UINT;\nloop invariant true ==> d1 > 0;\nloop invariant true ==> d2 > 0;\nloop invariant true ==> d3 > 0;\nloop invariant true ==> c1 == true | c1 == false;\nloop invariant true ==> c2 == true | c2 == false;\nloop invariant x1 == 0 ==> x2 == 0 & x3 == 0;\nloop invariant x2 == 0 ==> x3 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x1 <= 4294967295;\nloop invariant 0 <= x2 <= 4294967295;\nloop invariant 0 <= x3 <= 4294967295;\nloop invariant 1 <= d1 <= 4294967295;\nloop invariant 1 <= d2 <= 4294967295;\nloop invariant 1 <= d3 <= 4294967295;\nloop invariant c1==true || c2==true || c1==false || c2==false;\nloop invariant (x1>0 || x2>0 || x3>0) ==> (x1-d1>0 || x2-d2>0 || x3-d3>0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (c1==false && c2==false);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= (x1 + x2 + x3);\nloop invariant 0 <= x2 <= (x1 + x2 + x3);\nloop invariant 0 <= x3 <= (x1 + x2 + x3);\nloop invariant d1 = 1;\nloop invariant d2 = 1;\nloop invariant d3 = 1;\nloop invariant c1 = unknown_bool();\nloop invariant c2 = unknown_bool();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: 0 <= x1 <= (x1 + x2 + x3);\nloop invariant i2: 0 <= x2 <= (x1 + x2 + x3);\nloop invariant i3: 0 <= x3 <= (x1 + x2 + x3);\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant d1 >= 0;\nloop invariant d2 >= 0;\nloop invariant d3 >= 0;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 > 0 ==> x1 - d1 >= 0;\nloop invariant x2 > 0 ==> x2 - d2 >= 0;\nloop invariant x3 > 0 ==> x3 - d3 >= 0;\nloop invariant !(x1 > 0 && x2 > 0 && x3 > 0) ==> x1 == 0 || x2 == 0 || x3 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\nloop invariant i4: d1 >= 0;\nloop invariant i5: d2 >= 0;\nloop invariant i6: d3 >= 0;\n\n\n\n\n\nloop invariant i12: !(x1 > 0 && x2 > 0 && x3 > 0) ==> x1 == 0 || x2 == 0 || x3 == 0;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant x1 >= 0; loop invariant x2 >= 0; loop invariant x3 >= 0; loop invariant 0 <= d1; loop invariant 0 <= d2; loop invariant 0 <= d3; loop invariant c1 == 1 || c1 == 0; loop invariant c2 == 1 || c2 == 0; loop invariant c1 == 1 ==> x1 >= d1; loop invariant c1 == 1 ==> x1 < d1 ==> x1 == 0; loop invariant c2 == 1 ==> x2 >= d2; loop invariant c2 == 1 ==> x2 < d2 ==> x2 == 0; loop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 == 0 && x2 == 0 && x3 == 0; loop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> c1 == 0 && c2 == 0; loop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> d1 == 0 && d2 == 0 && d3 == 0; loop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> c1 == 1 && c2 == 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: x1 >= 0; loop invariant x2 >= 0; loop invariant x3 >= 0; loop invariant 0 <= d1; loop invariant 0 <= d2; loop invariant 0 <= d3; loop invariant c1 == 1 || c1 == 0; loop invariant c2 == 1 || c2 == 0; loop invariant c1 == 1 ==> x1 >= d1; loop invariant c1 == 1 ==> x1 < d1 ==> x1 == 0; loop invariant c2 == 1 ==> x2 >= d2; loop invariant c2 == 1 ==> x2 < d2 ==> x2 == 0; loop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 == 0 && x2 == 0 && x3 == 0; loop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> c1 == 0 && c2 == 0; loop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> d1 == 0 && d2 == 0 && d3 == 0; loop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> c1 == 1 && c2 == 1;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 1 <= x1 <= d1;\nloop invariant 1 <= x2 <= d2;\nloop invariant 1 <= x3 <= d3;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 >= d1 * (1 + (unknown_uint() - 1) * unknown_uint() / 2);\nloop invariant x2 >= d2 * (1 + (unknown_uint() - 1) * unknown_uint() / 2);\nloop invariant x3 >= d3 * (1 + (unknown_uint() - 1) * unknown_uint() / 2);\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 == 0 || x2 == 0 || x3 == 0;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant 1 <= x1 <= d1;\nloop invariant 1 <= x2 <= d2;\nloop invariant 1 <= x3 <= d3;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 >= d1 * (1 + (unknown_uint() - 1) * unknown_uint() / 2);\nloop invariant x2 >= d2 * (1 + (unknown_uint() - 1) * unknown_uint() / 2);\nloop invariant x3 >= d3 * (1 + (unknown_uint() - 1) * unknown_uint() / 2);\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant x1 == 0 || x2 == 0 || x3 == 0;\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\n\n\n\n\nloop invariant i9: x1 >= 0;\nloop invariant i10: x2 >= 0;\nloop invariant i11: x3 >= 0;\nloop invariant i12: d1 >= 1;\nloop invariant i13: d2 >= 1;\nloop invariant i14: d3 >= 1;\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 1 <= x1 <= unknown_uint();\nloop invariant 1 <= x2 <= unknown_uint();\nloop invariant 1 <= x3 <= unknown_uint();\nloop invariant 1 <= d1 <= unknown_uint();\nloop invariant 1 <= d2 <= unknown_uint();\nloop invariant 1 <= d3 <= unknown_uint();\nloop invariant unknown_bool() ==> c1;\nloop invariant unknown_bool() ==> c2;\nloop invariant (x1>0 && x2>0 && x3>0) ==> (x1-d1>=0 && x2-d2>=0 && x3-d3>=0);\nloop invariant !(x1>0 && x2>0 && x3>0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant c1 ==> (x1-d1>=0);\nloop invariant c2 ==> (x2-d2>=0);\nloop invariant !(c1 || c2) ==> (x3-d3>=0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\n\n\n\n\n\nloop invariant i10: !(x1>0 && x2>0 && x3>0) ==> (x1==0 || x2==0 || x3==0);\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 18,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= MAX_UINT - d1;\nloop invariant 0 <= x2 <= MAX_UINT - d2;\nloop invariant 0 <= x3 <= MAX_UINT - d3;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant (c1 && c2) ==> x1 == x1 - d1;\nloop invariant (c1 && c2) ==> x2 == x2 - d2;\nloop invariant (c1 && c2) ==> x3 == x3 - d3;\nloop invariant (!c1 && !c2) ==> x1 == x1;\nloop invariant (!c1 && !c2) ==> x2 == x2;\nloop invariant (!c1 && !c2) ==> x3 == x3;\nloop invariant (c1 || c2) ==> x1 >= 0;\nloop invariant (c1 || c2) ==> x2 >= 0;\nloop invariant (c1 || c2) ==> x3 >= 0;\nloop invariant (c1 && c2) ==> d1 > 0;\nloop invariant (c1 && c2) ==> d2 > 0;\nloop invariant (c1 && c2) ==> d3 > 0;\nloop invariant (!c1 && !c2) ==> d1 < MAX_UINT;\nloop invariant (!c1 && !c2) ==> d2 < MAX_UINT;\nloop invariant (!c1 && !c2) ==> d3 < MAX_UINT;\nloop invariant (c1 || c2) ==> c1 || c2;\nloop invariant (c1 || c2) ==> d1 >= d1;\nloop invariant (c1 || c2) ==> d2 >= d2;\nloop invariant (c1 || c2) ==> d3 >= d3;\nloop invariant (c1 || c2) ==> x1 >= x1 - d1;\nloop invariant (c1 || c2) ==> x2 >= x2 - d2;\nloop invariant (c1 || c2) ==> x3 >= x3 - d3;\nloop invariant (c1 || c2) ==> x1 <= MAX_UINT - d1;\nloop invariant (c1 || c2) ==> x2 <= MAX_UINT - d2;\nloop invariant (c1 || c2) ==> x3 <= MAX_UINT - d3;\nloop invariant (c1 || c2) ==> d1 <= MAX_UINT;\nloop invariant (c1 || c2) ==> d2 <= MAX_UINT;\nloop invariant (c1 || c2) ==> d3 <= MAX_UINT;\nloop invariant (c1 || c2) ==> c1 || c2;\nloop invariant (c1 || c2) ==> d1 >= d1;\nloop invariant (c1 || c2) ==> d2 >= d2;\nloop invariant (c1 || c2) ==> d3 >= d3;\nloop invariant (c1 || c2) ==> x1 >= 0;\nloop invariant (c1 || c2) ==> x2 >= 0;\nloop invariant (c1 || c2) ==> x3 >= 0;\nloop invariant (c1 || c2) ==> x1 <= MAX_UINT;\nloop invariant (c1 || c2) ==> x2 <= MAX_UINT;\nloop invariant (c1 || c2) ==> x3 <= MAX_UINT;\nloop invariant (c1 || c2) ==> d1 >= 1;\nloop invariant (c1 || c2) ==> d2 >= 1;\nloop invariant (c1 || c2) ==> d3 >= 1;\nloop invariant (c1 || c2) ==> d1 <= MAX_UINT;\nloop invariant (c1 || c2) ==> d2 <= MAX_UINT;\nloop invariant (c1 || c2) ==> d3 <= MAX_UINT;\nloop invariant (c1 || c2) ==> c1 || c2;\nloop invariant (c1 || c2) ==> d1 >= d1;\nloop invariant (c1 || c2) ==> d2 >= d2;\nloop invariant (c1 || c2) ==> d3 >= d3;\nloop invariant (c1 || c2) ==> x1 >= 0;\nloop invariant (c1 || c2) ==> x2 >= 0;\nloop invariant (c1 || c2) ==> x3 >= 0;\nloop invariant (c1 || c2) ==> x1 <= MAX_UINT;\nloop invariant (c1 || c2) ==> x2 <= MAX_UINT;\nloop invariant (c1 || c2) ==> x3 <= MAX_UINT;\nloop invariant (c1 || c2) ==> d1 >= 1;\nloop invariant (c1 || c2) ==> d2 >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\nloop invariant i4: d1 >= 1;\nloop invariant i5: d2 >= 1;\nloop invariant i6: d3 >= 1;\n\n\n\nloop invariant i10: (!c1 && !c2) ==> x1 == x1;\nloop invariant i11: (!c1 && !c2) ==> x2 == x2;\nloop invariant i12: (!c1 && !c2) ==> x3 == x3;\nloop invariant i13: (c1 || c2) ==> x1 >= 0;\nloop invariant i14: (c1 || c2) ==> x2 >= 0;\nloop invariant i15: (c1 || c2) ==> x3 >= 0;\nloop invariant i16: (c1 && c2) ==> d1 > 0;\nloop invariant i17: (c1 && c2) ==> d2 > 0;\nloop invariant i18: (c1 && c2) ==> d3 > 0;\n\n\n\nloop invariant i22: (c1 || c2) ==> c1 || c2;\nloop invariant i23: (c1 || c2) ==> d1 >= d1;\nloop invariant i24: (c1 || c2) ==> d2 >= d2;\nloop invariant i25: (c1 || c2) ==> d3 >= d3;\nloop invariant i26: (c1 || c2) ==> x1 >= x1 - d1;\nloop invariant i27: (c1 || c2) ==> x2 >= x2 - d2;\nloop invariant i28: (c1 || c2) ==> x3 >= x3 - d3;\n\n\n\n\n\n\n\n\n\nloop invariant i38: (c1 || c2) ==> d1 >= 1;\nloop invariant i39: (c1 || c2) ==> d2 >= 1;\nloop invariant i40: (c1 || c2) ==> d3 >= 1;\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= 4294967295;\nloop invariant 0 <= x2 <= 4294967295;\nloop invariant 0 <= x3 <= 4294967295;\nloop invariant 0 <= d1 <= 4294967295;\nloop invariant 0 <= d2 <= 4294967295;\nloop invariant 0 <= d3 <= 4294967295;\nloop invariant c1 == 0 || c1 == 1;\nloop invariant c2 == 0 || c2 == 1;\nloop invariant x1 >= x2 + d2;\nloop invariant x1 >= x3 + d3;\nloop invariant x2 >= x1 + d1;\nloop invariant x2 >= x3 + d3;\nloop invariant x3 >= x1 + d1;\nloop invariant x3 >= x2 + d2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: 0 <= x1 <= 4294967295;\nloop invariant i2: 0 <= x2 <= 4294967295;\nloop invariant i3: 0 <= x3 <= 4294967295;\nloop invariant i4: 0 <= d1 <= 4294967295;\nloop invariant i5: 0 <= d2 <= 4294967295;\nloop invariant i6: 0 <= d3 <= 4294967295;\nloop invariant i7: c1 == 0 || c1 == 1;\nloop invariant i8: c2 == 0 || c2 == 1;\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x1;\nloop invariant 0 <= x2;\nloop invariant 0 <= x3;\nloop invariant 0 <= d1;\nloop invariant d1 <= x1;\nloop invariant 0 <= d2;\nloop invariant d2 <= x2;\nloop invariant 0 <= d3;\nloop invariant d3 <= x3;\nloop invariant c1 == c1;\nloop invariant c2 == c2;\nloop invariant c1 || c2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: 0 <= x1;\nloop invariant i2: 0 <= x2;\nloop invariant i3: 0 <= x3;\nloop invariant i4: 0 <= d1;\n\nloop invariant i6: 0 <= d2;\n\nloop invariant i8: 0 <= d3;\n\nloop invariant i10: c1 == c1;\nloop invariant i11: c2 == c2;\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 16,
                "annotations": "```\n/*@\nloop invariant 1 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 2 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 3 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 4 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 5 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 6 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 7 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 8 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 9 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 10 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 11 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 12 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 13 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 14 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 15 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant 16 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant ( x1 >= 0 && x2 >= 0 && x3 >= 0 );\nloop invariant ( d1 == 1 || d2 == 1 || d3 == 1 );\nloop invariant ( c1 == 1 || c2 == 1 );\nloop invariant ( x1 > 0 || x2 > 0 || x3 > 0 );\nloop invariant ( x1-d1 >= 0 || c1 == 0 );\nloop invariant ( x2-d2 >= 0 || c2 == 0 );\nloop invariant ( x3-d3 >= 0 || c2 == 0 );\nloop invariant ( x1 == 0 || x2 == 0 || x3 == 0 );\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: ( x1 >= 0 && x2 >= 0 && x3 >= 0 );\nloop invariant i2: ( d1 == 1 || d2 == 1 || d3 == 1 );\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 11,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint();\nloop invariant 0 <= x2 <= unknown_uint();\nloop invariant 0 <= x3 <= unknown_uint();\nloop invariant 0 <= d1 <= unknown_uint();\nloop invariant 0 <= d2 <= unknown_uint();\nloop invariant 0 <= d3 <= unknown_uint();\nloop invariant c1 == unknown_bool();\nloop invariant c2 == unknown_bool();\nloop invariant if (c1) then (x1 >= d1) else if (c2) then (x2 >= d2) else (x3 >= d3);\nloop invariant if (c1) then (x1 <= unknown_uint()) else if (c2) then (x2 <= unknown_uint()) else (x3 <= unknown_uint());\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant d1 >= 1;\nloop invariant d2 >= 1;\nloop invariant d3 >= 1;\nloop invariant c1 == 1 || c1 == 0;\nloop invariant c2 == 1 || c2 == 0;\nloop invariant (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant x1 >= d1;\nloop invariant x2 >= d2;\nloop invariant x3 >= d3;\nloop invariant d1 <= x1;\nloop invariant d2 <= x2;\nloop invariant d3 <= x3;\nloop invariant (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: x1 >= 0;\nloop invariant i2: x2 >= 0;\nloop invariant i3: x3 >= 0;\nloop invariant i4: d1 >= 1;\nloop invariant i5: d2 >= 1;\nloop invariant i6: d3 >= 1;\nloop invariant i7: c1 == 1 || c1 == 0;\nloop invariant i8: c2 == 1 || c2 == 0;\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= unknown_uint(), x2 <= unknown_uint(), x3 <= unknown_uint();\nloop invariant 1 <= d1 <= 1, 1 <= d2 <= 1, 1 <= d3 <= 1;\nloop invariant true ==> c1 || c2;\nloop invariant true ==> !(c1 && c2);\nloop invariant true ==> (c1 ==> x1 >= d1);\nloop invariant true ==> (c2 ==> x2 >= d2);\nloop invariant true ==> !(c1 && c2);\nloop invariant true ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 24,
                "annotations": "```\n/*@\nloop invariant x1 >= 0;\nloop invariant x2 >= 0;\nloop invariant x3 >= 0;\nloop invariant x1 <= x2;\nloop invariant x2 <= x3;\nloop invariant x3 <= MAX_UINT;\nloop invariant x1 >= MIN_UINT;\nloop invariant x2 >= MIN_UINT;\nloop invariant x3 >= MIN_UINT;\nloop invariant d1 > 0;\nloop invariant d2 > 0;\nloop invariant d3 > 0;\nloop invariant c1 == true | c1 == false;\nloop invariant c2 == true | c2 == false;\nloop invariant c1 ==> x1 <= x1 - d1;\nloop invariant c2 ==> x2 <= x2 - d2;\nloop invariant true ==> x3 <= x3 - d3;\nloop invariant c1 ==> x1 >= x1 - d1;\nloop invariant c2 ==> x2 >= x2 - d2;\nloop invariant true ==> x3 >= x3 - d3;\nloop invariant true ==> x1 >= 0;\nloop invariant true ==> x2 >= 0;\nloop invariant true ==> x3 >= 0;\nloop invariant true ==> x1 <= x2;\nloop invariant true ==> x2 <= x3;\nloop invariant true ==> x3 <= MAX_UINT;\nloop invariant true ==> x1 >= MIN_UINT;\nloop invariant true ==> x2 >= MIN_UINT;\nloop invariant true ==> x3 >= MIN_UINT;\nloop invariant true ==> d1 > 0;\nloop invariant true ==> d2 > 0;\nloop invariant true ==> d3 > 0;\nloop invariant true ==> c1 == true | c1 == false;\nloop invariant true ==> c2 == true | c2 == false;\nloop invariant x1 == 0 ==> x2 == 0 & x3 == 0;\nloop invariant x2 == 0 ==> x3 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: x1 >= 0;\nloop invariant i2: x2 >= 0;\nloop invariant i3: x3 >= 0;\n\n\n\n\n\n\nloop invariant i10: d1 > 0;\nloop invariant i11: d2 > 0;\nloop invariant i12: d3 > 0;\n\n\n\n\n\nloop invariant i18: c1 ==> x1 >= x1 - d1;\nloop invariant i19: c2 ==> x2 >= x2 - d2;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x1 <= 4294967295;\nloop invariant 0 <= x2 <= 4294967295;\nloop invariant 0 <= x3 <= 4294967295;\nloop invariant 1 <= d1 <= 4294967295;\nloop invariant 1 <= d2 <= 4294967295;\nloop invariant 1 <= d3 <= 4294967295;\nloop invariant c1==true || c2==true || c1==false || c2==false;\nloop invariant (x1>0 || x2>0 || x3>0) ==> (x1-d1>0 || x2-d2>0 || x3-d3>0);\nloop invariant (x1==0 || x2==0 || x3==0) ==> (c1==false && c2==false);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: 0 <= x1 <= 4294967295;\nloop invariant i2: 0 <= x2 <= 4294967295;\nloop invariant i3: 0 <= x3 <= 4294967295;\nloop invariant i4: 1 <= d1 <= 4294967295;\nloop invariant i5: 1 <= d2 <= 4294967295;\nloop invariant i6: 1 <= d3 <= 4294967295;\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 21: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: 0 <= x1 <= (x1 + x2 + x3);\nloop invariant i2: 0 <= x2 <= (x1 + x2 + x3);\nloop invariant i3: 0 <= x3 <= (x1 + x2 + x3);\nloop invariant i4: d1 = 1;\nloop invariant i5: d2 = 1;\nloop invariant i6: d3 = 1;\nloop invariant i7: c1 = unknown_bool();\nloop invariant i8: c2 = unknown_bool();\nloop invariant i9: 0 <= x1 <= unknown_uint();\nloop invariant i10: 0 <= x2 <= unknown_uint();\nloop invariant i11: 0 <= x3 <= unknown_uint();\nloop invariant i12: d1 >= 0;\nloop invariant i13: d2 >= 0;\nloop invariant i14: d3 >= 0;\nloop invariant i15: c1 == unknown_bool();\nloop invariant i16: c2 == unknown_bool();\nloop invariant i17: x1 > 0 ==> x1 - d1 >= 0;\nloop invariant i18: x2 > 0 ==> x2 - d2 >= 0;\nloop invariant i19: x3 > 0 ==> x3 - d3 >= 0;\nloop invariant i20: !(x1 > 0 && x2 > 0 && x3 > 0) ==> x1 == 0 || x2 == 0 || x3 == 0;\nloop invariant i21: x1 >= 0; loop invariant x2 >= 0; loop invariant x3 >= 0; loop invariant 0 <= d1; loop invariant 0 <= d2; loop invariant 0 <= d3; loop invariant c1 == 1 || c1 == 0; loop invariant c2 == 1 || c2 == 0; loop invariant c1 == 1 ==> x1 >= d1; loop invariant c1 == 1 ==> x1 < d1 ==> x1 == 0; loop invariant c2 == 1 ==> x2 >= d2; loop invariant c2 == 1 ==> x2 < d2 ==> x2 == 0; loop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 == 0 && x2 == 0 && x3 == 0; loop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> c1 == 0 && c2 == 0; loop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> d1 == 0 && d2 == 0 && d3 == 0; loop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> c1 == 1 && c2 == 1;\nloop invariant i22: 1 <= x1 <= d1;\nloop invariant i23: 1 <= x2 <= d2;\nloop invariant i24: 1 <= x3 <= d3;\nloop invariant i25: x1 >= d1 * (1 + (unknown_uint() - 1) * unknown_uint() / 2);\nloop invariant i26: x2 >= d2 * (1 + (unknown_uint() - 1) * unknown_uint() / 2);\nloop invariant i27: x3 >= d3 * (1 + (unknown_uint() - 1) * unknown_uint() / 2);\nloop invariant i28: x1 >= 0;\nloop invariant i29: x2 >= 0;\nloop invariant i30: x3 >= 0;\nloop invariant i31: d1 >= 1;\nloop invariant i32: d2 >= 1;\nloop invariant i33: d3 >= 1;\nloop invariant i34: x1 == 0 || x2 == 0 || x3 == 0;\nloop invariant i35: 1 <= x1 <= unknown_uint();\nloop invariant i36: 1 <= x2 <= unknown_uint();\nloop invariant i37: 1 <= x3 <= unknown_uint();\nloop invariant i38: 1 <= d1 <= unknown_uint();\nloop invariant i39: 1 <= d2 <= unknown_uint();\nloop invariant i40: 1 <= d3 <= unknown_uint();\nloop invariant i41: unknown_bool() ==> c1;\nloop invariant i42: unknown_bool() ==> c2;\nloop invariant i43: (x1>0 && x2>0 && x3>0) ==> (x1-d1>=0 && x2-d2>=0 && x3-d3>=0);\nloop invariant i44: !(x1>0 && x2>0 && x3>0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant i45: c1 ==> (x1-d1>=0);\nloop invariant i46: c2 ==> (x2-d2>=0);\nloop invariant i47: !(c1 || c2) ==> (x3-d3>=0);\nloop invariant i48: 0 <= x1 <= MAX_UINT - d1;\nloop invariant i49: 0 <= x2 <= MAX_UINT - d2;\nloop invariant i50: 0 <= x3 <= MAX_UINT - d3;\nloop invariant i51: (c1 && c2) ==> x1 == x1 - d1;\nloop invariant i52: (c1 && c2) ==> x2 == x2 - d2;\nloop invariant i53: (c1 && c2) ==> x3 == x3 - d3;\nloop invariant i54: (!c1 && !c2) ==> x1 == x1;\nloop invariant i55: (!c1 && !c2) ==> x2 == x2;\nloop invariant i56: (!c1 && !c2) ==> x3 == x3;\nloop invariant i57: (c1 || c2) ==> x1 >= 0;\nloop invariant i58: (c1 || c2) ==> x2 >= 0;\nloop invariant i59: (c1 || c2) ==> x3 >= 0;\nloop invariant i60: (c1 && c2) ==> d1 > 0;\nloop invariant i61: (c1 && c2) ==> d2 > 0;\nloop invariant i62: (c1 && c2) ==> d3 > 0;\nloop invariant i63: (!c1 && !c2) ==> d1 < MAX_UINT;\nloop invariant i64: (!c1 && !c2) ==> d2 < MAX_UINT;\nloop invariant i65: (!c1 && !c2) ==> d3 < MAX_UINT;\nloop invariant i66: (c1 || c2) ==> c1 || c2;\nloop invariant i67: (c1 || c2) ==> d1 >= d1;\nloop invariant i68: (c1 || c2) ==> d2 >= d2;\nloop invariant i69: (c1 || c2) ==> d3 >= d3;\nloop invariant i70: (c1 || c2) ==> x1 >= x1 - d1;\nloop invariant i71: (c1 || c2) ==> x2 >= x2 - d2;\nloop invariant i72: (c1 || c2) ==> x3 >= x3 - d3;\nloop invariant i73: (c1 || c2) ==> x1 <= MAX_UINT - d1;\nloop invariant i74: (c1 || c2) ==> x2 <= MAX_UINT - d2;\nloop invariant i75: (c1 || c2) ==> x3 <= MAX_UINT - d3;\nloop invariant i76: (c1 || c2) ==> d1 <= MAX_UINT;\nloop invariant i77: (c1 || c2) ==> d2 <= MAX_UINT;\nloop invariant i78: (c1 || c2) ==> d3 <= MAX_UINT;\nloop invariant i79: (c1 || c2) ==> x1 <= MAX_UINT;\nloop invariant i80: (c1 || c2) ==> x2 <= MAX_UINT;\nloop invariant i81: (c1 || c2) ==> x3 <= MAX_UINT;\nloop invariant i82: (c1 || c2) ==> d1 >= 1;\nloop invariant i83: (c1 || c2) ==> d2 >= 1;\nloop invariant i84: (c1 || c2) ==> d3 >= 1;\nloop invariant i85: 0 <= x1 <= 4294967295;\nloop invariant i86: 0 <= x2 <= 4294967295;\nloop invariant i87: 0 <= x3 <= 4294967295;\nloop invariant i88: 0 <= d1 <= 4294967295;\nloop invariant i89: 0 <= d2 <= 4294967295;\nloop invariant i90: 0 <= d3 <= 4294967295;\nloop invariant i91: c1 == 0 || c1 == 1;\nloop invariant i92: c2 == 0 || c2 == 1;\nloop invariant i93: x1 >= x2 + d2;\nloop invariant i94: x1 >= x3 + d3;\nloop invariant i95: x2 >= x1 + d1;\nloop invariant i96: x2 >= x3 + d3;\nloop invariant i97: x3 >= x1 + d1;\nloop invariant i98: x3 >= x2 + d2;\nloop invariant i99: 0 <= x1;\nloop invariant i100: 0 <= x2;\nloop invariant i101: 0 <= x3;\nloop invariant i102: 0 <= d1;\nloop invariant i103: d1 <= x1;\nloop invariant i104: 0 <= d2;\nloop invariant i105: d2 <= x2;\nloop invariant i106: 0 <= d3;\nloop invariant i107: d3 <= x3;\nloop invariant i108: c1 == c1;\nloop invariant i109: c2 == c2;\nloop invariant i110: c1 || c2;\nloop invariant i111: 1 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i112: 2 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i113: 3 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i114: 4 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i115: 5 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i116: 6 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i117: 7 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i118: 8 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i119: 9 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i120: 10 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i121: 11 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i122: 12 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i123: 13 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i124: 14 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i125: 15 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i126: 16 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i127: ( x1 >= 0 && x2 >= 0 && x3 >= 0 );\nloop invariant i128: ( d1 == 1 || d2 == 1 || d3 == 1 );\nloop invariant i129: ( c1 == 1 || c2 == 1 );\nloop invariant i130: ( x1 > 0 || x2 > 0 || x3 > 0 );\nloop invariant i131: ( x1-d1 >= 0 || c1 == 0 );\nloop invariant i132: ( x2-d2 >= 0 || c2 == 0 );\nloop invariant i133: ( x3-d3 >= 0 || c2 == 0 );\nloop invariant i134: ( x1 == 0 || x2 == 0 || x3 == 0 );\nloop invariant i135: 0 <= d1 <= unknown_uint();\nloop invariant i136: 0 <= d2 <= unknown_uint();\nloop invariant i137: 0 <= d3 <= unknown_uint();\nloop invariant i138: if (c1) then (x1 >= d1) else if (c2) then (x2 >= d2) else (x3 >= d3);\nloop invariant i139: if (c1) then (x1 <= unknown_uint()) else if (c2) then (x2 <= unknown_uint()) else (x3 <= unknown_uint());\nloop invariant i140: if (c1) then (x1 <= x1 - d1) else if (c2) then (x2 <= x2 - d2) else (x3 <= x3 - d3);\nloop invariant i141: c1 == 1 || c1 == 0;\nloop invariant i142: c2 == 1 || c2 == 0;\nloop invariant i143: (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0);\nloop invariant i144: (x1 == 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0);\nloop invariant i145: (x1 == 0 && x2 == 0 && x3 >= 0) || (x1 == 0 && x2 >= 0 && x3 == 0) || (x1 >= 0 && x2 == 0 && x3 == 0) || (x1 == 0 && x2 == 0 && x3 == 0);\nloop invariant i146: x1 >= d1;\nloop invariant i147: x2 >= d2;\nloop invariant i148: x3 >= d3;\nloop invariant i149: 0 <= x1 <= unknown_uint(), x2 <= unknown_uint(), x3 <= unknown_uint();\nloop invariant i150: 1 <= d1 <= 1, 1 <= d2 <= 1, 1 <= d3 <= 1;\nloop invariant i151: true ==> c1 || c2;\nloop invariant i152: true ==> !(c1 && c2);\nloop invariant i153: true ==> (c1 ==> x1 >= d1);\nloop invariant i154: true ==> (c2 ==> x2 >= d2);\nloop invariant i155: true ==> (x1 >= 0 && x2 >= 0 && x3 >= 0);\nloop invariant i156: x1 <= x2;\nloop invariant i157: x2 <= x3;\nloop invariant i158: x3 <= MAX_UINT;\nloop invariant i159: x1 >= MIN_UINT;\nloop invariant i160: x2 >= MIN_UINT;\nloop invariant i161: x3 >= MIN_UINT;\nloop invariant i162: d1 > 0;\nloop invariant i163: d2 > 0;\nloop invariant i164: d3 > 0;\nloop invariant i165: c1 == true | c1 == false;\nloop invariant i166: c2 == true | c2 == false;\nloop invariant i167: c1 ==> x1 <= x1 - d1;\nloop invariant i168: c2 ==> x2 <= x2 - d2;\nloop invariant i169: true ==> x3 <= x3 - d3;\nloop invariant i170: c1 ==> x1 >= x1 - d1;\nloop invariant i171: c2 ==> x2 >= x2 - d2;\nloop invariant i172: true ==> x3 >= x3 - d3;\nloop invariant i173: true ==> x1 >= 0;\nloop invariant i174: true ==> x2 >= 0;\nloop invariant i175: true ==> x3 >= 0;\nloop invariant i176: true ==> x1 <= x2;\nloop invariant i177: true ==> x2 <= x3;\nloop invariant i178: true ==> x3 <= MAX_UINT;\nloop invariant i179: true ==> x1 >= MIN_UINT;\nloop invariant i180: true ==> x2 >= MIN_UINT;\nloop invariant i181: true ==> x3 >= MIN_UINT;\nloop invariant i182: true ==> d1 > 0;\nloop invariant i183: true ==> d2 > 0;\nloop invariant i184: true ==> d3 > 0;\nloop invariant i185: true ==> c1 == true | c1 == false;\nloop invariant i186: true ==> c2 == true | c2 == false;\nloop invariant i187: x1 == 0 ==> x2 == 0 & x3 == 0;\nloop invariant i188: x2 == 0 ==> x3 == 0;\nloop invariant i189: 1 <= d1 <= 4294967295;\nloop invariant i190: 1 <= d2 <= 4294967295;\nloop invariant i191: 1 <= d3 <= 4294967295;\nloop invariant i192: c1==true || c2==true || c1==false || c2==false;\nloop invariant i193: (x1>0 || x2>0 || x3>0) ==> (x1-d1>0 || x2-d2>0 || x3-d3>0);\nloop invariant i194: (x1==0 || x2==0 || x3==0) ==> (c1==false && c2==false);\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 87,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned int unknown_uint(void);\nextern _Bool unknown_bool(void);\n\nint main()\n{\n  unsigned int x1=unknown_uint(), x2=unknown_uint(), x3=unknown_uint();\n  unsigned int d1=1, d2=1, d3=1;\n  _Bool c1=unknown_bool(), c2=unknown_bool();\n  \n  /*@\nloop invariant i1: 0 <= x1 <= (x1 + x2 + x3);\nloop invariant i2: 0 <= x2 <= (x1 + x2 + x3);\nloop invariant i3: 0 <= x3 <= (x1 + x2 + x3);\n\n\n\n\n\n\n\n\nloop invariant i12: d1 >= 0;\nloop invariant i13: d2 >= 0;\nloop invariant i14: d3 >= 0;\n\n\n\n\n\nloop invariant i20: !(x1 > 0 && x2 > 0 && x3 > 0) ==> x1 == 0 || x2 == 0 || x3 == 0;\nloop invariant i21: x1 >= 0; loop invariant x2 >= 0; loop invariant x3 >= 0; loop invariant 0 <= d1; loop invariant 0 <= d2; loop invariant 0 <= d3; loop invariant c1 == 1 || c1 == 0; loop invariant c2 == 1 || c2 == 0; loop invariant c1 == 1 ==> x1 >= d1; loop invariant c1 == 1 ==> x1 < d1 ==> x1 == 0; loop invariant c2 == 1 ==> x2 >= d2; loop invariant c2 == 1 ==> x2 < d2 ==> x2 == 0; loop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> x1 == 0 && x2 == 0 && x3 == 0; loop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> c1 == 0 && c2 == 0; loop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> d1 == 0 && d2 == 0 && d3 == 0; loop invariant x1 == 0 || x2 == 0 || x3 == 0 ==> c1 == 1 && c2 == 1;\n\n\n\n\n\n\nloop invariant i28: x1 >= 0;\nloop invariant i29: x2 >= 0;\nloop invariant i30: x3 >= 0;\nloop invariant i31: d1 >= 1;\nloop invariant i32: d2 >= 1;\nloop invariant i33: d3 >= 1;\n\n\n\n\n\n\n\n\n\n\nloop invariant i44: !(x1>0 && x2>0 && x3>0) ==> (x1==0 || x2==0 || x3==0);\nloop invariant i45: c1 ==> (x1-d1>=0);\nloop invariant i46: c2 ==> (x2-d2>=0);\n\n\n\n\n\n\n\nloop invariant i54: (!c1 && !c2) ==> x1 == x1;\nloop invariant i55: (!c1 && !c2) ==> x2 == x2;\nloop invariant i56: (!c1 && !c2) ==> x3 == x3;\nloop invariant i57: (c1 || c2) ==> x1 >= 0;\nloop invariant i58: (c1 || c2) ==> x2 >= 0;\nloop invariant i59: (c1 || c2) ==> x3 >= 0;\nloop invariant i60: (c1 && c2) ==> d1 > 0;\nloop invariant i61: (c1 && c2) ==> d2 > 0;\nloop invariant i62: (c1 && c2) ==> d3 > 0;\n\n\n\nloop invariant i66: (c1 || c2) ==> c1 || c2;\nloop invariant i67: (c1 || c2) ==> d1 >= d1;\nloop invariant i68: (c1 || c2) ==> d2 >= d2;\nloop invariant i69: (c1 || c2) ==> d3 >= d3;\nloop invariant i70: (c1 || c2) ==> x1 >= x1 - d1;\nloop invariant i71: (c1 || c2) ==> x2 >= x2 - d2;\nloop invariant i72: (c1 || c2) ==> x3 >= x3 - d3;\n\n\n\n\n\n\n\n\n\nloop invariant i82: (c1 || c2) ==> d1 >= 1;\nloop invariant i83: (c1 || c2) ==> d2 >= 1;\nloop invariant i84: (c1 || c2) ==> d3 >= 1;\nloop invariant i85: 0 <= x1 <= 4294967295;\nloop invariant i86: 0 <= x2 <= 4294967295;\nloop invariant i87: 0 <= x3 <= 4294967295;\nloop invariant i88: 0 <= d1 <= 4294967295;\nloop invariant i89: 0 <= d2 <= 4294967295;\nloop invariant i90: 0 <= d3 <= 4294967295;\nloop invariant i91: c1 == 0 || c1 == 1;\nloop invariant i92: c2 == 0 || c2 == 1;\n\n\n\n\n\n\nloop invariant i99: 0 <= x1;\nloop invariant i100: 0 <= x2;\nloop invariant i101: 0 <= x3;\nloop invariant i102: 0 <= d1;\n\nloop invariant i104: 0 <= d2;\n\nloop invariant i106: 0 <= d3;\n\nloop invariant i108: c1 == c1;\nloop invariant i109: c2 == c2;\n\nloop invariant i111: 1 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i112: 2 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i113: 3 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i114: 4 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i115: 5 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i116: 6 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i117: 7 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i118: 8 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i119: 9 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i120: 10 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i121: 11 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i122: 12 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i123: 13 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i124: 14 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i125: 15 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i126: 16 ==> x1==0 || x2==0 || x3==0 || x1>=d1 || x2>=d2 || x3>=d3 || x1<x1-d1 || x2<x2-d2 || x3<x3-d3;\nloop invariant i127: ( x1 >= 0 && x2 >= 0 && x3 >= 0 );\nloop invariant i128: ( d1 == 1 || d2 == 1 || d3 == 1 );\n\nloop invariant i130: ( x1 > 0 || x2 > 0 || x3 > 0 );\nloop invariant i131: ( x1-d1 >= 0 || c1 == 0 );\nloop invariant i132: ( x2-d2 >= 0 || c2 == 0 );\n\n\n\n\n\n\n\n\nloop invariant i141: c1 == 1 || c1 == 0;\nloop invariant i142: c2 == 1 || c2 == 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i162: d1 > 0;\nloop invariant i163: d2 > 0;\nloop invariant i164: d3 > 0;\n\n\n\n\n\nloop invariant i170: c1 ==> x1 >= x1 - d1;\nloop invariant i171: c2 ==> x2 >= x2 - d2;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i188: x2 == 0 ==> x3 == 0;\nloop invariant i189: 1 <= d1 <= 4294967295;\nloop invariant i190: 1 <= d2 <= 4294967295;\nloop invariant i191: 1 <= d3 <= 4294967295;\n\n\n\n*/\nwhile(x1>0 && x2>0 && x3>0)\n  {\n    if (c1) x1=x1-d1;\n    else if (c2) x2=x2-d2;\n    else x3=x3-d3;\n    c1=unknown_bool();\n    c2=unknown_bool();\n  }\n\n  {;\n//@ assert(x1==0 || x2==0 || x3==0);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark16_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark17_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark19_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark20_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark21_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark22_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark23_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark25_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark26_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark29_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark30_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark31_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark32_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark33_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark34_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark35_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark36_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark37_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark38_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark39_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark40_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark41_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark42_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark43_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark45_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark46_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark47_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark48_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark49_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark50_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark51_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark52_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark53_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/Mono1_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/loopv1.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/loopv3.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_10.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_11.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_12.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_9.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sum_natnum.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt2.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt3.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt4.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt5.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt6.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt7.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt8.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt9.c",
            "../dataset/loop_invariants/sv-benchmarks/loops/count_up_down-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loops/for_infinite_loop_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loops/for_infinite_loop_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loops/sum04-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loops/terminator_02-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loops/terminator_03-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loops/trex03-2.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark27_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/iftelse.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_8.c"
        ],
        "skipped": [],
        "total": 196,
        "success_count": 174,
        "failure_count": 22,
        "success_rate": 0.8877551020408163
    }
}