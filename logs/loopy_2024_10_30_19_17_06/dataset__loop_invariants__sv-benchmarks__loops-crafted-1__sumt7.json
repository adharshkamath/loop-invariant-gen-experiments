{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt7.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  while( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= (n-1)/3;\nloop invariant 0 <= j <= (n-1)/2;\nloop invariant 0 <= k <= (n-1);\nloop invariant 0 <= v1 <= (n/7);\nloop invariant 0 <= v2 <= (n/6);\nloop invariant 0 <= v3 <= (n/5);\nloop invariant 0 <= v4 <= (n/4);\nloop invariant (i+j+k+v1+v2+v3+v4) == l;\nloop invariant l % 7 != 0 ==> v1 == (l/7);\nloop invariant l % 6 != 0 ==> v2 == (l/6);\nloop invariant l % 5 != 0 ==> v3 == (l/5);\nloop invariant l % 4 != 0 ==> v4 == (l/4);\nloop invariant l % 3 != 0 ==> i == (l/3);\nloop invariant l % 2 != 0 ==> j == (l/2);\nloop invariant l % 7 != 0 ==> v1 <= (l-1)/7;\nloop invariant l % 6 != 0 ==> v2 <= (l-1)/6;\nloop invariant l % 5 != 0 ==> v3 <= (l-1)/5;\nloop invariant l % 4 != 0 ==> v4 <= (l-1)/4;\nloop invariant l % 3 != 0 ==> i <= (l-1)/3;\nloop invariant l % 2 != 0 ==> j <= (l-1)/2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n; loop invariant 0 <= i; loop invariant i <= (l / 3); loop invariant (i <= k) || (l % 3 == 2); loop invariant (k <= j) || (l % 2 == 0); loop invariant (j <= v1) || (l % 7 == 0); loop invariant (v1 <= v2) || (l % 6 == 5); loop invariant (v2 <= v3) || (l % 5 == 4); loop invariant (v3 <= v4) || (l % 4 == 3); loop invariant (v4 <= i) || (l % 3 == 1); loop invariant (i + j + k + v1 + v2 + v3 + v4) == l;\n*/\n```",
            "```\n/*@\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant v4 >= 0;\nloop invariant l >= 0;\nloop invariant l <= n;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant v1 <= n;\nloop invariant v2 <= n;\nloop invariant v3 <= n;\nloop invariant v4 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 == l;\nloop invariant !(l%7) ==> v1 >= 1;\nloop invariant !(l%6) ==> v2 >= 1;\nloop invariant !(l%5) ==> v3 >= 1;\nloop invariant !(l%4) ==> v4 >= 1;\nloop invariant !(l%3) ==> i >= 1;\nloop invariant !(l%2) ==> j >= 1;\nloop invariant l%2 ==> k >= 1;\nloop invariant !(l%7) ==> v1 <= (l/7);\nloop invariant !(l%6) ==> v2 <= (l/6);\nloop invariant !(l%5) ==> v3 <= (l/5);\nloop invariant !(l%4) ==> v4 <= (l/4);\nloop invariant !(l%3) ==> i <= (l/3);\nloop invariant !(l%2) ==> j <= (l/2);\nloop invariant l%2 ==> k <= (l+1)/2;\nloop invariant !(l%7) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant !(l%6) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant !(l%5) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant !(l%4) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant !(l%3) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant !(l%2) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant l%2 ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l;\nloop invariant 0 <= j <= l;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= v1 <= l;\nloop invariant 0 <= v2 <= l;\nloop invariant 0 <= v3 <= l;\nloop invariant 0 <= v4 <= l;\nloop invariant i + j + k + v1 + v2 + v3 + v4 == l;\nloop invariant l % 7 >= 0 ==> v1 == l / 7;\nloop invariant l % 7 >= 0 ==> v1 == l / 7;\nloop invariant l % 7 >= 0 ==> v1 == l / 7;\nloop invariant l % 7 >= 0 ==> v1 == l / 7;\nloop invariant l % 7 >= 0 ==> v1 == l / 7;\nloop invariant l % 7 >= 0 ==> v1 == l / 7;\nloop invariant l % 7 >= 0 ==> v1 == l / 7;\n*/\n```",
            "```\n/*@\nloop invariant l >= 0;\nloop invariant l <= n;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant v1 >= 0;\nloop invariant v1 <= n;\nloop invariant v2 >= 0;\nloop invariant v2 <= n;\nloop invariant v3 >= 0;\nloop invariant v3 <= n;\nloop invariant v4 >= 0;\nloop invariant v4 <= n;\nloop invariant (i+j+k+v1+v2+v3+v4) >= 0;\nloop invariant (i+j+k+v1+v2+v3+v4) <= n;\nloop invariant (i+j+k+v1+v2+v3+v4) == l;\nloop invariant i == (l - (n % 7));\nloop invariant j == ((l / 2) - (n / 2));\nloop invariant k == ((n - l) - (n % 3));\nloop invariant v1 == (l / 7);\nloop invariant v2 == (l / 6);\nloop invariant v3 == (l / 5);\nloop invariant v4 == (l / 4);\nloop invariant (i+j+k+v1+v2+v3+v4) == l;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= v1 <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 == l;\nloop invariant i + j + k + v1 + v2 + v3 + v4 == n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l;\nloop invariant 0 <= j <= l;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= v1 <= l;\nloop invariant 0 <= v2 <= l;\nloop invariant 0 <= v3 <= l;\nloop invariant 0 <= v4 <= l;\nloop invariant (i+j+k+v1+v2+v3+v4) == l;\nloop invariant l%7 == 0 ==> v1 == (l/7);\nloop invariant l%7 != 0 ==> v1 <= (l/7);\nloop invariant l%6 == 0 ==> v2 == (l/6);\nloop invariant l%6 != 0 ==> v2 <= (l/6);\nloop invariant l%5 == 0 ==> v3 == (l/5);\nloop invariant l%5 != 0 ==> v3 <= (l/5);\nloop invariant l%4 == 0 ==> v4 == (l/4);\nloop invariant l%4 != 0 ==> v4 <= (l/4);\nloop invariant l%3 == 0 ==> i == (l/3);\nloop invariant l%3 != 0 ==> i <= (l/3);\nloop invariant l%2 == 0 ==> j == (l/2);\nloop invariant l%2 != 0 ==> j <= (l/2);\nloop invariant k == l - (i+j+v1+v2+v3+v4);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant i = (l - (l % 7)) / 7;\nloop invariant j = (l - (l % 6)) / 6;\nloop invariant k = (l - (l % 5)) / 5;\nloop invariant v1 = (l - (l % 4)) / 4;\nloop invariant v2 = (l - (l % 3)) / 3;\nloop invariant v3 = (l - (l % 2)) / 2;\nloop invariant v4 = l - (i + j + k + v1 + v2 + v3);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n/2;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n/2;\nloop invariant 0 <= v1 <= n/7;\nloop invariant 0 <= v2 <= n/6;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant (i+j+k+v1+v2+v3+v4) == l;\nloop invariant (i <= l/2);\nloop invariant (j <= l/2);\nloop invariant (k <= l/2);\nloop invariant (v1 <= l/7);\nloop invariant (v2 <= l/6);\nloop invariant (v3 <= l/5);\nloop invariant (v4 <= l/4);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= n <= SIZE;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v1 <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant (i+j+k+v1+v2+v3+v4) == l;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n/3;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= v1 <= n/7;\nloop invariant 0 <= v2 <= n/6;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n/3;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= v1 <= n/7;\nloop invariant 0 <= v2 <= n/6;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l;\nloop invariant 0 <= j <= l;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= v1 <= l;\nloop invariant 0 <= v2 <= l;\nloop invariant 0 <= v3 <= l;\nloop invariant 0 <= v4 <= l;\nloop invariant l == (i+j+k+v1+v2+v3+v4);\nloop invariant (i+j+k+v1+v2+v3+v4) <= n;\nloop invariant l <= n;\nloop invariant l == n ==> (i+j+k+v1+v2+v3+v4) == n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant i <= l;\nloop invariant j <= l;\nloop invariant k <= l;\nloop invariant v1 <= l;\nloop invariant v2 <= l;\nloop invariant v3 <= l;\nloop invariant v4 <= l;\nloop invariant i <= j;\nloop invariant i <= k;\nloop invariant i <= v1;\nloop invariant i <= v2;\nloop invariant i <= v3;\nloop invariant i <= v4;\nloop invariant j <= k;\nloop invariant j <= v1;\nloop invariant j <= v2;\nloop invariant j <= v3;\nloop invariant j <= v4;\nloop invariant k <= v1;\nloop invariant k <= v2;\nloop invariant k <= v3;\nloop invariant k <= v4;\nloop invariant v1 <= v2;\nloop invariant v1 <= v3;\nloop invariant v1 <= v4;\nloop invariant v2 <= v3;\nloop invariant v2 <= v4;\nloop invariant v3 <= v4;\nloop invariant i + j + k + v1 + v2 + v3 + v4 == l;\nloop invariant i + j + k + v1 + v2 + v3 + v4 <= n;\nloop invariant n <= SIZE;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/3;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= (l - (i + j));\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant v1 + v2 + v3 + v4 + i + j + k == l;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= (n / 3);\nloop invariant 0 <= j <= (n / 2);\nloop invariant 0 <= k <= (n / 7);\nloop invariant 0 <= v1 <= (n / 7);\nloop invariant 0 <= v2 <= (n / 6);\nloop invariant 0 <= v3 <= (n / 5);\nloop invariant 0 <= v4 <= (n / 4);\nloop invariant (i + j + k + v1 + v2 + v3 + v4) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4) >= l;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= (n-1)/3;\nloop invariant 0 <= j <= (n-1)/2;\nloop invariant 0 <= k <= (n-1);\nloop invariant 0 <= v1 <= (n/7);\nloop invariant 0 <= v2 <= (n/6);\nloop invariant 0 <= v3 <= (n/5);\nloop invariant 0 <= v4 <= (n/4);\nloop invariant (i+j+k+v1+v2+v3+v4) == l;\nloop invariant l % 7 != 0 ==> v1 == (l/7);\nloop invariant l % 6 != 0 ==> v2 == (l/6);\nloop invariant l % 5 != 0 ==> v3 == (l/5);\nloop invariant l % 4 != 0 ==> v4 == (l/4);\nloop invariant l % 3 != 0 ==> i == (l/3);\nloop invariant l % 2 != 0 ==> j == (l/2);\nloop invariant l % 7 != 0 ==> v1 <= (l-1)/7;\nloop invariant l % 6 != 0 ==> v2 <= (l-1)/6;\nloop invariant l % 5 != 0 ==> v3 <= (l-1)/5;\nloop invariant l % 4 != 0 ==> v4 <= (l-1)/4;\nloop invariant l % 3 != 0 ==> i <= (l-1)/3;\nloop invariant l % 2 != 0 ==> j <= (l-1)/2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\n\n\n\n\n\nloop invariant i9: (i+j+k+v1+v2+v3+v4) == l;\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n; loop invariant 0 <= i; loop invariant i <= (l / 3); loop invariant (i <= k) || (l % 3 == 2); loop invariant (k <= j) || (l % 2 == 0); loop invariant (j <= v1) || (l % 7 == 0); loop invariant (v1 <= v2) || (l % 6 == 5); loop invariant (v2 <= v3) || (l % 5 == 4); loop invariant (v3 <= v4) || (l % 4 == 3); loop invariant (v4 <= i) || (l % 3 == 1); loop invariant (i + j + k + v1 + v2 + v3 + v4) == l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n; loop invariant 0 <= i; loop invariant i <= (l / 3); loop invariant (i <= k) || (l % 3 == 2); loop invariant (k <= j) || (l % 2 == 0); loop invariant (j <= v1) || (l % 7 == 0); loop invariant (v1 <= v2) || (l % 6 == 5); loop invariant (v2 <= v3) || (l % 5 == 4); loop invariant (v3 <= v4) || (l % 4 == 3); loop invariant (v4 <= i) || (l % 3 == 1); loop invariant (i + j + k + v1 + v2 + v3 + v4) == l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant i >= 0;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant v1 >= 0;\nloop invariant v2 >= 0;\nloop invariant v3 >= 0;\nloop invariant v4 >= 0;\nloop invariant l >= 0;\nloop invariant l <= n;\nloop invariant i <= n;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant v1 <= n;\nloop invariant v2 <= n;\nloop invariant v3 <= n;\nloop invariant v4 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 == l;\nloop invariant !(l%7) ==> v1 >= 1;\nloop invariant !(l%6) ==> v2 >= 1;\nloop invariant !(l%5) ==> v3 >= 1;\nloop invariant !(l%4) ==> v4 >= 1;\nloop invariant !(l%3) ==> i >= 1;\nloop invariant !(l%2) ==> j >= 1;\nloop invariant l%2 ==> k >= 1;\nloop invariant !(l%7) ==> v1 <= (l/7);\nloop invariant !(l%6) ==> v2 <= (l/6);\nloop invariant !(l%5) ==> v3 <= (l/5);\nloop invariant !(l%4) ==> v4 <= (l/4);\nloop invariant !(l%3) ==> i <= (l/3);\nloop invariant !(l%2) ==> j <= (l/2);\nloop invariant l%2 ==> k <= (l+1)/2;\nloop invariant !(l%7) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant !(l%6) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant !(l%5) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant !(l%4) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant !(l%3) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant !(l%2) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant l%2 ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: i >= 0;\nloop invariant i2: j >= 0;\nloop invariant i3: k >= 0;\nloop invariant i4: v1 >= 0;\nloop invariant i5: v2 >= 0;\nloop invariant i6: v3 >= 0;\nloop invariant i7: v4 >= 0;\nloop invariant i8: l >= 0;\nloop invariant i9: l <= n;\nloop invariant i10: i <= n;\nloop invariant i11: j <= n;\nloop invariant i12: k <= n;\nloop invariant i13: v1 <= n;\nloop invariant i14: v2 <= n;\nloop invariant i15: v3 <= n;\nloop invariant i16: v4 <= n;\nloop invariant i17: i + j + k + v1 + v2 + v3 + v4 == l;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i32: !(l%7) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant i33: !(l%6) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant i34: !(l%5) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant i35: !(l%4) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant i36: !(l%3) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant i37: !(l%2) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant i38: l%2 ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l;\nloop invariant 0 <= j <= l;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= v1 <= l;\nloop invariant 0 <= v2 <= l;\nloop invariant 0 <= v3 <= l;\nloop invariant 0 <= v4 <= l;\nloop invariant i + j + k + v1 + v2 + v3 + v4 == l;\nloop invariant l % 7 >= 0 ==> v1 == l / 7;\nloop invariant l % 7 >= 0 ==> v1 == l / 7;\nloop invariant l % 7 >= 0 ==> v1 == l / 7;\nloop invariant l % 7 >= 0 ==> v1 == l / 7;\nloop invariant l % 7 >= 0 ==> v1 == l / 7;\nloop invariant l % 7 >= 0 ==> v1 == l / 7;\nloop invariant l % 7 >= 0 ==> v1 == l / 7;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i <= l;\nloop invariant i3: 0 <= j <= l;\nloop invariant i4: 0 <= k <= l;\nloop invariant i5: 0 <= v1 <= l;\nloop invariant i6: 0 <= v2 <= l;\nloop invariant i7: 0 <= v3 <= l;\nloop invariant i8: 0 <= v4 <= l;\nloop invariant i9: i + j + k + v1 + v2 + v3 + v4 == l;\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant l >= 0;\nloop invariant l <= n;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant j >= 0;\nloop invariant j <= n;\nloop invariant k >= 0;\nloop invariant k <= n;\nloop invariant v1 >= 0;\nloop invariant v1 <= n;\nloop invariant v2 >= 0;\nloop invariant v2 <= n;\nloop invariant v3 >= 0;\nloop invariant v3 <= n;\nloop invariant v4 >= 0;\nloop invariant v4 <= n;\nloop invariant (i+j+k+v1+v2+v3+v4) >= 0;\nloop invariant (i+j+k+v1+v2+v3+v4) <= n;\nloop invariant (i+j+k+v1+v2+v3+v4) == l;\nloop invariant i == (l - (n % 7));\nloop invariant j == ((l / 2) - (n / 2));\nloop invariant k == ((n - l) - (n % 3));\nloop invariant v1 == (l / 7);\nloop invariant v2 == (l / 6);\nloop invariant v3 == (l / 5);\nloop invariant v4 == (l / 4);\nloop invariant (i+j+k+v1+v2+v3+v4) == l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: l >= 0;\nloop invariant i2: l <= n;\nloop invariant i3: i >= 0;\nloop invariant i4: i <= n;\nloop invariant i5: j >= 0;\nloop invariant i6: j <= n;\nloop invariant i7: k >= 0;\nloop invariant i8: k <= n;\nloop invariant i9: v1 >= 0;\nloop invariant i10: v1 <= n;\nloop invariant i11: v2 >= 0;\nloop invariant i12: v2 <= n;\nloop invariant i13: v3 >= 0;\nloop invariant i14: v3 <= n;\nloop invariant i15: v4 >= 0;\nloop invariant i16: v4 <= n;\nloop invariant i17: (i+j+k+v1+v2+v3+v4) >= 0;\nloop invariant i18: (i+j+k+v1+v2+v3+v4) <= n;\nloop invariant i19: (i+j+k+v1+v2+v3+v4) == l;\n\n\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= v1 <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant i + j + k + v1 + v2 + v3 + v4 == l;\nloop invariant i + j + k + v1 + v2 + v3 + v4 == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: 0 <= j <= n;\nloop invariant i3: 0 <= k <= n;\nloop invariant i4: 0 <= l <= n;\nloop invariant i5: 0 <= v1 <= n;\nloop invariant i6: 0 <= v2 <= n;\nloop invariant i7: 0 <= v3 <= n;\nloop invariant i8: 0 <= v4 <= n;\nloop invariant i9: i + j + k + v1 + v2 + v3 + v4 == l;\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l;\nloop invariant 0 <= j <= l;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= v1 <= l;\nloop invariant 0 <= v2 <= l;\nloop invariant 0 <= v3 <= l;\nloop invariant 0 <= v4 <= l;\nloop invariant (i+j+k+v1+v2+v3+v4) == l;\nloop invariant l%7 == 0 ==> v1 == (l/7);\nloop invariant l%7 != 0 ==> v1 <= (l/7);\nloop invariant l%6 == 0 ==> v2 == (l/6);\nloop invariant l%6 != 0 ==> v2 <= (l/6);\nloop invariant l%5 == 0 ==> v3 == (l/5);\nloop invariant l%5 != 0 ==> v3 <= (l/5);\nloop invariant l%4 == 0 ==> v4 == (l/4);\nloop invariant l%4 != 0 ==> v4 <= (l/4);\nloop invariant l%3 == 0 ==> i == (l/3);\nloop invariant l%3 != 0 ==> i <= (l/3);\nloop invariant l%2 == 0 ==> j == (l/2);\nloop invariant l%2 != 0 ==> j <= (l/2);\nloop invariant k == l - (i+j+v1+v2+v3+v4);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i <= l;\nloop invariant i3: 0 <= j <= l;\nloop invariant i4: 0 <= k <= l;\nloop invariant i5: 0 <= v1 <= l;\nloop invariant i6: 0 <= v2 <= l;\nloop invariant i7: 0 <= v3 <= l;\nloop invariant i8: 0 <= v4 <= l;\nloop invariant i9: (i+j+k+v1+v2+v3+v4) == l;\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i22: k == l - (i+j+v1+v2+v3+v4);\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant i = (l - (l % 7)) / 7;\nloop invariant j = (l - (l % 6)) / 6;\nloop invariant k = (l - (l % 5)) / 5;\nloop invariant v1 = (l - (l % 4)) / 4;\nloop invariant v2 = (l - (l % 3)) / 3;\nloop invariant v3 = (l - (l % 2)) / 2;\nloop invariant v4 = l - (i + j + k + v1 + v2 + v3);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\n\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= n/2;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n/2;\nloop invariant 0 <= v1 <= n/7;\nloop invariant 0 <= v2 <= n/6;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant (i+j+k+v1+v2+v3+v4) == l;\nloop invariant (i <= l/2);\nloop invariant (j <= l/2);\nloop invariant (k <= l/2);\nloop invariant (v1 <= l/7);\nloop invariant (v2 <= l/6);\nloop invariant (v3 <= l/5);\nloop invariant (v4 <= l/4);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i <= n/2;\n\nloop invariant i4: 0 <= k <= n/2;\n\n\n\n\nloop invariant i9: (i+j+k+v1+v2+v3+v4) == l;\nloop invariant i10: (i <= l/2);\n\nloop invariant i12: (k <= l/2);\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= n <= SIZE;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant 0 <= v1 <= n;\nloop invariant 0 <= v2 <= n;\nloop invariant 0 <= v3 <= n;\nloop invariant 0 <= v4 <= n;\nloop invariant (i+j+k+v1+v2+v3+v4) == l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= n <= SIZE;\nloop invariant i3: 0 <= i <= n;\nloop invariant i4: 0 <= j <= n;\nloop invariant i5: 0 <= k <= n;\nloop invariant i6: 0 <= v1 <= n;\nloop invariant i7: 0 <= v2 <= n;\nloop invariant i8: 0 <= v3 <= n;\nloop invariant i9: 0 <= v4 <= n;\nloop invariant i10: (i+j+k+v1+v2+v3+v4) == l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n/3;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= v1 <= n/7;\nloop invariant 0 <= v2 <= n/6;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= j <= n/2;\nloop invariant 0 <= k <= n/3;\nloop invariant 0 <= l <= n;\nloop invariant 0 <= v1 <= n/7;\nloop invariant 0 <= v2 <= n/6;\nloop invariant 0 <= v3 <= n/5;\nloop invariant 0 <= v4 <= n/4;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\n\n\nloop invariant i4: 0 <= l <= n;\n\n\n\n\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l;\nloop invariant 0 <= j <= l;\nloop invariant 0 <= k <= l;\nloop invariant 0 <= v1 <= l;\nloop invariant 0 <= v2 <= l;\nloop invariant 0 <= v3 <= l;\nloop invariant 0 <= v4 <= l;\nloop invariant l == (i+j+k+v1+v2+v3+v4);\nloop invariant (i+j+k+v1+v2+v3+v4) <= n;\nloop invariant l <= n;\nloop invariant l == n ==> (i+j+k+v1+v2+v3+v4) == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i <= l;\nloop invariant i3: 0 <= j <= l;\nloop invariant i4: 0 <= k <= l;\nloop invariant i5: 0 <= v1 <= l;\nloop invariant i6: 0 <= v2 <= l;\nloop invariant i7: 0 <= v3 <= l;\nloop invariant i8: 0 <= v4 <= l;\nloop invariant i9: l == (i+j+k+v1+v2+v3+v4);\nloop invariant i10: (i+j+k+v1+v2+v3+v4) <= n;\nloop invariant i11: l <= n;\nloop invariant i12: l == n ==> (i+j+k+v1+v2+v3+v4) == n;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant i <= l;\nloop invariant j <= l;\nloop invariant k <= l;\nloop invariant v1 <= l;\nloop invariant v2 <= l;\nloop invariant v3 <= l;\nloop invariant v4 <= l;\nloop invariant i <= j;\nloop invariant i <= k;\nloop invariant i <= v1;\nloop invariant i <= v2;\nloop invariant i <= v3;\nloop invariant i <= v4;\nloop invariant j <= k;\nloop invariant j <= v1;\nloop invariant j <= v2;\nloop invariant j <= v3;\nloop invariant j <= v4;\nloop invariant k <= v1;\nloop invariant k <= v2;\nloop invariant k <= v3;\nloop invariant k <= v4;\nloop invariant v1 <= v2;\nloop invariant v1 <= v3;\nloop invariant v1 <= v4;\nloop invariant v2 <= v3;\nloop invariant v2 <= v4;\nloop invariant v3 <= v4;\nloop invariant i + j + k + v1 + v2 + v3 + v4 == l;\nloop invariant i + j + k + v1 + v2 + v3 + v4 <= n;\nloop invariant n <= SIZE;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: i <= l;\nloop invariant i3: j <= l;\nloop invariant i4: k <= l;\nloop invariant i5: v1 <= l;\nloop invariant i6: v2 <= l;\nloop invariant i7: v3 <= l;\nloop invariant i8: v4 <= l;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i30: i + j + k + v1 + v2 + v3 + v4 == l;\nloop invariant i31: i + j + k + v1 + v2 + v3 + v4 <= n;\nloop invariant i32: n <= SIZE;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= l/3;\nloop invariant 0 <= j <= l/2;\nloop invariant 0 <= k <= (l - (i + j));\nloop invariant 0 <= v1 <= l/7;\nloop invariant 0 <= v2 <= l/6;\nloop invariant 0 <= v3 <= l/5;\nloop invariant 0 <= v4 <= l/4;\nloop invariant v1 + v2 + v3 + v4 + i + j + k == l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\nloop invariant i4: 0 <= k <= (l - (i + j));\n\n\n\n\nloop invariant i9: v1 + v2 + v3 + v4 + i + j + k == l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= l <= n;\nloop invariant 0 <= i <= (n / 3);\nloop invariant 0 <= j <= (n / 2);\nloop invariant 0 <= k <= (n / 7);\nloop invariant 0 <= v1 <= (n / 7);\nloop invariant 0 <= v2 <= (n / 6);\nloop invariant 0 <= v3 <= (n / 5);\nloop invariant 0 <= v4 <= (n / 4);\nloop invariant (i + j + k + v1 + v2 + v3 + v4) <= l;\nloop invariant (i + j + k + v1 + v2 + v3 + v4) >= l;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\n\n\n\n\n\n\n\nloop invariant i9: (i + j + k + v1 + v2 + v3 + v4) <= l;\nloop invariant i10: (i + j + k + v1 + v2 + v3 + v4) >= l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 115: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i <= (n-1)/3;\nloop invariant i3: 0 <= j <= (n-1)/2;\nloop invariant i4: 0 <= k <= (n-1);\nloop invariant i5: 0 <= v1 <= (n/7);\nloop invariant i6: 0 <= v2 <= (n/6);\nloop invariant i7: 0 <= v3 <= (n/5);\nloop invariant i8: 0 <= v4 <= (n/4);\nloop invariant i9: (i+j+k+v1+v2+v3+v4) == l;\nloop invariant i10: l % 7 != 0 ==> v1 == (l/7);\nloop invariant i11: l % 6 != 0 ==> v2 == (l/6);\nloop invariant i12: l % 5 != 0 ==> v3 == (l/5);\nloop invariant i13: l % 4 != 0 ==> v4 == (l/4);\nloop invariant i14: l % 3 != 0 ==> i == (l/3);\nloop invariant i15: l % 2 != 0 ==> j == (l/2);\nloop invariant i16: l % 7 != 0 ==> v1 <= (l-1)/7;\nloop invariant i17: l % 6 != 0 ==> v2 <= (l-1)/6;\nloop invariant i18: l % 5 != 0 ==> v3 <= (l-1)/5;\nloop invariant i19: l % 4 != 0 ==> v4 <= (l-1)/4;\nloop invariant i20: l % 3 != 0 ==> i <= (l-1)/3;\nloop invariant i21: l % 2 != 0 ==> j <= (l-1)/2;\nloop invariant i22: 0 <= l <= n; loop invariant 0 <= i; loop invariant i <= (l / 3); loop invariant (i <= k) || (l % 3 == 2); loop invariant (k <= j) || (l % 2 == 0); loop invariant (j <= v1) || (l % 7 == 0); loop invariant (v1 <= v2) || (l % 6 == 5); loop invariant (v2 <= v3) || (l % 5 == 4); loop invariant (v3 <= v4) || (l % 4 == 3); loop invariant (v4 <= i) || (l % 3 == 1); loop invariant (i + j + k + v1 + v2 + v3 + v4) == l;\nloop invariant i23: i >= 0;\nloop invariant i24: j >= 0;\nloop invariant i25: k >= 0;\nloop invariant i26: v1 >= 0;\nloop invariant i27: v2 >= 0;\nloop invariant i28: v3 >= 0;\nloop invariant i29: v4 >= 0;\nloop invariant i30: l >= 0;\nloop invariant i31: l <= n;\nloop invariant i32: i <= n;\nloop invariant i33: j <= n;\nloop invariant i34: k <= n;\nloop invariant i35: v1 <= n;\nloop invariant i36: v2 <= n;\nloop invariant i37: v3 <= n;\nloop invariant i38: v4 <= n;\nloop invariant i39: i + j + k + v1 + v2 + v3 + v4 == l;\nloop invariant i40: !(l%7) ==> v1 >= 1;\nloop invariant i41: !(l%6) ==> v2 >= 1;\nloop invariant i42: !(l%5) ==> v3 >= 1;\nloop invariant i43: !(l%4) ==> v4 >= 1;\nloop invariant i44: !(l%3) ==> i >= 1;\nloop invariant i45: !(l%2) ==> j >= 1;\nloop invariant i46: l%2 ==> k >= 1;\nloop invariant i47: !(l%7) ==> v1 <= (l/7);\nloop invariant i48: !(l%6) ==> v2 <= (l/6);\nloop invariant i49: !(l%5) ==> v3 <= (l/5);\nloop invariant i50: !(l%4) ==> v4 <= (l/4);\nloop invariant i51: !(l%3) ==> i <= (l/3);\nloop invariant i52: !(l%2) ==> j <= (l/2);\nloop invariant i53: l%2 ==> k <= (l+1)/2;\nloop invariant i54: !(l%7) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant i55: !(l%6) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant i56: !(l%5) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant i57: !(l%4) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant i58: !(l%3) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant i59: !(l%2) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant i60: l%2 ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant i61: 0 <= i <= l;\nloop invariant i62: 0 <= j <= l;\nloop invariant i63: 0 <= k <= l;\nloop invariant i64: 0 <= v1 <= l;\nloop invariant i65: 0 <= v2 <= l;\nloop invariant i66: 0 <= v3 <= l;\nloop invariant i67: 0 <= v4 <= l;\nloop invariant i68: l % 7 >= 0 ==> v1 == l / 7;\nloop invariant i69: (i+j+k+v1+v2+v3+v4) >= 0;\nloop invariant i70: (i+j+k+v1+v2+v3+v4) <= n;\nloop invariant i71: i == (l - (n % 7));\nloop invariant i72: j == ((l / 2) - (n / 2));\nloop invariant i73: k == ((n - l) - (n % 3));\nloop invariant i74: v1 == (l / 7);\nloop invariant i75: v2 == (l / 6);\nloop invariant i76: v3 == (l / 5);\nloop invariant i77: v4 == (l / 4);\nloop invariant i78: 0 <= i <= n;\nloop invariant i79: 0 <= j <= n;\nloop invariant i80: 0 <= k <= n;\nloop invariant i81: 0 <= v1 <= n;\nloop invariant i82: 0 <= v2 <= n;\nloop invariant i83: 0 <= v3 <= n;\nloop invariant i84: 0 <= v4 <= n;\nloop invariant i85: i + j + k + v1 + v2 + v3 + v4 == n;\nloop invariant i86: l%7 == 0 ==> v1 == (l/7);\nloop invariant i87: l%7 != 0 ==> v1 <= (l/7);\nloop invariant i88: l%6 == 0 ==> v2 == (l/6);\nloop invariant i89: l%6 != 0 ==> v2 <= (l/6);\nloop invariant i90: l%5 == 0 ==> v3 == (l/5);\nloop invariant i91: l%5 != 0 ==> v3 <= (l/5);\nloop invariant i92: l%4 == 0 ==> v4 == (l/4);\nloop invariant i93: l%4 != 0 ==> v4 <= (l/4);\nloop invariant i94: l%3 == 0 ==> i == (l/3);\nloop invariant i95: l%3 != 0 ==> i <= (l/3);\nloop invariant i96: l%2 == 0 ==> j == (l/2);\nloop invariant i97: l%2 != 0 ==> j <= (l/2);\nloop invariant i98: k == l - (i+j+v1+v2+v3+v4);\nloop invariant i99: i = (l - (l % 7)) / 7;\nloop invariant i100: j = (l - (l % 6)) / 6;\nloop invariant i101: k = (l - (l % 5)) / 5;\nloop invariant i102: v1 = (l - (l % 4)) / 4;\nloop invariant i103: v2 = (l - (l % 3)) / 3;\nloop invariant i104: v3 = (l - (l % 2)) / 2;\nloop invariant i105: v4 = l - (i + j + k + v1 + v2 + v3);\nloop invariant i106: 0 <= i <= n/2;\nloop invariant i107: 0 <= j <= n/2;\nloop invariant i108: 0 <= k <= n/2;\nloop invariant i109: 0 <= v1 <= n/7;\nloop invariant i110: 0 <= v2 <= n/6;\nloop invariant i111: 0 <= v3 <= n/5;\nloop invariant i112: 0 <= v4 <= n/4;\nloop invariant i113: (i <= l/2);\nloop invariant i114: (j <= l/2);\nloop invariant i115: (k <= l/2);\nloop invariant i116: (v1 <= l/7);\nloop invariant i117: (v2 <= l/6);\nloop invariant i118: (v3 <= l/5);\nloop invariant i119: (v4 <= l/4);\nloop invariant i120: 0 <= n <= SIZE;\nloop invariant i121: 0 <= k <= n/3;\nloop invariant i122: l == (i+j+k+v1+v2+v3+v4);\nloop invariant i123: l == n ==> (i+j+k+v1+v2+v3+v4) == n;\nloop invariant i124: i <= l;\nloop invariant i125: j <= l;\nloop invariant i126: k <= l;\nloop invariant i127: v1 <= l;\nloop invariant i128: v2 <= l;\nloop invariant i129: v3 <= l;\nloop invariant i130: v4 <= l;\nloop invariant i131: i <= j;\nloop invariant i132: i <= k;\nloop invariant i133: i <= v1;\nloop invariant i134: i <= v2;\nloop invariant i135: i <= v3;\nloop invariant i136: i <= v4;\nloop invariant i137: j <= k;\nloop invariant i138: j <= v1;\nloop invariant i139: j <= v2;\nloop invariant i140: j <= v3;\nloop invariant i141: j <= v4;\nloop invariant i142: k <= v1;\nloop invariant i143: k <= v2;\nloop invariant i144: k <= v3;\nloop invariant i145: k <= v4;\nloop invariant i146: v1 <= v2;\nloop invariant i147: v1 <= v3;\nloop invariant i148: v1 <= v4;\nloop invariant i149: v2 <= v3;\nloop invariant i150: v2 <= v4;\nloop invariant i151: v3 <= v4;\nloop invariant i152: i + j + k + v1 + v2 + v3 + v4 <= n;\nloop invariant i153: n <= SIZE;\nloop invariant i154: 0 <= i <= l/3;\nloop invariant i155: 0 <= j <= l/2;\nloop invariant i156: 0 <= k <= (l - (i + j));\nloop invariant i157: 0 <= v1 <= l/7;\nloop invariant i158: 0 <= v2 <= l/6;\nloop invariant i159: 0 <= v3 <= l/5;\nloop invariant i160: 0 <= v4 <= l/4;\nloop invariant i161: v1 + v2 + v3 + v4 + i + j + k == l;\nloop invariant i162: 0 <= i <= (n / 3);\nloop invariant i163: 0 <= j <= (n / 2);\nloop invariant i164: 0 <= k <= (n / 7);\nloop invariant i165: 0 <= v1 <= (n / 7);\nloop invariant i166: 0 <= v2 <= (n / 6);\nloop invariant i167: 0 <= v3 <= (n / 5);\nloop invariant i168: 0 <= v4 <= (n / 4);\nloop invariant i169: (i + j + k + v1 + v2 + v3 + v4) <= l;\nloop invariant i170: (i + j + k + v1 + v2 + v3 + v4) >= l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 19,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\nint SIZE = 20000001;\n\nint main() {\n  unsigned int n=0,i=0,k=0,j=0,l=0;\n  unsigned int v1=0, v2=0, v3=0, v4=0;\n  n = unknown_int();\n  if (!(n <= SIZE)) return 0;\n  /*@\nloop invariant i1: 0 <= l <= n;\nloop invariant i2: 0 <= i <= (n-1)/3;\nloop invariant i3: 0 <= j <= (n-1)/2;\n\n\nloop invariant i6: 0 <= v2 <= (n/6);\nloop invariant i7: 0 <= v3 <= (n/5);\nloop invariant i8: 0 <= v4 <= (n/4);\nloop invariant i9: (i+j+k+v1+v2+v3+v4) == l;\n\nloop invariant i11: l % 6 != 0 ==> v2 == (l/6);\nloop invariant i12: l % 5 != 0 ==> v3 == (l/5);\nloop invariant i13: l % 4 != 0 ==> v4 == (l/4);\nloop invariant i14: l % 3 != 0 ==> i == (l/3);\nloop invariant i15: l % 2 != 0 ==> j == (l/2);\n\nloop invariant i17: l % 6 != 0 ==> v2 <= (l-1)/6;\nloop invariant i18: l % 5 != 0 ==> v3 <= (l-1)/5;\nloop invariant i19: l % 4 != 0 ==> v4 <= (l-1)/4;\nloop invariant i20: l % 3 != 0 ==> i <= (l-1)/3;\nloop invariant i21: l % 2 != 0 ==> j <= (l-1)/2;\nloop invariant i22: 0 <= l <= n; loop invariant 0 <= i; loop invariant i <= (l / 3); loop invariant (i <= k) || (l % 3 == 2); loop invariant (k <= j) || (l % 2 == 0); loop invariant (j <= v1) || (l % 7 == 0); loop invariant (v1 <= v2) || (l % 6 == 5); loop invariant (v2 <= v3) || (l % 5 == 4); loop invariant (v3 <= v4) || (l % 4 == 3); loop invariant (v4 <= i) || (l % 3 == 1); loop invariant (i + j + k + v1 + v2 + v3 + v4) == l;\nloop invariant i23: i >= 0;\nloop invariant i24: j >= 0;\nloop invariant i25: k >= 0;\nloop invariant i26: v1 >= 0;\nloop invariant i27: v2 >= 0;\nloop invariant i28: v3 >= 0;\nloop invariant i29: v4 >= 0;\nloop invariant i30: l >= 0;\nloop invariant i31: l <= n;\nloop invariant i32: i <= n;\nloop invariant i33: j <= n;\nloop invariant i34: k <= n;\nloop invariant i35: v1 <= n;\nloop invariant i36: v2 <= n;\nloop invariant i37: v3 <= n;\nloop invariant i38: v4 <= n;\nloop invariant i39: i + j + k + v1 + v2 + v3 + v4 == l;\n\n\n\n\n\n\nloop invariant i46: l%2 ==> k >= 1;\nloop invariant i47: !(l%7) ==> v1 <= (l/7);\nloop invariant i48: !(l%6) ==> v2 <= (l/6);\nloop invariant i49: !(l%5) ==> v3 <= (l/5);\nloop invariant i50: !(l%4) ==> v4 <= (l/4);\nloop invariant i51: !(l%3) ==> i <= (l/3);\nloop invariant i52: !(l%2) ==> j <= (l/2);\nloop invariant i53: l%2 ==> k <= (l+1)/2;\nloop invariant i54: !(l%7) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant i55: !(l%6) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant i56: !(l%5) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant i57: !(l%4) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant i58: !(l%3) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant i59: !(l%2) ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant i60: l%2 ==> v1 + v2 + v3 + v4 + i + j + k <= (l+1);\nloop invariant i61: 0 <= i <= l;\nloop invariant i62: 0 <= j <= l;\nloop invariant i63: 0 <= k <= l;\nloop invariant i64: 0 <= v1 <= l;\nloop invariant i65: 0 <= v2 <= l;\nloop invariant i66: 0 <= v3 <= l;\nloop invariant i67: 0 <= v4 <= l;\nloop invariant i68: l % 7 >= 0 ==> v1 == l / 7;\nloop invariant i69: (i+j+k+v1+v2+v3+v4) >= 0;\nloop invariant i70: (i+j+k+v1+v2+v3+v4) <= n;\n\n\n\nloop invariant i74: v1 == (l / 7);\nloop invariant i75: v2 == (l / 6);\nloop invariant i76: v3 == (l / 5);\nloop invariant i77: v4 == (l / 4);\nloop invariant i78: 0 <= i <= n;\nloop invariant i79: 0 <= j <= n;\nloop invariant i80: 0 <= k <= n;\nloop invariant i81: 0 <= v1 <= n;\nloop invariant i82: 0 <= v2 <= n;\nloop invariant i83: 0 <= v3 <= n;\nloop invariant i84: 0 <= v4 <= n;\n\nloop invariant i86: l%7 == 0 ==> v1 == (l/7);\nloop invariant i87: l%7 != 0 ==> v1 <= (l/7);\nloop invariant i88: l%6 == 0 ==> v2 == (l/6);\nloop invariant i89: l%6 != 0 ==> v2 <= (l/6);\nloop invariant i90: l%5 == 0 ==> v3 == (l/5);\nloop invariant i91: l%5 != 0 ==> v3 <= (l/5);\nloop invariant i92: l%4 == 0 ==> v4 == (l/4);\nloop invariant i93: l%4 != 0 ==> v4 <= (l/4);\nloop invariant i94: l%3 == 0 ==> i == (l/3);\nloop invariant i95: l%3 != 0 ==> i <= (l/3);\nloop invariant i96: l%2 == 0 ==> j == (l/2);\nloop invariant i97: l%2 != 0 ==> j <= (l/2);\nloop invariant i98: k == l - (i+j+v1+v2+v3+v4);\n\n\n\n\n\n\n\nloop invariant i106: 0 <= i <= n/2;\nloop invariant i107: 0 <= j <= n/2;\nloop invariant i108: 0 <= k <= n/2;\nloop invariant i109: 0 <= v1 <= n/7;\nloop invariant i110: 0 <= v2 <= n/6;\nloop invariant i111: 0 <= v3 <= n/5;\nloop invariant i112: 0 <= v4 <= n/4;\nloop invariant i113: (i <= l/2);\nloop invariant i114: (j <= l/2);\nloop invariant i115: (k <= l/2);\nloop invariant i116: (v1 <= l/7);\nloop invariant i117: (v2 <= l/6);\nloop invariant i118: (v3 <= l/5);\nloop invariant i119: (v4 <= l/4);\nloop invariant i120: 0 <= n <= SIZE;\nloop invariant i121: 0 <= k <= n/3;\nloop invariant i122: l == (i+j+k+v1+v2+v3+v4);\nloop invariant i123: l == n ==> (i+j+k+v1+v2+v3+v4) == n;\nloop invariant i124: i <= l;\nloop invariant i125: j <= l;\nloop invariant i126: k <= l;\nloop invariant i127: v1 <= l;\nloop invariant i128: v2 <= l;\nloop invariant i129: v3 <= l;\nloop invariant i130: v4 <= l;\nloop invariant i131: i <= j;\nloop invariant i132: i <= k;\nloop invariant i133: i <= v1;\nloop invariant i134: i <= v2;\nloop invariant i135: i <= v3;\nloop invariant i136: i <= v4;\nloop invariant i137: j <= k;\nloop invariant i138: j <= v1;\nloop invariant i139: j <= v2;\nloop invariant i140: j <= v3;\nloop invariant i141: j <= v4;\nloop invariant i142: k <= v1;\nloop invariant i143: k <= v2;\nloop invariant i144: k <= v3;\nloop invariant i145: k <= v4;\nloop invariant i146: v1 <= v2;\nloop invariant i147: v1 <= v3;\nloop invariant i148: v1 <= v4;\nloop invariant i149: v2 <= v3;\nloop invariant i150: v2 <= v4;\nloop invariant i151: v3 <= v4;\nloop invariant i152: i + j + k + v1 + v2 + v3 + v4 <= n;\nloop invariant i153: n <= SIZE;\nloop invariant i154: 0 <= i <= l/3;\nloop invariant i155: 0 <= j <= l/2;\nloop invariant i156: 0 <= k <= (l - (i + j));\nloop invariant i157: 0 <= v1 <= l/7;\nloop invariant i158: 0 <= v2 <= l/6;\nloop invariant i159: 0 <= v3 <= l/5;\nloop invariant i160: 0 <= v4 <= l/4;\nloop invariant i161: v1 + v2 + v3 + v4 + i + j + k == l;\nloop invariant i162: 0 <= i <= (n / 3);\nloop invariant i163: 0 <= j <= (n / 2);\nloop invariant i164: 0 <= k <= (n / 7);\nloop invariant i165: 0 <= v1 <= (n / 7);\nloop invariant i166: 0 <= v2 <= (n / 6);\nloop invariant i167: 0 <= v3 <= (n / 5);\nloop invariant i168: 0 <= v4 <= (n / 4);\nloop invariant i169: (i + j + k + v1 + v2 + v3 + v4) <= l;\nloop invariant i170: (i + j + k + v1 + v2 + v3 + v4) >= l;\n*/\nwhile( l < n ) {\n\t\n\t  if(!(l%7))\n\t    v1 = v1 + 1;\n\t  else if(!(l%6))\n\t    v2 = v2 + 1;\n\t  else if(!(l%5))\n\t    v3 = v3 + 1;\n\t  else if(!(l%4))\n\t    v4 = v4 + 1;\n\t  else if(!(l%3))\n\t    i = i + 1;\n\t  else if(!(l%2)) \n\t\t  j = j+1;\n\t  else \n\t    k = k+1;\n    l = l+1;\n    {;\n//@ assert((i+j+k+v1+v2+v3+v4) == l);\n}\n\n  }\n  return 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark16_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark17_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark19_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark20_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark21_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark22_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark23_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark25_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark26_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark29_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark30_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark31_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark32_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark33_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark34_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark35_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark36_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark37_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark38_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark39_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark40_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark41_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark42_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark43_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark45_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark46_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark47_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark48_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark49_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark50_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark51_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark52_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark53_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/Mono1_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/loopv1.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/loopv3.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_10.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_11.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_12.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_9.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sum_natnum.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt2.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt3.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt4.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt5.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt6.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/sumt7.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark27_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/iftelse.c",
            "../dataset/loop_invariants/sv-benchmarks/loops-crafted-1/mono-crafted_8.c"
        ],
        "skipped": [],
        "total": 187,
        "success_count": 165,
        "failure_count": 22,
        "success_rate": 0.8823529411764706
    }
}