{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark19_conjunctive.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==n) && (k==n) && (n>0))) return 0;\n  while (j>0 && n>0) {\n    j--;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= k;\nloop invariant j <= k;\nloop invariant (j >= 0 ==> j <= n);\nloop invariant (k >= 0 ==> k <= n);\nloop invariant (j >= k ==> j <= n);\nloop invariant (k <= j ==> k >= 0);\nloop invariant (j <= k ==> j >= 0);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k >= 0);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k <= n);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k >= 0);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k <= n);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k >= 0);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k >= 0);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k <= n);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k >= 0);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k <= n);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k >= 0);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k >= 0);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k <= n);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k >= 0);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k >= 0);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k <= n);\nloop invariant (k >= 0 ==> j >= k);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= n;\nloop invariant j == n;\nloop invariant k == 0;\nloop invariant n > 0;\nloop invariant j >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j <= n - k;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= n;\nloop invariant 0 <= j <= n;\nloop invariant j >= k;\nloop invariant n > 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= j <= n;\nloop invariant 1 <= k <= n;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant j == n || k == 0;\nloop invariant j == k || j == n || k == 0;\nloop invariant j == k || j == n || k == 0 ==> j == k;\nloop invariant j == k || j == n || k == 0 ==> k == 0;\nloop invariant j == k || j == n || k == 0 ==> (j == k ==> j == k);\nloop invariant j == k || j == n || k == 0 ==> (k == 0 ==> k == 0);\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0));\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k);\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (k == 0 ==> k == 0);\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0));\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k);\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (k == 0 ==> k == 0);\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0));\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k);\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (k == 0 ==> k == 0);\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0));\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k);\n*/\n```",
            "```\n/*@\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= k;\nloop invariant j == n || k == n;\nloop invariant j == k || j == 0 || k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j >= k;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == n;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == n || k == n ==> j == k;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= k <= j;\nloop invariant n >= j && n >= k;\nloop invariant j >= 0 && k >= 0;\nloop invariant j == 0 ==> n == k;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j == n - k;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= j <= n;\nloop invariant 1 <= k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j <= k;\nloop invariant k <= j;\nloop invariant j == k;\nloop invariant j > 0;\nloop invariant j <= n;\nloop invariant k > 0;\nloop invariant k <= n;\nloop invariant j == 0;\nloop invariant k == 0;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j >= k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j + k <= 2*n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j >= k;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j == k ==> j == 0;\nloop invariant j < n ==> j >= 0;\nloop invariant k < n ==> k >= 0;\nloop invariant j > 0 ==> j > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant j >= k ==> j >= k;\nloop invariant j <= n ==> j <= n;\nloop invariant k <= n ==> k <= n;\nloop invariant j >= 0 ==> j >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant j == k ==> k == 0;\nloop invariant j == k ==> j == 0;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\n*/\n```",
            "```\n/*@\nloop invariant j + k <= n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k <= j;\nloop invariant j >= 0;\nloop invariant n >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n * n;\nloop invariant 0 <= k <= n * n;\nloop invariant j >= k;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j > 0;\nloop invariant n > 0;\nloop invariant j >= k;\nloop invariant j + k <= n;\nloop invariant j + k >= n - 1;\nloop invariant j + k == n - 1;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= k;\nloop invariant j <= k;\nloop invariant (j >= 0 ==> j <= n);\nloop invariant (k >= 0 ==> k <= n);\nloop invariant (j >= k ==> j <= n);\nloop invariant (k <= j ==> k >= 0);\nloop invariant (j <= k ==> j >= 0);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k >= 0);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k <= n);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k >= 0);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k <= n);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k >= 0);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k >= 0);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k <= n);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k >= 0);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k <= n);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k >= 0);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k >= 0);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k <= n);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k >= 0);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k >= 0);\nloop invariant (k >= 0 ==> j >= k);\nloop invariant (j >= k ==> k >= 0);\nloop invariant (k <= j ==> j <= n);\nloop invariant (j <= k ==> k <= n);\nloop invariant (j >= 0 ==> k <= n);\nloop invariant (k >= 0 ==> j >= k);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==n) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\nloop invariant i2: 0 <= k <= n;\nloop invariant i3: j >= 0;\nloop invariant i4: k >= 0;\nloop invariant i5: j <= n;\nloop invariant i6: k <= n;\nloop invariant i7: j >= k;\nloop invariant i8: j <= k;\nloop invariant i9: (j >= 0 ==> j <= n);\nloop invariant i10: (k >= 0 ==> k <= n);\nloop invariant i11: (j >= k ==> j <= n);\nloop invariant i12: (k <= j ==> k >= 0);\nloop invariant i13: (j <= k ==> j >= 0);\nloop invariant i14: (j >= k ==> k >= 0);\nloop invariant i15: (k <= j ==> j <= n);\nloop invariant i16: (j <= k ==> k <= n);\nloop invariant i17: (j >= 0 ==> k >= 0);\nloop invariant i18: (k >= 0 ==> j >= k);\nloop invariant i19: (j >= 0 ==> k <= n);\n*/\nwhile (j>0 && n>0) {\n    j--;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= n;\nloop invariant j == n;\nloop invariant k == 0;\nloop invariant n > 0;\nloop invariant j >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==n) && (k==n) && (n>0))) return 0;\n  /*@\n\n\n\nloop invariant i4: n > 0;\nloop invariant i5: j >= 0;\n*/\nwhile (j>0 && n>0) {\n    j--;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j <= n - k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==n) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\n\n\n*/\nwhile (j>0 && n>0) {\n    j--;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= n;\nloop invariant 0 <= j <= n;\nloop invariant j >= k;\nloop invariant n > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==n) && (k==n) && (n>0))) return 0;\n  /*@\n\nloop invariant i2: 0 <= j <= n;\nloop invariant i3: j >= k;\nloop invariant i4: n > 0;\n*/\nwhile (j>0 && n>0) {\n    j--;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==n) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\nloop invariant i2: 0 <= k <= n;\nloop invariant i3: j >= 0;\nloop invariant i4: k >= 0;\nloop invariant i5: n > 0;\nloop invariant i6: j == k;\nloop invariant i7: j <= n;\nloop invariant i8: k <= n;\n*/\nwhile (j>0 && n>0) {\n    j--;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= j <= n;\nloop invariant 1 <= k <= n;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant j == n || k == 0;\nloop invariant j == k || j == n || k == 0;\nloop invariant j == k || j == n || k == 0 ==> j == k;\nloop invariant j == k || j == n || k == 0 ==> k == 0;\nloop invariant j == k || j == n || k == 0 ==> (j == k ==> j == k);\nloop invariant j == k || j == n || k == 0 ==> (k == 0 ==> k == 0);\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0));\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k);\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (k == 0 ==> k == 0);\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0));\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k);\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (k == 0 ==> k == 0);\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0));\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k);\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (k == 0 ==> k == 0);\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0));\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==n) && (k==n) && (n>0))) return 0;\n  /*@\n\n\nloop invariant i3: j <= n;\nloop invariant i4: k <= n;\nloop invariant i5: j >= 0;\nloop invariant i6: k >= 0;\n\nloop invariant i8: j == k || j == n || k == 0;\nloop invariant i9: j == k || j == n || k == 0 ==> j == k;\n\nloop invariant i11: j == k || j == n || k == 0 ==> (j == k ==> j == k);\nloop invariant i12: j == k || j == n || k == 0 ==> (k == 0 ==> k == 0);\nloop invariant i13: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0));\nloop invariant i14: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k);\nloop invariant i15: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (k == 0 ==> k == 0);\nloop invariant i16: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0));\nloop invariant i17: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k);\nloop invariant i18: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (k == 0 ==> k == 0);\nloop invariant i19: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0));\nloop invariant i20: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k);\nloop invariant i21: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (k == 0 ==> k == 0);\nloop invariant i22: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0));\nloop invariant i23: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k);\n*/\nwhile (j>0 && n>0) {\n    j--;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 13,
                "annotations": "```\n/*@\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j >= k;\nloop invariant j == n || k == n;\nloop invariant j == k || j == 0 || k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j >= k;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == n;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == n || k == n ==> j == k;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> k == 0;\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==n) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: j >= 0;\nloop invariant i2: k >= 0;\nloop invariant i3: n > 0;\nloop invariant i4: j <= n;\nloop invariant i5: k <= n;\nloop invariant i6: j >= k;\n\nloop invariant i8: j == k || j == 0 || k == 0;\n\nloop invariant i10: j == 0 || k == 0 || j == n || k == n ==> j >= k;\n\n\nloop invariant i13: j == 0 || k == 0 || j == n || k == n ==> j == k;\nloop invariant i14: j == 0 || k == 0 || j == n || k == n ==> j == n || k == n ==> j == k;\n\n\nloop invariant i17: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0;\n\n\nloop invariant i20: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0;\n\n\nloop invariant i23: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0;\n\n\nloop invariant i26: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0;\n\n\nloop invariant i29: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0;\n*/\nwhile (j>0 && n>0) {\n    j--;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= k <= j;\nloop invariant n >= j && n >= k;\nloop invariant j >= 0 && k >= 0;\nloop invariant j == 0 ==> n == k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==n) && (k==n) && (n>0))) return 0;\n  /*@\n\nloop invariant i2: n >= j && n >= k;\n\n\n*/\nwhile (j>0 && n>0) {\n    j--;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j == k;\nloop invariant j == n - k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==n) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\nloop invariant i2: 0 <= k <= n;\nloop invariant i3: j >= 0;\nloop invariant i4: k >= 0;\nloop invariant i5: n > 0;\nloop invariant i6: j == k;\n\n*/\nwhile (j>0 && n>0) {\n    j--;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 1 <= j <= n;\nloop invariant 1 <= k <= n;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\nloop invariant j <= k;\nloop invariant k <= j;\nloop invariant j == k;\nloop invariant j > 0;\nloop invariant j <= n;\nloop invariant k > 0;\nloop invariant k <= n;\nloop invariant j == 0;\nloop invariant k == 0;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\nloop invariant j == k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==n) && (k==n) && (n>0))) return 0;\n  /*@\n\n\nloop invariant i3: j >= 0;\nloop invariant i4: k >= 0;\nloop invariant i5: n > 0;\nloop invariant i6: j <= k;\nloop invariant i7: k <= j;\nloop invariant i8: j == k;\n\nloop invariant i10: j <= n;\n\nloop invariant i12: k <= n;\n\n\n*/\nwhile (j>0 && n>0) {\n    j--;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j >= k;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j + k <= 2*n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==n) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\n\nloop invariant i3: j >= k;\nloop invariant i4: j <= n;\nloop invariant i5: k <= n;\nloop invariant i6: j + k <= 2*n;\n*/\nwhile (j>0 && n>0) {\n    j--;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j >= k;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k <= n;\nloop invariant j == k ==> j == 0;\nloop invariant j < n ==> j >= 0;\nloop invariant k < n ==> k >= 0;\nloop invariant j > 0 ==> j > 0;\nloop invariant k > 0 ==> k > 0;\nloop invariant j >= k ==> j >= k;\nloop invariant j <= n ==> j <= n;\nloop invariant k <= n ==> k <= n;\nloop invariant j >= 0 ==> j >= 0;\nloop invariant k >= 0 ==> k >= 0;\nloop invariant j == k ==> k == 0;\nloop invariant j == k ==> j == 0;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\nloop invariant j == k ==> j == k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==n) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\n\nloop invariant i3: j >= k;\nloop invariant i4: j >= 0;\n\nloop invariant i6: j <= n;\nloop invariant i7: k <= n;\n\nloop invariant i9: j < n ==> j >= 0;\n\nloop invariant i11: j > 0 ==> j > 0;\nloop invariant i12: k > 0 ==> k > 0;\nloop invariant i13: j >= k ==> j >= k;\nloop invariant i14: j <= n ==> j <= n;\nloop invariant i15: k <= n ==> k <= n;\nloop invariant i16: j >= 0 ==> j >= 0;\nloop invariant i17: k >= 0 ==> k >= 0;\n\nloop invariant i19: j == k ==> j == k;\n*/\nwhile (j>0 && n>0) {\n    j--;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant j + k <= n;\nloop invariant k >= 0;\nloop invariant j <= n;\nloop invariant k <= j;\nloop invariant j >= 0;\nloop invariant n >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==n) && (k==n) && (n>0))) return 0;\n  /*@\n\n\nloop invariant i3: j <= n;\nloop invariant i4: k <= j;\nloop invariant i5: j >= 0;\nloop invariant i6: n >= 0;\n*/\nwhile (j>0 && n>0) {\n    j--;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n * n;\nloop invariant 0 <= k <= n * n;\nloop invariant j >= k;\nloop invariant j >= 0;\nloop invariant k >= 0;\nloop invariant n > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==n) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n * n;\n\nloop invariant i3: j >= k;\nloop invariant i4: j >= 0;\n\nloop invariant i6: n > 0;\n*/\nwhile (j>0 && n>0) {\n    j--;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= n;\nloop invariant 0 <= k <= n;\nloop invariant j > 0;\nloop invariant n > 0;\nloop invariant j >= k;\nloop invariant j + k <= n;\nloop invariant j + k >= n - 1;\nloop invariant j + k == n - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==n) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\n\n\nloop invariant i4: n > 0;\nloop invariant i5: j >= k;\n\n\n\n*/\nwhile (j>0 && n>0) {\n    j--;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "loop invariant 0 <= j <= n is partially proven to be inductive.\nloop invariant 0 <= k <= n is partially proven to be inductive.\nloop invariant j >= 0 is partially proven to be inductive.\nloop invariant k >= 0 is partially proven to be inductive.\nloop invariant j <= n is partially proven to be inductive.\nloop invariant k <= n is partially proven to be inductive.\nloop invariant j >= k is partially proven to be inductive.\nloop invariant j <= k is partially proven to be inductive.\nloop invariant (j >= 0 ==> j <= n) is partially proven to be inductive.\nloop invariant (k >= 0 ==> k <= n) is partially proven to be inductive.\nloop invariant (j >= k ==> j <= n) is partially proven to be inductive.\nloop invariant (k <= j ==> k >= 0) is partially proven to be inductive.\nloop invariant (j <= k ==> j >= 0) is partially proven to be inductive.\nloop invariant (j >= k ==> k >= 0) is partially proven to be inductive.\nloop invariant (k <= j ==> j <= n) is partially proven to be inductive.\nloop invariant (j <= k ==> k <= n) is partially proven to be inductive.\nloop invariant (j >= 0 ==> k >= 0) is partially proven to be inductive.\nloop invariant (k >= 0 ==> j >= k) is partially proven to be inductive.\nloop invariant (j >= 0 ==> k <= n) is partially proven to be inductive.\nloop invariant j == n is partially proven to be inductive.\nloop invariant k == 0 is preserved but not established.\nloop invariant n > 0 is partially proven to be inductive.\nloop invariant j <= n - k is partially proven to be inductive.\nloop invariant j == k is partially proven to be inductive.\nloop invariant 1 <= j <= n is partially proven to be inductive.\nloop invariant 1 <= k <= n is partially proven to be inductive.\nloop invariant j == n || k == 0 is partially proven to be inductive.\nloop invariant j == k || j == n || k == 0 is partially proven to be inductive.\nloop invariant j == k || j == n || k == 0 ==> j == k is partially proven to be inductive.\nloop invariant j == k || j == n || k == 0 ==> k == 0 is partially proven to be inductive.\nloop invariant j == k || j == n || k == 0 ==> (j == k ==> j == k) is partially proven to be inductive.\nloop invariant j == k || j == n || k == 0 ==> (k == 0 ==> k == 0) is partially proven to be inductive.\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) is partially proven to be inductive.\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k) is partially proven to be inductive.\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (k == 0 ==> k == 0) is partially proven to be inductive.\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) is partially proven to be inductive.\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k) is partially proven to be inductive.\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (k == 0 ==> k == 0) is partially proven to be inductive.\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) is partially proven to be inductive.\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k) is partially proven to be inductive.\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (k == 0 ==> k == 0) is partially proven to be inductive.\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) is partially proven to be inductive.\nloop invariant j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k) is partially proven to be inductive.\nloop invariant j == n || k == n is partially proven to be inductive.\nloop invariant j == k || j == 0 || k == 0 is partially proven to be inductive.\nloop invariant j == 0 || k == 0 || j == n || k == n is partially proven to be inductive.\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j >= k is partially proven to be inductive.\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == n is partially proven to be inductive.\nloop invariant j == 0 || k == 0 || j == n || k == n ==> k == 0 is partially proven to be inductive.\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k is partially proven to be inductive.\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == n || k == n ==> j == k is partially proven to be inductive.\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n is partially proven to be inductive.\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> k == 0 is partially proven to be inductive.\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 is partially proven to be inductive.\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n is partially proven to be inductive.\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> k == 0 is partially proven to be inductive.\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 is partially proven to be inductive.\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n is partially proven to be inductive.\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> k == 0 is partially proven to be inductive.\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 is partially proven to be inductive.\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n is partially proven to be inductive.\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> k == 0 is partially proven to be inductive.\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 is partially proven to be inductive.\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n is partially proven to be inductive.\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> k == 0 is partially proven to be inductive.\nloop invariant j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 is partially proven to be inductive.\nloop invariant 0 <= k <= j is partially proven to be inductive.\nloop invariant n >= j && n >= k is partially proven to be inductive.\nloop invariant j >= 0 && k >= 0 is partially proven to be inductive.\nloop invariant j == 0 ==> n == k is partially proven to be inductive.\nloop invariant j == n - k is partially proven to be inductive.\nloop invariant k <= j is partially proven to be inductive.\nloop invariant j > 0 is partially proven to be inductive.\nloop invariant k > 0 is partially proven to be inductive.\nloop invariant j == 0 is partially proven to be inductive.\nloop invariant j + k <= 2*n is partially proven to be inductive.\nloop invariant j == k ==> j == 0 is partially proven to be inductive.\nloop invariant j < n ==> j >= 0 is partially proven to be inductive.\nloop invariant k < n ==> k >= 0 is partially proven to be inductive.\nloop invariant j > 0 ==> j > 0 is partially proven to be inductive.\nloop invariant k > 0 ==> k > 0 is partially proven to be inductive.\nloop invariant j >= k ==> j >= k is partially proven to be inductive.\nloop invariant j <= n ==> j <= n is partially proven to be inductive.\nloop invariant k <= n ==> k <= n is partially proven to be inductive.\nloop invariant j >= 0 ==> j >= 0 is partially proven to be inductive.\nloop invariant k >= 0 ==> k >= 0 is partially proven to be inductive.\nloop invariant j == k ==> k == 0 is partially proven to be inductive.\nloop invariant j == k ==> j == k is partially proven to be inductive.\nloop invariant j + k <= n is partially proven to be inductive.\nloop invariant n >= 0 is partially proven to be inductive.\nloop invariant 0 <= j <= n * n is partially proven to be inductive.\nloop invariant 0 <= k <= n * n is partially proven to be inductive.\nloop invariant j + k >= n - 1 is partially proven to be inductive.\nloop invariant j + k == n - 1 is partially proven to be inductive.\nAssertion k == 0: Partially proven",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==n) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\nloop invariant i2: 0 <= k <= n;\nloop invariant i3: j >= 0;\nloop invariant i4: k >= 0;\nloop invariant i5: j <= n;\nloop invariant i6: k <= n;\nloop invariant i7: j >= k;\nloop invariant i8: j <= k;\nloop invariant i9: (j >= 0 ==> j <= n);\nloop invariant i10: (k >= 0 ==> k <= n);\nloop invariant i11: (j >= k ==> j <= n);\nloop invariant i12: (k <= j ==> k >= 0);\nloop invariant i13: (j <= k ==> j >= 0);\nloop invariant i14: (j >= k ==> k >= 0);\nloop invariant i15: (k <= j ==> j <= n);\nloop invariant i16: (j <= k ==> k <= n);\nloop invariant i17: (j >= 0 ==> k >= 0);\nloop invariant i18: (k >= 0 ==> j >= k);\nloop invariant i19: (j >= 0 ==> k <= n);\nloop invariant i20: j == n;\nloop invariant i21: k == 0;\nloop invariant i22: n > 0;\nloop invariant i23: j <= n - k;\nloop invariant i24: j == k;\nloop invariant i25: 1 <= j <= n;\nloop invariant i26: 1 <= k <= n;\nloop invariant i27: j == n || k == 0;\nloop invariant i28: j == k || j == n || k == 0;\nloop invariant i29: j == k || j == n || k == 0 ==> j == k;\nloop invariant i30: j == k || j == n || k == 0 ==> k == 0;\nloop invariant i31: j == k || j == n || k == 0 ==> (j == k ==> j == k);\nloop invariant i32: j == k || j == n || k == 0 ==> (k == 0 ==> k == 0);\nloop invariant i33: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0));\nloop invariant i34: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k);\nloop invariant i35: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (k == 0 ==> k == 0);\nloop invariant i36: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0));\nloop invariant i37: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k);\nloop invariant i38: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (k == 0 ==> k == 0);\nloop invariant i39: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0));\nloop invariant i40: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k);\nloop invariant i41: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (k == 0 ==> k == 0);\nloop invariant i42: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0));\nloop invariant i43: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k);\nloop invariant i44: j == n || k == n;\nloop invariant i45: j == k || j == 0 || k == 0;\nloop invariant i46: j == 0 || k == 0 || j == n || k == n;\nloop invariant i47: j == 0 || k == 0 || j == n || k == n ==> j >= k;\nloop invariant i48: j == 0 || k == 0 || j == n || k == n ==> j == n;\nloop invariant i49: j == 0 || k == 0 || j == n || k == n ==> k == 0;\nloop invariant i50: j == 0 || k == 0 || j == n || k == n ==> j == k;\nloop invariant i51: j == 0 || k == 0 || j == n || k == n ==> j == n || k == n ==> j == k;\nloop invariant i52: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n;\nloop invariant i53: j == 0 || k == 0 || j == n || k == n ==> j == k ==> k == 0;\nloop invariant i54: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0;\nloop invariant i55: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n;\nloop invariant i56: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> k == 0;\nloop invariant i57: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0;\nloop invariant i58: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n;\nloop invariant i59: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> k == 0;\nloop invariant i60: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0;\nloop invariant i61: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n;\nloop invariant i62: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> k == 0;\nloop invariant i63: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0;\nloop invariant i64: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n;\nloop invariant i65: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> k == 0;\nloop invariant i66: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0;\nloop invariant i67: 0 <= k <= j;\nloop invariant i68: n >= j && n >= k;\nloop invariant i69: j >= 0 && k >= 0;\nloop invariant i70: j == 0 ==> n == k;\nloop invariant i71: j == n - k;\nloop invariant i72: k <= j;\nloop invariant i73: j > 0;\nloop invariant i74: k > 0;\nloop invariant i75: j == 0;\nloop invariant i76: j + k <= 2*n;\nloop invariant i77: j == k ==> j == 0;\nloop invariant i78: j < n ==> j >= 0;\nloop invariant i79: k < n ==> k >= 0;\nloop invariant i80: j > 0 ==> j > 0;\nloop invariant i81: k > 0 ==> k > 0;\nloop invariant i82: j >= k ==> j >= k;\nloop invariant i83: j <= n ==> j <= n;\nloop invariant i84: k <= n ==> k <= n;\nloop invariant i85: j >= 0 ==> j >= 0;\nloop invariant i86: k >= 0 ==> k >= 0;\nloop invariant i87: j == k ==> k == 0;\nloop invariant i88: j == k ==> j == k;\nloop invariant i89: j + k <= n;\nloop invariant i90: n >= 0;\nloop invariant i91: 0 <= j <= n * n;\nloop invariant i92: 0 <= k <= n * n;\nloop invariant i93: j + k >= n - 1;\nloop invariant i94: j + k == n - 1;\n*/\nwhile (j>0 && n>0) {\n    j--;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 28,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((j==n) && (k==n) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= j <= n;\nloop invariant i2: 0 <= k <= n;\nloop invariant i3: j >= 0;\nloop invariant i4: k >= 0;\nloop invariant i5: j <= n;\nloop invariant i6: k <= n;\nloop invariant i7: j >= k;\nloop invariant i8: j <= k;\nloop invariant i9: (j >= 0 ==> j <= n);\nloop invariant i10: (k >= 0 ==> k <= n);\nloop invariant i11: (j >= k ==> j <= n);\nloop invariant i12: (k <= j ==> k >= 0);\nloop invariant i13: (j <= k ==> j >= 0);\nloop invariant i14: (j >= k ==> k >= 0);\nloop invariant i15: (k <= j ==> j <= n);\nloop invariant i16: (j <= k ==> k <= n);\nloop invariant i17: (j >= 0 ==> k >= 0);\nloop invariant i18: (k >= 0 ==> j >= k);\nloop invariant i19: (j >= 0 ==> k <= n);\n\n\nloop invariant i22: n > 0;\n\nloop invariant i24: j == k;\n\n\n\nloop invariant i28: j == k || j == n || k == 0;\nloop invariant i29: j == k || j == n || k == 0 ==> j == k;\n\nloop invariant i31: j == k || j == n || k == 0 ==> (j == k ==> j == k);\nloop invariant i32: j == k || j == n || k == 0 ==> (k == 0 ==> k == 0);\nloop invariant i33: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0));\nloop invariant i34: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k);\nloop invariant i35: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (k == 0 ==> k == 0);\nloop invariant i36: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0));\nloop invariant i37: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k);\nloop invariant i38: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (k == 0 ==> k == 0);\nloop invariant i39: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0));\nloop invariant i40: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k);\nloop invariant i41: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (k == 0 ==> k == 0);\nloop invariant i42: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0));\nloop invariant i43: j == k || j == n || k == 0 ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> ((j == k ==> j == k) && (k == 0 ==> k == 0)) ==> (j == k ==> j == k);\n\nloop invariant i45: j == k || j == 0 || k == 0;\n\nloop invariant i47: j == 0 || k == 0 || j == n || k == n ==> j >= k;\n\n\nloop invariant i50: j == 0 || k == 0 || j == n || k == n ==> j == k;\nloop invariant i51: j == 0 || k == 0 || j == n || k == n ==> j == n || k == n ==> j == k;\n\n\nloop invariant i54: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0;\n\n\nloop invariant i57: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0;\n\n\nloop invariant i60: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0;\n\n\nloop invariant i63: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0;\n\n\nloop invariant i66: j == 0 || k == 0 || j == n || k == n ==> j == k ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0 ==> j == n || k == 0;\nloop invariant i67: 0 <= k <= j;\nloop invariant i68: n >= j && n >= k;\nloop invariant i69: j >= 0 && k >= 0;\n\n\nloop invariant i72: k <= j;\n\n\n\nloop invariant i76: j + k <= 2*n;\n\nloop invariant i78: j < n ==> j >= 0;\nloop invariant i79: k < n ==> k >= 0;\nloop invariant i80: j > 0 ==> j > 0;\nloop invariant i81: k > 0 ==> k > 0;\nloop invariant i82: j >= k ==> j >= k;\nloop invariant i83: j <= n ==> j <= n;\nloop invariant i84: k <= n ==> k <= n;\nloop invariant i85: j >= 0 ==> j >= 0;\nloop invariant i86: k >= 0 ==> k >= 0;\n\nloop invariant i88: j == k ==> j == k;\n\nloop invariant i90: n >= 0;\nloop invariant i91: 0 <= j <= n * n;\nloop invariant i92: 0 <= k <= n * n;\n\n\n*/\nwhile (j>0 && n>0) {\n    j--;k--;\n  }\n  {;\n//@ assert((k == 0));\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark16_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark17_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark19_conjunctive.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c"
        ],
        "skipped": [],
        "total": 140,
        "success_count": 121,
        "failure_count": 19,
        "success_rate": 0.8642857142857143
    }
}