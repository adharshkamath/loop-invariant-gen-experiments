{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/30.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  \n  (x = 100);\n  \n  while ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == 0) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x > 0 ==> x' <= x - 1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 100;\n*/\n```",
            "```\n/*@\nloop invariant x >= 1;\nloop invariant x <= 100;\nloop invariant x == 100 - y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x == (100 - (x - 1));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant x >= 100;\nloop invariant x == 0;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100; loop invariant x <= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 < x <= 100;\nloop invariant x == 100 ==> x - 1 == 99;\nloop invariant x == 100 ==> x - 2 == 98;\nloop invariant x == 100 ==> x - 3 == 97;\nloop invariant x == 100 ==> x - 4 == 96;\nloop invariant x == 100 ==> x - 5 == 95;\nloop invariant x == 100 ==> x - 6 == 94;\nloop invariant x == 100 ==> x - 7 == 93;\nloop invariant x == 100 ==> x - 8 == 92;\nloop invariant x == 100 ==> x - 9 == 91;\nloop invariant x == 100 ==> x - 10 == 90;\nloop invariant x == 100 ==> x - 11 == 89;\nloop invariant x == 100 ==> x - 12 == 88;\nloop invariant x == 100 ==> x - 13 == 87;\nloop invariant x == 100 ==> x - 14 == 86;\nloop invariant x == 100 ==> x - 15 == 85;\nloop invariant x == 100 ==> x - 16 == 84;\nloop invariant x == 100 ==> x - 17 == 83;\nloop invariant x == 100 ==> x - 18 == 82;\nloop invariant x == 100 ==> x - 19 == 81;\nloop invariant x == 100 ==> x - 20 == 80;\nloop invariant x == 100 ==> x - 21 == 79;\nloop invariant x == 100 ==> x - 22 == 78;\nloop invariant x == 100 ==> x - 23 == 77;\nloop invariant x == 100 ==> x - 24 == 76;\nloop invariant x == 100 ==> x - 25 == 75;\nloop invariant x == 100 ==> x - 26 == 74;\nloop invariant x == 100 ==> x - 27 == 73;\nloop invariant x == 100 ==> x - 28 == 72;\nloop invariant x == 100 ==> x - 29 == 71;\nloop invariant x == 100 ==> x - 30 == 70;\nloop invariant x == 100 ==> x - 31 == 69;\nloop invariant x == 100 ==> x - 32 == 68;\nloop invariant x == 100 ==> x - 33 == 67;\nloop invariant x == 100 ==> x - 34 == 66;\nloop invariant x == 100 ==> x - 35 == 65;\nloop invariant x == 100 ==> x - 36 == 64;\nloop invariant x == 100 ==> x - 37 == 63;\nloop invariant x == 100 ==> x - 38 == 62;\nloop invariant x == 100 ==> x - 39 == 61;\nloop invariant x == 100 ==> x - 40 == 60;\nloop invariant x == 100 ==> x - 41 == 59;\nloop invariant x == 100 ==> x - 42 == 58;\nloop invariant x == 100 ==> x - 43 == 57;\nloop invariant x == 100 ==> x - 44 == 56;\nloop invariant x == 100 ==> x - 45 == 55;\nloop invariant x == 100 ==> x - 46 == 54;\nloop invariant x == 100 ==> x - 47 == 53;\nloop invariant x == 100 ==> x - 48 == 52;\nloop invariant x == 100 ==> x - 49 == 51;\nloop invariant x == 100 ==> x - 50 == 50;\nloop invariant x == 100 ==> x - 51 == 49;\nloop invariant x == 100 ==> x - 52 == 48;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= 1;\nloop invariant x <= 100;\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant x >= 100 - y;\nloop invariant x <= 100 - y + 1;\nloop invariant x >= 100 - y + 1 - 1;\nloop invariant x <= 100 - y + 1 - 1 + 1;\nloop invariant x >= 100 - y + 1 - 1 + 1 - 1;\nloop invariant x <= 100 - y + 1 - 1 + 1 - 1 + 1;\nloop invariant x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 100;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant x >= 0;\nloop invariant x >= 100 - y;\nloop invariant 1 <= x <= 100;\nloop invariant x >= 0;\nloop invariant x >= 100 - y;\nloop invariant if (x == 0) then (y == 100);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 1;\nloop invariant x >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= 100;\nloop invariant x <= 100;\nloop invariant 0 <= x <= 100;\nloop invariant x >= 100 ==> x == 100;\nloop invariant x <= 100 ==> x == 100;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x > 0 ==> x' <= x - 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  \n  (x = 100);\n  \n  /*@\nloop invariant i1: 0 <= x <= 100;\nloop invariant i2: x > 0 ==> x' <= x - 1;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  \n  (x = 100);\n  \n  /*@\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant x >= 1;\nloop invariant x <= 100;\nloop invariant x == 100 - y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  \n  (x = 100);\n  \n  /*@\n\nloop invariant i2: x <= 100;\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x == (100 - (x - 1));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  \n  (x = 100);\n  \n  /*@\nloop invariant i1: 0 <= x <= 100;\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant x >= 100;\nloop invariant x == 0;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\nloop invariant x == 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  \n  (x = 100);\n  \n  /*@\nloop invariant i1: 0 <= x <= 100;\nloop invariant i2: x >= 0;\nloop invariant i3: x <= 100;\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100; loop invariant x <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  \n  (x = 100);\n  \n  /*@\nloop invariant i1: 0 <= x <= 100; loop invariant x <= 100;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 < x <= 100;\nloop invariant x == 100 ==> x - 1 == 99;\nloop invariant x == 100 ==> x - 2 == 98;\nloop invariant x == 100 ==> x - 3 == 97;\nloop invariant x == 100 ==> x - 4 == 96;\nloop invariant x == 100 ==> x - 5 == 95;\nloop invariant x == 100 ==> x - 6 == 94;\nloop invariant x == 100 ==> x - 7 == 93;\nloop invariant x == 100 ==> x - 8 == 92;\nloop invariant x == 100 ==> x - 9 == 91;\nloop invariant x == 100 ==> x - 10 == 90;\nloop invariant x == 100 ==> x - 11 == 89;\nloop invariant x == 100 ==> x - 12 == 88;\nloop invariant x == 100 ==> x - 13 == 87;\nloop invariant x == 100 ==> x - 14 == 86;\nloop invariant x == 100 ==> x - 15 == 85;\nloop invariant x == 100 ==> x - 16 == 84;\nloop invariant x == 100 ==> x - 17 == 83;\nloop invariant x == 100 ==> x - 18 == 82;\nloop invariant x == 100 ==> x - 19 == 81;\nloop invariant x == 100 ==> x - 20 == 80;\nloop invariant x == 100 ==> x - 21 == 79;\nloop invariant x == 100 ==> x - 22 == 78;\nloop invariant x == 100 ==> x - 23 == 77;\nloop invariant x == 100 ==> x - 24 == 76;\nloop invariant x == 100 ==> x - 25 == 75;\nloop invariant x == 100 ==> x - 26 == 74;\nloop invariant x == 100 ==> x - 27 == 73;\nloop invariant x == 100 ==> x - 28 == 72;\nloop invariant x == 100 ==> x - 29 == 71;\nloop invariant x == 100 ==> x - 30 == 70;\nloop invariant x == 100 ==> x - 31 == 69;\nloop invariant x == 100 ==> x - 32 == 68;\nloop invariant x == 100 ==> x - 33 == 67;\nloop invariant x == 100 ==> x - 34 == 66;\nloop invariant x == 100 ==> x - 35 == 65;\nloop invariant x == 100 ==> x - 36 == 64;\nloop invariant x == 100 ==> x - 37 == 63;\nloop invariant x == 100 ==> x - 38 == 62;\nloop invariant x == 100 ==> x - 39 == 61;\nloop invariant x == 100 ==> x - 40 == 60;\nloop invariant x == 100 ==> x - 41 == 59;\nloop invariant x == 100 ==> x - 42 == 58;\nloop invariant x == 100 ==> x - 43 == 57;\nloop invariant x == 100 ==> x - 44 == 56;\nloop invariant x == 100 ==> x - 45 == 55;\nloop invariant x == 100 ==> x - 46 == 54;\nloop invariant x == 100 ==> x - 47 == 53;\nloop invariant x == 100 ==> x - 48 == 52;\nloop invariant x == 100 ==> x - 49 == 51;\nloop invariant x == 100 ==> x - 50 == 50;\nloop invariant x == 100 ==> x - 51 == 49;\nloop invariant x == 100 ==> x - 52 == 48;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  \n  (x = 100);\n  \n  /*@\n\nloop invariant i2: x == 100 ==> x - 1 == 99;\nloop invariant i3: x == 100 ==> x - 2 == 98;\nloop invariant i4: x == 100 ==> x - 3 == 97;\nloop invariant i5: x == 100 ==> x - 4 == 96;\nloop invariant i6: x == 100 ==> x - 5 == 95;\nloop invariant i7: x == 100 ==> x - 6 == 94;\nloop invariant i8: x == 100 ==> x - 7 == 93;\nloop invariant i9: x == 100 ==> x - 8 == 92;\nloop invariant i10: x == 100 ==> x - 9 == 91;\nloop invariant i11: x == 100 ==> x - 10 == 90;\nloop invariant i12: x == 100 ==> x - 11 == 89;\nloop invariant i13: x == 100 ==> x - 12 == 88;\nloop invariant i14: x == 100 ==> x - 13 == 87;\nloop invariant i15: x == 100 ==> x - 14 == 86;\nloop invariant i16: x == 100 ==> x - 15 == 85;\nloop invariant i17: x == 100 ==> x - 16 == 84;\nloop invariant i18: x == 100 ==> x - 17 == 83;\nloop invariant i19: x == 100 ==> x - 18 == 82;\nloop invariant i20: x == 100 ==> x - 19 == 81;\nloop invariant i21: x == 100 ==> x - 20 == 80;\nloop invariant i22: x == 100 ==> x - 21 == 79;\nloop invariant i23: x == 100 ==> x - 22 == 78;\nloop invariant i24: x == 100 ==> x - 23 == 77;\nloop invariant i25: x == 100 ==> x - 24 == 76;\nloop invariant i26: x == 100 ==> x - 25 == 75;\nloop invariant i27: x == 100 ==> x - 26 == 74;\nloop invariant i28: x == 100 ==> x - 27 == 73;\nloop invariant i29: x == 100 ==> x - 28 == 72;\nloop invariant i30: x == 100 ==> x - 29 == 71;\nloop invariant i31: x == 100 ==> x - 30 == 70;\nloop invariant i32: x == 100 ==> x - 31 == 69;\nloop invariant i33: x == 100 ==> x - 32 == 68;\nloop invariant i34: x == 100 ==> x - 33 == 67;\nloop invariant i35: x == 100 ==> x - 34 == 66;\nloop invariant i36: x == 100 ==> x - 35 == 65;\nloop invariant i37: x == 100 ==> x - 36 == 64;\nloop invariant i38: x == 100 ==> x - 37 == 63;\nloop invariant i39: x == 100 ==> x - 38 == 62;\nloop invariant i40: x == 100 ==> x - 39 == 61;\nloop invariant i41: x == 100 ==> x - 40 == 60;\nloop invariant i42: x == 100 ==> x - 41 == 59;\nloop invariant i43: x == 100 ==> x - 42 == 58;\nloop invariant i44: x == 100 ==> x - 43 == 57;\nloop invariant i45: x == 100 ==> x - 44 == 56;\nloop invariant i46: x == 100 ==> x - 45 == 55;\nloop invariant i47: x == 100 ==> x - 46 == 54;\nloop invariant i48: x == 100 ==> x - 47 == 53;\nloop invariant i49: x == 100 ==> x - 48 == 52;\nloop invariant i50: x == 100 ==> x - 49 == 51;\nloop invariant i51: x == 100 ==> x - 50 == 50;\nloop invariant i52: x == 100 ==> x - 51 == 49;\nloop invariant i53: x == 100 ==> x - 52 == 48;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= 1;\nloop invariant x <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  \n  (x = 100);\n  \n  /*@\nloop invariant i1: 0 <= x <= 100;\n\nloop invariant i3: x <= 100;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 22,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant x >= 100 - y;\nloop invariant x <= 100 - y + 1;\nloop invariant x >= 100 - y + 1 - 1;\nloop invariant x <= 100 - y + 1 - 1 + 1;\nloop invariant x >= 100 - y + 1 - 1 + 1 - 1;\nloop invariant x <= 100 - y + 1 - 1 + 1 - 1 + 1;\nloop invariant x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  \n  (x = 100);\n  \n  /*@\nloop invariant i1: x >= 0;\nloop invariant i2: x <= 100;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  \n  (x = 100);\n  \n  /*@\nloop invariant i1: 0 <= x <= 100;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  \n  (x = 100);\n  \n  /*@\nloop invariant i1: 0 <= x <= 100;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 100;\nloop invariant x >= 0;\nloop invariant x <= 100;\nloop invariant x >= 0;\nloop invariant x >= 100 - y;\nloop invariant 1 <= x <= 100;\nloop invariant x >= 0;\nloop invariant x >= 100 - y;\nloop invariant if (x == 0) then (y == 100);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  \n  (x = 100);\n  \n  /*@\n\nloop invariant i2: x >= 0;\nloop invariant i3: x <= 100;\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant x >= 1;\nloop invariant x >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  \n  (x = 100);\n  \n  /*@\nloop invariant i1: 0 <= x <= 100;\n\n\nloop invariant i4: x >= 0;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant x >= 100;\nloop invariant x <= 100;\nloop invariant 0 <= x <= 100;\nloop invariant x >= 100 ==> x == 100;\nloop invariant x <= 100 ==> x == 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  \n  (x = 100);\n  \n  /*@\nloop invariant i1: 0 <= x <= 100;\n\nloop invariant i3: x <= 100;\nloop invariant i4: x >= 100 ==> x == 100;\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  \n  (x = 100);\n  \n  /*@\n\n\n\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == 0) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "No CSV output dump found from Frama-C",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  \n  (x = 100);\n  \n  /*@\nloop invariant i1: 0 <= x <= 100;\nloop invariant i2: x > 0 ==> x' <= x - 1;\nloop invariant i3: 1 <= x <= 100;\nloop invariant i4: x >= 1;\nloop invariant i5: x <= 100;\nloop invariant i6: x == 100 - y;\nloop invariant i7: x == (100 - (x - 1));\nloop invariant i8: x >= 0;\nloop invariant i9: x >= 100;\nloop invariant i10: x == 0;\nloop invariant i11: x == 100;\nloop invariant i12: 0 <= x <= 100; loop invariant x <= 100;\nloop invariant i13: 0 < x <= 100;\nloop invariant i14: x == 100 ==> x - 1 == 99;\nloop invariant i15: x == 100 ==> x - 2 == 98;\nloop invariant i16: x == 100 ==> x - 3 == 97;\nloop invariant i17: x == 100 ==> x - 4 == 96;\nloop invariant i18: x == 100 ==> x - 5 == 95;\nloop invariant i19: x == 100 ==> x - 6 == 94;\nloop invariant i20: x == 100 ==> x - 7 == 93;\nloop invariant i21: x == 100 ==> x - 8 == 92;\nloop invariant i22: x == 100 ==> x - 9 == 91;\nloop invariant i23: x == 100 ==> x - 10 == 90;\nloop invariant i24: x == 100 ==> x - 11 == 89;\nloop invariant i25: x == 100 ==> x - 12 == 88;\nloop invariant i26: x == 100 ==> x - 13 == 87;\nloop invariant i27: x == 100 ==> x - 14 == 86;\nloop invariant i28: x == 100 ==> x - 15 == 85;\nloop invariant i29: x == 100 ==> x - 16 == 84;\nloop invariant i30: x == 100 ==> x - 17 == 83;\nloop invariant i31: x == 100 ==> x - 18 == 82;\nloop invariant i32: x == 100 ==> x - 19 == 81;\nloop invariant i33: x == 100 ==> x - 20 == 80;\nloop invariant i34: x == 100 ==> x - 21 == 79;\nloop invariant i35: x == 100 ==> x - 22 == 78;\nloop invariant i36: x == 100 ==> x - 23 == 77;\nloop invariant i37: x == 100 ==> x - 24 == 76;\nloop invariant i38: x == 100 ==> x - 25 == 75;\nloop invariant i39: x == 100 ==> x - 26 == 74;\nloop invariant i40: x == 100 ==> x - 27 == 73;\nloop invariant i41: x == 100 ==> x - 28 == 72;\nloop invariant i42: x == 100 ==> x - 29 == 71;\nloop invariant i43: x == 100 ==> x - 30 == 70;\nloop invariant i44: x == 100 ==> x - 31 == 69;\nloop invariant i45: x == 100 ==> x - 32 == 68;\nloop invariant i46: x == 100 ==> x - 33 == 67;\nloop invariant i47: x == 100 ==> x - 34 == 66;\nloop invariant i48: x == 100 ==> x - 35 == 65;\nloop invariant i49: x == 100 ==> x - 36 == 64;\nloop invariant i50: x == 100 ==> x - 37 == 63;\nloop invariant i51: x == 100 ==> x - 38 == 62;\nloop invariant i52: x == 100 ==> x - 39 == 61;\nloop invariant i53: x == 100 ==> x - 40 == 60;\nloop invariant i54: x == 100 ==> x - 41 == 59;\nloop invariant i55: x == 100 ==> x - 42 == 58;\nloop invariant i56: x == 100 ==> x - 43 == 57;\nloop invariant i57: x == 100 ==> x - 44 == 56;\nloop invariant i58: x == 100 ==> x - 45 == 55;\nloop invariant i59: x == 100 ==> x - 46 == 54;\nloop invariant i60: x == 100 ==> x - 47 == 53;\nloop invariant i61: x == 100 ==> x - 48 == 52;\nloop invariant i62: x == 100 ==> x - 49 == 51;\nloop invariant i63: x == 100 ==> x - 50 == 50;\nloop invariant i64: x == 100 ==> x - 51 == 49;\nloop invariant i65: x == 100 ==> x - 52 == 48;\nloop invariant i66: x >= 100 - y;\nloop invariant i67: x <= 100 - y + 1;\nloop invariant i68: x >= 100 - y + 1 - 1;\nloop invariant i69: x <= 100 - y + 1 - 1 + 1;\nloop invariant i70: x >= 100 - y + 1 - 1 + 1 - 1;\nloop invariant i71: x <= 100 - y + 1 - 1 + 1 - 1 + 1;\nloop invariant i72: x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant i73: x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant i74: x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant i75: x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant i76: x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant i77: x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant i78: x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant i79: x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant i80: x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant i81: x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant i82: x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant i83: x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant i84: x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant i85: x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant i86: x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant i87: x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant i88: if (x == 0) then (y == 100);\nloop invariant i89: x >= (1 + (y - 1) * y / 2);\nloop invariant i90: x >= 100 ==> x == 100;\nloop invariant i91: x <= 100 ==> x == 100;\nloop invariant i92: 1 <= x <= 100000;\nloop invariant i93: 0 <= y <= 100000;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == 0) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 2,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n  \n  int x;\n  \n  (x = 100);\n  \n  /*@\nloop invariant i1: 0 <= x <= 100;\nloop invariant i2: x > 0 ==> x' <= x - 1;\nloop invariant i3: 1 <= x <= 100;\nloop invariant i4: x >= 1;\nloop invariant i5: x <= 100;\nloop invariant i6: x == 100 - y;\nloop invariant i7: x == (100 - (x - 1));\nloop invariant i8: x >= 0;\nloop invariant i9: x >= 100;\nloop invariant i10: x == 0;\nloop invariant i11: x == 100;\nloop invariant i12: 0 <= x <= 100; loop invariant x <= 100;\nloop invariant i13: 0 < x <= 100;\nloop invariant i14: x == 100 ==> x - 1 == 99;\nloop invariant i15: x == 100 ==> x - 2 == 98;\nloop invariant i16: x == 100 ==> x - 3 == 97;\nloop invariant i17: x == 100 ==> x - 4 == 96;\nloop invariant i18: x == 100 ==> x - 5 == 95;\nloop invariant i19: x == 100 ==> x - 6 == 94;\nloop invariant i20: x == 100 ==> x - 7 == 93;\nloop invariant i21: x == 100 ==> x - 8 == 92;\nloop invariant i22: x == 100 ==> x - 9 == 91;\nloop invariant i23: x == 100 ==> x - 10 == 90;\nloop invariant i24: x == 100 ==> x - 11 == 89;\nloop invariant i25: x == 100 ==> x - 12 == 88;\nloop invariant i26: x == 100 ==> x - 13 == 87;\nloop invariant i27: x == 100 ==> x - 14 == 86;\nloop invariant i28: x == 100 ==> x - 15 == 85;\nloop invariant i29: x == 100 ==> x - 16 == 84;\nloop invariant i30: x == 100 ==> x - 17 == 83;\nloop invariant i31: x == 100 ==> x - 18 == 82;\nloop invariant i32: x == 100 ==> x - 19 == 81;\nloop invariant i33: x == 100 ==> x - 20 == 80;\nloop invariant i34: x == 100 ==> x - 21 == 79;\nloop invariant i35: x == 100 ==> x - 22 == 78;\nloop invariant i36: x == 100 ==> x - 23 == 77;\nloop invariant i37: x == 100 ==> x - 24 == 76;\nloop invariant i38: x == 100 ==> x - 25 == 75;\nloop invariant i39: x == 100 ==> x - 26 == 74;\nloop invariant i40: x == 100 ==> x - 27 == 73;\nloop invariant i41: x == 100 ==> x - 28 == 72;\nloop invariant i42: x == 100 ==> x - 29 == 71;\nloop invariant i43: x == 100 ==> x - 30 == 70;\nloop invariant i44: x == 100 ==> x - 31 == 69;\nloop invariant i45: x == 100 ==> x - 32 == 68;\nloop invariant i46: x == 100 ==> x - 33 == 67;\nloop invariant i47: x == 100 ==> x - 34 == 66;\nloop invariant i48: x == 100 ==> x - 35 == 65;\nloop invariant i49: x == 100 ==> x - 36 == 64;\nloop invariant i50: x == 100 ==> x - 37 == 63;\nloop invariant i51: x == 100 ==> x - 38 == 62;\nloop invariant i52: x == 100 ==> x - 39 == 61;\nloop invariant i53: x == 100 ==> x - 40 == 60;\nloop invariant i54: x == 100 ==> x - 41 == 59;\nloop invariant i55: x == 100 ==> x - 42 == 58;\nloop invariant i56: x == 100 ==> x - 43 == 57;\nloop invariant i57: x == 100 ==> x - 44 == 56;\nloop invariant i58: x == 100 ==> x - 45 == 55;\nloop invariant i59: x == 100 ==> x - 46 == 54;\nloop invariant i60: x == 100 ==> x - 47 == 53;\nloop invariant i61: x == 100 ==> x - 48 == 52;\nloop invariant i62: x == 100 ==> x - 49 == 51;\nloop invariant i63: x == 100 ==> x - 50 == 50;\nloop invariant i64: x == 100 ==> x - 51 == 49;\nloop invariant i65: x == 100 ==> x - 52 == 48;\nloop invariant i66: x >= 100 - y;\nloop invariant i67: x <= 100 - y + 1;\nloop invariant i68: x >= 100 - y + 1 - 1;\nloop invariant i69: x <= 100 - y + 1 - 1 + 1;\nloop invariant i70: x >= 100 - y + 1 - 1 + 1 - 1;\nloop invariant i71: x <= 100 - y + 1 - 1 + 1 - 1 + 1;\nloop invariant i72: x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant i73: x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant i74: x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant i75: x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant i76: x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant i77: x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant i78: x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant i79: x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant i80: x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant i81: x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant i82: x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant i83: x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant i84: x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant i85: x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant i86: x >= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1;\nloop invariant i87: x <= 100 - y + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1 - 1 + 1;\nloop invariant i88: if (x == 0) then (y == 100);\nloop invariant i89: x >= (1 + (y - 1) * y / 2);\nloop invariant i90: x >= 100 ==> x == 100;\nloop invariant i91: x <= 100 ==> x == 100;\nloop invariant i92: 1 <= x <= 100000;\nloop invariant i93: 0 <= y <= 100000;\n*/\nwhile ((x > 0)) {\n    {\n    (x  = (x - 1));\n    }\n\n  }\n  \n{;\n//@ assert( (x == 0) );\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c"
        ],
        "skipped": [],
        "total": 24,
        "success_count": 18,
        "failure_count": 6,
        "success_rate": 0.75
    }
}