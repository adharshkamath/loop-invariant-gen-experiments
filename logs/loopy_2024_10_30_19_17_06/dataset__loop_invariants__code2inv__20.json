{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/20.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 0;\n    int m = 0;\n    int n;\n\n    while (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       \n       {;\n//@ assert(m >= 0);\n}\n\n    }\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x < n;\nloop invariant x < n ==> m >= 0;\nloop invariant x < n ==> m < x;\nloop invariant x < n ==> m <= n;\nloop invariant x < n ==> m <= n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m < n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n ==> m < n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n ==> m < n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n ==> m < n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n ==> m < n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n ==> m < n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n ==> m < n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= m <= n;\nloop invariant 0 <= x <= n;\nloop invariant x == m + 1;\nloop invariant x >= 0;\nloop invariant m == x - 1;\nloop invariant m < n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x < n;\nloop invariant m >= 0 ==> x > m;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m >= 0 ==> m <= n;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant m <= x;\nloop invariant m >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant m >= 0;\nloop invariant m >= x;\nloop invariant m <= n;\nloop invariant m <= x;\nloop invariant m >= 0 --> m <= n;\nloop invariant m >= 0 --> m <= x;\nloop invariant m >= 0 --> m >= x;\nloop invariant m >= 0 --> m <= n --> m >= x;\nloop invariant m >= 0 --> m <= n --> m <= x;\nloop invariant m >= 0 --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= n --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m >= x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= m <= x;\nloop invariant m >= 0 ==> (x >= m);\nloop invariant m >= 0 ==> (m <= n);\nloop invariant n > 0 ==> (m >= 0);\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant x < n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m == x ==> x == n;\nloop invariant m < n ==> m < x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= z1 <= n;\nloop invariant 0 <= z2 <= n;\nloop invariant 0 <= z3 <= n;\nloop invariant 0 <= x <= n;\nloop invariant 0 <= m <= n;\nloop invariant 0 <= n;\nloop invariant m = min(i | 0 <= i <= n and unknown(i));\nloop invariant x = (z1 + z2 + z3);\nloop invariant z1 = (x - z2 - z3);\nloop invariant z2 = x;\nloop invariant z3 = 0;\nloop invariant n <= 1;\nloop invariant unknown(n);\nloop invariant unknown(x);\nloop invariant unknown(m);\nloop invariant unknown(z1);\nloop invariant unknown(z2);\nloop invariant unknown(z3);\nloop invariant unknown(x);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= m <= n;\nloop invariant 0 <= x <= n;\nloop invariant if (unknown()) then (m = x) else (m <= x) ==> (m >= 0);\nloop invariant if (unknown()) then (m = x) else (m <= x) ==> (m <= n);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant m >= 0 && (m == x || m == x - 1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant n > 0 ==> m <= n;\nloop invariant n > 0 ==> m >= 0;\nloop invariant n > 0 ==> m < n;\nloop invariant n > 0 ==> m > 0;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= m <= x;\nloop invariant m == (x <= n) ==> (x == m || unknown());\nloop invariant m == (x <= n) ==> (x == m || unknown());\nloop invariant m >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant x < n;\nloop invariant m == (unknown() ? x : m);\nloop invariant n > 0 ==> 0 <= m;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= x < n;\nloop invariant x < n ==> m >= 0;\nloop invariant x < n ==> m < x;\nloop invariant x < n ==> m <= n;\nloop invariant x < n ==> m <= n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m < n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n ==> m < n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n ==> m < n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n ==> m < n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n ==> m < n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n ==> m < n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n ==> m < n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 0;\n    int m = 0;\n    int n;\n\n    /*@\n\n\n\nloop invariant i4: x < n ==> m <= n;\nloop invariant i5: x < n ==> m <= n - 1;\nloop invariant i6: x < n ==> m <= n - 1 ==> m < n;\nloop invariant i7: x < n ==> m <= n - 1 ==> m <= n;\n\nloop invariant i9: x < n ==> m <= n - 1 ==> m <= n - 1;\nloop invariant i10: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant i11: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\n\nloop invariant i13: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant i14: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant i15: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\n\nloop invariant i17: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant i18: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant i19: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\n\nloop invariant i21: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant i22: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant i23: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\n\nloop invariant i25: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant i26: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant i27: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\n\nloop invariant i29: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant i30: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\n*/\nwhile (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       \n       {;\n//@ assert(m >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= m <= n;\nloop invariant 0 <= x <= n;\nloop invariant x == m + 1;\nloop invariant x >= 0;\nloop invariant m == x - 1;\nloop invariant m < n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 0;\n    int m = 0;\n    int n;\n\n    /*@\n\n\n\nloop invariant i4: x >= 0;\n\n\n*/\nwhile (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       \n       {;\n//@ assert(m >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x < n;\nloop invariant m >= 0 ==> x > m;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m >= 0 ==> m <= n;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 0;\n    int m = 0;\n    int n;\n\n    /*@\n\n\nloop invariant i3: m >= 0 ==> m <= x;\n\nloop invariant i5: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1;\nloop invariant i6: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i7: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i8: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i9: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i10: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i11: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i12: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i13: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i14: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i15: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i16: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i17: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\n*/\nwhile (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       \n       {;\n//@ assert(m >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant m <= x;\nloop invariant m >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 0;\n    int m = 0;\n    int n;\n\n    /*@\n\nloop invariant i2: m <= x;\nloop invariant i3: m >= 0;\n*/\nwhile (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       \n       {;\n//@ assert(m >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 26,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant m >= 0;\nloop invariant m >= x;\nloop invariant m <= n;\nloop invariant m <= x;\nloop invariant m >= 0 --> m <= n;\nloop invariant m >= 0 --> m <= x;\nloop invariant m >= 0 --> m >= x;\nloop invariant m >= 0 --> m <= n --> m >= x;\nloop invariant m >= 0 --> m <= n --> m <= x;\nloop invariant m >= 0 --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= n --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m >= x;\nloop invariant m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m >= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 0;\n    int m = 0;\n    int n;\n\n    /*@\n\nloop invariant i2: m >= 0;\n\n\nloop invariant i5: m <= x;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       \n       {;\n//@ assert(m >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= m <= x;\nloop invariant m >= 0 ==> (x >= m);\nloop invariant m >= 0 ==> (m <= n);\nloop invariant n > 0 ==> (m >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 0;\n    int m = 0;\n    int n;\n\n    /*@\n\nloop invariant i2: 0 <= m <= x;\nloop invariant i3: m >= 0 ==> (x >= m);\n\nloop invariant i5: n > 0 ==> (m >= 0);\n*/\nwhile (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       \n       {;\n//@ assert(m >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant x < n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m == x ==> x == n;\nloop invariant m < n ==> m < x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\nloop invariant m <= n ==> m <= x;\nloop invariant m >= 0 ==> m <= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 0;\n    int m = 0;\n    int n;\n\n    /*@\nloop invariant i1: x >= 0;\n\nloop invariant i3: m >= 0;\nloop invariant i4: m <= x;\n\n\nloop invariant i7: m <= n ==> m <= x;\nloop invariant i8: m >= 0 ==> m <= x;\n*/\nwhile (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       \n       {;\n//@ assert(m >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 15,
                "annotations": "```\n/*@\nloop invariant 0 <= z1 <= n;\nloop invariant 0 <= z2 <= n;\nloop invariant 0 <= z3 <= n;\nloop invariant 0 <= x <= n;\nloop invariant 0 <= m <= n;\nloop invariant 0 <= n;\nloop invariant m = min(i | 0 <= i <= n and unknown(i));\nloop invariant x = (z1 + z2 + z3);\nloop invariant z1 = (x - z2 - z3);\nloop invariant z2 = x;\nloop invariant z3 = 0;\nloop invariant n <= 1;\nloop invariant unknown(n);\nloop invariant unknown(x);\nloop invariant unknown(m);\nloop invariant unknown(z1);\nloop invariant unknown(z2);\nloop invariant unknown(z3);\nloop invariant unknown(x);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 0;\n    int m = 0;\n    int n;\n\n    /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       \n       {;\n//@ assert(m >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= m <= n;\nloop invariant 0 <= x <= n;\nloop invariant if (unknown()) then (m = x) else (m <= x) ==> (m >= 0);\nloop invariant if (unknown()) then (m = x) else (m <= x) ==> (m <= n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 0;\n    int m = 0;\n    int n;\n\n    /*@\n\n\n\n\n*/\nwhile (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       \n       {;\n//@ assert(m >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant m >= 0 && (m == x || m == x - 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 0;\n    int m = 0;\n    int n;\n\n    /*@\n\n\n*/\nwhile (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       \n       {;\n//@ assert(m >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant m <= n;\nloop invariant m >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 0;\n    int m = 0;\n    int n;\n\n    /*@\n\nloop invariant i2: m <= x;\nloop invariant i3: m >= 0;\n\n*/\nwhile (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       \n       {;\n//@ assert(m >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant m >= 0;\nloop invariant m <= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 0;\n    int m = 0;\n    int n;\n\n    /*@\n\nloop invariant i2: m >= 0;\nloop invariant i3: m <= x;\n*/\nwhile (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       \n       {;\n//@ assert(m >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant m <= x;\nloop invariant m >= 0;\nloop invariant n > 0 ==> m <= n;\nloop invariant n > 0 ==> m >= 0;\nloop invariant n > 0 ==> m < n;\nloop invariant n > 0 ==> m > 0;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\nloop invariant n > 0 ==> m > m;\nloop invariant n > 0 ==> m < m;\nloop invariant n > 0 ==> m >= m;\nloop invariant n > 0 ==> m <= m;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 0;\n    int m = 0;\n    int n;\n\n    /*@\n\nloop invariant i2: m <= x;\nloop invariant i3: m >= 0;\nloop invariant i4: n > 0 ==> m <= n;\nloop invariant i5: n > 0 ==> m >= 0;\nloop invariant i6: n > 0 ==> m < n;\n\n\n\nloop invariant i10: n > 0 ==> m >= m;\nloop invariant i11: n > 0 ==> m <= m;\n*/\nwhile (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       \n       {;\n//@ assert(m >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= n;\nloop invariant 0 <= m <= x;\nloop invariant m == (x <= n) ==> (x == m || unknown());\nloop invariant m == (x <= n) ==> (x == m || unknown());\nloop invariant m >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 0;\n    int m = 0;\n    int n;\n\n    /*@\n\nloop invariant i2: 0 <= m <= x;\n\nloop invariant i4: m >= 0;\n*/\nwhile (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       \n       {;\n//@ assert(m >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant x < n;\nloop invariant m == (unknown() ? x : m);\nloop invariant n > 0 ==> 0 <= m;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 0;\n    int m = 0;\n    int n;\n\n    /*@\nloop invariant i1: 0 <= x;\n\n\nloop invariant i4: n > 0 ==> 0 <= m;\n*/\nwhile (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       \n       {;\n//@ assert(m >= 0);\n}\n\n    }\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 109: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 0;\n    int m = 0;\n    int n;\n\n    /*@\nloop invariant i1: 0 <= x < n;\nloop invariant i2: x < n ==> m >= 0;\nloop invariant i3: x < n ==> m < x;\nloop invariant i4: x < n ==> m <= n;\nloop invariant i5: x < n ==> m <= n - 1;\nloop invariant i6: x < n ==> m <= n - 1 ==> m < n;\nloop invariant i7: x < n ==> m <= n - 1 ==> m <= n;\nloop invariant i8: x < n ==> m <= n - 1 ==> m <= n ==> m < n - 1;\nloop invariant i9: x < n ==> m <= n - 1 ==> m <= n - 1;\nloop invariant i10: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant i11: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\nloop invariant i12: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n ==> m < n - 1;\nloop invariant i13: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant i14: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant i15: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\nloop invariant i16: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n ==> m < n - 1;\nloop invariant i17: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant i18: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant i19: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\nloop invariant i20: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n ==> m < n - 1;\nloop invariant i21: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant i22: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant i23: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\nloop invariant i24: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n ==> m < n - 1;\nloop invariant i25: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant i26: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant i27: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\nloop invariant i28: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n ==> m < n - 1;\nloop invariant i29: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant i30: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant i31: 0 <= m <= n;\nloop invariant i32: 0 <= x <= n;\nloop invariant i33: x == m + 1;\nloop invariant i34: x >= 0;\nloop invariant i35: m == x - 1;\nloop invariant i36: m < n;\nloop invariant i37: m >= 0 ==> x > m;\nloop invariant i38: m >= 0 ==> m <= x;\nloop invariant i39: m >= 0 ==> m <= n;\nloop invariant i40: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1;\nloop invariant i41: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i42: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i43: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i44: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i45: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i46: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i47: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i48: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i49: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i50: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i51: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i52: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i53: m <= x;\nloop invariant i54: m >= 0;\nloop invariant i55: m >= x;\nloop invariant i56: m <= n;\nloop invariant i57: m >= 0 --> m <= n;\nloop invariant i58: m >= 0 --> m <= x;\nloop invariant i59: m >= 0 --> m >= x;\nloop invariant i60: m >= 0 --> m <= n --> m >= x;\nloop invariant i61: m >= 0 --> m <= n --> m <= x;\nloop invariant i62: m >= 0 --> m <= x --> m >= x;\nloop invariant i63: m >= 0 --> m <= n --> m <= x --> m >= x;\nloop invariant i64: m >= 0 --> m <= x --> m <= n --> m >= x;\nloop invariant i65: m >= 0 --> m <= x --> m <= n --> m <= x --> m >= x;\nloop invariant i66: m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m >= x;\nloop invariant i67: m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m >= x;\nloop invariant i68: m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m >= x;\nloop invariant i69: m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m >= x;\nloop invariant i70: m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m >= x;\nloop invariant i71: m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m >= x;\nloop invariant i72: m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m >= x;\nloop invariant i73: m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m >= x;\nloop invariant i74: m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m >= x;\nloop invariant i75: m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m >= x;\nloop invariant i76: m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m >= x;\nloop invariant i77: m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m >= x;\nloop invariant i78: m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m >= x;\nloop invariant i79: m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m >= x;\nloop invariant i80: m >= 0 --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= x --> m <= n --> m <= x --> m <= n --> m <= x --> m <= n --> m >= x;\nloop invariant i81: 0 <= m <= x;\nloop invariant i82: m >= 0 ==> (x >= m);\nloop invariant i83: m >= 0 ==> (m <= n);\nloop invariant i84: n > 0 ==> (m >= 0);\nloop invariant i85: x < n;\nloop invariant i86: m == x ==> x == n;\nloop invariant i87: m < n ==> m < x;\nloop invariant i88: m <= n ==> m <= x;\nloop invariant i89: 0 <= z1 <= n;\nloop invariant i90: 0 <= z2 <= n;\nloop invariant i91: 0 <= z3 <= n;\nloop invariant i92: 0 <= n;\nloop invariant i93: m = min(i | 0 <= i <= n and unknown(i));\nloop invariant i94: x = (z1 + z2 + z3);\nloop invariant i95: z1 = (x - z2 - z3);\nloop invariant i96: z2 = x;\nloop invariant i97: z3 = 0;\nloop invariant i98: n <= 1;\nloop invariant i99: unknown(n);\nloop invariant i100: unknown(x);\nloop invariant i101: unknown(m);\nloop invariant i102: unknown(z1);\nloop invariant i103: unknown(z2);\nloop invariant i104: unknown(z3);\nloop invariant i105: if (unknown()) then (m = x) else (m <= x) ==> (m >= 0);\nloop invariant i106: if (unknown()) then (m = x) else (m <= x) ==> (m <= n);\nloop invariant i107: m >= 0 && (m == x || m == x - 1);\nloop invariant i108: n > 0 ==> m <= n;\nloop invariant i109: n > 0 ==> m >= 0;\nloop invariant i110: n > 0 ==> m < n;\nloop invariant i111: n > 0 ==> m > 0;\nloop invariant i112: n > 0 ==> m > m;\nloop invariant i113: n > 0 ==> m < m;\nloop invariant i114: n > 0 ==> m >= m;\nloop invariant i115: n > 0 ==> m <= m;\nloop invariant i116: m == (x <= n) ==> (x == m || unknown());\nloop invariant i117: 0 <= x;\nloop invariant i118: m == (unknown() ? x : m);\nloop invariant i119: n > 0 ==> 0 <= m;\n*/\nwhile (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       \n       {;\n//@ assert(m >= 0);\n}\n\n    }\n}",
        "combined_annotation_num_solver_calls": 52,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main()\n{\n    int z1,z2,z3;\n    int x = 0;\n    int m = 0;\n    int n;\n\n    /*@\n\nloop invariant i2: x < n ==> m >= 0;\n\nloop invariant i4: x < n ==> m <= n;\nloop invariant i5: x < n ==> m <= n - 1;\nloop invariant i6: x < n ==> m <= n - 1 ==> m < n;\nloop invariant i7: x < n ==> m <= n - 1 ==> m <= n;\n\nloop invariant i9: x < n ==> m <= n - 1 ==> m <= n - 1;\nloop invariant i10: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant i11: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\n\nloop invariant i13: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant i14: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant i15: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\n\nloop invariant i17: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant i18: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant i19: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\n\nloop invariant i21: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant i22: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant i23: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\n\nloop invariant i25: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant i26: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\nloop invariant i27: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n;\n\nloop invariant i29: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1;\nloop invariant i30: x < n ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m <= n - 1 ==> m < n;\n\n\n\nloop invariant i34: x >= 0;\n\n\n\nloop invariant i38: m >= 0 ==> m <= x;\n\nloop invariant i40: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1;\nloop invariant i41: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i42: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i43: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i44: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i45: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i46: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i47: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i48: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i49: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i50: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i51: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i52: m >= 0 ==> m == x ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1 ==> m == m + 1;\nloop invariant i53: m <= x;\nloop invariant i54: m >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i81: 0 <= m <= x;\nloop invariant i82: m >= 0 ==> (x >= m);\n\nloop invariant i84: n > 0 ==> (m >= 0);\n\n\n\nloop invariant i88: m <= n ==> m <= x;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i108: n > 0 ==> m <= n;\nloop invariant i109: n > 0 ==> m >= 0;\nloop invariant i110: n > 0 ==> m < n;\n\n\n\nloop invariant i114: n > 0 ==> m >= m;\nloop invariant i115: n > 0 ==> m <= m;\n\nloop invariant i117: 0 <= x;\n\nloop invariant i119: n > 0 ==> 0 <= m;\n*/\nwhile (x < n) {\n        if (unknown()) {\n            m = x;\n        }\n        x = x + 1;\n    }\n\n    if(n > 0) {\n       \n       {;\n//@ assert(m >= 0);\n}\n\n    }\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c"
        ],
        "skipped": [],
        "total": 17,
        "success_count": 13,
        "failure_count": 4,
        "success_rate": 0.7647058823529411
    }
}