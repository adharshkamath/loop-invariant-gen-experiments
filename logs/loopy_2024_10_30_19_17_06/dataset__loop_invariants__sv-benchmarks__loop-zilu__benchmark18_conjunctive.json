{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((i==0) && (k==0) && (n>0))) return 0;\n  while (i < n) {\n    i++;k++;\n  }\n  {;\n//@ assert((i == k) && (k == n));\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant  i >= 0;\nloop invariant  k >= 0;\nloop invariant  i <= n;\nloop invariant  k <= n;\nloop invariant  i <= k;\nloop invariant  k <= i;\nloop invariant  i == k;\nloop invariant  k == n;\nloop invariant  n <= i;\nloop invariant  n <= k;\nloop invariant  n == i;\nloop invariant  n == k;\nloop invariant  i <= n;\nloop invariant  k <= n;\nloop invariant  i <= n ==> i == k;\nloop invariant  k <= n ==> k == n;\nloop invariant  i <= n ==> k <= n;\nloop invariant  k <= n ==> k == i;\nloop invariant  i <= n ==> i == k;\nloop invariant  k <= n ==> k == n ==> i == k;\nloop invariant  i <= n ==> k <= n ==> k == i;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= k <= n;\nloop invariant i == k;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant k >= 0;\nloop invariant (i==k) ==> (i==n);\nloop invariant (i==k) ==> (k==n);\nloop invariant (i < n) ==> (i < k);\nloop invariant (i < n) ==> (k < n);\n*/\n```",
            "```\n/*@\nloop invariant i <= n;\nloop invariant k <= n;\nloop invariant i >= 0;\nloop invariant k >= 0;\nloop invariant i == k ==> i < n;\nloop invariant i == k ==> k < n;\nloop invariant i == k ==> i >= 0;\nloop invariant i == k ==> k >= 0;\nloop invariant i == k ==> i <= n;\nloop invariant i == k ==> k <= n;\nloop invariant i == k ==> i == k;\nloop invariant k == i ==> i < n;\nloop invariant k == i ==> k < n;\nloop invariant k == i ==> i >= 0;\nloop invariant k == i ==> k >= 0;\nloop invariant k == i ==> i <= n;\nloop invariant k == i ==> k <= n;\nloop invariant k == i ==> k == i;\nloop invariant i <= n ==> i >= 0;\nloop invariant i <= n ==> k >= 0;\nloop invariant i <= n ==> i <= n;\nloop invariant i <= n ==> k <= n;\nloop invariant i <= n ==> i == k ==> i < n;\nloop invariant i <= n ==> i == k ==> k < n;\nloop invariant i <= n ==> i == k ==> i >= 0;\nloop invariant i <= n ==> i == k ==> k >= 0;\nloop invariant i <= n ==> i == k ==> i <= n;\nloop invariant i <= n ==> i == k ==> k <= n;\nloop invariant i <= n ==> i == k ==> k == i;\nloop invariant k <= n ==> i >= 0;\nloop invariant k <= n ==> k >= 0;\nloop invariant k <= n ==> i <= n;\nloop invariant k <= n ==> k <= n;\nloop invariant k <= n ==> i == k ==> i < n;\nloop invariant k <= n ==> i == k ==> k < n;\nloop invariant k <= n ==> i == k ==> i >= 0;\nloop invariant k <= n ==> i == k ==> k >= 0;\nloop invariant k <= n ==> i == k ==> i <= n;\nloop invariant k <= n ==> i == k ==> k <= n;\nloop invariant k <= n ==> i == k ==> k == i;\nloop invariant k == i ==> i < n;\nloop invariant k == i ==> k < n;\nloop invariant k == i ==> i >= 0;\nloop invariant k == i ==> k >= 0;\nloop invariant k == i ==> i <= n;\nloop invariant k == i ==> k <= n;\nloop invariant k == i ==> k == i;\nloop invariant i == k ==> i < n;\nloop invariant i == k ==> k < n;\nloop invariant i == k ==> i >= 0;\nloop invariant i == k ==> k >= 0;\nloop invariant i == k ==> i <= n;\nloop invariant i == k ==> k <= n;\nloop invariant i == k ==> k == i;\nloop invariant i == k ==> i < n ==> i < n;\nloop invariant i == k ==> i == k ==> i < n;\nloop invariant i == k ==> i < n ==> k < n;\nloop invariant i == k ==> i < n ==> i >= 0;\nloop invariant i == k ==> i < n ==> k >= 0;\nloop invariant i == k ==> i < n ==> i <= n;\nloop invariant i == k ==> i < n ==> k <= n;\nloop invariant i == k ==> i < n ==> i == k ==> i < n;\nloop invariant i == k ==> i < n ==> k < n ==> i < n;\nloop invariant i == k ==> i < n ==> i >= 0 ==> i < n;\nloop invariant i == k ==> i < n ==> k >= 0 ==> i < n;\nloop invariant i == k ==> i < n ==> i <= n ==> i < n;\nloop invariant i == k ==> i < n ==> k <= n ==> i < n;\nloop invariant i == k ==> i < n ==> i == k ==> i < n ==> i < n;\nloop invariant i == k ==> i < n ==> k < n ==> i < n ==> i < n;\nloop invariant i == k ==> i < n ==> i >= 0 ==> i < n ==> i < n;\nloop invariant i == k ==> i < n ==> k >= 0 ==> i < n ==> i < n;\nloop invariant i == k ==> i < n ==> i <= n ==> i < n ==> i < n;\nloop invariant i == k ==> i < n ==> k <= n ==> i < n ==> i < n;\nloop invariant i == k ==> i < n ==> i == k ==> i < n ==> i < n ==> i < n;\nloop invariant i == k ==> i < n ==> k < n ==> i < n ==> i < n ==> i < n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= k <= n;\nloop invariant i == k;\nloop invariant i <= n;\nloop invariant k <= n;\nloop invariant i == k ==> (i == k && k == n);\nloop invariant i == k ==> (i == k && i <= n);\nloop invariant i == k ==> (i == k && k <= n);\nloop invariant i == k ==> (i == k && i == n);\nloop invariant i == k ==> (i == k && k == n && i <= n);\nloop invariant i == k ==> (i == k && i <= n && k == n);\nloop invariant i == k ==> (i == k && i == n && k <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && k <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i <= n && k <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k <= n && i <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k <= n && i <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i <= n && k <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k <= n && i <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k <= n && i <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i <= n && k <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k <= n && i <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k <= n && i <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i <= n && k <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k <= n && i <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k <= n && i <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i <= n && k <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k <= n && i <= n);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant i < n ==> k == (i + 1);\nloop invariant i >= n ==> k == n;\nloop invariant 0 <= k <= i + 1;\nloop invariant i < n ==> k == (i + 1);\n*/\n```",
            "```\n/*@\nloop invariant i >= 0;\nloop invariant k >= i;\nloop invariant n > 0;\nloop invariant i <= n;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;loop invariant k >= 0;loop invariant k <= n;loop invariant i <= k;loop invariant k == i + k;loop invariant k > 0;loop invariant n > 0;loop invariant n == i + n;loop invariant n >= 0;loop invariant n <= i + n;loop invariant i >= 0;loop invariant i <= n;loop invariant k <= n;loop invariant k >= 0;loop invariant k == i + 1;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= k <= n;\nloop invariant i == k;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant k = i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= k <= n;\nloop invariant i == k;\nloop invariant i < n ==> k < n;\nloop invariant n > 0 ==> i <= n;\nloop invariant n > 0 ==> k <= n;\nloop invariant i == k ==> i == n;\nloop invariant k == i ==> k == n;\n*/\n```",
            "```\n/*@\nloop invariant i >= 0;\nloop invariant k >= i;\nloop invariant n > 0;\nloop invariant n >= i;\nloop invariant n >= k;\nloop invariant n <= k + 1;\nloop invariant i <= k;\nloop invariant i <= n;\nloop invariant k <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant i == k;\nloop invariant i <= n;\nloop invariant k <= n;\nloop invariant i == k ==> k == n;\nloop invariant i == k ==> i == n;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant  i >= 0;\nloop invariant  k >= 0;\nloop invariant  i <= n;\nloop invariant  k <= n;\nloop invariant  i <= k;\nloop invariant  k <= i;\nloop invariant  i == k;\nloop invariant  k == n;\nloop invariant  n <= i;\nloop invariant  n <= k;\nloop invariant  n == i;\nloop invariant  n == k;\nloop invariant  i <= n;\nloop invariant  k <= n;\nloop invariant  i <= n ==> i == k;\nloop invariant  k <= n ==> k == n;\nloop invariant  i <= n ==> k <= n;\nloop invariant  k <= n ==> k == i;\nloop invariant  i <= n ==> i == k;\nloop invariant  k <= n ==> k == n ==> i == k;\nloop invariant  i <= n ==> k <= n ==> k == i;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((i==0) && (k==0) && (n>0))) return 0;\n  /*@\nloop invariant i1:  i >= 0;\nloop invariant i2:  k >= 0;\nloop invariant i3:  i <= n;\nloop invariant i4:  k <= n;\nloop invariant i5:  i <= k;\nloop invariant i6:  k <= i;\nloop invariant i7:  i == k;\nloop invariant i8:  k == n;\nloop invariant i9:  n <= i;\nloop invariant i10:  n <= k;\nloop invariant i11:  n == i;\nloop invariant i12:  n == k;\nloop invariant i13:  i <= n ==> i == k;\nloop invariant i14:  k <= n ==> k == n;\nloop invariant i15:  i <= n ==> k <= n;\nloop invariant i16:  k <= n ==> k == i;\nloop invariant i17:  k <= n ==> k == n ==> i == k;\nloop invariant i18:  i <= n ==> k <= n ==> k == i;\nloop invariant i19:  i <= n ==> k <= n ==> k == i ==> i == k;\nloop invariant i20:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n;\nloop invariant i21:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k;\nloop invariant i22:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant i23:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant i24:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant i25:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant i26:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant i27:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant i28:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant i29:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant i30:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant i31:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant i32:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant i33:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant i34:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\n*/\nwhile (i < n) {\n    i++;k++;\n  }\n  {;\n//@ assert((i == k) && (k == n));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= k <= n;\nloop invariant i == k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((i==0) && (k==0) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: 0 <= k <= n;\nloop invariant i3: i == k;\n*/\nwhile (i < n) {\n    i++;k++;\n  }\n  {;\n//@ assert((i == k) && (k == n));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant k >= 0;\nloop invariant (i==k) ==> (i==n);\nloop invariant (i==k) ==> (k==n);\nloop invariant (i < n) ==> (i < k);\nloop invariant (i < n) ==> (k < n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((i==0) && (k==0) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: k >= 0;\n\n\n\n\n*/\nwhile (i < n) {\n    i++;k++;\n  }\n  {;\n//@ assert((i == k) && (k == n));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 10,
                "annotations": "```\n/*@\nloop invariant i <= n;\nloop invariant k <= n;\nloop invariant i >= 0;\nloop invariant k >= 0;\nloop invariant i == k ==> i < n;\nloop invariant i == k ==> k < n;\nloop invariant i == k ==> i >= 0;\nloop invariant i == k ==> k >= 0;\nloop invariant i == k ==> i <= n;\nloop invariant i == k ==> k <= n;\nloop invariant i == k ==> i == k;\nloop invariant k == i ==> i < n;\nloop invariant k == i ==> k < n;\nloop invariant k == i ==> i >= 0;\nloop invariant k == i ==> k >= 0;\nloop invariant k == i ==> i <= n;\nloop invariant k == i ==> k <= n;\nloop invariant k == i ==> k == i;\nloop invariant i <= n ==> i >= 0;\nloop invariant i <= n ==> k >= 0;\nloop invariant i <= n ==> i <= n;\nloop invariant i <= n ==> k <= n;\nloop invariant i <= n ==> i == k ==> i < n;\nloop invariant i <= n ==> i == k ==> k < n;\nloop invariant i <= n ==> i == k ==> i >= 0;\nloop invariant i <= n ==> i == k ==> k >= 0;\nloop invariant i <= n ==> i == k ==> i <= n;\nloop invariant i <= n ==> i == k ==> k <= n;\nloop invariant i <= n ==> i == k ==> k == i;\nloop invariant k <= n ==> i >= 0;\nloop invariant k <= n ==> k >= 0;\nloop invariant k <= n ==> i <= n;\nloop invariant k <= n ==> k <= n;\nloop invariant k <= n ==> i == k ==> i < n;\nloop invariant k <= n ==> i == k ==> k < n;\nloop invariant k <= n ==> i == k ==> i >= 0;\nloop invariant k <= n ==> i == k ==> k >= 0;\nloop invariant k <= n ==> i == k ==> i <= n;\nloop invariant k <= n ==> i == k ==> k <= n;\nloop invariant k <= n ==> i == k ==> k == i;\nloop invariant k == i ==> i < n;\nloop invariant k == i ==> k < n;\nloop invariant k == i ==> i >= 0;\nloop invariant k == i ==> k >= 0;\nloop invariant k == i ==> i <= n;\nloop invariant k == i ==> k <= n;\nloop invariant k == i ==> k == i;\nloop invariant i == k ==> i < n;\nloop invariant i == k ==> k < n;\nloop invariant i == k ==> i >= 0;\nloop invariant i == k ==> k >= 0;\nloop invariant i == k ==> i <= n;\nloop invariant i == k ==> k <= n;\nloop invariant i == k ==> k == i;\nloop invariant i == k ==> i < n ==> i < n;\nloop invariant i == k ==> i == k ==> i < n;\nloop invariant i == k ==> i < n ==> k < n;\nloop invariant i == k ==> i < n ==> i >= 0;\nloop invariant i == k ==> i < n ==> k >= 0;\nloop invariant i == k ==> i < n ==> i <= n;\nloop invariant i == k ==> i < n ==> k <= n;\nloop invariant i == k ==> i < n ==> i == k ==> i < n;\nloop invariant i == k ==> i < n ==> k < n ==> i < n;\nloop invariant i == k ==> i < n ==> i >= 0 ==> i < n;\nloop invariant i == k ==> i < n ==> k >= 0 ==> i < n;\nloop invariant i == k ==> i < n ==> i <= n ==> i < n;\nloop invariant i == k ==> i < n ==> k <= n ==> i < n;\nloop invariant i == k ==> i < n ==> i == k ==> i < n ==> i < n;\nloop invariant i == k ==> i < n ==> k < n ==> i < n ==> i < n;\nloop invariant i == k ==> i < n ==> i >= 0 ==> i < n ==> i < n;\nloop invariant i == k ==> i < n ==> k >= 0 ==> i < n ==> i < n;\nloop invariant i == k ==> i < n ==> i <= n ==> i < n ==> i < n;\nloop invariant i == k ==> i < n ==> k <= n ==> i < n ==> i < n;\nloop invariant i == k ==> i < n ==> i == k ==> i < n ==> i < n ==> i < n;\nloop invariant i == k ==> i < n ==> k < n ==> i < n ==> i < n ==> i < n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((i==0) && (k==0) && (n>0))) return 0;\n  /*@\nloop invariant i1: i <= n;\n\nloop invariant i3: i >= 0;\nloop invariant i4: k >= 0;\n\n\nloop invariant i7: i == k ==> i >= 0;\nloop invariant i8: i == k ==> k >= 0;\nloop invariant i9: i == k ==> i <= n;\nloop invariant i10: i == k ==> k <= n;\nloop invariant i11: i == k ==> i == k;\n\n\nloop invariant i14: k == i ==> i >= 0;\nloop invariant i15: k == i ==> k >= 0;\nloop invariant i16: k == i ==> i <= n;\nloop invariant i17: k == i ==> k <= n;\nloop invariant i18: k == i ==> k == i;\nloop invariant i19: i <= n ==> i >= 0;\nloop invariant i20: i <= n ==> k >= 0;\nloop invariant i21: i <= n ==> i <= n;\n\n\n\nloop invariant i25: i <= n ==> i == k ==> i >= 0;\nloop invariant i26: i <= n ==> i == k ==> k >= 0;\nloop invariant i27: i <= n ==> i == k ==> i <= n;\nloop invariant i28: i <= n ==> i == k ==> k <= n;\nloop invariant i29: i <= n ==> i == k ==> k == i;\nloop invariant i30: k <= n ==> i >= 0;\nloop invariant i31: k <= n ==> k >= 0;\nloop invariant i32: k <= n ==> i <= n;\nloop invariant i33: k <= n ==> k <= n;\n\n\nloop invariant i36: k <= n ==> i == k ==> i >= 0;\nloop invariant i37: k <= n ==> i == k ==> k >= 0;\nloop invariant i38: k <= n ==> i == k ==> i <= n;\nloop invariant i39: k <= n ==> i == k ==> k <= n;\nloop invariant i40: k <= n ==> i == k ==> k == i;\nloop invariant i41: i == k ==> k == i;\nloop invariant i42: i == k ==> i < n ==> i < n;\n\nloop invariant i44: i == k ==> i < n ==> k < n;\nloop invariant i45: i == k ==> i < n ==> i >= 0;\nloop invariant i46: i == k ==> i < n ==> k >= 0;\nloop invariant i47: i == k ==> i < n ==> i <= n;\nloop invariant i48: i == k ==> i < n ==> k <= n;\nloop invariant i49: i == k ==> i < n ==> i == k ==> i < n;\nloop invariant i50: i == k ==> i < n ==> k < n ==> i < n;\nloop invariant i51: i == k ==> i < n ==> i >= 0 ==> i < n;\nloop invariant i52: i == k ==> i < n ==> k >= 0 ==> i < n;\nloop invariant i53: i == k ==> i < n ==> i <= n ==> i < n;\nloop invariant i54: i == k ==> i < n ==> k <= n ==> i < n;\nloop invariant i55: i == k ==> i < n ==> i == k ==> i < n ==> i < n;\nloop invariant i56: i == k ==> i < n ==> k < n ==> i < n ==> i < n;\nloop invariant i57: i == k ==> i < n ==> i >= 0 ==> i < n ==> i < n;\nloop invariant i58: i == k ==> i < n ==> k >= 0 ==> i < n ==> i < n;\nloop invariant i59: i == k ==> i < n ==> i <= n ==> i < n ==> i < n;\nloop invariant i60: i == k ==> i < n ==> k <= n ==> i < n ==> i < n;\nloop invariant i61: i == k ==> i < n ==> i == k ==> i < n ==> i < n ==> i < n;\nloop invariant i62: i == k ==> i < n ==> k < n ==> i < n ==> i < n ==> i < n;\n*/\nwhile (i < n) {\n    i++;k++;\n  }\n  {;\n//@ assert((i == k) && (k == n));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 21,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= k <= n;\nloop invariant i == k;\nloop invariant i <= n;\nloop invariant k <= n;\nloop invariant i == k ==> (i == k && k == n);\nloop invariant i == k ==> (i == k && i <= n);\nloop invariant i == k ==> (i == k && k <= n);\nloop invariant i == k ==> (i == k && i == n);\nloop invariant i == k ==> (i == k && k == n && i <= n);\nloop invariant i == k ==> (i == k && i <= n && k == n);\nloop invariant i == k ==> (i == k && i == n && k <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && k <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i <= n && k <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k <= n && i <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k <= n && i <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i <= n && k <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k <= n && i <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k <= n && i <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i <= n && k <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k <= n && i <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k <= n && i <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i <= n && k <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k <= n && i <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k <= n && i <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i <= n && k <= n);\nloop invariant i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k <= n && i <= n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((i==0) && (k==0) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: 0 <= k <= n;\nloop invariant i3: i == k;\nloop invariant i4: i <= n;\nloop invariant i5: k <= n;\n\nloop invariant i7: i == k ==> (i == k && i <= n);\nloop invariant i8: i == k ==> (i == k && k <= n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (i < n) {\n    i++;k++;\n  }\n  {;\n//@ assert((i == k) && (k == n));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant i < n ==> k == (i + 1);\nloop invariant i >= n ==> k == n;\nloop invariant 0 <= k <= i + 1;\nloop invariant i < n ==> k == (i + 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((i==0) && (k==0) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\n\n\nloop invariant i4: 0 <= k <= i + 1;\n*/\nwhile (i < n) {\n    i++;k++;\n  }\n  {;\n//@ assert((i == k) && (k == n));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant i >= 0;\nloop invariant k >= i;\nloop invariant n > 0;\nloop invariant i <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((i==0) && (k==0) && (n>0))) return 0;\n  /*@\nloop invariant i1: i >= 0;\nloop invariant i2: k >= i;\nloop invariant i3: n > 0;\nloop invariant i4: i <= n;\n*/\nwhile (i < n) {\n    i++;k++;\n  }\n  {;\n//@ assert((i == k) && (k == n));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((i==0) && (k==0) && (n>0))) return 0;\n  /*@\n\n*/\nwhile (i < n) {\n    i++;k++;\n  }\n  {;\n//@ assert((i == k) && (k == n));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;loop invariant k >= 0;loop invariant k <= n;loop invariant i <= k;loop invariant k == i + k;loop invariant k > 0;loop invariant n > 0;loop invariant n == i + n;loop invariant n >= 0;loop invariant n <= i + n;loop invariant i >= 0;loop invariant i <= n;loop invariant k <= n;loop invariant k >= 0;loop invariant k == i + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((i==0) && (k==0) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= i <= n;loop invariant k >= 0;loop invariant k <= n;loop invariant i <= k;loop invariant k == i + k;loop invariant k > 0;loop invariant n > 0;loop invariant n == i + n;loop invariant n >= 0;loop invariant n <= i + n;loop invariant i >= 0;loop invariant i <= n;loop invariant k <= n;loop invariant k >= 0;loop invariant k == i + 1;\n*/\nwhile (i < n) {\n    i++;k++;\n  }\n  {;\n//@ assert((i == k) && (k == n));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((i==0) && (k==0) && (n>0))) return 0;\n  /*@\n\n*/\nwhile (i < n) {\n    i++;k++;\n  }\n  {;\n//@ assert((i == k) && (k == n));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= k <= n;\nloop invariant i == k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((i==0) && (k==0) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: 0 <= k <= n;\nloop invariant i3: i == k;\n*/\nwhile (i < n) {\n    i++;k++;\n  }\n  {;\n//@ assert((i == k) && (k == n));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant k = i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((i==0) && (k==0) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\n\n*/\nwhile (i < n) {\n    i++;k++;\n  }\n  {;\n//@ assert((i == k) && (k == n));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= k <= n;\nloop invariant i == k;\nloop invariant i < n ==> k < n;\nloop invariant n > 0 ==> i <= n;\nloop invariant n > 0 ==> k <= n;\nloop invariant i == k ==> i == n;\nloop invariant k == i ==> k == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((i==0) && (k==0) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: 0 <= k <= n;\nloop invariant i3: i == k;\nloop invariant i4: i < n ==> k < n;\nloop invariant i5: n > 0 ==> i <= n;\nloop invariant i6: n > 0 ==> k <= n;\n\n\n*/\nwhile (i < n) {\n    i++;k++;\n  }\n  {;\n//@ assert((i == k) && (k == n));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant i >= 0;\nloop invariant k >= i;\nloop invariant n > 0;\nloop invariant n >= i;\nloop invariant n >= k;\nloop invariant n <= k + 1;\nloop invariant i <= k;\nloop invariant i <= n;\nloop invariant k <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((i==0) && (k==0) && (n>0))) return 0;\n  /*@\nloop invariant i1: i >= 0;\nloop invariant i2: k >= i;\nloop invariant i3: n > 0;\nloop invariant i4: n >= i;\n\n\nloop invariant i7: i <= k;\nloop invariant i8: i <= n;\n\n*/\nwhile (i < n) {\n    i++;k++;\n  }\n  {;\n//@ assert((i == k) && (k == n));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant i == k;\nloop invariant i <= n;\nloop invariant k <= n;\nloop invariant i == k ==> k == n;\nloop invariant i == k ==> i == n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((i==0) && (k==0) && (n>0))) return 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: i == k;\nloop invariant i3: i <= n;\nloop invariant i4: k <= n;\n\n\n*/\nwhile (i < n) {\n    i++;k++;\n  }\n  {;\n//@ assert((i == k) && (k == n));\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 149: Assignment operators not allowed in annotations.",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((i==0) && (k==0) && (n>0))) return 0;\n  /*@\nloop invariant i1:  i >= 0;\nloop invariant i2:  k >= 0;\nloop invariant i3:  i <= n;\nloop invariant i4:  k <= n;\nloop invariant i5:  i <= k;\nloop invariant i6:  k <= i;\nloop invariant i7:  i == k;\nloop invariant i8:  k == n;\nloop invariant i9:  n <= i;\nloop invariant i10:  n <= k;\nloop invariant i11:  n == i;\nloop invariant i12:  n == k;\nloop invariant i13:  i <= n ==> i == k;\nloop invariant i14:  k <= n ==> k == n;\nloop invariant i15:  i <= n ==> k <= n;\nloop invariant i16:  k <= n ==> k == i;\nloop invariant i17:  k <= n ==> k == n ==> i == k;\nloop invariant i18:  i <= n ==> k <= n ==> k == i;\nloop invariant i19:  i <= n ==> k <= n ==> k == i ==> i == k;\nloop invariant i20:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n;\nloop invariant i21:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k;\nloop invariant i22:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant i23:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant i24:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant i25:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant i26:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant i27:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant i28:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant i29:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant i30:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant i31:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant i32:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant i33:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant i34:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant i35: 0 <= i <= n;\nloop invariant i36: 0 <= k <= n;\nloop invariant i37: i == k;\nloop invariant i38: k >= 0;\nloop invariant i39: (i==k) ==> (i==n);\nloop invariant i40: (i==k) ==> (k==n);\nloop invariant i41: (i < n) ==> (i < k);\nloop invariant i42: (i < n) ==> (k < n);\nloop invariant i43: i <= n;\nloop invariant i44: k <= n;\nloop invariant i45: i >= 0;\nloop invariant i46: i == k ==> i < n;\nloop invariant i47: i == k ==> k < n;\nloop invariant i48: i == k ==> i >= 0;\nloop invariant i49: i == k ==> k >= 0;\nloop invariant i50: i == k ==> i <= n;\nloop invariant i51: i == k ==> k <= n;\nloop invariant i52: i == k ==> i == k;\nloop invariant i53: k == i ==> i < n;\nloop invariant i54: k == i ==> k < n;\nloop invariant i55: k == i ==> i >= 0;\nloop invariant i56: k == i ==> k >= 0;\nloop invariant i57: k == i ==> i <= n;\nloop invariant i58: k == i ==> k <= n;\nloop invariant i59: k == i ==> k == i;\nloop invariant i60: i <= n ==> i >= 0;\nloop invariant i61: i <= n ==> k >= 0;\nloop invariant i62: i <= n ==> i <= n;\nloop invariant i63: i <= n ==> k <= n;\nloop invariant i64: i <= n ==> i == k ==> i < n;\nloop invariant i65: i <= n ==> i == k ==> k < n;\nloop invariant i66: i <= n ==> i == k ==> i >= 0;\nloop invariant i67: i <= n ==> i == k ==> k >= 0;\nloop invariant i68: i <= n ==> i == k ==> i <= n;\nloop invariant i69: i <= n ==> i == k ==> k <= n;\nloop invariant i70: i <= n ==> i == k ==> k == i;\nloop invariant i71: k <= n ==> i >= 0;\nloop invariant i72: k <= n ==> k >= 0;\nloop invariant i73: k <= n ==> i <= n;\nloop invariant i74: k <= n ==> k <= n;\nloop invariant i75: k <= n ==> i == k ==> i < n;\nloop invariant i76: k <= n ==> i == k ==> k < n;\nloop invariant i77: k <= n ==> i == k ==> i >= 0;\nloop invariant i78: k <= n ==> i == k ==> k >= 0;\nloop invariant i79: k <= n ==> i == k ==> i <= n;\nloop invariant i80: k <= n ==> i == k ==> k <= n;\nloop invariant i81: k <= n ==> i == k ==> k == i;\nloop invariant i82: i == k ==> k == i;\nloop invariant i83: i == k ==> i < n ==> i < n;\nloop invariant i84: i == k ==> i == k ==> i < n;\nloop invariant i85: i == k ==> i < n ==> k < n;\nloop invariant i86: i == k ==> i < n ==> i >= 0;\nloop invariant i87: i == k ==> i < n ==> k >= 0;\nloop invariant i88: i == k ==> i < n ==> i <= n;\nloop invariant i89: i == k ==> i < n ==> k <= n;\nloop invariant i90: i == k ==> i < n ==> i == k ==> i < n;\nloop invariant i91: i == k ==> i < n ==> k < n ==> i < n;\nloop invariant i92: i == k ==> i < n ==> i >= 0 ==> i < n;\nloop invariant i93: i == k ==> i < n ==> k >= 0 ==> i < n;\nloop invariant i94: i == k ==> i < n ==> i <= n ==> i < n;\nloop invariant i95: i == k ==> i < n ==> k <= n ==> i < n;\nloop invariant i96: i == k ==> i < n ==> i == k ==> i < n ==> i < n;\nloop invariant i97: i == k ==> i < n ==> k < n ==> i < n ==> i < n;\nloop invariant i98: i == k ==> i < n ==> i >= 0 ==> i < n ==> i < n;\nloop invariant i99: i == k ==> i < n ==> k >= 0 ==> i < n ==> i < n;\nloop invariant i100: i == k ==> i < n ==> i <= n ==> i < n ==> i < n;\nloop invariant i101: i == k ==> i < n ==> k <= n ==> i < n ==> i < n;\nloop invariant i102: i == k ==> i < n ==> i == k ==> i < n ==> i < n ==> i < n;\nloop invariant i103: i == k ==> i < n ==> k < n ==> i < n ==> i < n ==> i < n;\nloop invariant i104: i == k ==> (i == k && k == n);\nloop invariant i105: i == k ==> (i == k && i <= n);\nloop invariant i106: i == k ==> (i == k && k <= n);\nloop invariant i107: i == k ==> (i == k && i == n);\nloop invariant i108: i == k ==> (i == k && k == n && i <= n);\nloop invariant i109: i == k ==> (i == k && i <= n && k == n);\nloop invariant i110: i == k ==> (i == k && i == n && k <= n);\nloop invariant i111: i == k ==> (i == k && i == n && k == n && i <= n);\nloop invariant i112: i == k ==> (i == k && i == n && k == n && k <= n);\nloop invariant i113: i == k ==> (i == k && i == n && k == n && i <= n && k <= n);\nloop invariant i114: i == k ==> (i == k && i == n && k == n && i == n && k <= n && i <= n);\nloop invariant i115: i == k ==> (i == k && i == n && k == n && i == n && k == n && k <= n && i <= n);\nloop invariant i116: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i <= n && k <= n);\nloop invariant i117: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k <= n && i <= n);\nloop invariant i118: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k <= n && i <= n);\nloop invariant i119: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i <= n && k <= n);\nloop invariant i120: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k <= n && i <= n);\nloop invariant i121: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k <= n && i <= n);\nloop invariant i122: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i <= n && k <= n);\nloop invariant i123: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k <= n && i <= n);\nloop invariant i124: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k <= n && i <= n);\nloop invariant i125: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i <= n && k <= n);\nloop invariant i126: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k <= n && i <= n);\nloop invariant i127: i < n ==> k == (i + 1);\nloop invariant i128: i >= n ==> k == n;\nloop invariant i129: 0 <= k <= i + 1;\nloop invariant i130: k >= i;\nloop invariant i131: n > 0;\nloop invariant i132: 0 <= i <= n;loop invariant k >= 0;loop invariant k <= n;loop invariant i <= k;loop invariant k == i + k;loop invariant k > 0;loop invariant n > 0;loop invariant n == i + n;loop invariant n >= 0;loop invariant n <= i + n;loop invariant i >= 0;loop invariant i <= n;loop invariant k <= n;loop invariant k >= 0;loop invariant k == i + 1;\nloop invariant i133: k = i;\nloop invariant i134: i < n ==> k < n;\nloop invariant i135: n > 0 ==> i <= n;\nloop invariant i136: n > 0 ==> k <= n;\nloop invariant i137: i == k ==> i == n;\nloop invariant i138: k == i ==> k == n;\nloop invariant i139: n >= i;\nloop invariant i140: n >= k;\nloop invariant i141: n <= k + 1;\nloop invariant i142: i <= k;\nloop invariant i143: i == k ==> k == n;\n*/\nwhile (i < n) {\n    i++;k++;\n  }\n  {;\n//@ assert((i == k) && (k == n));\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 3,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\n\n#include <assert.h>\n\nint main() {\n  int i = unknown_int();\n  int k = unknown_int();\n  int n = unknown_int();\n  if (!((i==0) && (k==0) && (n>0))) return 0;\n  /*@\nloop invariant i1:  i >= 0;\nloop invariant i2:  k >= 0;\nloop invariant i3:  i <= n;\nloop invariant i4:  k <= n;\nloop invariant i5:  i <= k;\nloop invariant i6:  k <= i;\nloop invariant i7:  i == k;\nloop invariant i8:  k == n;\nloop invariant i9:  n <= i;\nloop invariant i10:  n <= k;\nloop invariant i11:  n == i;\nloop invariant i12:  n == k;\nloop invariant i13:  i <= n ==> i == k;\nloop invariant i14:  k <= n ==> k == n;\nloop invariant i15:  i <= n ==> k <= n;\nloop invariant i16:  k <= n ==> k == i;\nloop invariant i17:  k <= n ==> k == n ==> i == k;\nloop invariant i18:  i <= n ==> k <= n ==> k == i;\nloop invariant i19:  i <= n ==> k <= n ==> k == i ==> i == k;\nloop invariant i20:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n;\nloop invariant i21:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k;\nloop invariant i22:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant i23:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant i24:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant i25:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant i26:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant i27:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant i28:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant i29:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant i30:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant i31:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant i32:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant i33:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k;\nloop invariant i34:  i <= n ==> k <= n ==> k == i ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n ==> i == k ==> k == n;\nloop invariant i35: 0 <= i <= n;\nloop invariant i36: 0 <= k <= n;\nloop invariant i37: i == k;\nloop invariant i38: k >= 0;\nloop invariant i39: (i==k) ==> (i==n);\nloop invariant i40: (i==k) ==> (k==n);\nloop invariant i41: (i < n) ==> (i < k);\nloop invariant i42: (i < n) ==> (k < n);\nloop invariant i43: i <= n;\nloop invariant i44: k <= n;\nloop invariant i45: i >= 0;\nloop invariant i46: i == k ==> i < n;\nloop invariant i47: i == k ==> k < n;\nloop invariant i48: i == k ==> i >= 0;\nloop invariant i49: i == k ==> k >= 0;\nloop invariant i50: i == k ==> i <= n;\nloop invariant i51: i == k ==> k <= n;\nloop invariant i52: i == k ==> i == k;\nloop invariant i53: k == i ==> i < n;\nloop invariant i54: k == i ==> k < n;\nloop invariant i55: k == i ==> i >= 0;\nloop invariant i56: k == i ==> k >= 0;\nloop invariant i57: k == i ==> i <= n;\nloop invariant i58: k == i ==> k <= n;\nloop invariant i59: k == i ==> k == i;\nloop invariant i60: i <= n ==> i >= 0;\nloop invariant i61: i <= n ==> k >= 0;\nloop invariant i62: i <= n ==> i <= n;\nloop invariant i63: i <= n ==> k <= n;\nloop invariant i64: i <= n ==> i == k ==> i < n;\nloop invariant i65: i <= n ==> i == k ==> k < n;\nloop invariant i66: i <= n ==> i == k ==> i >= 0;\nloop invariant i67: i <= n ==> i == k ==> k >= 0;\nloop invariant i68: i <= n ==> i == k ==> i <= n;\nloop invariant i69: i <= n ==> i == k ==> k <= n;\nloop invariant i70: i <= n ==> i == k ==> k == i;\nloop invariant i71: k <= n ==> i >= 0;\nloop invariant i72: k <= n ==> k >= 0;\nloop invariant i73: k <= n ==> i <= n;\nloop invariant i74: k <= n ==> k <= n;\nloop invariant i75: k <= n ==> i == k ==> i < n;\nloop invariant i76: k <= n ==> i == k ==> k < n;\nloop invariant i77: k <= n ==> i == k ==> i >= 0;\nloop invariant i78: k <= n ==> i == k ==> k >= 0;\nloop invariant i79: k <= n ==> i == k ==> i <= n;\nloop invariant i80: k <= n ==> i == k ==> k <= n;\nloop invariant i81: k <= n ==> i == k ==> k == i;\nloop invariant i82: i == k ==> k == i;\nloop invariant i83: i == k ==> i < n ==> i < n;\nloop invariant i84: i == k ==> i == k ==> i < n;\nloop invariant i85: i == k ==> i < n ==> k < n;\nloop invariant i86: i == k ==> i < n ==> i >= 0;\nloop invariant i87: i == k ==> i < n ==> k >= 0;\nloop invariant i88: i == k ==> i < n ==> i <= n;\nloop invariant i89: i == k ==> i < n ==> k <= n;\nloop invariant i90: i == k ==> i < n ==> i == k ==> i < n;\nloop invariant i91: i == k ==> i < n ==> k < n ==> i < n;\nloop invariant i92: i == k ==> i < n ==> i >= 0 ==> i < n;\nloop invariant i93: i == k ==> i < n ==> k >= 0 ==> i < n;\nloop invariant i94: i == k ==> i < n ==> i <= n ==> i < n;\nloop invariant i95: i == k ==> i < n ==> k <= n ==> i < n;\nloop invariant i96: i == k ==> i < n ==> i == k ==> i < n ==> i < n;\nloop invariant i97: i == k ==> i < n ==> k < n ==> i < n ==> i < n;\nloop invariant i98: i == k ==> i < n ==> i >= 0 ==> i < n ==> i < n;\nloop invariant i99: i == k ==> i < n ==> k >= 0 ==> i < n ==> i < n;\nloop invariant i100: i == k ==> i < n ==> i <= n ==> i < n ==> i < n;\nloop invariant i101: i == k ==> i < n ==> k <= n ==> i < n ==> i < n;\nloop invariant i102: i == k ==> i < n ==> i == k ==> i < n ==> i < n ==> i < n;\nloop invariant i103: i == k ==> i < n ==> k < n ==> i < n ==> i < n ==> i < n;\nloop invariant i104: i == k ==> (i == k && k == n);\nloop invariant i105: i == k ==> (i == k && i <= n);\nloop invariant i106: i == k ==> (i == k && k <= n);\nloop invariant i107: i == k ==> (i == k && i == n);\nloop invariant i108: i == k ==> (i == k && k == n && i <= n);\nloop invariant i109: i == k ==> (i == k && i <= n && k == n);\nloop invariant i110: i == k ==> (i == k && i == n && k <= n);\nloop invariant i111: i == k ==> (i == k && i == n && k == n && i <= n);\nloop invariant i112: i == k ==> (i == k && i == n && k == n && k <= n);\nloop invariant i113: i == k ==> (i == k && i == n && k == n && i <= n && k <= n);\nloop invariant i114: i == k ==> (i == k && i == n && k == n && i == n && k <= n && i <= n);\nloop invariant i115: i == k ==> (i == k && i == n && k == n && i == n && k == n && k <= n && i <= n);\nloop invariant i116: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i <= n && k <= n);\nloop invariant i117: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k <= n && i <= n);\nloop invariant i118: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k <= n && i <= n);\nloop invariant i119: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i <= n && k <= n);\nloop invariant i120: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k <= n && i <= n);\nloop invariant i121: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k <= n && i <= n);\nloop invariant i122: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i <= n && k <= n);\nloop invariant i123: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k <= n && i <= n);\nloop invariant i124: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k <= n && i <= n);\nloop invariant i125: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i <= n && k <= n);\nloop invariant i126: i == k ==> (i == k && i == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k == n && k == n && i == n && k <= n && i <= n);\nloop invariant i127: i < n ==> k == (i + 1);\nloop invariant i128: i >= n ==> k == n;\nloop invariant i129: 0 <= k <= i + 1;\nloop invariant i130: k >= i;\nloop invariant i131: n > 0;\nloop invariant i132: 0 <= i <= n;loop invariant k >= 0;loop invariant k <= n;loop invariant i <= k;loop invariant k == i + k;loop invariant k > 0;loop invariant n > 0;loop invariant n == i + n;loop invariant n >= 0;loop invariant n <= i + n;loop invariant i >= 0;loop invariant i <= n;loop invariant k <= n;loop invariant k >= 0;loop invariant k == i + 1;\n\nloop invariant i134: i < n ==> k < n;\nloop invariant i135: n > 0 ==> i <= n;\nloop invariant i136: n > 0 ==> k <= n;\nloop invariant i137: i == k ==> i == n;\nloop invariant i138: k == i ==> k == n;\nloop invariant i139: n >= i;\nloop invariant i140: n >= k;\nloop invariant i141: n <= k + 1;\nloop invariant i142: i <= k;\nloop invariant i143: i == k ==> k == n;\n*/\nwhile (i < n) {\n    i++;k++;\n  }\n  {;\n//@ assert((i == k) && (k == n));\n}\n\n  return 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark16_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark17_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c"
        ],
        "skipped": [],
        "total": 139,
        "success_count": 120,
        "failure_count": 19,
        "success_rate": 0.8633093525179856
    }
}