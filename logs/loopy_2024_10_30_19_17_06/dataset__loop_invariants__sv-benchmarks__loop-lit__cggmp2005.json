{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    while (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
        "success": false,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= j and 0 <= i;\nloop invariant i <= j + 2;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= j + 1;\nloop invariant i is always odd;\nloop invariant j is always even;\nloop invariant i + j is always odd;\nloop invariant i + j <= 11;\nloop invariant j >= 6;\nloop invariant i >= 11;\nloop invariant i + j >= 17;\nloop invariant i + j is always odd;\nloop invariant i + j <= 21;\nloop invariant j >= 12;\nloop invariant i >= 13;\nloop invariant i + j >= 25;\nloop invariant i + j is always odd;\nloop invariant i + j <= 27;\nloop invariant j >= 14;\nloop invariant i >= 15;\nloop invariant i + j >= 29;\nloop invariant i + j is always odd;\nloop invariant i + j <= 31;\nloop invariant j >= 16;\nloop invariant i >= 17;\nloop invariant i + j >= 33;\nloop invariant i + j is always odd;\nloop invariant i + j <= 35;\nloop invariant j >= 18;\nloop invariant i >= 19;\nloop invariant i + j >= 37;\nloop invariant i + j is always odd;\nloop invariant i + j <= 39;\nloop invariant j >= 20;\nloop invariant i >= 21;\nloop invariant i + j >= 41;\nloop invariant i + j is always odd;\nloop invariant i + j <= 43;\nloop invariant j >= 22;\nloop invariant i >= 23;\nloop invariant i + j >= 45;\nloop invariant i + j is always odd;\nloop invariant i + j <= 47;\nloop invariant j >= 24;\nloop invariant i >= 25;\nloop invariant i + j >= 49;\nloop invariant i + j is always odd;\nloop invariant i + j <= 51;\nloop invariant j >= 26;\nloop invariant i >= 27;\nloop invariant i + j >= 53;\nloop invariant i + j is always odd;\nloop invariant i + j <= 55;\nloop invariant j >= 28;\nloop invariant i >= 29;\nloop invariant i + j >= 57;\nloop invariant i + j is always odd;\nloop invariant i + j <= 59;\nloop invariant j >= 30;\nloop invariant i >= 31;\nloop invariant i + j >= 61;\nloop invariant i + j is always odd;\nloop invariant i + j <= 63;\nloop invariant j >= 32;\nloop invariant i >= 33;\nloop invariant i + j >= 65;\nloop invariant i + j is always odd;\nloop invariant i + j <= 67;\nloop invariant j >= 34;\nloop invariant i >= 35;\nloop invariant i + j >= 69;\nloop invariant i + j is always odd;\nloop invariant i + j <= 71;\nloop invariant j >= 36;\nloop invariant i >= 37;\nloop invariant i + j >= 73;\nloop invariant i + j is always odd;\nloop invariant i + j <= 75;\nloop invariant j >= 38;\nloop invariant i >= 39;\nloop invariant i + j >= 77;\nloop invariant i + j is always odd;\nloop invariant i + j <= 79;\nloop invariant j >= 40;\nloop invariant i >= 41;\nloop invariant i + j >= 81;\nloop invariant i + j is always odd;\nloop invariant i + j <= 83;\nloop invariant j >= 42;\nloop invariant i >= 43;\nloop invariant i + j >= 85;\nloop invariant i + j is always odd;\nloop invariant i + j <= 87;\nloop invariant j >= 44;\nloop invariant i >= 45;\nloop invariant i + j >= 89;\nloop invariant i + j is always odd;\nloop invariant i + j <= 91;\nloop invariant j >= 46;\nloop invariant i >= 47;\nloop invariant i + j >= 93;\nloop invariant i + j is always odd;\nloop invariant i + j <= 95;\nloop invariant j >= 48;\nloop invariant i >= 49;\nloop invariant i + j >= 97;\nloop invariant i + j is always odd;\nloop invariant i + j <= 99;\nloop invariant j >= 50;\nloop invariant i >= 51;\nloop invariant i + j >= 101;\nloop invariant i + j is always odd;\nloop invariant i + j <= 103;\nloop invariant j >= 52;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant 0 <= j <= 10;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant i + j == 11;\nloop invariant j - i == 9;\nloop invariant i + j == 11;\nloop invariant i >= 3;\nloop invariant j <= 8;\nloop invariant i + j == 11;\nloop invariant i >= 5;\nloop invariant j <= 6;\nloop invariant i + j == 11;\nloop invariant i >= 7;\nloop invariant j <= 4;\nloop invariant i + j == 11;\nloop invariant i >= 9;\nloop invariant j <= 2;\nloop invariant i + j == 11;\nloop invariant i >= 11;\nloop invariant j <= 0;\nloop invariant i + j == 11;\nloop invariant i >= 11;\nloop invariant j <= 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= j;\nloop invariant (j % 2) == 0;\nloop invariant j == 2 * i - 2;\nloop invariant i == (j + 1) / 2;\nloop invariant j >= 2;\nloop invariant i <= j;\nloop invariant i >= 2;\nloop invariant j <= 10;\nloop invariant i <= 6;\nloop invariant j >= 6;\nloop invariant j >= 2 * i - 2;\nloop invariant i >= (j + 1) / 2;\nloop invariant j < 10;\nloop invariant 1 <= i <= j;\nloop invariant (j % 2) == 0;\nloop invariant j == 2 * i - 2;\nloop invariant i == (j + 1) / 2;\nloop invariant j >= 2;\nloop invariant i <= j;\nloop invariant i >= 2;\nloop invariant j <= 10;\nloop invariant i <= 6;\nloop invariant j >= 6;\nloop invariant j >= 2 * i - 2;\nloop invariant i >= (j + 1) / 2;\nloop invariant j < 10;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= 10;\nloop invariant 1 <= i <= 11;\nloop invariant j == 10 - i;\nloop invariant i == 1 + 2 * (j - 10) / 2;\nloop invariant j == 10 - (1 + 2 * (j - 10) / 2);\nloop invariant 0 <= j <= 10;\nloop invariant 1 <= i <= 11;\nloop invariant j == 10 - i;\nloop invariant i == 1 + 2 * (j - 10) / 2;\nloop invariant j == 10 - (1 + 2 * (j - 10) / 2);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant i <= j <= 10;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i % 2 == 1;\nloop invariant i % 2 == 1 ==> i >= 1;\nloop invariant i % 2 == 1 ==> i <= 11;\nloop invariant j % 1 == 0;\nloop invariant j % 1 == 0 ==> j >= -1;\nloop invariant j % 1 == 0 ==> j <= 10;\nloop invariant (i % 2 == 1) ==> (i >= 1);\nloop invariant (i % 2 == 1) ==> (i <= 11);\nloop invariant (j % 1 == 0) ==> (j >= -1);\nloop invariant (j % 1 == 0) ==> (j <= 10);\nloop invariant i % 2 == 1 ==> (i >= 1);\nloop invariant i % 2 == 1 ==> (i <= 11);\nloop invariant j % 1 == 0 ==> (j >= -1);\nloop invariant j % 1 == 0 ==> (j <= 10);\nloop invariant (i % 2 == 1) ==> (i >= 1);\nloop invariant (i % 2 == 1) ==> (i <= 11);\nloop invariant (j % 1 == 0) ==> (j >= -1);\nloop invariant (j % 1 == 0) ==> (j <= 10);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= 10;\nloop invariant 1 <= i <= 11;\nloop invariant j >= i;\nloop invariant j - i < 10;\nloop invariant j + i <= 11;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i == j + 1;\nloop invariant j == 10 - i;\nloop invariant j >= i;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j - i == -1;\nloop invariant i - j == 1;\nloop invariant i + j == 11;\nloop invariant i * j == 10;\nloop invariant i + j - 1 == 10;\nloop invariant i - j + 1 == 11;\nloop invariant i * j - j == 10;\nloop invariant i * j - i == 10;\nloop invariant i * j - (i + j - 1) == 9;\nloop invariant i * j - (i - j + 1) == 9;\nloop invariant i * j - (i + j - 1) + j == 10;\nloop invariant i * j - (i - j + 1) + i == 10;\nloop invariant i * j - (i + j - 1) + j == i;\nloop invariant i * j - (i - j + 1) + i == j;\nloop invariant i * j - (i + j - 1) + j == i - j + 1;\nloop invariant i * j - (i - j + 1) + i == j - i + 1;\nloop invariant i * j - (i + j - 1) + j == i + j - 1;\nloop invariant i * j - (i - j + 1) + i == j + i - 1;\nloop invariant i * j - (i + j - 1) + j == i - j + 1;\nloop invariant i * j - (i - j + 1) + i == j - i + 1;\nloop invariant i * j - (i + j - 1) + j == i + j - 1;\nloop invariant i * j - (i - j + 1) + i == j + i - 1;\nloop invariant i * j - (i + j - 1) + j == i - j + 1;\nloop invariant i * j - (i - j + 1) + i == j - i + 1;\nloop invariant i * j - (i + j - 1) + j == i + j - 1;\nloop invariant i * j - (i - j + 1) + i == j + i - 1;\nloop invariant i * j - (i + j - 1) + j == i - j + 1;\nloop invariant i * j - (i - j + 1) + i == j - i + 1;\nloop invariant i * j - (i + j - 1) + j == i + j - 1;\nloop invariant i * j - (i - j + 1) + i == j + i - 1;\nloop invariant i * j - (i + j - 1) + j == i - j + 1;\nloop invariant i * j - (i - j + 1) + i == j - i + 1;\nloop invariant i * j - (i + j - 1) + j == i + j - 1;\nloop invariant i * j - (i - j + 1) + i == j + i - 1;\nloop invariant i * j - (i + j - 1) + j == i - j + 1;\nloop invariant i * j - (i - j + 1) + i == j - i + 1;\nloop invariant i * j - (i + j - 1) + j == i + j - 1;\nloop invariant i * j - (i - j + 1) + i == j + i - 1;\nloop invariant i * j - (i + j - 1) + j == i - j + 1;\nloop invariant i * j - (i - j + 1) + i == j - i + 1;\nloop invariant i * j - (i + j - 1) + j == i + j - 1;\nloop invariant i * j - (i - j + 1) + i == j + i - 1;\nloop invariant i * j - (i + j - 1) + j == i - j + 1;\nloop invariant i * j - (i - j + 1) + i == j - i + 1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= j;\nloop invariant j >= 2;\nloop invariant -1 <= j - i <= 9;\nloop invariant i == j + 1 ==> j == 6;\nloop invariant j - i == 9 ==> i == 10;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= 10;\nloop invariant 1 <= j <= 9;\nloop invariant i % 2 == 1;\nloop invariant i > j;\nloop invariant i + j == 11;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j;\nloop invariant j < 10;\nloop invariant j >= i;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant j + i == 11;\nloop invariant j + i == 10;\nloop invariant j == 6;\nloop invariant 0 <= j;\nloop invariant j < 10;\nloop invariant j >= i;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant j + i == 11;\nloop invariant j + i == 10;\nloop invariant j == 6;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= 10;\nloop invariant -1 <= j <= -1;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant i <= 10;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= 10;\nloop invariant j == 10 - i;\nloop invariant j >= 0;\nloop invariant j <= 9;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\n*/\n```",
            "```\n/*@\nloop invariant i >= 1;\nloop invariant j >= -1 + i;\nloop invariant (i mod 2 == 1) ==> (j mod 2 == 0);\nloop invariant j <= 9;\nloop invariant (i <= 11) ==> (j <= 7);\nloop invariant (i <= 9) ==> (j <= 5);\nloop invariant (i <= 7) ==> (j <= 3);\nloop invariant (i <= 5) ==> (j <= 1);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= j and 0 <= i;\nloop invariant i <= j + 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 88,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= j + 1;\nloop invariant i is always odd;\nloop invariant j is always even;\nloop invariant i + j is always odd;\nloop invariant i + j <= 11;\nloop invariant j >= 6;\nloop invariant i >= 11;\nloop invariant i + j >= 17;\nloop invariant i + j is always odd;\nloop invariant i + j <= 21;\nloop invariant j >= 12;\nloop invariant i >= 13;\nloop invariant i + j >= 25;\nloop invariant i + j is always odd;\nloop invariant i + j <= 27;\nloop invariant j >= 14;\nloop invariant i >= 15;\nloop invariant i + j >= 29;\nloop invariant i + j is always odd;\nloop invariant i + j <= 31;\nloop invariant j >= 16;\nloop invariant i >= 17;\nloop invariant i + j >= 33;\nloop invariant i + j is always odd;\nloop invariant i + j <= 35;\nloop invariant j >= 18;\nloop invariant i >= 19;\nloop invariant i + j >= 37;\nloop invariant i + j is always odd;\nloop invariant i + j <= 39;\nloop invariant j >= 20;\nloop invariant i >= 21;\nloop invariant i + j >= 41;\nloop invariant i + j is always odd;\nloop invariant i + j <= 43;\nloop invariant j >= 22;\nloop invariant i >= 23;\nloop invariant i + j >= 45;\nloop invariant i + j is always odd;\nloop invariant i + j <= 47;\nloop invariant j >= 24;\nloop invariant i >= 25;\nloop invariant i + j >= 49;\nloop invariant i + j is always odd;\nloop invariant i + j <= 51;\nloop invariant j >= 26;\nloop invariant i >= 27;\nloop invariant i + j >= 53;\nloop invariant i + j is always odd;\nloop invariant i + j <= 55;\nloop invariant j >= 28;\nloop invariant i >= 29;\nloop invariant i + j >= 57;\nloop invariant i + j is always odd;\nloop invariant i + j <= 59;\nloop invariant j >= 30;\nloop invariant i >= 31;\nloop invariant i + j >= 61;\nloop invariant i + j is always odd;\nloop invariant i + j <= 63;\nloop invariant j >= 32;\nloop invariant i >= 33;\nloop invariant i + j >= 65;\nloop invariant i + j is always odd;\nloop invariant i + j <= 67;\nloop invariant j >= 34;\nloop invariant i >= 35;\nloop invariant i + j >= 69;\nloop invariant i + j is always odd;\nloop invariant i + j <= 71;\nloop invariant j >= 36;\nloop invariant i >= 37;\nloop invariant i + j >= 73;\nloop invariant i + j is always odd;\nloop invariant i + j <= 75;\nloop invariant j >= 38;\nloop invariant i >= 39;\nloop invariant i + j >= 77;\nloop invariant i + j is always odd;\nloop invariant i + j <= 79;\nloop invariant j >= 40;\nloop invariant i >= 41;\nloop invariant i + j >= 81;\nloop invariant i + j is always odd;\nloop invariant i + j <= 83;\nloop invariant j >= 42;\nloop invariant i >= 43;\nloop invariant i + j >= 85;\nloop invariant i + j is always odd;\nloop invariant i + j <= 87;\nloop invariant j >= 44;\nloop invariant i >= 45;\nloop invariant i + j >= 89;\nloop invariant i + j is always odd;\nloop invariant i + j <= 91;\nloop invariant j >= 46;\nloop invariant i >= 47;\nloop invariant i + j >= 93;\nloop invariant i + j is always odd;\nloop invariant i + j <= 95;\nloop invariant j >= 48;\nloop invariant i >= 49;\nloop invariant i + j >= 97;\nloop invariant i + j is always odd;\nloop invariant i + j <= 99;\nloop invariant j >= 50;\nloop invariant i >= 51;\nloop invariant i + j >= 101;\nloop invariant i + j is always odd;\nloop invariant i + j <= 103;\nloop invariant j >= 52;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 16,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant 0 <= j <= 10;\nloop invariant i % 2 == 1;\nloop invariant i <= j;\nloop invariant i + j == 11;\nloop invariant j - i == 9;\nloop invariant i + j == 11;\nloop invariant i >= 3;\nloop invariant j <= 8;\nloop invariant i + j == 11;\nloop invariant i >= 5;\nloop invariant j <= 6;\nloop invariant i + j == 11;\nloop invariant i >= 7;\nloop invariant j <= 4;\nloop invariant i + j == 11;\nloop invariant i >= 9;\nloop invariant j <= 2;\nloop invariant i + j == 11;\nloop invariant i >= 11;\nloop invariant j <= 0;\nloop invariant i + j == 11;\nloop invariant i >= 11;\nloop invariant j <= 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\nloop invariant j == 0;\nloop invariant i + j == 11;\nloop invariant i == 11;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\nloop invariant i2: 0 <= j <= 10;\nloop invariant i3: i % 2 == 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= j;\nloop invariant (j % 2) == 0;\nloop invariant j == 2 * i - 2;\nloop invariant i == (j + 1) / 2;\nloop invariant j >= 2;\nloop invariant i <= j;\nloop invariant i >= 2;\nloop invariant j <= 10;\nloop invariant i <= 6;\nloop invariant j >= 6;\nloop invariant j >= 2 * i - 2;\nloop invariant i >= (j + 1) / 2;\nloop invariant j < 10;\nloop invariant 1 <= i <= j;\nloop invariant (j % 2) == 0;\nloop invariant j == 2 * i - 2;\nloop invariant i == (j + 1) / 2;\nloop invariant j >= 2;\nloop invariant i <= j;\nloop invariant i >= 2;\nloop invariant j <= 10;\nloop invariant i <= 6;\nloop invariant j >= 6;\nloop invariant j >= 2 * i - 2;\nloop invariant i >= (j + 1) / 2;\nloop invariant j < 10;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n\n\n\n\n\n\nloop invariant i8: j <= 10;\n\n\n\n\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= 10;\nloop invariant 1 <= i <= 11;\nloop invariant j == 10 - i;\nloop invariant i == 1 + 2 * (j - 10) / 2;\nloop invariant j == 10 - (1 + 2 * (j - 10) / 2);\nloop invariant 0 <= j <= 10;\nloop invariant 1 <= i <= 11;\nloop invariant j == 10 - i;\nloop invariant i == 1 + 2 * (j - 10) / 2;\nloop invariant j == 10 - (1 + 2 * (j - 10) / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n\n\n\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= 10;\nloop invariant i <= j <= 10;\nloop invariant j <= 10;\nloop invariant j >= i;\nloop invariant i % 2 == 1;\nloop invariant i % 2 == 1 ==> i >= 1;\nloop invariant i % 2 == 1 ==> i <= 11;\nloop invariant j % 1 == 0;\nloop invariant j % 1 == 0 ==> j >= -1;\nloop invariant j % 1 == 0 ==> j <= 10;\nloop invariant (i % 2 == 1) ==> (i >= 1);\nloop invariant (i % 2 == 1) ==> (i <= 11);\nloop invariant (j % 1 == 0) ==> (j >= -1);\nloop invariant (j % 1 == 0) ==> (j <= 10);\nloop invariant i % 2 == 1 ==> (i >= 1);\nloop invariant i % 2 == 1 ==> (i <= 11);\nloop invariant j % 1 == 0 ==> (j >= -1);\nloop invariant j % 1 == 0 ==> (j <= 10);\nloop invariant (i % 2 == 1) ==> (i >= 1);\nloop invariant (i % 2 == 1) ==> (i <= 11);\nloop invariant (j % 1 == 0) ==> (j >= -1);\nloop invariant (j % 1 == 0) ==> (j <= 10);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n\nloop invariant i3: j <= 10;\n\nloop invariant i5: i % 2 == 1;\nloop invariant i6: i % 2 == 1 ==> i >= 1;\nloop invariant i7: i % 2 == 1 ==> i <= 11;\nloop invariant i8: j % 1 == 0;\nloop invariant i9: j % 1 == 0 ==> j >= -1;\nloop invariant i10: j % 1 == 0 ==> j <= 10;\nloop invariant i11: (i % 2 == 1) ==> (i >= 1);\nloop invariant i12: (i % 2 == 1) ==> (i <= 11);\nloop invariant i13: (j % 1 == 0) ==> (j >= -1);\nloop invariant i14: (j % 1 == 0) ==> (j <= 10);\nloop invariant i15: i % 2 == 1 ==> (i >= 1);\nloop invariant i16: i % 2 == 1 ==> (i <= 11);\nloop invariant i17: j % 1 == 0 ==> (j >= -1);\nloop invariant i18: j % 1 == 0 ==> (j <= 10);\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= 10;\nloop invariant 1 <= i <= 11;\nloop invariant j >= i;\nloop invariant j - i < 10;\nloop invariant j + i <= 11;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\nloop invariant j - i <= 10;\nloop invariant j - i >= -1;\nloop invariant j - i <= 9;\nloop invariant j - i >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n\n\nloop invariant i4: j - i < 10;\n\n\nloop invariant i7: j - i <= 9;\n\nloop invariant i9: j - i <= 10;\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 23,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= j;\nloop invariant i % 2 == 1;\nloop invariant j % 2 == 0;\nloop invariant i == j + 1;\nloop invariant j == 10 - i;\nloop invariant j >= i;\nloop invariant i >= 1;\nloop invariant j <= 10;\nloop invariant j - i == -1;\nloop invariant i - j == 1;\nloop invariant i + j == 11;\nloop invariant i * j == 10;\nloop invariant i + j - 1 == 10;\nloop invariant i - j + 1 == 11;\nloop invariant i * j - j == 10;\nloop invariant i * j - i == 10;\nloop invariant i * j - (i + j - 1) == 9;\nloop invariant i * j - (i - j + 1) == 9;\nloop invariant i * j - (i + j - 1) + j == 10;\nloop invariant i * j - (i - j + 1) + i == 10;\nloop invariant i * j - (i + j - 1) + j == i;\nloop invariant i * j - (i - j + 1) + i == j;\nloop invariant i * j - (i + j - 1) + j == i - j + 1;\nloop invariant i * j - (i - j + 1) + i == j - i + 1;\nloop invariant i * j - (i + j - 1) + j == i + j - 1;\nloop invariant i * j - (i - j + 1) + i == j + i - 1;\nloop invariant i * j - (i + j - 1) + j == i - j + 1;\nloop invariant i * j - (i - j + 1) + i == j - i + 1;\nloop invariant i * j - (i + j - 1) + j == i + j - 1;\nloop invariant i * j - (i - j + 1) + i == j + i - 1;\nloop invariant i * j - (i + j - 1) + j == i - j + 1;\nloop invariant i * j - (i - j + 1) + i == j - i + 1;\nloop invariant i * j - (i + j - 1) + j == i + j - 1;\nloop invariant i * j - (i - j + 1) + i == j + i - 1;\nloop invariant i * j - (i + j - 1) + j == i - j + 1;\nloop invariant i * j - (i - j + 1) + i == j - i + 1;\nloop invariant i * j - (i + j - 1) + j == i + j - 1;\nloop invariant i * j - (i - j + 1) + i == j + i - 1;\nloop invariant i * j - (i + j - 1) + j == i - j + 1;\nloop invariant i * j - (i - j + 1) + i == j - i + 1;\nloop invariant i * j - (i + j - 1) + j == i + j - 1;\nloop invariant i * j - (i - j + 1) + i == j + i - 1;\nloop invariant i * j - (i + j - 1) + j == i - j + 1;\nloop invariant i * j - (i - j + 1) + i == j - i + 1;\nloop invariant i * j - (i + j - 1) + j == i + j - 1;\nloop invariant i * j - (i - j + 1) + i == j + i - 1;\nloop invariant i * j - (i + j - 1) + j == i - j + 1;\nloop invariant i * j - (i - j + 1) + i == j - i + 1;\nloop invariant i * j - (i + j - 1) + j == i + j - 1;\nloop invariant i * j - (i - j + 1) + i == j + i - 1;\nloop invariant i * j - (i + j - 1) + j == i - j + 1;\nloop invariant i * j - (i - j + 1) + i == j - i + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\nloop invariant i2: i % 2 == 1;\n\n\n\n\nloop invariant i7: i >= 1;\nloop invariant i8: j <= 10;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= j;\nloop invariant j >= 2;\nloop invariant -1 <= j - i <= 9;\nloop invariant i == j + 1 ==> j == 6;\nloop invariant j - i == 9 ==> i == 10;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n\n\n\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= 10;\nloop invariant 1 <= j <= 9;\nloop invariant i % 2 == 1;\nloop invariant i > j;\nloop invariant i + j == 11;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n\nloop invariant i3: i % 2 == 1;\n\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= j;\nloop invariant j < 10;\nloop invariant j >= i;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant j + i == 11;\nloop invariant j + i == 10;\nloop invariant j == 6;\nloop invariant 0 <= j;\nloop invariant j < 10;\nloop invariant j >= i;\nloop invariant i % 2 == 0;\nloop invariant j % 2 == 1;\nloop invariant j + i == 11;\nloop invariant j + i == 10;\nloop invariant j == 6;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n\n\n\n\n\n\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= 10;\nloop invariant -1 <= j <= -1;\nloop invariant j >= -1;\nloop invariant i >= 1;\nloop invariant i <= 10;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n\nloop invariant i3: j >= -1;\nloop invariant i4: i >= 1;\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 6,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= 10;\nloop invariant j == 10 - i;\nloop invariant j >= 0;\nloop invariant j <= 9;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\nloop invariant i == 7;\nloop invariant j == 6;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n\n\n\n\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant i >= 1;\nloop invariant j >= -1 + i;\nloop invariant (i mod 2 == 1) ==> (j mod 2 == 0);\nloop invariant j <= 9;\nloop invariant (i <= 11) ==> (j <= 7);\nloop invariant (i <= 9) ==> (j <= 5);\nloop invariant (i <= 7) ==> (j <= 3);\nloop invariant (i <= 5) ==> (j <= 1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\nloop invariant i1: i >= 1;\n\n\n\n\n\n\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 12: unexpected token 'and'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\nloop invariant i1: 0 <= j and 0 <= i;\nloop invariant i2: i <= j + 2;\nloop invariant i3: 1 <= i <= j + 1;\nloop invariant i4: i is always odd;\nloop invariant i5: j is always even;\nloop invariant i6: i + j is always odd;\nloop invariant i7: i + j <= 11;\nloop invariant i8: j >= 6;\nloop invariant i9: i >= 11;\nloop invariant i10: i + j >= 17;\nloop invariant i11: i + j <= 21;\nloop invariant i12: j >= 12;\nloop invariant i13: i >= 13;\nloop invariant i14: i + j >= 25;\nloop invariant i15: i + j <= 27;\nloop invariant i16: j >= 14;\nloop invariant i17: i >= 15;\nloop invariant i18: i + j >= 29;\nloop invariant i19: i + j <= 31;\nloop invariant i20: j >= 16;\nloop invariant i21: i >= 17;\nloop invariant i22: i + j >= 33;\nloop invariant i23: i + j <= 35;\nloop invariant i24: j >= 18;\nloop invariant i25: i >= 19;\nloop invariant i26: i + j >= 37;\nloop invariant i27: i + j <= 39;\nloop invariant i28: j >= 20;\nloop invariant i29: i >= 21;\nloop invariant i30: i + j >= 41;\nloop invariant i31: i + j <= 43;\nloop invariant i32: j >= 22;\nloop invariant i33: i >= 23;\nloop invariant i34: i + j >= 45;\nloop invariant i35: i + j <= 47;\nloop invariant i36: j >= 24;\nloop invariant i37: i >= 25;\nloop invariant i38: i + j >= 49;\nloop invariant i39: i + j <= 51;\nloop invariant i40: j >= 26;\nloop invariant i41: i >= 27;\nloop invariant i42: i + j >= 53;\nloop invariant i43: i + j <= 55;\nloop invariant i44: j >= 28;\nloop invariant i45: i >= 29;\nloop invariant i46: i + j >= 57;\nloop invariant i47: i + j <= 59;\nloop invariant i48: j >= 30;\nloop invariant i49: i >= 31;\nloop invariant i50: i + j >= 61;\nloop invariant i51: i + j <= 63;\nloop invariant i52: j >= 32;\nloop invariant i53: i >= 33;\nloop invariant i54: i + j >= 65;\nloop invariant i55: i + j <= 67;\nloop invariant i56: j >= 34;\nloop invariant i57: i >= 35;\nloop invariant i58: i + j >= 69;\nloop invariant i59: i + j <= 71;\nloop invariant i60: j >= 36;\nloop invariant i61: i >= 37;\nloop invariant i62: i + j >= 73;\nloop invariant i63: i + j <= 75;\nloop invariant i64: j >= 38;\nloop invariant i65: i >= 39;\nloop invariant i66: i + j >= 77;\nloop invariant i67: i + j <= 79;\nloop invariant i68: j >= 40;\nloop invariant i69: i >= 41;\nloop invariant i70: i + j >= 81;\nloop invariant i71: i + j <= 83;\nloop invariant i72: j >= 42;\nloop invariant i73: i >= 43;\nloop invariant i74: i + j >= 85;\nloop invariant i75: i + j <= 87;\nloop invariant i76: j >= 44;\nloop invariant i77: i >= 45;\nloop invariant i78: i + j >= 89;\nloop invariant i79: i + j <= 91;\nloop invariant i80: j >= 46;\nloop invariant i81: i >= 47;\nloop invariant i82: i + j >= 93;\nloop invariant i83: i + j <= 95;\nloop invariant i84: j >= 48;\nloop invariant i85: i >= 49;\nloop invariant i86: i + j >= 97;\nloop invariant i87: i + j <= 99;\nloop invariant i88: j >= 50;\nloop invariant i89: i >= 51;\nloop invariant i90: i + j >= 101;\nloop invariant i91: i + j <= 103;\nloop invariant i92: j >= 52;\nloop invariant i93: 0 <= i <= 10;\nloop invariant i94: 0 <= j <= 10;\nloop invariant i95: i % 2 == 1;\nloop invariant i96: i <= j;\nloop invariant i97: i + j == 11;\nloop invariant i98: j - i == 9;\nloop invariant i99: i >= 3;\nloop invariant i100: j <= 8;\nloop invariant i101: i >= 5;\nloop invariant i102: j <= 6;\nloop invariant i103: i >= 7;\nloop invariant i104: j <= 4;\nloop invariant i105: i >= 9;\nloop invariant i106: j <= 2;\nloop invariant i107: j <= 0;\nloop invariant i108: i == 11;\nloop invariant i109: j == 0;\nloop invariant i110: 1 <= i <= j;\nloop invariant i111: (j % 2) == 0;\nloop invariant i112: j == 2 * i - 2;\nloop invariant i113: i == (j + 1) / 2;\nloop invariant i114: j >= 2;\nloop invariant i115: i >= 2;\nloop invariant i116: j <= 10;\nloop invariant i117: i <= 6;\nloop invariant i118: j >= 2 * i - 2;\nloop invariant i119: i >= (j + 1) / 2;\nloop invariant i120: j < 10;\nloop invariant i121: 1 <= i <= 11;\nloop invariant i122: j == 10 - i;\nloop invariant i123: i == 1 + 2 * (j - 10) / 2;\nloop invariant i124: j == 10 - (1 + 2 * (j - 10) / 2);\nloop invariant i125: i <= j <= 10;\nloop invariant i126: j >= i;\nloop invariant i127: i % 2 == 1 ==> i >= 1;\nloop invariant i128: i % 2 == 1 ==> i <= 11;\nloop invariant i129: j % 1 == 0;\nloop invariant i130: j % 1 == 0 ==> j >= -1;\nloop invariant i131: j % 1 == 0 ==> j <= 10;\nloop invariant i132: (i % 2 == 1) ==> (i >= 1);\nloop invariant i133: (i % 2 == 1) ==> (i <= 11);\nloop invariant i134: (j % 1 == 0) ==> (j >= -1);\nloop invariant i135: (j % 1 == 0) ==> (j <= 10);\nloop invariant i136: i % 2 == 1 ==> (i >= 1);\nloop invariant i137: i % 2 == 1 ==> (i <= 11);\nloop invariant i138: j % 1 == 0 ==> (j >= -1);\nloop invariant i139: j % 1 == 0 ==> (j <= 10);\nloop invariant i140: j - i < 10;\nloop invariant i141: j + i <= 11;\nloop invariant i142: j - i >= -1;\nloop invariant i143: j - i <= 9;\nloop invariant i144: j - i >= 0;\nloop invariant i145: j - i <= 10;\nloop invariant i146: 0 <= i <= j;\nloop invariant i147: j % 2 == 0;\nloop invariant i148: i == j + 1;\nloop invariant i149: i >= 1;\nloop invariant i150: j - i == -1;\nloop invariant i151: i - j == 1;\nloop invariant i152: i * j == 10;\nloop invariant i153: i + j - 1 == 10;\nloop invariant i154: i - j + 1 == 11;\nloop invariant i155: i * j - j == 10;\nloop invariant i156: i * j - i == 10;\nloop invariant i157: i * j - (i + j - 1) == 9;\nloop invariant i158: i * j - (i - j + 1) == 9;\nloop invariant i159: i * j - (i + j - 1) + j == 10;\nloop invariant i160: i * j - (i - j + 1) + i == 10;\nloop invariant i161: i * j - (i + j - 1) + j == i;\nloop invariant i162: i * j - (i - j + 1) + i == j;\nloop invariant i163: i * j - (i + j - 1) + j == i - j + 1;\nloop invariant i164: i * j - (i - j + 1) + i == j - i + 1;\nloop invariant i165: i * j - (i + j - 1) + j == i + j - 1;\nloop invariant i166: i * j - (i - j + 1) + i == j + i - 1;\nloop invariant i167: -1 <= j - i <= 9;\nloop invariant i168: i == j + 1 ==> j == 6;\nloop invariant i169: j - i == 9 ==> i == 10;\nloop invariant i170: 1 <= i <= 10;\nloop invariant i171: 1 <= j <= 9;\nloop invariant i172: i > j;\nloop invariant i173: 0 <= j;\nloop invariant i174: i % 2 == 0;\nloop invariant i175: j % 2 == 1;\nloop invariant i176: j + i == 11;\nloop invariant i177: j + i == 10;\nloop invariant i178: j == 6;\nloop invariant i179: -1 <= j <= -1;\nloop invariant i180: j >= -1;\nloop invariant i181: i <= 10;\nloop invariant i182: j >= 0;\nloop invariant i183: j <= 9;\nloop invariant i184: i == 7;\nloop invariant i185: j >= -1 + i;\nloop invariant i186: (i mod 2 == 1) ==> (j mod 2 == 0);\nloop invariant i187: (i <= 11) ==> (j <= 7);\nloop invariant i188: (i <= 9) ==> (j <= 5);\nloop invariant i189: (i <= 7) ==> (j <= 3);\nloop invariant i190: (i <= 5) ==> (j <= 1);\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
        "combined_annotation_num_solver_calls": 137,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int i,j;\n    i = 1;\n    j = 10;\n    /*@\n\n\n\n\n\n\n\n\n\n\nloop invariant i11: i + j <= 21;\n\n\n\nloop invariant i15: i + j <= 27;\n\n\n\nloop invariant i19: i + j <= 31;\n\n\n\nloop invariant i23: i + j <= 35;\n\n\n\nloop invariant i27: i + j <= 39;\n\n\n\nloop invariant i31: i + j <= 43;\n\n\n\nloop invariant i35: i + j <= 47;\n\n\n\nloop invariant i39: i + j <= 51;\n\n\n\nloop invariant i43: i + j <= 55;\n\n\n\nloop invariant i47: i + j <= 59;\n\n\n\nloop invariant i51: i + j <= 63;\n\n\n\nloop invariant i55: i + j <= 67;\n\n\n\nloop invariant i59: i + j <= 71;\n\n\n\nloop invariant i63: i + j <= 75;\n\n\n\nloop invariant i67: i + j <= 79;\n\n\n\nloop invariant i71: i + j <= 83;\n\n\n\nloop invariant i75: i + j <= 87;\n\n\n\nloop invariant i79: i + j <= 91;\n\n\n\nloop invariant i83: i + j <= 95;\n\n\n\nloop invariant i87: i + j <= 99;\n\n\n\nloop invariant i91: i + j <= 103;\n\n\nloop invariant i94: 0 <= j <= 10;\nloop invariant i95: i % 2 == 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i116: j <= 10;\n\n\n\n\nloop invariant i121: 1 <= i <= 11;\n\n\n\n\n\nloop invariant i127: i % 2 == 1 ==> i >= 1;\nloop invariant i128: i % 2 == 1 ==> i <= 11;\nloop invariant i129: j % 1 == 0;\nloop invariant i130: j % 1 == 0 ==> j >= -1;\nloop invariant i131: j % 1 == 0 ==> j <= 10;\nloop invariant i132: (i % 2 == 1) ==> (i >= 1);\nloop invariant i133: (i % 2 == 1) ==> (i <= 11);\nloop invariant i134: (j % 1 == 0) ==> (j >= -1);\nloop invariant i135: (j % 1 == 0) ==> (j <= 10);\nloop invariant i136: i % 2 == 1 ==> (i >= 1);\nloop invariant i137: i % 2 == 1 ==> (i <= 11);\nloop invariant i138: j % 1 == 0 ==> (j >= -1);\nloop invariant i139: j % 1 == 0 ==> (j <= 10);\nloop invariant i140: j - i < 10;\n\n\nloop invariant i143: j - i <= 9;\n\nloop invariant i145: j - i <= 10;\n\n\n\nloop invariant i149: i >= 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i173: 0 <= j;\n\n\n\n\n\n\nloop invariant i180: j >= -1;\n\nloop invariant i182: j >= 0;\n\n\n\n\n\n\n\n\n*/\nwhile (j >= i) {\n        i = i + 2;\n        j = -1 + j;\n    }\n    {;\n//@ assert(j == 6);\n}\n\n    return 0;\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c"
        ],
        "skipped": [],
        "total": 107,
        "success_count": 92,
        "failure_count": 15,
        "success_rate": 0.8598130841121495
    }
}