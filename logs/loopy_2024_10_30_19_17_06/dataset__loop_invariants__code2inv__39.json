{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/39.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n    int n;\n    int c = 0;\n    assume (n > 0);\n\n    while (unknown()) {\n        if(c == n) {\n            c = 1;\n        }\n        else {\n            c = c + 1;\n        }\n    }\n\n    if(c == n) {\n        \n        {;\n//@ assert( c <= n);\n}\n\n    }\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c <= n ==> n <= c;\nloop invariant c <= n ==> n - 1 <= c;\nloop invariant c <= n ==> n - 2 <= c;\nloop invariant c <= n ==> n - 3 <= c;\nloop invariant c <= n ==> n - 4 <= c;\nloop invariant c <= n ==> n - 5 <= c;\nloop invariant c <= n ==> n - 6 <= c;\nloop invariant c <= n ==> n - 7 <= c;\nloop invariant c <= n ==> n - 8 <= c;\nloop invariant c <= n ==> n - 9 <= c;\nloop invariant c <= n ==> n - 10 <= c;\nloop invariant c <= n ==> n - 11 <= c;\nloop invariant c <= n ==> n - 12 <= c;\nloop invariant c <= n ==> n - 13 <= c;\nloop invariant c <= n ==> n - 14 <= c;\nloop invariant c <= n ==> n - 15 <= c;\nloop invariant c <= n ==> n - 16 <= c;\nloop invariant c <= n ==> n - 17 <= c;\nloop invariant c <= n ==> n - 18 <= c;\nloop invariant c <= n ==> n - 19 <= c;\nloop invariant c <= n ==> n - 20 <= c;\nloop invariant c <= n ==> n - 21 <= c;\nloop invariant c <= n ==> n - 22 <= c;\nloop invariant c <= n ==> n - 23 <= c;\nloop invariant c <= n ==> n - 24 <= c;\nloop invariant c <= n ==> n - 25 <= c;\nloop invariant c <= n ==> n - 26 <= c;\nloop invariant c <= n ==> n - 27 <= c;\nloop invariant c <= n ==> n - 28 <= c;\nloop invariant c <= n ==> n - 29 <= c;\nloop invariant c <= n ==> n - 30 <= c;\nloop invariant c <= n ==> n - 31 <= c;\nloop invariant c <= n ==> n - 32 <= c;\nloop invariant c <= n ==> n - 33 <= c;\nloop invariant c <= n ==> n - 34 <= c;\nloop invariant c <= n ==> n - 35 <= c;\nloop invariant c <= n ==> n - 36 <= c;\nloop invariant c <= n ==> n - 37 <= c;\nloop invariant c <= n ==> n - 38 <= c;\nloop invariant c <= n ==> n - 39 <= c;\nloop invariant c <= n ==> n - 40 <= c;\nloop invariant c <= n ==> n - 41 <= c;\nloop invariant c <= n ==> n - 42 <= c;\nloop invariant c <= n ==> n - 43 <= c;\nloop invariant c <= n ==> n - 44 <= c;\nloop invariant c <= n ==> n - 45 <= c;\nloop invariant c <= n ==> n - 46 <= c;\nloop invariant c <= n ==> n - 47 <= c;\nloop invariant c <= n ==> n - 48 <= c;\nloop invariant c <= n ==> n - 49 <= c;\nloop invariant c <= n ==> n - 50 <= c;\nloop invariant c <= n ==> n - 51 <= c;\nloop invariant c <= n ==> n - 52 <= c;\nloop invariant c <= n ==> n - 53 <= c;\nloop invariant c <= n ==> n - 54 <= c;\nloop invariant c <= n ==> n - 55 <= c;\nloop invariant c <= n ==> n - 56 <= c;\nloop invariant c <= n ==> n - 57 <= c;\nloop invariant c <= n ==> n - 58 <= c;\nloop invariant c <= n ==> n - 59 <= c;\nloop invariant c <= n ==> n - 60 <= c;\nloop invariant c <= n ==> n - 61 <= c;\nloop invariant c <= n ==> n - 62 <= c;\nloop invariant c <= n ==> n - 63 <= c;\nloop invariant c <= n ==> n - 64 <= c;\nloop invariant c <= n ==> n - 65 <= c;\nloop invariant c <= n ==> n - 66 <= c;\nloop invariant c <= n ==> n - 67 <= c;\nloop invariant c <= n ==> n - 68 <= c;\nloop invariant c <= n ==> n - 69 <= c;\nloop invariant c <= n ==> n - 70 <= c;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n; loop invariant c == n ==> unknown() == false;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c <= n;\nloop invariant c == n ==> c == 1;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c == 1 ==> c <= n;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant if (c <= n) ==> (c <= n - 1);\nloop invariant if (c <= n - 1) ==> (c <= n);\nloop invariant if (c <= n) ==> (c >= 0);\nloop invariant if (c <= n - 1) ==> (c >= 0);\nloop invariant if (c <= n) ==> (c >= 1);\nloop invariant if (c <= n - 1) ==> (c >= 1);\nloop invariant if (c <= n) ==> (c <= n + 1);\nloop invariant if (c <= n - 1) ==> (c <= n + 1);\nloop invariant if (c <= n) ==> (c >= n - 1);\nloop invariant if (c <= n - 1) ==> (c >= n - 1);\nloop invariant if (c <= n) ==> (c <= n + 2);\nloop invariant if (c <= n - 1) ==> (c <= n + 2);\nloop invariant if (c <= n) ==> (c >= n - 2);\nloop invariant if (c <= n - 1) ==> (c >= n - 2);\nloop invariant if (c <= n) ==> (c <= n + 3);\nloop invariant if (c <= n - 1) ==> (c <= n + 3);\nloop invariant if (c <= n) ==> (c >= n - 3);\nloop invariant if (c <= n - 1) ==> (c >= n - 3);\nloop invariant if (c <= n) ==> (c <= n + 4);\nloop invariant if (c <= n - 1) ==> (c <= n + 4);\nloop invariant if (c <= n) ==> (c >= n - 4);\nloop invariant if (c <= n - 1) ==> (c >= n - 4);\nloop invariant if (c <= n) ==> (c <= n + 5);\nloop invariant if (c <= n - 1) ==> (c <= n + 5);\nloop invariant if (c <= n) ==> (c >= n - 5);\nloop invariant if (c <= n - 1) ==> (c >= n - 5);\nloop invariant if (c <= n) ==> (c <= n + 6);\nloop invariant if (c <= n - 1) ==> (c <= n + 6);\nloop invariant if (c <= n) ==> (c >= n - 6);\nloop invariant if (c <= n - 1) ==> (c >= n - 6);\nloop invariant if (c <= n) ==> (c <= n + 7);\nloop invariant if (c <= n - 1) ==> (c <= n + 7);\nloop invariant if (c <= n) ==> (c >= n - 7);\nloop invariant if (c <= n - 1) ==> (c >= n - 7);\nloop invariant if (c <= n) ==> (c <= n + 8);\nloop invariant if (c <= n - 1) ==> (c <= n + 8);\nloop invariant if (c <= n) ==> (c >= n - 8);\nloop invariant if (c <= n - 1) ==> (c >= n - 8);\nloop invariant if (c <= n) ==> (c <= n + 9);\nloop invariant if (c <= n - 1) ==> (c <= n + 9);\nloop invariant if (c <= n) ==> (c >= n - 9);\nloop invariant if (c <= n - 1) ==> (c >= n - 9);\nloop invariant if (c <= n) ==> (c <= n + 10);\nloop invariant if (c <= n - 1) ==> (c <= n + 10);\nloop invariant if (c <= n) ==> (c >= n - 10);\nloop invariant if (c <= n - 1) ==> (c >= n - 10);\nloop invariant if (c <= n) ==> (c <= n + 11);\nloop invariant if (c <= n - 1) ==> (c <= n + 11);\nloop invariant if (c <= n) ==> (c >= n - 11);\nloop invariant if (c <= n - 1) ==> (c >= n - 11);\nloop invariant if (c <= n) ==> (c <= n + 12);\nloop invariant if (c <= n - 1) ==> (c <= n + 12);\nloop invariant if (c <= n) ==> (c >= n - 12);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c == n ==> c == (1 + c - 1);\nloop invariant c <= n ==> c <= (1 + c - 1);\nloop invariant c <= n ==> n >= c;\nloop invariant c <= n ==> c <= n;\nloop invariant c >= 1 ==> c >= (1 + c - 1);\nloop invariant c >= 1 ==> c >= 1;\nloop invariant c == n ==> c == 1;\nloop invariant c == n ==> c == n;\nloop invariant c == 1 ==> c == 1;\n*/\n```",
            "```\n/*@\n\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n + 1;\nloop invariant c <= n ==> unknown() == 0;\nloop invariant unknown() == 1 ==> c < n;\n*/\n```",
            "```\n/*@\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 < c;\nloop invariant c <= n;\nloop invariant n > 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> (c < n ==> c != n));\nloop invariant (unknown() ==> (c == n ==> c == n));\nloop invariant (unknown() ==> (c < n ==> c + 1 <= n));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= 0));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 == c + 1));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c + 1));\nloop invariant (unknown() ==> (c < n ==> c == c));\nloop invariant (unknown() ==> (c < n ==> c <= c));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 == c + 1));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c + 1));\nloop invariant (unknown() ==> (c < n ==> c == c));\nloop invariant (unknown() ==> (c < n ==> c <= c));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 == c + 1));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c + 1));\nloop invariant (unknown() ==> (c < n ==> c == c));\nloop invariant (unknown() ==> (c < n ==> c <= c));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 == c + 1));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c + 1));\nloop invariant (unknown() ==> (c < n ==> c == c));\nloop invariant (unknown() ==> (c < n ==> c <= c));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 == c + 1));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c + 1));\nloop invariant (unknown() ==> (c < n ==> c == c));\nloop invariant (unknown() ==> (c < n ==> c <= c));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 == c + 1));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c + 1));\nloop invariant (unknown() ==> (c < n ==> c == c));\nloop invariant (unknown() ==> (c < n ==> c <= c));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 == c + 1));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c + 1));\nloop invariant (unknown() ==> (c < n ==> c == c));\nloop invariant (unknown() ==> (c < n ==> c <= c));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c <= n ==> c == n => c <= n;\nloop invariant c <= n ==> c != n => c <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c == n) ==> (c <= n);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 71,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c <= n ==> n <= c;\nloop invariant c <= n ==> n - 1 <= c;\nloop invariant c <= n ==> n - 2 <= c;\nloop invariant c <= n ==> n - 3 <= c;\nloop invariant c <= n ==> n - 4 <= c;\nloop invariant c <= n ==> n - 5 <= c;\nloop invariant c <= n ==> n - 6 <= c;\nloop invariant c <= n ==> n - 7 <= c;\nloop invariant c <= n ==> n - 8 <= c;\nloop invariant c <= n ==> n - 9 <= c;\nloop invariant c <= n ==> n - 10 <= c;\nloop invariant c <= n ==> n - 11 <= c;\nloop invariant c <= n ==> n - 12 <= c;\nloop invariant c <= n ==> n - 13 <= c;\nloop invariant c <= n ==> n - 14 <= c;\nloop invariant c <= n ==> n - 15 <= c;\nloop invariant c <= n ==> n - 16 <= c;\nloop invariant c <= n ==> n - 17 <= c;\nloop invariant c <= n ==> n - 18 <= c;\nloop invariant c <= n ==> n - 19 <= c;\nloop invariant c <= n ==> n - 20 <= c;\nloop invariant c <= n ==> n - 21 <= c;\nloop invariant c <= n ==> n - 22 <= c;\nloop invariant c <= n ==> n - 23 <= c;\nloop invariant c <= n ==> n - 24 <= c;\nloop invariant c <= n ==> n - 25 <= c;\nloop invariant c <= n ==> n - 26 <= c;\nloop invariant c <= n ==> n - 27 <= c;\nloop invariant c <= n ==> n - 28 <= c;\nloop invariant c <= n ==> n - 29 <= c;\nloop invariant c <= n ==> n - 30 <= c;\nloop invariant c <= n ==> n - 31 <= c;\nloop invariant c <= n ==> n - 32 <= c;\nloop invariant c <= n ==> n - 33 <= c;\nloop invariant c <= n ==> n - 34 <= c;\nloop invariant c <= n ==> n - 35 <= c;\nloop invariant c <= n ==> n - 36 <= c;\nloop invariant c <= n ==> n - 37 <= c;\nloop invariant c <= n ==> n - 38 <= c;\nloop invariant c <= n ==> n - 39 <= c;\nloop invariant c <= n ==> n - 40 <= c;\nloop invariant c <= n ==> n - 41 <= c;\nloop invariant c <= n ==> n - 42 <= c;\nloop invariant c <= n ==> n - 43 <= c;\nloop invariant c <= n ==> n - 44 <= c;\nloop invariant c <= n ==> n - 45 <= c;\nloop invariant c <= n ==> n - 46 <= c;\nloop invariant c <= n ==> n - 47 <= c;\nloop invariant c <= n ==> n - 48 <= c;\nloop invariant c <= n ==> n - 49 <= c;\nloop invariant c <= n ==> n - 50 <= c;\nloop invariant c <= n ==> n - 51 <= c;\nloop invariant c <= n ==> n - 52 <= c;\nloop invariant c <= n ==> n - 53 <= c;\nloop invariant c <= n ==> n - 54 <= c;\nloop invariant c <= n ==> n - 55 <= c;\nloop invariant c <= n ==> n - 56 <= c;\nloop invariant c <= n ==> n - 57 <= c;\nloop invariant c <= n ==> n - 58 <= c;\nloop invariant c <= n ==> n - 59 <= c;\nloop invariant c <= n ==> n - 60 <= c;\nloop invariant c <= n ==> n - 61 <= c;\nloop invariant c <= n ==> n - 62 <= c;\nloop invariant c <= n ==> n - 63 <= c;\nloop invariant c <= n ==> n - 64 <= c;\nloop invariant c <= n ==> n - 65 <= c;\nloop invariant c <= n ==> n - 66 <= c;\nloop invariant c <= n ==> n - 67 <= c;\nloop invariant c <= n ==> n - 68 <= c;\nloop invariant c <= n ==> n - 69 <= c;\nloop invariant c <= n ==> n - 70 <= c;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n    int n;\n    int c = 0;\n    assume (n > 0);\n\n    /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n        if(c == n) {\n            c = 1;\n        }\n        else {\n            c = c + 1;\n        }\n    }\n\n    if(c == n) {\n        \n        {;\n//@ assert( c <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n; loop invariant c == n ==> unknown() == false;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n    int n;\n    int c = 0;\n    assume (n > 0);\n\n    /*@\n\n*/\nwhile (unknown()) {\n        if(c == n) {\n            c = 1;\n        }\n        else {\n            c = c + 1;\n        }\n    }\n\n    if(c == n) {\n        \n        {;\n//@ assert( c <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c <= n;\nloop invariant c == n ==> c == 1;\nloop invariant c <= n ==> c <= n;\nloop invariant c <= n ==> c == 1 ==> c <= n;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n    int n;\n    int c = 0;\n    assume (n > 0);\n\n    /*@\n\n\n\nloop invariant i4: c <= n ==> c <= n;\nloop invariant i5: c <= n ==> c == 1 ==> c <= n;\nloop invariant i6: c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i7: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i8: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i9: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i10: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i11: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i12: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i13: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i14: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i15: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i16: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i17: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i18: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i19: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i20: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i21: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i22: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\n*/\nwhile (unknown()) {\n        if(c == n) {\n            c = 1;\n        }\n        else {\n            c = c + 1;\n        }\n    }\n\n    if(c == n) {\n        \n        {;\n//@ assert( c <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 54,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant if (c <= n) ==> (c <= n - 1);\nloop invariant if (c <= n - 1) ==> (c <= n);\nloop invariant if (c <= n) ==> (c >= 0);\nloop invariant if (c <= n - 1) ==> (c >= 0);\nloop invariant if (c <= n) ==> (c >= 1);\nloop invariant if (c <= n - 1) ==> (c >= 1);\nloop invariant if (c <= n) ==> (c <= n + 1);\nloop invariant if (c <= n - 1) ==> (c <= n + 1);\nloop invariant if (c <= n) ==> (c >= n - 1);\nloop invariant if (c <= n - 1) ==> (c >= n - 1);\nloop invariant if (c <= n) ==> (c <= n + 2);\nloop invariant if (c <= n - 1) ==> (c <= n + 2);\nloop invariant if (c <= n) ==> (c >= n - 2);\nloop invariant if (c <= n - 1) ==> (c >= n - 2);\nloop invariant if (c <= n) ==> (c <= n + 3);\nloop invariant if (c <= n - 1) ==> (c <= n + 3);\nloop invariant if (c <= n) ==> (c >= n - 3);\nloop invariant if (c <= n - 1) ==> (c >= n - 3);\nloop invariant if (c <= n) ==> (c <= n + 4);\nloop invariant if (c <= n - 1) ==> (c <= n + 4);\nloop invariant if (c <= n) ==> (c >= n - 4);\nloop invariant if (c <= n - 1) ==> (c >= n - 4);\nloop invariant if (c <= n) ==> (c <= n + 5);\nloop invariant if (c <= n - 1) ==> (c <= n + 5);\nloop invariant if (c <= n) ==> (c >= n - 5);\nloop invariant if (c <= n - 1) ==> (c >= n - 5);\nloop invariant if (c <= n) ==> (c <= n + 6);\nloop invariant if (c <= n - 1) ==> (c <= n + 6);\nloop invariant if (c <= n) ==> (c >= n - 6);\nloop invariant if (c <= n - 1) ==> (c >= n - 6);\nloop invariant if (c <= n) ==> (c <= n + 7);\nloop invariant if (c <= n - 1) ==> (c <= n + 7);\nloop invariant if (c <= n) ==> (c >= n - 7);\nloop invariant if (c <= n - 1) ==> (c >= n - 7);\nloop invariant if (c <= n) ==> (c <= n + 8);\nloop invariant if (c <= n - 1) ==> (c <= n + 8);\nloop invariant if (c <= n) ==> (c >= n - 8);\nloop invariant if (c <= n - 1) ==> (c >= n - 8);\nloop invariant if (c <= n) ==> (c <= n + 9);\nloop invariant if (c <= n - 1) ==> (c <= n + 9);\nloop invariant if (c <= n) ==> (c >= n - 9);\nloop invariant if (c <= n - 1) ==> (c >= n - 9);\nloop invariant if (c <= n) ==> (c <= n + 10);\nloop invariant if (c <= n - 1) ==> (c <= n + 10);\nloop invariant if (c <= n) ==> (c >= n - 10);\nloop invariant if (c <= n - 1) ==> (c >= n - 10);\nloop invariant if (c <= n) ==> (c <= n + 11);\nloop invariant if (c <= n - 1) ==> (c <= n + 11);\nloop invariant if (c <= n) ==> (c >= n - 11);\nloop invariant if (c <= n - 1) ==> (c >= n - 11);\nloop invariant if (c <= n) ==> (c <= n + 12);\nloop invariant if (c <= n - 1) ==> (c <= n + 12);\nloop invariant if (c <= n) ==> (c >= n - 12);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n    int n;\n    int c = 0;\n    assume (n > 0);\n\n    /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n        if(c == n) {\n            c = 1;\n        }\n        else {\n            c = c + 1;\n        }\n    }\n\n    if(c == n) {\n        \n        {;\n//@ assert( c <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n    int n;\n    int c = 0;\n    assume (n > 0);\n\n    /*@\n\n\n*/\nwhile (unknown()) {\n        if(c == n) {\n            c = 1;\n        }\n        else {\n            c = c + 1;\n        }\n    }\n\n    if(c == n) {\n        \n        {;\n//@ assert( c <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\nloop invariant (c == n) ==> (c <= n);\nloop invariant (c < n) ==> (c <= n);\nloop invariant (c == n) ==> (c == n);\nloop invariant (c < n) ==> (c == n);\nloop invariant (c < n) ==> (c < n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n    int n;\n    int c = 0;\n    assume (n > 0);\n\n    /*@\n\nloop invariant i2: (c == n) ==> (c <= n);\nloop invariant i3: (c < n) ==> (c < n);\nloop invariant i4: (c < n) ==> (c <= n);\nloop invariant i5: (c == n) ==> (c == n);\n\n*/\nwhile (unknown()) {\n        if(c == n) {\n            c = 1;\n        }\n        else {\n            c = c + 1;\n        }\n    }\n\n    if(c == n) {\n        \n        {;\n//@ assert( c <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c == n ==> c == (1 + c - 1);\nloop invariant c <= n ==> c <= (1 + c - 1);\nloop invariant c <= n ==> n >= c;\nloop invariant c <= n ==> c <= n;\nloop invariant c >= 1 ==> c >= (1 + c - 1);\nloop invariant c >= 1 ==> c >= 1;\nloop invariant c == n ==> c == 1;\nloop invariant c == n ==> c == n;\nloop invariant c == 1 ==> c == 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n    int n;\n    int c = 0;\n    assume (n > 0);\n\n    /*@\n\nloop invariant i2: c == n ==> c == (1 + c - 1);\nloop invariant i3: c <= n ==> c <= (1 + c - 1);\nloop invariant i4: c <= n ==> n >= c;\nloop invariant i5: c <= n ==> c <= n;\nloop invariant i6: c >= 1 ==> c >= (1 + c - 1);\nloop invariant i7: c >= 1 ==> c >= 1;\n\nloop invariant i9: c == n ==> c == n;\nloop invariant i10: c == 1 ==> c == 1;\n*/\nwhile (unknown()) {\n        if(c == n) {\n            c = 1;\n        }\n        else {\n            c = c + 1;\n        }\n    }\n\n    if(c == n) {\n        \n        {;\n//@ assert( c <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\n\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n    int n;\n    int c = 0;\n    assume (n > 0);\n\n    /*@\n\n*/\nwhile (unknown()) {\n        if(c == n) {\n            c = 1;\n        }\n        else {\n            c = c + 1;\n        }\n    }\n\n    if(c == n) {\n        \n        {;\n//@ assert( c <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n + 1;\nloop invariant c <= n ==> unknown() == 0;\nloop invariant unknown() == 1 ==> c < n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n    int n;\n    int c = 0;\n    assume (n > 0);\n\n    /*@\n\n\n\n*/\nwhile (unknown()) {\n        if(c == n) {\n            c = 1;\n        }\n        else {\n            c = c + 1;\n        }\n    }\n\n    if(c == n) {\n        \n        {;\n//@ assert( c <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c <= n;\nloop invariant c >= 0;\nloop invariant c <= n;\nloop invariant c >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n    int n;\n    int c = 0;\n    assume (n > 0);\n\n    /*@\nloop invariant i1: c >= 0;\n\n*/\nwhile (unknown()) {\n        if(c == n) {\n            c = 1;\n        }\n        else {\n            c = c + 1;\n        }\n    }\n\n    if(c == n) {\n        \n        {;\n//@ assert( c <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n    int n;\n    int c = 0;\n    assume (n > 0);\n\n    /*@\n\n*/\nwhile (unknown()) {\n        if(c == n) {\n            c = 1;\n        }\n        else {\n            c = c + 1;\n        }\n    }\n\n    if(c == n) {\n        \n        {;\n//@ assert( c <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 < c;\nloop invariant c <= n;\nloop invariant n > 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n    int n;\n    int c = 0;\n    assume (n > 0);\n\n    /*@\n\nloop invariant i2: c <= n;\nloop invariant i3: n > 0;\n*/\nwhile (unknown()) {\n        if(c == n) {\n            c = 1;\n        }\n        else {\n            c = c + 1;\n        }\n    }\n\n    if(c == n) {\n        \n        {;\n//@ assert( c <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 13,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (unknown() ==> c <= n);\nloop invariant (unknown() ==> c >= 0);\nloop invariant (unknown() ==> (c < n ==> c != n));\nloop invariant (unknown() ==> (c == n ==> c == n));\nloop invariant (unknown() ==> (c < n ==> c + 1 <= n));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= 0));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 == c + 1));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c + 1));\nloop invariant (unknown() ==> (c < n ==> c == c));\nloop invariant (unknown() ==> (c < n ==> c <= c));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 == c + 1));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c + 1));\nloop invariant (unknown() ==> (c < n ==> c == c));\nloop invariant (unknown() ==> (c < n ==> c <= c));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 == c + 1));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c + 1));\nloop invariant (unknown() ==> (c < n ==> c == c));\nloop invariant (unknown() ==> (c < n ==> c <= c));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 == c + 1));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c + 1));\nloop invariant (unknown() ==> (c < n ==> c == c));\nloop invariant (unknown() ==> (c < n ==> c <= c));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 == c + 1));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c + 1));\nloop invariant (unknown() ==> (c < n ==> c == c));\nloop invariant (unknown() ==> (c < n ==> c <= c));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 == c + 1));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c + 1));\nloop invariant (unknown() ==> (c < n ==> c == c));\nloop invariant (unknown() ==> (c < n ==> c <= c));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 == c + 1));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c + 1));\nloop invariant (unknown() ==> (c < n ==> c == c));\nloop invariant (unknown() ==> (c < n ==> c <= c));\nloop invariant (unknown() ==> (c < n ==> c + 1 >= c));\nloop invariant (unknown() ==> (c < n ==> c <= c + 1));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n    int n;\n    int c = 0;\n    assume (n > 0);\n\n    /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n        if(c == n) {\n            c = 1;\n        }\n        else {\n            c = c + 1;\n        }\n    }\n\n    if(c == n) {\n        \n        {;\n//@ assert( c <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c <= n ==> c == n => c <= n;\nloop invariant c <= n ==> c != n => c <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n    int n;\n    int c = 0;\n    assume (n > 0);\n\n    /*@\n\n\n\n*/\nwhile (unknown()) {\n        if(c == n) {\n            c = 1;\n        }\n        else {\n            c = c + 1;\n        }\n    }\n\n    if(c == n) {\n        \n        {;\n//@ assert( c <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c == n) ==> (c <= n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n    int n;\n    int c = 0;\n    assume (n > 0);\n\n    /*@\n\nloop invariant i2: (c == n) ==> (c <= n);\n*/\nwhile (unknown()) {\n        if(c == n) {\n            c = 1;\n        }\n        else {\n            c = c + 1;\n        }\n    }\n\n    if(c == n) {\n        \n        {;\n//@ assert( c <= n);\n}\n\n    }\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 87: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n    int n;\n    int c = 0;\n    assume (n > 0);\n\n    /*@\nloop invariant i1: 0 <= c <= n;\nloop invariant i2: c <= n ==> n <= c;\nloop invariant i3: c <= n ==> n - 1 <= c;\nloop invariant i4: c <= n ==> n - 2 <= c;\nloop invariant i5: c <= n ==> n - 3 <= c;\nloop invariant i6: c <= n ==> n - 4 <= c;\nloop invariant i7: c <= n ==> n - 5 <= c;\nloop invariant i8: c <= n ==> n - 6 <= c;\nloop invariant i9: c <= n ==> n - 7 <= c;\nloop invariant i10: c <= n ==> n - 8 <= c;\nloop invariant i11: c <= n ==> n - 9 <= c;\nloop invariant i12: c <= n ==> n - 10 <= c;\nloop invariant i13: c <= n ==> n - 11 <= c;\nloop invariant i14: c <= n ==> n - 12 <= c;\nloop invariant i15: c <= n ==> n - 13 <= c;\nloop invariant i16: c <= n ==> n - 14 <= c;\nloop invariant i17: c <= n ==> n - 15 <= c;\nloop invariant i18: c <= n ==> n - 16 <= c;\nloop invariant i19: c <= n ==> n - 17 <= c;\nloop invariant i20: c <= n ==> n - 18 <= c;\nloop invariant i21: c <= n ==> n - 19 <= c;\nloop invariant i22: c <= n ==> n - 20 <= c;\nloop invariant i23: c <= n ==> n - 21 <= c;\nloop invariant i24: c <= n ==> n - 22 <= c;\nloop invariant i25: c <= n ==> n - 23 <= c;\nloop invariant i26: c <= n ==> n - 24 <= c;\nloop invariant i27: c <= n ==> n - 25 <= c;\nloop invariant i28: c <= n ==> n - 26 <= c;\nloop invariant i29: c <= n ==> n - 27 <= c;\nloop invariant i30: c <= n ==> n - 28 <= c;\nloop invariant i31: c <= n ==> n - 29 <= c;\nloop invariant i32: c <= n ==> n - 30 <= c;\nloop invariant i33: c <= n ==> n - 31 <= c;\nloop invariant i34: c <= n ==> n - 32 <= c;\nloop invariant i35: c <= n ==> n - 33 <= c;\nloop invariant i36: c <= n ==> n - 34 <= c;\nloop invariant i37: c <= n ==> n - 35 <= c;\nloop invariant i38: c <= n ==> n - 36 <= c;\nloop invariant i39: c <= n ==> n - 37 <= c;\nloop invariant i40: c <= n ==> n - 38 <= c;\nloop invariant i41: c <= n ==> n - 39 <= c;\nloop invariant i42: c <= n ==> n - 40 <= c;\nloop invariant i43: c <= n ==> n - 41 <= c;\nloop invariant i44: c <= n ==> n - 42 <= c;\nloop invariant i45: c <= n ==> n - 43 <= c;\nloop invariant i46: c <= n ==> n - 44 <= c;\nloop invariant i47: c <= n ==> n - 45 <= c;\nloop invariant i48: c <= n ==> n - 46 <= c;\nloop invariant i49: c <= n ==> n - 47 <= c;\nloop invariant i50: c <= n ==> n - 48 <= c;\nloop invariant i51: c <= n ==> n - 49 <= c;\nloop invariant i52: c <= n ==> n - 50 <= c;\nloop invariant i53: c <= n ==> n - 51 <= c;\nloop invariant i54: c <= n ==> n - 52 <= c;\nloop invariant i55: c <= n ==> n - 53 <= c;\nloop invariant i56: c <= n ==> n - 54 <= c;\nloop invariant i57: c <= n ==> n - 55 <= c;\nloop invariant i58: c <= n ==> n - 56 <= c;\nloop invariant i59: c <= n ==> n - 57 <= c;\nloop invariant i60: c <= n ==> n - 58 <= c;\nloop invariant i61: c <= n ==> n - 59 <= c;\nloop invariant i62: c <= n ==> n - 60 <= c;\nloop invariant i63: c <= n ==> n - 61 <= c;\nloop invariant i64: c <= n ==> n - 62 <= c;\nloop invariant i65: c <= n ==> n - 63 <= c;\nloop invariant i66: c <= n ==> n - 64 <= c;\nloop invariant i67: c <= n ==> n - 65 <= c;\nloop invariant i68: c <= n ==> n - 66 <= c;\nloop invariant i69: c <= n ==> n - 67 <= c;\nloop invariant i70: c <= n ==> n - 68 <= c;\nloop invariant i71: c <= n ==> n - 69 <= c;\nloop invariant i72: c <= n ==> n - 70 <= c;\nloop invariant i73: 0 <= c <= n; loop invariant c == n ==> unknown() == false;\nloop invariant i74: c <= n;\nloop invariant i75: c == n ==> c == 1;\nloop invariant i76: c <= n ==> c <= n;\nloop invariant i77: c <= n ==> c == 1 ==> c <= n;\nloop invariant i78: c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i79: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i80: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i81: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i82: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i83: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i84: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i85: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i86: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i87: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i88: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i89: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i90: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i91: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i92: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i93: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i94: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i95: if (c <= n) ==> (c <= n - 1);\nloop invariant i96: if (c <= n - 1) ==> (c <= n);\nloop invariant i97: if (c <= n) ==> (c >= 0);\nloop invariant i98: if (c <= n - 1) ==> (c >= 0);\nloop invariant i99: if (c <= n) ==> (c >= 1);\nloop invariant i100: if (c <= n - 1) ==> (c >= 1);\nloop invariant i101: if (c <= n) ==> (c <= n + 1);\nloop invariant i102: if (c <= n - 1) ==> (c <= n + 1);\nloop invariant i103: if (c <= n) ==> (c >= n - 1);\nloop invariant i104: if (c <= n - 1) ==> (c >= n - 1);\nloop invariant i105: if (c <= n) ==> (c <= n + 2);\nloop invariant i106: if (c <= n - 1) ==> (c <= n + 2);\nloop invariant i107: if (c <= n) ==> (c >= n - 2);\nloop invariant i108: if (c <= n - 1) ==> (c >= n - 2);\nloop invariant i109: if (c <= n) ==> (c <= n + 3);\nloop invariant i110: if (c <= n - 1) ==> (c <= n + 3);\nloop invariant i111: if (c <= n) ==> (c >= n - 3);\nloop invariant i112: if (c <= n - 1) ==> (c >= n - 3);\nloop invariant i113: if (c <= n) ==> (c <= n + 4);\nloop invariant i114: if (c <= n - 1) ==> (c <= n + 4);\nloop invariant i115: if (c <= n) ==> (c >= n - 4);\nloop invariant i116: if (c <= n - 1) ==> (c >= n - 4);\nloop invariant i117: if (c <= n) ==> (c <= n + 5);\nloop invariant i118: if (c <= n - 1) ==> (c <= n + 5);\nloop invariant i119: if (c <= n) ==> (c >= n - 5);\nloop invariant i120: if (c <= n - 1) ==> (c >= n - 5);\nloop invariant i121: if (c <= n) ==> (c <= n + 6);\nloop invariant i122: if (c <= n - 1) ==> (c <= n + 6);\nloop invariant i123: if (c <= n) ==> (c >= n - 6);\nloop invariant i124: if (c <= n - 1) ==> (c >= n - 6);\nloop invariant i125: if (c <= n) ==> (c <= n + 7);\nloop invariant i126: if (c <= n - 1) ==> (c <= n + 7);\nloop invariant i127: if (c <= n) ==> (c >= n - 7);\nloop invariant i128: if (c <= n - 1) ==> (c >= n - 7);\nloop invariant i129: if (c <= n) ==> (c <= n + 8);\nloop invariant i130: if (c <= n - 1) ==> (c <= n + 8);\nloop invariant i131: if (c <= n) ==> (c >= n - 8);\nloop invariant i132: if (c <= n - 1) ==> (c >= n - 8);\nloop invariant i133: if (c <= n) ==> (c <= n + 9);\nloop invariant i134: if (c <= n - 1) ==> (c <= n + 9);\nloop invariant i135: if (c <= n) ==> (c >= n - 9);\nloop invariant i136: if (c <= n - 1) ==> (c >= n - 9);\nloop invariant i137: if (c <= n) ==> (c <= n + 10);\nloop invariant i138: if (c <= n - 1) ==> (c <= n + 10);\nloop invariant i139: if (c <= n) ==> (c >= n - 10);\nloop invariant i140: if (c <= n - 1) ==> (c >= n - 10);\nloop invariant i141: if (c <= n) ==> (c <= n + 11);\nloop invariant i142: if (c <= n - 1) ==> (c <= n + 11);\nloop invariant i143: if (c <= n) ==> (c >= n - 11);\nloop invariant i144: if (c <= n - 1) ==> (c >= n - 11);\nloop invariant i145: if (c <= n) ==> (c <= n + 12);\nloop invariant i146: if (c <= n - 1) ==> (c <= n + 12);\nloop invariant i147: if (c <= n) ==> (c >= n - 12);\nloop invariant i148: (c == n) ==> (c <= n);\nloop invariant i149: (c < n) ==> (c < n);\nloop invariant i150: (c < n) ==> (c <= n);\nloop invariant i151: (c == n) ==> (c == n);\nloop invariant i152: (c < n) ==> (c == n);\nloop invariant i153: c == n ==> c == (1 + c - 1);\nloop invariant i154: c <= n ==> c <= (1 + c - 1);\nloop invariant i155: c <= n ==> n >= c;\nloop invariant i156: c >= 1 ==> c >= (1 + c - 1);\nloop invariant i157: c >= 1 ==> c >= 1;\nloop invariant i158: c == n ==> c == n;\nloop invariant i159: c == 1 ==> c == 1;\nloop invariant i160: 0 <= c <= n + 1;\nloop invariant i161: c <= n ==> unknown() == 0;\nloop invariant i162: unknown() == 1 ==> c < n;\nloop invariant i163: c >= 0;\nloop invariant i164: 0 < c;\nloop invariant i165: n > 0;\nloop invariant i166: (unknown() ==> c <= n);\nloop invariant i167: (unknown() ==> c >= 0);\nloop invariant i168: (unknown() ==> (c < n ==> c != n));\nloop invariant i169: (unknown() ==> (c == n ==> c == n));\nloop invariant i170: (unknown() ==> (c < n ==> c + 1 <= n));\nloop invariant i171: (unknown() ==> (c < n ==> c + 1 >= 0));\nloop invariant i172: (unknown() ==> (c < n ==> c <= c + 1));\nloop invariant i173: (unknown() ==> (c < n ==> c + 1 == c + 1));\nloop invariant i174: (unknown() ==> (c < n ==> c + 1 >= c + 1));\nloop invariant i175: (unknown() ==> (c < n ==> c == c));\nloop invariant i176: (unknown() ==> (c < n ==> c <= c));\nloop invariant i177: (unknown() ==> (c < n ==> c + 1 >= c));\nloop invariant i178: c <= n ==> c == n => c <= n;\nloop invariant i179: c <= n ==> c != n => c <= n;\n*/\nwhile (unknown()) {\n        if(c == n) {\n            c = 1;\n        }\n        else {\n            c = c + 1;\n        }\n    }\n\n    if(c == n) {\n        \n        {;\n//@ assert( c <= n);\n}\n\n    }\n}",
        "combined_annotation_num_solver_calls": 142,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n    int n;\n    int c = 0;\n    assume (n > 0);\n\n    /*@\nloop invariant i1: 0 <= c <= n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i74: c <= n;\n\nloop invariant i76: c <= n ==> c <= n;\nloop invariant i77: c <= n ==> c == 1 ==> c <= n;\nloop invariant i78: c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i79: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i80: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i81: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i82: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i83: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i84: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i85: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i86: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i87: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i88: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i89: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i90: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i91: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i92: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\nloop invariant i93: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n;\nloop invariant i94: c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1 ==> c <= n ==> c == 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i148: (c == n) ==> (c <= n);\nloop invariant i149: (c < n) ==> (c < n);\nloop invariant i150: (c < n) ==> (c <= n);\nloop invariant i151: (c == n) ==> (c == n);\n\nloop invariant i153: c == n ==> c == (1 + c - 1);\nloop invariant i154: c <= n ==> c <= (1 + c - 1);\nloop invariant i155: c <= n ==> n >= c;\nloop invariant i156: c >= 1 ==> c >= (1 + c - 1);\nloop invariant i157: c >= 1 ==> c >= 1;\nloop invariant i158: c == n ==> c == n;\nloop invariant i159: c == 1 ==> c == 1;\nloop invariant i160: 0 <= c <= n + 1;\n\n\nloop invariant i163: c >= 0;\n\nloop invariant i165: n > 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n        if(c == n) {\n            c = 1;\n        }\n        else {\n            c = c + 1;\n        }\n    }\n\n    if(c == n) {\n        \n        {;\n//@ assert( c <= n);\n}\n\n    }\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c"
        ],
        "skipped": [],
        "total": 30,
        "success_count": 23,
        "failure_count": 7,
        "success_rate": 0.7666666666666667
    }
}