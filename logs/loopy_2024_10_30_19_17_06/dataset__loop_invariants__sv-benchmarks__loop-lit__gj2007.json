{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 0;\n    int y = 50;\n    while(x < 100) {\n\tif (x < 50) {\n\t    x = x + 1;\n\t} else {\n\t    x = x + 1;\n\t    y = y + 1;\n\t}\n    }\n    {;\n//@ assert(y == 100);\n}\n\n    return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 150;\nloop invariant x < y ==> x < 50;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant x <= y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant x <= y;\nloop invariant (x >= 50) ==> (y == 100);\nloop invariant (x < 50) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x == 50) ==> (x == y);\nloop invariant (x == 100) ==> (x == y);\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x > 50) ==> (x == y);\nloop invariant (x == 0) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x > 50) ==> (x == y);\nloop invariant (x == 0) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x > 50) ==> (x == y);\nloop invariant (x == 0) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x > 50) ==> (x == y);\nloop invariant (x == 0) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x > 50) ==> (x == y);\nloop invariant (x == 0) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x > 50) ==> (x == y);\nloop invariant (x == 0) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x > 50) ==> (x == y);\nloop invariant (x == 0) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x > 50) ==> (x == y);\nloop invariant (x == 0) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x > 50) ==> (x == y);\nloop invariant (x == 0) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x > 50) ==> (x == y);\nloop invariant (x == 0) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 50;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x == 0 ==> y == 50;\nloop invariant x >= 50 ==> x <= 100;\nloop invariant y >= 50 ==> y <= 100;\nloop invariant x >= 50 ==> y == x;\nloop invariant x < 50 ==> y == 50;\nloop invariant x < 50 ==> y == 50;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant x >= (y - 1);\nloop invariant y >= x;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100;\nloop invariant x < 100;\nloop invariant x >= (y == 100) ? 99 : 49;\nloop invariant x < 50 ==> y == 100 ==> x == 49;\nloop invariant (y == 100) ==> x == 99;\nloop invariant (x >= 50) ==> y < 100 ==> x <= 99;\nloop invariant (x >= 50) ==> y < 100 ==> x >= 50;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant y == 100 ==> x == 100;\nloop invariant !(y == 100) ==> x < 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant x + y >= 50;\nloop invariant y >= x;\nloop invariant x <= y;\nloop invariant y - x <= 50;\nloop invariant y - x >= 0;\nloop invariant y - x < 50;\nloop invariant y - x > 0;\nloop invariant y - x <= 50;\nloop invariant y - x >= 1;\nloop invariant y - x < 50;\nloop invariant y - x > 1;\nloop invariant y - x <= 50;\nloop invariant y - x >= 2;\nloop invariant y - x < 50;\nloop invariant y - x > 2;\nloop invariant y - x <= 50;\nloop invariant y - x >= 3;\nloop invariant y - x < 50;\nloop invariant y - x > 3;\nloop invariant y - x <= 50;\nloop invariant y - x >= 4;\nloop invariant y - x < 50;\nloop invariant y - x > 4;\nloop invariant y - x <= 50;\nloop invariant y - x >= 5;\nloop invariant y - x < 50;\nloop invariant y - x > 5;\nloop invariant y - x <= 50;\nloop invariant y - x >= 6;\nloop invariant y - x < 50;\nloop invariant y - x > 6;\nloop invariant y - x <= 50;\nloop invariant y - x >= 7;\nloop invariant y - x < 50;\nloop invariant y - x > 7;\nloop invariant y - x <= 50;\nloop invariant y - x >= 8;\nloop invariant y - x < 50;\nloop invariant y - x > 8;\nloop invariant y - x <= 50;\nloop invariant y - x >= 9;\nloop invariant y - x < 50;\nloop invariant y - x > 9;\nloop invariant y - x <= 50;\nloop invariant y - x >= 10;\nloop invariant y - x < 50;\nloop invariant y - x > 10;\nloop invariant y - x <= 50;\nloop invariant y - x >= 11;\nloop invariant y - x < 50;\nloop invariant y - x > 11;\nloop invariant y - x <= 50;\nloop invariant y - x >= 12;\nloop invariant y - x < 50;\nloop invariant y - x > 12;\nloop invariant y - x <= 50;\nloop invariant y - x >= 13;\nloop invariant y - x < 50;\nloop invariant y - x > 13;\nloop invariant y - x <= 50;\nloop invariant y - x >= 14;\nloop invariant y - x < 50;\nloop invariant y - x > 14;\nloop invariant y - x <= 50;\nloop invariant y - x >= 15;\nloop invariant y - x < 50;\nloop invariant y - x > 15;\nloop invariant y - x <= 50;\nloop invariant y - x >= 16;\nloop invariant y - x < 50;\nloop invariant y - x > 16;\nloop invariant y - x <= 50;\nloop invariant y - x >= 17;\nloop invariant y - x < 50;\nloop invariant y - x > 17;\nloop invariant y - x <= 50;\nloop invariant y - x >= 18;\nloop invariant y - x < 50;\nloop invariant y - x > 18;\nloop invariant y - x <= 50;\nloop invariant y - x >= 19;\nloop invariant y - x < 50;\nloop invariant y - x > 19;\nloop invariant y - x <= 50;\nloop invariant y - x >= 20;\nloop invariant y - x < 50;\nloop invariant y - x > 20;\nloop invariant y - x <= 50;\nloop invariant y - x >= 21;\nloop invariant y - x < 50;\nloop invariant y - x > 21;\nloop invariant y - x <= 50;\nloop invariant y - x >= 22;\nloop invariant y - x < 50;\nloop invariant y - x > 22;\nloop invariant y - x <= 50;\nloop invariant y - x >= 23;\nloop invariant y - x < 50;\nloop invariant y - x > 23;\nloop invariant y - x <= 50;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant x >= y;\nloop invariant x < 100 ==> x < 50;\nloop invariant x >= 50 ==> x >= 50;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant (x < 50 ==> 0 <= y <= 50);\nloop invariant (x >= 50 ==> 50 <= y <= 100);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant y >= 0;\nloop invariant y <= 100;\nloop invariant x + y == (x + 1) + y;\nloop invariant x + y == x + (y + 1);\nloop invariant x + y == x + 1 + y + 1;\nloop invariant x + y == y + x + 1;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant x + y == 100;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant x <= y;\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x >= 50) ==> (x == y);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant (x < 50 ==> x < 100);\nloop invariant (x >= 50 ==> x < 100);\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\n*/\n```",
            "```\n/*@\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 50;\nloop invariant x + y >= 50;\nloop invariant x + y <= 100;\nloop invariant x + y == 100 ==> x == 100;\nloop invariant x + y == 100 ==> y == 100;\nloop invariant x + y == 100 ==> x >= y;\nloop invariant x + y == 100 ==> x <= y;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 150;\nloop invariant x < y ==> x < 50;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 0;\n    int y = 50;\n    /*@\nloop invariant i1: 0 <= x <= 100;\n\n\n*/\nwhile(x < 100) {\n\tif (x < 50) {\n\t    x = x + 1;\n\t} else {\n\t    x = x + 1;\n\t    y = y + 1;\n\t}\n    }\n    {;\n//@ assert(y == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant x <= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 0;\n    int y = 50;\n    /*@\nloop invariant i1: 0 <= x <= 100;\n\n\n*/\nwhile(x < 100) {\n\tif (x < 50) {\n\t    x = x + 1;\n\t} else {\n\t    x = x + 1;\n\t    y = y + 1;\n\t}\n    }\n    {;\n//@ assert(y == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant x <= y;\nloop invariant (x >= 50) ==> (y == 100);\nloop invariant (x < 50) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x == 50) ==> (x == y);\nloop invariant (x == 100) ==> (x == y);\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x > 50) ==> (x == y);\nloop invariant (x == 0) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x > 50) ==> (x == y);\nloop invariant (x == 0) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x > 50) ==> (x == y);\nloop invariant (x == 0) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x > 50) ==> (x == y);\nloop invariant (x == 0) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x > 50) ==> (x == y);\nloop invariant (x == 0) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x > 50) ==> (x == y);\nloop invariant (x == 0) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x > 50) ==> (x == y);\nloop invariant (x == 0) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x > 50) ==> (x == y);\nloop invariant (x == 0) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x > 50) ==> (x == y);\nloop invariant (x == 0) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x > 50) ==> (x == y);\nloop invariant (x == 0) ==> (y == 50);\nloop invariant (x == 50) ==> (y == 50);\nloop invariant (x == 100) ==> (y == 100);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 0;\n    int y = 50;\n    /*@\nloop invariant i1: 0 <= x <= 100;\nloop invariant i2: 50 <= y <= 100;\nloop invariant i3: x <= y;\n\nloop invariant i5: (x < 50) ==> (y == 50);\nloop invariant i6: (x == 50) ==> (y == 50);\nloop invariant i7: (x == 100) ==> (y == 100);\nloop invariant i8: (x == 50) ==> (x == y);\nloop invariant i9: (x == 100) ==> (x == y);\n\nloop invariant i11: (x > 50) ==> (x == y);\nloop invariant i12: (x == 0) ==> (y == 50);\n*/\nwhile(x < 100) {\n\tif (x < 50) {\n\t    x = x + 1;\n\t} else {\n\t    x = x + 1;\n\t    y = y + 1;\n\t}\n    }\n    {;\n//@ assert(y == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 50;\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x == 0 ==> y == 50;\nloop invariant x >= 50 ==> x <= 100;\nloop invariant y >= 50 ==> y <= 100;\nloop invariant x >= 50 ==> y == x;\nloop invariant x < 50 ==> y == 50;\nloop invariant x < 50 ==> y == 50;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 0;\n    int y = 50;\n    /*@\nloop invariant i1: x >= 0;\nloop invariant i2: y >= 50;\nloop invariant i3: x <= 100;\nloop invariant i4: y <= 100;\nloop invariant i5: x == 0 ==> y == 50;\nloop invariant i6: x >= 50 ==> x <= 100;\nloop invariant i7: y >= 50 ==> y <= 100;\nloop invariant i8: x >= 50 ==> y == x;\nloop invariant i9: x < 50 ==> y == 50;\n*/\nwhile(x < 100) {\n\tif (x < 50) {\n\t    x = x + 1;\n\t} else {\n\t    x = x + 1;\n\t    y = y + 1;\n\t}\n    }\n    {;\n//@ assert(y == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant x >= (y - 1);\nloop invariant y >= x;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 0;\n    int y = 50;\n    /*@\nloop invariant i1: 0 <= x <= 100;\n\n\n\n*/\nwhile(x < 100) {\n\tif (x < 50) {\n\t    x = x + 1;\n\t} else {\n\t    x = x + 1;\n\t    y = y + 1;\n\t}\n    }\n    {;\n//@ assert(y == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100;\nloop invariant x < 100;\nloop invariant x >= (y == 100) ? 99 : 49;\nloop invariant x < 50 ==> y == 100 ==> x == 49;\nloop invariant (y == 100) ==> x == 99;\nloop invariant (x >= 50) ==> y < 100 ==> x <= 99;\nloop invariant (x >= 50) ==> y < 100 ==> x >= 50;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant (x >= 50) ==> y < 100 ==> x < 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 0;\n    int y = 50;\n    /*@\n\n\n\nloop invariant i4: x < 50 ==> y == 100 ==> x == 49;\n\n\nloop invariant i7: (x >= 50) ==> y < 100 ==> x >= 50;\n\n*/\nwhile(x < 100) {\n\tif (x < 50) {\n\t    x = x + 1;\n\t} else {\n\t    x = x + 1;\n\t    y = y + 1;\n\t}\n    }\n    {;\n//@ assert(y == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant y == 100 ==> x == 100;\nloop invariant !(y == 100) ==> x < 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 0;\n    int y = 50;\n    /*@\nloop invariant i1: 0 <= x <= 100;\n\n\n\n*/\nwhile(x < 100) {\n\tif (x < 50) {\n\t    x = x + 1;\n\t} else {\n\t    x = x + 1;\n\t    y = y + 1;\n\t}\n    }\n    {;\n//@ assert(y == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 52,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant x + y >= 50;\nloop invariant y >= x;\nloop invariant x <= y;\nloop invariant y - x <= 50;\nloop invariant y - x >= 0;\nloop invariant y - x < 50;\nloop invariant y - x > 0;\nloop invariant y - x <= 50;\nloop invariant y - x >= 1;\nloop invariant y - x < 50;\nloop invariant y - x > 1;\nloop invariant y - x <= 50;\nloop invariant y - x >= 2;\nloop invariant y - x < 50;\nloop invariant y - x > 2;\nloop invariant y - x <= 50;\nloop invariant y - x >= 3;\nloop invariant y - x < 50;\nloop invariant y - x > 3;\nloop invariant y - x <= 50;\nloop invariant y - x >= 4;\nloop invariant y - x < 50;\nloop invariant y - x > 4;\nloop invariant y - x <= 50;\nloop invariant y - x >= 5;\nloop invariant y - x < 50;\nloop invariant y - x > 5;\nloop invariant y - x <= 50;\nloop invariant y - x >= 6;\nloop invariant y - x < 50;\nloop invariant y - x > 6;\nloop invariant y - x <= 50;\nloop invariant y - x >= 7;\nloop invariant y - x < 50;\nloop invariant y - x > 7;\nloop invariant y - x <= 50;\nloop invariant y - x >= 8;\nloop invariant y - x < 50;\nloop invariant y - x > 8;\nloop invariant y - x <= 50;\nloop invariant y - x >= 9;\nloop invariant y - x < 50;\nloop invariant y - x > 9;\nloop invariant y - x <= 50;\nloop invariant y - x >= 10;\nloop invariant y - x < 50;\nloop invariant y - x > 10;\nloop invariant y - x <= 50;\nloop invariant y - x >= 11;\nloop invariant y - x < 50;\nloop invariant y - x > 11;\nloop invariant y - x <= 50;\nloop invariant y - x >= 12;\nloop invariant y - x < 50;\nloop invariant y - x > 12;\nloop invariant y - x <= 50;\nloop invariant y - x >= 13;\nloop invariant y - x < 50;\nloop invariant y - x > 13;\nloop invariant y - x <= 50;\nloop invariant y - x >= 14;\nloop invariant y - x < 50;\nloop invariant y - x > 14;\nloop invariant y - x <= 50;\nloop invariant y - x >= 15;\nloop invariant y - x < 50;\nloop invariant y - x > 15;\nloop invariant y - x <= 50;\nloop invariant y - x >= 16;\nloop invariant y - x < 50;\nloop invariant y - x > 16;\nloop invariant y - x <= 50;\nloop invariant y - x >= 17;\nloop invariant y - x < 50;\nloop invariant y - x > 17;\nloop invariant y - x <= 50;\nloop invariant y - x >= 18;\nloop invariant y - x < 50;\nloop invariant y - x > 18;\nloop invariant y - x <= 50;\nloop invariant y - x >= 19;\nloop invariant y - x < 50;\nloop invariant y - x > 19;\nloop invariant y - x <= 50;\nloop invariant y - x >= 20;\nloop invariant y - x < 50;\nloop invariant y - x > 20;\nloop invariant y - x <= 50;\nloop invariant y - x >= 21;\nloop invariant y - x < 50;\nloop invariant y - x > 21;\nloop invariant y - x <= 50;\nloop invariant y - x >= 22;\nloop invariant y - x < 50;\nloop invariant y - x > 22;\nloop invariant y - x <= 50;\nloop invariant y - x >= 23;\nloop invariant y - x < 50;\nloop invariant y - x > 23;\nloop invariant y - x <= 50;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 0;\n    int y = 50;\n    /*@\nloop invariant i1: 0 <= x <= 100;\n\nloop invariant i3: x + y >= 50;\n\n\nloop invariant i6: y - x <= 50;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile(x < 100) {\n\tif (x < 50) {\n\t    x = x + 1;\n\t} else {\n\t    x = x + 1;\n\t    y = y + 1;\n\t}\n    }\n    {;\n//@ assert(y == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant x >= y;\nloop invariant x < 100 ==> x < 50;\nloop invariant x >= 50 ==> x >= 50;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 0;\n    int y = 50;\n    /*@\nloop invariant i1: 0 <= x <= 100;\n\n\n\nloop invariant i5: x >= 50 ==> x >= 50;\n*/\nwhile(x < 100) {\n\tif (x < 50) {\n\t    x = x + 1;\n\t} else {\n\t    x = x + 1;\n\t    y = y + 1;\n\t}\n    }\n    {;\n//@ assert(y == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant (x < 50 ==> 0 <= y <= 50);\nloop invariant (x >= 50 ==> 50 <= y <= 100);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 0;\n    int y = 50;\n    /*@\nloop invariant i1: 0 <= x <= 100;\nloop invariant i2: (x < 50 ==> 0 <= y <= 50);\n\n*/\nwhile(x < 100) {\n\tif (x < 50) {\n\t    x = x + 1;\n\t} else {\n\t    x = x + 1;\n\t    y = y + 1;\n\t}\n    }\n    {;\n//@ assert(y == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 7,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant y >= 0;\nloop invariant y <= 100;\nloop invariant x + y == (x + 1) + y;\nloop invariant x + y == x + (y + 1);\nloop invariant x + y == x + 1 + y + 1;\nloop invariant x + y == y + x + 1;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant x + y == 50 + (y - 49) * (y - 49) / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 0;\n    int y = 50;\n    /*@\nloop invariant i1: 0 <= x <= 100;\nloop invariant i2: y >= 0;\n\n\n\n\n\n\n*/\nwhile(x < 100) {\n\tif (x < 50) {\n\t    x = x + 1;\n\t} else {\n\t    x = x + 1;\n\t    y = y + 1;\n\t}\n    }\n    {;\n//@ assert(y == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant x + y == 100;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 0;\n    int y = 50;\n    /*@\nloop invariant i1: 0 <= x <= 100;\n\n\n*/\nwhile(x < 100) {\n\tif (x < 50) {\n\t    x = x + 1;\n\t} else {\n\t    x = x + 1;\n\t    y = y + 1;\n\t}\n    }\n    {;\n//@ assert(y == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant x <= y;\nloop invariant (x < 50) ==> (x == y - 1);\nloop invariant (x >= 50) ==> (x == y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 0;\n    int y = 50;\n    /*@\nloop invariant i1: 0 <= x <= 100;\n\n\n\n\n*/\nwhile(x < 100) {\n\tif (x < 50) {\n\t    x = x + 1;\n\t} else {\n\t    x = x + 1;\n\t    y = y + 1;\n\t}\n    }\n    {;\n//@ assert(y == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 100;\nloop invariant 50 <= y <= 100;\nloop invariant (x < 50 ==> x < 100);\nloop invariant (x >= 50 ==> x < 100);\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\nloop invariant (x >= 50 ==> (y < 100));\nloop invariant (x < 50 ==> (y == 50));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 0;\n    int y = 50;\n    /*@\nloop invariant i1: 0 <= x <= 100;\n\nloop invariant i3: (x < 50 ==> x < 100);\n\nloop invariant i5: (x < 50 ==> (y == 50));\n\n*/\nwhile(x < 100) {\n\tif (x < 50) {\n\t    x = x + 1;\n\t} else {\n\t    x = x + 1;\n\t    y = y + 1;\n\t}\n    }\n    {;\n//@ assert(y == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant x <= 100;\nloop invariant y <= 100;\nloop invariant x >= 0;\nloop invariant y >= 50;\nloop invariant x + y >= 50;\nloop invariant x + y <= 100;\nloop invariant x + y == 100 ==> x == 100;\nloop invariant x + y == 100 ==> y == 100;\nloop invariant x + y == 100 ==> x >= y;\nloop invariant x + y == 100 ==> x <= y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 0;\n    int y = 50;\n    /*@\nloop invariant i1: x <= 100;\n\nloop invariant i3: x >= 0;\nloop invariant i4: y >= 50;\nloop invariant i5: x + y >= 50;\n\n\n\n\nloop invariant i10: x + y == 100 ==> x <= y;\n*/\nwhile(x < 100) {\n\tif (x < 50) {\n\t    x = x + 1;\n\t} else {\n\t    x = x + 1;\n\t    y = y + 1;\n\t}\n    }\n    {;\n//@ assert(y == 100);\n}\n\n    return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 38: comparison of incompatible types: int and 𝔹. Ignoring loop annotation",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 0;\n    int y = 50;\n    /*@\nloop invariant i1: 0 <= x <= 100;\nloop invariant i2: 50 <= y <= 150;\nloop invariant i3: x < y ==> x < 50;\nloop invariant i4: 50 <= y <= 100;\nloop invariant i5: x <= y;\nloop invariant i6: (x >= 50) ==> (y == 100);\nloop invariant i7: (x < 50) ==> (y == 50);\nloop invariant i8: (x == 50) ==> (y == 50);\nloop invariant i9: (x == 100) ==> (y == 100);\nloop invariant i10: (x == 50) ==> (x == y);\nloop invariant i11: (x == 100) ==> (x == y);\nloop invariant i12: (x < 50) ==> (x == y - 1);\nloop invariant i13: (x > 50) ==> (x == y);\nloop invariant i14: (x == 0) ==> (y == 50);\nloop invariant i15: x >= 0;\nloop invariant i16: y >= 50;\nloop invariant i17: x <= 100;\nloop invariant i18: y <= 100;\nloop invariant i19: x == 0 ==> y == 50;\nloop invariant i20: x >= 50 ==> x <= 100;\nloop invariant i21: y >= 50 ==> y <= 100;\nloop invariant i22: x >= 50 ==> y == x;\nloop invariant i23: x < 50 ==> y == 50;\nloop invariant i24: x >= (y - 1);\nloop invariant i25: y >= x;\nloop invariant i26: 0 <= y <= 100;\nloop invariant i27: x < 100;\nloop invariant i28: x >= (y == 100) ? 99 : 49;\nloop invariant i29: x < 50 ==> y == 100 ==> x == 49;\nloop invariant i30: (y == 100) ==> x == 99;\nloop invariant i31: (x >= 50) ==> y < 100 ==> x <= 99;\nloop invariant i32: (x >= 50) ==> y < 100 ==> x >= 50;\nloop invariant i33: (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant i34: y == 100 ==> x == 100;\nloop invariant i35: !(y == 100) ==> x < 100;\nloop invariant i36: x + y >= 50;\nloop invariant i37: y - x <= 50;\nloop invariant i38: y - x >= 0;\nloop invariant i39: y - x < 50;\nloop invariant i40: y - x > 0;\nloop invariant i41: y - x >= 1;\nloop invariant i42: y - x > 1;\nloop invariant i43: y - x >= 2;\nloop invariant i44: y - x > 2;\nloop invariant i45: y - x >= 3;\nloop invariant i46: y - x > 3;\nloop invariant i47: y - x >= 4;\nloop invariant i48: y - x > 4;\nloop invariant i49: y - x >= 5;\nloop invariant i50: y - x > 5;\nloop invariant i51: y - x >= 6;\nloop invariant i52: y - x > 6;\nloop invariant i53: y - x >= 7;\nloop invariant i54: y - x > 7;\nloop invariant i55: y - x >= 8;\nloop invariant i56: y - x > 8;\nloop invariant i57: y - x >= 9;\nloop invariant i58: y - x > 9;\nloop invariant i59: y - x >= 10;\nloop invariant i60: y - x > 10;\nloop invariant i61: y - x >= 11;\nloop invariant i62: y - x > 11;\nloop invariant i63: y - x >= 12;\nloop invariant i64: y - x > 12;\nloop invariant i65: y - x >= 13;\nloop invariant i66: y - x > 13;\nloop invariant i67: y - x >= 14;\nloop invariant i68: y - x > 14;\nloop invariant i69: y - x >= 15;\nloop invariant i70: y - x > 15;\nloop invariant i71: y - x >= 16;\nloop invariant i72: y - x > 16;\nloop invariant i73: y - x >= 17;\nloop invariant i74: y - x > 17;\nloop invariant i75: y - x >= 18;\nloop invariant i76: y - x > 18;\nloop invariant i77: y - x >= 19;\nloop invariant i78: y - x > 19;\nloop invariant i79: y - x >= 20;\nloop invariant i80: y - x > 20;\nloop invariant i81: y - x >= 21;\nloop invariant i82: y - x > 21;\nloop invariant i83: y - x >= 22;\nloop invariant i84: y - x > 22;\nloop invariant i85: y - x >= 23;\nloop invariant i86: y - x > 23;\nloop invariant i87: x >= y;\nloop invariant i88: x < 100 ==> x < 50;\nloop invariant i89: x >= 50 ==> x >= 50;\nloop invariant i90: (x < 50 ==> 0 <= y <= 50);\nloop invariant i91: (x >= 50 ==> 50 <= y <= 100);\nloop invariant i92: y >= 0;\nloop invariant i93: x + y == (x + 1) + y;\nloop invariant i94: x + y == x + (y + 1);\nloop invariant i95: x + y == x + 1 + y + 1;\nloop invariant i96: x + y == y + x + 1;\nloop invariant i97: x + y == 50 + (y - 49) * (y - 49) / 2;\nloop invariant i98: x + y == 100;\nloop invariant i99: (x >= 50) ==> (x == y);\nloop invariant i100: (x < 50 ==> x < 100);\nloop invariant i101: (x >= 50 ==> x < 100);\nloop invariant i102: (x < 50 ==> (y == 50));\nloop invariant i103: (x >= 50 ==> (y < 100));\nloop invariant i104: x + y <= 100;\nloop invariant i105: x + y == 100 ==> x == 100;\nloop invariant i106: x + y == 100 ==> y == 100;\nloop invariant i107: x + y == 100 ==> x >= y;\nloop invariant i108: x + y == 100 ==> x <= y;\n*/\nwhile(x < 100) {\n\tif (x < 50) {\n\t    x = x + 1;\n\t} else {\n\t    x = x + 1;\n\t    y = y + 1;\n\t}\n    }\n    {;\n//@ assert(y == 100);\n}\n\n    return 0;\n}",
        "combined_annotation_num_solver_calls": 68,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main() {\n    int x = 0;\n    int y = 50;\n    /*@\nloop invariant i1: 0 <= x <= 100;\nloop invariant i2: 50 <= y <= 150;\nloop invariant i3: x < y ==> x < 50;\nloop invariant i4: 50 <= y <= 100;\nloop invariant i5: x <= y;\n\nloop invariant i7: (x < 50) ==> (y == 50);\nloop invariant i8: (x == 50) ==> (y == 50);\nloop invariant i9: (x == 100) ==> (y == 100);\nloop invariant i10: (x == 50) ==> (x == y);\nloop invariant i11: (x == 100) ==> (x == y);\n\nloop invariant i13: (x > 50) ==> (x == y);\nloop invariant i14: (x == 0) ==> (y == 50);\nloop invariant i15: x >= 0;\nloop invariant i16: y >= 50;\nloop invariant i17: x <= 100;\nloop invariant i18: y <= 100;\nloop invariant i19: x == 0 ==> y == 50;\nloop invariant i20: x >= 50 ==> x <= 100;\nloop invariant i21: y >= 50 ==> y <= 100;\nloop invariant i22: x >= 50 ==> y == x;\nloop invariant i23: x < 50 ==> y == 50;\n\nloop invariant i25: y >= x;\nloop invariant i26: 0 <= y <= 100;\n\n\nloop invariant i29: x < 50 ==> y == 100 ==> x == 49;\n\nloop invariant i31: (x >= 50) ==> y < 100 ==> x <= 99;\nloop invariant i32: (x >= 50) ==> y < 100 ==> x >= 50;\nloop invariant i33: (x >= 50) ==> y < 100 ==> x < 100;\nloop invariant i34: y == 100 ==> x == 100;\nloop invariant i35: !(y == 100) ==> x < 100;\nloop invariant i36: x + y >= 50;\nloop invariant i37: y - x <= 50;\nloop invariant i38: y - x >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i89: x >= 50 ==> x >= 50;\nloop invariant i90: (x < 50 ==> 0 <= y <= 50);\nloop invariant i91: (x >= 50 ==> 50 <= y <= 100);\nloop invariant i92: y >= 0;\n\n\n\n\n\n\nloop invariant i99: (x >= 50) ==> (x == y);\nloop invariant i100: (x < 50 ==> x < 100);\n\nloop invariant i102: (x < 50 ==> (y == 50));\n\n\n\n\nloop invariant i107: x + y == 100 ==> x >= y;\nloop invariant i108: x + y == 100 ==> x <= y;\n*/\nwhile(x < 100) {\n\tif (x < 50) {\n\t    x = x + 1;\n\t} else {\n\t    x = x + 1;\n\t    y = y + 1;\n\t}\n    }\n    {;\n//@ assert(y == 100);\n}\n\n    return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c"
        ],
        "skipped": [],
        "total": 110,
        "success_count": 95,
        "failure_count": 15,
        "success_rate": 0.8636363636363636
    }
}