{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark45_disjunctive.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  while (unknown_bool()) {\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant i1; loop invariant i2;\nloop invariant i1 ==> i2;\nloop invariant i1 <= i2;\nloop invariant i1 >= i2;\nloop invariant i1 == i2;\nloop invariant i1 != i2;\nloop invariant i1 && i2;\nloop invariant i1 || i2;\nloop invariant i1 && i2 && i3;\nloop invariant i1 || i2 || i3;\nloop invariant i1 && i2 || i3;\nloop invariant i1 || i2 && i3;\nloop invariant i1 && i2 && i3 && i4;\nloop invariant i1 || i2 || i3 || i4;\nloop invariant i1 && i2 && i3 || i4;\nloop invariant i1 || i2 && i3 && i4;\nloop invariant i1 && i2 || i3 && i4;\nloop invariant i1 || i2 || i3 && i4;\nloop invariant i1 && i2 && i3 && i4 && i5;\nloop invariant i1 || i2 || i3 || i4 || i5;\nloop invariant i1 && i2 && i3 || i4 && i5;\nloop invariant i1 || i2 && i3 && i4 && i5;\nloop invariant i1 && i2 || i3 && i4 && i5;\nloop invariant i1 || i2 || i3 && i4 && i5;\nloop invariant i1 && i2 && i3 && i4 && i5 && i6;\nloop invariant i1 || i2 || i3 || i4 || i5 || i6;\nloop invariant i1 && i2 && i3 || i4 && i5 && i6;\nloop invariant i1 || i2 && i3 && i4 && i5 && i6;\nloop invariant i1 && i2 || i3 && i4 && i5 && i6;\nloop invariant i1 || i2 || i3 && i4 && i5 && i6;\nloop invariant i1 && i2 && i3 && i4 && i5 && i6 && i7;\nloop invariant i1 || i2 || i3 || i4 || i5 || i6 || i7;\nloop invariant i1 && i2 && i3 || i4 && i5 && i6 && i7;\nloop invariant i1 || i2 && i3 && i4 && i5 && i6 && i7;\nloop invariant i1 && i2 || i3 && i4 && i5 && i6 && i7;\nloop invariant i1 || i2 || i3 && i4 && i5 && i6 && i7;\nloop invariant i1 && i2 && i3 && i4 && i5 && i6 && i7 && i8;\nloop invariant i1 || i2 || i3 || i4 || i5 || i6 || i7 || i8;\nloop invariant i1 && i2 && i3 || i4 && i5 && i6 && i7 && i8;\nloop invariant i1 || i2 && i3 && i4 && i5 && i6 && i7 && i8;\nloop invariant i1 && i2 || i3 && i4 && i5 && i6 && i7 && i8;\nloop invariant i1 || i2 || i3 && i4 && i5 && i6 && i7 && i8;\nloop invariant i1 && i2 && i3 && i4 && i5 && i6 && i7 && i8 && i9;\nloop invariant i1 || i2 || i3 || i4 || i5 || i6 || i7 || i8 || i9;\nloop invariant i1 && i2 && i3 || i4 && i5 && i6 && i7 && i8 && i9;\nloop invariant i1 || i2 && i3 && i4 && i5 && i6 && i7 && i8 && i9;\nloop invariant i1 && i2 || i3 && i4 && i5 && i6 && i7 && i8 && i9;\nloop invariant i1 || i2 || i3 && i4 && i5 && i6 && i7 && i8 && i9;\nloop invariant i1 && i2 && i3 && i4 && i5 && i6 && i7 && i8 && i9 && i10;\nloop invariant i1 || i2 || i3 || i4 || i5 || i6 || i7 || i8 || i9 || i10;\nloop invariant i1 && i2 && i3 || i4 && i5 && i6 && i7 && i8 && i9 && i10;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= y;\nloop invariant y >= 1;\nloop invariant x <= y;\nloop invariant y >= 1 + x;\nloop invariant x >= 1 + (y - 1) * y / 2;\nloop invariant x >= 1 + y;\nloop invariant x >= y;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant x >= y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x > 0 ==> x >= y;\nloop invariant y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x == unknown_int() + 1 ==> x > 0;\nloop invariant y == unknown_int() ==> y <= 0;\nloop invariant x <= unknown_int();\nloop invariant y >= unknown_int();\nloop invariant x + (y * (y - 1) / 2) <= unknown_int();\nloop invariant (x + (y * (y - 1) / 2)) >= unknown_int() + 1 ==> x > 0;\nloop invariant (x + (y * (y - 1) / 2)) >= unknown_int() + 1 ==> y >= 0;\nloop invariant x + (y * (y - 1) / 2) >= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= 1;\nloop invariant x + (y * (y - 1) / 2) <= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= 1;\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) <= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= 1;\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) <= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= 1;\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) <= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= 1;\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) <= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= 1;\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) <= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= 1;\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) <= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= unknown_int();\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y;\nloop invariant x >= 0;\nloop invariant x > 0 ==> y >= 0;\nloop invariant x <= 0 ==> y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y >= 0;\nloop invariant x + y <= 2147483647;\nloop invariant x + y <= 1073741823;\nloop invariant x + y <= 536870911;\nloop invariant x + y <= 268435455;\nloop invariant x + y <= 134217727;\nloop invariant x + y <= 67108863;\nloop invariant x + y <= 33554431;\nloop invariant x + y <= 16777215;\nloop invariant x + y <= 8388607;\nloop invariant x + y <= 4194303;\nloop invariant x + y <= 2097151;\nloop invariant x + y <= 1048575;\nloop invariant x + y <= 524287;\nloop invariant x + y <= 262143;\nloop invariant x + y <= 131071;\nloop invariant x + y <= 65535;\nloop invariant x + y <= 32767;\nloop invariant x + y <= 16383;\nloop invariant x + y <= 8191;\nloop invariant x + y <= 4095;\nloop invariant x + y <= 2047;\nloop invariant x + y <= 1023;\nloop invariant x + y <= 511;\nloop invariant x + y <= 255;\nloop invariant x + y <= 127;\nloop invariant x + y <= 63;\nloop invariant x + y <= 31;\nloop invariant x + y <= 15;\nloop invariant x + y <= 7;\nloop invariant x + y <= 3;\nloop invariant x + y <= 1;\nloop invariant x + y <= 0;\nloop invariant x + y >= -2147483648;\nloop invariant x + y >= -1073741824;\nloop invariant x + y >= -536870912;\nloop invariant x + y >= -268435456;\nloop invariant x + y >= -134217728;\nloop invariant x + y >= -67108864;\nloop invariant x + y >= -33554432;\nloop invariant x + y >= -16777216;\nloop invariant x + y >= -8388608;\nloop invariant x + y >= -4194304;\nloop invariant x + y >= -2097152;\nloop invariant x + y >= -1048576;\nloop invariant x + y >= -524288;\nloop invariant x + y >= -262144;\nloop invariant x + y >= -131072;\nloop invariant x + y >= -65536;\nloop invariant x + y >= -32768;\nloop invariant x + y >= -16384;\nloop invariant x + y >= -8192;\nloop invariant x + y >= -4096;\nloop invariant x + y >= -2048;\nloop invariant x + y >= -1024;\nloop invariant x + y >= -512;\nloop invariant x + y >= -256;\nloop invariant x + y >= -128;\nloop invariant x + y >= -64;\nloop invariant x + y >= -32;\nloop invariant x + y >= -16;\nloop invariant x + y >= -8;\nloop invariant x + y >= -4;\nloop invariant x + y >= -2;\nloop invariant x + y >= -1;\nloop invariant x + y >= -0;\nloop invariant x + y >= -2147483648;\nloop invariant x + y >= -1073741824;\nloop invariant x + y >= -536870912;\nloop invariant x + y >= -268435456;\nloop invariant x + y >= -134217728;\nloop invariant x + y >= -67108864;\n*/\n```",
            "```\n/*@\nloop invariant 0 < y <= 100000;\nloop invariant 0 < x <= 100000;\nloop invariant x >= y;\nloop invariant x == y + (y * (y + 1)) / 2;\nloop invariant y == x - (x * (x - 1)) / 2;\nloop invariant x > y || x == y;\nloop invariant x > y || x == y + 1;\nloop invariant x > y || x == y + (y + 1) * y / 2;\nloop invariant x > y || x == y + (y + 1) * (y + 2) / 2;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) / 6;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) / 24;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) / 120;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) / 720;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) * (y + 7) / 5040;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) * (y + 7) * (y + 8) / 40320;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) * (y + 7) * (y + 8) * (y + 9) / 362880;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) * (y + 7) * (y + 8) * (y + 9) * (y + 10) / 3628800;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) * (y + 7) * (y + 8) * (y + 9) * (y + 10) * (y + 11) / 39916800;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) * (y + 7) * (y + 8) * (y + 9) * (y + 10) * (y + 11) * (y + 12) / 479001600;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) * (y + 7) * (y + 8) * (y + 9) * (y + 10) * (y + 11) * (y + 12) * (y + 13) / 6227020800;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant y >= 0;\nloop invariant x >= 0 || y > 0;\nloop invariant x >= 0 || x <= 0;\nloop invariant y >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\n*/\n```",
            "```\n/*@\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= y || x < y;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= INT_MAX;\nloop invariant 0 <= y <= INT_MAX;\nloop invariant x == y ==> (x > 0) && (y > 0);\nloop invariant x != y ==> (x > 0) || (y > 0);\n*/\n```",
            "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y > 0 ==> x >= 1 || y >= 1;\nloop invariant x + y > 0 ==> x + y <= 2 * (x + y - 1) + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= INT_MAX;\nloop invariant 0 <= y <= INT_MAX;\nloop invariant x >= 0 || y >= 0;\nloop invariant x + y <= INT_MAX;\nloop invariant (x > 0 && x <= INT_MAX) || (y > 0 && y <= INT_MAX);\nloop invariant (x > 0 && x <= INT_MAX) ==> (x + y <= INT_MAX);\nloop invariant (y > 0 && y <= INT_MAX) ==> (x + y <= INT_MAX);\nloop invariant (x > 0 && x <= INT_MAX) ==> (y >= 0);\nloop invariant (y > 0 && y <= INT_MAX) ==> (x >= 0);\nloop invariant (x > 0 && x <= INT_MAX) ==> (y <= INT_MAX);\nloop invariant (y > 0 && y <= INT_MAX) ==> (x <= INT_MAX);\nloop invariant (x > 0 && x <= INT_MAX) ==> (x + y > 0);\nloop invariant (y > 0 && y <= INT_MAX) ==> (x + y > 0);\nloop invariant (x > 0 && x <= INT_MAX) ==> (x + y <= INT_MAX);\nloop invariant (y > 0 && y <= INT_MAX) ==> (x + y <= INT_MAX);\nloop invariant (x > 0 && x <= INT_MAX) ==> (x + y > 0);\nloop invariant (y > 0 && y <= INT_MAX) ==> (x + y > 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
            "```\n/*@\nloop invariant x >= 0 ==> (x > 0 || y > 0);\nloop invariant y >= 0 ==> (x > 0 || y > 0);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y >= x ==> (x > 0 || y > 0);\nloop invariant x + y >= y ==> (x > 0 || y > 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= y;\nloop invariant x >= 0;\nloop invariant y >= 1 ==> x > 0;\nloop invariant y < 1 ==> x >= 0;\nloop invariant x < 0 ==> y >= 1;\nloop invariant x <= 0 ==> y > 0;\nloop invariant y <= 0 ==> x >= 1;\nloop invariant x <= 0 ==> y > 1;\nloop invariant x <= 1 ==> y >= 0;\nloop invariant y <= 1 ==> x > 1;\nloop invariant x >= 1 ==> y <= 0;\nloop invariant x >= 2 ==> y > 1;\nloop invariant y >= 2 ==> x <= 1;\nloop invariant x >= 3 ==> y <= 1;\nloop invariant y >= 3 ==> x > 1;\nloop invariant x >= 4 ==> y <= 2;\nloop invariant y >= 4 ==> x > 2;\nloop invariant x >= 5 ==> y <= 2;\nloop invariant y >= 5 ==> x > 2;\nloop invariant x >= 6 ==> y <= 3;\nloop invariant y >= 6 ==> x > 3;\nloop invariant x >= 7 ==> y <= 3;\nloop invariant y >= 7 ==> x > 3;\nloop invariant x >= 8 ==> y <= 4;\nloop invariant y >= 8 ==> x > 4;\nloop invariant x >= 9 ==> y <= 4;\nloop invariant y >= 9 ==> x > 4;\nloop invariant x >= 10 ==> y <= 5;\nloop invariant y >= 10 ==> x > 5;\nloop invariant x >= 11 ==> y <= 5;\nloop invariant y >= 11 ==> x > 5;\nloop invariant x >= 12 ==> y <= 6;\nloop invariant y >= 12 ==> x > 6;\nloop invariant x >= 13 ==> y <= 6;\nloop invariant y >= 13 ==> x > 6;\nloop invariant x >= 14 ==> y <= 7;\nloop invariant y >= 14 ==> x > 7;\nloop invariant x >= 15 ==> y <= 7;\nloop invariant y >= 15 ==> x > 7;\nloop invariant x >= 16 ==> y <= 8;\nloop invariant y >= 16 ==> x > 8;\nloop invariant x >= 17 ==> y <= 8;\nloop invariant y >= 17 ==> x > 8;\nloop invariant x >= 18 ==> y <= 9;\nloop invariant y >= 18 ==> x > 9;\nloop invariant x >= 19 ==> y <= 9;\nloop invariant y >= 19 ==> x > 9;\nloop invariant x >= 20 ==> y <= 10;\nloop invariant y >= 20 ==> x > 10;\nloop invariant x >= 21 ==> y <= 10;\nloop invariant y >= 21 ==> x > 10;\nloop invariant x >= 22 ==> y <= 11;\nloop invariant y >= 22 ==> x > 11;\nloop invariant x >= 23 ==> y <= 11;\nloop invariant y >= 23 ==> x > 11;\nloop invariant x >= 24 ==> y <= 12;\nloop invariant y >= 24 ==> x > 12;\nloop invariant x >= 25 ==> y <= 12;\nloop invariant y >= 25 ==> x > 12;\nloop invariant x >= 26 ==> y <= 13;\nloop invariant y >= 26 ==> x > 13;\nloop invariant x >= 27 ==> y <= 13;\nloop invariant y >= 27 ==> x > 13;\nloop invariant x >= 28 ==> y <= 14;\nloop invariant y >= 28 ==> x > 14;\nloop invariant x >= 29 ==> y <= 14;\nloop invariant y >= 29 ==> x > 14;\nloop invariant x >= 30 ==> y <= 15;\nloop invariant y >= 30 ==> x > 15;\nloop invariant x >= 31 ==> y <= 15;\nloop invariant y >= 31 ==> x > 15;\nloop invariant x >= 32 ==> y <= 16;\nloop invariant y >= 32 ==> x > 16;\nloop invariant x >= 33 ==> y <= 16;\nloop invariant y >= 33 ==> x > 16;\nloop invariant x >= 34 ==> y <= 17;\nloop invariant y >= 34 ==> x > 17;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 51,
                "annotations": "```\n/*@\nloop invariant i1; loop invariant i2;\nloop invariant i1 ==> i2;\nloop invariant i1 <= i2;\nloop invariant i1 >= i2;\nloop invariant i1 == i2;\nloop invariant i1 != i2;\nloop invariant i1 && i2;\nloop invariant i1 || i2;\nloop invariant i1 && i2 && i3;\nloop invariant i1 || i2 || i3;\nloop invariant i1 && i2 || i3;\nloop invariant i1 || i2 && i3;\nloop invariant i1 && i2 && i3 && i4;\nloop invariant i1 || i2 || i3 || i4;\nloop invariant i1 && i2 && i3 || i4;\nloop invariant i1 || i2 && i3 && i4;\nloop invariant i1 && i2 || i3 && i4;\nloop invariant i1 || i2 || i3 && i4;\nloop invariant i1 && i2 && i3 && i4 && i5;\nloop invariant i1 || i2 || i3 || i4 || i5;\nloop invariant i1 && i2 && i3 || i4 && i5;\nloop invariant i1 || i2 && i3 && i4 && i5;\nloop invariant i1 && i2 || i3 && i4 && i5;\nloop invariant i1 || i2 || i3 && i4 && i5;\nloop invariant i1 && i2 && i3 && i4 && i5 && i6;\nloop invariant i1 || i2 || i3 || i4 || i5 || i6;\nloop invariant i1 && i2 && i3 || i4 && i5 && i6;\nloop invariant i1 || i2 && i3 && i4 && i5 && i6;\nloop invariant i1 && i2 || i3 && i4 && i5 && i6;\nloop invariant i1 || i2 || i3 && i4 && i5 && i6;\nloop invariant i1 && i2 && i3 && i4 && i5 && i6 && i7;\nloop invariant i1 || i2 || i3 || i4 || i5 || i6 || i7;\nloop invariant i1 && i2 && i3 || i4 && i5 && i6 && i7;\nloop invariant i1 || i2 && i3 && i4 && i5 && i6 && i7;\nloop invariant i1 && i2 || i3 && i4 && i5 && i6 && i7;\nloop invariant i1 || i2 || i3 && i4 && i5 && i6 && i7;\nloop invariant i1 && i2 && i3 && i4 && i5 && i6 && i7 && i8;\nloop invariant i1 || i2 || i3 || i4 || i5 || i6 || i7 || i8;\nloop invariant i1 && i2 && i3 || i4 && i5 && i6 && i7 && i8;\nloop invariant i1 || i2 && i3 && i4 && i5 && i6 && i7 && i8;\nloop invariant i1 && i2 || i3 && i4 && i5 && i6 && i7 && i8;\nloop invariant i1 || i2 || i3 && i4 && i5 && i6 && i7 && i8;\nloop invariant i1 && i2 && i3 && i4 && i5 && i6 && i7 && i8 && i9;\nloop invariant i1 || i2 || i3 || i4 || i5 || i6 || i7 || i8 || i9;\nloop invariant i1 && i2 && i3 || i4 && i5 && i6 && i7 && i8 && i9;\nloop invariant i1 || i2 && i3 && i4 && i5 && i6 && i7 && i8 && i9;\nloop invariant i1 && i2 || i3 && i4 && i5 && i6 && i7 && i8 && i9;\nloop invariant i1 || i2 || i3 && i4 && i5 && i6 && i7 && i8 && i9;\nloop invariant i1 && i2 && i3 && i4 && i5 && i6 && i7 && i8 && i9 && i10;\nloop invariant i1 || i2 || i3 || i4 || i5 || i6 || i7 || i8 || i9 || i10;\nloop invariant i1 && i2 && i3 || i4 && i5 && i6 && i7 && i8 && i9 && i10;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= y;\nloop invariant y >= 1;\nloop invariant x <= y;\nloop invariant y >= 1 + x;\nloop invariant x >= 1 + (y - 1) * y / 2;\nloop invariant x >= 1 + y;\nloop invariant x >= y;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant x >= y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\nloop invariant x >= 1 + y + (y - 1) * y / 2;\nloop invariant y >= 1 + x + (y - 1) * y / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= y;\nloop invariant x > 0 ==> x >= y;\nloop invariant y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n\n*/\nwhile (unknown_bool()) {\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 12,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x == unknown_int() + 1 ==> x > 0;\nloop invariant y == unknown_int() ==> y <= 0;\nloop invariant x <= unknown_int();\nloop invariant y >= unknown_int();\nloop invariant x + (y * (y - 1) / 2) <= unknown_int();\nloop invariant (x + (y * (y - 1) / 2)) >= unknown_int() + 1 ==> x > 0;\nloop invariant (x + (y * (y - 1) / 2)) >= unknown_int() + 1 ==> y >= 0;\nloop invariant x + (y * (y - 1) / 2) >= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= 1;\nloop invariant x + (y * (y - 1) / 2) <= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= 1;\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) <= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= 1;\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) <= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= 1;\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) <= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= 1;\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) <= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= 1;\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) <= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= 1;\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) <= unknown_int();\nloop invariant x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= unknown_int();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= y;\nloop invariant x >= 0;\nloop invariant x > 0 ==> y >= 0;\nloop invariant x <= 0 ==> y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n\nloop invariant i4: x <= 0 ==> y >= 0;\n*/\nwhile (unknown_bool()) {\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 1 <= x;\nloop invariant 1 <= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y >= 0;\nloop invariant x + y <= 2147483647;\nloop invariant x + y <= 1073741823;\nloop invariant x + y <= 536870911;\nloop invariant x + y <= 268435455;\nloop invariant x + y <= 134217727;\nloop invariant x + y <= 67108863;\nloop invariant x + y <= 33554431;\nloop invariant x + y <= 16777215;\nloop invariant x + y <= 8388607;\nloop invariant x + y <= 4194303;\nloop invariant x + y <= 2097151;\nloop invariant x + y <= 1048575;\nloop invariant x + y <= 524287;\nloop invariant x + y <= 262143;\nloop invariant x + y <= 131071;\nloop invariant x + y <= 65535;\nloop invariant x + y <= 32767;\nloop invariant x + y <= 16383;\nloop invariant x + y <= 8191;\nloop invariant x + y <= 4095;\nloop invariant x + y <= 2047;\nloop invariant x + y <= 1023;\nloop invariant x + y <= 511;\nloop invariant x + y <= 255;\nloop invariant x + y <= 127;\nloop invariant x + y <= 63;\nloop invariant x + y <= 31;\nloop invariant x + y <= 15;\nloop invariant x + y <= 7;\nloop invariant x + y <= 3;\nloop invariant x + y <= 1;\nloop invariant x + y <= 0;\nloop invariant x + y >= -2147483648;\nloop invariant x + y >= -1073741824;\nloop invariant x + y >= -536870912;\nloop invariant x + y >= -268435456;\nloop invariant x + y >= -134217728;\nloop invariant x + y >= -67108864;\nloop invariant x + y >= -33554432;\nloop invariant x + y >= -16777216;\nloop invariant x + y >= -8388608;\nloop invariant x + y >= -4194304;\nloop invariant x + y >= -2097152;\nloop invariant x + y >= -1048576;\nloop invariant x + y >= -524288;\nloop invariant x + y >= -262144;\nloop invariant x + y >= -131072;\nloop invariant x + y >= -65536;\nloop invariant x + y >= -32768;\nloop invariant x + y >= -16384;\nloop invariant x + y >= -8192;\nloop invariant x + y >= -4096;\nloop invariant x + y >= -2048;\nloop invariant x + y >= -1024;\nloop invariant x + y >= -512;\nloop invariant x + y >= -256;\nloop invariant x + y >= -128;\nloop invariant x + y >= -64;\nloop invariant x + y >= -32;\nloop invariant x + y >= -16;\nloop invariant x + y >= -8;\nloop invariant x + y >= -4;\nloop invariant x + y >= -2;\nloop invariant x + y >= -1;\nloop invariant x + y >= -0;\nloop invariant x + y >= -2147483648;\nloop invariant x + y >= -1073741824;\nloop invariant x + y >= -536870912;\nloop invariant x + y >= -268435456;\nloop invariant x + y >= -134217728;\nloop invariant x + y >= -67108864;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i38: x + y >= -2147483648;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 < y <= 100000;\nloop invariant 0 < x <= 100000;\nloop invariant x >= y;\nloop invariant x == y + (y * (y + 1)) / 2;\nloop invariant y == x - (x * (x - 1)) / 2;\nloop invariant x > y || x == y;\nloop invariant x > y || x == y + 1;\nloop invariant x > y || x == y + (y + 1) * y / 2;\nloop invariant x > y || x == y + (y + 1) * (y + 2) / 2;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) / 6;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) / 24;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) / 120;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) / 720;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) * (y + 7) / 5040;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) * (y + 7) * (y + 8) / 40320;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) * (y + 7) * (y + 8) * (y + 9) / 362880;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) * (y + 7) * (y + 8) * (y + 9) * (y + 10) / 3628800;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) * (y + 7) * (y + 8) * (y + 9) * (y + 10) * (y + 11) / 39916800;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) * (y + 7) * (y + 8) * (y + 9) * (y + 10) * (y + 11) * (y + 12) / 479001600;\nloop invariant x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) * (y + 7) * (y + 8) * (y + 9) * (y + 10) * (y + 11) * (y + 12) * (y + 13) / 6227020800;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant y >= 0;\nloop invariant x >= 0 || y > 0;\nloop invariant x >= 0 || x <= 0;\nloop invariant y >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\nloop invariant x >= 0 || y >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\nloop invariant i3: x >= 0 || y > 0;\nloop invariant i4: x >= 0 || x <= 0;\n\nloop invariant i6: x >= 0 || y >= 0;\n*/\nwhile (unknown_bool()) {\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x >= 1;\nloop invariant y >= 1;\nloop invariant x >= y || x < y;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\nloop invariant i3: x >= y || x < y;\n*/\nwhile (unknown_bool()) {\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= INT_MAX;\nloop invariant 0 <= y <= INT_MAX;\nloop invariant x == y ==> (x > 0) && (y > 0);\nloop invariant x != y ==> (x > 0) || (y > 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\nloop invariant i3: x == y ==> (x > 0) && (y > 0);\nloop invariant i4: x != y ==> (x > 0) || (y > 0);\n*/\nwhile (unknown_bool()) {\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y > 0 ==> x >= 1 || y >= 1;\nloop invariant x + y > 0 ==> x + y <= 2 * (x + y - 1) + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\nloop invariant i3: x + y > 0 ==> x >= 1 || y >= 1;\nloop invariant i4: x + y > 0 ==> x + y <= 2 * (x + y - 1) + 1;\n*/\nwhile (unknown_bool()) {\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= INT_MAX;\nloop invariant 0 <= y <= INT_MAX;\nloop invariant x >= 0 || y >= 0;\nloop invariant x + y <= INT_MAX;\nloop invariant (x > 0 && x <= INT_MAX) || (y > 0 && y <= INT_MAX);\nloop invariant (x > 0 && x <= INT_MAX) ==> (x + y <= INT_MAX);\nloop invariant (y > 0 && y <= INT_MAX) ==> (x + y <= INT_MAX);\nloop invariant (x > 0 && x <= INT_MAX) ==> (y >= 0);\nloop invariant (y > 0 && y <= INT_MAX) ==> (x >= 0);\nloop invariant (x > 0 && x <= INT_MAX) ==> (y <= INT_MAX);\nloop invariant (y > 0 && y <= INT_MAX) ==> (x <= INT_MAX);\nloop invariant (x > 0 && x <= INT_MAX) ==> (x + y > 0);\nloop invariant (y > 0 && y <= INT_MAX) ==> (x + y > 0);\nloop invariant (x > 0 && x <= INT_MAX) ==> (x + y <= INT_MAX);\nloop invariant (y > 0 && y <= INT_MAX) ==> (x + y <= INT_MAX);\nloop invariant (x > 0 && x <= INT_MAX) ==> (x + y > 0);\nloop invariant (y > 0 && y <= INT_MAX) ==> (x + y > 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\nloop invariant i3: x >= 0 || y >= 0;\n\nloop invariant i5: (x > 0 && x <= INT_MAX) || (y > 0 && y <= INT_MAX);\n\n\n\n\nloop invariant i10: (x > 0 && x <= INT_MAX) ==> (y <= INT_MAX);\nloop invariant i11: (y > 0 && y <= INT_MAX) ==> (x <= INT_MAX);\n\n\n*/\nwhile (unknown_bool()) {\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= y <= 100000;\nloop invariant x >= (1 + (y - 1) * y / 2);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n*/\nwhile (unknown_bool()) {\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant x >= 0 ==> (x > 0 || y > 0);\nloop invariant y >= 0 ==> (x > 0 || y > 0);\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y >= x ==> (x > 0 || y > 0);\nloop invariant x + y >= y ==> (x > 0 || y > 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\nloop invariant i1: x >= 0 ==> (x > 0 || y > 0);\n\n\n\n\nloop invariant i6: x + y >= y ==> (x > 0 || y > 0);\n*/\nwhile (unknown_bool()) {\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 34,
                "annotations": "```\n/*@\nloop invariant 0 <= y;\nloop invariant x >= 0;\nloop invariant y >= 1 ==> x > 0;\nloop invariant y < 1 ==> x >= 0;\nloop invariant x < 0 ==> y >= 1;\nloop invariant x <= 0 ==> y > 0;\nloop invariant y <= 0 ==> x >= 1;\nloop invariant x <= 0 ==> y > 1;\nloop invariant x <= 1 ==> y >= 0;\nloop invariant y <= 1 ==> x > 1;\nloop invariant x >= 1 ==> y <= 0;\nloop invariant x >= 2 ==> y > 1;\nloop invariant y >= 2 ==> x <= 1;\nloop invariant x >= 3 ==> y <= 1;\nloop invariant y >= 3 ==> x > 1;\nloop invariant x >= 4 ==> y <= 2;\nloop invariant y >= 4 ==> x > 2;\nloop invariant x >= 5 ==> y <= 2;\nloop invariant y >= 5 ==> x > 2;\nloop invariant x >= 6 ==> y <= 3;\nloop invariant y >= 6 ==> x > 3;\nloop invariant x >= 7 ==> y <= 3;\nloop invariant y >= 7 ==> x > 3;\nloop invariant x >= 8 ==> y <= 4;\nloop invariant y >= 8 ==> x > 4;\nloop invariant x >= 9 ==> y <= 4;\nloop invariant y >= 9 ==> x > 4;\nloop invariant x >= 10 ==> y <= 5;\nloop invariant y >= 10 ==> x > 5;\nloop invariant x >= 11 ==> y <= 5;\nloop invariant y >= 11 ==> x > 5;\nloop invariant x >= 12 ==> y <= 6;\nloop invariant y >= 12 ==> x > 6;\nloop invariant x >= 13 ==> y <= 6;\nloop invariant y >= 13 ==> x > 6;\nloop invariant x >= 14 ==> y <= 7;\nloop invariant y >= 14 ==> x > 7;\nloop invariant x >= 15 ==> y <= 7;\nloop invariant y >= 15 ==> x > 7;\nloop invariant x >= 16 ==> y <= 8;\nloop invariant y >= 16 ==> x > 8;\nloop invariant x >= 17 ==> y <= 8;\nloop invariant y >= 17 ==> x > 8;\nloop invariant x >= 18 ==> y <= 9;\nloop invariant y >= 18 ==> x > 9;\nloop invariant x >= 19 ==> y <= 9;\nloop invariant y >= 19 ==> x > 9;\nloop invariant x >= 20 ==> y <= 10;\nloop invariant y >= 20 ==> x > 10;\nloop invariant x >= 21 ==> y <= 10;\nloop invariant y >= 21 ==> x > 10;\nloop invariant x >= 22 ==> y <= 11;\nloop invariant y >= 22 ==> x > 11;\nloop invariant x >= 23 ==> y <= 11;\nloop invariant y >= 23 ==> x > 11;\nloop invariant x >= 24 ==> y <= 12;\nloop invariant y >= 24 ==> x > 12;\nloop invariant x >= 25 ==> y <= 12;\nloop invariant y >= 25 ==> x > 12;\nloop invariant x >= 26 ==> y <= 13;\nloop invariant y >= 26 ==> x > 13;\nloop invariant x >= 27 ==> y <= 13;\nloop invariant y >= 27 ==> x > 13;\nloop invariant x >= 28 ==> y <= 14;\nloop invariant y >= 28 ==> x > 14;\nloop invariant x >= 29 ==> y <= 14;\nloop invariant y >= 29 ==> x > 14;\nloop invariant x >= 30 ==> y <= 15;\nloop invariant y >= 30 ==> x > 15;\nloop invariant x >= 31 ==> y <= 15;\nloop invariant y >= 31 ==> x > 15;\nloop invariant x >= 32 ==> y <= 16;\nloop invariant y >= 32 ==> x > 16;\nloop invariant x >= 33 ==> y <= 16;\nloop invariant y >= 33 ==> x > 16;\nloop invariant x >= 34 ==> y <= 17;\nloop invariant y >= 34 ==> x > 17;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n\nloop invariant i4: y < 1 ==> x >= 0;\nloop invariant i5: x < 0 ==> y >= 1;\nloop invariant i6: x <= 0 ==> y > 0;\nloop invariant i7: y <= 0 ==> x >= 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 84: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\nloop invariant i1: i1; loop invariant i2;\nloop invariant i2: i1 ==> i2;\nloop invariant i3: i1 <= i2;\nloop invariant i4: i1 >= i2;\nloop invariant i5: i1 == i2;\nloop invariant i6: i1 != i2;\nloop invariant i7: i1 && i2;\nloop invariant i8: i1 || i2;\nloop invariant i9: i1 && i2 && i3;\nloop invariant i10: i1 || i2 || i3;\nloop invariant i11: i1 && i2 || i3;\nloop invariant i12: i1 || i2 && i3;\nloop invariant i13: i1 && i2 && i3 && i4;\nloop invariant i14: i1 || i2 || i3 || i4;\nloop invariant i15: i1 && i2 && i3 || i4;\nloop invariant i16: i1 || i2 && i3 && i4;\nloop invariant i17: i1 && i2 || i3 && i4;\nloop invariant i18: i1 || i2 || i3 && i4;\nloop invariant i19: i1 && i2 && i3 && i4 && i5;\nloop invariant i20: i1 || i2 || i3 || i4 || i5;\nloop invariant i21: i1 && i2 && i3 || i4 && i5;\nloop invariant i22: i1 || i2 && i3 && i4 && i5;\nloop invariant i23: i1 && i2 || i3 && i4 && i5;\nloop invariant i24: i1 || i2 || i3 && i4 && i5;\nloop invariant i25: i1 && i2 && i3 && i4 && i5 && i6;\nloop invariant i26: i1 || i2 || i3 || i4 || i5 || i6;\nloop invariant i27: i1 && i2 && i3 || i4 && i5 && i6;\nloop invariant i28: i1 || i2 && i3 && i4 && i5 && i6;\nloop invariant i29: i1 && i2 || i3 && i4 && i5 && i6;\nloop invariant i30: i1 || i2 || i3 && i4 && i5 && i6;\nloop invariant i31: i1 && i2 && i3 && i4 && i5 && i6 && i7;\nloop invariant i32: i1 || i2 || i3 || i4 || i5 || i6 || i7;\nloop invariant i33: i1 && i2 && i3 || i4 && i5 && i6 && i7;\nloop invariant i34: i1 || i2 && i3 && i4 && i5 && i6 && i7;\nloop invariant i35: i1 && i2 || i3 && i4 && i5 && i6 && i7;\nloop invariant i36: i1 || i2 || i3 && i4 && i5 && i6 && i7;\nloop invariant i37: i1 && i2 && i3 && i4 && i5 && i6 && i7 && i8;\nloop invariant i38: i1 || i2 || i3 || i4 || i5 || i6 || i7 || i8;\nloop invariant i39: i1 && i2 && i3 || i4 && i5 && i6 && i7 && i8;\nloop invariant i40: i1 || i2 && i3 && i4 && i5 && i6 && i7 && i8;\nloop invariant i41: i1 && i2 || i3 && i4 && i5 && i6 && i7 && i8;\nloop invariant i42: i1 || i2 || i3 && i4 && i5 && i6 && i7 && i8;\nloop invariant i43: i1 && i2 && i3 && i4 && i5 && i6 && i7 && i8 && i9;\nloop invariant i44: i1 || i2 || i3 || i4 || i5 || i6 || i7 || i8 || i9;\nloop invariant i45: i1 && i2 && i3 || i4 && i5 && i6 && i7 && i8 && i9;\nloop invariant i46: i1 || i2 && i3 && i4 && i5 && i6 && i7 && i8 && i9;\nloop invariant i47: i1 && i2 || i3 && i4 && i5 && i6 && i7 && i8 && i9;\nloop invariant i48: i1 || i2 || i3 && i4 && i5 && i6 && i7 && i8 && i9;\nloop invariant i49: i1 && i2 && i3 && i4 && i5 && i6 && i7 && i8 && i9 && i10;\nloop invariant i50: i1 || i2 || i3 || i4 || i5 || i6 || i7 || i8 || i9 || i10;\nloop invariant i51: i1 && i2 && i3 || i4 && i5 && i6 && i7 && i8 && i9 && i10;\nloop invariant i52: 1 <= x <= y;\nloop invariant i53: y >= 1;\nloop invariant i54: x <= y;\nloop invariant i55: y >= 1 + x;\nloop invariant i56: x >= 1 + (y - 1) * y / 2;\nloop invariant i57: x >= 1 + y;\nloop invariant i58: x >= y;\nloop invariant i59: y >= 1 + x + (y - 1) * y / 2;\nloop invariant i60: x >= 1 + y + (y - 1) * y / 2;\nloop invariant i61: x >= y + (y - 1) * y / 2;\nloop invariant i62: 0 <= x <= y;\nloop invariant i63: x > 0 ==> x >= y;\nloop invariant i64: y >= 0;\nloop invariant i65: 0 <= x;\nloop invariant i66: 0 <= y;\nloop invariant i67: x == unknown_int() + 1 ==> x > 0;\nloop invariant i68: y == unknown_int() ==> y <= 0;\nloop invariant i69: x <= unknown_int();\nloop invariant i70: y >= unknown_int();\nloop invariant i71: x + (y * (y - 1) / 2) <= unknown_int();\nloop invariant i72: (x + (y * (y - 1) / 2)) >= unknown_int() + 1 ==> x > 0;\nloop invariant i73: (x + (y * (y - 1) / 2)) >= unknown_int() + 1 ==> y >= 0;\nloop invariant i74: x + (y * (y - 1) / 2) >= unknown_int();\nloop invariant i75: x + (y * (y - 1) / 2) >= 1;\nloop invariant i76: x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= 1;\nloop invariant i77: x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) <= unknown_int();\nloop invariant i78: x + (y * (y - 1) / 2) >= unknown_int() + 1 ==> x + (y * (y - 1) / 2) >= unknown_int();\nloop invariant i79: x >= 0;\nloop invariant i80: x > 0 ==> y >= 0;\nloop invariant i81: x <= 0 ==> y >= 0;\nloop invariant i82: 1 <= x;\nloop invariant i83: 1 <= y;\nloop invariant i84: x + y >= 0;\nloop invariant i85: x + y <= 2147483647;\nloop invariant i86: x + y <= 1073741823;\nloop invariant i87: x + y <= 536870911;\nloop invariant i88: x + y <= 268435455;\nloop invariant i89: x + y <= 134217727;\nloop invariant i90: x + y <= 67108863;\nloop invariant i91: x + y <= 33554431;\nloop invariant i92: x + y <= 16777215;\nloop invariant i93: x + y <= 8388607;\nloop invariant i94: x + y <= 4194303;\nloop invariant i95: x + y <= 2097151;\nloop invariant i96: x + y <= 1048575;\nloop invariant i97: x + y <= 524287;\nloop invariant i98: x + y <= 262143;\nloop invariant i99: x + y <= 131071;\nloop invariant i100: x + y <= 65535;\nloop invariant i101: x + y <= 32767;\nloop invariant i102: x + y <= 16383;\nloop invariant i103: x + y <= 8191;\nloop invariant i104: x + y <= 4095;\nloop invariant i105: x + y <= 2047;\nloop invariant i106: x + y <= 1023;\nloop invariant i107: x + y <= 511;\nloop invariant i108: x + y <= 255;\nloop invariant i109: x + y <= 127;\nloop invariant i110: x + y <= 63;\nloop invariant i111: x + y <= 31;\nloop invariant i112: x + y <= 15;\nloop invariant i113: x + y <= 7;\nloop invariant i114: x + y <= 3;\nloop invariant i115: x + y <= 1;\nloop invariant i116: x + y <= 0;\nloop invariant i117: x + y >= -2147483648;\nloop invariant i118: x + y >= -1073741824;\nloop invariant i119: x + y >= -536870912;\nloop invariant i120: x + y >= -268435456;\nloop invariant i121: x + y >= -134217728;\nloop invariant i122: x + y >= -67108864;\nloop invariant i123: x + y >= -33554432;\nloop invariant i124: x + y >= -16777216;\nloop invariant i125: x + y >= -8388608;\nloop invariant i126: x + y >= -4194304;\nloop invariant i127: x + y >= -2097152;\nloop invariant i128: x + y >= -1048576;\nloop invariant i129: x + y >= -524288;\nloop invariant i130: x + y >= -262144;\nloop invariant i131: x + y >= -131072;\nloop invariant i132: x + y >= -65536;\nloop invariant i133: x + y >= -32768;\nloop invariant i134: x + y >= -16384;\nloop invariant i135: x + y >= -8192;\nloop invariant i136: x + y >= -4096;\nloop invariant i137: x + y >= -2048;\nloop invariant i138: x + y >= -1024;\nloop invariant i139: x + y >= -512;\nloop invariant i140: x + y >= -256;\nloop invariant i141: x + y >= -128;\nloop invariant i142: x + y >= -64;\nloop invariant i143: x + y >= -32;\nloop invariant i144: x + y >= -16;\nloop invariant i145: x + y >= -8;\nloop invariant i146: x + y >= -4;\nloop invariant i147: x + y >= -2;\nloop invariant i148: x + y >= -1;\nloop invariant i149: x + y >= -0;\nloop invariant i150: 0 < y <= 100000;\nloop invariant i151: 0 < x <= 100000;\nloop invariant i152: x == y + (y * (y + 1)) / 2;\nloop invariant i153: y == x - (x * (x - 1)) / 2;\nloop invariant i154: x > y || x == y;\nloop invariant i155: x > y || x == y + 1;\nloop invariant i156: x > y || x == y + (y + 1) * y / 2;\nloop invariant i157: x > y || x == y + (y + 1) * (y + 2) / 2;\nloop invariant i158: x > y || x == y + (y + 1) * (y + 2) * (y + 3) / 6;\nloop invariant i159: x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) / 24;\nloop invariant i160: x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) / 120;\nloop invariant i161: x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) / 720;\nloop invariant i162: x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) * (y + 7) / 5040;\nloop invariant i163: x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) * (y + 7) * (y + 8) / 40320;\nloop invariant i164: x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) * (y + 7) * (y + 8) * (y + 9) / 362880;\nloop invariant i165: x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) * (y + 7) * (y + 8) * (y + 9) * (y + 10) / 3628800;\nloop invariant i166: x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) * (y + 7) * (y + 8) * (y + 9) * (y + 10) * (y + 11) / 39916800;\nloop invariant i167: x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) * (y + 7) * (y + 8) * (y + 9) * (y + 10) * (y + 11) * (y + 12) / 479001600;\nloop invariant i168: x > y || x == y + (y + 1) * (y + 2) * (y + 3) * (y + 4) * (y + 5) * (y + 6) * (y + 7) * (y + 8) * (y + 9) * (y + 10) * (y + 11) * (y + 12) * (y + 13) / 6227020800;\nloop invariant i169: x >= 0 || y > 0;\nloop invariant i170: x >= 0 || x <= 0;\nloop invariant i171: y >= 0 || y >= 0;\nloop invariant i172: x >= 0 || y >= 0;\nloop invariant i173: x >= 1;\nloop invariant i174: x >= y || x < y;\nloop invariant i175: 0 <= x <= INT_MAX;\nloop invariant i176: 0 <= y <= INT_MAX;\nloop invariant i177: x == y ==> (x > 0) && (y > 0);\nloop invariant i178: x != y ==> (x > 0) || (y > 0);\nloop invariant i179: x + y > 0 ==> x >= 1 || y >= 1;\nloop invariant i180: x + y > 0 ==> x + y <= 2 * (x + y - 1) + 1;\nloop invariant i181: x + y <= INT_MAX;\nloop invariant i182: (x > 0 && x <= INT_MAX) || (y > 0 && y <= INT_MAX);\nloop invariant i183: (x > 0 && x <= INT_MAX) ==> (x + y <= INT_MAX);\nloop invariant i184: (y > 0 && y <= INT_MAX) ==> (x + y <= INT_MAX);\nloop invariant i185: (x > 0 && x <= INT_MAX) ==> (y >= 0);\nloop invariant i186: (y > 0 && y <= INT_MAX) ==> (x >= 0);\nloop invariant i187: (x > 0 && x <= INT_MAX) ==> (y <= INT_MAX);\nloop invariant i188: (y > 0 && y <= INT_MAX) ==> (x <= INT_MAX);\nloop invariant i189: (x > 0 && x <= INT_MAX) ==> (x + y > 0);\nloop invariant i190: (y > 0 && y <= INT_MAX) ==> (x + y > 0);\nloop invariant i191: 0 <= y <= 100000;\nloop invariant i192: x >= (1 + (y - 1) * y / 2);\nloop invariant i193: x >= 0 ==> (x > 0 || y > 0);\nloop invariant i194: y >= 0 ==> (x > 0 || y > 0);\nloop invariant i195: x + y >= x ==> (x > 0 || y > 0);\nloop invariant i196: x + y >= y ==> (x > 0 || y > 0);\nloop invariant i197: y >= 1 ==> x > 0;\nloop invariant i198: y < 1 ==> x >= 0;\nloop invariant i199: x < 0 ==> y >= 1;\nloop invariant i200: x <= 0 ==> y > 0;\nloop invariant i201: y <= 0 ==> x >= 1;\nloop invariant i202: x <= 0 ==> y > 1;\nloop invariant i203: x <= 1 ==> y >= 0;\nloop invariant i204: y <= 1 ==> x > 1;\nloop invariant i205: x >= 1 ==> y <= 0;\nloop invariant i206: x >= 2 ==> y > 1;\nloop invariant i207: y >= 2 ==> x <= 1;\nloop invariant i208: x >= 3 ==> y <= 1;\nloop invariant i209: y >= 3 ==> x > 1;\nloop invariant i210: x >= 4 ==> y <= 2;\nloop invariant i211: y >= 4 ==> x > 2;\nloop invariant i212: x >= 5 ==> y <= 2;\nloop invariant i213: y >= 5 ==> x > 2;\nloop invariant i214: x >= 6 ==> y <= 3;\nloop invariant i215: y >= 6 ==> x > 3;\nloop invariant i216: x >= 7 ==> y <= 3;\nloop invariant i217: y >= 7 ==> x > 3;\nloop invariant i218: x >= 8 ==> y <= 4;\nloop invariant i219: y >= 8 ==> x > 4;\nloop invariant i220: x >= 9 ==> y <= 4;\nloop invariant i221: y >= 9 ==> x > 4;\nloop invariant i222: x >= 10 ==> y <= 5;\nloop invariant i223: y >= 10 ==> x > 5;\nloop invariant i224: x >= 11 ==> y <= 5;\nloop invariant i225: y >= 11 ==> x > 5;\nloop invariant i226: x >= 12 ==> y <= 6;\nloop invariant i227: y >= 12 ==> x > 6;\nloop invariant i228: x >= 13 ==> y <= 6;\nloop invariant i229: y >= 13 ==> x > 6;\nloop invariant i230: x >= 14 ==> y <= 7;\nloop invariant i231: y >= 14 ==> x > 7;\nloop invariant i232: x >= 15 ==> y <= 7;\nloop invariant i233: y >= 15 ==> x > 7;\nloop invariant i234: x >= 16 ==> y <= 8;\nloop invariant i235: y >= 16 ==> x > 8;\nloop invariant i236: x >= 17 ==> y <= 8;\nloop invariant i237: y >= 17 ==> x > 8;\nloop invariant i238: x >= 18 ==> y <= 9;\nloop invariant i239: y >= 18 ==> x > 9;\nloop invariant i240: x >= 19 ==> y <= 9;\nloop invariant i241: y >= 19 ==> x > 9;\nloop invariant i242: x >= 20 ==> y <= 10;\nloop invariant i243: y >= 20 ==> x > 10;\nloop invariant i244: x >= 21 ==> y <= 10;\nloop invariant i245: y >= 21 ==> x > 10;\nloop invariant i246: x >= 22 ==> y <= 11;\nloop invariant i247: y >= 22 ==> x > 11;\nloop invariant i248: x >= 23 ==> y <= 11;\nloop invariant i249: y >= 23 ==> x > 11;\nloop invariant i250: x >= 24 ==> y <= 12;\nloop invariant i251: y >= 24 ==> x > 12;\nloop invariant i252: x >= 25 ==> y <= 12;\nloop invariant i253: y >= 25 ==> x > 12;\nloop invariant i254: x >= 26 ==> y <= 13;\nloop invariant i255: y >= 26 ==> x > 13;\nloop invariant i256: x >= 27 ==> y <= 13;\nloop invariant i257: y >= 27 ==> x > 13;\nloop invariant i258: x >= 28 ==> y <= 14;\nloop invariant i259: y >= 28 ==> x > 14;\nloop invariant i260: x >= 29 ==> y <= 14;\nloop invariant i261: y >= 29 ==> x > 14;\nloop invariant i262: x >= 30 ==> y <= 15;\nloop invariant i263: y >= 30 ==> x > 15;\nloop invariant i264: x >= 31 ==> y <= 15;\nloop invariant i265: y >= 31 ==> x > 15;\nloop invariant i266: x >= 32 ==> y <= 16;\nloop invariant i267: y >= 32 ==> x > 16;\nloop invariant i268: x >= 33 ==> y <= 16;\nloop invariant i269: y >= 33 ==> x > 16;\nloop invariant i270: x >= 34 ==> y <= 17;\nloop invariant i271: y >= 34 ==> x > 17;\n*/\nwhile (unknown_bool()) {\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 103,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int x = unknown_int();\n  int y = unknown_int();\n  if (!(y>0 || x>0)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i81: x <= 0 ==> y >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i117: x + y >= -2147483648;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i169: x >= 0 || y > 0;\nloop invariant i170: x >= 0 || x <= 0;\n\nloop invariant i172: x >= 0 || y >= 0;\n\nloop invariant i174: x >= y || x < y;\n\n\nloop invariant i177: x == y ==> (x > 0) && (y > 0);\nloop invariant i178: x != y ==> (x > 0) || (y > 0);\nloop invariant i179: x + y > 0 ==> x >= 1 || y >= 1;\nloop invariant i180: x + y > 0 ==> x + y <= 2 * (x + y - 1) + 1;\n\nloop invariant i182: (x > 0 && x <= INT_MAX) || (y > 0 && y <= INT_MAX);\n\n\n\n\nloop invariant i187: (x > 0 && x <= INT_MAX) ==> (y <= INT_MAX);\nloop invariant i188: (y > 0 && y <= INT_MAX) ==> (x <= INT_MAX);\n\n\n\n\nloop invariant i193: x >= 0 ==> (x > 0 || y > 0);\nloop invariant i194: y >= 0 ==> (x > 0 || y > 0);\nloop invariant i195: x + y >= x ==> (x > 0 || y > 0);\nloop invariant i196: x + y >= y ==> (x > 0 || y > 0);\n\nloop invariant i198: y < 1 ==> x >= 0;\nloop invariant i199: x < 0 ==> y >= 1;\nloop invariant i200: x <= 0 ==> y > 0;\nloop invariant i201: y <= 0 ==> x >= 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if (x>0) {\n      x++;\n    } else {\n      y++;\n    }\n  }\n  {;\n//@ assert(x>0 || y>0);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark08_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark09_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark10_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark11_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark12_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark13_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark14_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark16_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark17_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark18_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark19_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark20_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark21_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark22_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark23_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark25_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark26_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark29_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark30_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark31_disjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark32_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark33_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark34_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark35_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark36_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark37_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark38_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark39_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark40_polynomial.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark41_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark42_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark43_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark45_disjunctive.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark15_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark27_linear.c"
        ],
        "skipped": [],
        "total": 163,
        "success_count": 143,
        "failure_count": 20,
        "success_rate": 0.8773006134969326
    }
}