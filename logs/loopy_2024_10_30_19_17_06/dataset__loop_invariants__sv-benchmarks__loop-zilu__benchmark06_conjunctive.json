{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int i = unknown_int();\n  int x = unknown_int();\n  int y = unknown_int();\n  int k = unknown_int();\n  j=0;\n  if (!(x+y==k)) return 0;\n  while (unknown_bool()) {\n    if(j==i) {x++;y--;} else {y++;x--;} j++;\n  }\n  {;\n//@ assert(x+y==k);\n}\n\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= j <= i;\nloop invariant i >= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == k ==> j == i;\nloop invariant x + y == k ==> j >= i;\nloop invariant x + y == k ==> x >= y;\nloop invariant x + y == k ==> y >= 0;\nloop invariant x + y == k ==> j == i + 1;\nloop invariant x + y == k ==> x >= y + 1;\nloop invariant x + y == k ==> y >= 1;\nloop invariant x + y == k ==> j == i + 2;\nloop invariant x + y == k ==> x >= y + 2;\nloop invariant x + y == k ==> y >= 2;\nloop invariant x + y == k ==> j == i + 3;\nloop invariant x + y == k ==> x >= y + 3;\nloop invariant x + y == k ==> y >= 3;\nloop invariant x + y == k ==> j == i + 4;\nloop invariant x + y == k ==> x >= y + 4;\nloop invariant x + y == k ==> y >= 4;\nloop invariant x + y == k ==> j == i + 5;\nloop invariant x + y == k ==> x >= y + 5;\nloop invariant x + y == k ==> y >= 5;\nloop invariant x + y == k ==> j == i + 6;\nloop invariant x + y == k ==> x >= y + 6;\nloop invariant x + y == k ==> y >= 6;\nloop invariant x + y == k ==> j == i + 7;\nloop invariant x + y == k ==> x >= y + 7;\nloop invariant x + y == k ==> y >= 7;\nloop invariant x + y == k ==> j == i + 8;\nloop invariant x + y == k ==> x >= y + 8;\nloop invariant x + y == k ==> y >= 8;\nloop invariant x + y == k ==> j == i + 9;\nloop invariant x + y == k ==> x >= y + 9;\nloop invariant x + y == k ==> y >= 9;\nloop invariant x + y == k ==> j == i + 10;\nloop invariant x + y == k ==> x >= y + 10;\nloop invariant x + y == k ==> y >= 10;\nloop invariant x + y == k ==> j == i + 11;\nloop invariant x + y == k ==> x >= y + 11;\nloop invariant x + y == k ==> y >= 11;\nloop invariant x + y == k ==> j == i + 12;\nloop invariant x + y == k ==> x >= y + 12;\nloop invariant x + y == k ==> y >= 12;\nloop invariant x + y == k ==> j == i + 13;\nloop invariant x + y == k ==> x >= y + 13;\nloop invariant x + y == k ==> y >= 13;\nloop invariant x + y == k ==> j == i + 14;\nloop invariant x + y == k ==> x >= y + 14;\nloop invariant x + y == k ==> y >= 14;\nloop invariant x + y == k ==> j == i + 15;\nloop invariant x + y == k ==> x >= y + 15;\nloop invariant x + y == k ==> y >= 15;\nloop invariant x + y == k ==> j == i + 16;\nloop invariant x + y == k ==> x >= y + 16;\nloop invariant x + y == k ==> y >= 16;\nloop invariant x + y == k ==> j == i + 17;\nloop invariant x + y == k ==> x >= y + 17;\nloop invariant x + y == k ==> y >= 17;\nloop invariant x + y == k ==> j == i + 18;\nloop invariant x + y == k ==> x >= y + 18;\nloop invariant x + y == k ==> y >= 18;\nloop invariant x + y == k ==> j == i + 19;\nloop invariant x + y == k ==> x >= y + 19;\nloop invariant x + y == k ==> y >= 19;\nloop invariant x + y == k ==> j == i + 20;\nloop invariant x + y == k ==> x >= y + 20;\nloop invariant x + y == k ==> y >= 20;\nloop invariant x + y == k ==> j == i + 21;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x + y == k;\nloop invariant j >= 0;\nloop invariant i >= 0;\nloop invariant j <= i;\nloop invariant i - j <= k;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= j <= 2147483647;\nloop invariant 1 <= i <= 2147483647;\nloop invariant 1 <= x <= 2147483647;\nloop invariant 1 <= y <= 2147483647;\nloop invariant 1 <= k <= 2147483647;\nloop invariant k >= x;\nloop invariant k >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant x >= (j + i);\nloop invariant y >= (j - i);\nloop invariant (j == i) ==> (x >= y);\nloop invariant (j != i) ==> (y >= x);\nloop invariant (j == i) ==> (x == y);\nloop invariant (j != i) ==> (x != y);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= i; loop invariant x == k - y; loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= i implies x+y==k;\nloop invariant 0 <= j <= i implies (if (j==i) then x >= y else x <= y);\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (if (j==i) then x+y<k else x+y>k);\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= j <= i;\nloop invariant x = k - y;\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= i;\nloop invariant x - y == k - j;\nloop invariant x >= k - i;\nloop invariant y <= k;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant j <= i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= i;\nloop invariant x+y==k;\nloop invariant x+y==k ==> x+y==k;\nloop invariant x+y==k ==> y==k-x;\nloop invariant x+y==k ==> x<=k;\nloop invariant x+y==k ==> y>=-k;\nloop invariant x+y==k ==> i>=j;\nloop invariant x+y==k ==> j>=0;\nloop invariant x+y==k ==> i>=0;\nloop invariant x+y==k ==> (j==i) ==> x==y;\nloop invariant x+y==k ==> (j==i) ==> x==y+1;\nloop invariant x+y==k ==> (j==i) ==> x==y-1;\nloop invariant x+y==k ==> (j==i) ==> x==y-1;\nloop invariant x+y==k ==> (j==i) ==> x==y+1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y;\nloop invariant x+y==k ==> !((j==i)) ==> x==y+1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y-1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y-1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y+1;\nloop invariant x+y==k ==> (j==i) ==> x==y;\nloop invariant x+y==k ==> (j==i) ==> x==y+1;\nloop invariant x+y==k ==> (j==i) ==> x==y-1;\nloop invariant x+y==k ==> (j==i) ==> x==y-1;\nloop invariant x+y==k ==> (j==i) ==> x==y+1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y;\nloop invariant x+y==k ==> !((j==i)) ==> x==y+1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y-1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y-1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y+1;\nloop invariant x+y==k ==> (j==i) ==> x==y;\nloop invariant x+y==k ==> (j==i) ==> x==y+1;\nloop invariant x+y==k ==> (j==i) ==> x==y-1;\nloop invariant x+y==k ==> (j==i) ==> x==y-1;\nloop invariant x+y==k ==> (j==i) ==> x==y+1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y;\nloop invariant x+y==k ==> !((j==i)) ==> x==y+1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y-1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y-1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y+1;\nloop invariant x+y==k ==> (j==i) ==> x==y;\nloop invariant x+y==k ==> (j==i) ==> x==y+1;\nloop invariant x+y==k ==> (j==i) ==> x==y-1;\nloop invariant x+y==k ==> (j==i) ==> x==y-1;\nloop invariant x+y==k ==> (j==i) ==> x==y+1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y;\nloop invariant x+y==k ==> !((j==i)) ==> x==y+1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y-1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y-1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y+1;\nloop invariant x+y==k ==> (j==i) ==> x==y;\nloop invariant x+y==k ==> (j==i) ==> x==y+1;\nloop invariant x+y==k ==> (j==i) ==> x==y-1;\nloop invariant x+y==k ==> (j==i) ==> x==y-1;\nloop invariant x+y==k ==> (j==i) ==> x==y+1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y;\nloop invariant x+y==k ==> !((j==i)) ==> x==y+1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= j <= i;\nloop invariant -1 <= x <= k;\nloop invariant -1 <= y <= k;\nloop invariant x+y==k ==> j==i;\nloop invariant k<=x+y ==> j<=i;\nloop invariant x+y<=k ==> j>=i;\nloop invariant x+y>=k ==> j<=i;\nloop invariant unknown_bool() ==> j==i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= k;\nloop invariant 0 <= y <= k;\nloop invariant x+y==k;\nloop invariant j==i;\nloop invariant j>=0;\nloop invariant i>=0;\nloop invariant x>=0;\nloop invariant y>=0;\nloop invariant k>=0;\nloop invariant x+y==k ==> x+y==k;\nloop invariant j==i ==> j==i;\nloop invariant j>=0 ==> j>=0;\nloop invariant i>=0 ==> i>=0;\nloop invariant x>=0 ==> x>=0;\nloop invariant y>=0 ==> y>=0;\nloop invariant k>=0 ==> k>=0;\nloop invariant x+y==k ==> x+y==k ==> x+y==k;\nloop invariant j==i ==> j==i ==> j==i;\nloop invariant j>=0 ==> j>=0 ==> j>=0;\nloop invariant i>=0 ==> i>=0 ==> i>=0;\nloop invariant x>=0 ==> x>=0 ==> x>=0;\nloop invariant y>=0 ==> y>=0 ==> y>=0;\nloop invariant k>=0 ==> k>=0 ==> k>=0;\nloop invariant x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\nloop invariant j==i ==> j==i ==> j==i ==> j==i;\nloop invariant j>=0 ==> j>=0 ==> j>=0 ==> j>=0;\nloop invariant i>=0 ==> i>=0 ==> i>=0 ==> i>=0;\nloop invariant x>=0 ==> x>=0 ==> x>=0 ==> x>=0;\nloop invariant y>=0 ==> y>=0 ==> y>=0 ==> y>=0;\nloop invariant k>=0 ==> k>=0 ==> k>=0 ==> k>=0;\nloop invariant x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\nloop invariant j==i ==> j==i ==> j==i ==> j==i ==> j==i;\nloop invariant j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0;\nloop invariant i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0;\nloop invariant x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0;\nloop invariant y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0;\nloop invariant k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0;\nloop invariant x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\nloop invariant j==i ==> j==i ==> j==i ==> j==i ==> j==i ==> j==i;\nloop invariant j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0;\nloop invariant i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0;\nloop invariant x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0;\nloop invariant y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0;\nloop invariant k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0;\nloop invariant x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\nloop invariant j==i ==> j==i ==> j==i ==> j==i ==> j==i ==> j==i ==> j==i;\nloop invariant j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0;\nloop invariant i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0;\nloop invariant x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0;\nloop invariant y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0;\nloop invariant k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0;\nloop invariant x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= j;\nloop invariant 1 <= j <= k;\nloop invariant x >= (j * (j - 1)) / 2;\nloop invariant y >= (j * (j - 1)) / 2;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant x + y >= k;\nloop invariant x + y <= k;\nloop invariant x + y == k ==> (x >= y);\nloop invariant x + y == k ==> (x + y >= k);\nloop invariant x + y == k ==> (x + y <= k);\nloop invariant x + y == k ==> (x == k - y);\nloop invariant x + y == k ==> (y == k - x);\nloop invariant x + y == k ==> (x >= y ==> (x + y >= k));\nloop invariant x + y == k ==> (x + y == k ==> (x >= y));\nloop invariant x + y == k ==> (x + y == k ==> (x + y <= k));\nloop invariant x + y == k ==> (x + y == k ==> (x == k - y));\nloop invariant x + y == k ==> (x + y == k ==> (y == k - x));\nloop invariant x + y == k ==> (x + y >= k ==> (x >= y));\nloop invariant x + y == k ==> (x + y <= k ==> (x >= y));\nloop invariant x + y == k ==> (x == k - y ==> (x >= y));\nloop invariant x + y == k ==> (y == k - x ==> (x >= y));\nloop invariant x + y == k ==> (x + y >= k ==> (x + y <= k));\nloop invariant x + y == k ==> (x + y <= k ==> (x + y >= k));\nloop invariant x + y == k ==> (x == k - y ==> (x + y >= k));\nloop invariant x + y == k ==> (y == k - x ==> (x + y >= k));\nloop invariant x + y == k ==> (x + y <= k ==> (x + y <= k));\nloop invariant x + y == k ==> (x == k - y ==> (x + y <= k));\nloop invariant x + y == k ==> (y == k - x ==> (x + y <= k));\nloop invariant x + y == k ==> (x + y >= k ==> (x == k - y));\nloop invariant x + y == k ==> (x + y <= k ==> (x == k - y));\nloop invariant x + y == k ==> (x == k - y ==> (x == k - y));\nloop invariant x + y == k ==> (y == k - x ==> (x == k - y));\nloop invariant x + y == k ==> (x + y >= k ==> (y == k - x));\nloop invariant x + y == k ==> (x + y <= k ==> (y == k - x));\nloop invariant x + y == k ==> (x == k - y ==> (y == k - x));\nloop invariant x + y == k ==> (y == k - x ==> (y == k - x));\nloop invariant x + y == k ==> (x + y >= k ==> (x + y <= k));\nloop invariant x + y == k ==> (x + y <= k ==> (x + y >= k));\nloop invariant x + y == k ==> (x == k - y ==> (x + y <= k));\nloop invariant x + y == k ==> (y == k - x ==> (x + y <= k));\nloop invariant x + y == k ==> (x + y >= k ==> (x == k - y));\nloop invariant x + y == k ==> (x + y <= k ==> (y == k - x));\nloop invariant x + y == k ==> (x == k - y ==> (x + y <= k));\nloop invariant x + y == k ==> (y == k - x ==> (y == k - x));\nloop invariant x + y == k ==> (x + y >= k ==> (y == k - x));\nloop invariant x + y == k ==> (x + y <= k ==> (x + y >= k));\nloop invariant x + y == k ==> (x == k - y ==> (x + y <= k));\nloop invariant x + y == k ==> (y == k - x ==> (x + y <= k));\nloop invariant x + y == k ==> (x + y >= k ==> (x == k - y));\nloop invariant x + y == k ==> (x + y <= k ==> (y == k - x));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= i;\nloop invariant -1073741824 <= x <= 1073741823;\nloop invariant -1073741824 <= y <= 1073741823;\nloop invariant -1073741824 <= k <= 1073741823;\nloop invariant x+y==k;\n*/\n```",
            "```\n/*@\nloop invariant x + y == k;\nloop invariant j >= 0;\nloop invariant j <= i;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= i;\nloop invariant x+y==k;\nloop invariant (j==i) ==> (x==y+1);\nloop invariant (j!=i) ==> (y==x+1);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= j <= i;\nloop invariant x+y==k;\nloop invariant 0 <= x <= k;\nloop invariant 0 <= y <= k;\nloop invariant x+y==k ==> x==k || y==0;\nloop invariant x+y==k ==> x==k || y==1;\nloop invariant x+y==k ==> x==k && y==0;\nloop invariant x+y==k ==> x==k && y==1;\nloop invariant x+y==k ==> x==k && y==2;\nloop invariant x+y==k ==> x==k && y==3;\nloop invariant x+y==k ==> x==k && y==4;\nloop invariant x+y==k ==> x==k && y==5;\nloop invariant x+y==k ==> x==k && y==6;\nloop invariant x+y==k ==> x==k && y==7;\nloop invariant x+y==k ==> x==k && y==8;\nloop invariant x+y==k ==> x==k && y==9;\nloop invariant x+y==k ==> x==k && y==10;\nloop invariant x+y==k ==> x==k && y==11;\nloop invariant x+y==k ==> x==k && y==12;\nloop invariant x+y==k ==> x==k && y==13;\nloop invariant x+y==k ==> x==k && y==14;\nloop invariant x+y==k ==> x==k && y==15;\nloop invariant x+y==k ==> x==k && y==16;\nloop invariant x+y==k ==> x==k && y==17;\nloop invariant x+y==k ==> x==k && y==18;\nloop invariant x+y==k ==> x==k && y==19;\nloop invariant x+y==k ==> x==k && y==20;\nloop invariant x+y==k ==> x==k && y==21;\nloop invariant x+y==k ==> x==k && y==22;\nloop invariant x+y==k ==> x==k && y==23;\nloop invariant x+y==k ==> x==k && y==24;\nloop invariant x+y==k ==> x==k && y==25;\nloop invariant x+y==k ==> x==k && y==26;\nloop invariant x+y==k ==> x==k && y==27;\nloop invariant x+y==k ==> x==k && y==28;\nloop invariant x+y==k ==> x==k && y==29;\nloop invariant x+y==k ==> x==k && y==30;\nloop invariant x+y==k ==> x==k && y==31;\nloop invariant x+y==k ==> x==k && y==32;\nloop invariant x+y==k ==> x==k && y==33;\nloop invariant x+y==k ==> x==k && y==34;\nloop invariant x+y==k ==> x==k && y==35;\nloop invariant x+y==k ==> x==k && y==36;\nloop invariant x+y==k ==> x==k && y==37;\nloop invariant x+y==k ==> x==k && y==38;\nloop invariant x+y==k ==> x==k && y==39;\nloop invariant x+y==k ==> x==k && y==40;\nloop invariant x+y==k ==> x==k && y==41;\nloop invariant x+y==k ==> x==k && y==42;\nloop invariant x+y==k ==> x==k && y==43;\nloop invariant x+y==k ==> x==k && y==44;\nloop invariant x+y==k ==> x==k && y==45;\nloop invariant x+y==k ==> x==k && y==46;\nloop invariant x+y==k ==> x==k && y==47;\nloop invariant x+y==k ==> x==k && y==48;\nloop invariant x+y==k ==> x==k && y==49;\nloop invariant x+y==k ==> x==k && y==50;\nloop invariant x+y==k ==> x==k && y==51;\nloop invariant x+y==k ==> x==k && y==52;\nloop invariant x+y==k ==> x==k && y==53;\nloop invariant x+y==k ==> x==k && y==54;\nloop invariant x+y==k ==> x==k && y==55;\nloop invariant x+y==k ==> x==k && y==56;\nloop invariant x+y==k ==> x==k && y==57;\nloop invariant x+y==k ==> x==k && y==58;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 12,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= i;\nloop invariant i >= j;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x + y == k ==> j == i;\nloop invariant x + y == k ==> j >= i;\nloop invariant x + y == k ==> x >= y;\nloop invariant x + y == k ==> y >= 0;\nloop invariant x + y == k ==> j == i + 1;\nloop invariant x + y == k ==> x >= y + 1;\nloop invariant x + y == k ==> y >= 1;\nloop invariant x + y == k ==> j == i + 2;\nloop invariant x + y == k ==> x >= y + 2;\nloop invariant x + y == k ==> y >= 2;\nloop invariant x + y == k ==> j == i + 3;\nloop invariant x + y == k ==> x >= y + 3;\nloop invariant x + y == k ==> y >= 3;\nloop invariant x + y == k ==> j == i + 4;\nloop invariant x + y == k ==> x >= y + 4;\nloop invariant x + y == k ==> y >= 4;\nloop invariant x + y == k ==> j == i + 5;\nloop invariant x + y == k ==> x >= y + 5;\nloop invariant x + y == k ==> y >= 5;\nloop invariant x + y == k ==> j == i + 6;\nloop invariant x + y == k ==> x >= y + 6;\nloop invariant x + y == k ==> y >= 6;\nloop invariant x + y == k ==> j == i + 7;\nloop invariant x + y == k ==> x >= y + 7;\nloop invariant x + y == k ==> y >= 7;\nloop invariant x + y == k ==> j == i + 8;\nloop invariant x + y == k ==> x >= y + 8;\nloop invariant x + y == k ==> y >= 8;\nloop invariant x + y == k ==> j == i + 9;\nloop invariant x + y == k ==> x >= y + 9;\nloop invariant x + y == k ==> y >= 9;\nloop invariant x + y == k ==> j == i + 10;\nloop invariant x + y == k ==> x >= y + 10;\nloop invariant x + y == k ==> y >= 10;\nloop invariant x + y == k ==> j == i + 11;\nloop invariant x + y == k ==> x >= y + 11;\nloop invariant x + y == k ==> y >= 11;\nloop invariant x + y == k ==> j == i + 12;\nloop invariant x + y == k ==> x >= y + 12;\nloop invariant x + y == k ==> y >= 12;\nloop invariant x + y == k ==> j == i + 13;\nloop invariant x + y == k ==> x >= y + 13;\nloop invariant x + y == k ==> y >= 13;\nloop invariant x + y == k ==> j == i + 14;\nloop invariant x + y == k ==> x >= y + 14;\nloop invariant x + y == k ==> y >= 14;\nloop invariant x + y == k ==> j == i + 15;\nloop invariant x + y == k ==> x >= y + 15;\nloop invariant x + y == k ==> y >= 15;\nloop invariant x + y == k ==> j == i + 16;\nloop invariant x + y == k ==> x >= y + 16;\nloop invariant x + y == k ==> y >= 16;\nloop invariant x + y == k ==> j == i + 17;\nloop invariant x + y == k ==> x >= y + 17;\nloop invariant x + y == k ==> y >= 17;\nloop invariant x + y == k ==> j == i + 18;\nloop invariant x + y == k ==> x >= y + 18;\nloop invariant x + y == k ==> y >= 18;\nloop invariant x + y == k ==> j == i + 19;\nloop invariant x + y == k ==> x >= y + 19;\nloop invariant x + y == k ==> y >= 19;\nloop invariant x + y == k ==> j == i + 20;\nloop invariant x + y == k ==> x >= y + 20;\nloop invariant x + y == k ==> y >= 20;\nloop invariant x + y == k ==> j == i + 21;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int i = unknown_int();\n  int x = unknown_int();\n  int y = unknown_int();\n  int k = unknown_int();\n  j=0;\n  if (!(x+y==k)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if(j==i) {x++;y--;} else {y++;x--;} j++;\n  }\n  {;\n//@ assert(x+y==k);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= y;\nloop invariant x + y == k;\nloop invariant j >= 0;\nloop invariant i >= 0;\nloop invariant j <= i;\nloop invariant i - j <= k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int i = unknown_int();\n  int x = unknown_int();\n  int y = unknown_int();\n  int k = unknown_int();\n  j=0;\n  if (!(x+y==k)) return 0;\n  /*@\n\n\nloop invariant i3: x + y == k;\nloop invariant i4: j >= 0;\n\n\n\n*/\nwhile (unknown_bool()) {\n    if(j==i) {x++;y--;} else {y++;x--;} j++;\n  }\n  {;\n//@ assert(x+y==k);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= j <= 2147483647;\nloop invariant 1 <= i <= 2147483647;\nloop invariant 1 <= x <= 2147483647;\nloop invariant 1 <= y <= 2147483647;\nloop invariant 1 <= k <= 2147483647;\nloop invariant k >= x;\nloop invariant k >= y;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant x >= y;\nloop invariant x >= (j + i);\nloop invariant y >= (j - i);\nloop invariant (j == i) ==> (x >= y);\nloop invariant (j != i) ==> (y >= x);\nloop invariant (j == i) ==> (x == y);\nloop invariant (j != i) ==> (x != y);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int i = unknown_int();\n  int x = unknown_int();\n  int y = unknown_int();\n  int k = unknown_int();\n  j=0;\n  if (!(x+y==k)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if(j==i) {x++;y--;} else {y++;x--;} j++;\n  }\n  {;\n//@ assert(x+y==k);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= i; loop invariant x == k - y; loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int i = unknown_int();\n  int x = unknown_int();\n  int y = unknown_int();\n  int k = unknown_int();\n  j=0;\n  if (!(x+y==k)) return 0;\n  /*@\n\n*/\nwhile (unknown_bool()) {\n    if(j==i) {x++;y--;} else {y++;x--;} j++;\n  }\n  {;\n//@ assert(x+y==k);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= i implies x+y==k;\nloop invariant 0 <= j <= i implies (if (j==i) then x >= y else x <= y);\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (if (j==i) then x+y<k else x+y>k);\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\nloop invariant 0 <= j <= i implies (x+y)==k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int i = unknown_int();\n  int x = unknown_int();\n  int y = unknown_int();\n  int k = unknown_int();\n  j=0;\n  if (!(x+y==k)) return 0;\n  /*@\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if(j==i) {x++;y--;} else {y++;x--;} j++;\n  }\n  {;\n//@ assert(x+y==k);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 1 <= j <= i;\nloop invariant x = k - y;\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\nloop invariant (j != i ==> x >= 0 && y > 0);\nloop invariant (j == i ==> x > 0 && y >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int i = unknown_int();\n  int x = unknown_int();\n  int y = unknown_int();\n  int k = unknown_int();\n  j=0;\n  if (!(x+y==k)) return 0;\n  /*@\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if(j==i) {x++;y--;} else {y++;x--;} j++;\n  }\n  {;\n//@ assert(x+y==k);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= i;\nloop invariant x - y == k - j;\nloop invariant x >= k - i;\nloop invariant y <= k;\nloop invariant x >= 0;\nloop invariant y >= 0;\nloop invariant j <= i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int i = unknown_int();\n  int x = unknown_int();\n  int y = unknown_int();\n  int k = unknown_int();\n  j=0;\n  if (!(x+y==k)) return 0;\n  /*@\n\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if(j==i) {x++;y--;} else {y++;x--;} j++;\n  }\n  {;\n//@ assert(x+y==k);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= i;\nloop invariant x+y==k;\nloop invariant x+y==k ==> x+y==k;\nloop invariant x+y==k ==> y==k-x;\nloop invariant x+y==k ==> x<=k;\nloop invariant x+y==k ==> y>=-k;\nloop invariant x+y==k ==> i>=j;\nloop invariant x+y==k ==> j>=0;\nloop invariant x+y==k ==> i>=0;\nloop invariant x+y==k ==> (j==i) ==> x==y;\nloop invariant x+y==k ==> (j==i) ==> x==y+1;\nloop invariant x+y==k ==> (j==i) ==> x==y-1;\nloop invariant x+y==k ==> (j==i) ==> x==y-1;\nloop invariant x+y==k ==> (j==i) ==> x==y+1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y;\nloop invariant x+y==k ==> !((j==i)) ==> x==y+1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y-1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y-1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y+1;\nloop invariant x+y==k ==> (j==i) ==> x==y;\nloop invariant x+y==k ==> (j==i) ==> x==y+1;\nloop invariant x+y==k ==> (j==i) ==> x==y-1;\nloop invariant x+y==k ==> (j==i) ==> x==y-1;\nloop invariant x+y==k ==> (j==i) ==> x==y+1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y;\nloop invariant x+y==k ==> !((j==i)) ==> x==y+1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y-1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y-1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y+1;\nloop invariant x+y==k ==> (j==i) ==> x==y;\nloop invariant x+y==k ==> (j==i) ==> x==y+1;\nloop invariant x+y==k ==> (j==i) ==> x==y-1;\nloop invariant x+y==k ==> (j==i) ==> x==y-1;\nloop invariant x+y==k ==> (j==i) ==> x==y+1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y;\nloop invariant x+y==k ==> !((j==i)) ==> x==y+1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y-1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y-1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y+1;\nloop invariant x+y==k ==> (j==i) ==> x==y;\nloop invariant x+y==k ==> (j==i) ==> x==y+1;\nloop invariant x+y==k ==> (j==i) ==> x==y-1;\nloop invariant x+y==k ==> (j==i) ==> x==y-1;\nloop invariant x+y==k ==> (j==i) ==> x==y+1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y;\nloop invariant x+y==k ==> !((j==i)) ==> x==y+1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y-1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y-1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y+1;\nloop invariant x+y==k ==> (j==i) ==> x==y;\nloop invariant x+y==k ==> (j==i) ==> x==y+1;\nloop invariant x+y==k ==> (j==i) ==> x==y-1;\nloop invariant x+y==k ==> (j==i) ==> x==y-1;\nloop invariant x+y==k ==> (j==i) ==> x==y+1;\nloop invariant x+y==k ==> !((j==i)) ==> x==y;\nloop invariant x+y==k ==> !((j==i)) ==> x==y+1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int i = unknown_int();\n  int x = unknown_int();\n  int y = unknown_int();\n  int k = unknown_int();\n  j=0;\n  if (!(x+y==k)) return 0;\n  /*@\n\nloop invariant i2: x+y==k;\nloop invariant i3: x+y==k ==> x+y==k;\nloop invariant i4: x+y==k ==> y==k-x;\n\n\n\nloop invariant i8: x+y==k ==> j>=0;\n\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if(j==i) {x++;y--;} else {y++;x--;} j++;\n  }\n  {;\n//@ assert(x+y==k);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 1 <= j <= i;\nloop invariant -1 <= x <= k;\nloop invariant -1 <= y <= k;\nloop invariant x+y==k ==> j==i;\nloop invariant k<=x+y ==> j<=i;\nloop invariant x+y<=k ==> j>=i;\nloop invariant x+y>=k ==> j<=i;\nloop invariant unknown_bool() ==> j==i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int i = unknown_int();\n  int x = unknown_int();\n  int y = unknown_int();\n  int k = unknown_int();\n  j=0;\n  if (!(x+y==k)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if(j==i) {x++;y--;} else {y++;x--;} j++;\n  }\n  {;\n//@ assert(x+y==k);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= k;\nloop invariant 0 <= y <= k;\nloop invariant x+y==k;\nloop invariant j==i;\nloop invariant j>=0;\nloop invariant i>=0;\nloop invariant x>=0;\nloop invariant y>=0;\nloop invariant k>=0;\nloop invariant x+y==k ==> x+y==k;\nloop invariant j==i ==> j==i;\nloop invariant j>=0 ==> j>=0;\nloop invariant i>=0 ==> i>=0;\nloop invariant x>=0 ==> x>=0;\nloop invariant y>=0 ==> y>=0;\nloop invariant k>=0 ==> k>=0;\nloop invariant x+y==k ==> x+y==k ==> x+y==k;\nloop invariant j==i ==> j==i ==> j==i;\nloop invariant j>=0 ==> j>=0 ==> j>=0;\nloop invariant i>=0 ==> i>=0 ==> i>=0;\nloop invariant x>=0 ==> x>=0 ==> x>=0;\nloop invariant y>=0 ==> y>=0 ==> y>=0;\nloop invariant k>=0 ==> k>=0 ==> k>=0;\nloop invariant x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\nloop invariant j==i ==> j==i ==> j==i ==> j==i;\nloop invariant j>=0 ==> j>=0 ==> j>=0 ==> j>=0;\nloop invariant i>=0 ==> i>=0 ==> i>=0 ==> i>=0;\nloop invariant x>=0 ==> x>=0 ==> x>=0 ==> x>=0;\nloop invariant y>=0 ==> y>=0 ==> y>=0 ==> y>=0;\nloop invariant k>=0 ==> k>=0 ==> k>=0 ==> k>=0;\nloop invariant x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\nloop invariant j==i ==> j==i ==> j==i ==> j==i ==> j==i;\nloop invariant j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0;\nloop invariant i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0;\nloop invariant x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0;\nloop invariant y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0;\nloop invariant k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0;\nloop invariant x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\nloop invariant j==i ==> j==i ==> j==i ==> j==i ==> j==i ==> j==i;\nloop invariant j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0;\nloop invariant i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0;\nloop invariant x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0;\nloop invariant y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0;\nloop invariant k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0;\nloop invariant x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\nloop invariant j==i ==> j==i ==> j==i ==> j==i ==> j==i ==> j==i ==> j==i;\nloop invariant j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0;\nloop invariant i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0;\nloop invariant x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0;\nloop invariant y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0;\nloop invariant k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0;\nloop invariant x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int i = unknown_int();\n  int x = unknown_int();\n  int y = unknown_int();\n  int k = unknown_int();\n  j=0;\n  if (!(x+y==k)) return 0;\n  /*@\n\n\nloop invariant i3: x+y==k;\n\nloop invariant i5: j>=0;\n\n\n\n\nloop invariant i10: x+y==k ==> x+y==k;\nloop invariant i11: j==i ==> j==i;\nloop invariant i12: j>=0 ==> j>=0;\nloop invariant i13: i>=0 ==> i>=0;\nloop invariant i14: x>=0 ==> x>=0;\nloop invariant i15: y>=0 ==> y>=0;\nloop invariant i16: k>=0 ==> k>=0;\nloop invariant i17: x+y==k ==> x+y==k ==> x+y==k;\nloop invariant i18: j==i ==> j==i ==> j==i;\nloop invariant i19: j>=0 ==> j>=0 ==> j>=0;\nloop invariant i20: i>=0 ==> i>=0 ==> i>=0;\nloop invariant i21: x>=0 ==> x>=0 ==> x>=0;\nloop invariant i22: y>=0 ==> y>=0 ==> y>=0;\nloop invariant i23: k>=0 ==> k>=0 ==> k>=0;\nloop invariant i24: x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\nloop invariant i25: j==i ==> j==i ==> j==i ==> j==i;\nloop invariant i26: j>=0 ==> j>=0 ==> j>=0 ==> j>=0;\nloop invariant i27: i>=0 ==> i>=0 ==> i>=0 ==> i>=0;\nloop invariant i28: x>=0 ==> x>=0 ==> x>=0 ==> x>=0;\nloop invariant i29: y>=0 ==> y>=0 ==> y>=0 ==> y>=0;\nloop invariant i30: k>=0 ==> k>=0 ==> k>=0 ==> k>=0;\nloop invariant i31: x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\nloop invariant i32: j==i ==> j==i ==> j==i ==> j==i ==> j==i;\nloop invariant i33: j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0;\nloop invariant i34: i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0;\nloop invariant i35: x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0;\nloop invariant i36: y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0;\nloop invariant i37: k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0;\nloop invariant i38: x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\nloop invariant i39: j==i ==> j==i ==> j==i ==> j==i ==> j==i ==> j==i;\nloop invariant i40: j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0;\nloop invariant i41: i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0;\nloop invariant i42: x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0;\nloop invariant i43: y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0;\nloop invariant i44: k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0;\nloop invariant i45: x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\nloop invariant i46: j==i ==> j==i ==> j==i ==> j==i ==> j==i ==> j==i ==> j==i;\nloop invariant i47: j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0;\nloop invariant i48: i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0;\nloop invariant i49: x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0;\nloop invariant i50: y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0;\nloop invariant i51: k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0;\nloop invariant i52: x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\n*/\nwhile (unknown_bool()) {\n    if(j==i) {x++;y--;} else {y++;x--;} j++;\n  }\n  {;\n//@ assert(x+y==k);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 9,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= j;\nloop invariant 1 <= j <= k;\nloop invariant x >= (j * (j - 1)) / 2;\nloop invariant y >= (j * (j - 1)) / 2;\nloop invariant x + y == k;\nloop invariant x >= y;\nloop invariant x + y >= k;\nloop invariant x + y <= k;\nloop invariant x + y == k ==> (x >= y);\nloop invariant x + y == k ==> (x + y >= k);\nloop invariant x + y == k ==> (x + y <= k);\nloop invariant x + y == k ==> (x == k - y);\nloop invariant x + y == k ==> (y == k - x);\nloop invariant x + y == k ==> (x >= y ==> (x + y >= k));\nloop invariant x + y == k ==> (x + y == k ==> (x >= y));\nloop invariant x + y == k ==> (x + y == k ==> (x + y <= k));\nloop invariant x + y == k ==> (x + y == k ==> (x == k - y));\nloop invariant x + y == k ==> (x + y == k ==> (y == k - x));\nloop invariant x + y == k ==> (x + y >= k ==> (x >= y));\nloop invariant x + y == k ==> (x + y <= k ==> (x >= y));\nloop invariant x + y == k ==> (x == k - y ==> (x >= y));\nloop invariant x + y == k ==> (y == k - x ==> (x >= y));\nloop invariant x + y == k ==> (x + y >= k ==> (x + y <= k));\nloop invariant x + y == k ==> (x + y <= k ==> (x + y >= k));\nloop invariant x + y == k ==> (x == k - y ==> (x + y >= k));\nloop invariant x + y == k ==> (y == k - x ==> (x + y >= k));\nloop invariant x + y == k ==> (x + y <= k ==> (x + y <= k));\nloop invariant x + y == k ==> (x == k - y ==> (x + y <= k));\nloop invariant x + y == k ==> (y == k - x ==> (x + y <= k));\nloop invariant x + y == k ==> (x + y >= k ==> (x == k - y));\nloop invariant x + y == k ==> (x + y <= k ==> (x == k - y));\nloop invariant x + y == k ==> (x == k - y ==> (x == k - y));\nloop invariant x + y == k ==> (y == k - x ==> (x == k - y));\nloop invariant x + y == k ==> (x + y >= k ==> (y == k - x));\nloop invariant x + y == k ==> (x + y <= k ==> (y == k - x));\nloop invariant x + y == k ==> (x == k - y ==> (y == k - x));\nloop invariant x + y == k ==> (y == k - x ==> (y == k - x));\nloop invariant x + y == k ==> (x + y >= k ==> (x + y <= k));\nloop invariant x + y == k ==> (x + y <= k ==> (x + y >= k));\nloop invariant x + y == k ==> (x == k - y ==> (x + y <= k));\nloop invariant x + y == k ==> (y == k - x ==> (x + y <= k));\nloop invariant x + y == k ==> (x + y >= k ==> (x == k - y));\nloop invariant x + y == k ==> (x + y <= k ==> (y == k - x));\nloop invariant x + y == k ==> (x == k - y ==> (x + y <= k));\nloop invariant x + y == k ==> (y == k - x ==> (y == k - x));\nloop invariant x + y == k ==> (x + y >= k ==> (y == k - x));\nloop invariant x + y == k ==> (x + y <= k ==> (x + y >= k));\nloop invariant x + y == k ==> (x == k - y ==> (x + y <= k));\nloop invariant x + y == k ==> (y == k - x ==> (x + y <= k));\nloop invariant x + y == k ==> (x + y >= k ==> (x == k - y));\nloop invariant x + y == k ==> (x + y <= k ==> (y == k - x));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int i = unknown_int();\n  int x = unknown_int();\n  int y = unknown_int();\n  int k = unknown_int();\n  j=0;\n  if (!(x+y==k)) return 0;\n  /*@\n\n\n\n\nloop invariant i5: x + y == k;\n\nloop invariant i7: x + y >= k;\nloop invariant i8: x + y <= k;\n\nloop invariant i10: x + y == k ==> (x + y >= k);\nloop invariant i11: x + y == k ==> (x + y <= k);\nloop invariant i12: x + y == k ==> (x == k - y);\nloop invariant i13: x + y == k ==> (y == k - x);\nloop invariant i14: x + y == k ==> (x >= y ==> (x + y >= k));\n\nloop invariant i16: x + y == k ==> (x + y == k ==> (x + y <= k));\nloop invariant i17: x + y == k ==> (x + y == k ==> (x == k - y));\nloop invariant i18: x + y == k ==> (x + y == k ==> (y == k - x));\n\n\n\n\nloop invariant i23: x + y == k ==> (x + y >= k ==> (x + y <= k));\nloop invariant i24: x + y == k ==> (x + y <= k ==> (x + y >= k));\nloop invariant i25: x + y == k ==> (x == k - y ==> (x + y >= k));\nloop invariant i26: x + y == k ==> (y == k - x ==> (x + y >= k));\nloop invariant i27: x + y == k ==> (x + y <= k ==> (x + y <= k));\nloop invariant i28: x + y == k ==> (x == k - y ==> (x + y <= k));\nloop invariant i29: x + y == k ==> (y == k - x ==> (x + y <= k));\nloop invariant i30: x + y == k ==> (x + y >= k ==> (x == k - y));\nloop invariant i31: x + y == k ==> (x + y <= k ==> (x == k - y));\nloop invariant i32: x + y == k ==> (x == k - y ==> (x == k - y));\nloop invariant i33: x + y == k ==> (y == k - x ==> (x == k - y));\nloop invariant i34: x + y == k ==> (x + y >= k ==> (y == k - x));\nloop invariant i35: x + y == k ==> (x + y <= k ==> (y == k - x));\nloop invariant i36: x + y == k ==> (x == k - y ==> (y == k - x));\nloop invariant i37: x + y == k ==> (y == k - x ==> (y == k - x));\n*/\nwhile (unknown_bool()) {\n    if(j==i) {x++;y--;} else {y++;x--;} j++;\n  }\n  {;\n//@ assert(x+y==k);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= i;\nloop invariant -1073741824 <= x <= 1073741823;\nloop invariant -1073741824 <= y <= 1073741823;\nloop invariant -1073741824 <= k <= 1073741823;\nloop invariant x+y==k;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int i = unknown_int();\n  int x = unknown_int();\n  int y = unknown_int();\n  int k = unknown_int();\n  j=0;\n  if (!(x+y==k)) return 0;\n  /*@\n\n\n\n\nloop invariant i5: x+y==k;\n*/\nwhile (unknown_bool()) {\n    if(j==i) {x++;y--;} else {y++;x--;} j++;\n  }\n  {;\n//@ assert(x+y==k);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant x + y == k;\nloop invariant j >= 0;\nloop invariant j <= i;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int i = unknown_int();\n  int x = unknown_int();\n  int y = unknown_int();\n  int k = unknown_int();\n  j=0;\n  if (!(x+y==k)) return 0;\n  /*@\nloop invariant i1: x + y == k;\nloop invariant i2: j >= 0;\n\n*/\nwhile (unknown_bool()) {\n    if(j==i) {x++;y--;} else {y++;x--;} j++;\n  }\n  {;\n//@ assert(x+y==k);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= i;\nloop invariant x+y==k;\nloop invariant (j==i) ==> (x==y+1);\nloop invariant (j!=i) ==> (y==x+1);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int i = unknown_int();\n  int x = unknown_int();\n  int y = unknown_int();\n  int k = unknown_int();\n  j=0;\n  if (!(x+y==k)) return 0;\n  /*@\n\nloop invariant i2: x+y==k;\n\n\n*/\nwhile (unknown_bool()) {\n    if(j==i) {x++;y--;} else {y++;x--;} j++;\n  }\n  {;\n//@ assert(x+y==k);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 58,
                "annotations": "```\n/*@\nloop invariant 0 <= j <= i;\nloop invariant x+y==k;\nloop invariant 0 <= x <= k;\nloop invariant 0 <= y <= k;\nloop invariant x+y==k ==> x==k || y==0;\nloop invariant x+y==k ==> x==k || y==1;\nloop invariant x+y==k ==> x==k && y==0;\nloop invariant x+y==k ==> x==k && y==1;\nloop invariant x+y==k ==> x==k && y==2;\nloop invariant x+y==k ==> x==k && y==3;\nloop invariant x+y==k ==> x==k && y==4;\nloop invariant x+y==k ==> x==k && y==5;\nloop invariant x+y==k ==> x==k && y==6;\nloop invariant x+y==k ==> x==k && y==7;\nloop invariant x+y==k ==> x==k && y==8;\nloop invariant x+y==k ==> x==k && y==9;\nloop invariant x+y==k ==> x==k && y==10;\nloop invariant x+y==k ==> x==k && y==11;\nloop invariant x+y==k ==> x==k && y==12;\nloop invariant x+y==k ==> x==k && y==13;\nloop invariant x+y==k ==> x==k && y==14;\nloop invariant x+y==k ==> x==k && y==15;\nloop invariant x+y==k ==> x==k && y==16;\nloop invariant x+y==k ==> x==k && y==17;\nloop invariant x+y==k ==> x==k && y==18;\nloop invariant x+y==k ==> x==k && y==19;\nloop invariant x+y==k ==> x==k && y==20;\nloop invariant x+y==k ==> x==k && y==21;\nloop invariant x+y==k ==> x==k && y==22;\nloop invariant x+y==k ==> x==k && y==23;\nloop invariant x+y==k ==> x==k && y==24;\nloop invariant x+y==k ==> x==k && y==25;\nloop invariant x+y==k ==> x==k && y==26;\nloop invariant x+y==k ==> x==k && y==27;\nloop invariant x+y==k ==> x==k && y==28;\nloop invariant x+y==k ==> x==k && y==29;\nloop invariant x+y==k ==> x==k && y==30;\nloop invariant x+y==k ==> x==k && y==31;\nloop invariant x+y==k ==> x==k && y==32;\nloop invariant x+y==k ==> x==k && y==33;\nloop invariant x+y==k ==> x==k && y==34;\nloop invariant x+y==k ==> x==k && y==35;\nloop invariant x+y==k ==> x==k && y==36;\nloop invariant x+y==k ==> x==k && y==37;\nloop invariant x+y==k ==> x==k && y==38;\nloop invariant x+y==k ==> x==k && y==39;\nloop invariant x+y==k ==> x==k && y==40;\nloop invariant x+y==k ==> x==k && y==41;\nloop invariant x+y==k ==> x==k && y==42;\nloop invariant x+y==k ==> x==k && y==43;\nloop invariant x+y==k ==> x==k && y==44;\nloop invariant x+y==k ==> x==k && y==45;\nloop invariant x+y==k ==> x==k && y==46;\nloop invariant x+y==k ==> x==k && y==47;\nloop invariant x+y==k ==> x==k && y==48;\nloop invariant x+y==k ==> x==k && y==49;\nloop invariant x+y==k ==> x==k && y==50;\nloop invariant x+y==k ==> x==k && y==51;\nloop invariant x+y==k ==> x==k && y==52;\nloop invariant x+y==k ==> x==k && y==53;\nloop invariant x+y==k ==> x==k && y==54;\nloop invariant x+y==k ==> x==k && y==55;\nloop invariant x+y==k ==> x==k && y==56;\nloop invariant x+y==k ==> x==k && y==57;\nloop invariant x+y==k ==> x==k && y==58;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int i = unknown_int();\n  int x = unknown_int();\n  int y = unknown_int();\n  int k = unknown_int();\n  j=0;\n  if (!(x+y==k)) return 0;\n  /*@\n\nloop invariant i2: x+y==k;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if(j==i) {x++;y--;} else {y++;x--;} j++;\n  }\n  {;\n//@ assert(x+y==k);\n}\n\n  return 0;\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 113: unexpected token 'implies'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int i = unknown_int();\n  int x = unknown_int();\n  int y = unknown_int();\n  int k = unknown_int();\n  j=0;\n  if (!(x+y==k)) return 0;\n  /*@\nloop invariant i1: 0 <= j <= i;\nloop invariant i2: i >= j;\nloop invariant i3: x >= 0;\nloop invariant i4: y >= 0;\nloop invariant i5: x + y == k ==> j == i;\nloop invariant i6: x + y == k ==> j >= i;\nloop invariant i7: x + y == k ==> x >= y;\nloop invariant i8: x + y == k ==> y >= 0;\nloop invariant i9: x + y == k ==> j == i + 1;\nloop invariant i10: x + y == k ==> x >= y + 1;\nloop invariant i11: x + y == k ==> y >= 1;\nloop invariant i12: x + y == k ==> j == i + 2;\nloop invariant i13: x + y == k ==> x >= y + 2;\nloop invariant i14: x + y == k ==> y >= 2;\nloop invariant i15: x + y == k ==> j == i + 3;\nloop invariant i16: x + y == k ==> x >= y + 3;\nloop invariant i17: x + y == k ==> y >= 3;\nloop invariant i18: x + y == k ==> j == i + 4;\nloop invariant i19: x + y == k ==> x >= y + 4;\nloop invariant i20: x + y == k ==> y >= 4;\nloop invariant i21: x + y == k ==> j == i + 5;\nloop invariant i22: x + y == k ==> x >= y + 5;\nloop invariant i23: x + y == k ==> y >= 5;\nloop invariant i24: x + y == k ==> j == i + 6;\nloop invariant i25: x + y == k ==> x >= y + 6;\nloop invariant i26: x + y == k ==> y >= 6;\nloop invariant i27: x + y == k ==> j == i + 7;\nloop invariant i28: x + y == k ==> x >= y + 7;\nloop invariant i29: x + y == k ==> y >= 7;\nloop invariant i30: x + y == k ==> j == i + 8;\nloop invariant i31: x + y == k ==> x >= y + 8;\nloop invariant i32: x + y == k ==> y >= 8;\nloop invariant i33: x + y == k ==> j == i + 9;\nloop invariant i34: x + y == k ==> x >= y + 9;\nloop invariant i35: x + y == k ==> y >= 9;\nloop invariant i36: x + y == k ==> j == i + 10;\nloop invariant i37: x + y == k ==> x >= y + 10;\nloop invariant i38: x + y == k ==> y >= 10;\nloop invariant i39: x + y == k ==> j == i + 11;\nloop invariant i40: x + y == k ==> x >= y + 11;\nloop invariant i41: x + y == k ==> y >= 11;\nloop invariant i42: x + y == k ==> j == i + 12;\nloop invariant i43: x + y == k ==> x >= y + 12;\nloop invariant i44: x + y == k ==> y >= 12;\nloop invariant i45: x + y == k ==> j == i + 13;\nloop invariant i46: x + y == k ==> x >= y + 13;\nloop invariant i47: x + y == k ==> y >= 13;\nloop invariant i48: x + y == k ==> j == i + 14;\nloop invariant i49: x + y == k ==> x >= y + 14;\nloop invariant i50: x + y == k ==> y >= 14;\nloop invariant i51: x + y == k ==> j == i + 15;\nloop invariant i52: x + y == k ==> x >= y + 15;\nloop invariant i53: x + y == k ==> y >= 15;\nloop invariant i54: x + y == k ==> j == i + 16;\nloop invariant i55: x + y == k ==> x >= y + 16;\nloop invariant i56: x + y == k ==> y >= 16;\nloop invariant i57: x + y == k ==> j == i + 17;\nloop invariant i58: x + y == k ==> x >= y + 17;\nloop invariant i59: x + y == k ==> y >= 17;\nloop invariant i60: x + y == k ==> j == i + 18;\nloop invariant i61: x + y == k ==> x >= y + 18;\nloop invariant i62: x + y == k ==> y >= 18;\nloop invariant i63: x + y == k ==> j == i + 19;\nloop invariant i64: x + y == k ==> x >= y + 19;\nloop invariant i65: x + y == k ==> y >= 19;\nloop invariant i66: x + y == k ==> j == i + 20;\nloop invariant i67: x + y == k ==> x >= y + 20;\nloop invariant i68: x + y == k ==> y >= 20;\nloop invariant i69: x + y == k ==> j == i + 21;\nloop invariant i70: 0 <= x;\nloop invariant i71: 0 <= y;\nloop invariant i72: x + y == k;\nloop invariant i73: j >= 0;\nloop invariant i74: i >= 0;\nloop invariant i75: j <= i;\nloop invariant i76: i - j <= k;\nloop invariant i77: 1 <= j <= 2147483647;\nloop invariant i78: 1 <= i <= 2147483647;\nloop invariant i79: 1 <= x <= 2147483647;\nloop invariant i80: 1 <= y <= 2147483647;\nloop invariant i81: 1 <= k <= 2147483647;\nloop invariant i82: k >= x;\nloop invariant i83: k >= y;\nloop invariant i84: x >= y;\nloop invariant i85: x >= (j + i);\nloop invariant i86: y >= (j - i);\nloop invariant i87: (j == i) ==> (x >= y);\nloop invariant i88: (j != i) ==> (y >= x);\nloop invariant i89: (j == i) ==> (x == y);\nloop invariant i90: (j != i) ==> (x != y);\nloop invariant i91: 0 <= j <= i; loop invariant x == k - y; loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y); loop invariant (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k) ==> (j == i) ==> (x == k - y) ==> (x + y == k);\nloop invariant i92: 0 <= j <= i implies x+y==k;\nloop invariant i93: 0 <= j <= i implies (if (j==i) then x >= y else x <= y);\nloop invariant i94: 0 <= j <= i implies (x+y)==k;\nloop invariant i95: 0 <= j <= i implies (if (j==i) then x+y<k else x+y>k);\nloop invariant i96: 1 <= j <= i;\nloop invariant i97: x = k - y;\nloop invariant i98: (j == i ==> x > 0 && y >= 0);\nloop invariant i99: (j != i ==> x >= 0 && y > 0);\nloop invariant i100: x - y == k - j;\nloop invariant i101: x >= k - i;\nloop invariant i102: y <= k;\nloop invariant i103: x+y==k;\nloop invariant i104: x+y==k ==> x+y==k;\nloop invariant i105: x+y==k ==> y==k-x;\nloop invariant i106: x+y==k ==> x<=k;\nloop invariant i107: x+y==k ==> y>=-k;\nloop invariant i108: x+y==k ==> i>=j;\nloop invariant i109: x+y==k ==> j>=0;\nloop invariant i110: x+y==k ==> i>=0;\nloop invariant i111: x+y==k ==> (j==i) ==> x==y;\nloop invariant i112: x+y==k ==> (j==i) ==> x==y+1;\nloop invariant i113: x+y==k ==> (j==i) ==> x==y-1;\nloop invariant i114: x+y==k ==> !((j==i)) ==> x==y;\nloop invariant i115: x+y==k ==> !((j==i)) ==> x==y+1;\nloop invariant i116: x+y==k ==> !((j==i)) ==> x==y-1;\nloop invariant i117: -1 <= x <= k;\nloop invariant i118: -1 <= y <= k;\nloop invariant i119: x+y==k ==> j==i;\nloop invariant i120: k<=x+y ==> j<=i;\nloop invariant i121: x+y<=k ==> j>=i;\nloop invariant i122: x+y>=k ==> j<=i;\nloop invariant i123: unknown_bool() ==> j==i;\nloop invariant i124: 0 <= x <= k;\nloop invariant i125: 0 <= y <= k;\nloop invariant i126: j==i;\nloop invariant i127: j>=0;\nloop invariant i128: i>=0;\nloop invariant i129: x>=0;\nloop invariant i130: y>=0;\nloop invariant i131: k>=0;\nloop invariant i132: j==i ==> j==i;\nloop invariant i133: j>=0 ==> j>=0;\nloop invariant i134: i>=0 ==> i>=0;\nloop invariant i135: x>=0 ==> x>=0;\nloop invariant i136: y>=0 ==> y>=0;\nloop invariant i137: k>=0 ==> k>=0;\nloop invariant i138: x+y==k ==> x+y==k ==> x+y==k;\nloop invariant i139: j==i ==> j==i ==> j==i;\nloop invariant i140: j>=0 ==> j>=0 ==> j>=0;\nloop invariant i141: i>=0 ==> i>=0 ==> i>=0;\nloop invariant i142: x>=0 ==> x>=0 ==> x>=0;\nloop invariant i143: y>=0 ==> y>=0 ==> y>=0;\nloop invariant i144: k>=0 ==> k>=0 ==> k>=0;\nloop invariant i145: x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\nloop invariant i146: j==i ==> j==i ==> j==i ==> j==i;\nloop invariant i147: j>=0 ==> j>=0 ==> j>=0 ==> j>=0;\nloop invariant i148: i>=0 ==> i>=0 ==> i>=0 ==> i>=0;\nloop invariant i149: x>=0 ==> x>=0 ==> x>=0 ==> x>=0;\nloop invariant i150: y>=0 ==> y>=0 ==> y>=0 ==> y>=0;\nloop invariant i151: k>=0 ==> k>=0 ==> k>=0 ==> k>=0;\nloop invariant i152: x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\nloop invariant i153: j==i ==> j==i ==> j==i ==> j==i ==> j==i;\nloop invariant i154: j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0;\nloop invariant i155: i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0;\nloop invariant i156: x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0;\nloop invariant i157: y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0;\nloop invariant i158: k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0;\nloop invariant i159: x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\nloop invariant i160: j==i ==> j==i ==> j==i ==> j==i ==> j==i ==> j==i;\nloop invariant i161: j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0;\nloop invariant i162: i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0;\nloop invariant i163: x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0;\nloop invariant i164: y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0;\nloop invariant i165: k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0;\nloop invariant i166: x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\nloop invariant i167: j==i ==> j==i ==> j==i ==> j==i ==> j==i ==> j==i ==> j==i;\nloop invariant i168: j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0;\nloop invariant i169: i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0;\nloop invariant i170: x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0;\nloop invariant i171: y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0;\nloop invariant i172: k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0;\nloop invariant i173: x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\nloop invariant i174: 1 <= i <= j;\nloop invariant i175: 1 <= j <= k;\nloop invariant i176: x >= (j * (j - 1)) / 2;\nloop invariant i177: y >= (j * (j - 1)) / 2;\nloop invariant i178: x + y >= k;\nloop invariant i179: x + y <= k;\nloop invariant i180: x + y == k ==> (x >= y);\nloop invariant i181: x + y == k ==> (x + y >= k);\nloop invariant i182: x + y == k ==> (x + y <= k);\nloop invariant i183: x + y == k ==> (x == k - y);\nloop invariant i184: x + y == k ==> (y == k - x);\nloop invariant i185: x + y == k ==> (x >= y ==> (x + y >= k));\nloop invariant i186: x + y == k ==> (x + y == k ==> (x >= y));\nloop invariant i187: x + y == k ==> (x + y == k ==> (x + y <= k));\nloop invariant i188: x + y == k ==> (x + y == k ==> (x == k - y));\nloop invariant i189: x + y == k ==> (x + y == k ==> (y == k - x));\nloop invariant i190: x + y == k ==> (x + y >= k ==> (x >= y));\nloop invariant i191: x + y == k ==> (x + y <= k ==> (x >= y));\nloop invariant i192: x + y == k ==> (x == k - y ==> (x >= y));\nloop invariant i193: x + y == k ==> (y == k - x ==> (x >= y));\nloop invariant i194: x + y == k ==> (x + y >= k ==> (x + y <= k));\nloop invariant i195: x + y == k ==> (x + y <= k ==> (x + y >= k));\nloop invariant i196: x + y == k ==> (x == k - y ==> (x + y >= k));\nloop invariant i197: x + y == k ==> (y == k - x ==> (x + y >= k));\nloop invariant i198: x + y == k ==> (x + y <= k ==> (x + y <= k));\nloop invariant i199: x + y == k ==> (x == k - y ==> (x + y <= k));\nloop invariant i200: x + y == k ==> (y == k - x ==> (x + y <= k));\nloop invariant i201: x + y == k ==> (x + y >= k ==> (x == k - y));\nloop invariant i202: x + y == k ==> (x + y <= k ==> (x == k - y));\nloop invariant i203: x + y == k ==> (x == k - y ==> (x == k - y));\nloop invariant i204: x + y == k ==> (y == k - x ==> (x == k - y));\nloop invariant i205: x + y == k ==> (x + y >= k ==> (y == k - x));\nloop invariant i206: x + y == k ==> (x + y <= k ==> (y == k - x));\nloop invariant i207: x + y == k ==> (x == k - y ==> (y == k - x));\nloop invariant i208: x + y == k ==> (y == k - x ==> (y == k - x));\nloop invariant i209: -1073741824 <= x <= 1073741823;\nloop invariant i210: -1073741824 <= y <= 1073741823;\nloop invariant i211: -1073741824 <= k <= 1073741823;\nloop invariant i212: (j==i) ==> (x==y+1);\nloop invariant i213: (j!=i) ==> (y==x+1);\nloop invariant i214: x+y==k ==> x==k || y==0;\nloop invariant i215: x+y==k ==> x==k || y==1;\nloop invariant i216: x+y==k ==> x==k && y==0;\nloop invariant i217: x+y==k ==> x==k && y==1;\nloop invariant i218: x+y==k ==> x==k && y==2;\nloop invariant i219: x+y==k ==> x==k && y==3;\nloop invariant i220: x+y==k ==> x==k && y==4;\nloop invariant i221: x+y==k ==> x==k && y==5;\nloop invariant i222: x+y==k ==> x==k && y==6;\nloop invariant i223: x+y==k ==> x==k && y==7;\nloop invariant i224: x+y==k ==> x==k && y==8;\nloop invariant i225: x+y==k ==> x==k && y==9;\nloop invariant i226: x+y==k ==> x==k && y==10;\nloop invariant i227: x+y==k ==> x==k && y==11;\nloop invariant i228: x+y==k ==> x==k && y==12;\nloop invariant i229: x+y==k ==> x==k && y==13;\nloop invariant i230: x+y==k ==> x==k && y==14;\nloop invariant i231: x+y==k ==> x==k && y==15;\nloop invariant i232: x+y==k ==> x==k && y==16;\nloop invariant i233: x+y==k ==> x==k && y==17;\nloop invariant i234: x+y==k ==> x==k && y==18;\nloop invariant i235: x+y==k ==> x==k && y==19;\nloop invariant i236: x+y==k ==> x==k && y==20;\nloop invariant i237: x+y==k ==> x==k && y==21;\nloop invariant i238: x+y==k ==> x==k && y==22;\nloop invariant i239: x+y==k ==> x==k && y==23;\nloop invariant i240: x+y==k ==> x==k && y==24;\nloop invariant i241: x+y==k ==> x==k && y==25;\nloop invariant i242: x+y==k ==> x==k && y==26;\nloop invariant i243: x+y==k ==> x==k && y==27;\nloop invariant i244: x+y==k ==> x==k && y==28;\nloop invariant i245: x+y==k ==> x==k && y==29;\nloop invariant i246: x+y==k ==> x==k && y==30;\nloop invariant i247: x+y==k ==> x==k && y==31;\nloop invariant i248: x+y==k ==> x==k && y==32;\nloop invariant i249: x+y==k ==> x==k && y==33;\nloop invariant i250: x+y==k ==> x==k && y==34;\nloop invariant i251: x+y==k ==> x==k && y==35;\nloop invariant i252: x+y==k ==> x==k && y==36;\nloop invariant i253: x+y==k ==> x==k && y==37;\nloop invariant i254: x+y==k ==> x==k && y==38;\nloop invariant i255: x+y==k ==> x==k && y==39;\nloop invariant i256: x+y==k ==> x==k && y==40;\nloop invariant i257: x+y==k ==> x==k && y==41;\nloop invariant i258: x+y==k ==> x==k && y==42;\nloop invariant i259: x+y==k ==> x==k && y==43;\nloop invariant i260: x+y==k ==> x==k && y==44;\nloop invariant i261: x+y==k ==> x==k && y==45;\nloop invariant i262: x+y==k ==> x==k && y==46;\nloop invariant i263: x+y==k ==> x==k && y==47;\nloop invariant i264: x+y==k ==> x==k && y==48;\nloop invariant i265: x+y==k ==> x==k && y==49;\nloop invariant i266: x+y==k ==> x==k && y==50;\nloop invariant i267: x+y==k ==> x==k && y==51;\nloop invariant i268: x+y==k ==> x==k && y==52;\nloop invariant i269: x+y==k ==> x==k && y==53;\nloop invariant i270: x+y==k ==> x==k && y==54;\nloop invariant i271: x+y==k ==> x==k && y==55;\nloop invariant i272: x+y==k ==> x==k && y==56;\nloop invariant i273: x+y==k ==> x==k && y==57;\nloop invariant i274: x+y==k ==> x==k && y==58;\n*/\nwhile (unknown_bool()) {\n    if(j==i) {x++;y--;} else {y++;x--;} j++;\n  }\n  {;\n//@ assert(x+y==k);\n}\n\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 84,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown_int(void);\nextern _Bool unknown_bool(void);\n\n#include <assert.h>\n\nint main() {\n  int j = unknown_int();\n  int i = unknown_int();\n  int x = unknown_int();\n  int y = unknown_int();\n  int k = unknown_int();\n  j=0;\n  if (!(x+y==k)) return 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i72: x + y == k;\nloop invariant i73: j >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i103: x+y==k;\nloop invariant i104: x+y==k ==> x+y==k;\nloop invariant i105: x+y==k ==> y==k-x;\n\n\n\nloop invariant i109: x+y==k ==> j>=0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i127: j>=0;\n\n\n\n\nloop invariant i132: j==i ==> j==i;\nloop invariant i133: j>=0 ==> j>=0;\nloop invariant i134: i>=0 ==> i>=0;\nloop invariant i135: x>=0 ==> x>=0;\nloop invariant i136: y>=0 ==> y>=0;\nloop invariant i137: k>=0 ==> k>=0;\nloop invariant i138: x+y==k ==> x+y==k ==> x+y==k;\nloop invariant i139: j==i ==> j==i ==> j==i;\nloop invariant i140: j>=0 ==> j>=0 ==> j>=0;\nloop invariant i141: i>=0 ==> i>=0 ==> i>=0;\nloop invariant i142: x>=0 ==> x>=0 ==> x>=0;\nloop invariant i143: y>=0 ==> y>=0 ==> y>=0;\nloop invariant i144: k>=0 ==> k>=0 ==> k>=0;\nloop invariant i145: x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\nloop invariant i146: j==i ==> j==i ==> j==i ==> j==i;\nloop invariant i147: j>=0 ==> j>=0 ==> j>=0 ==> j>=0;\nloop invariant i148: i>=0 ==> i>=0 ==> i>=0 ==> i>=0;\nloop invariant i149: x>=0 ==> x>=0 ==> x>=0 ==> x>=0;\nloop invariant i150: y>=0 ==> y>=0 ==> y>=0 ==> y>=0;\nloop invariant i151: k>=0 ==> k>=0 ==> k>=0 ==> k>=0;\nloop invariant i152: x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\nloop invariant i153: j==i ==> j==i ==> j==i ==> j==i ==> j==i;\nloop invariant i154: j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0;\nloop invariant i155: i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0;\nloop invariant i156: x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0;\nloop invariant i157: y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0;\nloop invariant i158: k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0;\nloop invariant i159: x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\nloop invariant i160: j==i ==> j==i ==> j==i ==> j==i ==> j==i ==> j==i;\nloop invariant i161: j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0;\nloop invariant i162: i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0;\nloop invariant i163: x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0;\nloop invariant i164: y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0;\nloop invariant i165: k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0;\nloop invariant i166: x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\nloop invariant i167: j==i ==> j==i ==> j==i ==> j==i ==> j==i ==> j==i ==> j==i;\nloop invariant i168: j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0 ==> j>=0;\nloop invariant i169: i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0 ==> i>=0;\nloop invariant i170: x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0 ==> x>=0;\nloop invariant i171: y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0 ==> y>=0;\nloop invariant i172: k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0 ==> k>=0;\nloop invariant i173: x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k ==> x+y==k;\n\n\n\n\nloop invariant i178: x + y >= k;\nloop invariant i179: x + y <= k;\n\nloop invariant i181: x + y == k ==> (x + y >= k);\nloop invariant i182: x + y == k ==> (x + y <= k);\nloop invariant i183: x + y == k ==> (x == k - y);\nloop invariant i184: x + y == k ==> (y == k - x);\nloop invariant i185: x + y == k ==> (x >= y ==> (x + y >= k));\n\nloop invariant i187: x + y == k ==> (x + y == k ==> (x + y <= k));\nloop invariant i188: x + y == k ==> (x + y == k ==> (x == k - y));\nloop invariant i189: x + y == k ==> (x + y == k ==> (y == k - x));\n\n\n\n\nloop invariant i194: x + y == k ==> (x + y >= k ==> (x + y <= k));\nloop invariant i195: x + y == k ==> (x + y <= k ==> (x + y >= k));\nloop invariant i196: x + y == k ==> (x == k - y ==> (x + y >= k));\nloop invariant i197: x + y == k ==> (y == k - x ==> (x + y >= k));\nloop invariant i198: x + y == k ==> (x + y <= k ==> (x + y <= k));\nloop invariant i199: x + y == k ==> (x == k - y ==> (x + y <= k));\nloop invariant i200: x + y == k ==> (y == k - x ==> (x + y <= k));\nloop invariant i201: x + y == k ==> (x + y >= k ==> (x == k - y));\nloop invariant i202: x + y == k ==> (x + y <= k ==> (x == k - y));\nloop invariant i203: x + y == k ==> (x == k - y ==> (x == k - y));\nloop invariant i204: x + y == k ==> (y == k - x ==> (x == k - y));\nloop invariant i205: x + y == k ==> (x + y >= k ==> (y == k - x));\nloop invariant i206: x + y == k ==> (x + y <= k ==> (y == k - x));\nloop invariant i207: x + y == k ==> (x == k - y ==> (y == k - x));\nloop invariant i208: x + y == k ==> (y == k - x ==> (y == k - x));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown_bool()) {\n    if(j==i) {x++;y--;} else {y++;x--;} j++;\n  }\n  {;\n//@ assert(x+y==k);\n}\n\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/afnp2014.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/bhmr2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/css2003.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gr2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/hhk2008.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/jm2006_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_1_variant.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_k.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-simple/nested_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark01_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark02_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark03_linear.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark04_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark05_conjunctive.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-zilu/benchmark06_conjunctive.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/NetBSD_loop.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invgen/sendmail-close-angle.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/cggmp2005.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-lit/gj2007b.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/count_by_nondet.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-new/gauss_sum.c"
        ],
        "skipped": [],
        "total": 128,
        "success_count": 110,
        "failure_count": 18,
        "success_rate": 0.859375
    }
}