{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  while (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant s == 0;\nloop invariant i == 0;\nloop invariant v == 0;\nloop invariant (v <= 255);\nloop invariant (s <= 65025);\nloop invariant (s <= i * v);\nloop invariant (s <= v);\nloop invariant (v <= s);\nloop invariant i == n ==> s == n * v;\nloop invariant (s <= i * 255);\nloop invariant (i <= v) ==> (s <= v);\nloop invariant (i >= v) ==> (s >= i * v);\nloop invariant s >= i * v;\nloop invariant (s <= 65025);\nloop invariant (s <= i * 255);\nloop invariant (s <= v);\nloop invariant (v <= s);\nloop invariant i == n ==> s == n * v;\nloop invariant (i >= v) ==> (s >= i * v);\nloop invariant (s <= i * 255);\nloop invariant s >= i * v;\nloop invariant (i <= v) ==> (s <= v);\nloop invariant i == n ==> s == n * v;\nloop invariant (s <= 65025);\nloop invariant (s <= i * 255);\nloop invariant (s <= v);\nloop invariant (v <= s);\nloop invariant i == n ==> s == n * v;\nloop invariant (i >= v) ==> (s >= i * v);\nloop invariant (s <= i * 255);\nloop invariant s >= i * v;\nloop invariant (i <= v) ==> (s <= v);\nloop invariant i == n ==> s == n * v;\nloop invariant (s <= 65025);\nloop invariant (s <= i * 255);\nloop invariant (s <= v);\nloop invariant (v <= s);\nloop invariant i == n ==> s == n * v;\nloop invariant (i >= v) ==> (s >= i * v);\nloop invariant (s <= i * 255);\nloop invariant s >= i * v;\nloop invariant (i <= v) ==> (s <= v);\nloop invariant i == n ==> s == n * v;\nloop invariant (s <= 65025);\nloop invariant (s <= i * 255);\nloop invariant (s <= v);\nloop invariant (v <= s);\nloop invariant i == n ==> s == n * v;\nloop invariant (i >= v) ==> (s >= i * v);\nloop invariant (s <= i * 255);\nloop invariant s >= i * v;\nloop invariant (i <= v) ==> (s <= v);\nloop invariant i == n ==> s == n * v;\nloop invariant (s <= 65025);\nloop invariant (s <= i * 255);\nloop invariant (s <= v);\nloop invariant (v <= s);\nloop invariant i == n ==> s == n * v;\nloop invariant (i >= v) ==> (s >= i * v);\nloop invariant (s <= i * 255);\nloop invariant s >= i * v;\nloop invariant (i <= v) ==> (s <= v);\nloop invariant i == n ==> s == n * v;\nloop invariant (s <= 65025);\nloop invariant (s <= i * 255);\nloop invariant (s <= v);\nloop invariant (v <= s);\nloop invariant i == n ==> s == n * v;\nloop invariant (i >= v) ==> (s >= i * v);\nloop invariant (s <= i * 255);\nloop invariant s >= i * v;\nloop invariant (i <= v) ==> (s <= v);\nloop invariant i == n ==> s == n * v;\nloop invariant (s <= 65025);\nloop invariant (s <= i * 255);\nloop invariant (s <= v);\nloop invariant (v <= s);\nloop invariant i == n ==> s == n * v;\nloop invariant (i >= v) ==> (s >= i * v);\nloop invariant (s <= i * 255);\nloop invariant s >= i * v;\nloop invariant (i <= v) ==> (s <= v);\nloop invariant i == n ==> s == n * v;\nloop invariant (s <= 65025);\nloop invariant (s <= i * 255);\nloop invariant (s <= v);\nloop invariant (v <= s);\nloop invariant i == n ==> s == n * v;\nloop invariant (i >= v) ==> (s >= i * v);\nloop invariant (s <= i * 255);\nloop invariant s >= i * v;\n*/\n```",
            "```\n/*@\nloop invariant n >= 1;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant v >= s / n;\nloop invariant v <= 255;\nloop invariant s == s + v;\nloop invariant s >= v;\nloop invariant s <= 65025;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= v <= 255;\nloop invariant 0 <= s <= 65025;\nloop invariant n >= 1;\nloop invariant v >= 0;\nloop invariant s >= 0;\nloop invariant v <= 255;\nloop invariant s <= 65025;\nloop invariant s >= i * v;\nloop invariant s <= (i + 1) * v;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s <= (n * (n + 1)) / 2;\nloop invariant s >= (n * (n - 1)) / 2;\nloop invariant v <= 255;\nloop invariant s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant v >= 0;\nloop invariant s >= i * v;\nloop invariant s <= (i + 1) * v;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s <= (n * (n + 1)) / 2;\nloop invariant s >= (n * (n - 1)) / 2;\nloop invariant v <= 255;\nloop invariant s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant v >= 0;\nloop invariant s >= i * v;\nloop invariant s <= (i + 1) * v;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s <= (n * (n + 1)) / 2;\nloop invariant s >= (n * (n - 1)) / 2;\nloop invariant v <= 255;\nloop invariant s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant v >= 0;\nloop invariant s >= i * v;\nloop invariant s <= (i + 1) * v;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s <= (n * (n + 1)) / 2;\nloop invariant s >= (n * (n - 1)) / 2;\nloop invariant v <= 255;\nloop invariant s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant v >= 0;\nloop invariant s >= i * v;\nloop invariant s <= (i + 1) * v;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s <= (n * (n + 1)) / 2;\nloop invariant s >= (n * (n - 1)) / 2;\nloop invariant v <= 255;\nloop invariant s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant v >= 0;\nloop invariant s >= i * v;\nloop invariant s <= (i + 1) * v;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s <= (n * (n + 1)) / 2;\nloop invariant s >= (n * (n - 1)) / 2;\nloop invariant v <= 255;\nloop invariant s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant v >= 0;\nloop invariant s >= i * v;\nloop invariant s <= (i + 1) * v;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s <= (n * (n + 1)) / 2;\nloop invariant s >= (n * (n - 1)) / 2;\nloop invariant v <= 255;\nloop invariant s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant v >= 0;\nloop invariant s >= i * v;\nloop invariant s <= (i + 1) * v;\nloop invariant i <= n;\nloop invariant i >= 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant 0 <= i <= n;\nloop invariant i == n ==> s == v;\nloop invariant i == n ==> v == s;\nloop invariant i == n ==> s >= v;\nloop invariant i == n ==> v >= s;\nloop invariant i == n ==> s >= 0;\nloop invariant i == n ==> v >= 0;\nloop invariant i == n ==> s <= 65025;\nloop invariant i == n ==> v <= 255;\nloop invariant i == n ==> i >= 0;\nloop invariant i == n ==> n >= 0;\nloop invariant i == n ==> n <= 255;\nloop invariant i == n ==> s > 65025 ==> \\false;\nloop invariant i == n ==> s < v ==> \\false;\nloop invariant i == n ==> v == 0 ==> v == s;\nloop invariant i == n ==> v == 0 ==> s == v;\nloop invariant i == n ==> v == 0 ==> s == 0;\nloop invariant i == n ==> v == 0 ==> v >= 0;\nloop invariant i == n ==> v == 0 ==> v <= 255;\nloop invariant i == n ==> v == 0 ==> s >= 0;\nloop invariant i == n ==> v == 0 ==> s <= 65025;\nloop invariant i == n ==> v == 0 ==> n >= 0;\nloop invariant i == n ==> v == 0 ==> n <= 255;\nloop invariant i == n ==> v == 0 ==> i >= 0;\nloop invariant i == n ==> v == 0 ==> i <= n;\nloop invariant i == n ==> v == 0 ==> n == i;\nloop invariant i == n ==> v == 0 ==> v == n;\nloop invariant i == n ==> v == 0 ==> s == n;\nloop invariant i == n ==> v == 0 ==> s == v;\nloop invariant i == n ==> v == 0 ==> s == 0;\nloop invariant i == n ==> v == 0 ==> v >= 0;\nloop invariant i == n ==> v == 0 ==> v <= 255;\nloop invariant i == n ==> v == 0 ==> s >= 0;\nloop invariant i == n ==> v == 0 ==> s <= 65025;\nloop invariant i == n ==> v == 0 ==> n >= 0;\nloop invariant i == n ==> v == 0 ==> n <= 255;\nloop invariant i == n ==> v == 0 ==> i >= 0;\nloop invariant i == n ==> v == 0 ==> i <= n;\nloop invariant i == n ==> v == 0 ==> n == i;\nloop invariant i == n ==> v == 0 ==> v == n;\nloop invariant i == n ==> v == 0 ==> s == n;\nloop invariant i == n ==> v == 0 ==> s == v;\nloop invariant i == n ==> v == 0 ==> s == 0;\nloop invariant i == n ==> v == 0 ==> v >= 0;\nloop invariant i == n ==> v == 0 ==> v <= 255;\nloop invariant i == n ==> v == 0 ==> s >= 0;\nloop invariant i == n ==> v == 0 ==> s <= 65025;\nloop invariant i == n ==> v == 0 ==> n >= 0;\nloop invariant i == n ==> v == 0 ==> n <= 255;\nloop invariant i == n ==> v == 0 ==> i >= 0;\nloop invariant i == n ==> v == 0 ==> i <= n;\nloop invariant i == n ==> v == 0 ==> n == i;\nloop invariant i == n ==> v == 0 ==> v == n;\nloop invariant i == n ==> v == 0 ==> s == n;\nloop invariant i == n ==> v == 0 ==> s == v;\nloop invariant i == n ==> v == 0 ==> s == 0;\nloop invariant i == n ==> v == 0 ==> v >= 0;\nloop invariant i == n ==> v == 0 ==> v <= 255;\nloop invariant i == n ==> v == 0 ==> s >= 0;\nloop invariant i == n ==> v == 0 ==> s <= 65025;\nloop invariant i == n ==> v == 0 ==> n >= 0;\nloop invariant i == n ==> v == 0 ==> n <= 255;\nloop invariant i == n ==> v == 0 ==> i >= 0;\n*/\n```",
            "```\n/*@\nloop invariant i1; loop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant s == (i * (i - 1)) / 2;\nloop invariant 0 <= v <= 255;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;loop invariant 0 <= v;loop invariant 0 <= s;loop invariant s == i * v;loop invariant s <= 65025;loop invariant s >= 0;loop invariant v == unknown_uchar();\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= v <= 255;\nloop invariant 0 <= s <= i * 255;\nloop invariant v == i ? s == i * v : s == i * v + v;\nloop invariant v == i ? i == 0 : i == 1;\nloop invariant s <= 65535;\n*/\n```",
            "```\n/*@\nloop invariant 0 < n <= 255;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant s < v ==> i < n;\nloop invariant s <= (v + 65025) * i / (n - i + 1);\nloop invariant s >= (v + 1) * i / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= (v + 1) * n / 2;\nloop invariant s >= (v + 1) * (i - 1) / 2;\nloop invariant s >= (v + 1) * (n - i) / 2;\nloop invariant s >= 0;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= v <= 255;\nloop invariant s >= i * v;\nloop invariant s <= (n * v) + (n * (n - 1) / 2);\nloop invariant i <= n;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant 0 <= s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant i >= n ==> s <= 65025;\nloop invariant i <= n ==> s >= v;\nloop invariant s <= 65025 ==> i <= n;\nloop invariant s >= v ==> i >= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= i * 255;\nloop invariant s <= (i * (i + 1) * 255) / 2;\nloop invariant s <= (n * (n + 1) * 255) / 2;\nloop invariant s <= 65025;\nloop invariant s <= (n * 255);\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= s <= 65025;\nloop invariant 0 <= i <= n;\nloop invariant s + v * (n - i) >= v;\nloop invariant s + v * (n - i) <= 65025;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant i + 1 <= n;\nloop invariant s + v * (n - i) == 0;\nloop invariant s + v * (n - i) == v;\nloop invariant s + v * (n - i) == 65025;\nloop invariant s + v * (n - i) == 255;\nloop invariant s + v * (n - i) == 1;\nloop invariant s + v * (n - i) == 2;\nloop invariant s + v * (n - i) == 3;\nloop invariant s + v * (n - i) == 4;\nloop invariant s + v * (n - i) == 5;\nloop invariant s + v * (n - i) == 6;\nloop invariant s + v * (n - i) == 7;\nloop invariant s + v * (n - i) == 8;\nloop invariant s + v * (n - i) == 9;\nloop invariant s + v * (n - i) == 10;\nloop invariant s + v * (n - i) == 11;\nloop invariant s + v * (n - i) == 12;\nloop invariant s + v * (n - i) == 13;\nloop invariant s + v * (n - i) == 14;\nloop invariant s + v * (n - i) == 15;\nloop invariant s + v * (n - i) == 16;\nloop invariant s + v * (n - i) == 17;\nloop invariant s + v * (n - i) == 18;\nloop invariant s + v * (n - i) == 19;\nloop invariant s + v * (n - i) == 20;\nloop invariant s + v * (n - i) == 21;\nloop invariant s + v * (n - i) == 22;\nloop invariant s + v * (n - i) == 23;\nloop invariant s + v * (n - i) == 24;\nloop invariant s + v * (n - i) == 25;\nloop invariant s + v * (n - i) == 26;\nloop invariant s + v * (n - i) == 27;\nloop invariant s + v * (n - i) == 28;\nloop invariant s + v * (n - i) == 29;\nloop invariant s + v * (n - i) == 30;\nloop invariant s + v * (n - i) == 31;\nloop invariant s + v * (n - i) == 32;\nloop invariant s + v * (n - i) == 33;\nloop invariant s + v * (n - i) == 34;\nloop invariant s + v * (n - i) == 35;\nloop invariant s + v * (n - i) == 36;\nloop invariant s + v * (n - i) == 37;\nloop invariant s + v * (n - i) == 38;\nloop invariant s + v * (n - i) == 39;\nloop invariant s + v * (n - i) == 40;\nloop invariant s + v * (n - i) == 41;\nloop invariant s + v * (n - i) == 42;\nloop invariant s + v * (n - i) == 43;\nloop invariant s + v * (n - i) == 44;\nloop invariant s + v * (n - i) == 45;\nloop invariant s + v * (n - i) == 46;\nloop invariant s + v * (n - i) == 47;\nloop invariant s + v * (n - i) == 48;\nloop invariant s + v * (n - i) == 49;\nloop invariant s + v * (n - i) == 50;\nloop invariant s + v * (n - i) == 51;\nloop invariant s + v * (n - i) == 52;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant s == 0;\nloop invariant i == 0;\nloop invariant v == 0;\nloop invariant (v <= 255);\nloop invariant (s <= 65025);\nloop invariant (s <= i * v);\nloop invariant (s <= v);\nloop invariant (v <= s);\nloop invariant i == n ==> s == n * v;\nloop invariant (s <= i * 255);\nloop invariant (i <= v) ==> (s <= v);\nloop invariant (i >= v) ==> (s >= i * v);\nloop invariant s >= i * v;\nloop invariant (s <= 65025);\nloop invariant (s <= i * 255);\nloop invariant (s <= v);\nloop invariant (v <= s);\nloop invariant i == n ==> s == n * v;\nloop invariant (i >= v) ==> (s >= i * v);\nloop invariant (s <= i * 255);\nloop invariant s >= i * v;\nloop invariant (i <= v) ==> (s <= v);\nloop invariant i == n ==> s == n * v;\nloop invariant (s <= 65025);\nloop invariant (s <= i * 255);\nloop invariant (s <= v);\nloop invariant (v <= s);\nloop invariant i == n ==> s == n * v;\nloop invariant (i >= v) ==> (s >= i * v);\nloop invariant (s <= i * 255);\nloop invariant s >= i * v;\nloop invariant (i <= v) ==> (s <= v);\nloop invariant i == n ==> s == n * v;\nloop invariant (s <= 65025);\nloop invariant (s <= i * 255);\nloop invariant (s <= v);\nloop invariant (v <= s);\nloop invariant i == n ==> s == n * v;\nloop invariant (i >= v) ==> (s >= i * v);\nloop invariant (s <= i * 255);\nloop invariant s >= i * v;\nloop invariant (i <= v) ==> (s <= v);\nloop invariant i == n ==> s == n * v;\nloop invariant (s <= 65025);\nloop invariant (s <= i * 255);\nloop invariant (s <= v);\nloop invariant (v <= s);\nloop invariant i == n ==> s == n * v;\nloop invariant (i >= v) ==> (s >= i * v);\nloop invariant (s <= i * 255);\nloop invariant s >= i * v;\nloop invariant (i <= v) ==> (s <= v);\nloop invariant i == n ==> s == n * v;\nloop invariant (s <= 65025);\nloop invariant (s <= i * 255);\nloop invariant (s <= v);\nloop invariant (v <= s);\nloop invariant i == n ==> s == n * v;\nloop invariant (i >= v) ==> (s >= i * v);\nloop invariant (s <= i * 255);\nloop invariant s >= i * v;\nloop invariant (i <= v) ==> (s <= v);\nloop invariant i == n ==> s == n * v;\nloop invariant (s <= 65025);\nloop invariant (s <= i * 255);\nloop invariant (s <= v);\nloop invariant (v <= s);\nloop invariant i == n ==> s == n * v;\nloop invariant (i >= v) ==> (s >= i * v);\nloop invariant (s <= i * 255);\nloop invariant s >= i * v;\nloop invariant (i <= v) ==> (s <= v);\nloop invariant i == n ==> s == n * v;\nloop invariant (s <= 65025);\nloop invariant (s <= i * 255);\nloop invariant (s <= v);\nloop invariant (v <= s);\nloop invariant i == n ==> s == n * v;\nloop invariant (i >= v) ==> (s >= i * v);\nloop invariant (s <= i * 255);\nloop invariant s >= i * v;\nloop invariant (i <= v) ==> (s <= v);\nloop invariant i == n ==> s == n * v;\nloop invariant (s <= 65025);\nloop invariant (s <= i * 255);\nloop invariant (s <= v);\nloop invariant (v <= s);\nloop invariant i == n ==> s == n * v;\nloop invariant (i >= v) ==> (s >= i * v);\nloop invariant (s <= i * 255);\nloop invariant s >= i * v;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\n\n\n\nloop invariant i5: (v <= 255);\nloop invariant i6: (s <= 65025);\n\n\nloop invariant i9: (v <= s);\n\nloop invariant i11: (s <= i * 255);\n\n\n\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant n >= 1;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant v >= s / n;\nloop invariant v <= 255;\nloop invariant s == s + v;\nloop invariant s >= v;\nloop invariant s <= 65025;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\nloop invariant v == v;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: n >= 1;\nloop invariant i2: i >= 0;\nloop invariant i3: i <= n;\nloop invariant i4: s >= 0;\n\nloop invariant i6: v >= 0;\nloop invariant i7: v <= 255;\n\n\n\nloop invariant i11: v == v;\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 4,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= v <= 255;\nloop invariant 0 <= s <= 65025;\nloop invariant n >= 1;\nloop invariant v >= 0;\nloop invariant s >= 0;\nloop invariant v <= 255;\nloop invariant s <= 65025;\nloop invariant s >= i * v;\nloop invariant s <= (i + 1) * v;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s <= (n * (n + 1)) / 2;\nloop invariant s >= (n * (n - 1)) / 2;\nloop invariant v <= 255;\nloop invariant s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant v >= 0;\nloop invariant s >= i * v;\nloop invariant s <= (i + 1) * v;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s <= (n * (n + 1)) / 2;\nloop invariant s >= (n * (n - 1)) / 2;\nloop invariant v <= 255;\nloop invariant s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant v >= 0;\nloop invariant s >= i * v;\nloop invariant s <= (i + 1) * v;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s <= (n * (n + 1)) / 2;\nloop invariant s >= (n * (n - 1)) / 2;\nloop invariant v <= 255;\nloop invariant s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant v >= 0;\nloop invariant s >= i * v;\nloop invariant s <= (i + 1) * v;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s <= (n * (n + 1)) / 2;\nloop invariant s >= (n * (n - 1)) / 2;\nloop invariant v <= 255;\nloop invariant s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant v >= 0;\nloop invariant s >= i * v;\nloop invariant s <= (i + 1) * v;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s <= (n * (n + 1)) / 2;\nloop invariant s >= (n * (n - 1)) / 2;\nloop invariant v <= 255;\nloop invariant s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant v >= 0;\nloop invariant s >= i * v;\nloop invariant s <= (i + 1) * v;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s <= (n * (n + 1)) / 2;\nloop invariant s >= (n * (n - 1)) / 2;\nloop invariant v <= 255;\nloop invariant s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant v >= 0;\nloop invariant s >= i * v;\nloop invariant s <= (i + 1) * v;\nloop invariant i <= n;\nloop invariant i >= 0;\nloop invariant s <= (n * (n + 1)) / 2;\nloop invariant s >= (n * (n - 1)) / 2;\nloop invariant v <= 255;\nloop invariant s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant v >= 0;\nloop invariant s >= i * v;\nloop invariant s <= (i + 1) * v;\nloop invariant i <= n;\nloop invariant i >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: 0 <= v <= 255;\n\nloop invariant i4: n >= 1;\nloop invariant i5: v >= 0;\nloop invariant i6: s >= 0;\nloop invariant i7: v <= 255;\n\n\n\nloop invariant i11: i <= n;\nloop invariant i12: i >= 0;\n\n\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 8,
                "annotations": "```\n/*@\nloop invariant 0 <= s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant 0 <= i <= n;\nloop invariant i == n ==> s == v;\nloop invariant i == n ==> v == s;\nloop invariant i == n ==> s >= v;\nloop invariant i == n ==> v >= s;\nloop invariant i == n ==> s >= 0;\nloop invariant i == n ==> v >= 0;\nloop invariant i == n ==> s <= 65025;\nloop invariant i == n ==> v <= 255;\nloop invariant i == n ==> i >= 0;\nloop invariant i == n ==> n >= 0;\nloop invariant i == n ==> n <= 255;\nloop invariant i == n ==> s > 65025 ==> \\false;\nloop invariant i == n ==> s < v ==> \\false;\nloop invariant i == n ==> v == 0 ==> v == s;\nloop invariant i == n ==> v == 0 ==> s == v;\nloop invariant i == n ==> v == 0 ==> s == 0;\nloop invariant i == n ==> v == 0 ==> v >= 0;\nloop invariant i == n ==> v == 0 ==> v <= 255;\nloop invariant i == n ==> v == 0 ==> s >= 0;\nloop invariant i == n ==> v == 0 ==> s <= 65025;\nloop invariant i == n ==> v == 0 ==> n >= 0;\nloop invariant i == n ==> v == 0 ==> n <= 255;\nloop invariant i == n ==> v == 0 ==> i >= 0;\nloop invariant i == n ==> v == 0 ==> i <= n;\nloop invariant i == n ==> v == 0 ==> n == i;\nloop invariant i == n ==> v == 0 ==> v == n;\nloop invariant i == n ==> v == 0 ==> s == n;\nloop invariant i == n ==> v == 0 ==> s == v;\nloop invariant i == n ==> v == 0 ==> s == 0;\nloop invariant i == n ==> v == 0 ==> v >= 0;\nloop invariant i == n ==> v == 0 ==> v <= 255;\nloop invariant i == n ==> v == 0 ==> s >= 0;\nloop invariant i == n ==> v == 0 ==> s <= 65025;\nloop invariant i == n ==> v == 0 ==> n >= 0;\nloop invariant i == n ==> v == 0 ==> n <= 255;\nloop invariant i == n ==> v == 0 ==> i >= 0;\nloop invariant i == n ==> v == 0 ==> i <= n;\nloop invariant i == n ==> v == 0 ==> n == i;\nloop invariant i == n ==> v == 0 ==> v == n;\nloop invariant i == n ==> v == 0 ==> s == n;\nloop invariant i == n ==> v == 0 ==> s == v;\nloop invariant i == n ==> v == 0 ==> s == 0;\nloop invariant i == n ==> v == 0 ==> v >= 0;\nloop invariant i == n ==> v == 0 ==> v <= 255;\nloop invariant i == n ==> v == 0 ==> s >= 0;\nloop invariant i == n ==> v == 0 ==> s <= 65025;\nloop invariant i == n ==> v == 0 ==> n >= 0;\nloop invariant i == n ==> v == 0 ==> n <= 255;\nloop invariant i == n ==> v == 0 ==> i >= 0;\nloop invariant i == n ==> v == 0 ==> i <= n;\nloop invariant i == n ==> v == 0 ==> n == i;\nloop invariant i == n ==> v == 0 ==> v == n;\nloop invariant i == n ==> v == 0 ==> s == n;\nloop invariant i == n ==> v == 0 ==> s == v;\nloop invariant i == n ==> v == 0 ==> s == 0;\nloop invariant i == n ==> v == 0 ==> v >= 0;\nloop invariant i == n ==> v == 0 ==> v <= 255;\nloop invariant i == n ==> v == 0 ==> s >= 0;\nloop invariant i == n ==> v == 0 ==> s <= 65025;\nloop invariant i == n ==> v == 0 ==> n >= 0;\nloop invariant i == n ==> v == 0 ==> n <= 255;\nloop invariant i == n ==> v == 0 ==> i >= 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\n\nloop invariant i2: 0 <= v <= 255;\nloop invariant i3: 0 <= i <= n;\n\n\n\n\nloop invariant i8: i == n ==> s >= 0;\nloop invariant i9: i == n ==> v >= 0;\n\nloop invariant i11: i == n ==> v <= 255;\nloop invariant i12: i == n ==> i >= 0;\nloop invariant i13: i == n ==> n >= 0;\nloop invariant i14: i == n ==> n <= 255;\n\n\n\n\n\nloop invariant i20: i == n ==> v == 0 ==> v >= 0;\nloop invariant i21: i == n ==> v == 0 ==> v <= 255;\nloop invariant i22: i == n ==> v == 0 ==> s >= 0;\n\nloop invariant i24: i == n ==> v == 0 ==> n >= 0;\nloop invariant i25: i == n ==> v == 0 ==> n <= 255;\nloop invariant i26: i == n ==> v == 0 ==> i >= 0;\nloop invariant i27: i == n ==> v == 0 ==> i <= n;\nloop invariant i28: i == n ==> v == 0 ==> n == i;\n\n\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 157,
                "annotations": "```\n/*@\nloop invariant i1; loop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant s == (i * (i - 1)) / 2;\nloop invariant 0 <= v <= 255;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\n\nloop invariant i3: 0 <= v <= 255;\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;loop invariant 0 <= v;loop invariant 0 <= s;loop invariant s == i * v;loop invariant s <= 65025;loop invariant s >= 0;loop invariant v == unknown_uchar();\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\n\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= v <= 255;\nloop invariant 0 <= s <= i * 255;\nloop invariant v == i ? s == i * v : s == i * v + v;\nloop invariant v == i ? i == 0 : i == 1;\nloop invariant s <= 65535;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: 0 <= v <= 255;\nloop invariant i3: 0 <= s <= i * 255;\n\n\nloop invariant i6: s <= 65535;\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 < n <= 255;\nloop invariant i >= 0;\nloop invariant i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= 65025;\nloop invariant s < v ==> i < n;\nloop invariant s <= (v + 65025) * i / (n - i + 1);\nloop invariant s >= (v + 1) * i / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= (v + 1) * n / 2;\nloop invariant s >= (v + 1) * (i - 1) / 2;\nloop invariant s >= (v + 1) * (n - i) / 2;\nloop invariant s >= 0;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant s <= v * i / 2 + (v + 1) * (n - i) / 2;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 0 < n <= 255;\nloop invariant i2: i >= 0;\nloop invariant i3: i <= n;\nloop invariant i4: v >= 0;\nloop invariant i5: v <= 255;\nloop invariant i6: s >= 0;\n\n\n\n\n\n\n\n\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= v <= 255;\nloop invariant s >= i * v;\nloop invariant s <= (n * v) + (n * (n - 1) / 2);\nloop invariant i <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: 0 <= v <= 255;\n\n\nloop invariant i5: i <= n;\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 1 <= i <= n;\nloop invariant 0 <= s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant i >= n ==> s <= 65025;\nloop invariant i <= n ==> s >= v;\nloop invariant s <= 65025 ==> i <= n;\nloop invariant s >= v ==> i >= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\n\n\nloop invariant i3: 0 <= v <= 255;\n\n\nloop invariant i6: s <= 65025 ==> i <= n;\n\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant 0 <= s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\nloop invariant 0 <= i <= n;\nloop invariant 0 <= s <= 65025;\nloop invariant 0 <= v <= 255;\nloop invariant s + v >= v;\nloop invariant s + v <= 65025;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\n\nloop invariant i3: 0 <= v <= 255;\nloop invariant i4: s + v >= v;\n\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= i <= n;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant s >= 0;\nloop invariant s <= i * 255;\nloop invariant s <= (i * (i + 1) * 255) / 2;\nloop invariant s <= (n * (n + 1) * 255) / 2;\nloop invariant s <= 65025;\nloop invariant s <= (n * 255);\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\nloop invariant s <= (n * 255) + v;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: v >= 0;\nloop invariant i3: v <= 255;\nloop invariant i4: s >= 0;\nloop invariant i5: s <= i * 255;\nloop invariant i6: s <= (i * (i + 1) * 255) / 2;\nloop invariant i7: s <= (n * (n + 1) * 255) / 2;\nloop invariant i8: s <= 65025;\nloop invariant i9: s <= (n * 255);\nloop invariant i10: s <= (n * 255) + v;\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 59,
                "annotations": "```\n/*@\nloop invariant 0 <= s <= 65025;\nloop invariant 0 <= i <= n;\nloop invariant s + v * (n - i) >= v;\nloop invariant s + v * (n - i) <= 65025;\nloop invariant v >= 0;\nloop invariant v <= 255;\nloop invariant n >= 1;\nloop invariant n <= 255;\nloop invariant i + 1 <= n;\nloop invariant s + v * (n - i) == 0;\nloop invariant s + v * (n - i) == v;\nloop invariant s + v * (n - i) == 65025;\nloop invariant s + v * (n - i) == 255;\nloop invariant s + v * (n - i) == 1;\nloop invariant s + v * (n - i) == 2;\nloop invariant s + v * (n - i) == 3;\nloop invariant s + v * (n - i) == 4;\nloop invariant s + v * (n - i) == 5;\nloop invariant s + v * (n - i) == 6;\nloop invariant s + v * (n - i) == 7;\nloop invariant s + v * (n - i) == 8;\nloop invariant s + v * (n - i) == 9;\nloop invariant s + v * (n - i) == 10;\nloop invariant s + v * (n - i) == 11;\nloop invariant s + v * (n - i) == 12;\nloop invariant s + v * (n - i) == 13;\nloop invariant s + v * (n - i) == 14;\nloop invariant s + v * (n - i) == 15;\nloop invariant s + v * (n - i) == 16;\nloop invariant s + v * (n - i) == 17;\nloop invariant s + v * (n - i) == 18;\nloop invariant s + v * (n - i) == 19;\nloop invariant s + v * (n - i) == 20;\nloop invariant s + v * (n - i) == 21;\nloop invariant s + v * (n - i) == 22;\nloop invariant s + v * (n - i) == 23;\nloop invariant s + v * (n - i) == 24;\nloop invariant s + v * (n - i) == 25;\nloop invariant s + v * (n - i) == 26;\nloop invariant s + v * (n - i) == 27;\nloop invariant s + v * (n - i) == 28;\nloop invariant s + v * (n - i) == 29;\nloop invariant s + v * (n - i) == 30;\nloop invariant s + v * (n - i) == 31;\nloop invariant s + v * (n - i) == 32;\nloop invariant s + v * (n - i) == 33;\nloop invariant s + v * (n - i) == 34;\nloop invariant s + v * (n - i) == 35;\nloop invariant s + v * (n - i) == 36;\nloop invariant s + v * (n - i) == 37;\nloop invariant s + v * (n - i) == 38;\nloop invariant s + v * (n - i) == 39;\nloop invariant s + v * (n - i) == 40;\nloop invariant s + v * (n - i) == 41;\nloop invariant s + v * (n - i) == 42;\nloop invariant s + v * (n - i) == 43;\nloop invariant s + v * (n - i) == 44;\nloop invariant s + v * (n - i) == 45;\nloop invariant s + v * (n - i) == 46;\nloop invariant s + v * (n - i) == 47;\nloop invariant s + v * (n - i) == 48;\nloop invariant s + v * (n - i) == 49;\nloop invariant s + v * (n - i) == 50;\nloop invariant s + v * (n - i) == 51;\nloop invariant s + v * (n - i) == 52;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\n\nloop invariant i2: 0 <= i <= n;\n\n\nloop invariant i5: v >= 0;\nloop invariant i6: v <= 255;\nloop invariant i7: n >= 1;\nloop invariant i8: n <= 255;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 233: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\nloop invariant i2: s == 0;\nloop invariant i3: i == 0;\nloop invariant i4: v == 0;\nloop invariant i5: (v <= 255);\nloop invariant i6: (s <= 65025);\nloop invariant i7: (s <= i * v);\nloop invariant i8: (s <= v);\nloop invariant i9: (v <= s);\nloop invariant i10: i == n ==> s == n * v;\nloop invariant i11: (s <= i * 255);\nloop invariant i12: (i <= v) ==> (s <= v);\nloop invariant i13: (i >= v) ==> (s >= i * v);\nloop invariant i14: s >= i * v;\nloop invariant i15: n >= 1;\nloop invariant i16: i >= 0;\nloop invariant i17: i <= n;\nloop invariant i18: s >= 0;\nloop invariant i19: s <= 65025;\nloop invariant i20: v >= 0;\nloop invariant i21: v <= 255;\nloop invariant i22: v >= s / n;\nloop invariant i23: s == s + v;\nloop invariant i24: s >= v;\nloop invariant i25: v == v;\nloop invariant i26: 0 <= v <= 255;\nloop invariant i27: 0 <= s <= 65025;\nloop invariant i28: s <= (i + 1) * v;\nloop invariant i29: s <= (n * (n + 1)) / 2;\nloop invariant i30: s >= (n * (n - 1)) / 2;\nloop invariant i31: i == n ==> s == v;\nloop invariant i32: i == n ==> v == s;\nloop invariant i33: i == n ==> s >= v;\nloop invariant i34: i == n ==> v >= s;\nloop invariant i35: i == n ==> s >= 0;\nloop invariant i36: i == n ==> v >= 0;\nloop invariant i37: i == n ==> s <= 65025;\nloop invariant i38: i == n ==> v <= 255;\nloop invariant i39: i == n ==> i >= 0;\nloop invariant i40: i == n ==> n >= 0;\nloop invariant i41: i == n ==> n <= 255;\nloop invariant i42: i == n ==> s > 65025 ==> \\false;\nloop invariant i43: i == n ==> s < v ==> \\false;\nloop invariant i44: i == n ==> v == 0 ==> v == s;\nloop invariant i45: i == n ==> v == 0 ==> s == v;\nloop invariant i46: i == n ==> v == 0 ==> s == 0;\nloop invariant i47: i == n ==> v == 0 ==> v >= 0;\nloop invariant i48: i == n ==> v == 0 ==> v <= 255;\nloop invariant i49: i == n ==> v == 0 ==> s >= 0;\nloop invariant i50: i == n ==> v == 0 ==> s <= 65025;\nloop invariant i51: i == n ==> v == 0 ==> n >= 0;\nloop invariant i52: i == n ==> v == 0 ==> n <= 255;\nloop invariant i53: i == n ==> v == 0 ==> i >= 0;\nloop invariant i54: i == n ==> v == 0 ==> i <= n;\nloop invariant i55: i == n ==> v == 0 ==> n == i;\nloop invariant i56: i == n ==> v == 0 ==> v == n;\nloop invariant i57: i == n ==> v == 0 ==> s == n;\nloop invariant i58: i1; loop invariant i2;\nloop invariant i59: i3;\nloop invariant i60: i4;\nloop invariant i61: i5;\nloop invariant i62: i6;\nloop invariant i63: i7;\nloop invariant i64: i8;\nloop invariant i65: i9;\nloop invariant i66: i10;\nloop invariant i67: i11;\nloop invariant i68: i12;\nloop invariant i69: i13;\nloop invariant i70: i14;\nloop invariant i71: i15;\nloop invariant i72: i16;\nloop invariant i73: i17;\nloop invariant i74: i18;\nloop invariant i75: i19;\nloop invariant i76: i20;\nloop invariant i77: i21;\nloop invariant i78: i22;\nloop invariant i79: i23;\nloop invariant i80: i24;\nloop invariant i81: i25;\nloop invariant i82: i26;\nloop invariant i83: i27;\nloop invariant i84: i28;\nloop invariant i85: i29;\nloop invariant i86: i30;\nloop invariant i87: i31;\nloop invariant i88: i32;\nloop invariant i89: i33;\nloop invariant i90: i34;\nloop invariant i91: i35;\nloop invariant i92: i36;\nloop invariant i93: i37;\nloop invariant i94: i38;\nloop invariant i95: i39;\nloop invariant i96: i40;\nloop invariant i97: i41;\nloop invariant i98: i42;\nloop invariant i99: i43;\nloop invariant i100: i44;\nloop invariant i101: i45;\nloop invariant i102: i46;\nloop invariant i103: i47;\nloop invariant i104: i48;\nloop invariant i105: i49;\nloop invariant i106: i50;\nloop invariant i107: i51;\nloop invariant i108: i52;\nloop invariant i109: i53;\nloop invariant i110: i54;\nloop invariant i111: i55;\nloop invariant i112: i56;\nloop invariant i113: i57;\nloop invariant i114: i58;\nloop invariant i115: i59;\nloop invariant i116: i60;\nloop invariant i117: i61;\nloop invariant i118: i62;\nloop invariant i119: i63;\nloop invariant i120: i64;\nloop invariant i121: i65;\nloop invariant i122: i66;\nloop invariant i123: i67;\nloop invariant i124: i68;\nloop invariant i125: i69;\nloop invariant i126: i70;\nloop invariant i127: i71;\nloop invariant i128: i72;\nloop invariant i129: i73;\nloop invariant i130: i74;\nloop invariant i131: i75;\nloop invariant i132: i76;\nloop invariant i133: i77;\nloop invariant i134: i78;\nloop invariant i135: i79;\nloop invariant i136: i80;\nloop invariant i137: i81;\nloop invariant i138: i82;\nloop invariant i139: i83;\nloop invariant i140: i84;\nloop invariant i141: i85;\nloop invariant i142: i86;\nloop invariant i143: i87;\nloop invariant i144: i88;\nloop invariant i145: i89;\nloop invariant i146: i90;\nloop invariant i147: i91;\nloop invariant i148: i92;\nloop invariant i149: i93;\nloop invariant i150: i94;\nloop invariant i151: i95;\nloop invariant i152: i96;\nloop invariant i153: i97;\nloop invariant i154: i98;\nloop invariant i155: i99;\nloop invariant i156: i100;\nloop invariant i157: i101;\nloop invariant i158: i102;\nloop invariant i159: i103;\nloop invariant i160: i104;\nloop invariant i161: i105;\nloop invariant i162: i106;\nloop invariant i163: i107;\nloop invariant i164: i108;\nloop invariant i165: i109;\nloop invariant i166: i110;\nloop invariant i167: i111;\nloop invariant i168: i112;\nloop invariant i169: i113;\nloop invariant i170: i114;\nloop invariant i171: i115;\nloop invariant i172: i116;\nloop invariant i173: i117;\nloop invariant i174: i118;\nloop invariant i175: i119;\nloop invariant i176: i120;\nloop invariant i177: i121;\nloop invariant i178: i122;\nloop invariant i179: i123;\nloop invariant i180: i124;\nloop invariant i181: i125;\nloop invariant i182: i126;\nloop invariant i183: i127;\nloop invariant i184: i128;\nloop invariant i185: i129;\nloop invariant i186: i130;\nloop invariant i187: i131;\nloop invariant i188: i132;\nloop invariant i189: i133;\nloop invariant i190: i134;\nloop invariant i191: i135;\nloop invariant i192: i136;\nloop invariant i193: i137;\nloop invariant i194: i138;\nloop invariant i195: i139;\nloop invariant i196: i140;\nloop invariant i197: i141;\nloop invariant i198: i142;\nloop invariant i199: i143;\nloop invariant i200: i144;\nloop invariant i201: i145;\nloop invariant i202: i146;\nloop invariant i203: i147;\nloop invariant i204: i148;\nloop invariant i205: i149;\nloop invariant i206: i150;\nloop invariant i207: i151;\nloop invariant i208: i152;\nloop invariant i209: i153;\nloop invariant i210: i154;\nloop invariant i211: i155;\nloop invariant i212: i156;\nloop invariant i213: i157;\nloop invariant i214: i158;\nloop invariant i215: s == (i * (i - 1)) / 2;\nloop invariant i216: 0 <= i <= n;loop invariant 0 <= v;loop invariant 0 <= s;loop invariant s == i * v;loop invariant s <= 65025;loop invariant s >= 0;loop invariant v == unknown_uchar();\nloop invariant i217: 0 <= s <= i * 255;\nloop invariant i218: v == i ? s == i * v : s == i * v + v;\nloop invariant i219: v == i ? i == 0 : i == 1;\nloop invariant i220: s <= 65535;\nloop invariant i221: 0 < n <= 255;\nloop invariant i222: s < v ==> i < n;\nloop invariant i223: s <= (v + 65025) * i / (n - i + 1);\nloop invariant i224: s >= (v + 1) * i / 2;\nloop invariant i225: s <= v * i / 2 + (v + 1) * (n - i) / 2;\nloop invariant i226: s <= (v + 1) * n / 2;\nloop invariant i227: s >= (v + 1) * (i - 1) / 2;\nloop invariant i228: s >= (v + 1) * (n - i) / 2;\nloop invariant i229: s <= (n * v) + (n * (n - 1) / 2);\nloop invariant i230: 1 <= i <= n;\nloop invariant i231: i >= n ==> s <= 65025;\nloop invariant i232: i <= n ==> s >= v;\nloop invariant i233: s <= 65025 ==> i <= n;\nloop invariant i234: s >= v ==> i >= n;\nloop invariant i235: s + v >= v;\nloop invariant i236: s + v <= 65025;\nloop invariant i237: s <= i * 255;\nloop invariant i238: s <= (i * (i + 1) * 255) / 2;\nloop invariant i239: s <= (n * (n + 1) * 255) / 2;\nloop invariant i240: s <= (n * 255);\nloop invariant i241: s <= (n * 255) + v;\nloop invariant i242: s + v * (n - i) >= v;\nloop invariant i243: s + v * (n - i) <= 65025;\nloop invariant i244: n <= 255;\nloop invariant i245: i + 1 <= n;\nloop invariant i246: s + v * (n - i) == 0;\nloop invariant i247: s + v * (n - i) == v;\nloop invariant i248: s + v * (n - i) == 65025;\nloop invariant i249: s + v * (n - i) == 255;\nloop invariant i250: s + v * (n - i) == 1;\nloop invariant i251: s + v * (n - i) == 2;\nloop invariant i252: s + v * (n - i) == 3;\nloop invariant i253: s + v * (n - i) == 4;\nloop invariant i254: s + v * (n - i) == 5;\nloop invariant i255: s + v * (n - i) == 6;\nloop invariant i256: s + v * (n - i) == 7;\nloop invariant i257: s + v * (n - i) == 8;\nloop invariant i258: s + v * (n - i) == 9;\nloop invariant i259: s + v * (n - i) == 10;\nloop invariant i260: s + v * (n - i) == 11;\nloop invariant i261: s + v * (n - i) == 12;\nloop invariant i262: s + v * (n - i) == 13;\nloop invariant i263: s + v * (n - i) == 14;\nloop invariant i264: s + v * (n - i) == 15;\nloop invariant i265: s + v * (n - i) == 16;\nloop invariant i266: s + v * (n - i) == 17;\nloop invariant i267: s + v * (n - i) == 18;\nloop invariant i268: s + v * (n - i) == 19;\nloop invariant i269: s + v * (n - i) == 20;\nloop invariant i270: s + v * (n - i) == 21;\nloop invariant i271: s + v * (n - i) == 22;\nloop invariant i272: s + v * (n - i) == 23;\nloop invariant i273: s + v * (n - i) == 24;\nloop invariant i274: s + v * (n - i) == 25;\nloop invariant i275: s + v * (n - i) == 26;\nloop invariant i276: s + v * (n - i) == 27;\nloop invariant i277: s + v * (n - i) == 28;\nloop invariant i278: s + v * (n - i) == 29;\nloop invariant i279: s + v * (n - i) == 30;\nloop invariant i280: s + v * (n - i) == 31;\nloop invariant i281: s + v * (n - i) == 32;\nloop invariant i282: s + v * (n - i) == 33;\nloop invariant i283: s + v * (n - i) == 34;\nloop invariant i284: s + v * (n - i) == 35;\nloop invariant i285: s + v * (n - i) == 36;\nloop invariant i286: s + v * (n - i) == 37;\nloop invariant i287: s + v * (n - i) == 38;\nloop invariant i288: s + v * (n - i) == 39;\nloop invariant i289: s + v * (n - i) == 40;\nloop invariant i290: s + v * (n - i) == 41;\nloop invariant i291: s + v * (n - i) == 42;\nloop invariant i292: s + v * (n - i) == 43;\nloop invariant i293: s + v * (n - i) == 44;\nloop invariant i294: s + v * (n - i) == 45;\nloop invariant i295: s + v * (n - i) == 46;\nloop invariant i296: s + v * (n - i) == 47;\nloop invariant i297: s + v * (n - i) == 48;\nloop invariant i298: s + v * (n - i) == 49;\nloop invariant i299: s + v * (n - i) == 50;\nloop invariant i300: s + v * (n - i) == 51;\nloop invariant i301: s + v * (n - i) == 52;\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
        "combined_annotation_num_solver_calls": 226,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern unsigned char unknown_uchar(void);\n\nint main() {\n  unsigned char n = unknown_uchar();\n  if (n == 0) {\n    return 0;\n  }\n  unsigned char v = 0;\n  unsigned int  s = 0;\n  unsigned int  i = 0;\n  /*@\nloop invariant i1: 0 <= i <= n;\n\n\n\nloop invariant i5: (v <= 255);\nloop invariant i6: (s <= 65025);\n\n\nloop invariant i9: (v <= s);\n\nloop invariant i11: (s <= i * 255);\n\n\n\nloop invariant i15: n >= 1;\nloop invariant i16: i >= 0;\nloop invariant i17: i <= n;\nloop invariant i18: s >= 0;\nloop invariant i19: s <= 65025;\nloop invariant i20: v >= 0;\nloop invariant i21: v <= 255;\n\n\nloop invariant i24: s >= v;\nloop invariant i25: v == v;\nloop invariant i26: 0 <= v <= 255;\nloop invariant i27: 0 <= s <= 65025;\n\n\n\n\n\nloop invariant i33: i == n ==> s >= v;\n\nloop invariant i35: i == n ==> s >= 0;\nloop invariant i36: i == n ==> v >= 0;\nloop invariant i37: i == n ==> s <= 65025;\nloop invariant i38: i == n ==> v <= 255;\nloop invariant i39: i == n ==> i >= 0;\nloop invariant i40: i == n ==> n >= 0;\nloop invariant i41: i == n ==> n <= 255;\nloop invariant i42: i == n ==> s > 65025 ==> \\false;\nloop invariant i43: i == n ==> s < v ==> \\false;\n\n\n\nloop invariant i47: i == n ==> v == 0 ==> v >= 0;\nloop invariant i48: i == n ==> v == 0 ==> v <= 255;\nloop invariant i49: i == n ==> v == 0 ==> s >= 0;\nloop invariant i50: i == n ==> v == 0 ==> s <= 65025;\nloop invariant i51: i == n ==> v == 0 ==> n >= 0;\nloop invariant i52: i == n ==> v == 0 ==> n <= 255;\nloop invariant i53: i == n ==> v == 0 ==> i >= 0;\nloop invariant i54: i == n ==> v == 0 ==> i <= n;\nloop invariant i55: i == n ==> v == 0 ==> n == i;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i217: 0 <= s <= i * 255;\n\n\nloop invariant i220: s <= 65535;\nloop invariant i221: 0 < n <= 255;\nloop invariant i222: s < v ==> i < n;\n\n\n\n\n\n\n\n\nloop invariant i231: i >= n ==> s <= 65025;\nloop invariant i232: i <= n ==> s >= v;\nloop invariant i233: s <= 65025 ==> i <= n;\n\nloop invariant i235: s + v >= v;\n\nloop invariant i237: s <= i * 255;\nloop invariant i238: s <= (i * (i + 1) * 255) / 2;\nloop invariant i239: s <= (n * (n + 1) * 255) / 2;\nloop invariant i240: s <= (n * 255);\nloop invariant i241: s <= (n * 255) + v;\n\n\nloop invariant i244: n <= 255;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (i < n) {\n    v = unknown_uchar();\n    s += v;\n    ++i;\n  }\n  if (s < v) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  if (s > 65025) {\n    {; \n//@ assert(\\false);\n};\n    return 1;\n  }\n  return 0;\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_2-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_3-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_4-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_1-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/underapprox_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-crafted/simple_vardep_2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-industry-pattern/mod3.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/const.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/eq2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-invariants/linear-inequality-inv-a.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c"
        ],
        "skipped": [],
        "total": 102,
        "success_count": 90,
        "failure_count": 12,
        "success_rate": 0.8823529411764706
    }
}