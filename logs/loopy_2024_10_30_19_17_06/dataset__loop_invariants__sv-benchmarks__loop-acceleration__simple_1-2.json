{
    "logs": {
        "file": "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n\n  while (x < 0x0fffffff) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant (x % 2) == 0 ==> (x >= 0);\nloop invariant (x % 2) == 0 ==> (x <= 0x0fffffff);\nloop invariant (x % 2) == 0 ==> ((x % 2) == 0);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x == 0x0fffffff;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0 ==> x >= 2;\nloop invariant x % 2 != 0 ==> x >= 1;\n*/\n```",
            "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x == 0 || (x - 2) % 2 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0 ==> x >= 2;\nloop invariant x % 2 != 0 ==> (x == 1) || (x >= 3);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x >= 2 * (x / 2);\nloop invariant (x / 2) * 2 == x;\nloop invariant x >= 2 * ((x / 2) - 1);\nloop invariant x % 4 == 0;\nloop invariant x >= 4 * ((x / 4) - 1);\nloop invariant x % 8 == 0;\nloop invariant x >= 8 * ((x / 8) - 1);\nloop invariant x % 16 == 0;\nloop invariant x >= 16 * ((x / 16) - 1);\nloop invariant x % 32 == 0;\nloop invariant x >= 32 * ((x / 32) - 1);\nloop invariant x % 64 == 0;\nloop invariant x >= 64 * ((x / 64) - 1);\nloop invariant x % 128 == 0;\nloop invariant x >= 128 * ((x / 128) - 1);\nloop invariant x % 256 == 0;\nloop invariant x >= 256 * ((x / 256) - 1);\nloop invariant x % 512 == 0;\nloop invariant x >= 512 * ((x / 512) - 1);\nloop invariant x % 1024 == 0;\nloop invariant x >= 1024 * ((x / 1024) - 1);\nloop invariant x % 2048 == 0;\nloop invariant x >= 2048 * ((x / 2048) - 1);\nloop invariant x % 4096 == 0;\nloop invariant x >= 4096 * ((x / 4096) - 1);\nloop invariant x % 8192 == 0;\nloop invariant x >= 8192 * ((x / 8192) - 1);\nloop invariant x % 16384 == 0;\nloop invariant x >= 16384 * ((x / 16384) - 1);\nloop invariant x % 32768 == 0;\nloop invariant x >= 32768 * ((x / 32768) - 1);\nloop invariant x % 65536 == 0;\nloop invariant x >= 65536 * ((x / 65536) - 1);\nloop invariant x % 131072 == 0;\nloop invariant x >= 131072 * ((x / 131072) - 1);\nloop invariant x % 262144 == 0;\nloop invariant x >= 262144 * ((x / 262144) - 1);\nloop invariant x % 524288 == 0;\nloop invariant x >= 524288 * ((x / 524288) - 1);\nloop invariant x % 1048576 == 0;\nloop invariant x >= 1048576 * ((x / 1048576) - 1);\nloop invariant x % 2097152 == 0;\nloop invariant x >= 2097152 * ((x / 2097152) - 1);\nloop invariant x % 4194304 == 0;\nloop invariant x >= 4194304 * ((x / 4194304) - 1);\nloop invariant x % 8388608 == 0;\nloop invariant x >= 8388608 * ((x / 8388608) - 1);\nloop invariant x % 16777216 == 0;\nloop invariant x >= 16777216 * ((x / 16777216) - 1);\nloop invariant x % 33554432 == 0;\nloop invariant x >= 33554432 * ((x / 33554432) - 1);\nloop invariant x % 67108864 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x <= 0x0fffffff;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0 ==> x >= 2;\nloop invariant x % 2 != 0 ==> x == 1;\n*/\n```",
            "```\n/*@\nloop invariant 1 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0;\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant (x % 2) == 0 ==> (x >= 0);\nloop invariant (x % 2) == 0 ==> (x <= 0x0fffffff);\nloop invariant (x % 2) == 0 ==> ((x % 2) == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n\n  /*@\n\nloop invariant i2: (x % 2) == 0 ==> (x >= 0);\n\nloop invariant i4: (x % 2) == 0 ==> ((x % 2) == 0);\n*/\nwhile (x < 0x0fffffff) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x == 0x0fffffff;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n\n  /*@\n\nloop invariant i2: x % 2 == 0;\n\n*/\nwhile (x < 0x0fffffff) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x / 2 <= 0x0ffffffe;\nloop invariant x >= 0;\nloop invariant x <= 0x0fffffff;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n\n  /*@\n\nloop invariant i2: x % 2 == 0;\nloop invariant i3: x / 2 <= 0x0ffffffe;\nloop invariant i4: x >= 0;\n\n*/\nwhile (x < 0x0fffffff) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0 ==> x >= 2;\nloop invariant x % 2 != 0 ==> x >= 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n\n  /*@\n\n\nloop invariant i3: x % 2 != 0 ==> x >= 1;\n*/\nwhile (x < 0x0fffffff) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 158,
                "annotations": "```\n/*@\nloop invariant i1;\nloop invariant i2;\nloop invariant i3;\nloop invariant i4;\nloop invariant i5;\nloop invariant i6;\nloop invariant i7;\nloop invariant i8;\nloop invariant i9;\nloop invariant i10;\nloop invariant i11;\nloop invariant i12;\nloop invariant i13;\nloop invariant i14;\nloop invariant i15;\nloop invariant i16;\nloop invariant i17;\nloop invariant i18;\nloop invariant i19;\nloop invariant i20;\nloop invariant i21;\nloop invariant i22;\nloop invariant i23;\nloop invariant i24;\nloop invariant i25;\nloop invariant i26;\nloop invariant i27;\nloop invariant i28;\nloop invariant i29;\nloop invariant i30;\nloop invariant i31;\nloop invariant i32;\nloop invariant i33;\nloop invariant i34;\nloop invariant i35;\nloop invariant i36;\nloop invariant i37;\nloop invariant i38;\nloop invariant i39;\nloop invariant i40;\nloop invariant i41;\nloop invariant i42;\nloop invariant i43;\nloop invariant i44;\nloop invariant i45;\nloop invariant i46;\nloop invariant i47;\nloop invariant i48;\nloop invariant i49;\nloop invariant i50;\nloop invariant i51;\nloop invariant i52;\nloop invariant i53;\nloop invariant i54;\nloop invariant i55;\nloop invariant i56;\nloop invariant i57;\nloop invariant i58;\nloop invariant i59;\nloop invariant i60;\nloop invariant i61;\nloop invariant i62;\nloop invariant i63;\nloop invariant i64;\nloop invariant i65;\nloop invariant i66;\nloop invariant i67;\nloop invariant i68;\nloop invariant i69;\nloop invariant i70;\nloop invariant i71;\nloop invariant i72;\nloop invariant i73;\nloop invariant i74;\nloop invariant i75;\nloop invariant i76;\nloop invariant i77;\nloop invariant i78;\nloop invariant i79;\nloop invariant i80;\nloop invariant i81;\nloop invariant i82;\nloop invariant i83;\nloop invariant i84;\nloop invariant i85;\nloop invariant i86;\nloop invariant i87;\nloop invariant i88;\nloop invariant i89;\nloop invariant i90;\nloop invariant i91;\nloop invariant i92;\nloop invariant i93;\nloop invariant i94;\nloop invariant i95;\nloop invariant i96;\nloop invariant i97;\nloop invariant i98;\nloop invariant i99;\nloop invariant i100;\nloop invariant i101;\nloop invariant i102;\nloop invariant i103;\nloop invariant i104;\nloop invariant i105;\nloop invariant i106;\nloop invariant i107;\nloop invariant i108;\nloop invariant i109;\nloop invariant i110;\nloop invariant i111;\nloop invariant i112;\nloop invariant i113;\nloop invariant i114;\nloop invariant i115;\nloop invariant i116;\nloop invariant i117;\nloop invariant i118;\nloop invariant i119;\nloop invariant i120;\nloop invariant i121;\nloop invariant i122;\nloop invariant i123;\nloop invariant i124;\nloop invariant i125;\nloop invariant i126;\nloop invariant i127;\nloop invariant i128;\nloop invariant i129;\nloop invariant i130;\nloop invariant i131;\nloop invariant i132;\nloop invariant i133;\nloop invariant i134;\nloop invariant i135;\nloop invariant i136;\nloop invariant i137;\nloop invariant i138;\nloop invariant i139;\nloop invariant i140;\nloop invariant i141;\nloop invariant i142;\nloop invariant i143;\nloop invariant i144;\nloop invariant i145;\nloop invariant i146;\nloop invariant i147;\nloop invariant i148;\nloop invariant i149;\nloop invariant i150;\nloop invariant i151;\nloop invariant i152;\nloop invariant i153;\nloop invariant i154;\nloop invariant i155;\nloop invariant i156;\nloop invariant i157;\nloop invariant i158;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n\n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (x < 0x0fffffff) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x == 0 || (x - 2) % 2 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n\n  /*@\n\nloop invariant i2: x == 0 || (x - 2) % 2 == 0;\n*/\nwhile (x < 0x0fffffff) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n\n  /*@\n\nloop invariant i2: x % 2 == 0;\n*/\nwhile (x < 0x0fffffff) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 3,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0 ==> x >= 2;\nloop invariant x % 2 != 0 ==> (x == 1) || (x >= 3);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n\n  /*@\n\n\nloop invariant i3: x % 2 != 0 ==> (x == 1) || (x >= 3);\n*/\nwhile (x < 0x0fffffff) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n\n  /*@\n\nloop invariant i2: x % 2 == 0;\n*/\nwhile (x < 0x0fffffff) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 26,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x >= 2 * (x / 2);\nloop invariant (x / 2) * 2 == x;\nloop invariant x >= 2 * ((x / 2) - 1);\nloop invariant x % 4 == 0;\nloop invariant x >= 4 * ((x / 4) - 1);\nloop invariant x % 8 == 0;\nloop invariant x >= 8 * ((x / 8) - 1);\nloop invariant x % 16 == 0;\nloop invariant x >= 16 * ((x / 16) - 1);\nloop invariant x % 32 == 0;\nloop invariant x >= 32 * ((x / 32) - 1);\nloop invariant x % 64 == 0;\nloop invariant x >= 64 * ((x / 64) - 1);\nloop invariant x % 128 == 0;\nloop invariant x >= 128 * ((x / 128) - 1);\nloop invariant x % 256 == 0;\nloop invariant x >= 256 * ((x / 256) - 1);\nloop invariant x % 512 == 0;\nloop invariant x >= 512 * ((x / 512) - 1);\nloop invariant x % 1024 == 0;\nloop invariant x >= 1024 * ((x / 1024) - 1);\nloop invariant x % 2048 == 0;\nloop invariant x >= 2048 * ((x / 2048) - 1);\nloop invariant x % 4096 == 0;\nloop invariant x >= 4096 * ((x / 4096) - 1);\nloop invariant x % 8192 == 0;\nloop invariant x >= 8192 * ((x / 8192) - 1);\nloop invariant x % 16384 == 0;\nloop invariant x >= 16384 * ((x / 16384) - 1);\nloop invariant x % 32768 == 0;\nloop invariant x >= 32768 * ((x / 32768) - 1);\nloop invariant x % 65536 == 0;\nloop invariant x >= 65536 * ((x / 65536) - 1);\nloop invariant x % 131072 == 0;\nloop invariant x >= 131072 * ((x / 131072) - 1);\nloop invariant x % 262144 == 0;\nloop invariant x >= 262144 * ((x / 262144) - 1);\nloop invariant x % 524288 == 0;\nloop invariant x >= 524288 * ((x / 524288) - 1);\nloop invariant x % 1048576 == 0;\nloop invariant x >= 1048576 * ((x / 1048576) - 1);\nloop invariant x % 2097152 == 0;\nloop invariant x >= 2097152 * ((x / 2097152) - 1);\nloop invariant x % 4194304 == 0;\nloop invariant x >= 4194304 * ((x / 4194304) - 1);\nloop invariant x % 8388608 == 0;\nloop invariant x >= 8388608 * ((x / 8388608) - 1);\nloop invariant x % 16777216 == 0;\nloop invariant x >= 16777216 * ((x / 16777216) - 1);\nloop invariant x % 33554432 == 0;\nloop invariant x >= 33554432 * ((x / 33554432) - 1);\nloop invariant x % 67108864 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n\n  /*@\n\nloop invariant i2: x % 2 == 0;\nloop invariant i3: x >= 2 * (x / 2);\nloop invariant i4: (x / 2) * 2 == x;\nloop invariant i5: x >= 2 * ((x / 2) - 1);\n\nloop invariant i7: x >= 4 * ((x / 4) - 1);\n\nloop invariant i9: x >= 8 * ((x / 8) - 1);\n\nloop invariant i11: x >= 16 * ((x / 16) - 1);\n\nloop invariant i13: x >= 32 * ((x / 32) - 1);\n\nloop invariant i15: x >= 64 * ((x / 64) - 1);\n\nloop invariant i17: x >= 128 * ((x / 128) - 1);\n\nloop invariant i19: x >= 256 * ((x / 256) - 1);\n\nloop invariant i21: x >= 512 * ((x / 512) - 1);\n\nloop invariant i23: x >= 1024 * ((x / 1024) - 1);\n\nloop invariant i25: x >= 2048 * ((x / 2048) - 1);\n\nloop invariant i27: x >= 4096 * ((x / 4096) - 1);\n\nloop invariant i29: x >= 8192 * ((x / 8192) - 1);\n\nloop invariant i31: x >= 16384 * ((x / 16384) - 1);\n\nloop invariant i33: x >= 32768 * ((x / 32768) - 1);\n\nloop invariant i35: x >= 65536 * ((x / 65536) - 1);\n\nloop invariant i37: x >= 131072 * ((x / 131072) - 1);\n\nloop invariant i39: x >= 262144 * ((x / 262144) - 1);\n\nloop invariant i41: x >= 524288 * ((x / 524288) - 1);\n\nloop invariant i43: x >= 1048576 * ((x / 1048576) - 1);\n\nloop invariant i45: x >= 2097152 * ((x / 2097152) - 1);\n\nloop invariant i47: x >= 4194304 * ((x / 4194304) - 1);\n\nloop invariant i49: x >= 8388608 * ((x / 8388608) - 1);\n\nloop invariant i51: x >= 16777216 * ((x / 16777216) - 1);\n\nloop invariant i53: x >= 33554432 * ((x / 33554432) - 1);\n\n*/\nwhile (x < 0x0fffffff) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x;\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0;\nloop invariant x <= 0x0fffffff;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n\n  /*@\nloop invariant i1: 0 <= x;\n\nloop invariant i3: x % 2 == 0;\n\n*/\nwhile (x < 0x0fffffff) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0 ==> x >= 2;\nloop invariant x % 2 != 0 ==> x == 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n\n  /*@\n\n\n\n*/\nwhile (x < 0x0fffffff) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 1 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n\n  /*@\n\nloop invariant i2: x % 2 == 0;\n*/\nwhile (x < 0x0fffffff) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n\n  /*@\n\nloop invariant i2: x % 2 == 0;\n*/\nwhile (x < 0x0fffffff) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= x <= 0x0fffffff;\nloop invariant x % 2 == 0;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n\n  /*@\n\nloop invariant i2: x % 2 == 0;\n*/\nwhile (x < 0x0fffffff) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
                "checker_output_after_prune": true
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 22: unbound logic variable i1. Ignoring loop annotation",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n\n  /*@\nloop invariant i1: 0 <= x <= 0x0fffffff;\nloop invariant i2: (x % 2) == 0 ==> (x >= 0);\nloop invariant i3: (x % 2) == 0 ==> (x <= 0x0fffffff);\nloop invariant i4: (x % 2) == 0 ==> ((x % 2) == 0);\nloop invariant i5: x % 2 == 0;\nloop invariant i6: x == 0x0fffffff;\nloop invariant i7: x / 2 <= 0x0ffffffe;\nloop invariant i8: x >= 0;\nloop invariant i9: x <= 0x0fffffff;\nloop invariant i10: x % 2 == 0 ==> x >= 2;\nloop invariant i11: x % 2 != 0 ==> x >= 1;\nloop invariant i12: i1;\nloop invariant i13: i2;\nloop invariant i14: i3;\nloop invariant i15: i4;\nloop invariant i16: i5;\nloop invariant i17: i6;\nloop invariant i18: i7;\nloop invariant i19: i8;\nloop invariant i20: i9;\nloop invariant i21: i10;\nloop invariant i22: i11;\nloop invariant i23: i12;\nloop invariant i24: i13;\nloop invariant i25: i14;\nloop invariant i26: i15;\nloop invariant i27: i16;\nloop invariant i28: i17;\nloop invariant i29: i18;\nloop invariant i30: i19;\nloop invariant i31: i20;\nloop invariant i32: i21;\nloop invariant i33: i22;\nloop invariant i34: i23;\nloop invariant i35: i24;\nloop invariant i36: i25;\nloop invariant i37: i26;\nloop invariant i38: i27;\nloop invariant i39: i28;\nloop invariant i40: i29;\nloop invariant i41: i30;\nloop invariant i42: i31;\nloop invariant i43: i32;\nloop invariant i44: i33;\nloop invariant i45: i34;\nloop invariant i46: i35;\nloop invariant i47: i36;\nloop invariant i48: i37;\nloop invariant i49: i38;\nloop invariant i50: i39;\nloop invariant i51: i40;\nloop invariant i52: i41;\nloop invariant i53: i42;\nloop invariant i54: i43;\nloop invariant i55: i44;\nloop invariant i56: i45;\nloop invariant i57: i46;\nloop invariant i58: i47;\nloop invariant i59: i48;\nloop invariant i60: i49;\nloop invariant i61: i50;\nloop invariant i62: i51;\nloop invariant i63: i52;\nloop invariant i64: i53;\nloop invariant i65: i54;\nloop invariant i66: i55;\nloop invariant i67: i56;\nloop invariant i68: i57;\nloop invariant i69: i58;\nloop invariant i70: i59;\nloop invariant i71: i60;\nloop invariant i72: i61;\nloop invariant i73: i62;\nloop invariant i74: i63;\nloop invariant i75: i64;\nloop invariant i76: i65;\nloop invariant i77: i66;\nloop invariant i78: i67;\nloop invariant i79: i68;\nloop invariant i80: i69;\nloop invariant i81: i70;\nloop invariant i82: i71;\nloop invariant i83: i72;\nloop invariant i84: i73;\nloop invariant i85: i74;\nloop invariant i86: i75;\nloop invariant i87: i76;\nloop invariant i88: i77;\nloop invariant i89: i78;\nloop invariant i90: i79;\nloop invariant i91: i80;\nloop invariant i92: i81;\nloop invariant i93: i82;\nloop invariant i94: i83;\nloop invariant i95: i84;\nloop invariant i96: i85;\nloop invariant i97: i86;\nloop invariant i98: i87;\nloop invariant i99: i88;\nloop invariant i100: i89;\nloop invariant i101: i90;\nloop invariant i102: i91;\nloop invariant i103: i92;\nloop invariant i104: i93;\nloop invariant i105: i94;\nloop invariant i106: i95;\nloop invariant i107: i96;\nloop invariant i108: i97;\nloop invariant i109: i98;\nloop invariant i110: i99;\nloop invariant i111: i100;\nloop invariant i112: i101;\nloop invariant i113: i102;\nloop invariant i114: i103;\nloop invariant i115: i104;\nloop invariant i116: i105;\nloop invariant i117: i106;\nloop invariant i118: i107;\nloop invariant i119: i108;\nloop invariant i120: i109;\nloop invariant i121: i110;\nloop invariant i122: i111;\nloop invariant i123: i112;\nloop invariant i124: i113;\nloop invariant i125: i114;\nloop invariant i126: i115;\nloop invariant i127: i116;\nloop invariant i128: i117;\nloop invariant i129: i118;\nloop invariant i130: i119;\nloop invariant i131: i120;\nloop invariant i132: i121;\nloop invariant i133: i122;\nloop invariant i134: i123;\nloop invariant i135: i124;\nloop invariant i136: i125;\nloop invariant i137: i126;\nloop invariant i138: i127;\nloop invariant i139: i128;\nloop invariant i140: i129;\nloop invariant i141: i130;\nloop invariant i142: i131;\nloop invariant i143: i132;\nloop invariant i144: i133;\nloop invariant i145: i134;\nloop invariant i146: i135;\nloop invariant i147: i136;\nloop invariant i148: i137;\nloop invariant i149: i138;\nloop invariant i150: i139;\nloop invariant i151: i140;\nloop invariant i152: i141;\nloop invariant i153: i142;\nloop invariant i154: i143;\nloop invariant i155: i144;\nloop invariant i156: i145;\nloop invariant i157: i146;\nloop invariant i158: i147;\nloop invariant i159: i148;\nloop invariant i160: i149;\nloop invariant i161: i150;\nloop invariant i162: i151;\nloop invariant i163: i152;\nloop invariant i164: i153;\nloop invariant i165: i154;\nloop invariant i166: i155;\nloop invariant i167: i156;\nloop invariant i168: i157;\nloop invariant i169: i158;\nloop invariant i170: x == 0 || (x - 2) % 2 == 0;\nloop invariant i171: x % 2 != 0 ==> (x == 1) || (x >= 3);\nloop invariant i172: x >= 2 * (x / 2);\nloop invariant i173: (x / 2) * 2 == x;\nloop invariant i174: x >= 2 * ((x / 2) - 1);\nloop invariant i175: x % 4 == 0;\nloop invariant i176: x >= 4 * ((x / 4) - 1);\nloop invariant i177: x % 8 == 0;\nloop invariant i178: x >= 8 * ((x / 8) - 1);\nloop invariant i179: x % 16 == 0;\nloop invariant i180: x >= 16 * ((x / 16) - 1);\nloop invariant i181: x % 32 == 0;\nloop invariant i182: x >= 32 * ((x / 32) - 1);\nloop invariant i183: x % 64 == 0;\nloop invariant i184: x >= 64 * ((x / 64) - 1);\nloop invariant i185: x % 128 == 0;\nloop invariant i186: x >= 128 * ((x / 128) - 1);\nloop invariant i187: x % 256 == 0;\nloop invariant i188: x >= 256 * ((x / 256) - 1);\nloop invariant i189: x % 512 == 0;\nloop invariant i190: x >= 512 * ((x / 512) - 1);\nloop invariant i191: x % 1024 == 0;\nloop invariant i192: x >= 1024 * ((x / 1024) - 1);\nloop invariant i193: x % 2048 == 0;\nloop invariant i194: x >= 2048 * ((x / 2048) - 1);\nloop invariant i195: x % 4096 == 0;\nloop invariant i196: x >= 4096 * ((x / 4096) - 1);\nloop invariant i197: x % 8192 == 0;\nloop invariant i198: x >= 8192 * ((x / 8192) - 1);\nloop invariant i199: x % 16384 == 0;\nloop invariant i200: x >= 16384 * ((x / 16384) - 1);\nloop invariant i201: x % 32768 == 0;\nloop invariant i202: x >= 32768 * ((x / 32768) - 1);\nloop invariant i203: x % 65536 == 0;\nloop invariant i204: x >= 65536 * ((x / 65536) - 1);\nloop invariant i205: x % 131072 == 0;\nloop invariant i206: x >= 131072 * ((x / 131072) - 1);\nloop invariant i207: x % 262144 == 0;\nloop invariant i208: x >= 262144 * ((x / 262144) - 1);\nloop invariant i209: x % 524288 == 0;\nloop invariant i210: x >= 524288 * ((x / 524288) - 1);\nloop invariant i211: x % 1048576 == 0;\nloop invariant i212: x >= 1048576 * ((x / 1048576) - 1);\nloop invariant i213: x % 2097152 == 0;\nloop invariant i214: x >= 2097152 * ((x / 2097152) - 1);\nloop invariant i215: x % 4194304 == 0;\nloop invariant i216: x >= 4194304 * ((x / 4194304) - 1);\nloop invariant i217: x % 8388608 == 0;\nloop invariant i218: x >= 8388608 * ((x / 8388608) - 1);\nloop invariant i219: x % 16777216 == 0;\nloop invariant i220: x >= 16777216 * ((x / 16777216) - 1);\nloop invariant i221: x % 33554432 == 0;\nloop invariant i222: x >= 33554432 * ((x / 33554432) - 1);\nloop invariant i223: x % 67108864 == 0;\nloop invariant i224: 0 <= x;\nloop invariant i225: x % 2 != 0 ==> x == 1;\nloop invariant i226: 1 <= x <= 0x0fffffff;\n*/\nwhile (x < 0x0fffffff) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
        "combined_annotation_num_solver_calls": 190,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\n\nint main(void) {\n  unsigned int x = 0;\n\n  /*@\n\nloop invariant i2: (x % 2) == 0 ==> (x >= 0);\n\nloop invariant i4: (x % 2) == 0 ==> ((x % 2) == 0);\nloop invariant i5: x % 2 == 0;\n\nloop invariant i7: x / 2 <= 0x0ffffffe;\nloop invariant i8: x >= 0;\n\n\nloop invariant i11: x % 2 != 0 ==> x >= 1;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i170: x == 0 || (x - 2) % 2 == 0;\nloop invariant i171: x % 2 != 0 ==> (x == 1) || (x >= 3);\nloop invariant i172: x >= 2 * (x / 2);\nloop invariant i173: (x / 2) * 2 == x;\nloop invariant i174: x >= 2 * ((x / 2) - 1);\n\nloop invariant i176: x >= 4 * ((x / 4) - 1);\n\nloop invariant i178: x >= 8 * ((x / 8) - 1);\n\nloop invariant i180: x >= 16 * ((x / 16) - 1);\n\nloop invariant i182: x >= 32 * ((x / 32) - 1);\n\nloop invariant i184: x >= 64 * ((x / 64) - 1);\n\nloop invariant i186: x >= 128 * ((x / 128) - 1);\n\nloop invariant i188: x >= 256 * ((x / 256) - 1);\n\nloop invariant i190: x >= 512 * ((x / 512) - 1);\n\nloop invariant i192: x >= 1024 * ((x / 1024) - 1);\n\nloop invariant i194: x >= 2048 * ((x / 2048) - 1);\n\nloop invariant i196: x >= 4096 * ((x / 4096) - 1);\n\nloop invariant i198: x >= 8192 * ((x / 8192) - 1);\n\nloop invariant i200: x >= 16384 * ((x / 16384) - 1);\n\nloop invariant i202: x >= 32768 * ((x / 32768) - 1);\n\nloop invariant i204: x >= 65536 * ((x / 65536) - 1);\n\nloop invariant i206: x >= 131072 * ((x / 131072) - 1);\n\nloop invariant i208: x >= 262144 * ((x / 262144) - 1);\n\nloop invariant i210: x >= 524288 * ((x / 524288) - 1);\n\nloop invariant i212: x >= 1048576 * ((x / 1048576) - 1);\n\nloop invariant i214: x >= 2097152 * ((x / 2097152) - 1);\n\nloop invariant i216: x >= 4194304 * ((x / 4194304) - 1);\n\nloop invariant i218: x >= 8388608 * ((x / 8388608) - 1);\n\nloop invariant i220: x >= 16777216 * ((x / 16777216) - 1);\n\nloop invariant i222: x >= 33554432 * ((x / 33554432) - 1);\n\nloop invariant i224: 0 <= x;\nloop invariant i225: x % 2 != 0 ==> x == 1;\n\n*/\nwhile (x < 0x0fffffff) {\n    x += 2;\n  }\n\n  {;\n//@ assert(!(x % 2));\n}\n\n}",
        "checker_output_after_prune": true
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c",
            "../dataset/loop_invariants/code2inv/54.c",
            "../dataset/loop_invariants/code2inv/55.c",
            "../dataset/loop_invariants/code2inv/56.c",
            "../dataset/loop_invariants/code2inv/57.c",
            "../dataset/loop_invariants/code2inv/58.c",
            "../dataset/loop_invariants/code2inv/59.c",
            "../dataset/loop_invariants/code2inv/6.c",
            "../dataset/loop_invariants/code2inv/60.c",
            "../dataset/loop_invariants/code2inv/64.c",
            "../dataset/loop_invariants/code2inv/7.c",
            "../dataset/loop_invariants/code2inv/71.c",
            "../dataset/loop_invariants/code2inv/73.c",
            "../dataset/loop_invariants/code2inv/74.c",
            "../dataset/loop_invariants/code2inv/76.c",
            "../dataset/loop_invariants/code2inv/77.c",
            "../dataset/loop_invariants/code2inv/78.c",
            "../dataset/loop_invariants/code2inv/79.c",
            "../dataset/loop_invariants/code2inv/8.c",
            "../dataset/loop_invariants/code2inv/80.c",
            "../dataset/loop_invariants/code2inv/81.c",
            "../dataset/loop_invariants/code2inv/82.c",
            "../dataset/loop_invariants/code2inv/87.c",
            "../dataset/loop_invariants/code2inv/88.c",
            "../dataset/loop_invariants/code2inv/89.c",
            "../dataset/loop_invariants/code2inv/9.c",
            "../dataset/loop_invariants/code2inv/90.c",
            "../dataset/loop_invariants/code2inv/91.c",
            "../dataset/loop_invariants/code2inv/92.c",
            "../dataset/loop_invariants/code2inv/93.c",
            "../dataset/loop_invariants/code2inv/94.c",
            "../dataset/loop_invariants/code2inv/95.c",
            "../dataset/loop_invariants/code2inv/96.c",
            "../dataset/loop_invariants/code2inv/97.c",
            "../dataset/loop_invariants/code2inv/98.c",
            "../dataset/loop_invariants/code2inv/99.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/const_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/multivar_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_1-1.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/phases_2-2.c",
            "../dataset/loop_invariants/sv-benchmarks/loop-acceleration/simple_1-2.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c",
            "../dataset/loop_invariants/code2inv/63.c",
            "../dataset/loop_invariants/code2inv/67.c",
            "../dataset/loop_invariants/code2inv/68.c",
            "../dataset/loop_invariants/code2inv/83.c"
        ],
        "skipped": [],
        "total": 90,
        "success_count": 78,
        "failure_count": 12,
        "success_rate": 0.8666666666666667
    }
}