{
    "logs": {
        "file": "../dataset/loop_invariants/code2inv/53.c",
        "benchmark_code": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  while (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
        "success": true,
        "annotation_blocks": [
            "```\n/*@\nloop invariant c >= 0;\nloop invariant (c <= n);\nloop invariant c <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c == n ==> c == 1);\nloop invariant (c == 1 ==> c == 0);\nloop invariant (c > n ==> c == n + 1);\nloop invariant (c == n + 1 ==> c == n);\nloop invariant (c == n ==> c == n - 1);\nloop invariant (c == n - 1 ==> c == n);\nloop invariant (c == n ==> c == n - 2);\nloop invariant (c == n - 2 ==> c == n);\nloop invariant (c == n ==> c == n - 3);\nloop invariant (c == n - 3 ==> c == n);\nloop invariant (c == n ==> c == n - 4);\nloop invariant (c == n - 4 ==> c == n);\nloop invariant (c == n ==> c == n - 5);\nloop invariant (c == n - 5 ==> c == n);\nloop invariant (c == n ==> c == n - 6);\nloop invariant (c == n - 6 ==> c == n);\nloop invariant (c == n ==> c == n - 7);\nloop invariant (c == n - 7 ==> c == n);\nloop invariant (c == n ==> c == n - 8);\nloop invariant (c == n - 8 ==> c == n);\nloop invariant (c == n ==> c == n - 9);\nloop invariant (c == n - 9 ==> c == n);\nloop invariant (c == n ==> c == n - 10);\nloop invariant (c == n - 10 ==> c == n);\nloop invariant (c == n ==> c == n - 11);\nloop invariant (c == n - 11 ==> c == n);\nloop invariant (c == n ==> c == n - 12);\nloop invariant (c == n - 12 ==> c == n);\nloop invariant (c == n ==> c == n - 13);\nloop invariant (c == n - 13 ==> c == n);\nloop invariant (c == n ==> c == n - 14);\nloop invariant (c == n - 14 ==> c == n);\nloop invariant (c == n ==> c == n - 15);\nloop invariant (c == n - 15 ==> c == n);\nloop invariant (c == n ==> c == n - 16);\nloop invariant (c == n - 16 ==> c == n);\nloop invariant (c == n ==> c == n - 17);\nloop invariant (c == n - 17 ==> c == n);\nloop invariant (c == n ==> c == n - 18);\nloop invariant (c == n - 18 ==> c == n);\nloop invariant (c == n ==> c == n - 19);\nloop invariant (c == n - 19 ==> c == n);\nloop invariant (c == n ==> c == n - 20);\nloop invariant (c == n - 20 ==> c == n);\nloop invariant (c == n ==> c == n - 21);\nloop invariant (c == n - 21 ==> c == n);\nloop invariant (c == n ==> c == n - 22);\nloop invariant (c == n - 22 ==> c == n);\nloop invariant (c == n ==> c == n - 23);\nloop invariant (c == n - 23 ==> c == n);\nloop invariant (c == n ==> c == n - 24);\nloop invariant (c == n - 24 ==> c == n);\nloop invariant (c == n ==> c == n - 25);\nloop invariant (c == n - 25 ==> c == n);\nloop invariant (c == n ==> c == n - 26);\nloop invariant (c == n - 26 ==> c == n);\nloop invariant (c == n ==> c == n - 27);\nloop invariant (c == n - 27 ==> c == n);\nloop invariant (c == n ==> c == n - 28);\nloop invariant (c == n - 28 ==> c == n);\nloop invariant (c == n ==> c == n - 29);\nloop invariant (c == n - 29 ==> c == n);\nloop invariant (c == n ==> c == n - 30);\nloop invariant (c == n - 30 ==> c == n);\nloop invariant (c == n ==> c == n - 31);\nloop invariant (c == n - 31 ==> c == n);\nloop invariant (c == n ==> c == n - 32);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c == n ==> c == 1);\nloop invariant (c != n ==> c >= 0);\nloop invariant (c != n ==> c <= n);\nloop invariant (c != n ==> c >=0);\nloop invariant (c != n ==> c <= n);\nloop invariant c != n ==> (c == 0 ==> n == 0);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 1 ==> n == 1);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 0 ==> n == 0);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 1 ==> n == 1);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 0 ==> n == 0);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 1 ==> n == 1);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 0 ==> n == 0);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 1 ==> n == 1);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 0 ==> n == 0);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 1 ==> n == 1);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 0 ==> n == 0);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 1 ==> n == 1);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 0 ==> n == 0);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 1 ==> n == 1);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 0 ==> n == 0);\n*/\n```",
            "```\n/*@\nloop invariant c <= n;\n*/\n```",
            "```\n/*@\nloop invariant c >= 1;\nloop invariant c <= 2;\nloop invariant c == 1 ==> n == 0;\nloop invariant c == 2 ==> n == 1;\nloop invariant c >= 1 ==> n >= 0;\nloop invariant c <= 2 ==> n <= 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0;\nloop invariant c >= 1 ==> c == 2 ==> n == 1;\nloop invariant c <= 2 ==> c >= 1 ==> n >= 0;\nloop invariant c <= 2 ==> c >= 1 ==> n <= 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c >= 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c <= 2;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> n == 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> n >= 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> n <= 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c >= 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c >= 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c >= 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c <= 2;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c <= 2;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c <= 2;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c == 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c == 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c == 1 ==> n == 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c == 1 ==> n == 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c == 1 ==> n >= 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c == 1 ==> n <= 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c == 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c == 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 < c <= n;\nloop invariant 0 <= n;\nloop invariant c >= 0;\nloop invariant (c > n) ==> (v1 == 1);\nloop invariant (c == n) ==> (v2 == 1);\nloop invariant (c != n) ==> (v3 == 1);\nloop invariant (c != n) ==> ((c >= 0) && (c <= n));\nloop invariant 0 < c <= n;\nloop invariant 0 <= n;\nloop invariant c >= 0;\nloop invariant (c > n) ==> (v1 == 1);\nloop invariant (c == n) ==> (v2 == 1);\nloop invariant (c != n) ==> (v3 == 1);\nloop invariant (c != n) ==> ((c >= 0) && (c <= n));\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n; loop invariant c <= n; loop invariant c == n ==> c == 1; loop invariant c != n ==> c >= 0; loop invariant c != n ==> c <= n; loop invariant c != n ==> c < n; loop invariant c != n ==> c > 0; loop invariant c != n ==> c < n; loop invariant c != n ==> c == n; loop invariant c != n ==> c != n; loop invariant c != n ==> c != n; loop invariant c != n ==> c != n; loop invariant c != n ==> c != n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c == n) ==> (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n; loop invariant n >= 0; loop invariant c >= 0; loop invariant c <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c == n ==> c == 1;\nloop invariant c == 1 ==> c == 0;\nloop invariant c > n ==> c > n + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\nloop invariant (c <= n || c >= n);\nloop invariant (c == n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\n*/\n```",
            "```\n/*@\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant unknown() => c >= 0;\nloop invariant unknown() => c <= 1;\nloop invariant !unknown() => c >= 0;\nloop invariant !unknown() => c <= 1;\nloop invariant c == n ==> c >= 0;\nloop invariant c == n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> !(c > n);\nloop invariant c != n ==> !(unknown() && (c > n));\nloop invariant c != n ==> !(!unknown() && (c == n));\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)));\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 1 <= v1 <= n;\nloop invariant 1 <= v2 <= n;\nloop invariant 1 <= v3 <= n;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\nloop invariant v3 >= 1;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\nloop invariant v3 >= 1;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\nloop invariant v3 >= 1;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\nloop invariant v3 >= 1;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\nloop invariant v3 >= 1;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\nloop invariant v3 >= 1;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\nloop invariant v3 >= 1;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\nloop invariant v3 >= 1;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\nloop invariant v3 >= 1;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\nloop invariant v3 >= 1;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c >= n ==> c == n + 1;\nloop invariant c == n ==> c == 1;\nloop invariant c <= n ==> c <= n + 1;\nloop invariant c >= 0 ==> c <= n + 1;\n*/\n```",
            "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\nloop invariant (c == n) ==> (c >= 0);\n*/\n```"
        ],
        "completions": [
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant c >= 0;\nloop invariant (c <= n);\nloop invariant c <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: c >= 0;\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c == n ==> c == 1);\nloop invariant (c == 1 ==> c == 0);\nloop invariant (c > n ==> c == n + 1);\nloop invariant (c == n + 1 ==> c == n);\nloop invariant (c == n ==> c == n - 1);\nloop invariant (c == n - 1 ==> c == n);\nloop invariant (c == n ==> c == n - 2);\nloop invariant (c == n - 2 ==> c == n);\nloop invariant (c == n ==> c == n - 3);\nloop invariant (c == n - 3 ==> c == n);\nloop invariant (c == n ==> c == n - 4);\nloop invariant (c == n - 4 ==> c == n);\nloop invariant (c == n ==> c == n - 5);\nloop invariant (c == n - 5 ==> c == n);\nloop invariant (c == n ==> c == n - 6);\nloop invariant (c == n - 6 ==> c == n);\nloop invariant (c == n ==> c == n - 7);\nloop invariant (c == n - 7 ==> c == n);\nloop invariant (c == n ==> c == n - 8);\nloop invariant (c == n - 8 ==> c == n);\nloop invariant (c == n ==> c == n - 9);\nloop invariant (c == n - 9 ==> c == n);\nloop invariant (c == n ==> c == n - 10);\nloop invariant (c == n - 10 ==> c == n);\nloop invariant (c == n ==> c == n - 11);\nloop invariant (c == n - 11 ==> c == n);\nloop invariant (c == n ==> c == n - 12);\nloop invariant (c == n - 12 ==> c == n);\nloop invariant (c == n ==> c == n - 13);\nloop invariant (c == n - 13 ==> c == n);\nloop invariant (c == n ==> c == n - 14);\nloop invariant (c == n - 14 ==> c == n);\nloop invariant (c == n ==> c == n - 15);\nloop invariant (c == n - 15 ==> c == n);\nloop invariant (c == n ==> c == n - 16);\nloop invariant (c == n - 16 ==> c == n);\nloop invariant (c == n ==> c == n - 17);\nloop invariant (c == n - 17 ==> c == n);\nloop invariant (c == n ==> c == n - 18);\nloop invariant (c == n - 18 ==> c == n);\nloop invariant (c == n ==> c == n - 19);\nloop invariant (c == n - 19 ==> c == n);\nloop invariant (c == n ==> c == n - 20);\nloop invariant (c == n - 20 ==> c == n);\nloop invariant (c == n ==> c == n - 21);\nloop invariant (c == n - 21 ==> c == n);\nloop invariant (c == n ==> c == n - 22);\nloop invariant (c == n - 22 ==> c == n);\nloop invariant (c == n ==> c == n - 23);\nloop invariant (c == n - 23 ==> c == n);\nloop invariant (c == n ==> c == n - 24);\nloop invariant (c == n - 24 ==> c == n);\nloop invariant (c == n ==> c == n - 25);\nloop invariant (c == n - 25 ==> c == n);\nloop invariant (c == n ==> c == n - 26);\nloop invariant (c == n - 26 ==> c == n);\nloop invariant (c == n ==> c == n - 27);\nloop invariant (c == n - 27 ==> c == n);\nloop invariant (c == n ==> c == n - 28);\nloop invariant (c == n - 28 ==> c == n);\nloop invariant (c == n ==> c == n - 29);\nloop invariant (c == n - 29 ==> c == n);\nloop invariant (c == n ==> c == n - 30);\nloop invariant (c == n - 30 ==> c == n);\nloop invariant (c == n ==> c == n - 31);\nloop invariant (c == n - 31 ==> c == n);\nloop invariant (c == n ==> c == n - 32);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c <= n;\nloop invariant i2: (c == n ==> c == 1);\nloop invariant i3: (c == 1 ==> c == 0);\nloop invariant i4: (c > n ==> c == n + 1);\nloop invariant i5: (c == n + 1 ==> c == n);\nloop invariant i6: (c == n ==> c == n - 1);\n\nloop invariant i8: (c == n ==> c == n - 2);\n\nloop invariant i10: (c == n ==> c == n - 3);\n\nloop invariant i12: (c == n ==> c == n - 4);\n\nloop invariant i14: (c == n ==> c == n - 5);\n\nloop invariant i16: (c == n ==> c == n - 6);\n\nloop invariant i18: (c == n ==> c == n - 7);\n\nloop invariant i20: (c == n ==> c == n - 8);\n\nloop invariant i22: (c == n ==> c == n - 9);\n\nloop invariant i24: (c == n ==> c == n - 10);\n\nloop invariant i26: (c == n ==> c == n - 11);\n\nloop invariant i28: (c == n ==> c == n - 12);\n\nloop invariant i30: (c == n ==> c == n - 13);\n\nloop invariant i32: (c == n ==> c == n - 14);\n\nloop invariant i34: (c == n ==> c == n - 15);\n\nloop invariant i36: (c == n ==> c == n - 16);\n\nloop invariant i38: (c == n ==> c == n - 17);\n\nloop invariant i40: (c == n ==> c == n - 18);\n\nloop invariant i42: (c == n ==> c == n - 19);\n\nloop invariant i44: (c == n ==> c == n - 20);\n\nloop invariant i46: (c == n ==> c == n - 21);\n\nloop invariant i48: (c == n ==> c == n - 22);\n\nloop invariant i50: (c == n ==> c == n - 23);\n\nloop invariant i52: (c == n ==> c == n - 24);\n\nloop invariant i54: (c == n ==> c == n - 25);\n\nloop invariant i56: (c == n ==> c == n - 26);\n\nloop invariant i58: (c == n ==> c == n - 27);\n\nloop invariant i60: (c == n ==> c == n - 28);\n\nloop invariant i62: (c == n ==> c == n - 29);\n\nloop invariant i64: (c == n ==> c == n - 30);\n\nloop invariant i66: (c == n ==> c == n - 31);\n\nloop invariant i68: (c == n ==> c == n - 32);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c == n ==> c == 1);\nloop invariant (c != n ==> c >= 0);\nloop invariant (c != n ==> c <= n);\nloop invariant (c != n ==> c >=0);\nloop invariant (c != n ==> c <= n);\nloop invariant c != n ==> (c == 0 ==> n == 0);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 1 ==> n == 1);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 0 ==> n == 0);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 1 ==> n == 1);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 0 ==> n == 0);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 1 ==> n == 1);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 0 ==> n == 0);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 1 ==> n == 1);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 0 ==> n == 0);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 1 ==> n == 1);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 0 ==> n == 0);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 1 ==> n == 1);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 0 ==> n == 0);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 1 ==> n == 1);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c >= 0 ==> c <= n);\nloop invariant (c != n ==> c == 0 ==> n == 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c <= n;\nloop invariant i2: (c == n ==> c == 1);\nloop invariant i3: (c != n ==> c >= 0);\nloop invariant i4: (c != n ==> c <= n);\nloop invariant i5: (c != n ==> c >=0);\n\nloop invariant i7: (c != n ==> c >= 0 ==> c <= n);\nloop invariant i8: (c != n ==> c == 1 ==> n == 1);\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant c <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant c >= 1;\nloop invariant c <= 2;\nloop invariant c == 1 ==> n == 0;\nloop invariant c == 2 ==> n == 1;\nloop invariant c >= 1 ==> n >= 0;\nloop invariant c <= 2 ==> n <= 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0;\nloop invariant c >= 1 ==> c == 2 ==> n == 1;\nloop invariant c <= 2 ==> c >= 1 ==> n >= 0;\nloop invariant c <= 2 ==> c >= 1 ==> n <= 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c >= 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c <= 2;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> n == 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> n >= 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> n <= 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c >= 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c >= 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c >= 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c <= 2;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c <= 2;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c <= 2;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c == 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c == 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c == 1 ==> n == 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c == 1 ==> n == 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c == 1 ==> n >= 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c == 1 ==> n <= 0;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c == 1;\nloop invariant c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c == 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\nloop invariant i11: c >= 1 ==> c == 1 ==> n == 0 ==> c >= 1;\nloop invariant i12: c >= 1 ==> c == 1 ==> n == 0 ==> c <= 2;\nloop invariant i13: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1;\nloop invariant i14: c >= 1 ==> c == 1 ==> n == 0 ==> n == 0;\nloop invariant i15: c >= 1 ==> c == 1 ==> n == 0 ==> n >= 0;\nloop invariant i16: c >= 1 ==> c == 1 ==> n == 0 ==> n <= 0;\nloop invariant i17: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0;\nloop invariant i18: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0;\nloop invariant i19: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0;\nloop invariant i20: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c >= 1;\nloop invariant i21: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c >= 1;\nloop invariant i22: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c >= 1;\nloop invariant i23: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c <= 2;\nloop invariant i24: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c <= 2;\nloop invariant i25: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c <= 2;\nloop invariant i26: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1;\nloop invariant i27: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c == 1;\nloop invariant i28: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c == 1;\nloop invariant i29: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0;\nloop invariant i30: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c == 1 ==> n == 0;\nloop invariant i31: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c == 1 ==> n == 0;\nloop invariant i32: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0;\nloop invariant i33: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c == 1 ==> n >= 0;\nloop invariant i34: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c == 1 ==> n <= 0;\nloop invariant i35: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1;\nloop invariant i36: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c == 1;\nloop invariant i37: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c == 1;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 < c <= n;\nloop invariant 0 <= n;\nloop invariant c >= 0;\nloop invariant (c > n) ==> (v1 == 1);\nloop invariant (c == n) ==> (v2 == 1);\nloop invariant (c != n) ==> (v3 == 1);\nloop invariant (c != n) ==> ((c >= 0) && (c <= n));\nloop invariant 0 < c <= n;\nloop invariant 0 <= n;\nloop invariant c >= 0;\nloop invariant (c > n) ==> (v1 == 1);\nloop invariant (c == n) ==> (v2 == 1);\nloop invariant (c != n) ==> (v3 == 1);\nloop invariant (c != n) ==> ((c >= 0) && (c <= n));\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: 0 <= n;\nloop invariant i3: c >= 0;\n\nloop invariant i5: (c == n) ==> (v2 == 1);\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n; loop invariant c <= n; loop invariant c == n ==> c == 1; loop invariant c != n ==> c >= 0; loop invariant c != n ==> c <= n; loop invariant c != n ==> c < n; loop invariant c != n ==> c > 0; loop invariant c != n ==> c < n; loop invariant c != n ==> c == n; loop invariant c != n ==> c != n; loop invariant c != n ==> c != n; loop invariant c != n ==> c != n; loop invariant c != n ==> c != n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c <= n; loop invariant c <= n; loop invariant c == n ==> c == 1; loop invariant c != n ==> c >= 0; loop invariant c != n ==> c <= n; loop invariant c != n ==> c < n; loop invariant c != n ==> c > 0; loop invariant c != n ==> c < n; loop invariant c != n ==> c == n; loop invariant c != n ==> c != n; loop invariant c != n ==> c != n; loop invariant c != n ==> c != n; loop invariant c != n ==> c != n;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant (c == n) ==> (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\nloop invariant (v1 == v2) ==> (v2 == v3);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: (c == n) ==> (v1 == v2) ==> (v2 == v3);\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 1,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n; loop invariant n >= 0; loop invariant c >= 0; loop invariant c <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c == n ==> c == 1;\nloop invariant c == 1 ==> c == 0;\nloop invariant c > n ==> c > n + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c <= n;\nloop invariant i2: c == n ==> c == 1;\nloop invariant i3: c == 1 ==> c == 0;\nloop invariant i4: c > n ==> c > n + 1;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\nloop invariant (c <= n || c >= n);\nloop invariant (c == n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\nloop invariant (c != n || c > n);\nloop invariant (c != n || c >= n);\nloop invariant (c != n || c <= n);\nloop invariant (c != n || c < n);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c <= n;\nloop invariant i2: 0 <= n;\nloop invariant i3: (c <= n || c >= n);\nloop invariant i4: (c == n || c < n);\nloop invariant i5: (c != n || c > n);\nloop invariant i6: (c != n || c <= n);\nloop invariant i7: (c != n || c < n);\nloop invariant i8: (c != n || c >= n);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 24,
                "annotations": "```\n/*@\nloop invariant c <= 1;\nloop invariant c >= 0;\nloop invariant unknown() => c >= 0;\nloop invariant unknown() => c <= 1;\nloop invariant !unknown() => c >= 0;\nloop invariant !unknown() => c <= 1;\nloop invariant c == n ==> c >= 0;\nloop invariant c == n ==> c <= n;\nloop invariant c != n ==> c >= 0;\nloop invariant c != n ==> c <= n;\nloop invariant c != n ==> !(c > n);\nloop invariant c != n ==> !(unknown() && (c > n));\nloop invariant c != n ==> !(!unknown() && (c == n));\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)));\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: c >= 0;\n\n\n\n\nloop invariant i7: c == n ==> c >= 0;\nloop invariant i8: c == n ==> c <= n;\nloop invariant i9: c != n ==> c >= 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 5,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 1 <= v1 <= n;\nloop invariant 1 <= v2 <= n;\nloop invariant 1 <= v3 <= n;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\nloop invariant v3 >= 1;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\nloop invariant v3 >= 1;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\nloop invariant v3 >= 1;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\nloop invariant v3 >= 1;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\nloop invariant v3 >= 1;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\nloop invariant v3 >= 1;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\nloop invariant v3 >= 1;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\nloop invariant v3 >= 1;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\nloop invariant v3 >= 1;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\nloop invariant v3 >= 1;\nloop invariant v1 == v3;\nloop invariant v2 == v3;\nloop invariant c == v1;\nloop invariant c == v2;\nloop invariant c <= n;\nloop invariant c >= 1;\nloop invariant v1 <= n;\nloop invariant v1 >= 1;\nloop invariant v2 <= n;\nloop invariant v2 >= 1;\nloop invariant v3 <= n;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            },
            {
                "num_solver_calls": 0,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant c >= n ==> c == n + 1;\nloop invariant c == n ==> c == 1;\nloop invariant c <= n ==> c <= n + 1;\nloop invariant c >= 0 ==> c <= n + 1;\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: 0 <= c <= n;\nloop invariant i2: c >= n ==> c == n + 1;\nloop invariant i3: c == n ==> c == 1;\nloop invariant i4: c <= n ==> c <= n + 1;\nloop invariant i5: c >= 0 ==> c <= n + 1;\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": true
            },
            {
                "num_solver_calls": 2,
                "annotations": "```\n/*@\nloop invariant 0 <= c <= n;\nloop invariant 0 <= n;\nloop invariant (c == n) ==> (c >= 0);\n*/\n```",
                "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\n\nloop invariant i2: 0 <= n;\nloop invariant i3: (c == n) ==> (c >= 0);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
                "checker_output_after_prune": false
            }
        ],
        "checker_output_for_combined_annotations": false,
        "checker_message_for_combined_annotations": "Annotation error on line 156: unexpected token ')'",
        "code_with_combined_annotations": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: c >= 0;\nloop invariant i2: (c <= n);\nloop invariant i3: c <= n;\nloop invariant i4: 0 <= c <= n;\nloop invariant i5: (c == n ==> c == 1);\nloop invariant i6: (c == 1 ==> c == 0);\nloop invariant i7: (c > n ==> c == n + 1);\nloop invariant i8: (c == n + 1 ==> c == n);\nloop invariant i9: (c == n ==> c == n - 1);\nloop invariant i10: (c == n - 1 ==> c == n);\nloop invariant i11: (c == n ==> c == n - 2);\nloop invariant i12: (c == n - 2 ==> c == n);\nloop invariant i13: (c == n ==> c == n - 3);\nloop invariant i14: (c == n - 3 ==> c == n);\nloop invariant i15: (c == n ==> c == n - 4);\nloop invariant i16: (c == n - 4 ==> c == n);\nloop invariant i17: (c == n ==> c == n - 5);\nloop invariant i18: (c == n - 5 ==> c == n);\nloop invariant i19: (c == n ==> c == n - 6);\nloop invariant i20: (c == n - 6 ==> c == n);\nloop invariant i21: (c == n ==> c == n - 7);\nloop invariant i22: (c == n - 7 ==> c == n);\nloop invariant i23: (c == n ==> c == n - 8);\nloop invariant i24: (c == n - 8 ==> c == n);\nloop invariant i25: (c == n ==> c == n - 9);\nloop invariant i26: (c == n - 9 ==> c == n);\nloop invariant i27: (c == n ==> c == n - 10);\nloop invariant i28: (c == n - 10 ==> c == n);\nloop invariant i29: (c == n ==> c == n - 11);\nloop invariant i30: (c == n - 11 ==> c == n);\nloop invariant i31: (c == n ==> c == n - 12);\nloop invariant i32: (c == n - 12 ==> c == n);\nloop invariant i33: (c == n ==> c == n - 13);\nloop invariant i34: (c == n - 13 ==> c == n);\nloop invariant i35: (c == n ==> c == n - 14);\nloop invariant i36: (c == n - 14 ==> c == n);\nloop invariant i37: (c == n ==> c == n - 15);\nloop invariant i38: (c == n - 15 ==> c == n);\nloop invariant i39: (c == n ==> c == n - 16);\nloop invariant i40: (c == n - 16 ==> c == n);\nloop invariant i41: (c == n ==> c == n - 17);\nloop invariant i42: (c == n - 17 ==> c == n);\nloop invariant i43: (c == n ==> c == n - 18);\nloop invariant i44: (c == n - 18 ==> c == n);\nloop invariant i45: (c == n ==> c == n - 19);\nloop invariant i46: (c == n - 19 ==> c == n);\nloop invariant i47: (c == n ==> c == n - 20);\nloop invariant i48: (c == n - 20 ==> c == n);\nloop invariant i49: (c == n ==> c == n - 21);\nloop invariant i50: (c == n - 21 ==> c == n);\nloop invariant i51: (c == n ==> c == n - 22);\nloop invariant i52: (c == n - 22 ==> c == n);\nloop invariant i53: (c == n ==> c == n - 23);\nloop invariant i54: (c == n - 23 ==> c == n);\nloop invariant i55: (c == n ==> c == n - 24);\nloop invariant i56: (c == n - 24 ==> c == n);\nloop invariant i57: (c == n ==> c == n - 25);\nloop invariant i58: (c == n - 25 ==> c == n);\nloop invariant i59: (c == n ==> c == n - 26);\nloop invariant i60: (c == n - 26 ==> c == n);\nloop invariant i61: (c == n ==> c == n - 27);\nloop invariant i62: (c == n - 27 ==> c == n);\nloop invariant i63: (c == n ==> c == n - 28);\nloop invariant i64: (c == n - 28 ==> c == n);\nloop invariant i65: (c == n ==> c == n - 29);\nloop invariant i66: (c == n - 29 ==> c == n);\nloop invariant i67: (c == n ==> c == n - 30);\nloop invariant i68: (c == n - 30 ==> c == n);\nloop invariant i69: (c == n ==> c == n - 31);\nloop invariant i70: (c == n - 31 ==> c == n);\nloop invariant i71: (c == n ==> c == n - 32);\nloop invariant i72: (c != n ==> c >= 0);\nloop invariant i73: (c != n ==> c <= n);\nloop invariant i74: (c != n ==> c >=0);\nloop invariant i75: c != n ==> (c == 0 ==> n == 0);\nloop invariant i76: (c != n ==> c >= 0 ==> c <= n);\nloop invariant i77: (c != n ==> c == 1 ==> n == 1);\nloop invariant i78: (c != n ==> c == 0 ==> n == 0);\nloop invariant i79: c >= 1;\nloop invariant i80: c <= 2;\nloop invariant i81: c == 1 ==> n == 0;\nloop invariant i82: c == 2 ==> n == 1;\nloop invariant i83: c >= 1 ==> n >= 0;\nloop invariant i84: c <= 2 ==> n <= 1;\nloop invariant i85: c >= 1 ==> c == 1 ==> n == 0;\nloop invariant i86: c >= 1 ==> c == 2 ==> n == 1;\nloop invariant i87: c <= 2 ==> c >= 1 ==> n >= 0;\nloop invariant i88: c <= 2 ==> c >= 1 ==> n <= 1;\nloop invariant i89: c >= 1 ==> c == 1 ==> n == 0 ==> c >= 1;\nloop invariant i90: c >= 1 ==> c == 1 ==> n == 0 ==> c <= 2;\nloop invariant i91: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1;\nloop invariant i92: c >= 1 ==> c == 1 ==> n == 0 ==> n == 0;\nloop invariant i93: c >= 1 ==> c == 1 ==> n == 0 ==> n >= 0;\nloop invariant i94: c >= 1 ==> c == 1 ==> n == 0 ==> n <= 0;\nloop invariant i95: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0;\nloop invariant i96: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0;\nloop invariant i97: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0;\nloop invariant i98: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c >= 1;\nloop invariant i99: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c >= 1;\nloop invariant i100: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c >= 1;\nloop invariant i101: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c <= 2;\nloop invariant i102: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c <= 2;\nloop invariant i103: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c <= 2;\nloop invariant i104: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1;\nloop invariant i105: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c == 1;\nloop invariant i106: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c == 1;\nloop invariant i107: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0;\nloop invariant i108: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c == 1 ==> n == 0;\nloop invariant i109: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c == 1 ==> n == 0;\nloop invariant i110: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0;\nloop invariant i111: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c == 1 ==> n >= 0;\nloop invariant i112: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c == 1 ==> n <= 0;\nloop invariant i113: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1;\nloop invariant i114: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c == 1;\nloop invariant i115: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c == 1;\nloop invariant i116: 0 < c <= n;\nloop invariant i117: 0 <= n;\nloop invariant i118: (c > n) ==> (v1 == 1);\nloop invariant i119: (c == n) ==> (v2 == 1);\nloop invariant i120: (c != n) ==> (v3 == 1);\nloop invariant i121: (c != n) ==> ((c >= 0) && (c <= n));\nloop invariant i122: 0 <= c <= n; loop invariant c <= n; loop invariant c == n ==> c == 1; loop invariant c != n ==> c >= 0; loop invariant c != n ==> c <= n; loop invariant c != n ==> c < n; loop invariant c != n ==> c > 0; loop invariant c != n ==> c < n; loop invariant c != n ==> c == n; loop invariant c != n ==> c != n; loop invariant c != n ==> c != n; loop invariant c != n ==> c != n; loop invariant c != n ==> c != n;\nloop invariant i123: (c == n) ==> (v1 == v2) ==> (v2 == v3);\nloop invariant i124: (v1 == v2) ==> (v2 == v3);\nloop invariant i125: 0 <= c <= n; loop invariant n >= 0; loop invariant c >= 0; loop invariant c <= n;\nloop invariant i126: c == n ==> c == 1;\nloop invariant i127: c == 1 ==> c == 0;\nloop invariant i128: c > n ==> c > n + 1;\nloop invariant i129: (c <= n || c >= n);\nloop invariant i130: (c == n || c < n);\nloop invariant i131: (c != n || c > n);\nloop invariant i132: (c != n || c <= n);\nloop invariant i133: (c != n || c < n);\nloop invariant i134: (c != n || c >= n);\nloop invariant i135: c <= 1;\nloop invariant i136: unknown() => c >= 0;\nloop invariant i137: unknown() => c <= 1;\nloop invariant i138: !unknown() => c >= 0;\nloop invariant i139: !unknown() => c <= 1;\nloop invariant i140: c == n ==> c >= 0;\nloop invariant i141: c == n ==> c <= n;\nloop invariant i142: c != n ==> c >= 0;\nloop invariant i143: c != n ==> c <= n;\nloop invariant i144: c != n ==> !(c > n);\nloop invariant i145: c != n ==> !(unknown() && (c > n));\nloop invariant i146: c != n ==> !(!unknown() && (c == n));\nloop invariant i147: c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)));\nloop invariant i148: c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown());\nloop invariant i149: c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown());\nloop invariant i150: c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown());\nloop invariant i151: c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant i152: c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant i153: c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant i154: c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant i155: c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant i156: c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant i157: c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant i158: c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant i159: c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant i160: c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant i161: c != n ==> !(unknown() && (c > n) && !(!unknown() && (c == n)) && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown() && !unknown());\nloop invariant i162: 1 <= v1 <= n;\nloop invariant i163: 1 <= v2 <= n;\nloop invariant i164: 1 <= v3 <= n;\nloop invariant i165: v1 == v3;\nloop invariant i166: v2 == v3;\nloop invariant i167: c == v1;\nloop invariant i168: c == v2;\nloop invariant i169: v1 <= n;\nloop invariant i170: v1 >= 1;\nloop invariant i171: v2 <= n;\nloop invariant i172: v2 >= 1;\nloop invariant i173: v3 <= n;\nloop invariant i174: v3 >= 1;\nloop invariant i175: c >= n ==> c == n + 1;\nloop invariant i176: c <= n ==> c <= n + 1;\nloop invariant i177: c >= 0 ==> c <= n + 1;\nloop invariant i178: (c == n) ==> (c >= 0);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
        "combined_annotation_num_solver_calls": 28,
        "code_after_prune": "#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\n#include <stdlib.h>\n#define assume(e) if(!(e)) exit(-1);\nextern int unknown(void);\n\nint main() {\n  \n  int c;\n  int n;\n  int v1;\n  int v2;\n  int v3;\n  \n  (c = 0);\n  assume((n > 0));\n  \n  /*@\nloop invariant i1: c >= 0;\nloop invariant i2: (c <= n);\nloop invariant i3: c <= n;\nloop invariant i4: 0 <= c <= n;\nloop invariant i5: (c == n ==> c == 1);\nloop invariant i6: (c == 1 ==> c == 0);\nloop invariant i7: (c > n ==> c == n + 1);\nloop invariant i8: (c == n + 1 ==> c == n);\nloop invariant i9: (c == n ==> c == n - 1);\n\nloop invariant i11: (c == n ==> c == n - 2);\n\nloop invariant i13: (c == n ==> c == n - 3);\n\nloop invariant i15: (c == n ==> c == n - 4);\n\nloop invariant i17: (c == n ==> c == n - 5);\n\nloop invariant i19: (c == n ==> c == n - 6);\n\nloop invariant i21: (c == n ==> c == n - 7);\n\nloop invariant i23: (c == n ==> c == n - 8);\n\nloop invariant i25: (c == n ==> c == n - 9);\n\nloop invariant i27: (c == n ==> c == n - 10);\n\nloop invariant i29: (c == n ==> c == n - 11);\n\nloop invariant i31: (c == n ==> c == n - 12);\n\nloop invariant i33: (c == n ==> c == n - 13);\n\nloop invariant i35: (c == n ==> c == n - 14);\n\nloop invariant i37: (c == n ==> c == n - 15);\n\nloop invariant i39: (c == n ==> c == n - 16);\n\nloop invariant i41: (c == n ==> c == n - 17);\n\nloop invariant i43: (c == n ==> c == n - 18);\n\nloop invariant i45: (c == n ==> c == n - 19);\n\nloop invariant i47: (c == n ==> c == n - 20);\n\nloop invariant i49: (c == n ==> c == n - 21);\n\nloop invariant i51: (c == n ==> c == n - 22);\n\nloop invariant i53: (c == n ==> c == n - 23);\n\nloop invariant i55: (c == n ==> c == n - 24);\n\nloop invariant i57: (c == n ==> c == n - 25);\n\nloop invariant i59: (c == n ==> c == n - 26);\n\nloop invariant i61: (c == n ==> c == n - 27);\n\nloop invariant i63: (c == n ==> c == n - 28);\n\nloop invariant i65: (c == n ==> c == n - 29);\n\nloop invariant i67: (c == n ==> c == n - 30);\n\nloop invariant i69: (c == n ==> c == n - 31);\n\nloop invariant i71: (c == n ==> c == n - 32);\nloop invariant i72: (c != n ==> c >= 0);\nloop invariant i73: (c != n ==> c <= n);\nloop invariant i74: (c != n ==> c >=0);\n\nloop invariant i76: (c != n ==> c >= 0 ==> c <= n);\nloop invariant i77: (c != n ==> c == 1 ==> n == 1);\n\n\nloop invariant i80: c <= 2;\nloop invariant i81: c == 1 ==> n == 0;\nloop invariant i82: c == 2 ==> n == 1;\nloop invariant i83: c >= 1 ==> n >= 0;\n\nloop invariant i85: c >= 1 ==> c == 1 ==> n == 0;\nloop invariant i86: c >= 1 ==> c == 2 ==> n == 1;\nloop invariant i87: c <= 2 ==> c >= 1 ==> n >= 0;\nloop invariant i88: c <= 2 ==> c >= 1 ==> n <= 1;\nloop invariant i89: c >= 1 ==> c == 1 ==> n == 0 ==> c >= 1;\nloop invariant i90: c >= 1 ==> c == 1 ==> n == 0 ==> c <= 2;\nloop invariant i91: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1;\nloop invariant i92: c >= 1 ==> c == 1 ==> n == 0 ==> n == 0;\nloop invariant i93: c >= 1 ==> c == 1 ==> n == 0 ==> n >= 0;\nloop invariant i94: c >= 1 ==> c == 1 ==> n == 0 ==> n <= 0;\nloop invariant i95: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0;\nloop invariant i96: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0;\nloop invariant i97: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0;\nloop invariant i98: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c >= 1;\nloop invariant i99: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c >= 1;\nloop invariant i100: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c >= 1;\nloop invariant i101: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c <= 2;\nloop invariant i102: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c <= 2;\nloop invariant i103: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c <= 2;\nloop invariant i104: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1;\nloop invariant i105: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c == 1;\nloop invariant i106: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c == 1;\nloop invariant i107: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0;\nloop invariant i108: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c == 1 ==> n == 0;\nloop invariant i109: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c == 1 ==> n == 0;\nloop invariant i110: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0;\nloop invariant i111: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c == 1 ==> n >= 0;\nloop invariant i112: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c == 1 ==> n <= 0;\nloop invariant i113: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1;\nloop invariant i114: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n >= 0 ==> c == 1;\nloop invariant i115: c >= 1 ==> c == 1 ==> n == 0 ==> c == 1 ==> n == 0 ==> c == 1 ==> n <= 0 ==> c == 1;\n\nloop invariant i117: 0 <= n;\nloop invariant i118: (c > n) ==> (v1 == 1);\nloop invariant i119: (c == n) ==> (v2 == 1);\n\nloop invariant i121: (c != n) ==> ((c >= 0) && (c <= n));\nloop invariant i122: 0 <= c <= n; loop invariant c <= n; loop invariant c == n ==> c == 1; loop invariant c != n ==> c >= 0; loop invariant c != n ==> c <= n; loop invariant c != n ==> c < n; loop invariant c != n ==> c > 0; loop invariant c != n ==> c < n; loop invariant c != n ==> c == n; loop invariant c != n ==> c != n; loop invariant c != n ==> c != n; loop invariant c != n ==> c != n; loop invariant c != n ==> c != n;\nloop invariant i123: (c == n) ==> (v1 == v2) ==> (v2 == v3);\nloop invariant i124: (v1 == v2) ==> (v2 == v3);\nloop invariant i125: 0 <= c <= n; loop invariant n >= 0; loop invariant c >= 0; loop invariant c <= n;\nloop invariant i126: c == n ==> c == 1;\nloop invariant i127: c == 1 ==> c == 0;\nloop invariant i128: c > n ==> c > n + 1;\nloop invariant i129: (c <= n || c >= n);\nloop invariant i130: (c == n || c < n);\nloop invariant i131: (c != n || c > n);\nloop invariant i132: (c != n || c <= n);\nloop invariant i133: (c != n || c < n);\nloop invariant i134: (c != n || c >= n);\nloop invariant i135: c <= 1;\n\n\n\n\nloop invariant i140: c == n ==> c >= 0;\nloop invariant i141: c == n ==> c <= n;\nloop invariant i142: c != n ==> c >= 0;\nloop invariant i143: c != n ==> c <= n;\nloop invariant i144: c != n ==> !(c > n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nloop invariant i162: 1 <= v1 <= n;\nloop invariant i163: 1 <= v2 <= n;\nloop invariant i164: 1 <= v3 <= n;\nloop invariant i165: v1 == v3;\nloop invariant i166: v2 == v3;\nloop invariant i167: c == v1;\nloop invariant i168: c == v2;\nloop invariant i169: v1 <= n;\nloop invariant i170: v1 >= 1;\nloop invariant i171: v2 <= n;\nloop invariant i172: v2 >= 1;\nloop invariant i173: v3 <= n;\nloop invariant i174: v3 >= 1;\nloop invariant i175: c >= n ==> c == n + 1;\nloop invariant i176: c <= n ==> c <= n + 1;\nloop invariant i177: c >= 0 ==> c <= n + 1;\nloop invariant i178: (c == n) ==> (c >= 0);\n*/\nwhile (unknown()) {\n    {\n      if ( unknown() ) {\n        if ( (c > n) )\n        {\n        (c  = (c + 1));\n        }\n      } else {\n        if ( (c == n) )\n        {\n        (c  = 1);\n        }\n      }\n\n    }\n\n  }\n  \nif ( (c != n) )\n{;\n//@ assert( (c >= 0) );\n}\n\n}",
        "checker_output_after_prune": false
    },
    "stats": {
        "success": [
            "../dataset/loop_invariants/code2inv/125.c",
            "../dataset/loop_invariants/code2inv/128.c",
            "../dataset/loop_invariants/code2inv/129.c",
            "../dataset/loop_invariants/code2inv/13.c",
            "../dataset/loop_invariants/code2inv/132.c",
            "../dataset/loop_invariants/code2inv/133.c",
            "../dataset/loop_invariants/code2inv/14.c",
            "../dataset/loop_invariants/code2inv/15.c",
            "../dataset/loop_invariants/code2inv/16.c",
            "../dataset/loop_invariants/code2inv/18.c",
            "../dataset/loop_invariants/code2inv/19.c",
            "../dataset/loop_invariants/code2inv/2.c",
            "../dataset/loop_invariants/code2inv/20.c",
            "../dataset/loop_invariants/code2inv/21.c",
            "../dataset/loop_invariants/code2inv/22.c",
            "../dataset/loop_invariants/code2inv/23.c",
            "../dataset/loop_invariants/code2inv/25.c",
            "../dataset/loop_invariants/code2inv/30.c",
            "../dataset/loop_invariants/code2inv/35.c",
            "../dataset/loop_invariants/code2inv/36.c",
            "../dataset/loop_invariants/code2inv/37.c",
            "../dataset/loop_invariants/code2inv/38.c",
            "../dataset/loop_invariants/code2inv/39.c",
            "../dataset/loop_invariants/code2inv/4.c",
            "../dataset/loop_invariants/code2inv/40.c",
            "../dataset/loop_invariants/code2inv/41.c",
            "../dataset/loop_invariants/code2inv/42.c",
            "../dataset/loop_invariants/code2inv/43.c",
            "../dataset/loop_invariants/code2inv/44.c",
            "../dataset/loop_invariants/code2inv/45.c",
            "../dataset/loop_invariants/code2inv/46.c",
            "../dataset/loop_invariants/code2inv/47.c",
            "../dataset/loop_invariants/code2inv/48.c",
            "../dataset/loop_invariants/code2inv/49.c",
            "../dataset/loop_invariants/code2inv/50.c",
            "../dataset/loop_invariants/code2inv/51.c",
            "../dataset/loop_invariants/code2inv/52.c",
            "../dataset/loop_invariants/code2inv/53.c"
        ],
        "failure": [
            "../dataset/loop_invariants/code2inv/124.c",
            "../dataset/loop_invariants/code2inv/126.c",
            "../dataset/loop_invariants/code2inv/127.c",
            "../dataset/loop_invariants/code2inv/131.c",
            "../dataset/loop_invariants/code2inv/29.c",
            "../dataset/loop_invariants/code2inv/3.c",
            "../dataset/loop_invariants/code2inv/34.c",
            "../dataset/loop_invariants/code2inv/5.c"
        ],
        "skipped": [],
        "total": 46,
        "success_count": 38,
        "failure_count": 8,
        "success_rate": 0.8260869565217391
    }
}